; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11352 () Bool)

(assert start!11352)

(declare-fun b!93907 () Bool)

(declare-fun b_free!2389 () Bool)

(declare-fun b_next!2389 () Bool)

(assert (=> b!93907 (= b_free!2389 (not b_next!2389))))

(declare-fun tp!9436 () Bool)

(declare-fun b_and!5725 () Bool)

(assert (=> b!93907 (= tp!9436 b_and!5725)))

(declare-fun b!93913 () Bool)

(declare-fun b_free!2391 () Bool)

(declare-fun b_next!2391 () Bool)

(assert (=> b!93913 (= b_free!2391 (not b_next!2391))))

(declare-fun tp!9434 () Bool)

(declare-fun b_and!5727 () Bool)

(assert (=> b!93913 (= tp!9434 b_and!5727)))

(declare-fun b!93903 () Bool)

(declare-fun e!61306 () Bool)

(declare-fun e!61309 () Bool)

(declare-fun mapRes!3669 () Bool)

(assert (=> b!93903 (= e!61306 (and e!61309 mapRes!3669))))

(declare-fun condMapEmpty!3669 () Bool)

(declare-datatypes ((V!3129 0))(
  ( (V!3130 (val!1350 Int)) )
))
(declare-datatypes ((array!4183 0))(
  ( (array!4184 (arr!1988 (Array (_ BitVec 32) (_ BitVec 64))) (size!2236 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!962 0))(
  ( (ValueCellFull!962 (v!2763 V!3129)) (EmptyCell!962) )
))
(declare-datatypes ((array!4185 0))(
  ( (array!4186 (arr!1989 (Array (_ BitVec 32) ValueCell!962)) (size!2237 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!832 0))(
  ( (LongMapFixedSize!833 (defaultEntry!2435 Int) (mask!6510 (_ BitVec 32)) (extraKeys!2264 (_ BitVec 32)) (zeroValue!2322 V!3129) (minValue!2322 V!3129) (_size!465 (_ BitVec 32)) (_keys!4117 array!4183) (_values!2418 array!4185) (_vacant!465 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!638 0))(
  ( (Cell!639 (v!2764 LongMapFixedSize!832)) )
))
(declare-datatypes ((LongMap!638 0))(
  ( (LongMap!639 (underlying!330 Cell!638)) )
))
(declare-fun thiss!992 () LongMap!638)

(declare-fun mapDefault!3669 () ValueCell!962)

(assert (=> b!93903 (= condMapEmpty!3669 (= (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3669)))))

(declare-fun b!93904 () Bool)

(declare-fun res!47592 () Bool)

(declare-fun e!61315 () Bool)

(assert (=> b!93904 (=> (not res!47592) (not e!61315))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!93904 (= res!47592 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun mapIsEmpty!3669 () Bool)

(declare-fun mapRes!3670 () Bool)

(assert (=> mapIsEmpty!3669 mapRes!3670))

(declare-fun b!93905 () Bool)

(declare-fun e!61316 () Bool)

(declare-fun e!61311 () Bool)

(assert (=> b!93905 (= e!61316 e!61311)))

(declare-fun b!93906 () Bool)

(declare-datatypes ((Unit!2786 0))(
  ( (Unit!2787) )
))
(declare-fun e!61317 () Unit!2786)

(declare-fun Unit!2788 () Unit!2786)

(assert (=> b!93906 (= e!61317 Unit!2788)))

(declare-fun tp_is_empty!2611 () Bool)

(declare-fun array_inv!1225 (array!4183) Bool)

(declare-fun array_inv!1226 (array!4185) Bool)

(assert (=> b!93907 (= e!61311 (and tp!9436 tp_is_empty!2611 (array_inv!1225 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (array_inv!1226 (_values!2418 (v!2764 (underlying!330 thiss!992)))) e!61306))))

(declare-fun b!93908 () Bool)

(declare-fun res!47591 () Bool)

(declare-fun e!61319 () Bool)

(assert (=> b!93908 (=> (not res!47591) (not e!61319))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!93908 (= res!47591 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!93909 () Bool)

(declare-fun e!61305 () Bool)

(assert (=> b!93909 (= e!61305 tp_is_empty!2611)))

(declare-fun b!93910 () Bool)

(declare-fun e!61318 () Bool)

(assert (=> b!93910 (= e!61318 e!61316)))

(declare-fun b!93911 () Bool)

(declare-fun res!47587 () Bool)

(assert (=> b!93911 (=> (not res!47587) (not e!61315))))

(declare-fun newMap!16 () LongMapFixedSize!832)

(assert (=> b!93911 (= res!47587 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6510 newMap!16)) (_size!465 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!93912 () Bool)

(declare-fun e!61313 () Bool)

(assert (=> b!93912 (= e!61313 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3669 () Bool)

(declare-fun tp!9435 () Bool)

(assert (=> mapNonEmpty!3669 (= mapRes!3670 (and tp!9435 e!61313))))

(declare-fun mapKey!3670 () (_ BitVec 32))

(declare-fun mapRest!3670 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapValue!3670 () ValueCell!962)

(assert (=> mapNonEmpty!3669 (= (arr!1989 (_values!2418 newMap!16)) (store mapRest!3670 mapKey!3670 mapValue!3670))))

(declare-fun e!61304 () Bool)

(declare-fun e!61314 () Bool)

(assert (=> b!93913 (= e!61314 (and tp!9434 tp_is_empty!2611 (array_inv!1225 (_keys!4117 newMap!16)) (array_inv!1226 (_values!2418 newMap!16)) e!61304))))

(declare-fun b!93914 () Bool)

(declare-fun res!47588 () Bool)

(assert (=> b!93914 (=> (not res!47588) (not e!61315))))

(declare-fun valid!384 (LongMapFixedSize!832) Bool)

(assert (=> b!93914 (= res!47588 (valid!384 newMap!16))))

(declare-fun res!47590 () Bool)

(assert (=> start!11352 (=> (not res!47590) (not e!61315))))

(declare-fun valid!385 (LongMap!638) Bool)

(assert (=> start!11352 (= res!47590 (valid!385 thiss!992))))

(assert (=> start!11352 e!61315))

(assert (=> start!11352 e!61318))

(assert (=> start!11352 true))

(assert (=> start!11352 e!61314))

(declare-fun b!93915 () Bool)

(assert (=> b!93915 (= e!61319 (not (= (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6510 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!93916 () Bool)

(declare-fun e!61307 () Bool)

(assert (=> b!93916 (= e!61307 tp_is_empty!2611)))

(declare-fun b!93917 () Bool)

(assert (=> b!93917 (= e!61309 tp_is_empty!2611)))

(declare-fun mapIsEmpty!3670 () Bool)

(assert (=> mapIsEmpty!3670 mapRes!3669))

(declare-fun b!93918 () Bool)

(assert (=> b!93918 (= e!61304 (and e!61305 mapRes!3670))))

(declare-fun condMapEmpty!3670 () Bool)

(declare-fun mapDefault!3670 () ValueCell!962)

(assert (=> b!93918 (= condMapEmpty!3670 (= (arr!1989 (_values!2418 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3670)))))

(declare-fun b!93919 () Bool)

(declare-fun e!61308 () Bool)

(assert (=> b!93919 (= e!61308 e!61319)))

(declare-fun res!47593 () Bool)

(assert (=> b!93919 (=> (not res!47593) (not e!61319))))

(declare-datatypes ((tuple2!2280 0))(
  ( (tuple2!2281 (_1!1151 Bool) (_2!1151 LongMapFixedSize!832)) )
))
(declare-fun lt!46499 () tuple2!2280)

(assert (=> b!93919 (= res!47593 (and (_1!1151 lt!46499) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!46504 () Unit!2786)

(assert (=> b!93919 (= lt!46504 e!61317)))

(declare-datatypes ((tuple2!2282 0))(
  ( (tuple2!2283 (_1!1152 (_ BitVec 64)) (_2!1152 V!3129)) )
))
(declare-datatypes ((List!1554 0))(
  ( (Nil!1551) (Cons!1550 (h!2142 tuple2!2282) (t!5448 List!1554)) )
))
(declare-datatypes ((ListLongMap!1489 0))(
  ( (ListLongMap!1490 (toList!760 List!1554)) )
))
(declare-fun lt!46500 () ListLongMap!1489)

(declare-fun c!15647 () Bool)

(declare-fun contains!780 (ListLongMap!1489 (_ BitVec 64)) Bool)

(assert (=> b!93919 (= c!15647 (contains!780 lt!46500 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun update!141 (LongMapFixedSize!832 (_ BitVec 64) V!3129) tuple2!2280)

(declare-fun get!1272 (ValueCell!962 V!3129) V!3129)

(declare-fun dynLambda!366 (Int (_ BitVec 64)) V!3129)

(assert (=> b!93919 (= lt!46499 (update!141 newMap!16 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun mapNonEmpty!3670 () Bool)

(declare-fun tp!9433 () Bool)

(assert (=> mapNonEmpty!3670 (= mapRes!3669 (and tp!9433 e!61307))))

(declare-fun mapValue!3669 () ValueCell!962)

(declare-fun mapKey!3669 () (_ BitVec 32))

(declare-fun mapRest!3669 () (Array (_ BitVec 32) ValueCell!962))

(assert (=> mapNonEmpty!3670 (= (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (store mapRest!3669 mapKey!3669 mapValue!3669))))

(declare-fun b!93920 () Bool)

(declare-fun Unit!2789 () Unit!2786)

(assert (=> b!93920 (= e!61317 Unit!2789)))

(declare-fun lt!46503 () Unit!2786)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!81 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2786)

(assert (=> b!93920 (= lt!46503 (lemmaListMapContainsThenArrayContainsFrom!81 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4183 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!93920 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!46505 () Unit!2786)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4183 (_ BitVec 32) (_ BitVec 32)) Unit!2786)

(assert (=> b!93920 (= lt!46505 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1555 0))(
  ( (Nil!1552) (Cons!1551 (h!2143 (_ BitVec 64)) (t!5449 List!1555)) )
))
(declare-fun arrayNoDuplicates!0 (array!4183 (_ BitVec 32) List!1555) Bool)

(assert (=> b!93920 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) from!355 Nil!1552)))

(declare-fun lt!46502 () Unit!2786)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4183 (_ BitVec 32) (_ BitVec 64) List!1555) Unit!2786)

(assert (=> b!93920 (= lt!46502 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552)))))

(assert (=> b!93920 false))

(declare-fun b!93921 () Bool)

(assert (=> b!93921 (= e!61315 e!61308)))

(declare-fun res!47589 () Bool)

(assert (=> b!93921 (=> (not res!47589) (not e!61308))))

(declare-fun lt!46501 () ListLongMap!1489)

(assert (=> b!93921 (= res!47589 (and (= lt!46501 lt!46500) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1242 (LongMapFixedSize!832) ListLongMap!1489)

(assert (=> b!93921 (= lt!46500 (map!1242 newMap!16))))

(declare-fun getCurrentListMap!450 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) ListLongMap!1489)

(assert (=> b!93921 (= lt!46501 (getCurrentListMap!450 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(assert (= (and start!11352 res!47590) b!93904))

(assert (= (and b!93904 res!47592) b!93914))

(assert (= (and b!93914 res!47588) b!93911))

(assert (= (and b!93911 res!47587) b!93921))

(assert (= (and b!93921 res!47589) b!93919))

(assert (= (and b!93919 c!15647) b!93920))

(assert (= (and b!93919 (not c!15647)) b!93906))

(assert (= (and b!93919 res!47593) b!93908))

(assert (= (and b!93908 res!47591) b!93915))

(assert (= (and b!93903 condMapEmpty!3669) mapIsEmpty!3670))

(assert (= (and b!93903 (not condMapEmpty!3669)) mapNonEmpty!3670))

(get-info :version)

(assert (= (and mapNonEmpty!3670 ((_ is ValueCellFull!962) mapValue!3669)) b!93916))

(assert (= (and b!93903 ((_ is ValueCellFull!962) mapDefault!3669)) b!93917))

(assert (= b!93907 b!93903))

(assert (= b!93905 b!93907))

(assert (= b!93910 b!93905))

(assert (= start!11352 b!93910))

(assert (= (and b!93918 condMapEmpty!3670) mapIsEmpty!3669))

(assert (= (and b!93918 (not condMapEmpty!3670)) mapNonEmpty!3669))

(assert (= (and mapNonEmpty!3669 ((_ is ValueCellFull!962) mapValue!3670)) b!93912))

(assert (= (and b!93918 ((_ is ValueCellFull!962) mapDefault!3670)) b!93909))

(assert (= b!93913 b!93918))

(assert (= start!11352 b!93913))

(declare-fun b_lambda!4139 () Bool)

(assert (=> (not b_lambda!4139) (not b!93919)))

(declare-fun t!5445 () Bool)

(declare-fun tb!1861 () Bool)

(assert (=> (and b!93907 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) t!5445) tb!1861))

(declare-fun result!3177 () Bool)

(assert (=> tb!1861 (= result!3177 tp_is_empty!2611)))

(assert (=> b!93919 t!5445))

(declare-fun b_and!5729 () Bool)

(assert (= b_and!5725 (and (=> t!5445 result!3177) b_and!5729)))

(declare-fun t!5447 () Bool)

(declare-fun tb!1863 () Bool)

(assert (=> (and b!93913 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) t!5447) tb!1863))

(declare-fun result!3181 () Bool)

(assert (= result!3181 result!3177))

(assert (=> b!93919 t!5447))

(declare-fun b_and!5731 () Bool)

(assert (= b_and!5727 (and (=> t!5447 result!3181) b_and!5731)))

(declare-fun m!101131 () Bool)

(assert (=> b!93913 m!101131))

(declare-fun m!101133 () Bool)

(assert (=> b!93913 m!101133))

(declare-fun m!101135 () Bool)

(assert (=> b!93914 m!101135))

(declare-fun m!101137 () Bool)

(assert (=> mapNonEmpty!3670 m!101137))

(declare-fun m!101139 () Bool)

(assert (=> b!93920 m!101139))

(declare-fun m!101141 () Bool)

(assert (=> b!93920 m!101141))

(declare-fun m!101143 () Bool)

(assert (=> b!93920 m!101143))

(declare-fun m!101145 () Bool)

(assert (=> b!93920 m!101145))

(assert (=> b!93920 m!101143))

(assert (=> b!93920 m!101143))

(declare-fun m!101147 () Bool)

(assert (=> b!93920 m!101147))

(assert (=> b!93920 m!101143))

(declare-fun m!101149 () Bool)

(assert (=> b!93920 m!101149))

(assert (=> b!93921 m!101143))

(declare-fun m!101151 () Bool)

(assert (=> b!93921 m!101151))

(declare-fun m!101153 () Bool)

(assert (=> b!93921 m!101153))

(declare-fun m!101155 () Bool)

(assert (=> mapNonEmpty!3669 m!101155))

(declare-fun m!101157 () Bool)

(assert (=> start!11352 m!101157))

(assert (=> b!93919 m!101143))

(declare-fun m!101159 () Bool)

(assert (=> b!93919 m!101159))

(declare-fun m!101161 () Bool)

(assert (=> b!93919 m!101161))

(declare-fun m!101163 () Bool)

(assert (=> b!93919 m!101163))

(declare-fun m!101165 () Bool)

(assert (=> b!93919 m!101165))

(assert (=> b!93919 m!101143))

(assert (=> b!93919 m!101163))

(assert (=> b!93919 m!101143))

(assert (=> b!93919 m!101165))

(declare-fun m!101167 () Bool)

(assert (=> b!93919 m!101167))

(assert (=> b!93919 m!101161))

(declare-fun m!101169 () Bool)

(assert (=> b!93907 m!101169))

(declare-fun m!101171 () Bool)

(assert (=> b!93907 m!101171))

(declare-fun m!101173 () Bool)

(assert (=> b!93908 m!101173))

(check-sat (not b_next!2391) (not b!93919) (not b!93907) (not b!93914) b_and!5729 (not start!11352) (not b!93908) (not b!93921) (not b!93913) (not b!93920) (not mapNonEmpty!3669) (not b_next!2389) (not b_lambda!4139) (not mapNonEmpty!3670) tp_is_empty!2611 b_and!5731)
(check-sat b_and!5729 b_and!5731 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun b_lambda!4145 () Bool)

(assert (= b_lambda!4139 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4145)))

(check-sat (not b_next!2391) (not b!93919) (not b!93907) (not b!93914) b_and!5729 (not b_lambda!4145) (not start!11352) (not mapNonEmpty!3670) (not b!93908) (not b!93921) (not b!93913) (not b!93920) (not mapNonEmpty!3669) (not b_next!2389) tp_is_empty!2611 b_and!5731)
(check-sat b_and!5729 b_and!5731 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun d!24573 () Bool)

(assert (=> d!24573 (= (array_inv!1225 (_keys!4117 newMap!16)) (bvsge (size!2236 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93913 d!24573))

(declare-fun d!24575 () Bool)

(assert (=> d!24575 (= (array_inv!1226 (_values!2418 newMap!16)) (bvsge (size!2237 (_values!2418 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93913 d!24575))

(declare-fun d!24577 () Bool)

(assert (=> d!24577 (= (valid!385 thiss!992) (valid!384 (v!2764 (underlying!330 thiss!992))))))

(declare-fun bs!3867 () Bool)

(assert (= bs!3867 d!24577))

(declare-fun m!101263 () Bool)

(assert (=> bs!3867 m!101263))

(assert (=> start!11352 d!24577))

(declare-fun d!24579 () Bool)

(assert (=> d!24579 (= (array_inv!1225 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvsge (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93907 d!24579))

(declare-fun d!24581 () Bool)

(assert (=> d!24581 (= (array_inv!1226 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvsge (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93907 d!24581))

(declare-fun d!24583 () Bool)

(assert (=> d!24583 (not (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46550 () Unit!2786)

(declare-fun choose!68 (array!4183 (_ BitVec 32) (_ BitVec 64) List!1555) Unit!2786)

(assert (=> d!24583 (= lt!46550 (choose!68 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552)))))

(assert (=> d!24583 (bvslt (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24583 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552)) lt!46550)))

(declare-fun bs!3868 () Bool)

(assert (= bs!3868 d!24583))

(assert (=> bs!3868 m!101143))

(assert (=> bs!3868 m!101147))

(assert (=> bs!3868 m!101143))

(declare-fun m!101265 () Bool)

(assert (=> bs!3868 m!101265))

(assert (=> b!93920 d!24583))

(declare-fun d!24585 () Bool)

(assert (=> d!24585 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) from!355 Nil!1552)))

(declare-fun lt!46553 () Unit!2786)

(declare-fun choose!39 (array!4183 (_ BitVec 32) (_ BitVec 32)) Unit!2786)

(assert (=> d!24585 (= lt!46553 (choose!39 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!24585 (bvslt (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24585 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355) lt!46553)))

(declare-fun bs!3869 () Bool)

(assert (= bs!3869 d!24585))

(assert (=> bs!3869 m!101141))

(declare-fun m!101267 () Bool)

(assert (=> bs!3869 m!101267))

(assert (=> b!93920 d!24585))

(declare-fun d!24587 () Bool)

(declare-fun res!47640 () Bool)

(declare-fun e!61420 () Bool)

(assert (=> d!24587 (=> res!47640 e!61420)))

(assert (=> d!24587 (= res!47640 (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24587 (= (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!61420)))

(declare-fun b!94046 () Bool)

(declare-fun e!61421 () Bool)

(assert (=> b!94046 (= e!61420 e!61421)))

(declare-fun res!47641 () Bool)

(assert (=> b!94046 (=> (not res!47641) (not e!61421))))

(assert (=> b!94046 (= res!47641 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94047 () Bool)

(assert (=> b!94047 (= e!61421 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!24587 (not res!47640)) b!94046))

(assert (= (and b!94046 res!47641) b!94047))

(declare-fun m!101269 () Bool)

(assert (=> d!24587 m!101269))

(assert (=> b!94047 m!101143))

(declare-fun m!101271 () Bool)

(assert (=> b!94047 m!101271))

(assert (=> b!93920 d!24587))

(declare-fun d!24589 () Bool)

(declare-fun e!61424 () Bool)

(assert (=> d!24589 e!61424))

(declare-fun c!15656 () Bool)

(assert (=> d!24589 (= c!15656 (and (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!46556 () Unit!2786)

(declare-fun choose!566 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2786)

(assert (=> d!24589 (= lt!46556 (choose!566 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(assert (=> d!24589 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992))))))

(assert (=> d!24589 (= (lemmaListMapContainsThenArrayContainsFrom!81 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) lt!46556)))

(declare-fun b!94052 () Bool)

(assert (=> b!94052 (= e!61424 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94053 () Bool)

(assert (=> b!94053 (= e!61424 (ite (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24589 c!15656) b!94052))

(assert (= (and d!24589 (not c!15656)) b!94053))

(assert (=> d!24589 m!101143))

(declare-fun m!101273 () Bool)

(assert (=> d!24589 m!101273))

(assert (=> d!24589 m!101173))

(assert (=> b!94052 m!101143))

(assert (=> b!94052 m!101147))

(assert (=> b!93920 d!24589))

(declare-fun b!94064 () Bool)

(declare-fun e!61434 () Bool)

(declare-fun call!9348 () Bool)

(assert (=> b!94064 (= e!61434 call!9348)))

(declare-fun b!94065 () Bool)

(assert (=> b!94065 (= e!61434 call!9348)))

(declare-fun b!94066 () Bool)

(declare-fun e!61433 () Bool)

(assert (=> b!94066 (= e!61433 e!61434)))

(declare-fun c!15659 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!94066 (= c!15659 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94067 () Bool)

(declare-fun e!61435 () Bool)

(assert (=> b!94067 (= e!61435 e!61433)))

(declare-fun res!47650 () Bool)

(assert (=> b!94067 (=> (not res!47650) (not e!61433))))

(declare-fun e!61436 () Bool)

(assert (=> b!94067 (= res!47650 (not e!61436))))

(declare-fun res!47648 () Bool)

(assert (=> b!94067 (=> (not res!47648) (not e!61436))))

(assert (=> b!94067 (= res!47648 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94068 () Bool)

(declare-fun contains!781 (List!1555 (_ BitVec 64)) Bool)

(assert (=> b!94068 (= e!61436 (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9345 () Bool)

(assert (=> bm!9345 (= call!9348 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)))))

(declare-fun d!24591 () Bool)

(declare-fun res!47649 () Bool)

(assert (=> d!24591 (=> res!47649 e!61435)))

(assert (=> d!24591 (= res!47649 (bvsge from!355 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!24591 (= (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) from!355 Nil!1552) e!61435)))

(assert (= (and d!24591 (not res!47649)) b!94067))

(assert (= (and b!94067 res!47648) b!94068))

(assert (= (and b!94067 res!47650) b!94066))

(assert (= (and b!94066 c!15659) b!94064))

(assert (= (and b!94066 (not c!15659)) b!94065))

(assert (= (or b!94064 b!94065) bm!9345))

(assert (=> b!94066 m!101143))

(assert (=> b!94066 m!101143))

(declare-fun m!101275 () Bool)

(assert (=> b!94066 m!101275))

(assert (=> b!94067 m!101143))

(assert (=> b!94067 m!101143))

(assert (=> b!94067 m!101275))

(assert (=> b!94068 m!101143))

(assert (=> b!94068 m!101143))

(declare-fun m!101277 () Bool)

(assert (=> b!94068 m!101277))

(assert (=> bm!9345 m!101143))

(declare-fun m!101279 () Bool)

(assert (=> bm!9345 m!101279))

(assert (=> b!93920 d!24591))

(declare-fun d!24593 () Bool)

(assert (=> d!24593 (= (map!1242 newMap!16) (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun bs!3870 () Bool)

(assert (= bs!3870 d!24593))

(declare-fun m!101281 () Bool)

(assert (=> bs!3870 m!101281))

(assert (=> b!93921 d!24593))

(declare-fun b!94111 () Bool)

(declare-fun lt!46612 () ListLongMap!1489)

(declare-fun e!61467 () Bool)

(declare-fun apply!90 (ListLongMap!1489 (_ BitVec 64)) V!3129)

(assert (=> b!94111 (= e!61467 (= (apply!90 lt!46612 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94111 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> b!94111 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94112 () Bool)

(declare-fun e!61472 () ListLongMap!1489)

(declare-fun e!61465 () ListLongMap!1489)

(assert (=> b!94112 (= e!61472 e!61465)))

(declare-fun c!15675 () Bool)

(assert (=> b!94112 (= c!15675 (and (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94113 () Bool)

(declare-fun e!61475 () Bool)

(declare-fun call!9366 () Bool)

(assert (=> b!94113 (= e!61475 (not call!9366))))

(declare-fun bm!9360 () Bool)

(assert (=> bm!9360 (= call!9366 (contains!780 lt!46612 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94114 () Bool)

(declare-fun e!61470 () Bool)

(declare-fun e!61463 () Bool)

(assert (=> b!94114 (= e!61470 e!61463)))

(declare-fun c!15672 () Bool)

(assert (=> b!94114 (= c!15672 (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94115 () Bool)

(declare-fun e!61474 () Bool)

(assert (=> b!94115 (= e!61474 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94116 () Bool)

(declare-fun call!9368 () Bool)

(assert (=> b!94116 (= e!61463 (not call!9368))))

(declare-fun b!94117 () Bool)

(declare-fun e!61473 () Bool)

(assert (=> b!94117 (= e!61473 (= (apply!90 lt!46612 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun d!24595 () Bool)

(assert (=> d!24595 e!61470))

(declare-fun res!47677 () Bool)

(assert (=> d!24595 (=> (not res!47677) (not e!61470))))

(assert (=> d!24595 (= res!47677 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun lt!46601 () ListLongMap!1489)

(assert (=> d!24595 (= lt!46612 lt!46601)))

(declare-fun lt!46622 () Unit!2786)

(declare-fun e!61469 () Unit!2786)

(assert (=> d!24595 (= lt!46622 e!61469)))

(declare-fun c!15674 () Bool)

(declare-fun e!61471 () Bool)

(assert (=> d!24595 (= c!15674 e!61471)))

(declare-fun res!47674 () Bool)

(assert (=> d!24595 (=> (not res!47674) (not e!61471))))

(assert (=> d!24595 (= res!47674 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!24595 (= lt!46601 e!61472)))

(declare-fun c!15676 () Bool)

(assert (=> d!24595 (= c!15676 (and (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24595 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992))))))

(assert (=> d!24595 (= (getCurrentListMap!450 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) lt!46612)))

(declare-fun bm!9361 () Bool)

(declare-fun call!9367 () ListLongMap!1489)

(declare-fun call!9363 () ListLongMap!1489)

(assert (=> bm!9361 (= call!9367 call!9363)))

(declare-fun b!94118 () Bool)

(declare-fun e!61464 () Bool)

(assert (=> b!94118 (= e!61475 e!61464)))

(declare-fun res!47676 () Bool)

(assert (=> b!94118 (= res!47676 call!9366)))

(assert (=> b!94118 (=> (not res!47676) (not e!61464))))

(declare-fun bm!9362 () Bool)

(assert (=> bm!9362 (= call!9368 (contains!780 lt!46612 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94119 () Bool)

(declare-fun e!61466 () Bool)

(assert (=> b!94119 (= e!61466 e!61467)))

(declare-fun res!47670 () Bool)

(assert (=> b!94119 (=> (not res!47670) (not e!61467))))

(assert (=> b!94119 (= res!47670 (contains!780 lt!46612 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94119 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94120 () Bool)

(declare-fun c!15673 () Bool)

(assert (=> b!94120 (= c!15673 (and (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61468 () ListLongMap!1489)

(assert (=> b!94120 (= e!61465 e!61468)))

(declare-fun b!94121 () Bool)

(declare-fun res!47675 () Bool)

(assert (=> b!94121 (=> (not res!47675) (not e!61470))))

(assert (=> b!94121 (= res!47675 e!61475)))

(declare-fun c!15677 () Bool)

(assert (=> b!94121 (= c!15677 (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94122 () Bool)

(declare-fun res!47669 () Bool)

(assert (=> b!94122 (=> (not res!47669) (not e!61470))))

(assert (=> b!94122 (= res!47669 e!61466)))

(declare-fun res!47673 () Bool)

(assert (=> b!94122 (=> res!47673 e!61466)))

(assert (=> b!94122 (= res!47673 (not e!61474))))

(declare-fun res!47672 () Bool)

(assert (=> b!94122 (=> (not res!47672) (not e!61474))))

(assert (=> b!94122 (= res!47672 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94123 () Bool)

(declare-fun call!9364 () ListLongMap!1489)

(assert (=> b!94123 (= e!61465 call!9364)))

(declare-fun b!94124 () Bool)

(declare-fun call!9369 () ListLongMap!1489)

(declare-fun +!128 (ListLongMap!1489 tuple2!2282) ListLongMap!1489)

(assert (=> b!94124 (= e!61472 (+!128 call!9369 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94125 () Bool)

(assert (=> b!94125 (= e!61464 (= (apply!90 lt!46612 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun bm!9363 () Bool)

(declare-fun call!9365 () ListLongMap!1489)

(assert (=> bm!9363 (= call!9369 (+!128 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!94126 () Bool)

(declare-fun lt!46620 () Unit!2786)

(assert (=> b!94126 (= e!61469 lt!46620)))

(declare-fun lt!46602 () ListLongMap!1489)

(declare-fun getCurrentListMapNoExtraKeys!93 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) ListLongMap!1489)

(assert (=> b!94126 (= lt!46602 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun lt!46616 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46616 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46608 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46608 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46621 () Unit!2786)

(declare-fun addStillContains!66 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> b!94126 (= lt!46621 (addStillContains!66 lt!46602 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46608))))

(assert (=> b!94126 (contains!780 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46608)))

(declare-fun lt!46614 () Unit!2786)

(assert (=> b!94126 (= lt!46614 lt!46621)))

(declare-fun lt!46619 () ListLongMap!1489)

(assert (=> b!94126 (= lt!46619 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun lt!46611 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46611 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46605 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46605 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46606 () Unit!2786)

(declare-fun addApplyDifferent!66 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> b!94126 (= lt!46606 (addApplyDifferent!66 lt!46619 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46605))))

(assert (=> b!94126 (= (apply!90 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46605) (apply!90 lt!46619 lt!46605))))

(declare-fun lt!46617 () Unit!2786)

(assert (=> b!94126 (= lt!46617 lt!46606)))

(declare-fun lt!46613 () ListLongMap!1489)

(assert (=> b!94126 (= lt!46613 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun lt!46603 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46603 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46618 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46618 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46604 () Unit!2786)

(assert (=> b!94126 (= lt!46604 (addApplyDifferent!66 lt!46613 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46618))))

(assert (=> b!94126 (= (apply!90 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46618) (apply!90 lt!46613 lt!46618))))

(declare-fun lt!46610 () Unit!2786)

(assert (=> b!94126 (= lt!46610 lt!46604)))

(declare-fun lt!46615 () ListLongMap!1489)

(assert (=> b!94126 (= lt!46615 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun lt!46607 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46607 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46609 () (_ BitVec 64))

(assert (=> b!94126 (= lt!46609 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94126 (= lt!46620 (addApplyDifferent!66 lt!46615 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46609))))

(assert (=> b!94126 (= (apply!90 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46609) (apply!90 lt!46615 lt!46609))))

(declare-fun bm!9364 () Bool)

(assert (=> bm!9364 (= call!9363 call!9365)))

(declare-fun b!94127 () Bool)

(assert (=> b!94127 (= e!61468 call!9364)))

(declare-fun b!94128 () Bool)

(assert (=> b!94128 (= e!61468 call!9367)))

(declare-fun bm!9365 () Bool)

(assert (=> bm!9365 (= call!9364 call!9369)))

(declare-fun b!94129 () Bool)

(assert (=> b!94129 (= e!61463 e!61473)))

(declare-fun res!47671 () Bool)

(assert (=> b!94129 (= res!47671 call!9368)))

(assert (=> b!94129 (=> (not res!47671) (not e!61473))))

(declare-fun bm!9366 () Bool)

(assert (=> bm!9366 (= call!9365 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94130 () Bool)

(assert (=> b!94130 (= e!61471 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94131 () Bool)

(declare-fun Unit!2793 () Unit!2786)

(assert (=> b!94131 (= e!61469 Unit!2793)))

(assert (= (and d!24595 c!15676) b!94124))

(assert (= (and d!24595 (not c!15676)) b!94112))

(assert (= (and b!94112 c!15675) b!94123))

(assert (= (and b!94112 (not c!15675)) b!94120))

(assert (= (and b!94120 c!15673) b!94127))

(assert (= (and b!94120 (not c!15673)) b!94128))

(assert (= (or b!94127 b!94128) bm!9361))

(assert (= (or b!94123 bm!9361) bm!9364))

(assert (= (or b!94123 b!94127) bm!9365))

(assert (= (or b!94124 bm!9364) bm!9366))

(assert (= (or b!94124 bm!9365) bm!9363))

(assert (= (and d!24595 res!47674) b!94130))

(assert (= (and d!24595 c!15674) b!94126))

(assert (= (and d!24595 (not c!15674)) b!94131))

(assert (= (and d!24595 res!47677) b!94122))

(assert (= (and b!94122 res!47672) b!94115))

(assert (= (and b!94122 (not res!47673)) b!94119))

(assert (= (and b!94119 res!47670) b!94111))

(assert (= (and b!94122 res!47669) b!94121))

(assert (= (and b!94121 c!15677) b!94118))

(assert (= (and b!94121 (not c!15677)) b!94113))

(assert (= (and b!94118 res!47676) b!94125))

(assert (= (or b!94118 b!94113) bm!9360))

(assert (= (and b!94121 res!47675) b!94114))

(assert (= (and b!94114 c!15672) b!94129))

(assert (= (and b!94114 (not c!15672)) b!94116))

(assert (= (and b!94129 res!47671) b!94117))

(assert (= (or b!94129 b!94116) bm!9362))

(declare-fun b_lambda!4147 () Bool)

(assert (=> (not b_lambda!4147) (not b!94111)))

(assert (=> b!94111 t!5445))

(declare-fun b_and!5749 () Bool)

(assert (= b_and!5729 (and (=> t!5445 result!3177) b_and!5749)))

(assert (=> b!94111 t!5447))

(declare-fun b_and!5751 () Bool)

(assert (= b_and!5731 (and (=> t!5447 result!3181) b_and!5751)))

(declare-fun m!101283 () Bool)

(assert (=> b!94124 m!101283))

(declare-fun m!101285 () Bool)

(assert (=> b!94117 m!101285))

(assert (=> d!24595 m!101173))

(declare-fun m!101287 () Bool)

(assert (=> bm!9363 m!101287))

(declare-fun m!101289 () Bool)

(assert (=> b!94111 m!101289))

(assert (=> b!94111 m!101163))

(declare-fun m!101291 () Bool)

(assert (=> b!94111 m!101291))

(assert (=> b!94111 m!101163))

(assert (=> b!94111 m!101289))

(assert (=> b!94111 m!101269))

(assert (=> b!94111 m!101269))

(declare-fun m!101293 () Bool)

(assert (=> b!94111 m!101293))

(declare-fun m!101295 () Bool)

(assert (=> bm!9362 m!101295))

(declare-fun m!101297 () Bool)

(assert (=> bm!9360 m!101297))

(declare-fun m!101299 () Bool)

(assert (=> b!94126 m!101299))

(declare-fun m!101301 () Bool)

(assert (=> b!94126 m!101301))

(declare-fun m!101303 () Bool)

(assert (=> b!94126 m!101303))

(declare-fun m!101305 () Bool)

(assert (=> b!94126 m!101305))

(declare-fun m!101307 () Bool)

(assert (=> b!94126 m!101307))

(declare-fun m!101309 () Bool)

(assert (=> b!94126 m!101309))

(declare-fun m!101311 () Bool)

(assert (=> b!94126 m!101311))

(declare-fun m!101313 () Bool)

(assert (=> b!94126 m!101313))

(assert (=> b!94126 m!101269))

(declare-fun m!101315 () Bool)

(assert (=> b!94126 m!101315))

(declare-fun m!101317 () Bool)

(assert (=> b!94126 m!101317))

(declare-fun m!101319 () Bool)

(assert (=> b!94126 m!101319))

(assert (=> b!94126 m!101309))

(declare-fun m!101321 () Bool)

(assert (=> b!94126 m!101321))

(assert (=> b!94126 m!101301))

(declare-fun m!101323 () Bool)

(assert (=> b!94126 m!101323))

(assert (=> b!94126 m!101311))

(declare-fun m!101325 () Bool)

(assert (=> b!94126 m!101325))

(declare-fun m!101327 () Bool)

(assert (=> b!94126 m!101327))

(assert (=> b!94126 m!101303))

(declare-fun m!101329 () Bool)

(assert (=> b!94126 m!101329))

(assert (=> b!94115 m!101269))

(assert (=> b!94115 m!101269))

(declare-fun m!101331 () Bool)

(assert (=> b!94115 m!101331))

(assert (=> b!94119 m!101269))

(assert (=> b!94119 m!101269))

(declare-fun m!101333 () Bool)

(assert (=> b!94119 m!101333))

(assert (=> b!94130 m!101269))

(assert (=> b!94130 m!101269))

(assert (=> b!94130 m!101331))

(assert (=> bm!9366 m!101325))

(declare-fun m!101335 () Bool)

(assert (=> b!94125 m!101335))

(assert (=> b!93921 d!24595))

(declare-fun d!24597 () Bool)

(assert (=> d!24597 (= (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992)))) (and (or (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000001111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000011111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000001111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000011111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000001111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000011111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000001111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000011111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000001111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000011111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000001111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000011111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000001111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000011111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000001111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000011111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000111111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00001111111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00011111111111111111111111111111) (= (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!93908 d!24597))

(declare-fun d!24599 () Bool)

(declare-fun res!47684 () Bool)

(declare-fun e!61478 () Bool)

(assert (=> d!24599 (=> (not res!47684) (not e!61478))))

(declare-fun simpleValid!66 (LongMapFixedSize!832) Bool)

(assert (=> d!24599 (= res!47684 (simpleValid!66 newMap!16))))

(assert (=> d!24599 (= (valid!384 newMap!16) e!61478)))

(declare-fun b!94138 () Bool)

(declare-fun res!47685 () Bool)

(assert (=> b!94138 (=> (not res!47685) (not e!61478))))

(declare-fun arrayCountValidKeys!0 (array!4183 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94138 (= res!47685 (= (arrayCountValidKeys!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (_size!465 newMap!16)))))

(declare-fun b!94139 () Bool)

(declare-fun res!47686 () Bool)

(assert (=> b!94139 (=> (not res!47686) (not e!61478))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4183 (_ BitVec 32)) Bool)

(assert (=> b!94139 (= res!47686 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun b!94140 () Bool)

(assert (=> b!94140 (= e!61478 (arrayNoDuplicates!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 Nil!1552))))

(assert (= (and d!24599 res!47684) b!94138))

(assert (= (and b!94138 res!47685) b!94139))

(assert (= (and b!94139 res!47686) b!94140))

(declare-fun m!101337 () Bool)

(assert (=> d!24599 m!101337))

(declare-fun m!101339 () Bool)

(assert (=> b!94138 m!101339))

(declare-fun m!101341 () Bool)

(assert (=> b!94139 m!101341))

(declare-fun m!101343 () Bool)

(assert (=> b!94140 m!101343))

(assert (=> b!93914 d!24599))

(declare-fun d!24601 () Bool)

(declare-fun e!61483 () Bool)

(assert (=> d!24601 e!61483))

(declare-fun res!47689 () Bool)

(assert (=> d!24601 (=> res!47689 e!61483)))

(declare-fun lt!46633 () Bool)

(assert (=> d!24601 (= res!47689 (not lt!46633))))

(declare-fun lt!46632 () Bool)

(assert (=> d!24601 (= lt!46633 lt!46632)))

(declare-fun lt!46631 () Unit!2786)

(declare-fun e!61484 () Unit!2786)

(assert (=> d!24601 (= lt!46631 e!61484)))

(declare-fun c!15680 () Bool)

(assert (=> d!24601 (= c!15680 lt!46632)))

(declare-fun containsKey!152 (List!1554 (_ BitVec 64)) Bool)

(assert (=> d!24601 (= lt!46632 (containsKey!152 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24601 (= (contains!780 lt!46500 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!46633)))

(declare-fun b!94147 () Bool)

(declare-fun lt!46634 () Unit!2786)

(assert (=> b!94147 (= e!61484 lt!46634)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!100 (List!1554 (_ BitVec 64)) Unit!2786)

(assert (=> b!94147 (= lt!46634 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-datatypes ((Option!155 0))(
  ( (Some!154 (v!2770 V!3129)) (None!153) )
))
(declare-fun isDefined!101 (Option!155) Bool)

(declare-fun getValueByKey!149 (List!1554 (_ BitVec 64)) Option!155)

(assert (=> b!94147 (isDefined!101 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94148 () Bool)

(declare-fun Unit!2794 () Unit!2786)

(assert (=> b!94148 (= e!61484 Unit!2794)))

(declare-fun b!94149 () Bool)

(assert (=> b!94149 (= e!61483 (isDefined!101 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24601 c!15680) b!94147))

(assert (= (and d!24601 (not c!15680)) b!94148))

(assert (= (and d!24601 (not res!47689)) b!94149))

(assert (=> d!24601 m!101143))

(declare-fun m!101345 () Bool)

(assert (=> d!24601 m!101345))

(assert (=> b!94147 m!101143))

(declare-fun m!101347 () Bool)

(assert (=> b!94147 m!101347))

(assert (=> b!94147 m!101143))

(declare-fun m!101349 () Bool)

(assert (=> b!94147 m!101349))

(assert (=> b!94147 m!101349))

(declare-fun m!101351 () Bool)

(assert (=> b!94147 m!101351))

(assert (=> b!94149 m!101143))

(assert (=> b!94149 m!101349))

(assert (=> b!94149 m!101349))

(assert (=> b!94149 m!101351))

(assert (=> b!93919 d!24601))

(declare-fun b!94234 () Bool)

(declare-fun e!61548 () ListLongMap!1489)

(declare-fun call!9431 () ListLongMap!1489)

(assert (=> b!94234 (= e!61548 call!9431)))

(declare-fun b!94235 () Bool)

(declare-fun res!47727 () Bool)

(declare-fun e!61537 () Bool)

(assert (=> b!94235 (=> (not res!47727) (not e!61537))))

(declare-fun call!9441 () Bool)

(assert (=> b!94235 (= res!47727 call!9441)))

(declare-fun e!61538 () Bool)

(assert (=> b!94235 (= e!61538 e!61537)))

(declare-fun b!94236 () Bool)

(declare-fun e!61549 () Bool)

(declare-datatypes ((SeekEntryResult!245 0))(
  ( (MissingZero!245 (index!3121 (_ BitVec 32))) (Found!245 (index!3122 (_ BitVec 32))) (Intermediate!245 (undefined!1057 Bool) (index!3123 (_ BitVec 32)) (x!12649 (_ BitVec 32))) (Undefined!245) (MissingVacant!245 (index!3124 (_ BitVec 32))) )
))
(declare-fun lt!46697 () SeekEntryResult!245)

(assert (=> b!94236 (= e!61549 ((_ is Undefined!245) lt!46697))))

(declare-fun b!94237 () Bool)

(declare-fun res!47720 () Bool)

(declare-fun e!61541 () Bool)

(assert (=> b!94237 (=> (not res!47720) (not e!61541))))

(declare-fun call!9433 () Bool)

(assert (=> b!94237 (= res!47720 call!9433)))

(declare-fun e!61540 () Bool)

(assert (=> b!94237 (= e!61540 e!61541)))

(declare-fun b!94238 () Bool)

(declare-fun lt!46711 () Unit!2786)

(declare-fun lt!46708 () Unit!2786)

(assert (=> b!94238 (= lt!46711 lt!46708)))

(declare-fun call!9422 () ListLongMap!1489)

(declare-fun call!9432 () ListLongMap!1489)

(assert (=> b!94238 (= call!9422 call!9432)))

(declare-fun lt!46690 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2786)

(assert (=> b!94238 (= lt!46708 (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94238 (= lt!46690 (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!61547 () tuple2!2280)

(assert (=> b!94238 (= e!61547 (tuple2!2281 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6510 newMap!16) (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!465 newMap!16) (_keys!4117 newMap!16) (_values!2418 newMap!16) (_vacant!465 newMap!16))))))

(declare-fun bm!9415 () Bool)

(declare-fun call!9438 () ListLongMap!1489)

(assert (=> bm!9415 (= call!9431 call!9438)))

(declare-fun bm!9416 () Bool)

(declare-fun call!9440 () Bool)

(declare-fun call!9435 () Bool)

(assert (=> bm!9416 (= call!9440 call!9435)))

(declare-fun lt!46692 () SeekEntryResult!245)

(declare-fun call!9420 () tuple2!2280)

(declare-fun bm!9417 () Bool)

(declare-fun c!15712 () Bool)

(declare-fun updateHelperNewKey!39 (LongMapFixedSize!832 (_ BitVec 64) V!3129 (_ BitVec 32)) tuple2!2280)

(assert (=> bm!9417 (= call!9420 (updateHelperNewKey!39 newMap!16 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(declare-fun b!94239 () Bool)

(declare-fun res!47723 () Bool)

(declare-fun lt!46703 () SeekEntryResult!245)

(assert (=> b!94239 (= res!47723 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!46703)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61536 () Bool)

(assert (=> b!94239 (=> (not res!47723) (not e!61536))))

(declare-fun b!94240 () Bool)

(declare-fun e!61529 () Unit!2786)

(declare-fun lt!46695 () Unit!2786)

(assert (=> b!94240 (= e!61529 lt!46695)))

(declare-fun call!9434 () Unit!2786)

(assert (=> b!94240 (= lt!46695 call!9434)))

(declare-fun lt!46712 () SeekEntryResult!245)

(declare-fun call!9424 () SeekEntryResult!245)

(assert (=> b!94240 (= lt!46712 call!9424)))

(declare-fun res!47722 () Bool)

(assert (=> b!94240 (= res!47722 ((_ is Found!245) lt!46712))))

(declare-fun e!61531 () Bool)

(assert (=> b!94240 (=> (not res!47722) (not e!61531))))

(assert (=> b!94240 e!61531))

(declare-fun bm!9418 () Bool)

(declare-fun call!9437 () SeekEntryResult!245)

(assert (=> bm!9418 (= call!9424 call!9437)))

(declare-fun b!94241 () Bool)

(declare-fun call!9429 () Bool)

(assert (=> b!94241 (= e!61541 (not call!9429))))

(declare-fun bm!9419 () Bool)

(declare-fun call!9421 () SeekEntryResult!245)

(assert (=> bm!9419 (= call!9421 call!9437)))

(declare-fun b!94242 () Bool)

(declare-fun lt!46707 () tuple2!2280)

(assert (=> b!94242 (= lt!46707 call!9420)))

(declare-fun e!61543 () tuple2!2280)

(assert (=> b!94242 (= e!61543 (tuple2!2281 (_1!1151 lt!46707) (_2!1151 lt!46707)))))

(declare-fun b!94243 () Bool)

(declare-fun e!61550 () Unit!2786)

(declare-fun Unit!2795 () Unit!2786)

(assert (=> b!94243 (= e!61550 Unit!2795)))

(declare-fun lt!46713 () Unit!2786)

(assert (=> b!94243 (= lt!46713 call!9434)))

(declare-fun lt!46689 () SeekEntryResult!245)

(assert (=> b!94243 (= lt!46689 call!9421)))

(declare-fun res!47725 () Bool)

(assert (=> b!94243 (= res!47725 ((_ is Found!245) lt!46689))))

(declare-fun e!61544 () Bool)

(assert (=> b!94243 (=> (not res!47725) (not e!61544))))

(assert (=> b!94243 e!61544))

(declare-fun lt!46704 () Unit!2786)

(assert (=> b!94243 (= lt!46704 lt!46713)))

(assert (=> b!94243 false))

(declare-fun b!94244 () Bool)

(assert (=> b!94244 (= e!61531 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46712)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9420 () Bool)

(declare-fun call!9436 () ListLongMap!1489)

(declare-fun call!9439 () ListLongMap!1489)

(assert (=> bm!9420 (= call!9436 call!9439)))

(declare-fun b!94245 () Bool)

(declare-fun c!15716 () Bool)

(assert (=> b!94245 (= c!15716 ((_ is MissingVacant!245) lt!46697))))

(assert (=> b!94245 (= e!61540 e!61549)))

(declare-fun call!9427 () Unit!2786)

(declare-fun bm!9421 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2786)

(assert (=> bm!9421 (= call!9427 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94246 () Bool)

(declare-fun e!61534 () tuple2!2280)

(assert (=> b!94246 (= e!61534 e!61543)))

(declare-fun c!15713 () Bool)

(assert (=> b!94246 (= c!15713 ((_ is MissingZero!245) lt!46692))))

(declare-fun bm!9422 () Bool)

(assert (=> bm!9422 (= call!9433 call!9440)))

(declare-fun b!94247 () Bool)

(declare-fun call!9430 () Bool)

(assert (=> b!94247 (= e!61537 (not call!9430))))

(declare-fun b!94248 () Bool)

(declare-fun res!47731 () Bool)

(assert (=> b!94248 (= res!47731 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!46697)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61532 () Bool)

(assert (=> b!94248 (=> (not res!47731) (not e!61532))))

(declare-fun bm!9423 () Bool)

(declare-fun call!9419 () Bool)

(assert (=> bm!9423 (= call!9429 call!9419)))

(declare-fun b!94249 () Bool)

(declare-fun e!61546 () Bool)

(assert (=> b!94249 (= e!61546 ((_ is Undefined!245) lt!46703))))

(declare-fun b!94250 () Bool)

(assert (=> b!94250 (= c!15712 ((_ is MissingVacant!245) lt!46692))))

(declare-fun e!61535 () tuple2!2280)

(assert (=> b!94250 (= e!61535 e!61534)))

(declare-fun b!94251 () Bool)

(declare-fun res!47721 () Bool)

(declare-fun call!9425 () Bool)

(assert (=> b!94251 (= res!47721 call!9425)))

(assert (=> b!94251 (=> (not res!47721) (not e!61531))))

(declare-fun b!94252 () Bool)

(declare-fun e!61539 () Bool)

(declare-fun call!9426 () ListLongMap!1489)

(declare-fun call!9428 () ListLongMap!1489)

(assert (=> b!94252 (= e!61539 (= call!9426 call!9428))))

(declare-fun bm!9424 () Bool)

(declare-fun c!15717 () Bool)

(declare-fun c!15718 () Bool)

(declare-fun c!15721 () Bool)

(declare-fun c!15714 () Bool)

(declare-fun c!15710 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9424 (= call!9435 (inRange!0 (ite c!15718 (ite c!15710 (index!3122 lt!46689) (ite c!15721 (index!3121 lt!46697) (index!3124 lt!46697))) (ite c!15717 (index!3122 lt!46712) (ite c!15714 (index!3121 lt!46703) (index!3124 lt!46703)))) (mask!6510 newMap!16)))))

(declare-fun c!15720 () Bool)

(declare-fun bm!9425 () Bool)

(declare-fun c!15711 () Bool)

(declare-fun lt!46700 () array!4185)

(assert (=> bm!9425 (= call!9438 (getCurrentListMap!450 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94253 () Bool)

(declare-fun lt!46691 () Unit!2786)

(assert (=> b!94253 (= e!61550 lt!46691)))

(assert (=> b!94253 (= lt!46691 call!9427)))

(assert (=> b!94253 (= lt!46697 call!9421)))

(assert (=> b!94253 (= c!15721 ((_ is MissingZero!245) lt!46697))))

(assert (=> b!94253 e!61540))

(declare-fun b!94254 () Bool)

(declare-fun lt!46693 () Unit!2786)

(declare-fun lt!46705 () Unit!2786)

(assert (=> b!94254 (= lt!46693 lt!46705)))

(assert (=> b!94254 (= call!9422 call!9436)))

(declare-fun lt!46710 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!39 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2786)

(assert (=> b!94254 (= lt!46705 (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46710 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94254 (= lt!46710 (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!94254 (= e!61547 (tuple2!2281 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6510 newMap!16) (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (_size!465 newMap!16) (_keys!4117 newMap!16) (_values!2418 newMap!16) (_vacant!465 newMap!16))))))

(declare-fun bm!9426 () Bool)

(assert (=> bm!9426 (= call!9439 (getCurrentListMap!450 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun bm!9427 () Bool)

(assert (=> bm!9427 (= call!9430 call!9419)))

(declare-fun bm!9428 () Bool)

(assert (=> bm!9428 (= call!9441 call!9425)))

(declare-fun b!94255 () Bool)

(assert (=> b!94255 (= e!61532 (not call!9429))))

(declare-fun bm!9429 () Bool)

(declare-fun c!15715 () Bool)

(assert (=> bm!9429 (= c!15715 c!15718)))

(declare-fun call!9418 () Bool)

(assert (=> bm!9429 (= call!9418 (contains!780 e!61548 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94256 () Bool)

(declare-fun e!61542 () tuple2!2280)

(assert (=> b!94256 (= e!61542 e!61535)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4183 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> b!94256 (= lt!46692 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (=> b!94256 (= c!15718 ((_ is Undefined!245) lt!46692))))

(declare-fun b!94257 () Bool)

(assert (=> b!94257 (= e!61548 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun bm!9430 () Bool)

(assert (=> bm!9430 (= call!9419 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94258 () Bool)

(declare-fun lt!46709 () Unit!2786)

(declare-fun lt!46698 () Unit!2786)

(assert (=> b!94258 (= lt!46709 lt!46698)))

(assert (=> b!94258 (contains!780 call!9431 (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!99 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) Unit!2786)

(assert (=> b!94258 (= lt!46698 (lemmaValidKeyInArrayIsInListMap!99 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94258 (= lt!46700 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))))

(declare-fun lt!46715 () Unit!2786)

(declare-fun lt!46694 () Unit!2786)

(assert (=> b!94258 (= lt!46715 lt!46694)))

(declare-fun call!9423 () ListLongMap!1489)

(assert (=> b!94258 (= call!9423 call!9439)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2786)

(assert (=> b!94258 (= lt!46694 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46701 () Unit!2786)

(assert (=> b!94258 (= lt!46701 e!61529)))

(assert (=> b!94258 (= c!15717 call!9418)))

(assert (=> b!94258 (= e!61543 (tuple2!2281 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (_size!465 newMap!16) (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (_vacant!465 newMap!16))))))

(declare-fun bm!9431 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2786)

(assert (=> bm!9431 (= call!9434 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun bm!9432 () Bool)

(assert (=> bm!9432 (= call!9437 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun d!24603 () Bool)

(declare-fun e!61530 () Bool)

(assert (=> d!24603 e!61530))

(declare-fun res!47729 () Bool)

(assert (=> d!24603 (=> (not res!47729) (not e!61530))))

(declare-fun lt!46714 () tuple2!2280)

(assert (=> d!24603 (= res!47729 (valid!384 (_2!1151 lt!46714)))))

(assert (=> d!24603 (= lt!46714 e!61542)))

(assert (=> d!24603 (= c!15720 (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvneg (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24603 (valid!384 newMap!16)))

(assert (=> d!24603 (= (update!141 newMap!16 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!46714)))

(declare-fun bm!9433 () Bool)

(assert (=> bm!9433 (= call!9432 call!9438)))

(declare-fun bm!9434 () Bool)

(assert (=> bm!9434 (= call!9422 call!9423)))

(declare-fun bm!9435 () Bool)

(assert (=> bm!9435 (= call!9428 (map!1242 newMap!16))))

(declare-fun b!94259 () Bool)

(assert (=> b!94259 (= e!61544 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46689)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9436 () Bool)

(declare-fun e!61545 () ListLongMap!1489)

(assert (=> bm!9436 (= call!9423 (+!128 e!61545 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!15719 () Bool)

(assert (=> bm!9436 (= c!15719 c!15720)))

(declare-fun b!94260 () Bool)

(assert (=> b!94260 (= e!61549 e!61532)))

(declare-fun res!47718 () Bool)

(assert (=> b!94260 (= res!47718 call!9433)))

(assert (=> b!94260 (=> (not res!47718) (not e!61532))))

(declare-fun b!94261 () Bool)

(assert (=> b!94261 (= e!61530 e!61539)))

(declare-fun c!15709 () Bool)

(assert (=> b!94261 (= c!15709 (_1!1151 lt!46714))))

(declare-fun b!94262 () Bool)

(declare-fun Unit!2796 () Unit!2786)

(assert (=> b!94262 (= e!61529 Unit!2796)))

(declare-fun lt!46702 () Unit!2786)

(assert (=> b!94262 (= lt!46702 call!9427)))

(assert (=> b!94262 (= lt!46703 call!9424)))

(assert (=> b!94262 (= c!15714 ((_ is MissingZero!245) lt!46703))))

(assert (=> b!94262 e!61538))

(declare-fun lt!46696 () Unit!2786)

(assert (=> b!94262 (= lt!46696 lt!46702)))

(assert (=> b!94262 false))

(declare-fun b!94263 () Bool)

(assert (=> b!94263 (= e!61545 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94264 () Bool)

(declare-fun res!47728 () Bool)

(assert (=> b!94264 (=> (not res!47728) (not e!61541))))

(assert (=> b!94264 (= res!47728 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!46697)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9437 () Bool)

(assert (=> bm!9437 (= call!9426 (map!1242 (_2!1151 lt!46714)))))

(declare-fun b!94265 () Bool)

(declare-fun res!47730 () Bool)

(assert (=> b!94265 (=> (not res!47730) (not e!61537))))

(assert (=> b!94265 (= res!47730 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!46703)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94266 () Bool)

(declare-fun lt!46706 () Unit!2786)

(assert (=> b!94266 (= lt!46706 e!61550)))

(assert (=> b!94266 (= c!15710 call!9418)))

(assert (=> b!94266 (= e!61535 (tuple2!2281 false newMap!16))))

(declare-fun b!94267 () Bool)

(declare-fun c!15722 () Bool)

(assert (=> b!94267 (= c!15722 ((_ is MissingVacant!245) lt!46703))))

(assert (=> b!94267 (= e!61538 e!61546)))

(declare-fun b!94268 () Bool)

(assert (=> b!94268 (= e!61546 e!61536)))

(declare-fun res!47726 () Bool)

(assert (=> b!94268 (= res!47726 call!9441)))

(assert (=> b!94268 (=> (not res!47726) (not e!61536))))

(declare-fun b!94269 () Bool)

(assert (=> b!94269 (= e!61542 e!61547)))

(assert (=> b!94269 (= c!15711 (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94270 () Bool)

(declare-fun e!61533 () Bool)

(assert (=> b!94270 (= e!61539 e!61533)))

(declare-fun res!47719 () Bool)

(assert (=> b!94270 (= res!47719 (contains!780 call!9426 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94270 (=> (not res!47719) (not e!61533))))

(declare-fun b!94271 () Bool)

(assert (=> b!94271 (= e!61533 (= call!9426 (+!128 call!9428 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94272 () Bool)

(declare-fun lt!46699 () tuple2!2280)

(assert (=> b!94272 (= e!61534 (tuple2!2281 (_1!1151 lt!46699) (_2!1151 lt!46699)))))

(assert (=> b!94272 (= lt!46699 call!9420)))

(declare-fun b!94273 () Bool)

(assert (=> b!94273 (= e!61536 (not call!9430))))

(declare-fun b!94274 () Bool)

(assert (=> b!94274 (= e!61545 (ite c!15711 call!9432 call!9436))))

(declare-fun b!94275 () Bool)

(declare-fun res!47724 () Bool)

(assert (=> b!94275 (= res!47724 call!9440)))

(assert (=> b!94275 (=> (not res!47724) (not e!61544))))

(declare-fun bm!9438 () Bool)

(assert (=> bm!9438 (= call!9425 call!9435)))

(assert (= (and d!24603 c!15720) b!94269))

(assert (= (and d!24603 (not c!15720)) b!94256))

(assert (= (and b!94269 c!15711) b!94254))

(assert (= (and b!94269 (not c!15711)) b!94238))

(assert (= (or b!94254 b!94238) bm!9433))

(assert (= (or b!94254 b!94238) bm!9420))

(assert (= (or b!94254 b!94238) bm!9434))

(assert (= (and b!94256 c!15718) b!94266))

(assert (= (and b!94256 (not c!15718)) b!94250))

(assert (= (and b!94266 c!15710) b!94243))

(assert (= (and b!94266 (not c!15710)) b!94253))

(assert (= (and b!94243 res!47725) b!94275))

(assert (= (and b!94275 res!47724) b!94259))

(assert (= (and b!94253 c!15721) b!94237))

(assert (= (and b!94253 (not c!15721)) b!94245))

(assert (= (and b!94237 res!47720) b!94264))

(assert (= (and b!94264 res!47728) b!94241))

(assert (= (and b!94245 c!15716) b!94260))

(assert (= (and b!94245 (not c!15716)) b!94236))

(assert (= (and b!94260 res!47718) b!94248))

(assert (= (and b!94248 res!47731) b!94255))

(assert (= (or b!94237 b!94260) bm!9422))

(assert (= (or b!94241 b!94255) bm!9423))

(assert (= (or b!94275 bm!9422) bm!9416))

(assert (= (or b!94243 b!94253) bm!9419))

(assert (= (and b!94250 c!15712) b!94272))

(assert (= (and b!94250 (not c!15712)) b!94246))

(assert (= (and b!94246 c!15713) b!94242))

(assert (= (and b!94246 (not c!15713)) b!94258))

(assert (= (and b!94258 c!15717) b!94240))

(assert (= (and b!94258 (not c!15717)) b!94262))

(assert (= (and b!94240 res!47722) b!94251))

(assert (= (and b!94251 res!47721) b!94244))

(assert (= (and b!94262 c!15714) b!94235))

(assert (= (and b!94262 (not c!15714)) b!94267))

(assert (= (and b!94235 res!47727) b!94265))

(assert (= (and b!94265 res!47730) b!94247))

(assert (= (and b!94267 c!15722) b!94268))

(assert (= (and b!94267 (not c!15722)) b!94249))

(assert (= (and b!94268 res!47726) b!94239))

(assert (= (and b!94239 res!47723) b!94273))

(assert (= (or b!94235 b!94268) bm!9428))

(assert (= (or b!94247 b!94273) bm!9427))

(assert (= (or b!94251 bm!9428) bm!9438))

(assert (= (or b!94240 b!94262) bm!9418))

(assert (= (or b!94272 b!94242) bm!9417))

(assert (= (or bm!9423 bm!9427) bm!9430))

(assert (= (or bm!9416 bm!9438) bm!9424))

(assert (= (or bm!9419 bm!9418) bm!9432))

(assert (= (or b!94253 b!94262) bm!9421))

(assert (= (or b!94243 b!94240) bm!9431))

(assert (= (or b!94266 b!94258) bm!9415))

(assert (= (or b!94266 b!94258) bm!9429))

(assert (= (and bm!9429 c!15715) b!94234))

(assert (= (and bm!9429 (not c!15715)) b!94257))

(assert (= (or bm!9433 bm!9415) bm!9425))

(assert (= (or bm!9420 b!94258) bm!9426))

(assert (= (or bm!9434 b!94258) bm!9436))

(assert (= (and bm!9436 c!15719) b!94274))

(assert (= (and bm!9436 (not c!15719)) b!94263))

(assert (= (and d!24603 res!47729) b!94261))

(assert (= (and b!94261 c!15709) b!94270))

(assert (= (and b!94261 (not c!15709)) b!94252))

(assert (= (and b!94270 res!47719) b!94271))

(assert (= (or b!94270 b!94271 b!94252) bm!9437))

(assert (= (or b!94271 b!94252) bm!9435))

(declare-fun m!101353 () Bool)

(assert (=> bm!9436 m!101353))

(assert (=> bm!9417 m!101143))

(assert (=> bm!9417 m!101165))

(declare-fun m!101355 () Bool)

(assert (=> bm!9417 m!101355))

(declare-fun m!101357 () Bool)

(assert (=> b!94244 m!101357))

(declare-fun m!101359 () Bool)

(assert (=> b!94271 m!101359))

(declare-fun m!101361 () Bool)

(assert (=> bm!9424 m!101361))

(declare-fun m!101363 () Bool)

(assert (=> b!94258 m!101363))

(declare-fun m!101365 () Bool)

(assert (=> b!94258 m!101365))

(declare-fun m!101367 () Bool)

(assert (=> b!94258 m!101367))

(assert (=> b!94258 m!101143))

(assert (=> b!94258 m!101165))

(declare-fun m!101369 () Bool)

(assert (=> b!94258 m!101369))

(assert (=> b!94258 m!101367))

(declare-fun m!101371 () Bool)

(assert (=> b!94258 m!101371))

(declare-fun m!101373 () Bool)

(assert (=> b!94239 m!101373))

(assert (=> bm!9426 m!101365))

(declare-fun m!101375 () Bool)

(assert (=> bm!9426 m!101375))

(assert (=> b!94263 m!101281))

(declare-fun m!101377 () Bool)

(assert (=> b!94264 m!101377))

(assert (=> bm!9429 m!101143))

(declare-fun m!101379 () Bool)

(assert (=> bm!9429 m!101379))

(declare-fun m!101381 () Bool)

(assert (=> b!94259 m!101381))

(assert (=> b!94257 m!101281))

(assert (=> bm!9430 m!101143))

(declare-fun m!101383 () Bool)

(assert (=> bm!9430 m!101383))

(assert (=> b!94238 m!101165))

(declare-fun m!101385 () Bool)

(assert (=> b!94238 m!101385))

(assert (=> bm!9431 m!101143))

(declare-fun m!101387 () Bool)

(assert (=> bm!9431 m!101387))

(assert (=> b!94256 m!101143))

(declare-fun m!101389 () Bool)

(assert (=> b!94256 m!101389))

(declare-fun m!101391 () Bool)

(assert (=> b!94248 m!101391))

(assert (=> bm!9432 m!101143))

(assert (=> bm!9432 m!101389))

(assert (=> b!94254 m!101165))

(declare-fun m!101393 () Bool)

(assert (=> b!94254 m!101393))

(declare-fun m!101395 () Bool)

(assert (=> bm!9425 m!101395))

(declare-fun m!101397 () Bool)

(assert (=> d!24603 m!101397))

(assert (=> d!24603 m!101135))

(declare-fun m!101399 () Bool)

(assert (=> b!94265 m!101399))

(assert (=> b!94270 m!101143))

(declare-fun m!101401 () Bool)

(assert (=> b!94270 m!101401))

(assert (=> bm!9421 m!101143))

(declare-fun m!101403 () Bool)

(assert (=> bm!9421 m!101403))

(declare-fun m!101405 () Bool)

(assert (=> bm!9437 m!101405))

(assert (=> bm!9435 m!101151))

(assert (=> b!93919 d!24603))

(declare-fun d!24605 () Bool)

(declare-fun c!15725 () Bool)

(assert (=> d!24605 (= c!15725 ((_ is ValueCellFull!962) (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61553 () V!3129)

(assert (=> d!24605 (= (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61553)))

(declare-fun b!94280 () Bool)

(declare-fun get!1273 (ValueCell!962 V!3129) V!3129)

(assert (=> b!94280 (= e!61553 (get!1273 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94281 () Bool)

(declare-fun get!1274 (ValueCell!962 V!3129) V!3129)

(assert (=> b!94281 (= e!61553 (get!1274 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24605 c!15725) b!94280))

(assert (= (and d!24605 (not c!15725)) b!94281))

(assert (=> b!94280 m!101161))

(assert (=> b!94280 m!101163))

(declare-fun m!101407 () Bool)

(assert (=> b!94280 m!101407))

(assert (=> b!94281 m!101161))

(assert (=> b!94281 m!101163))

(declare-fun m!101409 () Bool)

(assert (=> b!94281 m!101409))

(assert (=> b!93919 d!24605))

(declare-fun condMapEmpty!3685 () Bool)

(declare-fun mapDefault!3685 () ValueCell!962)

(assert (=> mapNonEmpty!3669 (= condMapEmpty!3685 (= mapRest!3670 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3685)))))

(declare-fun e!61559 () Bool)

(declare-fun mapRes!3685 () Bool)

(assert (=> mapNonEmpty!3669 (= tp!9435 (and e!61559 mapRes!3685))))

(declare-fun b!94289 () Bool)

(assert (=> b!94289 (= e!61559 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3685 () Bool)

(declare-fun tp!9463 () Bool)

(declare-fun e!61558 () Bool)

(assert (=> mapNonEmpty!3685 (= mapRes!3685 (and tp!9463 e!61558))))

(declare-fun mapRest!3685 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapValue!3685 () ValueCell!962)

(declare-fun mapKey!3685 () (_ BitVec 32))

(assert (=> mapNonEmpty!3685 (= mapRest!3670 (store mapRest!3685 mapKey!3685 mapValue!3685))))

(declare-fun mapIsEmpty!3685 () Bool)

(assert (=> mapIsEmpty!3685 mapRes!3685))

(declare-fun b!94288 () Bool)

(assert (=> b!94288 (= e!61558 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3669 condMapEmpty!3685) mapIsEmpty!3685))

(assert (= (and mapNonEmpty!3669 (not condMapEmpty!3685)) mapNonEmpty!3685))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!962) mapValue!3685)) b!94288))

(assert (= (and mapNonEmpty!3669 ((_ is ValueCellFull!962) mapDefault!3685)) b!94289))

(declare-fun m!101411 () Bool)

(assert (=> mapNonEmpty!3685 m!101411))

(declare-fun condMapEmpty!3686 () Bool)

(declare-fun mapDefault!3686 () ValueCell!962)

(assert (=> mapNonEmpty!3670 (= condMapEmpty!3686 (= mapRest!3669 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3686)))))

(declare-fun e!61561 () Bool)

(declare-fun mapRes!3686 () Bool)

(assert (=> mapNonEmpty!3670 (= tp!9433 (and e!61561 mapRes!3686))))

(declare-fun b!94291 () Bool)

(assert (=> b!94291 (= e!61561 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3686 () Bool)

(declare-fun tp!9464 () Bool)

(declare-fun e!61560 () Bool)

(assert (=> mapNonEmpty!3686 (= mapRes!3686 (and tp!9464 e!61560))))

(declare-fun mapKey!3686 () (_ BitVec 32))

(declare-fun mapValue!3686 () ValueCell!962)

(declare-fun mapRest!3686 () (Array (_ BitVec 32) ValueCell!962))

(assert (=> mapNonEmpty!3686 (= mapRest!3669 (store mapRest!3686 mapKey!3686 mapValue!3686))))

(declare-fun mapIsEmpty!3686 () Bool)

(assert (=> mapIsEmpty!3686 mapRes!3686))

(declare-fun b!94290 () Bool)

(assert (=> b!94290 (= e!61560 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3670 condMapEmpty!3686) mapIsEmpty!3686))

(assert (= (and mapNonEmpty!3670 (not condMapEmpty!3686)) mapNonEmpty!3686))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!962) mapValue!3686)) b!94290))

(assert (= (and mapNonEmpty!3670 ((_ is ValueCellFull!962) mapDefault!3686)) b!94291))

(declare-fun m!101413 () Bool)

(assert (=> mapNonEmpty!3686 m!101413))

(declare-fun b_lambda!4149 () Bool)

(assert (= b_lambda!4147 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4149)))

(check-sat (not b!94270) (not b!94066) (not d!24589) (not bm!9362) (not bm!9426) (not bm!9431) tp_is_empty!2611 (not d!24583) (not b!94115) (not b!94280) (not b!94149) (not b_next!2391) (not b!94238) (not b!94052) (not bm!9345) (not bm!9432) (not d!24595) (not b!94067) b_and!5751 (not bm!9429) (not bm!9360) (not d!24599) (not bm!9417) (not d!24577) (not bm!9421) (not b!94138) (not bm!9437) (not b!94125) (not b_lambda!4149) (not b!94126) (not b!94119) (not mapNonEmpty!3685) (not b_lambda!4145) (not b!94047) (not b!94257) (not d!24585) (not b!94271) (not b!94130) (not b!94147) (not bm!9436) (not bm!9430) (not b!94281) (not b!94117) (not mapNonEmpty!3686) (not b!94140) (not d!24601) (not b_next!2389) (not b!94256) (not b!94263) (not bm!9424) (not b!94254) (not bm!9435) (not d!24593) (not b!94124) (not bm!9366) (not bm!9425) (not d!24603) b_and!5749 (not b!94258) (not bm!9363) (not b!94068) (not b!94111) (not b!94139))
(check-sat b_and!5749 b_and!5751 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun d!24607 () Bool)

(declare-fun res!47732 () Bool)

(declare-fun e!61562 () Bool)

(assert (=> d!24607 (=> res!47732 e!61562)))

(assert (=> d!24607 (= res!47732 (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24607 (= (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!61562)))

(declare-fun b!94292 () Bool)

(declare-fun e!61563 () Bool)

(assert (=> b!94292 (= e!61562 e!61563)))

(declare-fun res!47733 () Bool)

(assert (=> b!94292 (=> (not res!47733) (not e!61563))))

(assert (=> b!94292 (= res!47733 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94293 () Bool)

(assert (=> b!94293 (= e!61563 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24607 (not res!47732)) b!94292))

(assert (= (and b!94292 res!47733) b!94293))

(declare-fun m!101415 () Bool)

(assert (=> d!24607 m!101415))

(assert (=> b!94293 m!101143))

(declare-fun m!101417 () Bool)

(assert (=> b!94293 m!101417))

(assert (=> b!94047 d!24607))

(declare-fun b!94294 () Bool)

(declare-fun e!61565 () Bool)

(declare-fun call!9442 () Bool)

(assert (=> b!94294 (= e!61565 call!9442)))

(declare-fun b!94295 () Bool)

(assert (=> b!94295 (= e!61565 call!9442)))

(declare-fun b!94296 () Bool)

(declare-fun e!61564 () Bool)

(assert (=> b!94296 (= e!61564 e!61565)))

(declare-fun c!15726 () Bool)

(assert (=> b!94296 (= c!15726 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94297 () Bool)

(declare-fun e!61566 () Bool)

(assert (=> b!94297 (= e!61566 e!61564)))

(declare-fun res!47736 () Bool)

(assert (=> b!94297 (=> (not res!47736) (not e!61564))))

(declare-fun e!61567 () Bool)

(assert (=> b!94297 (= res!47736 (not e!61567))))

(declare-fun res!47734 () Bool)

(assert (=> b!94297 (=> (not res!47734) (not e!61567))))

(assert (=> b!94297 (= res!47734 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94298 () Bool)

(assert (=> b!94298 (= e!61567 (contains!781 (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!9439 () Bool)

(assert (=> bm!9439 (= call!9442 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15726 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552))))))

(declare-fun d!24609 () Bool)

(declare-fun res!47735 () Bool)

(assert (=> d!24609 (=> res!47735 e!61566)))

(assert (=> d!24609 (= res!47735 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!24609 (= (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) e!61566)))

(assert (= (and d!24609 (not res!47735)) b!94297))

(assert (= (and b!94297 res!47734) b!94298))

(assert (= (and b!94297 res!47736) b!94296))

(assert (= (and b!94296 c!15726) b!94294))

(assert (= (and b!94296 (not c!15726)) b!94295))

(assert (= (or b!94294 b!94295) bm!9439))

(declare-fun m!101419 () Bool)

(assert (=> b!94296 m!101419))

(assert (=> b!94296 m!101419))

(declare-fun m!101421 () Bool)

(assert (=> b!94296 m!101421))

(assert (=> b!94297 m!101419))

(assert (=> b!94297 m!101419))

(assert (=> b!94297 m!101421))

(assert (=> b!94298 m!101419))

(assert (=> b!94298 m!101419))

(declare-fun m!101423 () Bool)

(assert (=> b!94298 m!101423))

(assert (=> bm!9439 m!101419))

(declare-fun m!101425 () Bool)

(assert (=> bm!9439 m!101425))

(assert (=> bm!9345 d!24609))

(declare-fun d!24611 () Bool)

(declare-fun res!47741 () Bool)

(declare-fun e!61572 () Bool)

(assert (=> d!24611 (=> res!47741 e!61572)))

(assert (=> d!24611 (= res!47741 (and ((_ is Cons!1550) (toList!760 lt!46500)) (= (_1!1152 (h!2142 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24611 (= (containsKey!152 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61572)))

(declare-fun b!94303 () Bool)

(declare-fun e!61573 () Bool)

(assert (=> b!94303 (= e!61572 e!61573)))

(declare-fun res!47742 () Bool)

(assert (=> b!94303 (=> (not res!47742) (not e!61573))))

(assert (=> b!94303 (= res!47742 (and (or (not ((_ is Cons!1550) (toList!760 lt!46500))) (bvsle (_1!1152 (h!2142 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1550) (toList!760 lt!46500)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94304 () Bool)

(assert (=> b!94304 (= e!61573 (containsKey!152 (t!5448 (toList!760 lt!46500)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24611 (not res!47741)) b!94303))

(assert (= (and b!94303 res!47742) b!94304))

(assert (=> b!94304 m!101143))

(declare-fun m!101427 () Bool)

(assert (=> b!94304 m!101427))

(assert (=> d!24601 d!24611))

(declare-fun d!24613 () Bool)

(declare-fun get!1275 (Option!155) V!3129)

(assert (=> d!24613 (= (apply!90 lt!46612 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1275 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3871 () Bool)

(assert (= bs!3871 d!24613))

(assert (=> bs!3871 m!101269))

(declare-fun m!101429 () Bool)

(assert (=> bs!3871 m!101429))

(assert (=> bs!3871 m!101429))

(declare-fun m!101431 () Bool)

(assert (=> bs!3871 m!101431))

(assert (=> b!94111 d!24613))

(declare-fun d!24615 () Bool)

(declare-fun c!15727 () Bool)

(assert (=> d!24615 (= c!15727 ((_ is ValueCellFull!962) (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61574 () V!3129)

(assert (=> d!24615 (= (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61574)))

(declare-fun b!94305 () Bool)

(assert (=> b!94305 (= e!61574 (get!1273 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94306 () Bool)

(assert (=> b!94306 (= e!61574 (get!1274 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24615 c!15727) b!94305))

(assert (= (and d!24615 (not c!15727)) b!94306))

(assert (=> b!94305 m!101289))

(assert (=> b!94305 m!101163))

(declare-fun m!101433 () Bool)

(assert (=> b!94305 m!101433))

(assert (=> b!94306 m!101289))

(assert (=> b!94306 m!101163))

(declare-fun m!101435 () Bool)

(assert (=> b!94306 m!101435))

(assert (=> b!94111 d!24615))

(declare-fun d!24617 () Bool)

(assert (=> d!24617 (= (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (and (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94067 d!24617))

(declare-fun d!24619 () Bool)

(declare-fun e!61577 () Bool)

(assert (=> d!24619 e!61577))

(declare-fun res!47748 () Bool)

(assert (=> d!24619 (=> (not res!47748) (not e!61577))))

(declare-fun lt!46725 () ListLongMap!1489)

(assert (=> d!24619 (= res!47748 (contains!780 lt!46725 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!46727 () List!1554)

(assert (=> d!24619 (= lt!46725 (ListLongMap!1490 lt!46727))))

(declare-fun lt!46726 () Unit!2786)

(declare-fun lt!46724 () Unit!2786)

(assert (=> d!24619 (= lt!46726 lt!46724)))

(assert (=> d!24619 (= (getValueByKey!149 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!154 (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!65 (List!1554 (_ BitVec 64) V!3129) Unit!2786)

(assert (=> d!24619 (= lt!46724 (lemmaContainsTupThenGetReturnValue!65 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun insertStrictlySorted!68 (List!1554 (_ BitVec 64) V!3129) List!1554)

(assert (=> d!24619 (= lt!46727 (insertStrictlySorted!68 (toList!760 e!61545) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24619 (= (+!128 e!61545 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!46725)))

(declare-fun b!94311 () Bool)

(declare-fun res!47747 () Bool)

(assert (=> b!94311 (=> (not res!47747) (not e!61577))))

(assert (=> b!94311 (= res!47747 (= (getValueByKey!149 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!154 (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94312 () Bool)

(declare-fun contains!782 (List!1554 tuple2!2282) Bool)

(assert (=> b!94312 (= e!61577 (contains!782 (toList!760 lt!46725) (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!24619 res!47748) b!94311))

(assert (= (and b!94311 res!47747) b!94312))

(declare-fun m!101437 () Bool)

(assert (=> d!24619 m!101437))

(declare-fun m!101439 () Bool)

(assert (=> d!24619 m!101439))

(declare-fun m!101441 () Bool)

(assert (=> d!24619 m!101441))

(declare-fun m!101443 () Bool)

(assert (=> d!24619 m!101443))

(declare-fun m!101445 () Bool)

(assert (=> b!94311 m!101445))

(declare-fun m!101447 () Bool)

(assert (=> b!94312 m!101447))

(assert (=> bm!9436 d!24619))

(declare-fun b!94337 () Bool)

(declare-fun e!61592 () Bool)

(assert (=> b!94337 (= e!61592 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94337 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!94338 () Bool)

(declare-fun e!61594 () Bool)

(declare-fun lt!46748 () ListLongMap!1489)

(declare-fun isEmpty!356 (ListLongMap!1489) Bool)

(assert (=> b!94338 (= e!61594 (isEmpty!356 lt!46748))))

(declare-fun b!94339 () Bool)

(declare-fun e!61598 () Bool)

(declare-fun e!61597 () Bool)

(assert (=> b!94339 (= e!61598 e!61597)))

(assert (=> b!94339 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun res!47758 () Bool)

(assert (=> b!94339 (= res!47758 (contains!780 lt!46748 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94339 (=> (not res!47758) (not e!61597))))

(declare-fun d!24621 () Bool)

(declare-fun e!61593 () Bool)

(assert (=> d!24621 e!61593))

(declare-fun res!47759 () Bool)

(assert (=> d!24621 (=> (not res!47759) (not e!61593))))

(assert (=> d!24621 (= res!47759 (not (contains!780 lt!46748 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61596 () ListLongMap!1489)

(assert (=> d!24621 (= lt!46748 e!61596)))

(declare-fun c!15737 () Bool)

(assert (=> d!24621 (= c!15737 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!24621 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992))))))

(assert (=> d!24621 (= (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) lt!46748)))

(declare-fun b!94340 () Bool)

(declare-fun e!61595 () ListLongMap!1489)

(declare-fun call!9445 () ListLongMap!1489)

(assert (=> b!94340 (= e!61595 call!9445)))

(declare-fun b!94341 () Bool)

(assert (=> b!94341 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> b!94341 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> b!94341 (= e!61597 (= (apply!90 lt!46748 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94342 () Bool)

(assert (=> b!94342 (= e!61596 (ListLongMap!1490 Nil!1551))))

(declare-fun b!94343 () Bool)

(declare-fun lt!46743 () Unit!2786)

(declare-fun lt!46745 () Unit!2786)

(assert (=> b!94343 (= lt!46743 lt!46745)))

(declare-fun lt!46744 () V!3129)

(declare-fun lt!46746 () (_ BitVec 64))

(declare-fun lt!46747 () (_ BitVec 64))

(declare-fun lt!46742 () ListLongMap!1489)

(assert (=> b!94343 (not (contains!780 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744)) lt!46746))))

(declare-fun addStillNotContains!40 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> b!94343 (= lt!46745 (addStillNotContains!40 lt!46742 lt!46747 lt!46744 lt!46746))))

(assert (=> b!94343 (= lt!46746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94343 (= lt!46744 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94343 (= lt!46747 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94343 (= lt!46742 call!9445)))

(assert (=> b!94343 (= e!61595 (+!128 call!9445 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94344 () Bool)

(assert (=> b!94344 (= e!61593 e!61598)))

(declare-fun c!15739 () Bool)

(assert (=> b!94344 (= c!15739 e!61592)))

(declare-fun res!47757 () Bool)

(assert (=> b!94344 (=> (not res!47757) (not e!61592))))

(assert (=> b!94344 (= res!47757 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94345 () Bool)

(declare-fun res!47760 () Bool)

(assert (=> b!94345 (=> (not res!47760) (not e!61593))))

(assert (=> b!94345 (= res!47760 (not (contains!780 lt!46748 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!9442 () Bool)

(assert (=> bm!9442 (= call!9445 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94346 () Bool)

(assert (=> b!94346 (= e!61594 (= lt!46748 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94347 () Bool)

(assert (=> b!94347 (= e!61598 e!61594)))

(declare-fun c!15738 () Bool)

(assert (=> b!94347 (= c!15738 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94348 () Bool)

(assert (=> b!94348 (= e!61596 e!61595)))

(declare-fun c!15736 () Bool)

(assert (=> b!94348 (= c!15736 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24621 c!15737) b!94342))

(assert (= (and d!24621 (not c!15737)) b!94348))

(assert (= (and b!94348 c!15736) b!94343))

(assert (= (and b!94348 (not c!15736)) b!94340))

(assert (= (or b!94343 b!94340) bm!9442))

(assert (= (and d!24621 res!47759) b!94345))

(assert (= (and b!94345 res!47760) b!94344))

(assert (= (and b!94344 res!47757) b!94337))

(assert (= (and b!94344 c!15739) b!94339))

(assert (= (and b!94344 (not c!15739)) b!94347))

(assert (= (and b!94339 res!47758) b!94341))

(assert (= (and b!94347 c!15738) b!94346))

(assert (= (and b!94347 (not c!15738)) b!94338))

(declare-fun b_lambda!4151 () Bool)

(assert (=> (not b_lambda!4151) (not b!94341)))

(assert (=> b!94341 t!5445))

(declare-fun b_and!5753 () Bool)

(assert (= b_and!5749 (and (=> t!5445 result!3177) b_and!5753)))

(assert (=> b!94341 t!5447))

(declare-fun b_and!5755 () Bool)

(assert (= b_and!5751 (and (=> t!5447 result!3181) b_and!5755)))

(declare-fun b_lambda!4153 () Bool)

(assert (=> (not b_lambda!4153) (not b!94343)))

(assert (=> b!94343 t!5445))

(declare-fun b_and!5757 () Bool)

(assert (= b_and!5753 (and (=> t!5445 result!3177) b_and!5757)))

(assert (=> b!94343 t!5447))

(declare-fun b_and!5759 () Bool)

(assert (= b_and!5755 (and (=> t!5447 result!3181) b_and!5759)))

(declare-fun m!101449 () Bool)

(assert (=> b!94345 m!101449))

(declare-fun m!101451 () Bool)

(assert (=> d!24621 m!101451))

(assert (=> d!24621 m!101173))

(assert (=> b!94343 m!101289))

(declare-fun m!101453 () Bool)

(assert (=> b!94343 m!101453))

(assert (=> b!94343 m!101163))

(assert (=> b!94343 m!101289))

(assert (=> b!94343 m!101163))

(assert (=> b!94343 m!101291))

(declare-fun m!101455 () Bool)

(assert (=> b!94343 m!101455))

(declare-fun m!101457 () Bool)

(assert (=> b!94343 m!101457))

(assert (=> b!94343 m!101269))

(assert (=> b!94343 m!101457))

(declare-fun m!101459 () Bool)

(assert (=> b!94343 m!101459))

(assert (=> b!94341 m!101269))

(assert (=> b!94341 m!101289))

(assert (=> b!94341 m!101269))

(declare-fun m!101461 () Bool)

(assert (=> b!94341 m!101461))

(assert (=> b!94341 m!101163))

(assert (=> b!94341 m!101289))

(assert (=> b!94341 m!101163))

(assert (=> b!94341 m!101291))

(assert (=> b!94337 m!101269))

(assert (=> b!94337 m!101269))

(assert (=> b!94337 m!101331))

(declare-fun m!101463 () Bool)

(assert (=> b!94346 m!101463))

(assert (=> b!94348 m!101269))

(assert (=> b!94348 m!101269))

(assert (=> b!94348 m!101331))

(assert (=> b!94339 m!101269))

(assert (=> b!94339 m!101269))

(declare-fun m!101465 () Bool)

(assert (=> b!94339 m!101465))

(assert (=> bm!9442 m!101463))

(declare-fun m!101467 () Bool)

(assert (=> b!94338 m!101467))

(assert (=> bm!9366 d!24621))

(declare-fun lt!46812 () SeekEntryResult!245)

(declare-fun e!61618 () Bool)

(declare-fun b!94383 () Bool)

(assert (=> b!94383 (= e!61618 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46812)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94384 () Bool)

(declare-fun e!61617 () Unit!2786)

(declare-fun Unit!2797 () Unit!2786)

(assert (=> b!94384 (= e!61617 Unit!2797)))

(declare-fun lt!46836 () Unit!2786)

(assert (=> b!94384 (= lt!46836 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun call!9457 () SeekEntryResult!245)

(assert (=> b!94384 (= lt!46812 call!9457)))

(declare-fun res!47785 () Bool)

(assert (=> b!94384 (= res!47785 ((_ is Found!245) lt!46812))))

(assert (=> b!94384 (=> (not res!47785) (not e!61618))))

(assert (=> b!94384 e!61618))

(declare-fun lt!46824 () Unit!2786)

(assert (=> b!94384 (= lt!46824 lt!46836)))

(assert (=> b!94384 false))

(declare-fun bm!9451 () Bool)

(declare-fun call!9455 () Bool)

(assert (=> bm!9451 (= call!9455 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94385 () Bool)

(declare-fun res!47784 () Bool)

(declare-fun call!9456 () Bool)

(assert (=> b!94385 (= res!47784 call!9456)))

(assert (=> b!94385 (=> (not res!47784) (not e!61618))))

(declare-fun b!94386 () Bool)

(declare-fun e!61622 () Bool)

(assert (=> b!94386 (= e!61622 (not call!9455))))

(declare-fun b!94388 () Bool)

(declare-fun e!61615 () Unit!2786)

(declare-fun Unit!2798 () Unit!2786)

(assert (=> b!94388 (= e!61615 Unit!2798)))

(declare-fun c!15751 () Bool)

(declare-fun bm!9452 () Bool)

(declare-fun lt!46827 () SeekEntryResult!245)

(declare-fun c!15748 () Bool)

(assert (=> bm!9452 (= call!9456 (inRange!0 (ite c!15748 (index!3122 lt!46812) (ite c!15751 (index!3121 lt!46827) (index!3124 lt!46827))) (mask!6510 newMap!16)))))

(declare-fun b!94389 () Bool)

(declare-fun e!61621 () Bool)

(assert (=> b!94389 (= e!61621 e!61622)))

(declare-fun res!47780 () Bool)

(declare-fun call!9454 () Bool)

(assert (=> b!94389 (= res!47780 call!9454)))

(assert (=> b!94389 (=> (not res!47780) (not e!61622))))

(declare-fun b!94390 () Bool)

(declare-fun res!47787 () Bool)

(declare-fun e!61616 () Bool)

(assert (=> b!94390 (=> (not res!47787) (not e!61616))))

(declare-fun lt!46838 () tuple2!2280)

(assert (=> b!94390 (= res!47787 (contains!780 (map!1242 (_2!1151 lt!46838)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun bm!9453 () Bool)

(assert (=> bm!9453 (= call!9457 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun b!94391 () Bool)

(declare-fun res!47783 () Bool)

(assert (=> b!94391 (= res!47783 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!46827)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94391 (=> (not res!47783) (not e!61622))))

(declare-fun b!94392 () Bool)

(assert (=> b!94392 (= e!61616 (= (map!1242 (_2!1151 lt!46838)) (+!128 (map!1242 newMap!16) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9454 () Bool)

(assert (=> bm!9454 (= call!9454 call!9456)))

(declare-fun b!94393 () Bool)

(declare-fun res!47781 () Bool)

(declare-fun e!61620 () Bool)

(assert (=> b!94393 (=> (not res!47781) (not e!61620))))

(assert (=> b!94393 (= res!47781 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!46827)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94394 () Bool)

(declare-fun lt!46828 () Unit!2786)

(assert (=> b!94394 (= e!61617 lt!46828)))

(assert (=> b!94394 (= lt!46828 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94394 (= lt!46827 call!9457)))

(assert (=> b!94394 (= c!15751 ((_ is MissingZero!245) lt!46827))))

(declare-fun e!61619 () Bool)

(assert (=> b!94394 e!61619))

(declare-fun b!94395 () Bool)

(assert (=> b!94395 (= e!61621 ((_ is Undefined!245) lt!46827))))

(declare-fun d!24623 () Bool)

(assert (=> d!24623 e!61616))

(declare-fun res!47786 () Bool)

(assert (=> d!24623 (=> (not res!47786) (not e!61616))))

(assert (=> d!24623 (= res!47786 (_1!1151 lt!46838))))

(assert (=> d!24623 (= lt!46838 (tuple2!2281 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd (_size!465 newMap!16) #b00000000000000000000000000000001) (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (_vacant!465 newMap!16))))))

(declare-fun lt!46821 () Unit!2786)

(declare-fun lt!46822 () Unit!2786)

(assert (=> d!24623 (= lt!46821 lt!46822)))

(declare-fun lt!46831 () array!4183)

(declare-fun lt!46829 () array!4185)

(assert (=> d!24623 (contains!780 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(assert (=> d!24623 (= lt!46822 (lemmaValidKeyInArrayIsInListMap!99 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24623 (= lt!46829 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))))

(assert (=> d!24623 (= lt!46831 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun lt!46811 () Unit!2786)

(declare-fun lt!46820 () Unit!2786)

(assert (=> d!24623 (= lt!46811 lt!46820)))

(declare-fun lt!46815 () array!4183)

(assert (=> d!24623 (= (arrayCountValidKeys!0 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4183 (_ BitVec 32)) Unit!2786)

(assert (=> d!24623 (= lt!46820 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(assert (=> d!24623 (= lt!46815 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun lt!46837 () Unit!2786)

(declare-fun lt!46814 () Unit!2786)

(assert (=> d!24623 (= lt!46837 lt!46814)))

(declare-fun lt!46819 () array!4183)

(assert (=> d!24623 (arrayContainsKey!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4183 (_ BitVec 64) (_ BitVec 32)) Unit!2786)

(assert (=> d!24623 (= lt!46814 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(assert (=> d!24623 (= lt!46819 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun lt!46816 () Unit!2786)

(declare-fun lt!46833 () Unit!2786)

(assert (=> d!24623 (= lt!46816 lt!46833)))

(assert (=> d!24623 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!23 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2786)

(assert (=> d!24623 (= lt!46833 (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46825 () Unit!2786)

(declare-fun lt!46823 () Unit!2786)

(assert (=> d!24623 (= lt!46825 lt!46823)))

(assert (=> d!24623 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (mask!6510 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4183 (_ BitVec 32) (_ BitVec 32)) Unit!2786)

(assert (=> d!24623 (= lt!46823 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (mask!6510 newMap!16)))))

(declare-fun lt!46810 () Unit!2786)

(declare-fun lt!46830 () Unit!2786)

(assert (=> d!24623 (= lt!46810 lt!46830)))

(assert (=> d!24623 (= (arrayCountValidKeys!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4183 (_ BitVec 32) (_ BitVec 64)) Unit!2786)

(assert (=> d!24623 (= lt!46830 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!46826 () Unit!2786)

(declare-fun lt!46832 () Unit!2786)

(assert (=> d!24623 (= lt!46826 lt!46832)))

(declare-fun lt!46813 () (_ BitVec 32))

(declare-fun lt!46817 () List!1555)

(assert (=> d!24623 (arrayNoDuplicates!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) lt!46813 lt!46817)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4183 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1555) Unit!2786)

(assert (=> d!24623 (= lt!46832 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) lt!46813 lt!46817))))

(assert (=> d!24623 (= lt!46817 Nil!1552)))

(assert (=> d!24623 (= lt!46813 #b00000000000000000000000000000000)))

(declare-fun lt!46809 () Unit!2786)

(assert (=> d!24623 (= lt!46809 e!61615)))

(declare-fun c!15749 () Bool)

(assert (=> d!24623 (= c!15749 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!46834 () Unit!2786)

(assert (=> d!24623 (= lt!46834 e!61617)))

(assert (=> d!24623 (= c!15748 (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24623 (valid!384 newMap!16)))

(assert (=> d!24623 (= (updateHelperNewKey!39 newMap!16 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))) lt!46838)))

(declare-fun b!94387 () Bool)

(declare-fun c!15750 () Bool)

(assert (=> b!94387 (= c!15750 ((_ is MissingVacant!245) lt!46827))))

(assert (=> b!94387 (= e!61619 e!61621)))

(declare-fun b!94396 () Bool)

(assert (=> b!94396 (= e!61620 (not call!9455))))

(declare-fun b!94397 () Bool)

(declare-fun res!47782 () Bool)

(assert (=> b!94397 (=> (not res!47782) (not e!61616))))

(assert (=> b!94397 (= res!47782 (valid!384 (_2!1151 lt!46838)))))

(declare-fun b!94398 () Bool)

(declare-fun res!47779 () Bool)

(assert (=> b!94398 (=> (not res!47779) (not e!61620))))

(assert (=> b!94398 (= res!47779 call!9454)))

(assert (=> b!94398 (= e!61619 e!61620)))

(declare-fun b!94399 () Bool)

(declare-fun Unit!2799 () Unit!2786)

(assert (=> b!94399 (= e!61615 Unit!2799)))

(declare-fun lt!46818 () Unit!2786)

(declare-fun lemmaArrayContainsKeyThenInListMap!23 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2786)

(assert (=> b!94399 (= lt!46818 (lemmaArrayContainsKeyThenInListMap!23 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> b!94399 (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))

(declare-fun lt!46835 () Unit!2786)

(assert (=> b!94399 (= lt!46835 lt!46818)))

(assert (=> b!94399 false))

(assert (= (and d!24623 c!15748) b!94384))

(assert (= (and d!24623 (not c!15748)) b!94394))

(assert (= (and b!94384 res!47785) b!94385))

(assert (= (and b!94385 res!47784) b!94383))

(assert (= (and b!94394 c!15751) b!94398))

(assert (= (and b!94394 (not c!15751)) b!94387))

(assert (= (and b!94398 res!47779) b!94393))

(assert (= (and b!94393 res!47781) b!94396))

(assert (= (and b!94387 c!15750) b!94389))

(assert (= (and b!94387 (not c!15750)) b!94395))

(assert (= (and b!94389 res!47780) b!94391))

(assert (= (and b!94391 res!47783) b!94386))

(assert (= (or b!94398 b!94389) bm!9454))

(assert (= (or b!94396 b!94386) bm!9451))

(assert (= (or b!94385 bm!9454) bm!9452))

(assert (= (or b!94384 b!94394) bm!9453))

(assert (= (and d!24623 c!15749) b!94399))

(assert (= (and d!24623 (not c!15749)) b!94388))

(assert (= (and d!24623 res!47786) b!94397))

(assert (= (and b!94397 res!47782) b!94390))

(assert (= (and b!94390 res!47787) b!94392))

(declare-fun m!101469 () Bool)

(assert (=> b!94383 m!101469))

(declare-fun m!101471 () Bool)

(assert (=> b!94390 m!101471))

(assert (=> b!94390 m!101471))

(assert (=> b!94390 m!101143))

(declare-fun m!101473 () Bool)

(assert (=> b!94390 m!101473))

(declare-fun m!101475 () Bool)

(assert (=> b!94393 m!101475))

(declare-fun m!101477 () Bool)

(assert (=> b!94391 m!101477))

(declare-fun m!101479 () Bool)

(assert (=> b!94397 m!101479))

(assert (=> b!94394 m!101143))

(assert (=> b!94394 m!101403))

(assert (=> b!94399 m!101143))

(declare-fun m!101481 () Bool)

(assert (=> b!94399 m!101481))

(assert (=> b!94399 m!101281))

(assert (=> b!94399 m!101281))

(assert (=> b!94399 m!101143))

(declare-fun m!101483 () Bool)

(assert (=> b!94399 m!101483))

(assert (=> b!94392 m!101471))

(assert (=> b!94392 m!101151))

(assert (=> b!94392 m!101151))

(declare-fun m!101485 () Bool)

(assert (=> b!94392 m!101485))

(assert (=> d!24623 m!101143))

(assert (=> d!24623 m!101383))

(declare-fun m!101487 () Bool)

(assert (=> d!24623 m!101487))

(assert (=> d!24623 m!101143))

(declare-fun m!101489 () Bool)

(assert (=> d!24623 m!101489))

(assert (=> d!24623 m!101143))

(declare-fun m!101491 () Bool)

(assert (=> d!24623 m!101491))

(assert (=> d!24623 m!101143))

(declare-fun m!101493 () Bool)

(assert (=> d!24623 m!101493))

(assert (=> d!24623 m!101281))

(declare-fun m!101495 () Bool)

(assert (=> d!24623 m!101495))

(assert (=> d!24623 m!101143))

(assert (=> d!24623 m!101165))

(declare-fun m!101497 () Bool)

(assert (=> d!24623 m!101497))

(declare-fun m!101499 () Bool)

(assert (=> d!24623 m!101499))

(declare-fun m!101501 () Bool)

(assert (=> d!24623 m!101501))

(declare-fun m!101503 () Bool)

(assert (=> d!24623 m!101503))

(declare-fun m!101505 () Bool)

(assert (=> d!24623 m!101505))

(declare-fun m!101507 () Bool)

(assert (=> d!24623 m!101507))

(assert (=> d!24623 m!101281))

(assert (=> d!24623 m!101143))

(assert (=> d!24623 m!101483))

(assert (=> d!24623 m!101339))

(declare-fun m!101509 () Bool)

(assert (=> d!24623 m!101509))

(assert (=> d!24623 m!101281))

(assert (=> d!24623 m!101499))

(assert (=> d!24623 m!101501))

(declare-fun m!101511 () Bool)

(assert (=> d!24623 m!101511))

(declare-fun m!101513 () Bool)

(assert (=> d!24623 m!101513))

(declare-fun m!101515 () Bool)

(assert (=> d!24623 m!101515))

(assert (=> d!24623 m!101135))

(assert (=> d!24623 m!101143))

(declare-fun m!101517 () Bool)

(assert (=> d!24623 m!101517))

(assert (=> d!24623 m!101143))

(declare-fun m!101519 () Bool)

(assert (=> d!24623 m!101519))

(declare-fun m!101521 () Bool)

(assert (=> d!24623 m!101521))

(declare-fun m!101523 () Bool)

(assert (=> d!24623 m!101523))

(assert (=> b!94384 m!101143))

(assert (=> b!94384 m!101387))

(declare-fun m!101525 () Bool)

(assert (=> bm!9452 m!101525))

(assert (=> bm!9453 m!101143))

(assert (=> bm!9453 m!101389))

(assert (=> bm!9451 m!101143))

(assert (=> bm!9451 m!101383))

(assert (=> bm!9417 d!24623))

(declare-fun d!24625 () Bool)

(assert (=> d!24625 (= (inRange!0 (ite c!15718 (ite c!15710 (index!3122 lt!46689) (ite c!15721 (index!3121 lt!46697) (index!3124 lt!46697))) (ite c!15717 (index!3122 lt!46712) (ite c!15714 (index!3121 lt!46703) (index!3124 lt!46703)))) (mask!6510 newMap!16)) (and (bvsge (ite c!15718 (ite c!15710 (index!3122 lt!46689) (ite c!15721 (index!3121 lt!46697) (index!3124 lt!46697))) (ite c!15717 (index!3122 lt!46712) (ite c!15714 (index!3121 lt!46703) (index!3124 lt!46703)))) #b00000000000000000000000000000000) (bvslt (ite c!15718 (ite c!15710 (index!3122 lt!46689) (ite c!15721 (index!3121 lt!46697) (index!3124 lt!46697))) (ite c!15717 (index!3122 lt!46712) (ite c!15714 (index!3121 lt!46703) (index!3124 lt!46703)))) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9424 d!24625))

(declare-fun d!24627 () Bool)

(declare-fun e!61625 () Bool)

(assert (=> d!24627 e!61625))

(declare-fun res!47792 () Bool)

(assert (=> d!24627 (=> (not res!47792) (not e!61625))))

(declare-fun lt!46843 () SeekEntryResult!245)

(assert (=> d!24627 (= res!47792 ((_ is Found!245) lt!46843))))

(assert (=> d!24627 (= lt!46843 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun lt!46844 () Unit!2786)

(declare-fun choose!567 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2786)

(assert (=> d!24627 (= lt!46844 (choose!567 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24627 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24627 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) lt!46844)))

(declare-fun b!94404 () Bool)

(declare-fun res!47793 () Bool)

(assert (=> b!94404 (=> (not res!47793) (not e!61625))))

(assert (=> b!94404 (= res!47793 (inRange!0 (index!3122 lt!46843) (mask!6510 newMap!16)))))

(declare-fun b!94405 () Bool)

(assert (=> b!94405 (= e!61625 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46843)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94405 (and (bvsge (index!3122 lt!46843) #b00000000000000000000000000000000) (bvslt (index!3122 lt!46843) (size!2236 (_keys!4117 newMap!16))))))

(assert (= (and d!24627 res!47792) b!94404))

(assert (= (and b!94404 res!47793) b!94405))

(assert (=> d!24627 m!101143))

(assert (=> d!24627 m!101389))

(assert (=> d!24627 m!101143))

(declare-fun m!101527 () Bool)

(assert (=> d!24627 m!101527))

(declare-fun m!101529 () Bool)

(assert (=> d!24627 m!101529))

(declare-fun m!101531 () Bool)

(assert (=> b!94404 m!101531))

(declare-fun m!101533 () Bool)

(assert (=> b!94405 m!101533))

(assert (=> bm!9431 d!24627))

(declare-fun d!24629 () Bool)

(assert (=> d!24629 (= (apply!90 lt!46612 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3872 () Bool)

(assert (= bs!3872 d!24629))

(declare-fun m!101535 () Bool)

(assert (=> bs!3872 m!101535))

(assert (=> bs!3872 m!101535))

(declare-fun m!101537 () Bool)

(assert (=> bs!3872 m!101537))

(assert (=> b!94125 d!24629))

(declare-fun d!24631 () Bool)

(declare-fun e!61626 () Bool)

(assert (=> d!24631 e!61626))

(declare-fun res!47795 () Bool)

(assert (=> d!24631 (=> (not res!47795) (not e!61626))))

(declare-fun lt!46846 () ListLongMap!1489)

(assert (=> d!24631 (= res!47795 (contains!780 lt!46846 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!46848 () List!1554)

(assert (=> d!24631 (= lt!46846 (ListLongMap!1490 lt!46848))))

(declare-fun lt!46847 () Unit!2786)

(declare-fun lt!46845 () Unit!2786)

(assert (=> d!24631 (= lt!46847 lt!46845)))

(assert (=> d!24631 (= (getValueByKey!149 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24631 (= lt!46845 (lemmaContainsTupThenGetReturnValue!65 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24631 (= lt!46848 (insertStrictlySorted!68 (toList!760 lt!46602) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24631 (= (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46846)))

(declare-fun b!94406 () Bool)

(declare-fun res!47794 () Bool)

(assert (=> b!94406 (=> (not res!47794) (not e!61626))))

(assert (=> b!94406 (= res!47794 (= (getValueByKey!149 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94407 () Bool)

(assert (=> b!94407 (= e!61626 (contains!782 (toList!760 lt!46846) (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24631 res!47795) b!94406))

(assert (= (and b!94406 res!47794) b!94407))

(declare-fun m!101539 () Bool)

(assert (=> d!24631 m!101539))

(declare-fun m!101541 () Bool)

(assert (=> d!24631 m!101541))

(declare-fun m!101543 () Bool)

(assert (=> d!24631 m!101543))

(declare-fun m!101545 () Bool)

(assert (=> d!24631 m!101545))

(declare-fun m!101547 () Bool)

(assert (=> b!94406 m!101547))

(declare-fun m!101549 () Bool)

(assert (=> b!94407 m!101549))

(assert (=> b!94126 d!24631))

(declare-fun d!24633 () Bool)

(assert (=> d!24633 (= (apply!90 lt!46613 lt!46618) (get!1275 (getValueByKey!149 (toList!760 lt!46613) lt!46618)))))

(declare-fun bs!3873 () Bool)

(assert (= bs!3873 d!24633))

(declare-fun m!101551 () Bool)

(assert (=> bs!3873 m!101551))

(assert (=> bs!3873 m!101551))

(declare-fun m!101553 () Bool)

(assert (=> bs!3873 m!101553))

(assert (=> b!94126 d!24633))

(declare-fun d!24635 () Bool)

(declare-fun e!61627 () Bool)

(assert (=> d!24635 e!61627))

(declare-fun res!47797 () Bool)

(assert (=> d!24635 (=> (not res!47797) (not e!61627))))

(declare-fun lt!46850 () ListLongMap!1489)

(assert (=> d!24635 (= res!47797 (contains!780 lt!46850 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!46852 () List!1554)

(assert (=> d!24635 (= lt!46850 (ListLongMap!1490 lt!46852))))

(declare-fun lt!46851 () Unit!2786)

(declare-fun lt!46849 () Unit!2786)

(assert (=> d!24635 (= lt!46851 lt!46849)))

(assert (=> d!24635 (= (getValueByKey!149 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24635 (= lt!46849 (lemmaContainsTupThenGetReturnValue!65 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24635 (= lt!46852 (insertStrictlySorted!68 (toList!760 lt!46619) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24635 (= (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46850)))

(declare-fun b!94408 () Bool)

(declare-fun res!47796 () Bool)

(assert (=> b!94408 (=> (not res!47796) (not e!61627))))

(assert (=> b!94408 (= res!47796 (= (getValueByKey!149 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94409 () Bool)

(assert (=> b!94409 (= e!61627 (contains!782 (toList!760 lt!46850) (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24635 res!47797) b!94408))

(assert (= (and b!94408 res!47796) b!94409))

(declare-fun m!101555 () Bool)

(assert (=> d!24635 m!101555))

(declare-fun m!101557 () Bool)

(assert (=> d!24635 m!101557))

(declare-fun m!101559 () Bool)

(assert (=> d!24635 m!101559))

(declare-fun m!101561 () Bool)

(assert (=> d!24635 m!101561))

(declare-fun m!101563 () Bool)

(assert (=> b!94408 m!101563))

(declare-fun m!101565 () Bool)

(assert (=> b!94409 m!101565))

(assert (=> b!94126 d!24635))

(declare-fun d!24637 () Bool)

(declare-fun e!61628 () Bool)

(assert (=> d!24637 e!61628))

(declare-fun res!47799 () Bool)

(assert (=> d!24637 (=> (not res!47799) (not e!61628))))

(declare-fun lt!46854 () ListLongMap!1489)

(assert (=> d!24637 (= res!47799 (contains!780 lt!46854 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!46856 () List!1554)

(assert (=> d!24637 (= lt!46854 (ListLongMap!1490 lt!46856))))

(declare-fun lt!46855 () Unit!2786)

(declare-fun lt!46853 () Unit!2786)

(assert (=> d!24637 (= lt!46855 lt!46853)))

(assert (=> d!24637 (= (getValueByKey!149 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24637 (= lt!46853 (lemmaContainsTupThenGetReturnValue!65 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24637 (= lt!46856 (insertStrictlySorted!68 (toList!760 lt!46613) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24637 (= (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46854)))

(declare-fun b!94410 () Bool)

(declare-fun res!47798 () Bool)

(assert (=> b!94410 (=> (not res!47798) (not e!61628))))

(assert (=> b!94410 (= res!47798 (= (getValueByKey!149 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94411 () Bool)

(assert (=> b!94411 (= e!61628 (contains!782 (toList!760 lt!46854) (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24637 res!47799) b!94410))

(assert (= (and b!94410 res!47798) b!94411))

(declare-fun m!101567 () Bool)

(assert (=> d!24637 m!101567))

(declare-fun m!101569 () Bool)

(assert (=> d!24637 m!101569))

(declare-fun m!101571 () Bool)

(assert (=> d!24637 m!101571))

(declare-fun m!101573 () Bool)

(assert (=> d!24637 m!101573))

(declare-fun m!101575 () Bool)

(assert (=> b!94410 m!101575))

(declare-fun m!101577 () Bool)

(assert (=> b!94411 m!101577))

(assert (=> b!94126 d!24637))

(declare-fun d!24639 () Bool)

(assert (=> d!24639 (= (apply!90 lt!46619 lt!46605) (get!1275 (getValueByKey!149 (toList!760 lt!46619) lt!46605)))))

(declare-fun bs!3874 () Bool)

(assert (= bs!3874 d!24639))

(declare-fun m!101579 () Bool)

(assert (=> bs!3874 m!101579))

(assert (=> bs!3874 m!101579))

(declare-fun m!101581 () Bool)

(assert (=> bs!3874 m!101581))

(assert (=> b!94126 d!24639))

(declare-fun d!24641 () Bool)

(assert (=> d!24641 (= (apply!90 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46609) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46609)))))

(declare-fun bs!3875 () Bool)

(assert (= bs!3875 d!24641))

(declare-fun m!101583 () Bool)

(assert (=> bs!3875 m!101583))

(assert (=> bs!3875 m!101583))

(declare-fun m!101585 () Bool)

(assert (=> bs!3875 m!101585))

(assert (=> b!94126 d!24641))

(declare-fun d!24643 () Bool)

(assert (=> d!24643 (= (apply!90 lt!46615 lt!46609) (get!1275 (getValueByKey!149 (toList!760 lt!46615) lt!46609)))))

(declare-fun bs!3876 () Bool)

(assert (= bs!3876 d!24643))

(declare-fun m!101587 () Bool)

(assert (=> bs!3876 m!101587))

(assert (=> bs!3876 m!101587))

(declare-fun m!101589 () Bool)

(assert (=> bs!3876 m!101589))

(assert (=> b!94126 d!24643))

(declare-fun d!24645 () Bool)

(assert (=> d!24645 (= (apply!90 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46605) (apply!90 lt!46619 lt!46605))))

(declare-fun lt!46859 () Unit!2786)

(declare-fun choose!568 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> d!24645 (= lt!46859 (choose!568 lt!46619 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46605))))

(declare-fun e!61631 () Bool)

(assert (=> d!24645 e!61631))

(declare-fun res!47802 () Bool)

(assert (=> d!24645 (=> (not res!47802) (not e!61631))))

(assert (=> d!24645 (= res!47802 (contains!780 lt!46619 lt!46605))))

(assert (=> d!24645 (= (addApplyDifferent!66 lt!46619 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46605) lt!46859)))

(declare-fun b!94415 () Bool)

(assert (=> b!94415 (= e!61631 (not (= lt!46605 lt!46611)))))

(assert (= (and d!24645 res!47802) b!94415))

(assert (=> d!24645 m!101327))

(assert (=> d!24645 m!101309))

(declare-fun m!101591 () Bool)

(assert (=> d!24645 m!101591))

(declare-fun m!101593 () Bool)

(assert (=> d!24645 m!101593))

(assert (=> d!24645 m!101309))

(assert (=> d!24645 m!101321))

(assert (=> b!94126 d!24645))

(declare-fun d!24647 () Bool)

(assert (=> d!24647 (contains!780 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46608)))

(declare-fun lt!46862 () Unit!2786)

(declare-fun choose!569 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> d!24647 (= lt!46862 (choose!569 lt!46602 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46608))))

(assert (=> d!24647 (contains!780 lt!46602 lt!46608)))

(assert (=> d!24647 (= (addStillContains!66 lt!46602 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46608) lt!46862)))

(declare-fun bs!3877 () Bool)

(assert (= bs!3877 d!24647))

(assert (=> bs!3877 m!101301))

(assert (=> bs!3877 m!101301))

(assert (=> bs!3877 m!101323))

(declare-fun m!101595 () Bool)

(assert (=> bs!3877 m!101595))

(declare-fun m!101597 () Bool)

(assert (=> bs!3877 m!101597))

(assert (=> b!94126 d!24647))

(declare-fun d!24649 () Bool)

(assert (=> d!24649 (= (apply!90 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46618) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46618)))))

(declare-fun bs!3878 () Bool)

(assert (= bs!3878 d!24649))

(declare-fun m!101599 () Bool)

(assert (=> bs!3878 m!101599))

(assert (=> bs!3878 m!101599))

(declare-fun m!101601 () Bool)

(assert (=> bs!3878 m!101601))

(assert (=> b!94126 d!24649))

(declare-fun d!24651 () Bool)

(assert (=> d!24651 (= (apply!90 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46605) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46605)))))

(declare-fun bs!3879 () Bool)

(assert (= bs!3879 d!24651))

(declare-fun m!101603 () Bool)

(assert (=> bs!3879 m!101603))

(assert (=> bs!3879 m!101603))

(declare-fun m!101605 () Bool)

(assert (=> bs!3879 m!101605))

(assert (=> b!94126 d!24651))

(declare-fun d!24653 () Bool)

(declare-fun e!61632 () Bool)

(assert (=> d!24653 e!61632))

(declare-fun res!47804 () Bool)

(assert (=> d!24653 (=> (not res!47804) (not e!61632))))

(declare-fun lt!46864 () ListLongMap!1489)

(assert (=> d!24653 (= res!47804 (contains!780 lt!46864 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!46866 () List!1554)

(assert (=> d!24653 (= lt!46864 (ListLongMap!1490 lt!46866))))

(declare-fun lt!46865 () Unit!2786)

(declare-fun lt!46863 () Unit!2786)

(assert (=> d!24653 (= lt!46865 lt!46863)))

(assert (=> d!24653 (= (getValueByKey!149 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24653 (= lt!46863 (lemmaContainsTupThenGetReturnValue!65 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24653 (= lt!46866 (insertStrictlySorted!68 (toList!760 lt!46615) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24653 (= (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46864)))

(declare-fun b!94417 () Bool)

(declare-fun res!47803 () Bool)

(assert (=> b!94417 (=> (not res!47803) (not e!61632))))

(assert (=> b!94417 (= res!47803 (= (getValueByKey!149 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94418 () Bool)

(assert (=> b!94418 (= e!61632 (contains!782 (toList!760 lt!46864) (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24653 res!47804) b!94417))

(assert (= (and b!94417 res!47803) b!94418))

(declare-fun m!101607 () Bool)

(assert (=> d!24653 m!101607))

(declare-fun m!101609 () Bool)

(assert (=> d!24653 m!101609))

(declare-fun m!101611 () Bool)

(assert (=> d!24653 m!101611))

(declare-fun m!101613 () Bool)

(assert (=> d!24653 m!101613))

(declare-fun m!101615 () Bool)

(assert (=> b!94417 m!101615))

(declare-fun m!101617 () Bool)

(assert (=> b!94418 m!101617))

(assert (=> b!94126 d!24653))

(declare-fun d!24655 () Bool)

(assert (=> d!24655 (= (apply!90 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46609) (apply!90 lt!46615 lt!46609))))

(declare-fun lt!46867 () Unit!2786)

(assert (=> d!24655 (= lt!46867 (choose!568 lt!46615 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46609))))

(declare-fun e!61633 () Bool)

(assert (=> d!24655 e!61633))

(declare-fun res!47805 () Bool)

(assert (=> d!24655 (=> (not res!47805) (not e!61633))))

(assert (=> d!24655 (= res!47805 (contains!780 lt!46615 lt!46609))))

(assert (=> d!24655 (= (addApplyDifferent!66 lt!46615 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46609) lt!46867)))

(declare-fun b!94419 () Bool)

(assert (=> b!94419 (= e!61633 (not (= lt!46609 lt!46607)))))

(assert (= (and d!24655 res!47805) b!94419))

(assert (=> d!24655 m!101305))

(assert (=> d!24655 m!101303))

(declare-fun m!101619 () Bool)

(assert (=> d!24655 m!101619))

(declare-fun m!101621 () Bool)

(assert (=> d!24655 m!101621))

(assert (=> d!24655 m!101303))

(assert (=> d!24655 m!101329))

(assert (=> b!94126 d!24655))

(declare-fun d!24657 () Bool)

(declare-fun e!61634 () Bool)

(assert (=> d!24657 e!61634))

(declare-fun res!47806 () Bool)

(assert (=> d!24657 (=> res!47806 e!61634)))

(declare-fun lt!46870 () Bool)

(assert (=> d!24657 (= res!47806 (not lt!46870))))

(declare-fun lt!46869 () Bool)

(assert (=> d!24657 (= lt!46870 lt!46869)))

(declare-fun lt!46868 () Unit!2786)

(declare-fun e!61635 () Unit!2786)

(assert (=> d!24657 (= lt!46868 e!61635)))

(declare-fun c!15752 () Bool)

(assert (=> d!24657 (= c!15752 lt!46869)))

(assert (=> d!24657 (= lt!46869 (containsKey!152 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(assert (=> d!24657 (= (contains!780 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46608) lt!46870)))

(declare-fun b!94420 () Bool)

(declare-fun lt!46871 () Unit!2786)

(assert (=> b!94420 (= e!61635 lt!46871)))

(assert (=> b!94420 (= lt!46871 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(assert (=> b!94420 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(declare-fun b!94421 () Bool)

(declare-fun Unit!2800 () Unit!2786)

(assert (=> b!94421 (= e!61635 Unit!2800)))

(declare-fun b!94422 () Bool)

(assert (=> b!94422 (= e!61634 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608)))))

(assert (= (and d!24657 c!15752) b!94420))

(assert (= (and d!24657 (not c!15752)) b!94421))

(assert (= (and d!24657 (not res!47806)) b!94422))

(declare-fun m!101623 () Bool)

(assert (=> d!24657 m!101623))

(declare-fun m!101625 () Bool)

(assert (=> b!94420 m!101625))

(declare-fun m!101627 () Bool)

(assert (=> b!94420 m!101627))

(assert (=> b!94420 m!101627))

(declare-fun m!101629 () Bool)

(assert (=> b!94420 m!101629))

(assert (=> b!94422 m!101627))

(assert (=> b!94422 m!101627))

(assert (=> b!94422 m!101629))

(assert (=> b!94126 d!24657))

(assert (=> b!94126 d!24621))

(declare-fun d!24659 () Bool)

(assert (=> d!24659 (= (apply!90 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46618) (apply!90 lt!46613 lt!46618))))

(declare-fun lt!46872 () Unit!2786)

(assert (=> d!24659 (= lt!46872 (choose!568 lt!46613 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46618))))

(declare-fun e!61636 () Bool)

(assert (=> d!24659 e!61636))

(declare-fun res!47807 () Bool)

(assert (=> d!24659 (=> (not res!47807) (not e!61636))))

(assert (=> d!24659 (= res!47807 (contains!780 lt!46613 lt!46618))))

(assert (=> d!24659 (= (addApplyDifferent!66 lt!46613 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46618) lt!46872)))

(declare-fun b!94423 () Bool)

(assert (=> b!94423 (= e!61636 (not (= lt!46618 lt!46603)))))

(assert (= (and d!24659 res!47807) b!94423))

(assert (=> d!24659 m!101315))

(assert (=> d!24659 m!101311))

(declare-fun m!101631 () Bool)

(assert (=> d!24659 m!101631))

(declare-fun m!101633 () Bool)

(assert (=> d!24659 m!101633))

(assert (=> d!24659 m!101311))

(assert (=> d!24659 m!101313))

(assert (=> b!94126 d!24659))

(assert (=> bm!9435 d!24593))

(declare-fun b!94424 () Bool)

(declare-fun e!61638 () Bool)

(declare-fun call!9458 () Bool)

(assert (=> b!94424 (= e!61638 call!9458)))

(declare-fun b!94425 () Bool)

(assert (=> b!94425 (= e!61638 call!9458)))

(declare-fun b!94426 () Bool)

(declare-fun e!61637 () Bool)

(assert (=> b!94426 (= e!61637 e!61638)))

(declare-fun c!15753 () Bool)

(assert (=> b!94426 (= c!15753 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94427 () Bool)

(declare-fun e!61639 () Bool)

(assert (=> b!94427 (= e!61639 e!61637)))

(declare-fun res!47810 () Bool)

(assert (=> b!94427 (=> (not res!47810) (not e!61637))))

(declare-fun e!61640 () Bool)

(assert (=> b!94427 (= res!47810 (not e!61640))))

(declare-fun res!47808 () Bool)

(assert (=> b!94427 (=> (not res!47808) (not e!61640))))

(assert (=> b!94427 (= res!47808 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94428 () Bool)

(assert (=> b!94428 (= e!61640 (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9455 () Bool)

(assert (=> bm!9455 (= call!9458 (arrayNoDuplicates!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15753 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) Nil!1552) Nil!1552)))))

(declare-fun d!24661 () Bool)

(declare-fun res!47809 () Bool)

(assert (=> d!24661 (=> res!47809 e!61639)))

(assert (=> d!24661 (= res!47809 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24661 (= (arrayNoDuplicates!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 Nil!1552) e!61639)))

(assert (= (and d!24661 (not res!47809)) b!94427))

(assert (= (and b!94427 res!47808) b!94428))

(assert (= (and b!94427 res!47810) b!94426))

(assert (= (and b!94426 c!15753) b!94424))

(assert (= (and b!94426 (not c!15753)) b!94425))

(assert (= (or b!94424 b!94425) bm!9455))

(declare-fun m!101635 () Bool)

(assert (=> b!94426 m!101635))

(assert (=> b!94426 m!101635))

(declare-fun m!101637 () Bool)

(assert (=> b!94426 m!101637))

(assert (=> b!94427 m!101635))

(assert (=> b!94427 m!101635))

(assert (=> b!94427 m!101637))

(assert (=> b!94428 m!101635))

(assert (=> b!94428 m!101635))

(declare-fun m!101639 () Bool)

(assert (=> b!94428 m!101639))

(assert (=> bm!9455 m!101635))

(declare-fun m!101641 () Bool)

(assert (=> bm!9455 m!101641))

(assert (=> b!94140 d!24661))

(declare-fun b!94441 () Bool)

(declare-fun c!15762 () Bool)

(declare-fun lt!46881 () (_ BitVec 64))

(assert (=> b!94441 (= c!15762 (= lt!46881 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61648 () SeekEntryResult!245)

(declare-fun e!61649 () SeekEntryResult!245)

(assert (=> b!94441 (= e!61648 e!61649)))

(declare-fun b!94442 () Bool)

(declare-fun lt!46879 () SeekEntryResult!245)

(assert (=> b!94442 (= e!61649 (MissingZero!245 (index!3123 lt!46879)))))

(declare-fun b!94443 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4183 (_ BitVec 32)) SeekEntryResult!245)

(assert (=> b!94443 (= e!61649 (seekKeyOrZeroReturnVacant!0 (x!12649 lt!46879) (index!3123 lt!46879) (index!3123 lt!46879) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun b!94445 () Bool)

(assert (=> b!94445 (= e!61648 (Found!245 (index!3123 lt!46879)))))

(declare-fun b!94446 () Bool)

(declare-fun e!61647 () SeekEntryResult!245)

(assert (=> b!94446 (= e!61647 Undefined!245)))

(declare-fun d!24663 () Bool)

(declare-fun lt!46880 () SeekEntryResult!245)

(assert (=> d!24663 (and (or ((_ is Undefined!245) lt!46880) (not ((_ is Found!245) lt!46880)) (and (bvsge (index!3122 lt!46880) #b00000000000000000000000000000000) (bvslt (index!3122 lt!46880) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!46880) ((_ is Found!245) lt!46880) (not ((_ is MissingZero!245) lt!46880)) (and (bvsge (index!3121 lt!46880) #b00000000000000000000000000000000) (bvslt (index!3121 lt!46880) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!46880) ((_ is Found!245) lt!46880) ((_ is MissingZero!245) lt!46880) (not ((_ is MissingVacant!245) lt!46880)) (and (bvsge (index!3124 lt!46880) #b00000000000000000000000000000000) (bvslt (index!3124 lt!46880) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!46880) (ite ((_ is Found!245) lt!46880) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46880)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite ((_ is MissingZero!245) lt!46880) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!46880)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!46880) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!46880)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24663 (= lt!46880 e!61647)))

(declare-fun c!15761 () Bool)

(assert (=> d!24663 (= c!15761 (and ((_ is Intermediate!245) lt!46879) (undefined!1057 lt!46879)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4183 (_ BitVec 32)) SeekEntryResult!245)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!24663 (= lt!46879 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (=> d!24663 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24663 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)) lt!46880)))

(declare-fun b!94444 () Bool)

(assert (=> b!94444 (= e!61647 e!61648)))

(assert (=> b!94444 (= lt!46881 (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!46879)))))

(declare-fun c!15760 () Bool)

(assert (=> b!94444 (= c!15760 (= lt!46881 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24663 c!15761) b!94446))

(assert (= (and d!24663 (not c!15761)) b!94444))

(assert (= (and b!94444 c!15760) b!94445))

(assert (= (and b!94444 (not c!15760)) b!94441))

(assert (= (and b!94441 c!15762) b!94442))

(assert (= (and b!94441 (not c!15762)) b!94443))

(assert (=> b!94443 m!101143))

(declare-fun m!101643 () Bool)

(assert (=> b!94443 m!101643))

(declare-fun m!101645 () Bool)

(assert (=> d!24663 m!101645))

(declare-fun m!101647 () Bool)

(assert (=> d!24663 m!101647))

(assert (=> d!24663 m!101143))

(declare-fun m!101649 () Bool)

(assert (=> d!24663 m!101649))

(assert (=> d!24663 m!101529))

(assert (=> d!24663 m!101649))

(assert (=> d!24663 m!101143))

(declare-fun m!101651 () Bool)

(assert (=> d!24663 m!101651))

(declare-fun m!101653 () Bool)

(assert (=> d!24663 m!101653))

(declare-fun m!101655 () Bool)

(assert (=> b!94444 m!101655))

(assert (=> b!94256 d!24663))

(declare-fun d!24665 () Bool)

(declare-fun e!61650 () Bool)

(assert (=> d!24665 e!61650))

(declare-fun res!47811 () Bool)

(assert (=> d!24665 (=> res!47811 e!61650)))

(declare-fun lt!46884 () Bool)

(assert (=> d!24665 (= res!47811 (not lt!46884))))

(declare-fun lt!46883 () Bool)

(assert (=> d!24665 (= lt!46884 lt!46883)))

(declare-fun lt!46882 () Unit!2786)

(declare-fun e!61651 () Unit!2786)

(assert (=> d!24665 (= lt!46882 e!61651)))

(declare-fun c!15763 () Bool)

(assert (=> d!24665 (= c!15763 lt!46883)))

(assert (=> d!24665 (= lt!46883 (containsKey!152 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24665 (= (contains!780 lt!46612 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!46884)))

(declare-fun b!94447 () Bool)

(declare-fun lt!46885 () Unit!2786)

(assert (=> b!94447 (= e!61651 lt!46885)))

(assert (=> b!94447 (= lt!46885 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94447 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94448 () Bool)

(declare-fun Unit!2801 () Unit!2786)

(assert (=> b!94448 (= e!61651 Unit!2801)))

(declare-fun b!94449 () Bool)

(assert (=> b!94449 (= e!61650 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24665 c!15763) b!94447))

(assert (= (and d!24665 (not c!15763)) b!94448))

(assert (= (and d!24665 (not res!47811)) b!94449))

(assert (=> d!24665 m!101269))

(declare-fun m!101657 () Bool)

(assert (=> d!24665 m!101657))

(assert (=> b!94447 m!101269))

(declare-fun m!101659 () Bool)

(assert (=> b!94447 m!101659))

(assert (=> b!94447 m!101269))

(assert (=> b!94447 m!101429))

(assert (=> b!94447 m!101429))

(declare-fun m!101661 () Bool)

(assert (=> b!94447 m!101661))

(assert (=> b!94449 m!101269))

(assert (=> b!94449 m!101429))

(assert (=> b!94449 m!101429))

(assert (=> b!94449 m!101661))

(assert (=> b!94119 d!24665))

(assert (=> d!24583 d!24587))

(declare-fun d!24667 () Bool)

(assert (=> d!24667 (not (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!24667 true))

(declare-fun _$68!85 () Unit!2786)

(assert (=> d!24667 (= (choose!68 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552)) _$68!85)))

(declare-fun bs!3880 () Bool)

(assert (= bs!3880 d!24667))

(assert (=> bs!3880 m!101143))

(assert (=> bs!3880 m!101147))

(assert (=> d!24583 d!24667))

(declare-fun d!24669 () Bool)

(declare-fun e!61662 () Bool)

(assert (=> d!24669 e!61662))

(declare-fun c!15769 () Bool)

(declare-fun lt!46891 () SeekEntryResult!245)

(assert (=> d!24669 (= c!15769 ((_ is MissingZero!245) lt!46891))))

(assert (=> d!24669 (= lt!46891 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun lt!46890 () Unit!2786)

(declare-fun choose!570 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2786)

(assert (=> d!24669 (= lt!46890 (choose!570 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24669 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24669 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) lt!46890)))

(declare-fun b!94466 () Bool)

(declare-fun e!61663 () Bool)

(declare-fun call!9463 () Bool)

(assert (=> b!94466 (= e!61663 (not call!9463))))

(declare-fun b!94467 () Bool)

(declare-fun e!61660 () Bool)

(assert (=> b!94467 (= e!61660 ((_ is Undefined!245) lt!46891))))

(declare-fun b!94468 () Bool)

(declare-fun res!47820 () Bool)

(assert (=> b!94468 (=> (not res!47820) (not e!61663))))

(declare-fun call!9464 () Bool)

(assert (=> b!94468 (= res!47820 call!9464)))

(assert (=> b!94468 (= e!61660 e!61663)))

(declare-fun b!94469 () Bool)

(declare-fun res!47823 () Bool)

(assert (=> b!94469 (=> (not res!47823) (not e!61663))))

(assert (=> b!94469 (= res!47823 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!46891)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94469 (and (bvsge (index!3124 lt!46891) #b00000000000000000000000000000000) (bvslt (index!3124 lt!46891) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94470 () Bool)

(assert (=> b!94470 (= e!61662 e!61660)))

(declare-fun c!15768 () Bool)

(assert (=> b!94470 (= c!15768 ((_ is MissingVacant!245) lt!46891))))

(declare-fun bm!9460 () Bool)

(assert (=> bm!9460 (= call!9463 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94471 () Bool)

(declare-fun e!61661 () Bool)

(assert (=> b!94471 (= e!61661 (not call!9463))))

(declare-fun b!94472 () Bool)

(assert (=> b!94472 (and (bvsge (index!3121 lt!46891) #b00000000000000000000000000000000) (bvslt (index!3121 lt!46891) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!47821 () Bool)

(assert (=> b!94472 (= res!47821 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!46891)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94472 (=> (not res!47821) (not e!61661))))

(declare-fun bm!9461 () Bool)

(assert (=> bm!9461 (= call!9464 (inRange!0 (ite c!15769 (index!3121 lt!46891) (index!3124 lt!46891)) (mask!6510 newMap!16)))))

(declare-fun b!94473 () Bool)

(assert (=> b!94473 (= e!61662 e!61661)))

(declare-fun res!47822 () Bool)

(assert (=> b!94473 (= res!47822 call!9464)))

(assert (=> b!94473 (=> (not res!47822) (not e!61661))))

(assert (= (and d!24669 c!15769) b!94473))

(assert (= (and d!24669 (not c!15769)) b!94470))

(assert (= (and b!94473 res!47822) b!94472))

(assert (= (and b!94472 res!47821) b!94471))

(assert (= (and b!94470 c!15768) b!94468))

(assert (= (and b!94470 (not c!15768)) b!94467))

(assert (= (and b!94468 res!47820) b!94469))

(assert (= (and b!94469 res!47823) b!94466))

(assert (= (or b!94473 b!94468) bm!9461))

(assert (= (or b!94471 b!94466) bm!9460))

(assert (=> d!24669 m!101143))

(assert (=> d!24669 m!101389))

(assert (=> d!24669 m!101143))

(declare-fun m!101663 () Bool)

(assert (=> d!24669 m!101663))

(assert (=> d!24669 m!101529))

(assert (=> bm!9460 m!101143))

(assert (=> bm!9460 m!101383))

(declare-fun m!101665 () Bool)

(assert (=> b!94469 m!101665))

(declare-fun m!101667 () Bool)

(assert (=> bm!9461 m!101667))

(declare-fun m!101669 () Bool)

(assert (=> b!94472 m!101669))

(assert (=> bm!9421 d!24669))

(declare-fun d!24671 () Bool)

(declare-fun res!47824 () Bool)

(declare-fun e!61664 () Bool)

(assert (=> d!24671 (=> res!47824 e!61664)))

(assert (=> d!24671 (= res!47824 (= (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24671 (= (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61664)))

(declare-fun b!94474 () Bool)

(declare-fun e!61665 () Bool)

(assert (=> b!94474 (= e!61664 e!61665)))

(declare-fun res!47825 () Bool)

(assert (=> b!94474 (=> (not res!47825) (not e!61665))))

(assert (=> b!94474 (= res!47825 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94475 () Bool)

(assert (=> b!94475 (= e!61665 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24671 (not res!47824)) b!94474))

(assert (= (and b!94474 res!47825) b!94475))

(assert (=> d!24671 m!101635))

(assert (=> b!94475 m!101143))

(declare-fun m!101671 () Bool)

(assert (=> b!94475 m!101671))

(assert (=> bm!9430 d!24671))

(declare-fun d!24673 () Bool)

(declare-fun e!61666 () Bool)

(assert (=> d!24673 e!61666))

(declare-fun res!47827 () Bool)

(assert (=> d!24673 (=> (not res!47827) (not e!61666))))

(declare-fun lt!46893 () ListLongMap!1489)

(assert (=> d!24673 (= res!47827 (contains!780 lt!46893 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!46895 () List!1554)

(assert (=> d!24673 (= lt!46893 (ListLongMap!1490 lt!46895))))

(declare-fun lt!46894 () Unit!2786)

(declare-fun lt!46892 () Unit!2786)

(assert (=> d!24673 (= lt!46894 lt!46892)))

(assert (=> d!24673 (= (getValueByKey!149 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24673 (= lt!46892 (lemmaContainsTupThenGetReturnValue!65 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24673 (= lt!46895 (insertStrictlySorted!68 (toList!760 call!9428) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24673 (= (+!128 call!9428 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!46893)))

(declare-fun b!94476 () Bool)

(declare-fun res!47826 () Bool)

(assert (=> b!94476 (=> (not res!47826) (not e!61666))))

(assert (=> b!94476 (= res!47826 (= (getValueByKey!149 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94477 () Bool)

(assert (=> b!94477 (= e!61666 (contains!782 (toList!760 lt!46893) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24673 res!47827) b!94476))

(assert (= (and b!94476 res!47826) b!94477))

(declare-fun m!101673 () Bool)

(assert (=> d!24673 m!101673))

(declare-fun m!101675 () Bool)

(assert (=> d!24673 m!101675))

(declare-fun m!101677 () Bool)

(assert (=> d!24673 m!101677))

(declare-fun m!101679 () Bool)

(assert (=> d!24673 m!101679))

(declare-fun m!101681 () Bool)

(assert (=> b!94476 m!101681))

(declare-fun m!101683 () Bool)

(assert (=> b!94477 m!101683))

(assert (=> b!94271 d!24673))

(declare-fun d!24675 () Bool)

(assert (=> d!24675 (= (apply!90 lt!46612 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3881 () Bool)

(assert (= bs!3881 d!24675))

(declare-fun m!101685 () Bool)

(assert (=> bs!3881 m!101685))

(assert (=> bs!3881 m!101685))

(declare-fun m!101687 () Bool)

(assert (=> bs!3881 m!101687))

(assert (=> b!94117 d!24675))

(declare-fun d!24677 () Bool)

(assert (=> d!24677 (= (get!1273 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2763 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94280 d!24677))

(declare-fun d!24679 () Bool)

(assert (=> d!24679 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46898 () Unit!2786)

(declare-fun choose!571 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2786)

(assert (=> d!24679 (= lt!46898 (choose!571 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46710 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24679 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24679 (= (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46710 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)) lt!46898)))

(declare-fun bs!3882 () Bool)

(assert (= bs!3882 d!24679))

(assert (=> bs!3882 m!101529))

(assert (=> bs!3882 m!101281))

(declare-fun m!101689 () Bool)

(assert (=> bs!3882 m!101689))

(assert (=> bs!3882 m!101165))

(declare-fun m!101691 () Bool)

(assert (=> bs!3882 m!101691))

(assert (=> bs!3882 m!101281))

(assert (=> bs!3882 m!101165))

(declare-fun m!101693 () Bool)

(assert (=> bs!3882 m!101693))

(assert (=> b!94254 d!24679))

(declare-fun b!94486 () Bool)

(declare-fun e!61671 () (_ BitVec 32))

(declare-fun call!9467 () (_ BitVec 32))

(assert (=> b!94486 (= e!61671 (bvadd #b00000000000000000000000000000001 call!9467))))

(declare-fun b!94487 () Bool)

(declare-fun e!61672 () (_ BitVec 32))

(assert (=> b!94487 (= e!61672 #b00000000000000000000000000000000)))

(declare-fun d!24681 () Bool)

(declare-fun lt!46901 () (_ BitVec 32))

(assert (=> d!24681 (and (bvsge lt!46901 #b00000000000000000000000000000000) (bvsle lt!46901 (bvsub (size!2236 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24681 (= lt!46901 e!61672)))

(declare-fun c!15775 () Bool)

(assert (=> d!24681 (= c!15775 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24681 (and (bvsle #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2236 (_keys!4117 newMap!16)) (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24681 (= (arrayCountValidKeys!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) lt!46901)))

(declare-fun b!94488 () Bool)

(assert (=> b!94488 (= e!61671 call!9467)))

(declare-fun b!94489 () Bool)

(assert (=> b!94489 (= e!61672 e!61671)))

(declare-fun c!15774 () Bool)

(assert (=> b!94489 (= c!15774 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9464 () Bool)

(assert (=> bm!9464 (= call!9467 (arrayCountValidKeys!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (= (and d!24681 c!15775) b!94487))

(assert (= (and d!24681 (not c!15775)) b!94489))

(assert (= (and b!94489 c!15774) b!94486))

(assert (= (and b!94489 (not c!15774)) b!94488))

(assert (= (or b!94486 b!94488) bm!9464))

(assert (=> b!94489 m!101635))

(assert (=> b!94489 m!101635))

(assert (=> b!94489 m!101637))

(declare-fun m!101695 () Bool)

(assert (=> bm!9464 m!101695))

(assert (=> b!94138 d!24681))

(declare-fun d!24683 () Bool)

(declare-fun lt!46904 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!98 (List!1555) (InoxSet (_ BitVec 64)))

(assert (=> d!24683 (= lt!46904 (select (content!98 Nil!1552) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61677 () Bool)

(assert (=> d!24683 (= lt!46904 e!61677)))

(declare-fun res!47832 () Bool)

(assert (=> d!24683 (=> (not res!47832) (not e!61677))))

(assert (=> d!24683 (= res!47832 ((_ is Cons!1551) Nil!1552))))

(assert (=> d!24683 (= (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!46904)))

(declare-fun b!94494 () Bool)

(declare-fun e!61678 () Bool)

(assert (=> b!94494 (= e!61677 e!61678)))

(declare-fun res!47833 () Bool)

(assert (=> b!94494 (=> res!47833 e!61678)))

(assert (=> b!94494 (= res!47833 (= (h!2143 Nil!1552) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94495 () Bool)

(assert (=> b!94495 (= e!61678 (contains!781 (t!5449 Nil!1552) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24683 res!47832) b!94494))

(assert (= (and b!94494 (not res!47833)) b!94495))

(declare-fun m!101697 () Bool)

(assert (=> d!24683 m!101697))

(assert (=> d!24683 m!101143))

(declare-fun m!101699 () Bool)

(assert (=> d!24683 m!101699))

(assert (=> b!94495 m!101143))

(declare-fun m!101701 () Bool)

(assert (=> b!94495 m!101701))

(assert (=> b!94068 d!24683))

(declare-fun d!24685 () Bool)

(assert (=> d!24685 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46907 () Unit!2786)

(declare-fun choose!572 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2786)

(assert (=> d!24685 (= lt!46907 (choose!572 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24685 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24685 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!46907)))

(declare-fun bs!3883 () Bool)

(assert (= bs!3883 d!24685))

(assert (=> bs!3883 m!101165))

(declare-fun m!101703 () Bool)

(assert (=> bs!3883 m!101703))

(assert (=> bs!3883 m!101529))

(assert (=> bs!3883 m!101281))

(declare-fun m!101705 () Bool)

(assert (=> bs!3883 m!101705))

(assert (=> bs!3883 m!101165))

(declare-fun m!101707 () Bool)

(assert (=> bs!3883 m!101707))

(assert (=> bs!3883 m!101281))

(assert (=> b!94238 d!24685))

(declare-fun d!24687 () Bool)

(assert (=> d!24687 (= (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94115 d!24687))

(declare-fun lt!46919 () ListLongMap!1489)

(declare-fun b!94496 () Bool)

(declare-fun e!61683 () Bool)

(assert (=> b!94496 (= e!61683 (= (apply!90 lt!46919 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94496 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700))))))

(assert (=> b!94496 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94497 () Bool)

(declare-fun e!61688 () ListLongMap!1489)

(declare-fun e!61681 () ListLongMap!1489)

(assert (=> b!94497 (= e!61688 e!61681)))

(declare-fun c!15779 () Bool)

(assert (=> b!94497 (= c!15779 (and (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94498 () Bool)

(declare-fun e!61691 () Bool)

(declare-fun call!9471 () Bool)

(assert (=> b!94498 (= e!61691 (not call!9471))))

(declare-fun bm!9465 () Bool)

(assert (=> bm!9465 (= call!9471 (contains!780 lt!46919 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94499 () Bool)

(declare-fun e!61686 () Bool)

(declare-fun e!61679 () Bool)

(assert (=> b!94499 (= e!61686 e!61679)))

(declare-fun c!15776 () Bool)

(assert (=> b!94499 (= c!15776 (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94500 () Bool)

(declare-fun e!61690 () Bool)

(assert (=> b!94500 (= e!61690 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94501 () Bool)

(declare-fun call!9473 () Bool)

(assert (=> b!94501 (= e!61679 (not call!9473))))

(declare-fun e!61689 () Bool)

(declare-fun b!94502 () Bool)

(assert (=> b!94502 (= e!61689 (= (apply!90 lt!46919 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))

(declare-fun d!24689 () Bool)

(assert (=> d!24689 e!61686))

(declare-fun res!47842 () Bool)

(assert (=> d!24689 (=> (not res!47842) (not e!61686))))

(assert (=> d!24689 (= res!47842 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!46908 () ListLongMap!1489)

(assert (=> d!24689 (= lt!46919 lt!46908)))

(declare-fun lt!46929 () Unit!2786)

(declare-fun e!61685 () Unit!2786)

(assert (=> d!24689 (= lt!46929 e!61685)))

(declare-fun c!15778 () Bool)

(declare-fun e!61687 () Bool)

(assert (=> d!24689 (= c!15778 e!61687)))

(declare-fun res!47839 () Bool)

(assert (=> d!24689 (=> (not res!47839) (not e!61687))))

(assert (=> d!24689 (= res!47839 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24689 (= lt!46908 e!61688)))

(declare-fun c!15780 () Bool)

(assert (=> d!24689 (= c!15780 (and (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24689 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24689 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!46919)))

(declare-fun bm!9466 () Bool)

(declare-fun call!9472 () ListLongMap!1489)

(declare-fun call!9468 () ListLongMap!1489)

(assert (=> bm!9466 (= call!9472 call!9468)))

(declare-fun b!94503 () Bool)

(declare-fun e!61680 () Bool)

(assert (=> b!94503 (= e!61691 e!61680)))

(declare-fun res!47841 () Bool)

(assert (=> b!94503 (= res!47841 call!9471)))

(assert (=> b!94503 (=> (not res!47841) (not e!61680))))

(declare-fun bm!9467 () Bool)

(assert (=> bm!9467 (= call!9473 (contains!780 lt!46919 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94504 () Bool)

(declare-fun e!61682 () Bool)

(assert (=> b!94504 (= e!61682 e!61683)))

(declare-fun res!47835 () Bool)

(assert (=> b!94504 (=> (not res!47835) (not e!61683))))

(assert (=> b!94504 (= res!47835 (contains!780 lt!46919 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94504 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun c!15777 () Bool)

(declare-fun b!94505 () Bool)

(assert (=> b!94505 (= c!15777 (and (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61684 () ListLongMap!1489)

(assert (=> b!94505 (= e!61681 e!61684)))

(declare-fun b!94506 () Bool)

(declare-fun res!47840 () Bool)

(assert (=> b!94506 (=> (not res!47840) (not e!61686))))

(assert (=> b!94506 (= res!47840 e!61691)))

(declare-fun c!15781 () Bool)

(assert (=> b!94506 (= c!15781 (not (= (bvand (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94507 () Bool)

(declare-fun res!47834 () Bool)

(assert (=> b!94507 (=> (not res!47834) (not e!61686))))

(assert (=> b!94507 (= res!47834 e!61682)))

(declare-fun res!47838 () Bool)

(assert (=> b!94507 (=> res!47838 e!61682)))

(assert (=> b!94507 (= res!47838 (not e!61690))))

(declare-fun res!47837 () Bool)

(assert (=> b!94507 (=> (not res!47837) (not e!61690))))

(assert (=> b!94507 (= res!47837 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94508 () Bool)

(declare-fun call!9469 () ListLongMap!1489)

(assert (=> b!94508 (= e!61681 call!9469)))

(declare-fun call!9474 () ListLongMap!1489)

(declare-fun b!94509 () Bool)

(assert (=> b!94509 (= e!61688 (+!128 call!9474 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(declare-fun b!94510 () Bool)

(assert (=> b!94510 (= e!61680 (= (apply!90 lt!46919 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun bm!9468 () Bool)

(declare-fun call!9470 () ListLongMap!1489)

(assert (=> bm!9468 (= call!9474 (+!128 (ite c!15780 call!9470 (ite c!15779 call!9468 call!9472)) (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun b!94511 () Bool)

(declare-fun lt!46927 () Unit!2786)

(assert (=> b!94511 (= e!61685 lt!46927)))

(declare-fun lt!46909 () ListLongMap!1489)

(assert (=> b!94511 (= lt!46909 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46923 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46923 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46915 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46915 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46928 () Unit!2786)

(assert (=> b!94511 (= lt!46928 (addStillContains!66 lt!46909 lt!46923 (zeroValue!2322 newMap!16) lt!46915))))

(assert (=> b!94511 (contains!780 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) lt!46915)))

(declare-fun lt!46921 () Unit!2786)

(assert (=> b!94511 (= lt!46921 lt!46928)))

(declare-fun lt!46926 () ListLongMap!1489)

(assert (=> b!94511 (= lt!46926 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46918 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46918 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46912 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46912 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46913 () Unit!2786)

(assert (=> b!94511 (= lt!46913 (addApplyDifferent!66 lt!46926 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912))))

(assert (=> b!94511 (= (apply!90 (+!128 lt!46926 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (apply!90 lt!46926 lt!46912))))

(declare-fun lt!46924 () Unit!2786)

(assert (=> b!94511 (= lt!46924 lt!46913)))

(declare-fun lt!46920 () ListLongMap!1489)

(assert (=> b!94511 (= lt!46920 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46910 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46910 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46925 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46925 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46911 () Unit!2786)

(assert (=> b!94511 (= lt!46911 (addApplyDifferent!66 lt!46920 lt!46910 (zeroValue!2322 newMap!16) lt!46925))))

(assert (=> b!94511 (= (apply!90 (+!128 lt!46920 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) lt!46925) (apply!90 lt!46920 lt!46925))))

(declare-fun lt!46917 () Unit!2786)

(assert (=> b!94511 (= lt!46917 lt!46911)))

(declare-fun lt!46922 () ListLongMap!1489)

(assert (=> b!94511 (= lt!46922 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46914 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46914 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46916 () (_ BitVec 64))

(assert (=> b!94511 (= lt!46916 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94511 (= lt!46927 (addApplyDifferent!66 lt!46922 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46916))))

(assert (=> b!94511 (= (apply!90 (+!128 lt!46922 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46916) (apply!90 lt!46922 lt!46916))))

(declare-fun bm!9469 () Bool)

(assert (=> bm!9469 (= call!9468 call!9470)))

(declare-fun b!94512 () Bool)

(assert (=> b!94512 (= e!61684 call!9469)))

(declare-fun b!94513 () Bool)

(assert (=> b!94513 (= e!61684 call!9472)))

(declare-fun bm!9470 () Bool)

(assert (=> bm!9470 (= call!9469 call!9474)))

(declare-fun b!94514 () Bool)

(assert (=> b!94514 (= e!61679 e!61689)))

(declare-fun res!47836 () Bool)

(assert (=> b!94514 (= res!47836 call!9473)))

(assert (=> b!94514 (=> (not res!47836) (not e!61689))))

(declare-fun bm!9471 () Bool)

(assert (=> bm!9471 (= call!9470 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94515 () Bool)

(assert (=> b!94515 (= e!61687 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94516 () Bool)

(declare-fun Unit!2802 () Unit!2786)

(assert (=> b!94516 (= e!61685 Unit!2802)))

(assert (= (and d!24689 c!15780) b!94509))

(assert (= (and d!24689 (not c!15780)) b!94497))

(assert (= (and b!94497 c!15779) b!94508))

(assert (= (and b!94497 (not c!15779)) b!94505))

(assert (= (and b!94505 c!15777) b!94512))

(assert (= (and b!94505 (not c!15777)) b!94513))

(assert (= (or b!94512 b!94513) bm!9466))

(assert (= (or b!94508 bm!9466) bm!9469))

(assert (= (or b!94508 b!94512) bm!9470))

(assert (= (or b!94509 bm!9469) bm!9471))

(assert (= (or b!94509 bm!9470) bm!9468))

(assert (= (and d!24689 res!47839) b!94515))

(assert (= (and d!24689 c!15778) b!94511))

(assert (= (and d!24689 (not c!15778)) b!94516))

(assert (= (and d!24689 res!47842) b!94507))

(assert (= (and b!94507 res!47837) b!94500))

(assert (= (and b!94507 (not res!47838)) b!94504))

(assert (= (and b!94504 res!47835) b!94496))

(assert (= (and b!94507 res!47834) b!94506))

(assert (= (and b!94506 c!15781) b!94503))

(assert (= (and b!94506 (not c!15781)) b!94498))

(assert (= (and b!94503 res!47841) b!94510))

(assert (= (or b!94503 b!94498) bm!9465))

(assert (= (and b!94506 res!47840) b!94499))

(assert (= (and b!94499 c!15776) b!94514))

(assert (= (and b!94499 (not c!15776)) b!94501))

(assert (= (and b!94514 res!47836) b!94502))

(assert (= (or b!94514 b!94501) bm!9467))

(declare-fun b_lambda!4155 () Bool)

(assert (=> (not b_lambda!4155) (not b!94496)))

(declare-fun t!5461 () Bool)

(declare-fun tb!1873 () Bool)

(assert (=> (and b!93907 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16)) t!5461) tb!1873))

(declare-fun result!3197 () Bool)

(assert (=> tb!1873 (= result!3197 tp_is_empty!2611)))

(assert (=> b!94496 t!5461))

(declare-fun b_and!5761 () Bool)

(assert (= b_and!5757 (and (=> t!5461 result!3197) b_and!5761)))

(declare-fun t!5463 () Bool)

(declare-fun tb!1875 () Bool)

(assert (=> (and b!93913 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 newMap!16)) t!5463) tb!1875))

(declare-fun result!3199 () Bool)

(assert (= result!3199 result!3197))

(assert (=> b!94496 t!5463))

(declare-fun b_and!5763 () Bool)

(assert (= b_and!5759 (and (=> t!5463 result!3199) b_and!5763)))

(declare-fun m!101709 () Bool)

(assert (=> b!94509 m!101709))

(declare-fun m!101711 () Bool)

(assert (=> b!94502 m!101711))

(assert (=> d!24689 m!101529))

(declare-fun m!101713 () Bool)

(assert (=> bm!9468 m!101713))

(declare-fun m!101715 () Bool)

(assert (=> b!94496 m!101715))

(declare-fun m!101717 () Bool)

(assert (=> b!94496 m!101717))

(declare-fun m!101719 () Bool)

(assert (=> b!94496 m!101719))

(assert (=> b!94496 m!101717))

(assert (=> b!94496 m!101715))

(assert (=> b!94496 m!101635))

(assert (=> b!94496 m!101635))

(declare-fun m!101721 () Bool)

(assert (=> b!94496 m!101721))

(declare-fun m!101723 () Bool)

(assert (=> bm!9467 m!101723))

(declare-fun m!101725 () Bool)

(assert (=> bm!9465 m!101725))

(declare-fun m!101727 () Bool)

(assert (=> b!94511 m!101727))

(declare-fun m!101729 () Bool)

(assert (=> b!94511 m!101729))

(declare-fun m!101731 () Bool)

(assert (=> b!94511 m!101731))

(declare-fun m!101733 () Bool)

(assert (=> b!94511 m!101733))

(declare-fun m!101735 () Bool)

(assert (=> b!94511 m!101735))

(declare-fun m!101737 () Bool)

(assert (=> b!94511 m!101737))

(declare-fun m!101739 () Bool)

(assert (=> b!94511 m!101739))

(declare-fun m!101741 () Bool)

(assert (=> b!94511 m!101741))

(assert (=> b!94511 m!101635))

(declare-fun m!101743 () Bool)

(assert (=> b!94511 m!101743))

(declare-fun m!101745 () Bool)

(assert (=> b!94511 m!101745))

(declare-fun m!101747 () Bool)

(assert (=> b!94511 m!101747))

(assert (=> b!94511 m!101737))

(declare-fun m!101749 () Bool)

(assert (=> b!94511 m!101749))

(assert (=> b!94511 m!101729))

(declare-fun m!101751 () Bool)

(assert (=> b!94511 m!101751))

(assert (=> b!94511 m!101739))

(declare-fun m!101753 () Bool)

(assert (=> b!94511 m!101753))

(declare-fun m!101755 () Bool)

(assert (=> b!94511 m!101755))

(assert (=> b!94511 m!101731))

(declare-fun m!101757 () Bool)

(assert (=> b!94511 m!101757))

(assert (=> b!94500 m!101635))

(assert (=> b!94500 m!101635))

(assert (=> b!94500 m!101637))

(assert (=> b!94504 m!101635))

(assert (=> b!94504 m!101635))

(declare-fun m!101759 () Bool)

(assert (=> b!94504 m!101759))

(assert (=> b!94515 m!101635))

(assert (=> b!94515 m!101635))

(assert (=> b!94515 m!101637))

(assert (=> bm!9471 m!101753))

(declare-fun m!101761 () Bool)

(assert (=> b!94510 m!101761))

(assert (=> bm!9425 d!24689))

(declare-fun d!24691 () Bool)

(declare-fun e!61692 () Bool)

(assert (=> d!24691 e!61692))

(declare-fun res!47843 () Bool)

(assert (=> d!24691 (=> res!47843 e!61692)))

(declare-fun lt!46932 () Bool)

(assert (=> d!24691 (= res!47843 (not lt!46932))))

(declare-fun lt!46931 () Bool)

(assert (=> d!24691 (= lt!46932 lt!46931)))

(declare-fun lt!46930 () Unit!2786)

(declare-fun e!61693 () Unit!2786)

(assert (=> d!24691 (= lt!46930 e!61693)))

(declare-fun c!15782 () Bool)

(assert (=> d!24691 (= c!15782 lt!46931)))

(assert (=> d!24691 (= lt!46931 (containsKey!152 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24691 (= (contains!780 lt!46612 #b0000000000000000000000000000000000000000000000000000000000000000) lt!46932)))

(declare-fun b!94517 () Bool)

(declare-fun lt!46933 () Unit!2786)

(assert (=> b!94517 (= e!61693 lt!46933)))

(assert (=> b!94517 (= lt!46933 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94517 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94518 () Bool)

(declare-fun Unit!2803 () Unit!2786)

(assert (=> b!94518 (= e!61693 Unit!2803)))

(declare-fun b!94519 () Bool)

(assert (=> b!94519 (= e!61692 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24691 c!15782) b!94517))

(assert (= (and d!24691 (not c!15782)) b!94518))

(assert (= (and d!24691 (not res!47843)) b!94519))

(declare-fun m!101763 () Bool)

(assert (=> d!24691 m!101763))

(declare-fun m!101765 () Bool)

(assert (=> b!94517 m!101765))

(assert (=> b!94517 m!101535))

(assert (=> b!94517 m!101535))

(declare-fun m!101767 () Bool)

(assert (=> b!94517 m!101767))

(assert (=> b!94519 m!101535))

(assert (=> b!94519 m!101535))

(assert (=> b!94519 m!101767))

(assert (=> bm!9360 d!24691))

(assert (=> b!94130 d!24687))

(declare-fun d!24693 () Bool)

(declare-fun res!47844 () Bool)

(declare-fun e!61694 () Bool)

(assert (=> d!24693 (=> (not res!47844) (not e!61694))))

(assert (=> d!24693 (= res!47844 (simpleValid!66 (v!2764 (underlying!330 thiss!992))))))

(assert (=> d!24693 (= (valid!384 (v!2764 (underlying!330 thiss!992))) e!61694)))

(declare-fun b!94520 () Bool)

(declare-fun res!47845 () Bool)

(assert (=> b!94520 (=> (not res!47845) (not e!61694))))

(assert (=> b!94520 (= res!47845 (= (arrayCountValidKeys!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))) (_size!465 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94521 () Bool)

(declare-fun res!47846 () Bool)

(assert (=> b!94521 (=> (not res!47846) (not e!61694))))

(assert (=> b!94521 (= res!47846 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94522 () Bool)

(assert (=> b!94522 (= e!61694 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 Nil!1552))))

(assert (= (and d!24693 res!47844) b!94520))

(assert (= (and b!94520 res!47845) b!94521))

(assert (= (and b!94521 res!47846) b!94522))

(declare-fun m!101769 () Bool)

(assert (=> d!24693 m!101769))

(declare-fun m!101771 () Bool)

(assert (=> b!94520 m!101771))

(declare-fun m!101773 () Bool)

(assert (=> b!94521 m!101773))

(declare-fun m!101775 () Bool)

(assert (=> b!94522 m!101775))

(assert (=> d!24577 d!24693))

(declare-fun d!24695 () Bool)

(declare-fun res!47847 () Bool)

(declare-fun e!61695 () Bool)

(assert (=> d!24695 (=> (not res!47847) (not e!61695))))

(assert (=> d!24695 (= res!47847 (simpleValid!66 (_2!1151 lt!46714)))))

(assert (=> d!24695 (= (valid!384 (_2!1151 lt!46714)) e!61695)))

(declare-fun b!94523 () Bool)

(declare-fun res!47848 () Bool)

(assert (=> b!94523 (=> (not res!47848) (not e!61695))))

(assert (=> b!94523 (= res!47848 (= (arrayCountValidKeys!0 (_keys!4117 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))) (_size!465 (_2!1151 lt!46714))))))

(declare-fun b!94524 () Bool)

(declare-fun res!47849 () Bool)

(assert (=> b!94524 (=> (not res!47849) (not e!61695))))

(assert (=> b!94524 (= res!47849 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714))))))

(declare-fun b!94525 () Bool)

(assert (=> b!94525 (= e!61695 (arrayNoDuplicates!0 (_keys!4117 (_2!1151 lt!46714)) #b00000000000000000000000000000000 Nil!1552))))

(assert (= (and d!24695 res!47847) b!94523))

(assert (= (and b!94523 res!47848) b!94524))

(assert (= (and b!94524 res!47849) b!94525))

(declare-fun m!101777 () Bool)

(assert (=> d!24695 m!101777))

(declare-fun m!101779 () Bool)

(assert (=> b!94523 m!101779))

(declare-fun m!101781 () Bool)

(assert (=> b!94524 m!101781))

(declare-fun m!101783 () Bool)

(assert (=> b!94525 m!101783))

(assert (=> d!24603 d!24695))

(assert (=> d!24603 d!24599))

(assert (=> d!24595 d!24597))

(declare-fun d!24697 () Bool)

(declare-fun e!61696 () Bool)

(assert (=> d!24697 e!61696))

(declare-fun res!47850 () Bool)

(assert (=> d!24697 (=> res!47850 e!61696)))

(declare-fun lt!46936 () Bool)

(assert (=> d!24697 (= res!47850 (not lt!46936))))

(declare-fun lt!46935 () Bool)

(assert (=> d!24697 (= lt!46936 lt!46935)))

(declare-fun lt!46934 () Unit!2786)

(declare-fun e!61697 () Unit!2786)

(assert (=> d!24697 (= lt!46934 e!61697)))

(declare-fun c!15783 () Bool)

(assert (=> d!24697 (= c!15783 lt!46935)))

(assert (=> d!24697 (= lt!46935 (containsKey!152 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (=> d!24697 (= (contains!780 call!9431 (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))) lt!46936)))

(declare-fun b!94526 () Bool)

(declare-fun lt!46937 () Unit!2786)

(assert (=> b!94526 (= e!61697 lt!46937)))

(assert (=> b!94526 (= lt!46937 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (=> b!94526 (isDefined!101 (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(declare-fun b!94527 () Bool)

(declare-fun Unit!2804 () Unit!2786)

(assert (=> b!94527 (= e!61697 Unit!2804)))

(declare-fun b!94528 () Bool)

(assert (=> b!94528 (= e!61696 (isDefined!101 (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))))

(assert (= (and d!24697 c!15783) b!94526))

(assert (= (and d!24697 (not c!15783)) b!94527))

(assert (= (and d!24697 (not res!47850)) b!94528))

(assert (=> d!24697 m!101367))

(declare-fun m!101785 () Bool)

(assert (=> d!24697 m!101785))

(assert (=> b!94526 m!101367))

(declare-fun m!101787 () Bool)

(assert (=> b!94526 m!101787))

(assert (=> b!94526 m!101367))

(declare-fun m!101789 () Bool)

(assert (=> b!94526 m!101789))

(assert (=> b!94526 m!101789))

(declare-fun m!101791 () Bool)

(assert (=> b!94526 m!101791))

(assert (=> b!94528 m!101367))

(assert (=> b!94528 m!101789))

(assert (=> b!94528 m!101789))

(assert (=> b!94528 m!101791))

(assert (=> b!94258 d!24697))

(declare-fun d!24699 () Bool)

(declare-fun e!61700 () Bool)

(assert (=> d!24699 e!61700))

(declare-fun res!47853 () Bool)

(assert (=> d!24699 (=> (not res!47853) (not e!61700))))

(assert (=> d!24699 (= res!47853 (and (bvsge (index!3122 lt!46692) #b00000000000000000000000000000000) (bvslt (index!3122 lt!46692) (size!2236 (_keys!4117 newMap!16)))))))

(declare-fun lt!46940 () Unit!2786)

(declare-fun choose!573 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) Unit!2786)

(assert (=> d!24699 (= lt!46940 (choose!573 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24699 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24699 (= (lemmaValidKeyInArrayIsInListMap!99 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (defaultEntry!2435 newMap!16)) lt!46940)))

(declare-fun b!94531 () Bool)

(assert (=> b!94531 (= e!61700 (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (= (and d!24699 res!47853) b!94531))

(declare-fun m!101793 () Bool)

(assert (=> d!24699 m!101793))

(assert (=> d!24699 m!101529))

(declare-fun m!101795 () Bool)

(assert (=> b!94531 m!101795))

(assert (=> b!94531 m!101367))

(assert (=> b!94531 m!101795))

(assert (=> b!94531 m!101367))

(declare-fun m!101797 () Bool)

(assert (=> b!94531 m!101797))

(assert (=> b!94258 d!24699))

(declare-fun d!24701 () Bool)

(declare-fun e!61703 () Bool)

(assert (=> d!24701 e!61703))

(declare-fun res!47856 () Bool)

(assert (=> d!24701 (=> (not res!47856) (not e!61703))))

(assert (=> d!24701 (= res!47856 (and (bvsge (index!3122 lt!46692) #b00000000000000000000000000000000) (bvslt (index!3122 lt!46692) (size!2237 (_values!2418 newMap!16)))))))

(declare-fun lt!46943 () Unit!2786)

(declare-fun choose!574 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2786)

(assert (=> d!24701 (= lt!46943 (choose!574 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24701 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24701 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!46943)))

(declare-fun b!94534 () Bool)

(assert (=> b!94534 (= e!61703 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))))

(assert (= (and d!24701 res!47856) b!94534))

(assert (=> d!24701 m!101143))

(assert (=> d!24701 m!101165))

(declare-fun m!101799 () Bool)

(assert (=> d!24701 m!101799))

(assert (=> d!24701 m!101529))

(assert (=> b!94534 m!101281))

(assert (=> b!94534 m!101281))

(assert (=> b!94534 m!101495))

(assert (=> b!94534 m!101365))

(declare-fun m!101801 () Bool)

(assert (=> b!94534 m!101801))

(assert (=> b!94258 d!24701))

(declare-fun d!24703 () Bool)

(declare-fun e!61704 () Bool)

(assert (=> d!24703 e!61704))

(declare-fun res!47858 () Bool)

(assert (=> d!24703 (=> (not res!47858) (not e!61704))))

(declare-fun lt!46945 () ListLongMap!1489)

(assert (=> d!24703 (= res!47858 (contains!780 lt!46945 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!46947 () List!1554)

(assert (=> d!24703 (= lt!46945 (ListLongMap!1490 lt!46947))))

(declare-fun lt!46946 () Unit!2786)

(declare-fun lt!46944 () Unit!2786)

(assert (=> d!24703 (= lt!46946 lt!46944)))

(assert (=> d!24703 (= (getValueByKey!149 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24703 (= lt!46944 (lemmaContainsTupThenGetReturnValue!65 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24703 (= lt!46947 (insertStrictlySorted!68 (toList!760 call!9369) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24703 (= (+!128 call!9369 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46945)))

(declare-fun b!94535 () Bool)

(declare-fun res!47857 () Bool)

(assert (=> b!94535 (=> (not res!47857) (not e!61704))))

(assert (=> b!94535 (= res!47857 (= (getValueByKey!149 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94536 () Bool)

(assert (=> b!94536 (= e!61704 (contains!782 (toList!760 lt!46945) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24703 res!47858) b!94535))

(assert (= (and b!94535 res!47857) b!94536))

(declare-fun m!101803 () Bool)

(assert (=> d!24703 m!101803))

(declare-fun m!101805 () Bool)

(assert (=> d!24703 m!101805))

(declare-fun m!101807 () Bool)

(assert (=> d!24703 m!101807))

(declare-fun m!101809 () Bool)

(assert (=> d!24703 m!101809))

(declare-fun m!101811 () Bool)

(assert (=> b!94535 m!101811))

(declare-fun m!101813 () Bool)

(assert (=> b!94536 m!101813))

(assert (=> b!94124 d!24703))

(assert (=> bm!9432 d!24663))

(declare-fun d!24705 () Bool)

(declare-fun e!61705 () Bool)

(assert (=> d!24705 e!61705))

(declare-fun res!47860 () Bool)

(assert (=> d!24705 (=> (not res!47860) (not e!61705))))

(declare-fun lt!46949 () ListLongMap!1489)

(assert (=> d!24705 (= res!47860 (contains!780 lt!46949 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun lt!46951 () List!1554)

(assert (=> d!24705 (= lt!46949 (ListLongMap!1490 lt!46951))))

(declare-fun lt!46950 () Unit!2786)

(declare-fun lt!46948 () Unit!2786)

(assert (=> d!24705 (= lt!46950 lt!46948)))

(assert (=> d!24705 (= (getValueByKey!149 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (Some!154 (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!24705 (= lt!46948 (lemmaContainsTupThenGetReturnValue!65 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!24705 (= lt!46951 (insertStrictlySorted!68 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!24705 (= (+!128 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46949)))

(declare-fun b!94537 () Bool)

(declare-fun res!47859 () Bool)

(assert (=> b!94537 (=> (not res!47859) (not e!61705))))

(assert (=> b!94537 (= res!47859 (= (getValueByKey!149 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (Some!154 (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!94538 () Bool)

(assert (=> b!94538 (= e!61705 (contains!782 (toList!760 lt!46949) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!24705 res!47860) b!94537))

(assert (= (and b!94537 res!47859) b!94538))

(declare-fun m!101815 () Bool)

(assert (=> d!24705 m!101815))

(declare-fun m!101817 () Bool)

(assert (=> d!24705 m!101817))

(declare-fun m!101819 () Bool)

(assert (=> d!24705 m!101819))

(declare-fun m!101821 () Bool)

(assert (=> d!24705 m!101821))

(declare-fun m!101823 () Bool)

(assert (=> b!94537 m!101823))

(declare-fun m!101825 () Bool)

(assert (=> b!94538 m!101825))

(assert (=> bm!9363 d!24705))

(assert (=> b!94066 d!24617))

(assert (=> b!94052 d!24587))

(declare-fun d!24707 () Bool)

(declare-fun e!61706 () Bool)

(assert (=> d!24707 e!61706))

(declare-fun res!47861 () Bool)

(assert (=> d!24707 (=> res!47861 e!61706)))

(declare-fun lt!46954 () Bool)

(assert (=> d!24707 (= res!47861 (not lt!46954))))

(declare-fun lt!46953 () Bool)

(assert (=> d!24707 (= lt!46954 lt!46953)))

(declare-fun lt!46952 () Unit!2786)

(declare-fun e!61707 () Unit!2786)

(assert (=> d!24707 (= lt!46952 e!61707)))

(declare-fun c!15784 () Bool)

(assert (=> d!24707 (= c!15784 lt!46953)))

(assert (=> d!24707 (= lt!46953 (containsKey!152 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24707 (= (contains!780 e!61548 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!46954)))

(declare-fun b!94539 () Bool)

(declare-fun lt!46955 () Unit!2786)

(assert (=> b!94539 (= e!61707 lt!46955)))

(assert (=> b!94539 (= lt!46955 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94539 (isDefined!101 (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94540 () Bool)

(declare-fun Unit!2805 () Unit!2786)

(assert (=> b!94540 (= e!61707 Unit!2805)))

(declare-fun b!94541 () Bool)

(assert (=> b!94541 (= e!61706 (isDefined!101 (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24707 c!15784) b!94539))

(assert (= (and d!24707 (not c!15784)) b!94540))

(assert (= (and d!24707 (not res!47861)) b!94541))

(assert (=> d!24707 m!101143))

(declare-fun m!101827 () Bool)

(assert (=> d!24707 m!101827))

(assert (=> b!94539 m!101143))

(declare-fun m!101829 () Bool)

(assert (=> b!94539 m!101829))

(assert (=> b!94539 m!101143))

(declare-fun m!101831 () Bool)

(assert (=> b!94539 m!101831))

(assert (=> b!94539 m!101831))

(declare-fun m!101833 () Bool)

(assert (=> b!94539 m!101833))

(assert (=> b!94541 m!101143))

(assert (=> b!94541 m!101831))

(assert (=> b!94541 m!101831))

(assert (=> b!94541 m!101833))

(assert (=> bm!9429 d!24707))

(declare-fun b!94542 () Bool)

(declare-fun e!61712 () Bool)

(declare-fun lt!46967 () ListLongMap!1489)

(assert (=> b!94542 (= e!61712 (= (apply!90 lt!46967 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (_values!2418 newMap!16))))))

(assert (=> b!94542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94543 () Bool)

(declare-fun e!61717 () ListLongMap!1489)

(declare-fun e!61710 () ListLongMap!1489)

(assert (=> b!94543 (= e!61717 e!61710)))

(declare-fun c!15788 () Bool)

(assert (=> b!94543 (= c!15788 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94544 () Bool)

(declare-fun e!61720 () Bool)

(declare-fun call!9478 () Bool)

(assert (=> b!94544 (= e!61720 (not call!9478))))

(declare-fun bm!9472 () Bool)

(assert (=> bm!9472 (= call!9478 (contains!780 lt!46967 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94545 () Bool)

(declare-fun e!61715 () Bool)

(declare-fun e!61708 () Bool)

(assert (=> b!94545 (= e!61715 e!61708)))

(declare-fun c!15785 () Bool)

(assert (=> b!94545 (= c!15785 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94546 () Bool)

(declare-fun e!61719 () Bool)

(assert (=> b!94546 (= e!61719 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94547 () Bool)

(declare-fun call!9480 () Bool)

(assert (=> b!94547 (= e!61708 (not call!9480))))

(declare-fun b!94548 () Bool)

(declare-fun e!61718 () Bool)

(assert (=> b!94548 (= e!61718 (= (apply!90 lt!46967 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!24709 () Bool)

(assert (=> d!24709 e!61715))

(declare-fun res!47870 () Bool)

(assert (=> d!24709 (=> (not res!47870) (not e!61715))))

(assert (=> d!24709 (= res!47870 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!46956 () ListLongMap!1489)

(assert (=> d!24709 (= lt!46967 lt!46956)))

(declare-fun lt!46977 () Unit!2786)

(declare-fun e!61714 () Unit!2786)

(assert (=> d!24709 (= lt!46977 e!61714)))

(declare-fun c!15787 () Bool)

(declare-fun e!61716 () Bool)

(assert (=> d!24709 (= c!15787 e!61716)))

(declare-fun res!47867 () Bool)

(assert (=> d!24709 (=> (not res!47867) (not e!61716))))

(assert (=> d!24709 (= res!47867 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24709 (= lt!46956 e!61717)))

(declare-fun c!15789 () Bool)

(assert (=> d!24709 (= c!15789 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24709 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24709 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!46967)))

(declare-fun bm!9473 () Bool)

(declare-fun call!9479 () ListLongMap!1489)

(declare-fun call!9475 () ListLongMap!1489)

(assert (=> bm!9473 (= call!9479 call!9475)))

(declare-fun b!94549 () Bool)

(declare-fun e!61709 () Bool)

(assert (=> b!94549 (= e!61720 e!61709)))

(declare-fun res!47869 () Bool)

(assert (=> b!94549 (= res!47869 call!9478)))

(assert (=> b!94549 (=> (not res!47869) (not e!61709))))

(declare-fun bm!9474 () Bool)

(assert (=> bm!9474 (= call!9480 (contains!780 lt!46967 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94550 () Bool)

(declare-fun e!61711 () Bool)

(assert (=> b!94550 (= e!61711 e!61712)))

(declare-fun res!47863 () Bool)

(assert (=> b!94550 (=> (not res!47863) (not e!61712))))

(assert (=> b!94550 (= res!47863 (contains!780 lt!46967 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94550 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94551 () Bool)

(declare-fun c!15786 () Bool)

(assert (=> b!94551 (= c!15786 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61713 () ListLongMap!1489)

(assert (=> b!94551 (= e!61710 e!61713)))

(declare-fun b!94552 () Bool)

(declare-fun res!47868 () Bool)

(assert (=> b!94552 (=> (not res!47868) (not e!61715))))

(assert (=> b!94552 (= res!47868 e!61720)))

(declare-fun c!15790 () Bool)

(assert (=> b!94552 (= c!15790 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94553 () Bool)

(declare-fun res!47862 () Bool)

(assert (=> b!94553 (=> (not res!47862) (not e!61715))))

(assert (=> b!94553 (= res!47862 e!61711)))

(declare-fun res!47866 () Bool)

(assert (=> b!94553 (=> res!47866 e!61711)))

(assert (=> b!94553 (= res!47866 (not e!61719))))

(declare-fun res!47865 () Bool)

(assert (=> b!94553 (=> (not res!47865) (not e!61719))))

(assert (=> b!94553 (= res!47865 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94554 () Bool)

(declare-fun call!9476 () ListLongMap!1489)

(assert (=> b!94554 (= e!61710 call!9476)))

(declare-fun b!94555 () Bool)

(declare-fun call!9481 () ListLongMap!1489)

(assert (=> b!94555 (= e!61717 (+!128 call!9481 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!94556 () Bool)

(assert (=> b!94556 (= e!61709 (= (apply!90 lt!46967 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun bm!9475 () Bool)

(declare-fun call!9477 () ListLongMap!1489)

(assert (=> bm!9475 (= call!9481 (+!128 (ite c!15789 call!9477 (ite c!15788 call!9475 call!9479)) (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!94557 () Bool)

(declare-fun lt!46975 () Unit!2786)

(assert (=> b!94557 (= e!61714 lt!46975)))

(declare-fun lt!46957 () ListLongMap!1489)

(assert (=> b!94557 (= lt!46957 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46971 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46971 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46963 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46963 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46976 () Unit!2786)

(assert (=> b!94557 (= lt!46976 (addStillContains!66 lt!46957 lt!46971 (zeroValue!2322 newMap!16) lt!46963))))

(assert (=> b!94557 (contains!780 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) lt!46963)))

(declare-fun lt!46969 () Unit!2786)

(assert (=> b!94557 (= lt!46969 lt!46976)))

(declare-fun lt!46974 () ListLongMap!1489)

(assert (=> b!94557 (= lt!46974 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46966 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46966 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46960 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46960 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46961 () Unit!2786)

(assert (=> b!94557 (= lt!46961 (addApplyDifferent!66 lt!46974 lt!46966 (minValue!2322 newMap!16) lt!46960))))

(assert (=> b!94557 (= (apply!90 (+!128 lt!46974 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) lt!46960) (apply!90 lt!46974 lt!46960))))

(declare-fun lt!46972 () Unit!2786)

(assert (=> b!94557 (= lt!46972 lt!46961)))

(declare-fun lt!46968 () ListLongMap!1489)

(assert (=> b!94557 (= lt!46968 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46958 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46958 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46973 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46973 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46959 () Unit!2786)

(assert (=> b!94557 (= lt!46959 (addApplyDifferent!66 lt!46968 lt!46958 (zeroValue!2322 newMap!16) lt!46973))))

(assert (=> b!94557 (= (apply!90 (+!128 lt!46968 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) lt!46973) (apply!90 lt!46968 lt!46973))))

(declare-fun lt!46965 () Unit!2786)

(assert (=> b!94557 (= lt!46965 lt!46959)))

(declare-fun lt!46970 () ListLongMap!1489)

(assert (=> b!94557 (= lt!46970 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46962 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46962 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46964 () (_ BitVec 64))

(assert (=> b!94557 (= lt!46964 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94557 (= lt!46975 (addApplyDifferent!66 lt!46970 lt!46962 (minValue!2322 newMap!16) lt!46964))))

(assert (=> b!94557 (= (apply!90 (+!128 lt!46970 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) lt!46964) (apply!90 lt!46970 lt!46964))))

(declare-fun bm!9476 () Bool)

(assert (=> bm!9476 (= call!9475 call!9477)))

(declare-fun b!94558 () Bool)

(assert (=> b!94558 (= e!61713 call!9476)))

(declare-fun b!94559 () Bool)

(assert (=> b!94559 (= e!61713 call!9479)))

(declare-fun bm!9477 () Bool)

(assert (=> bm!9477 (= call!9476 call!9481)))

(declare-fun b!94560 () Bool)

(assert (=> b!94560 (= e!61708 e!61718)))

(declare-fun res!47864 () Bool)

(assert (=> b!94560 (= res!47864 call!9480)))

(assert (=> b!94560 (=> (not res!47864) (not e!61718))))

(declare-fun bm!9478 () Bool)

(assert (=> bm!9478 (= call!9477 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94561 () Bool)

(assert (=> b!94561 (= e!61716 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94562 () Bool)

(declare-fun Unit!2806 () Unit!2786)

(assert (=> b!94562 (= e!61714 Unit!2806)))

(assert (= (and d!24709 c!15789) b!94555))

(assert (= (and d!24709 (not c!15789)) b!94543))

(assert (= (and b!94543 c!15788) b!94554))

(assert (= (and b!94543 (not c!15788)) b!94551))

(assert (= (and b!94551 c!15786) b!94558))

(assert (= (and b!94551 (not c!15786)) b!94559))

(assert (= (or b!94558 b!94559) bm!9473))

(assert (= (or b!94554 bm!9473) bm!9476))

(assert (= (or b!94554 b!94558) bm!9477))

(assert (= (or b!94555 bm!9476) bm!9478))

(assert (= (or b!94555 bm!9477) bm!9475))

(assert (= (and d!24709 res!47867) b!94561))

(assert (= (and d!24709 c!15787) b!94557))

(assert (= (and d!24709 (not c!15787)) b!94562))

(assert (= (and d!24709 res!47870) b!94553))

(assert (= (and b!94553 res!47865) b!94546))

(assert (= (and b!94553 (not res!47866)) b!94550))

(assert (= (and b!94550 res!47863) b!94542))

(assert (= (and b!94553 res!47862) b!94552))

(assert (= (and b!94552 c!15790) b!94549))

(assert (= (and b!94552 (not c!15790)) b!94544))

(assert (= (and b!94549 res!47869) b!94556))

(assert (= (or b!94549 b!94544) bm!9472))

(assert (= (and b!94552 res!47868) b!94545))

(assert (= (and b!94545 c!15785) b!94560))

(assert (= (and b!94545 (not c!15785)) b!94547))

(assert (= (and b!94560 res!47864) b!94548))

(assert (= (or b!94560 b!94547) bm!9474))

(declare-fun b_lambda!4157 () Bool)

(assert (=> (not b_lambda!4157) (not b!94542)))

(assert (=> b!94542 t!5461))

(declare-fun b_and!5765 () Bool)

(assert (= b_and!5761 (and (=> t!5461 result!3197) b_and!5765)))

(assert (=> b!94542 t!5463))

(declare-fun b_and!5767 () Bool)

(assert (= b_and!5763 (and (=> t!5463 result!3199) b_and!5767)))

(declare-fun m!101835 () Bool)

(assert (=> b!94555 m!101835))

(declare-fun m!101837 () Bool)

(assert (=> b!94548 m!101837))

(assert (=> d!24709 m!101529))

(declare-fun m!101839 () Bool)

(assert (=> bm!9475 m!101839))

(declare-fun m!101841 () Bool)

(assert (=> b!94542 m!101841))

(assert (=> b!94542 m!101717))

(declare-fun m!101843 () Bool)

(assert (=> b!94542 m!101843))

(assert (=> b!94542 m!101717))

(assert (=> b!94542 m!101841))

(assert (=> b!94542 m!101635))

(assert (=> b!94542 m!101635))

(declare-fun m!101845 () Bool)

(assert (=> b!94542 m!101845))

(declare-fun m!101847 () Bool)

(assert (=> bm!9474 m!101847))

(declare-fun m!101849 () Bool)

(assert (=> bm!9472 m!101849))

(declare-fun m!101851 () Bool)

(assert (=> b!94557 m!101851))

(declare-fun m!101853 () Bool)

(assert (=> b!94557 m!101853))

(declare-fun m!101855 () Bool)

(assert (=> b!94557 m!101855))

(declare-fun m!101857 () Bool)

(assert (=> b!94557 m!101857))

(declare-fun m!101859 () Bool)

(assert (=> b!94557 m!101859))

(declare-fun m!101861 () Bool)

(assert (=> b!94557 m!101861))

(declare-fun m!101863 () Bool)

(assert (=> b!94557 m!101863))

(declare-fun m!101865 () Bool)

(assert (=> b!94557 m!101865))

(assert (=> b!94557 m!101635))

(declare-fun m!101867 () Bool)

(assert (=> b!94557 m!101867))

(declare-fun m!101869 () Bool)

(assert (=> b!94557 m!101869))

(declare-fun m!101871 () Bool)

(assert (=> b!94557 m!101871))

(assert (=> b!94557 m!101861))

(declare-fun m!101873 () Bool)

(assert (=> b!94557 m!101873))

(assert (=> b!94557 m!101853))

(declare-fun m!101875 () Bool)

(assert (=> b!94557 m!101875))

(assert (=> b!94557 m!101863))

(declare-fun m!101877 () Bool)

(assert (=> b!94557 m!101877))

(declare-fun m!101879 () Bool)

(assert (=> b!94557 m!101879))

(assert (=> b!94557 m!101855))

(declare-fun m!101881 () Bool)

(assert (=> b!94557 m!101881))

(assert (=> b!94546 m!101635))

(assert (=> b!94546 m!101635))

(assert (=> b!94546 m!101637))

(assert (=> b!94550 m!101635))

(assert (=> b!94550 m!101635))

(declare-fun m!101883 () Bool)

(assert (=> b!94550 m!101883))

(assert (=> b!94561 m!101635))

(assert (=> b!94561 m!101635))

(assert (=> b!94561 m!101637))

(assert (=> bm!9478 m!101877))

(declare-fun m!101885 () Bool)

(assert (=> b!94556 m!101885))

(assert (=> b!94257 d!24709))

(declare-fun d!24711 () Bool)

(declare-fun e!61721 () Bool)

(assert (=> d!24711 e!61721))

(declare-fun res!47871 () Bool)

(assert (=> d!24711 (=> res!47871 e!61721)))

(declare-fun lt!46980 () Bool)

(assert (=> d!24711 (= res!47871 (not lt!46980))))

(declare-fun lt!46979 () Bool)

(assert (=> d!24711 (= lt!46980 lt!46979)))

(declare-fun lt!46978 () Unit!2786)

(declare-fun e!61722 () Unit!2786)

(assert (=> d!24711 (= lt!46978 e!61722)))

(declare-fun c!15791 () Bool)

(assert (=> d!24711 (= c!15791 lt!46979)))

(assert (=> d!24711 (= lt!46979 (containsKey!152 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24711 (= (contains!780 call!9426 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!46980)))

(declare-fun b!94563 () Bool)

(declare-fun lt!46981 () Unit!2786)

(assert (=> b!94563 (= e!61722 lt!46981)))

(assert (=> b!94563 (= lt!46981 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94563 (isDefined!101 (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94564 () Bool)

(declare-fun Unit!2807 () Unit!2786)

(assert (=> b!94564 (= e!61722 Unit!2807)))

(declare-fun b!94565 () Bool)

(assert (=> b!94565 (= e!61721 (isDefined!101 (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24711 c!15791) b!94563))

(assert (= (and d!24711 (not c!15791)) b!94564))

(assert (= (and d!24711 (not res!47871)) b!94565))

(assert (=> d!24711 m!101143))

(declare-fun m!101887 () Bool)

(assert (=> d!24711 m!101887))

(assert (=> b!94563 m!101143))

(declare-fun m!101889 () Bool)

(assert (=> b!94563 m!101889))

(assert (=> b!94563 m!101143))

(declare-fun m!101891 () Bool)

(assert (=> b!94563 m!101891))

(assert (=> b!94563 m!101891))

(declare-fun m!101893 () Bool)

(assert (=> b!94563 m!101893))

(assert (=> b!94565 m!101143))

(assert (=> b!94565 m!101891))

(assert (=> b!94565 m!101891))

(assert (=> b!94565 m!101893))

(assert (=> b!94270 d!24711))

(declare-fun d!24713 () Bool)

(assert (=> d!24713 (isDefined!101 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!46984 () Unit!2786)

(declare-fun choose!575 (List!1554 (_ BitVec 64)) Unit!2786)

(assert (=> d!24713 (= lt!46984 (choose!575 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61725 () Bool)

(assert (=> d!24713 e!61725))

(declare-fun res!47874 () Bool)

(assert (=> d!24713 (=> (not res!47874) (not e!61725))))

(declare-fun isStrictlySorted!289 (List!1554) Bool)

(assert (=> d!24713 (= res!47874 (isStrictlySorted!289 (toList!760 lt!46500)))))

(assert (=> d!24713 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!46984)))

(declare-fun b!94568 () Bool)

(assert (=> b!94568 (= e!61725 (containsKey!152 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24713 res!47874) b!94568))

(assert (=> d!24713 m!101143))

(assert (=> d!24713 m!101349))

(assert (=> d!24713 m!101349))

(assert (=> d!24713 m!101351))

(assert (=> d!24713 m!101143))

(declare-fun m!101895 () Bool)

(assert (=> d!24713 m!101895))

(declare-fun m!101897 () Bool)

(assert (=> d!24713 m!101897))

(assert (=> b!94568 m!101143))

(assert (=> b!94568 m!101345))

(assert (=> b!94147 d!24713))

(declare-fun d!24715 () Bool)

(declare-fun isEmpty!357 (Option!155) Bool)

(assert (=> d!24715 (= (isDefined!101 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!357 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3884 () Bool)

(assert (= bs!3884 d!24715))

(assert (=> bs!3884 m!101349))

(declare-fun m!101899 () Bool)

(assert (=> bs!3884 m!101899))

(assert (=> b!94147 d!24715))

(declare-fun d!24717 () Bool)

(declare-fun c!15796 () Bool)

(assert (=> d!24717 (= c!15796 (and ((_ is Cons!1550) (toList!760 lt!46500)) (= (_1!1152 (h!2142 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun e!61730 () Option!155)

(assert (=> d!24717 (= (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61730)))

(declare-fun b!94578 () Bool)

(declare-fun e!61731 () Option!155)

(assert (=> b!94578 (= e!61730 e!61731)))

(declare-fun c!15797 () Bool)

(assert (=> b!94578 (= c!15797 (and ((_ is Cons!1550) (toList!760 lt!46500)) (not (= (_1!1152 (h!2142 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun b!94580 () Bool)

(assert (=> b!94580 (= e!61731 None!153)))

(declare-fun b!94577 () Bool)

(assert (=> b!94577 (= e!61730 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46500)))))))

(declare-fun b!94579 () Bool)

(assert (=> b!94579 (= e!61731 (getValueByKey!149 (t!5448 (toList!760 lt!46500)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24717 c!15796) b!94577))

(assert (= (and d!24717 (not c!15796)) b!94578))

(assert (= (and b!94578 c!15797) b!94579))

(assert (= (and b!94578 (not c!15797)) b!94580))

(assert (=> b!94579 m!101143))

(declare-fun m!101901 () Bool)

(assert (=> b!94579 m!101901))

(assert (=> b!94147 d!24717))

(assert (=> b!94149 d!24715))

(assert (=> b!94149 d!24717))

(declare-fun d!24719 () Bool)

(assert (=> d!24719 (= (get!1274 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94281 d!24719))

(declare-fun d!24721 () Bool)

(declare-fun e!61734 () Bool)

(assert (=> d!24721 e!61734))

(declare-fun c!15800 () Bool)

(assert (=> d!24721 (= c!15800 (and (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!24721 true))

(declare-fun _$29!120 () Unit!2786)

(assert (=> d!24721 (= (choose!566 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) _$29!120)))

(declare-fun b!94585 () Bool)

(assert (=> b!94585 (= e!61734 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94586 () Bool)

(assert (=> b!94586 (= e!61734 (ite (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24721 c!15800) b!94585))

(assert (= (and d!24721 (not c!15800)) b!94586))

(assert (=> b!94585 m!101143))

(assert (=> b!94585 m!101147))

(assert (=> d!24589 d!24721))

(assert (=> d!24589 d!24597))

(assert (=> b!94263 d!24709))

(declare-fun d!24723 () Bool)

(assert (=> d!24723 (= (map!1242 (_2!1151 lt!46714)) (getCurrentListMap!450 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun bs!3885 () Bool)

(assert (= bs!3885 d!24723))

(declare-fun m!101903 () Bool)

(assert (=> bs!3885 m!101903))

(assert (=> bm!9437 d!24723))

(declare-fun b!94596 () Bool)

(declare-fun res!47884 () Bool)

(declare-fun e!61737 () Bool)

(assert (=> b!94596 (=> (not res!47884) (not e!61737))))

(declare-fun size!2242 (LongMapFixedSize!832) (_ BitVec 32))

(assert (=> b!94596 (= res!47884 (bvsge (size!2242 newMap!16) (_size!465 newMap!16)))))

(declare-fun b!94595 () Bool)

(declare-fun res!47886 () Bool)

(assert (=> b!94595 (=> (not res!47886) (not e!61737))))

(assert (=> b!94595 (= res!47886 (and (= (size!2237 (_values!2418 newMap!16)) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001)) (= (size!2236 (_keys!4117 newMap!16)) (size!2237 (_values!2418 newMap!16))) (bvsge (_size!465 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!465 newMap!16) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!94598 () Bool)

(assert (=> b!94598 (= e!61737 (and (bvsge (extraKeys!2264 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!465 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!94597 () Bool)

(declare-fun res!47883 () Bool)

(assert (=> b!94597 (=> (not res!47883) (not e!61737))))

(assert (=> b!94597 (= res!47883 (= (size!2242 newMap!16) (bvadd (_size!465 newMap!16) (bvsdiv (bvadd (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!24725 () Bool)

(declare-fun res!47885 () Bool)

(assert (=> d!24725 (=> (not res!47885) (not e!61737))))

(assert (=> d!24725 (= res!47885 (validMask!0 (mask!6510 newMap!16)))))

(assert (=> d!24725 (= (simpleValid!66 newMap!16) e!61737)))

(assert (= (and d!24725 res!47885) b!94595))

(assert (= (and b!94595 res!47886) b!94596))

(assert (= (and b!94596 res!47884) b!94597))

(assert (= (and b!94597 res!47883) b!94598))

(declare-fun m!101905 () Bool)

(assert (=> b!94596 m!101905))

(assert (=> b!94597 m!101905))

(assert (=> d!24725 m!101529))

(assert (=> d!24599 d!24725))

(declare-fun d!24727 () Bool)

(declare-fun e!61738 () Bool)

(assert (=> d!24727 e!61738))

(declare-fun res!47887 () Bool)

(assert (=> d!24727 (=> res!47887 e!61738)))

(declare-fun lt!46987 () Bool)

(assert (=> d!24727 (= res!47887 (not lt!46987))))

(declare-fun lt!46986 () Bool)

(assert (=> d!24727 (= lt!46987 lt!46986)))

(declare-fun lt!46985 () Unit!2786)

(declare-fun e!61739 () Unit!2786)

(assert (=> d!24727 (= lt!46985 e!61739)))

(declare-fun c!15801 () Bool)

(assert (=> d!24727 (= c!15801 lt!46986)))

(assert (=> d!24727 (= lt!46986 (containsKey!152 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24727 (= (contains!780 lt!46612 #b1000000000000000000000000000000000000000000000000000000000000000) lt!46987)))

(declare-fun b!94599 () Bool)

(declare-fun lt!46988 () Unit!2786)

(assert (=> b!94599 (= e!61739 lt!46988)))

(assert (=> b!94599 (= lt!46988 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94599 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94600 () Bool)

(declare-fun Unit!2808 () Unit!2786)

(assert (=> b!94600 (= e!61739 Unit!2808)))

(declare-fun b!94601 () Bool)

(assert (=> b!94601 (= e!61738 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24727 c!15801) b!94599))

(assert (= (and d!24727 (not c!15801)) b!94600))

(assert (= (and d!24727 (not res!47887)) b!94601))

(declare-fun m!101907 () Bool)

(assert (=> d!24727 m!101907))

(declare-fun m!101909 () Bool)

(assert (=> b!94599 m!101909))

(assert (=> b!94599 m!101685))

(assert (=> b!94599 m!101685))

(declare-fun m!101911 () Bool)

(assert (=> b!94599 m!101911))

(assert (=> b!94601 m!101685))

(assert (=> b!94601 m!101685))

(assert (=> b!94601 m!101911))

(assert (=> bm!9362 d!24727))

(assert (=> d!24593 d!24709))

(declare-fun b!94602 () Bool)

(declare-fun e!61744 () Bool)

(declare-fun lt!47000 () ListLongMap!1489)

(assert (=> b!94602 (= e!61744 (= (apply!90 lt!47000 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94602 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))))))))

(assert (=> b!94602 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94603 () Bool)

(declare-fun e!61749 () ListLongMap!1489)

(declare-fun e!61742 () ListLongMap!1489)

(assert (=> b!94603 (= e!61749 e!61742)))

(declare-fun c!15805 () Bool)

(assert (=> b!94603 (= c!15805 (and (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94604 () Bool)

(declare-fun e!61752 () Bool)

(declare-fun call!9485 () Bool)

(assert (=> b!94604 (= e!61752 (not call!9485))))

(declare-fun bm!9479 () Bool)

(assert (=> bm!9479 (= call!9485 (contains!780 lt!47000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94605 () Bool)

(declare-fun e!61747 () Bool)

(declare-fun e!61740 () Bool)

(assert (=> b!94605 (= e!61747 e!61740)))

(declare-fun c!15802 () Bool)

(assert (=> b!94605 (= c!15802 (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94606 () Bool)

(declare-fun e!61751 () Bool)

(assert (=> b!94606 (= e!61751 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94607 () Bool)

(declare-fun call!9487 () Bool)

(assert (=> b!94607 (= e!61740 (not call!9487))))

(declare-fun b!94608 () Bool)

(declare-fun e!61750 () Bool)

(assert (=> b!94608 (= e!61750 (= (apply!90 lt!47000 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!24729 () Bool)

(assert (=> d!24729 e!61747))

(declare-fun res!47896 () Bool)

(assert (=> d!24729 (=> (not res!47896) (not e!61747))))

(assert (=> d!24729 (= res!47896 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!46989 () ListLongMap!1489)

(assert (=> d!24729 (= lt!47000 lt!46989)))

(declare-fun lt!47010 () Unit!2786)

(declare-fun e!61746 () Unit!2786)

(assert (=> d!24729 (= lt!47010 e!61746)))

(declare-fun c!15804 () Bool)

(declare-fun e!61748 () Bool)

(assert (=> d!24729 (= c!15804 e!61748)))

(declare-fun res!47893 () Bool)

(assert (=> d!24729 (=> (not res!47893) (not e!61748))))

(assert (=> d!24729 (= res!47893 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24729 (= lt!46989 e!61749)))

(declare-fun c!15806 () Bool)

(assert (=> d!24729 (= c!15806 (and (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24729 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24729 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47000)))

(declare-fun bm!9480 () Bool)

(declare-fun call!9486 () ListLongMap!1489)

(declare-fun call!9482 () ListLongMap!1489)

(assert (=> bm!9480 (= call!9486 call!9482)))

(declare-fun b!94609 () Bool)

(declare-fun e!61741 () Bool)

(assert (=> b!94609 (= e!61752 e!61741)))

(declare-fun res!47895 () Bool)

(assert (=> b!94609 (= res!47895 call!9485)))

(assert (=> b!94609 (=> (not res!47895) (not e!61741))))

(declare-fun bm!9481 () Bool)

(assert (=> bm!9481 (= call!9487 (contains!780 lt!47000 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94610 () Bool)

(declare-fun e!61743 () Bool)

(assert (=> b!94610 (= e!61743 e!61744)))

(declare-fun res!47889 () Bool)

(assert (=> b!94610 (=> (not res!47889) (not e!61744))))

(assert (=> b!94610 (= res!47889 (contains!780 lt!47000 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94610 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94611 () Bool)

(declare-fun c!15803 () Bool)

(assert (=> b!94611 (= c!15803 (and (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61745 () ListLongMap!1489)

(assert (=> b!94611 (= e!61742 e!61745)))

(declare-fun b!94612 () Bool)

(declare-fun res!47894 () Bool)

(assert (=> b!94612 (=> (not res!47894) (not e!61747))))

(assert (=> b!94612 (= res!47894 e!61752)))

(declare-fun c!15807 () Bool)

(assert (=> b!94612 (= c!15807 (not (= (bvand (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94613 () Bool)

(declare-fun res!47888 () Bool)

(assert (=> b!94613 (=> (not res!47888) (not e!61747))))

(assert (=> b!94613 (= res!47888 e!61743)))

(declare-fun res!47892 () Bool)

(assert (=> b!94613 (=> res!47892 e!61743)))

(assert (=> b!94613 (= res!47892 (not e!61751))))

(declare-fun res!47891 () Bool)

(assert (=> b!94613 (=> (not res!47891) (not e!61751))))

(assert (=> b!94613 (= res!47891 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94614 () Bool)

(declare-fun call!9483 () ListLongMap!1489)

(assert (=> b!94614 (= e!61742 call!9483)))

(declare-fun b!94615 () Bool)

(declare-fun call!9488 () ListLongMap!1489)

(assert (=> b!94615 (= e!61749 (+!128 call!9488 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!94616 () Bool)

(assert (=> b!94616 (= e!61741 (= (apply!90 lt!47000 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))

(declare-fun call!9484 () ListLongMap!1489)

(declare-fun bm!9482 () Bool)

(assert (=> bm!9482 (= call!9488 (+!128 (ite c!15806 call!9484 (ite c!15805 call!9482 call!9486)) (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!94617 () Bool)

(declare-fun lt!47008 () Unit!2786)

(assert (=> b!94617 (= e!61746 lt!47008)))

(declare-fun lt!46990 () ListLongMap!1489)

(assert (=> b!94617 (= lt!46990 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47004 () (_ BitVec 64))

(assert (=> b!94617 (= lt!47004 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46996 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46996 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47009 () Unit!2786)

(assert (=> b!94617 (= lt!47009 (addStillContains!66 lt!46990 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46996))))

(assert (=> b!94617 (contains!780 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46996)))

(declare-fun lt!47002 () Unit!2786)

(assert (=> b!94617 (= lt!47002 lt!47009)))

(declare-fun lt!47007 () ListLongMap!1489)

(assert (=> b!94617 (= lt!47007 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46999 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46999 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46993 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46993 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46994 () Unit!2786)

(assert (=> b!94617 (= lt!46994 (addApplyDifferent!66 lt!47007 lt!46999 (minValue!2322 newMap!16) lt!46993))))

(assert (=> b!94617 (= (apply!90 (+!128 lt!47007 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) lt!46993) (apply!90 lt!47007 lt!46993))))

(declare-fun lt!47005 () Unit!2786)

(assert (=> b!94617 (= lt!47005 lt!46994)))

(declare-fun lt!47001 () ListLongMap!1489)

(assert (=> b!94617 (= lt!47001 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46991 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46991 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47006 () (_ BitVec 64))

(assert (=> b!94617 (= lt!47006 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46992 () Unit!2786)

(assert (=> b!94617 (= lt!46992 (addApplyDifferent!66 lt!47001 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!47006))))

(assert (=> b!94617 (= (apply!90 (+!128 lt!47001 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47006) (apply!90 lt!47001 lt!47006))))

(declare-fun lt!46998 () Unit!2786)

(assert (=> b!94617 (= lt!46998 lt!46992)))

(declare-fun lt!47003 () ListLongMap!1489)

(assert (=> b!94617 (= lt!47003 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46995 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46995 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46997 () (_ BitVec 64))

(assert (=> b!94617 (= lt!46997 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94617 (= lt!47008 (addApplyDifferent!66 lt!47003 lt!46995 (minValue!2322 newMap!16) lt!46997))))

(assert (=> b!94617 (= (apply!90 (+!128 lt!47003 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) lt!46997) (apply!90 lt!47003 lt!46997))))

(declare-fun bm!9483 () Bool)

(assert (=> bm!9483 (= call!9482 call!9484)))

(declare-fun b!94618 () Bool)

(assert (=> b!94618 (= e!61745 call!9483)))

(declare-fun b!94619 () Bool)

(assert (=> b!94619 (= e!61745 call!9486)))

(declare-fun bm!9484 () Bool)

(assert (=> bm!9484 (= call!9483 call!9488)))

(declare-fun b!94620 () Bool)

(assert (=> b!94620 (= e!61740 e!61750)))

(declare-fun res!47890 () Bool)

(assert (=> b!94620 (= res!47890 call!9487)))

(assert (=> b!94620 (=> (not res!47890) (not e!61750))))

(declare-fun bm!9485 () Bool)

(assert (=> bm!9485 (= call!9484 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94621 () Bool)

(assert (=> b!94621 (= e!61748 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94622 () Bool)

(declare-fun Unit!2809 () Unit!2786)

(assert (=> b!94622 (= e!61746 Unit!2809)))

(assert (= (and d!24729 c!15806) b!94615))

(assert (= (and d!24729 (not c!15806)) b!94603))

(assert (= (and b!94603 c!15805) b!94614))

(assert (= (and b!94603 (not c!15805)) b!94611))

(assert (= (and b!94611 c!15803) b!94618))

(assert (= (and b!94611 (not c!15803)) b!94619))

(assert (= (or b!94618 b!94619) bm!9480))

(assert (= (or b!94614 bm!9480) bm!9483))

(assert (= (or b!94614 b!94618) bm!9484))

(assert (= (or b!94615 bm!9483) bm!9485))

(assert (= (or b!94615 bm!9484) bm!9482))

(assert (= (and d!24729 res!47893) b!94621))

(assert (= (and d!24729 c!15804) b!94617))

(assert (= (and d!24729 (not c!15804)) b!94622))

(assert (= (and d!24729 res!47896) b!94613))

(assert (= (and b!94613 res!47891) b!94606))

(assert (= (and b!94613 (not res!47892)) b!94610))

(assert (= (and b!94610 res!47889) b!94602))

(assert (= (and b!94613 res!47888) b!94612))

(assert (= (and b!94612 c!15807) b!94609))

(assert (= (and b!94612 (not c!15807)) b!94604))

(assert (= (and b!94609 res!47895) b!94616))

(assert (= (or b!94609 b!94604) bm!9479))

(assert (= (and b!94612 res!47894) b!94605))

(assert (= (and b!94605 c!15802) b!94620))

(assert (= (and b!94605 (not c!15802)) b!94607))

(assert (= (and b!94620 res!47890) b!94608))

(assert (= (or b!94620 b!94607) bm!9481))

(declare-fun b_lambda!4159 () Bool)

(assert (=> (not b_lambda!4159) (not b!94602)))

(assert (=> b!94602 t!5461))

(declare-fun b_and!5769 () Bool)

(assert (= b_and!5765 (and (=> t!5461 result!3197) b_and!5769)))

(assert (=> b!94602 t!5463))

(declare-fun b_and!5771 () Bool)

(assert (= b_and!5767 (and (=> t!5463 result!3199) b_and!5771)))

(declare-fun m!101913 () Bool)

(assert (=> b!94615 m!101913))

(declare-fun m!101915 () Bool)

(assert (=> b!94608 m!101915))

(assert (=> d!24729 m!101529))

(declare-fun m!101917 () Bool)

(assert (=> bm!9482 m!101917))

(declare-fun m!101919 () Bool)

(assert (=> b!94602 m!101919))

(assert (=> b!94602 m!101717))

(declare-fun m!101921 () Bool)

(assert (=> b!94602 m!101921))

(assert (=> b!94602 m!101717))

(assert (=> b!94602 m!101919))

(assert (=> b!94602 m!101635))

(assert (=> b!94602 m!101635))

(declare-fun m!101923 () Bool)

(assert (=> b!94602 m!101923))

(declare-fun m!101925 () Bool)

(assert (=> bm!9481 m!101925))

(declare-fun m!101927 () Bool)

(assert (=> bm!9479 m!101927))

(declare-fun m!101929 () Bool)

(assert (=> b!94617 m!101929))

(declare-fun m!101931 () Bool)

(assert (=> b!94617 m!101931))

(declare-fun m!101933 () Bool)

(assert (=> b!94617 m!101933))

(declare-fun m!101935 () Bool)

(assert (=> b!94617 m!101935))

(declare-fun m!101937 () Bool)

(assert (=> b!94617 m!101937))

(declare-fun m!101939 () Bool)

(assert (=> b!94617 m!101939))

(declare-fun m!101941 () Bool)

(assert (=> b!94617 m!101941))

(declare-fun m!101943 () Bool)

(assert (=> b!94617 m!101943))

(assert (=> b!94617 m!101635))

(declare-fun m!101945 () Bool)

(assert (=> b!94617 m!101945))

(declare-fun m!101947 () Bool)

(assert (=> b!94617 m!101947))

(declare-fun m!101949 () Bool)

(assert (=> b!94617 m!101949))

(assert (=> b!94617 m!101939))

(declare-fun m!101951 () Bool)

(assert (=> b!94617 m!101951))

(assert (=> b!94617 m!101931))

(declare-fun m!101953 () Bool)

(assert (=> b!94617 m!101953))

(assert (=> b!94617 m!101941))

(declare-fun m!101955 () Bool)

(assert (=> b!94617 m!101955))

(declare-fun m!101957 () Bool)

(assert (=> b!94617 m!101957))

(assert (=> b!94617 m!101933))

(declare-fun m!101959 () Bool)

(assert (=> b!94617 m!101959))

(assert (=> b!94606 m!101635))

(assert (=> b!94606 m!101635))

(assert (=> b!94606 m!101637))

(assert (=> b!94610 m!101635))

(assert (=> b!94610 m!101635))

(declare-fun m!101961 () Bool)

(assert (=> b!94610 m!101961))

(assert (=> b!94621 m!101635))

(assert (=> b!94621 m!101635))

(assert (=> b!94621 m!101637))

(assert (=> bm!9485 m!101955))

(declare-fun m!101963 () Bool)

(assert (=> b!94616 m!101963))

(assert (=> bm!9426 d!24729))

(assert (=> d!24585 d!24591))

(declare-fun d!24731 () Bool)

(assert (=> d!24731 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) from!355 Nil!1552)))

(assert (=> d!24731 true))

(declare-fun _$71!126 () Unit!2786)

(assert (=> d!24731 (= (choose!39 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!126)))

(declare-fun bs!3886 () Bool)

(assert (= bs!3886 d!24731))

(assert (=> bs!3886 m!101141))

(assert (=> d!24585 d!24731))

(declare-fun b!94631 () Bool)

(declare-fun e!61759 () Bool)

(declare-fun e!61761 () Bool)

(assert (=> b!94631 (= e!61759 e!61761)))

(declare-fun lt!47017 () (_ BitVec 64))

(assert (=> b!94631 (= lt!47017 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47018 () Unit!2786)

(assert (=> b!94631 (= lt!47018 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000))))

(assert (=> b!94631 (arrayContainsKey!0 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000)))

(declare-fun lt!47019 () Unit!2786)

(assert (=> b!94631 (= lt!47019 lt!47018)))

(declare-fun res!47902 () Bool)

(assert (=> b!94631 (= res!47902 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (_keys!4117 newMap!16) (mask!6510 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!94631 (=> (not res!47902) (not e!61761))))

(declare-fun bm!9488 () Bool)

(declare-fun call!9491 () Bool)

(assert (=> bm!9488 (= call!9491 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun d!24733 () Bool)

(declare-fun res!47901 () Bool)

(declare-fun e!61760 () Bool)

(assert (=> d!24733 (=> res!47901 e!61760)))

(assert (=> d!24733 (= res!47901 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24733 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 newMap!16) (mask!6510 newMap!16)) e!61760)))

(declare-fun b!94632 () Bool)

(assert (=> b!94632 (= e!61760 e!61759)))

(declare-fun c!15810 () Bool)

(assert (=> b!94632 (= c!15810 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94633 () Bool)

(assert (=> b!94633 (= e!61761 call!9491)))

(declare-fun b!94634 () Bool)

(assert (=> b!94634 (= e!61759 call!9491)))

(assert (= (and d!24733 (not res!47901)) b!94632))

(assert (= (and b!94632 c!15810) b!94631))

(assert (= (and b!94632 (not c!15810)) b!94634))

(assert (= (and b!94631 res!47902) b!94633))

(assert (= (or b!94633 b!94634) bm!9488))

(assert (=> b!94631 m!101635))

(declare-fun m!101965 () Bool)

(assert (=> b!94631 m!101965))

(declare-fun m!101967 () Bool)

(assert (=> b!94631 m!101967))

(assert (=> b!94631 m!101635))

(declare-fun m!101969 () Bool)

(assert (=> b!94631 m!101969))

(declare-fun m!101971 () Bool)

(assert (=> bm!9488 m!101971))

(assert (=> b!94632 m!101635))

(assert (=> b!94632 m!101635))

(assert (=> b!94632 m!101637))

(assert (=> b!94139 d!24733))

(declare-fun condMapEmpty!3687 () Bool)

(declare-fun mapDefault!3687 () ValueCell!962)

(assert (=> mapNonEmpty!3685 (= condMapEmpty!3687 (= mapRest!3685 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3687)))))

(declare-fun e!61763 () Bool)

(declare-fun mapRes!3687 () Bool)

(assert (=> mapNonEmpty!3685 (= tp!9463 (and e!61763 mapRes!3687))))

(declare-fun b!94636 () Bool)

(assert (=> b!94636 (= e!61763 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3687 () Bool)

(declare-fun tp!9465 () Bool)

(declare-fun e!61762 () Bool)

(assert (=> mapNonEmpty!3687 (= mapRes!3687 (and tp!9465 e!61762))))

(declare-fun mapRest!3687 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3687 () (_ BitVec 32))

(declare-fun mapValue!3687 () ValueCell!962)

(assert (=> mapNonEmpty!3687 (= mapRest!3685 (store mapRest!3687 mapKey!3687 mapValue!3687))))

(declare-fun mapIsEmpty!3687 () Bool)

(assert (=> mapIsEmpty!3687 mapRes!3687))

(declare-fun b!94635 () Bool)

(assert (=> b!94635 (= e!61762 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3685 condMapEmpty!3687) mapIsEmpty!3687))

(assert (= (and mapNonEmpty!3685 (not condMapEmpty!3687)) mapNonEmpty!3687))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!962) mapValue!3687)) b!94635))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!962) mapDefault!3687)) b!94636))

(declare-fun m!101973 () Bool)

(assert (=> mapNonEmpty!3687 m!101973))

(declare-fun condMapEmpty!3688 () Bool)

(declare-fun mapDefault!3688 () ValueCell!962)

(assert (=> mapNonEmpty!3686 (= condMapEmpty!3688 (= mapRest!3686 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3688)))))

(declare-fun e!61765 () Bool)

(declare-fun mapRes!3688 () Bool)

(assert (=> mapNonEmpty!3686 (= tp!9464 (and e!61765 mapRes!3688))))

(declare-fun b!94638 () Bool)

(assert (=> b!94638 (= e!61765 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3688 () Bool)

(declare-fun tp!9466 () Bool)

(declare-fun e!61764 () Bool)

(assert (=> mapNonEmpty!3688 (= mapRes!3688 (and tp!9466 e!61764))))

(declare-fun mapRest!3688 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3688 () (_ BitVec 32))

(declare-fun mapValue!3688 () ValueCell!962)

(assert (=> mapNonEmpty!3688 (= mapRest!3686 (store mapRest!3688 mapKey!3688 mapValue!3688))))

(declare-fun mapIsEmpty!3688 () Bool)

(assert (=> mapIsEmpty!3688 mapRes!3688))

(declare-fun b!94637 () Bool)

(assert (=> b!94637 (= e!61764 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3686 condMapEmpty!3688) mapIsEmpty!3688))

(assert (= (and mapNonEmpty!3686 (not condMapEmpty!3688)) mapNonEmpty!3688))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!962) mapValue!3688)) b!94637))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!962) mapDefault!3688)) b!94638))

(declare-fun m!101975 () Bool)

(assert (=> mapNonEmpty!3688 m!101975))

(declare-fun b_lambda!4161 () Bool)

(assert (= b_lambda!4151 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4161)))

(declare-fun b_lambda!4163 () Bool)

(assert (= b_lambda!4153 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4163)))

(declare-fun b_lambda!4165 () Bool)

(assert (= b_lambda!4157 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4165)))

(declare-fun b_lambda!4167 () Bool)

(assert (= b_lambda!4159 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4167)))

(declare-fun b_lambda!4169 () Bool)

(assert (= b_lambda!4155 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4169)))

(check-sat (not bm!9479) (not b!94526) (not b!94428) (not b!94541) (not b_lambda!4167) (not d!24669) (not b!94348) (not d!24631) (not d!24715) (not b!94542) (not d!24651) (not d!24691) (not d!24675) (not b!94606) (not b_next!2391) (not d!24705) (not b!94565) (not b!94418) (not b!94417) b_and!5769 (not d!24663) (not b_lambda!4169) (not b!94422) (not b!94477) (not bm!9442) (not d!24685) (not bm!9482) (not d!24673) (not b!94443) (not b!94475) (not bm!9471) (not d!24725) (not b!94410) (not b!94343) (not b_lambda!4163) (not b!94561) (not d!24643) (not bm!9481) (not b!94608) (not bm!9488) (not b!94601) (not b!94293) (not d!24699) (not b!94531) (not b!94311) (not bm!9472) (not b!94397) (not b!94338) (not d!24659) (not b!94339) (not b!94447) (not b!94617) (not b!94337) (not b!94408) (not bm!9478) (not b!94525) (not d!24679) (not d!24723) (not d!24711) (not b!94511) (not b!94345) (not d!24703) (not d!24635) (not b!94537) (not bm!9475) (not b!94523) (not b!94406) (not b!94510) (not d!24729) (not b!94597) (not b!94296) (not b!94304) (not d!24627) (not d!24645) (not b!94563) (not bm!9464) (not b!94557) (not b!94524) (not b!94515) (not b_lambda!4149) (not b!94306) (not b!94427) (not d!24709) (not d!24713) (not b!94585) (not b_lambda!4161) (not b!94420) (not b!94599) (not d!24665) (not d!24639) b_and!5771 (not b!94489) (not d!24647) (not d!24641) (not b!94476) (not d!24621) (not b!94550) (not bm!9461) (not d!24629) (not b!94409) (not d!24623) (not d!24693) (not d!24731) (not b!94390) (not d!24649) (not b!94346) (not d!24619) (not bm!9452) (not b!94399) (not b_lambda!4145) (not mapNonEmpty!3687) (not b!94522) (not b!94502) (not bm!9474) (not b!94384) (not d!24701) (not b!94548) (not b!94610) (not d!24707) (not b!94602) (not b!94392) (not bm!9439) (not b!94411) (not b!94546) (not d!24683) (not mapNonEmpty!3688) (not b!94621) (not d!24613) (not b!94297) (not d!24655) (not d!24653) (not b_next!2389) (not b_lambda!4165) (not b!94496) (not bm!9455) (not d!24667) (not b!94538) (not b!94495) (not b!94616) (not b!94539) (not b!94394) (not b!94305) (not b!94579) (not bm!9460) (not b!94631) (not b!94596) (not bm!9468) (not b!94341) (not b!94520) (not bm!9453) (not b!94298) (not bm!9467) (not b!94407) (not d!24657) (not b!94449) (not d!24695) (not d!24637) (not b!94568) (not b!94536) (not d!24689) tp_is_empty!2611 (not b!94534) (not b!94504) (not d!24633) (not bm!9465) (not b!94312) (not b!94632) (not b!94426) (not bm!9451) (not b!94500) (not b!94528) (not d!24697) (not b!94555) (not bm!9485) (not b!94615) (not b!94517) (not b!94556) (not b!94509) (not b!94519) (not b!94535) (not d!24727) (not b!94521) (not b!94404))
(check-sat b_and!5769 b_and!5771 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun d!24735 () Bool)

(assert (=> d!24735 (= (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94296 d!24735))

(declare-fun d!24737 () Bool)

(declare-fun e!61766 () Bool)

(assert (=> d!24737 e!61766))

(declare-fun res!47903 () Bool)

(assert (=> d!24737 (=> res!47903 e!61766)))

(declare-fun lt!47022 () Bool)

(assert (=> d!24737 (= res!47903 (not lt!47022))))

(declare-fun lt!47021 () Bool)

(assert (=> d!24737 (= lt!47022 lt!47021)))

(declare-fun lt!47020 () Unit!2786)

(declare-fun e!61767 () Unit!2786)

(assert (=> d!24737 (= lt!47020 e!61767)))

(declare-fun c!15811 () Bool)

(assert (=> d!24737 (= c!15811 lt!47021)))

(assert (=> d!24737 (= lt!47021 (containsKey!152 (toList!760 lt!46919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24737 (= (contains!780 lt!46919 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47022)))

(declare-fun b!94639 () Bool)

(declare-fun lt!47023 () Unit!2786)

(assert (=> b!94639 (= e!61767 lt!47023)))

(assert (=> b!94639 (= lt!47023 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94639 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94640 () Bool)

(declare-fun Unit!2810 () Unit!2786)

(assert (=> b!94640 (= e!61767 Unit!2810)))

(declare-fun b!94641 () Bool)

(assert (=> b!94641 (= e!61766 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24737 c!15811) b!94639))

(assert (= (and d!24737 (not c!15811)) b!94640))

(assert (= (and d!24737 (not res!47903)) b!94641))

(declare-fun m!101977 () Bool)

(assert (=> d!24737 m!101977))

(declare-fun m!101979 () Bool)

(assert (=> b!94639 m!101979))

(declare-fun m!101981 () Bool)

(assert (=> b!94639 m!101981))

(assert (=> b!94639 m!101981))

(declare-fun m!101983 () Bool)

(assert (=> b!94639 m!101983))

(assert (=> b!94641 m!101981))

(assert (=> b!94641 m!101981))

(assert (=> b!94641 m!101983))

(assert (=> bm!9467 d!24737))

(declare-fun d!24739 () Bool)

(declare-fun lt!47026 () Bool)

(declare-fun content!99 (List!1554) (InoxSet tuple2!2282))

(assert (=> d!24739 (= lt!47026 (select (content!99 (toList!760 lt!46945)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun e!61772 () Bool)

(assert (=> d!24739 (= lt!47026 e!61772)))

(declare-fun res!47908 () Bool)

(assert (=> d!24739 (=> (not res!47908) (not e!61772))))

(assert (=> d!24739 (= res!47908 ((_ is Cons!1550) (toList!760 lt!46945)))))

(assert (=> d!24739 (= (contains!782 (toList!760 lt!46945) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!47026)))

(declare-fun b!94646 () Bool)

(declare-fun e!61773 () Bool)

(assert (=> b!94646 (= e!61772 e!61773)))

(declare-fun res!47909 () Bool)

(assert (=> b!94646 (=> res!47909 e!61773)))

(assert (=> b!94646 (= res!47909 (= (h!2142 (toList!760 lt!46945)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94647 () Bool)

(assert (=> b!94647 (= e!61773 (contains!782 (t!5448 (toList!760 lt!46945)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24739 res!47908) b!94646))

(assert (= (and b!94646 (not res!47909)) b!94647))

(declare-fun m!101985 () Bool)

(assert (=> d!24739 m!101985))

(declare-fun m!101987 () Bool)

(assert (=> d!24739 m!101987))

(declare-fun m!101989 () Bool)

(assert (=> b!94647 m!101989))

(assert (=> b!94536 d!24739))

(declare-fun d!24741 () Bool)

(assert (=> d!24741 (= (isDefined!101 (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!357 (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3887 () Bool)

(assert (= bs!3887 d!24741))

(assert (=> bs!3887 m!101891))

(declare-fun m!101991 () Bool)

(assert (=> bs!3887 m!101991))

(assert (=> b!94565 d!24741))

(declare-fun d!24743 () Bool)

(declare-fun c!15812 () Bool)

(assert (=> d!24743 (= c!15812 (and ((_ is Cons!1550) (toList!760 call!9426)) (= (_1!1152 (h!2142 (toList!760 call!9426))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun e!61774 () Option!155)

(assert (=> d!24743 (= (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61774)))

(declare-fun b!94649 () Bool)

(declare-fun e!61775 () Option!155)

(assert (=> b!94649 (= e!61774 e!61775)))

(declare-fun c!15813 () Bool)

(assert (=> b!94649 (= c!15813 (and ((_ is Cons!1550) (toList!760 call!9426)) (not (= (_1!1152 (h!2142 (toList!760 call!9426))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun b!94651 () Bool)

(assert (=> b!94651 (= e!61775 None!153)))

(declare-fun b!94648 () Bool)

(assert (=> b!94648 (= e!61774 (Some!154 (_2!1152 (h!2142 (toList!760 call!9426)))))))

(declare-fun b!94650 () Bool)

(assert (=> b!94650 (= e!61775 (getValueByKey!149 (t!5448 (toList!760 call!9426)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24743 c!15812) b!94648))

(assert (= (and d!24743 (not c!15812)) b!94649))

(assert (= (and b!94649 c!15813) b!94650))

(assert (= (and b!94649 (not c!15813)) b!94651))

(assert (=> b!94650 m!101143))

(declare-fun m!101993 () Bool)

(assert (=> b!94650 m!101993))

(assert (=> b!94565 d!24743))

(declare-fun d!24745 () Bool)

(assert (=> d!24745 (= (content!98 Nil!1552) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!24683 d!24745))

(declare-fun d!24747 () Bool)

(declare-fun res!47910 () Bool)

(declare-fun e!61776 () Bool)

(assert (=> d!24747 (=> res!47910 e!61776)))

(assert (=> d!24747 (= res!47910 (= (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24747 (= (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!61776)))

(declare-fun b!94652 () Bool)

(declare-fun e!61777 () Bool)

(assert (=> b!94652 (= e!61776 e!61777)))

(declare-fun res!47911 () Bool)

(assert (=> b!94652 (=> (not res!47911) (not e!61777))))

(assert (=> b!94652 (= res!47911 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94653 () Bool)

(assert (=> b!94653 (= e!61777 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24747 (not res!47910)) b!94652))

(assert (= (and b!94652 res!47911) b!94653))

(declare-fun m!101995 () Bool)

(assert (=> d!24747 m!101995))

(assert (=> b!94653 m!101143))

(declare-fun m!101997 () Bool)

(assert (=> b!94653 m!101997))

(assert (=> b!94475 d!24747))

(declare-fun c!15814 () Bool)

(declare-fun d!24749 () Bool)

(assert (=> d!24749 (= c!15814 (and ((_ is Cons!1550) (t!5448 (toList!760 lt!46500))) (= (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500)))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun e!61778 () Option!155)

(assert (=> d!24749 (= (getValueByKey!149 (t!5448 (toList!760 lt!46500)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61778)))

(declare-fun b!94655 () Bool)

(declare-fun e!61779 () Option!155)

(assert (=> b!94655 (= e!61778 e!61779)))

(declare-fun c!15815 () Bool)

(assert (=> b!94655 (= c!15815 (and ((_ is Cons!1550) (t!5448 (toList!760 lt!46500))) (not (= (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500)))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun b!94657 () Bool)

(assert (=> b!94657 (= e!61779 None!153)))

(declare-fun b!94654 () Bool)

(assert (=> b!94654 (= e!61778 (Some!154 (_2!1152 (h!2142 (t!5448 (toList!760 lt!46500))))))))

(declare-fun b!94656 () Bool)

(assert (=> b!94656 (= e!61779 (getValueByKey!149 (t!5448 (t!5448 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24749 c!15814) b!94654))

(assert (= (and d!24749 (not c!15814)) b!94655))

(assert (= (and b!94655 c!15815) b!94656))

(assert (= (and b!94655 (not c!15815)) b!94657))

(assert (=> b!94656 m!101143))

(declare-fun m!101999 () Bool)

(assert (=> b!94656 m!101999))

(assert (=> b!94579 d!24749))

(declare-fun d!24751 () Bool)

(assert (=> d!24751 (isDefined!101 (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!47027 () Unit!2786)

(assert (=> d!24751 (= lt!47027 (choose!575 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61780 () Bool)

(assert (=> d!24751 e!61780))

(declare-fun res!47912 () Bool)

(assert (=> d!24751 (=> (not res!47912) (not e!61780))))

(assert (=> d!24751 (= res!47912 (isStrictlySorted!289 (toList!760 e!61548)))))

(assert (=> d!24751 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!47027)))

(declare-fun b!94658 () Bool)

(assert (=> b!94658 (= e!61780 (containsKey!152 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24751 res!47912) b!94658))

(assert (=> d!24751 m!101143))

(assert (=> d!24751 m!101831))

(assert (=> d!24751 m!101831))

(assert (=> d!24751 m!101833))

(assert (=> d!24751 m!101143))

(declare-fun m!102001 () Bool)

(assert (=> d!24751 m!102001))

(declare-fun m!102003 () Bool)

(assert (=> d!24751 m!102003))

(assert (=> b!94658 m!101143))

(assert (=> b!94658 m!101827))

(assert (=> b!94539 d!24751))

(declare-fun d!24753 () Bool)

(assert (=> d!24753 (= (isDefined!101 (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) (not (isEmpty!357 (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun bs!3888 () Bool)

(assert (= bs!3888 d!24753))

(assert (=> bs!3888 m!101831))

(declare-fun m!102005 () Bool)

(assert (=> bs!3888 m!102005))

(assert (=> b!94539 d!24753))

(declare-fun c!15816 () Bool)

(declare-fun d!24755 () Bool)

(assert (=> d!24755 (= c!15816 (and ((_ is Cons!1550) (toList!760 e!61548)) (= (_1!1152 (h!2142 (toList!760 e!61548))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun e!61781 () Option!155)

(assert (=> d!24755 (= (getValueByKey!149 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61781)))

(declare-fun b!94660 () Bool)

(declare-fun e!61782 () Option!155)

(assert (=> b!94660 (= e!61781 e!61782)))

(declare-fun c!15817 () Bool)

(assert (=> b!94660 (= c!15817 (and ((_ is Cons!1550) (toList!760 e!61548)) (not (= (_1!1152 (h!2142 (toList!760 e!61548))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(declare-fun b!94662 () Bool)

(assert (=> b!94662 (= e!61782 None!153)))

(declare-fun b!94659 () Bool)

(assert (=> b!94659 (= e!61781 (Some!154 (_2!1152 (h!2142 (toList!760 e!61548)))))))

(declare-fun b!94661 () Bool)

(assert (=> b!94661 (= e!61782 (getValueByKey!149 (t!5448 (toList!760 e!61548)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24755 c!15816) b!94659))

(assert (= (and d!24755 (not c!15816)) b!94660))

(assert (= (and b!94660 c!15817) b!94661))

(assert (= (and b!94660 (not c!15817)) b!94662))

(assert (=> b!94661 m!101143))

(declare-fun m!102007 () Bool)

(assert (=> b!94661 m!102007))

(assert (=> b!94539 d!24755))

(declare-fun d!24757 () Bool)

(assert (=> d!24757 (= (get!1275 (getValueByKey!149 (toList!760 lt!46613) lt!46618)) (v!2770 (getValueByKey!149 (toList!760 lt!46613) lt!46618)))))

(assert (=> d!24633 d!24757))

(declare-fun d!24759 () Bool)

(declare-fun c!15818 () Bool)

(assert (=> d!24759 (= c!15818 (and ((_ is Cons!1550) (toList!760 lt!46613)) (= (_1!1152 (h!2142 (toList!760 lt!46613))) lt!46618)))))

(declare-fun e!61783 () Option!155)

(assert (=> d!24759 (= (getValueByKey!149 (toList!760 lt!46613) lt!46618) e!61783)))

(declare-fun b!94664 () Bool)

(declare-fun e!61784 () Option!155)

(assert (=> b!94664 (= e!61783 e!61784)))

(declare-fun c!15819 () Bool)

(assert (=> b!94664 (= c!15819 (and ((_ is Cons!1550) (toList!760 lt!46613)) (not (= (_1!1152 (h!2142 (toList!760 lt!46613))) lt!46618))))))

(declare-fun b!94666 () Bool)

(assert (=> b!94666 (= e!61784 None!153)))

(declare-fun b!94663 () Bool)

(assert (=> b!94663 (= e!61783 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46613)))))))

(declare-fun b!94665 () Bool)

(assert (=> b!94665 (= e!61784 (getValueByKey!149 (t!5448 (toList!760 lt!46613)) lt!46618))))

(assert (= (and d!24759 c!15818) b!94663))

(assert (= (and d!24759 (not c!15818)) b!94664))

(assert (= (and b!94664 c!15819) b!94665))

(assert (= (and b!94664 (not c!15819)) b!94666))

(declare-fun m!102009 () Bool)

(assert (=> b!94665 m!102009))

(assert (=> d!24633 d!24759))

(declare-fun d!24761 () Bool)

(assert (=> d!24761 (= (validMask!0 (mask!6510 newMap!16)) (and (or (= (mask!6510 newMap!16) #b00000000000000000000000000000111) (= (mask!6510 newMap!16) #b00000000000000000000000000001111) (= (mask!6510 newMap!16) #b00000000000000000000000000011111) (= (mask!6510 newMap!16) #b00000000000000000000000000111111) (= (mask!6510 newMap!16) #b00000000000000000000000001111111) (= (mask!6510 newMap!16) #b00000000000000000000000011111111) (= (mask!6510 newMap!16) #b00000000000000000000000111111111) (= (mask!6510 newMap!16) #b00000000000000000000001111111111) (= (mask!6510 newMap!16) #b00000000000000000000011111111111) (= (mask!6510 newMap!16) #b00000000000000000000111111111111) (= (mask!6510 newMap!16) #b00000000000000000001111111111111) (= (mask!6510 newMap!16) #b00000000000000000011111111111111) (= (mask!6510 newMap!16) #b00000000000000000111111111111111) (= (mask!6510 newMap!16) #b00000000000000001111111111111111) (= (mask!6510 newMap!16) #b00000000000000011111111111111111) (= (mask!6510 newMap!16) #b00000000000000111111111111111111) (= (mask!6510 newMap!16) #b00000000000001111111111111111111) (= (mask!6510 newMap!16) #b00000000000011111111111111111111) (= (mask!6510 newMap!16) #b00000000000111111111111111111111) (= (mask!6510 newMap!16) #b00000000001111111111111111111111) (= (mask!6510 newMap!16) #b00000000011111111111111111111111) (= (mask!6510 newMap!16) #b00000000111111111111111111111111) (= (mask!6510 newMap!16) #b00000001111111111111111111111111) (= (mask!6510 newMap!16) #b00000011111111111111111111111111) (= (mask!6510 newMap!16) #b00000111111111111111111111111111) (= (mask!6510 newMap!16) #b00001111111111111111111111111111) (= (mask!6510 newMap!16) #b00011111111111111111111111111111) (= (mask!6510 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6510 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!24729 d!24761))

(assert (=> d!24655 d!24653))

(declare-fun d!24763 () Bool)

(assert (=> d!24763 (= (apply!90 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46609) (apply!90 lt!46615 lt!46609))))

(assert (=> d!24763 true))

(declare-fun _$34!847 () Unit!2786)

(assert (=> d!24763 (= (choose!568 lt!46615 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46609) _$34!847)))

(declare-fun bs!3889 () Bool)

(assert (= bs!3889 d!24763))

(assert (=> bs!3889 m!101303))

(assert (=> bs!3889 m!101303))

(assert (=> bs!3889 m!101329))

(assert (=> bs!3889 m!101305))

(assert (=> d!24655 d!24763))

(assert (=> d!24655 d!24641))

(assert (=> d!24655 d!24643))

(declare-fun d!24765 () Bool)

(declare-fun e!61785 () Bool)

(assert (=> d!24765 e!61785))

(declare-fun res!47913 () Bool)

(assert (=> d!24765 (=> res!47913 e!61785)))

(declare-fun lt!47030 () Bool)

(assert (=> d!24765 (= res!47913 (not lt!47030))))

(declare-fun lt!47029 () Bool)

(assert (=> d!24765 (= lt!47030 lt!47029)))

(declare-fun lt!47028 () Unit!2786)

(declare-fun e!61786 () Unit!2786)

(assert (=> d!24765 (= lt!47028 e!61786)))

(declare-fun c!15820 () Bool)

(assert (=> d!24765 (= c!15820 lt!47029)))

(assert (=> d!24765 (= lt!47029 (containsKey!152 (toList!760 lt!46615) lt!46609))))

(assert (=> d!24765 (= (contains!780 lt!46615 lt!46609) lt!47030)))

(declare-fun b!94668 () Bool)

(declare-fun lt!47031 () Unit!2786)

(assert (=> b!94668 (= e!61786 lt!47031)))

(assert (=> b!94668 (= lt!47031 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46615) lt!46609))))

(assert (=> b!94668 (isDefined!101 (getValueByKey!149 (toList!760 lt!46615) lt!46609))))

(declare-fun b!94669 () Bool)

(declare-fun Unit!2811 () Unit!2786)

(assert (=> b!94669 (= e!61786 Unit!2811)))

(declare-fun b!94670 () Bool)

(assert (=> b!94670 (= e!61785 (isDefined!101 (getValueByKey!149 (toList!760 lt!46615) lt!46609)))))

(assert (= (and d!24765 c!15820) b!94668))

(assert (= (and d!24765 (not c!15820)) b!94669))

(assert (= (and d!24765 (not res!47913)) b!94670))

(declare-fun m!102011 () Bool)

(assert (=> d!24765 m!102011))

(declare-fun m!102013 () Bool)

(assert (=> b!94668 m!102013))

(assert (=> b!94668 m!101587))

(assert (=> b!94668 m!101587))

(declare-fun m!102015 () Bool)

(assert (=> b!94668 m!102015))

(assert (=> b!94670 m!101587))

(assert (=> b!94670 m!101587))

(assert (=> b!94670 m!102015))

(assert (=> d!24655 d!24765))

(declare-fun lt!47032 () Bool)

(declare-fun d!24767 () Bool)

(assert (=> d!24767 (= lt!47032 (select (content!99 (toList!760 lt!46893)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!61787 () Bool)

(assert (=> d!24767 (= lt!47032 e!61787)))

(declare-fun res!47914 () Bool)

(assert (=> d!24767 (=> (not res!47914) (not e!61787))))

(assert (=> d!24767 (= res!47914 ((_ is Cons!1550) (toList!760 lt!46893)))))

(assert (=> d!24767 (= (contains!782 (toList!760 lt!46893) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47032)))

(declare-fun b!94671 () Bool)

(declare-fun e!61788 () Bool)

(assert (=> b!94671 (= e!61787 e!61788)))

(declare-fun res!47915 () Bool)

(assert (=> b!94671 (=> res!47915 e!61788)))

(assert (=> b!94671 (= res!47915 (= (h!2142 (toList!760 lt!46893)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94672 () Bool)

(assert (=> b!94672 (= e!61788 (contains!782 (t!5448 (toList!760 lt!46893)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24767 res!47914) b!94671))

(assert (= (and b!94671 (not res!47915)) b!94672))

(declare-fun m!102017 () Bool)

(assert (=> d!24767 m!102017))

(declare-fun m!102019 () Bool)

(assert (=> d!24767 m!102019))

(declare-fun m!102021 () Bool)

(assert (=> b!94672 m!102021))

(assert (=> b!94477 d!24767))

(declare-fun d!24769 () Bool)

(assert (=> d!24769 (= (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608)) (not (isEmpty!357 (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))))

(declare-fun bs!3890 () Bool)

(assert (= bs!3890 d!24769))

(assert (=> bs!3890 m!101627))

(declare-fun m!102023 () Bool)

(assert (=> bs!3890 m!102023))

(assert (=> b!94422 d!24769))

(declare-fun c!15821 () Bool)

(declare-fun d!24771 () Bool)

(assert (=> d!24771 (= c!15821 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46608)))))

(declare-fun e!61789 () Option!155)

(assert (=> d!24771 (= (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608) e!61789)))

(declare-fun b!94674 () Bool)

(declare-fun e!61790 () Option!155)

(assert (=> b!94674 (= e!61789 e!61790)))

(declare-fun c!15822 () Bool)

(assert (=> b!94674 (= c!15822 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (not (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46608))))))

(declare-fun b!94676 () Bool)

(assert (=> b!94676 (= e!61790 None!153)))

(declare-fun b!94673 () Bool)

(assert (=> b!94673 (= e!61789 (Some!154 (_2!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!94675 () Bool)

(assert (=> b!94675 (= e!61790 (getValueByKey!149 (t!5448 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!46608))))

(assert (= (and d!24771 c!15821) b!94673))

(assert (= (and d!24771 (not c!15821)) b!94674))

(assert (= (and b!94674 c!15822) b!94675))

(assert (= (and b!94674 (not c!15822)) b!94676))

(declare-fun m!102025 () Bool)

(assert (=> b!94675 m!102025))

(assert (=> b!94422 d!24771))

(declare-fun d!24773 () Bool)

(assert (=> d!24773 (= (get!1275 (getValueByKey!149 (toList!760 lt!46615) lt!46609)) (v!2770 (getValueByKey!149 (toList!760 lt!46615) lt!46609)))))

(assert (=> d!24643 d!24773))

(declare-fun d!24775 () Bool)

(declare-fun c!15823 () Bool)

(assert (=> d!24775 (= c!15823 (and ((_ is Cons!1550) (toList!760 lt!46615)) (= (_1!1152 (h!2142 (toList!760 lt!46615))) lt!46609)))))

(declare-fun e!61791 () Option!155)

(assert (=> d!24775 (= (getValueByKey!149 (toList!760 lt!46615) lt!46609) e!61791)))

(declare-fun b!94678 () Bool)

(declare-fun e!61792 () Option!155)

(assert (=> b!94678 (= e!61791 e!61792)))

(declare-fun c!15824 () Bool)

(assert (=> b!94678 (= c!15824 (and ((_ is Cons!1550) (toList!760 lt!46615)) (not (= (_1!1152 (h!2142 (toList!760 lt!46615))) lt!46609))))))

(declare-fun b!94680 () Bool)

(assert (=> b!94680 (= e!61792 None!153)))

(declare-fun b!94677 () Bool)

(assert (=> b!94677 (= e!61791 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46615)))))))

(declare-fun b!94679 () Bool)

(assert (=> b!94679 (= e!61792 (getValueByKey!149 (t!5448 (toList!760 lt!46615)) lt!46609))))

(assert (= (and d!24775 c!15823) b!94677))

(assert (= (and d!24775 (not c!15823)) b!94678))

(assert (= (and b!94678 c!15824) b!94679))

(assert (= (and b!94678 (not c!15824)) b!94680))

(declare-fun m!102027 () Bool)

(assert (=> b!94679 m!102027))

(assert (=> d!24643 d!24775))

(assert (=> bm!9453 d!24663))

(declare-fun b!94681 () Bool)

(declare-fun e!61793 () (_ BitVec 32))

(declare-fun call!9492 () (_ BitVec 32))

(assert (=> b!94681 (= e!61793 (bvadd #b00000000000000000000000000000001 call!9492))))

(declare-fun b!94682 () Bool)

(declare-fun e!61794 () (_ BitVec 32))

(assert (=> b!94682 (= e!61794 #b00000000000000000000000000000000)))

(declare-fun d!24777 () Bool)

(declare-fun lt!47033 () (_ BitVec 32))

(assert (=> d!24777 (and (bvsge lt!47033 #b00000000000000000000000000000000) (bvsle lt!47033 (bvsub (size!2236 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!24777 (= lt!47033 e!61794)))

(declare-fun c!15826 () Bool)

(assert (=> d!24777 (= c!15826 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24777 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2236 (_keys!4117 newMap!16)) (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24777 (= (arrayCountValidKeys!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))) lt!47033)))

(declare-fun b!94683 () Bool)

(assert (=> b!94683 (= e!61793 call!9492)))

(declare-fun b!94684 () Bool)

(assert (=> b!94684 (= e!61794 e!61793)))

(declare-fun c!15825 () Bool)

(assert (=> b!94684 (= c!15825 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9489 () Bool)

(assert (=> bm!9489 (= call!9492 (arrayCountValidKeys!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (= (and d!24777 c!15826) b!94682))

(assert (= (and d!24777 (not c!15826)) b!94684))

(assert (= (and b!94684 c!15825) b!94681))

(assert (= (and b!94684 (not c!15825)) b!94683))

(assert (= (or b!94681 b!94683) bm!9489))

(assert (=> b!94684 m!101995))

(assert (=> b!94684 m!101995))

(declare-fun m!102029 () Bool)

(assert (=> b!94684 m!102029))

(declare-fun m!102031 () Bool)

(assert (=> bm!9489 m!102031))

(assert (=> bm!9464 d!24777))

(declare-fun d!24779 () Bool)

(declare-fun e!61795 () Bool)

(assert (=> d!24779 e!61795))

(declare-fun res!47916 () Bool)

(assert (=> d!24779 (=> res!47916 e!61795)))

(declare-fun lt!47036 () Bool)

(assert (=> d!24779 (= res!47916 (not lt!47036))))

(declare-fun lt!47035 () Bool)

(assert (=> d!24779 (= lt!47036 lt!47035)))

(declare-fun lt!47034 () Unit!2786)

(declare-fun e!61796 () Unit!2786)

(assert (=> d!24779 (= lt!47034 e!61796)))

(declare-fun c!15827 () Bool)

(assert (=> d!24779 (= c!15827 lt!47035)))

(assert (=> d!24779 (= lt!47035 (containsKey!152 (toList!760 lt!46967) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24779 (= (contains!780 lt!46967 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47036)))

(declare-fun b!94685 () Bool)

(declare-fun lt!47037 () Unit!2786)

(assert (=> b!94685 (= e!61796 lt!47037)))

(assert (=> b!94685 (= lt!47037 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46967) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94685 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94686 () Bool)

(declare-fun Unit!2812 () Unit!2786)

(assert (=> b!94686 (= e!61796 Unit!2812)))

(declare-fun b!94687 () Bool)

(assert (=> b!94687 (= e!61795 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24779 c!15827) b!94685))

(assert (= (and d!24779 (not c!15827)) b!94686))

(assert (= (and d!24779 (not res!47916)) b!94687))

(declare-fun m!102033 () Bool)

(assert (=> d!24779 m!102033))

(declare-fun m!102035 () Bool)

(assert (=> b!94685 m!102035))

(declare-fun m!102037 () Bool)

(assert (=> b!94685 m!102037))

(assert (=> b!94685 m!102037))

(declare-fun m!102039 () Bool)

(assert (=> b!94685 m!102039))

(assert (=> b!94687 m!102037))

(assert (=> b!94687 m!102037))

(assert (=> b!94687 m!102039))

(assert (=> bm!9474 d!24779))

(declare-fun c!15828 () Bool)

(declare-fun d!24781 () Bool)

(assert (=> d!24781 (= c!15828 (and ((_ is Cons!1550) (toList!760 lt!46854)) (= (_1!1152 (h!2142 (toList!760 lt!46854))) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!61797 () Option!155)

(assert (=> d!24781 (= (getValueByKey!149 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!61797)))

(declare-fun b!94689 () Bool)

(declare-fun e!61798 () Option!155)

(assert (=> b!94689 (= e!61797 e!61798)))

(declare-fun c!15829 () Bool)

(assert (=> b!94689 (= c!15829 (and ((_ is Cons!1550) (toList!760 lt!46854)) (not (= (_1!1152 (h!2142 (toList!760 lt!46854))) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!94691 () Bool)

(assert (=> b!94691 (= e!61798 None!153)))

(declare-fun b!94688 () Bool)

(assert (=> b!94688 (= e!61797 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46854)))))))

(declare-fun b!94690 () Bool)

(assert (=> b!94690 (= e!61798 (getValueByKey!149 (t!5448 (toList!760 lt!46854)) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!24781 c!15828) b!94688))

(assert (= (and d!24781 (not c!15828)) b!94689))

(assert (= (and b!94689 c!15829) b!94690))

(assert (= (and b!94689 (not c!15829)) b!94691))

(declare-fun m!102041 () Bool)

(assert (=> b!94690 m!102041))

(assert (=> b!94410 d!24781))

(assert (=> bm!9451 d!24671))

(declare-fun d!24783 () Bool)

(declare-fun e!61799 () Bool)

(assert (=> d!24783 e!61799))

(declare-fun res!47918 () Bool)

(assert (=> d!24783 (=> (not res!47918) (not e!61799))))

(declare-fun lt!47039 () ListLongMap!1489)

(assert (=> d!24783 (= res!47918 (contains!780 lt!47039 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47041 () List!1554)

(assert (=> d!24783 (= lt!47039 (ListLongMap!1490 lt!47041))))

(declare-fun lt!47040 () Unit!2786)

(declare-fun lt!47038 () Unit!2786)

(assert (=> d!24783 (= lt!47040 lt!47038)))

(assert (=> d!24783 (= (getValueByKey!149 lt!47041 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24783 (= lt!47038 (lemmaContainsTupThenGetReturnValue!65 lt!47041 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24783 (= lt!47041 (insertStrictlySorted!68 (toList!760 call!9445) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24783 (= (+!128 call!9445 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47039)))

(declare-fun b!94692 () Bool)

(declare-fun res!47917 () Bool)

(assert (=> b!94692 (=> (not res!47917) (not e!61799))))

(assert (=> b!94692 (= res!47917 (= (getValueByKey!149 (toList!760 lt!47039) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94693 () Bool)

(assert (=> b!94693 (= e!61799 (contains!782 (toList!760 lt!47039) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24783 res!47918) b!94692))

(assert (= (and b!94692 res!47917) b!94693))

(declare-fun m!102043 () Bool)

(assert (=> d!24783 m!102043))

(declare-fun m!102045 () Bool)

(assert (=> d!24783 m!102045))

(declare-fun m!102047 () Bool)

(assert (=> d!24783 m!102047))

(declare-fun m!102049 () Bool)

(assert (=> d!24783 m!102049))

(declare-fun m!102051 () Bool)

(assert (=> b!94692 m!102051))

(declare-fun m!102053 () Bool)

(assert (=> b!94693 m!102053))

(assert (=> b!94343 d!24783))

(assert (=> b!94343 d!24615))

(declare-fun d!24785 () Bool)

(declare-fun e!61800 () Bool)

(assert (=> d!24785 e!61800))

(declare-fun res!47920 () Bool)

(assert (=> d!24785 (=> (not res!47920) (not e!61800))))

(declare-fun lt!47043 () ListLongMap!1489)

(assert (=> d!24785 (= res!47920 (contains!780 lt!47043 (_1!1152 (tuple2!2283 lt!46747 lt!46744))))))

(declare-fun lt!47045 () List!1554)

(assert (=> d!24785 (= lt!47043 (ListLongMap!1490 lt!47045))))

(declare-fun lt!47044 () Unit!2786)

(declare-fun lt!47042 () Unit!2786)

(assert (=> d!24785 (= lt!47044 lt!47042)))

(assert (=> d!24785 (= (getValueByKey!149 lt!47045 (_1!1152 (tuple2!2283 lt!46747 lt!46744))) (Some!154 (_2!1152 (tuple2!2283 lt!46747 lt!46744))))))

(assert (=> d!24785 (= lt!47042 (lemmaContainsTupThenGetReturnValue!65 lt!47045 (_1!1152 (tuple2!2283 lt!46747 lt!46744)) (_2!1152 (tuple2!2283 lt!46747 lt!46744))))))

(assert (=> d!24785 (= lt!47045 (insertStrictlySorted!68 (toList!760 lt!46742) (_1!1152 (tuple2!2283 lt!46747 lt!46744)) (_2!1152 (tuple2!2283 lt!46747 lt!46744))))))

(assert (=> d!24785 (= (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744)) lt!47043)))

(declare-fun b!94694 () Bool)

(declare-fun res!47919 () Bool)

(assert (=> b!94694 (=> (not res!47919) (not e!61800))))

(assert (=> b!94694 (= res!47919 (= (getValueByKey!149 (toList!760 lt!47043) (_1!1152 (tuple2!2283 lt!46747 lt!46744))) (Some!154 (_2!1152 (tuple2!2283 lt!46747 lt!46744)))))))

(declare-fun b!94695 () Bool)

(assert (=> b!94695 (= e!61800 (contains!782 (toList!760 lt!47043) (tuple2!2283 lt!46747 lt!46744)))))

(assert (= (and d!24785 res!47920) b!94694))

(assert (= (and b!94694 res!47919) b!94695))

(declare-fun m!102055 () Bool)

(assert (=> d!24785 m!102055))

(declare-fun m!102057 () Bool)

(assert (=> d!24785 m!102057))

(declare-fun m!102059 () Bool)

(assert (=> d!24785 m!102059))

(declare-fun m!102061 () Bool)

(assert (=> d!24785 m!102061))

(declare-fun m!102063 () Bool)

(assert (=> b!94694 m!102063))

(declare-fun m!102065 () Bool)

(assert (=> b!94695 m!102065))

(assert (=> b!94343 d!24785))

(declare-fun d!24787 () Bool)

(assert (=> d!24787 (not (contains!780 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744)) lt!46746))))

(declare-fun lt!47048 () Unit!2786)

(declare-fun choose!576 (ListLongMap!1489 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2786)

(assert (=> d!24787 (= lt!47048 (choose!576 lt!46742 lt!46747 lt!46744 lt!46746))))

(declare-fun e!61803 () Bool)

(assert (=> d!24787 e!61803))

(declare-fun res!47923 () Bool)

(assert (=> d!24787 (=> (not res!47923) (not e!61803))))

(assert (=> d!24787 (= res!47923 (not (contains!780 lt!46742 lt!46746)))))

(assert (=> d!24787 (= (addStillNotContains!40 lt!46742 lt!46747 lt!46744 lt!46746) lt!47048)))

(declare-fun b!94699 () Bool)

(assert (=> b!94699 (= e!61803 (not (= lt!46747 lt!46746)))))

(assert (= (and d!24787 res!47923) b!94699))

(assert (=> d!24787 m!101457))

(assert (=> d!24787 m!101457))

(assert (=> d!24787 m!101459))

(declare-fun m!102067 () Bool)

(assert (=> d!24787 m!102067))

(declare-fun m!102069 () Bool)

(assert (=> d!24787 m!102069))

(assert (=> b!94343 d!24787))

(declare-fun d!24789 () Bool)

(declare-fun e!61804 () Bool)

(assert (=> d!24789 e!61804))

(declare-fun res!47924 () Bool)

(assert (=> d!24789 (=> res!47924 e!61804)))

(declare-fun lt!47051 () Bool)

(assert (=> d!24789 (= res!47924 (not lt!47051))))

(declare-fun lt!47050 () Bool)

(assert (=> d!24789 (= lt!47051 lt!47050)))

(declare-fun lt!47049 () Unit!2786)

(declare-fun e!61805 () Unit!2786)

(assert (=> d!24789 (= lt!47049 e!61805)))

(declare-fun c!15830 () Bool)

(assert (=> d!24789 (= c!15830 lt!47050)))

(assert (=> d!24789 (= lt!47050 (containsKey!152 (toList!760 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744))) lt!46746))))

(assert (=> d!24789 (= (contains!780 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744)) lt!46746) lt!47051)))

(declare-fun b!94700 () Bool)

(declare-fun lt!47052 () Unit!2786)

(assert (=> b!94700 (= e!61805 lt!47052)))

(assert (=> b!94700 (= lt!47052 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744))) lt!46746))))

(assert (=> b!94700 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744))) lt!46746))))

(declare-fun b!94701 () Bool)

(declare-fun Unit!2813 () Unit!2786)

(assert (=> b!94701 (= e!61805 Unit!2813)))

(declare-fun b!94702 () Bool)

(assert (=> b!94702 (= e!61804 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46742 (tuple2!2283 lt!46747 lt!46744))) lt!46746)))))

(assert (= (and d!24789 c!15830) b!94700))

(assert (= (and d!24789 (not c!15830)) b!94701))

(assert (= (and d!24789 (not res!47924)) b!94702))

(declare-fun m!102071 () Bool)

(assert (=> d!24789 m!102071))

(declare-fun m!102073 () Bool)

(assert (=> b!94700 m!102073))

(declare-fun m!102075 () Bool)

(assert (=> b!94700 m!102075))

(assert (=> b!94700 m!102075))

(declare-fun m!102077 () Bool)

(assert (=> b!94700 m!102077))

(assert (=> b!94702 m!102075))

(assert (=> b!94702 m!102075))

(assert (=> b!94702 m!102077))

(assert (=> b!94343 d!24789))

(declare-fun d!24791 () Bool)

(assert (=> d!24791 (= (size!2242 newMap!16) (bvadd (_size!465 newMap!16) (bvsdiv (bvadd (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!94596 d!24791))

(declare-fun b!94703 () Bool)

(declare-fun e!61806 () Bool)

(assert (=> b!94703 (= e!61806 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!94703 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!94704 () Bool)

(declare-fun e!61808 () Bool)

(declare-fun lt!47059 () ListLongMap!1489)

(assert (=> b!94704 (= e!61808 (isEmpty!356 lt!47059))))

(declare-fun b!94705 () Bool)

(declare-fun e!61812 () Bool)

(declare-fun e!61811 () Bool)

(assert (=> b!94705 (= e!61812 e!61811)))

(assert (=> b!94705 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun res!47926 () Bool)

(assert (=> b!94705 (= res!47926 (contains!780 lt!47059 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!94705 (=> (not res!47926) (not e!61811))))

(declare-fun d!24793 () Bool)

(declare-fun e!61807 () Bool)

(assert (=> d!24793 e!61807))

(declare-fun res!47927 () Bool)

(assert (=> d!24793 (=> (not res!47927) (not e!61807))))

(assert (=> d!24793 (= res!47927 (not (contains!780 lt!47059 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61810 () ListLongMap!1489)

(assert (=> d!24793 (= lt!47059 e!61810)))

(declare-fun c!15832 () Bool)

(assert (=> d!24793 (= c!15832 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!24793 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992))))))

(assert (=> d!24793 (= (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))) lt!47059)))

(declare-fun b!94706 () Bool)

(declare-fun e!61809 () ListLongMap!1489)

(declare-fun call!9493 () ListLongMap!1489)

(assert (=> b!94706 (= e!61809 call!9493)))

(declare-fun b!94707 () Bool)

(assert (=> b!94707 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> b!94707 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> b!94707 (= e!61811 (= (apply!90 lt!47059 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94708 () Bool)

(assert (=> b!94708 (= e!61810 (ListLongMap!1490 Nil!1551))))

(declare-fun b!94709 () Bool)

(declare-fun lt!47054 () Unit!2786)

(declare-fun lt!47056 () Unit!2786)

(assert (=> b!94709 (= lt!47054 lt!47056)))

(declare-fun lt!47058 () (_ BitVec 64))

(declare-fun lt!47055 () V!3129)

(declare-fun lt!47053 () ListLongMap!1489)

(declare-fun lt!47057 () (_ BitVec 64))

(assert (=> b!94709 (not (contains!780 (+!128 lt!47053 (tuple2!2283 lt!47058 lt!47055)) lt!47057))))

(assert (=> b!94709 (= lt!47056 (addStillNotContains!40 lt!47053 lt!47058 lt!47055 lt!47057))))

(assert (=> b!94709 (= lt!47057 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94709 (= lt!47055 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94709 (= lt!47058 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!94709 (= lt!47053 call!9493)))

(assert (=> b!94709 (= e!61809 (+!128 call!9493 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94710 () Bool)

(assert (=> b!94710 (= e!61807 e!61812)))

(declare-fun c!15834 () Bool)

(assert (=> b!94710 (= c!15834 e!61806)))

(declare-fun res!47925 () Bool)

(assert (=> b!94710 (=> (not res!47925) (not e!61806))))

(assert (=> b!94710 (= res!47925 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94711 () Bool)

(declare-fun res!47928 () Bool)

(assert (=> b!94711 (=> (not res!47928) (not e!61807))))

(assert (=> b!94711 (= res!47928 (not (contains!780 lt!47059 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!9490 () Bool)

(assert (=> bm!9490 (= call!9493 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94712 () Bool)

(assert (=> b!94712 (= e!61808 (= lt!47059 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (_values!2418 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992))) (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) (minValue!2322 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94713 () Bool)

(assert (=> b!94713 (= e!61812 e!61808)))

(declare-fun c!15833 () Bool)

(assert (=> b!94713 (= c!15833 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94714 () Bool)

(assert (=> b!94714 (= e!61810 e!61809)))

(declare-fun c!15831 () Bool)

(assert (=> b!94714 (= c!15831 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!24793 c!15832) b!94708))

(assert (= (and d!24793 (not c!15832)) b!94714))

(assert (= (and b!94714 c!15831) b!94709))

(assert (= (and b!94714 (not c!15831)) b!94706))

(assert (= (or b!94709 b!94706) bm!9490))

(assert (= (and d!24793 res!47927) b!94711))

(assert (= (and b!94711 res!47928) b!94710))

(assert (= (and b!94710 res!47925) b!94703))

(assert (= (and b!94710 c!15834) b!94705))

(assert (= (and b!94710 (not c!15834)) b!94713))

(assert (= (and b!94705 res!47926) b!94707))

(assert (= (and b!94713 c!15833) b!94712))

(assert (= (and b!94713 (not c!15833)) b!94704))

(declare-fun b_lambda!4171 () Bool)

(assert (=> (not b_lambda!4171) (not b!94707)))

(assert (=> b!94707 t!5445))

(declare-fun b_and!5773 () Bool)

(assert (= b_and!5769 (and (=> t!5445 result!3177) b_and!5773)))

(assert (=> b!94707 t!5447))

(declare-fun b_and!5775 () Bool)

(assert (= b_and!5771 (and (=> t!5447 result!3181) b_and!5775)))

(declare-fun b_lambda!4173 () Bool)

(assert (=> (not b_lambda!4173) (not b!94709)))

(assert (=> b!94709 t!5445))

(declare-fun b_and!5777 () Bool)

(assert (= b_and!5773 (and (=> t!5445 result!3177) b_and!5777)))

(assert (=> b!94709 t!5447))

(declare-fun b_and!5779 () Bool)

(assert (= b_and!5775 (and (=> t!5447 result!3181) b_and!5779)))

(declare-fun m!102079 () Bool)

(assert (=> b!94711 m!102079))

(declare-fun m!102081 () Bool)

(assert (=> d!24793 m!102081))

(assert (=> d!24793 m!101173))

(declare-fun m!102083 () Bool)

(assert (=> b!94709 m!102083))

(declare-fun m!102085 () Bool)

(assert (=> b!94709 m!102085))

(assert (=> b!94709 m!101163))

(assert (=> b!94709 m!102083))

(assert (=> b!94709 m!101163))

(declare-fun m!102087 () Bool)

(assert (=> b!94709 m!102087))

(declare-fun m!102089 () Bool)

(assert (=> b!94709 m!102089))

(declare-fun m!102091 () Bool)

(assert (=> b!94709 m!102091))

(assert (=> b!94709 m!101415))

(assert (=> b!94709 m!102091))

(declare-fun m!102093 () Bool)

(assert (=> b!94709 m!102093))

(assert (=> b!94707 m!101415))

(assert (=> b!94707 m!102083))

(assert (=> b!94707 m!101415))

(declare-fun m!102095 () Bool)

(assert (=> b!94707 m!102095))

(assert (=> b!94707 m!101163))

(assert (=> b!94707 m!102083))

(assert (=> b!94707 m!101163))

(assert (=> b!94707 m!102087))

(assert (=> b!94703 m!101415))

(assert (=> b!94703 m!101415))

(declare-fun m!102097 () Bool)

(assert (=> b!94703 m!102097))

(declare-fun m!102099 () Bool)

(assert (=> b!94712 m!102099))

(assert (=> b!94714 m!101415))

(assert (=> b!94714 m!101415))

(assert (=> b!94714 m!102097))

(assert (=> b!94705 m!101415))

(assert (=> b!94705 m!101415))

(declare-fun m!102101 () Bool)

(assert (=> b!94705 m!102101))

(assert (=> bm!9490 m!102099))

(declare-fun m!102103 () Bool)

(assert (=> b!94704 m!102103))

(assert (=> b!94346 d!24793))

(declare-fun d!24795 () Bool)

(assert (=> d!24795 (= (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94606 d!24795))

(assert (=> b!94621 d!24795))

(assert (=> bm!9460 d!24671))

(declare-fun d!24797 () Bool)

(assert (=> d!24797 (arrayContainsKey!0 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000)))

(declare-fun lt!47062 () Unit!2786)

(declare-fun choose!13 (array!4183 (_ BitVec 64) (_ BitVec 32)) Unit!2786)

(assert (=> d!24797 (= lt!47062 (choose!13 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000))))

(assert (=> d!24797 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!24797 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000) lt!47062)))

(declare-fun bs!3891 () Bool)

(assert (= bs!3891 d!24797))

(assert (=> bs!3891 m!101967))

(declare-fun m!102105 () Bool)

(assert (=> bs!3891 m!102105))

(assert (=> b!94631 d!24797))

(declare-fun d!24799 () Bool)

(declare-fun res!47929 () Bool)

(declare-fun e!61813 () Bool)

(assert (=> d!24799 (=> res!47929 e!61813)))

(assert (=> d!24799 (= res!47929 (= (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) lt!47017))))

(assert (=> d!24799 (= (arrayContainsKey!0 (_keys!4117 newMap!16) lt!47017 #b00000000000000000000000000000000) e!61813)))

(declare-fun b!94715 () Bool)

(declare-fun e!61814 () Bool)

(assert (=> b!94715 (= e!61813 e!61814)))

(declare-fun res!47930 () Bool)

(assert (=> b!94715 (=> (not res!47930) (not e!61814))))

(assert (=> b!94715 (= res!47930 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94716 () Bool)

(assert (=> b!94716 (= e!61814 (arrayContainsKey!0 (_keys!4117 newMap!16) lt!47017 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24799 (not res!47929)) b!94715))

(assert (= (and b!94715 res!47930) b!94716))

(assert (=> d!24799 m!101635))

(declare-fun m!102107 () Bool)

(assert (=> b!94716 m!102107))

(assert (=> b!94631 d!24799))

(declare-fun b!94717 () Bool)

(declare-fun c!15837 () Bool)

(declare-fun lt!47065 () (_ BitVec 64))

(assert (=> b!94717 (= c!15837 (= lt!47065 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61816 () SeekEntryResult!245)

(declare-fun e!61817 () SeekEntryResult!245)

(assert (=> b!94717 (= e!61816 e!61817)))

(declare-fun b!94718 () Bool)

(declare-fun lt!47063 () SeekEntryResult!245)

(assert (=> b!94718 (= e!61817 (MissingZero!245 (index!3123 lt!47063)))))

(declare-fun b!94719 () Bool)

(assert (=> b!94719 (= e!61817 (seekKeyOrZeroReturnVacant!0 (x!12649 lt!47063) (index!3123 lt!47063) (index!3123 lt!47063) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun b!94721 () Bool)

(assert (=> b!94721 (= e!61816 (Found!245 (index!3123 lt!47063)))))

(declare-fun b!94722 () Bool)

(declare-fun e!61815 () SeekEntryResult!245)

(assert (=> b!94722 (= e!61815 Undefined!245)))

(declare-fun d!24801 () Bool)

(declare-fun lt!47064 () SeekEntryResult!245)

(assert (=> d!24801 (and (or ((_ is Undefined!245) lt!47064) (not ((_ is Found!245) lt!47064)) (and (bvsge (index!3122 lt!47064) #b00000000000000000000000000000000) (bvslt (index!3122 lt!47064) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!47064) ((_ is Found!245) lt!47064) (not ((_ is MissingZero!245) lt!47064)) (and (bvsge (index!3121 lt!47064) #b00000000000000000000000000000000) (bvslt (index!3121 lt!47064) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!47064) ((_ is Found!245) lt!47064) ((_ is MissingZero!245) lt!47064) (not ((_ is MissingVacant!245) lt!47064)) (and (bvsge (index!3124 lt!47064) #b00000000000000000000000000000000) (bvslt (index!3124 lt!47064) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!47064) (ite ((_ is Found!245) lt!47064) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!47064)) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!245) lt!47064) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!47064)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!245) lt!47064) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!47064)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24801 (= lt!47064 e!61815)))

(declare-fun c!15836 () Bool)

(assert (=> d!24801 (= c!15836 (and ((_ is Intermediate!245) lt!47063) (undefined!1057 lt!47063)))))

(assert (=> d!24801 (= lt!47063 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (mask!6510 newMap!16)) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (=> d!24801 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24801 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (_keys!4117 newMap!16) (mask!6510 newMap!16)) lt!47064)))

(declare-fun b!94720 () Bool)

(assert (=> b!94720 (= e!61815 e!61816)))

(assert (=> b!94720 (= lt!47065 (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!47063)))))

(declare-fun c!15835 () Bool)

(assert (=> b!94720 (= c!15835 (= lt!47065 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24801 c!15836) b!94722))

(assert (= (and d!24801 (not c!15836)) b!94720))

(assert (= (and b!94720 c!15835) b!94721))

(assert (= (and b!94720 (not c!15835)) b!94717))

(assert (= (and b!94717 c!15837) b!94718))

(assert (= (and b!94717 (not c!15837)) b!94719))

(assert (=> b!94719 m!101635))

(declare-fun m!102109 () Bool)

(assert (=> b!94719 m!102109))

(declare-fun m!102111 () Bool)

(assert (=> d!24801 m!102111))

(declare-fun m!102113 () Bool)

(assert (=> d!24801 m!102113))

(assert (=> d!24801 m!101635))

(declare-fun m!102115 () Bool)

(assert (=> d!24801 m!102115))

(assert (=> d!24801 m!101529))

(assert (=> d!24801 m!102115))

(assert (=> d!24801 m!101635))

(declare-fun m!102117 () Bool)

(assert (=> d!24801 m!102117))

(declare-fun m!102119 () Bool)

(assert (=> d!24801 m!102119))

(declare-fun m!102121 () Bool)

(assert (=> b!94720 m!102121))

(assert (=> b!94631 d!24801))

(assert (=> b!94568 d!24611))

(declare-fun d!24803 () Bool)

(declare-fun e!61818 () Bool)

(assert (=> d!24803 e!61818))

(declare-fun res!47931 () Bool)

(assert (=> d!24803 (=> res!47931 e!61818)))

(declare-fun lt!47068 () Bool)

(assert (=> d!24803 (= res!47931 (not lt!47068))))

(declare-fun lt!47067 () Bool)

(assert (=> d!24803 (= lt!47068 lt!47067)))

(declare-fun lt!47066 () Unit!2786)

(declare-fun e!61819 () Unit!2786)

(assert (=> d!24803 (= lt!47066 e!61819)))

(declare-fun c!15838 () Bool)

(assert (=> d!24803 (= c!15838 lt!47067)))

(assert (=> d!24803 (= lt!47067 (containsKey!152 (toList!760 lt!46748) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24803 (= (contains!780 lt!46748 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47068)))

(declare-fun b!94723 () Bool)

(declare-fun lt!47069 () Unit!2786)

(assert (=> b!94723 (= e!61819 lt!47069)))

(assert (=> b!94723 (= lt!47069 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46748) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94723 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94724 () Bool)

(declare-fun Unit!2814 () Unit!2786)

(assert (=> b!94724 (= e!61819 Unit!2814)))

(declare-fun b!94725 () Bool)

(assert (=> b!94725 (= e!61818 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24803 c!15838) b!94723))

(assert (= (and d!24803 (not c!15838)) b!94724))

(assert (= (and d!24803 (not res!47931)) b!94725))

(assert (=> d!24803 m!101269))

(declare-fun m!102123 () Bool)

(assert (=> d!24803 m!102123))

(assert (=> b!94723 m!101269))

(declare-fun m!102125 () Bool)

(assert (=> b!94723 m!102125))

(assert (=> b!94723 m!101269))

(declare-fun m!102127 () Bool)

(assert (=> b!94723 m!102127))

(assert (=> b!94723 m!102127))

(declare-fun m!102129 () Bool)

(assert (=> b!94723 m!102129))

(assert (=> b!94725 m!101269))

(assert (=> b!94725 m!102127))

(assert (=> b!94725 m!102127))

(assert (=> b!94725 m!102129))

(assert (=> b!94339 d!24803))

(declare-fun d!24805 () Bool)

(declare-fun e!61820 () Bool)

(assert (=> d!24805 e!61820))

(declare-fun res!47933 () Bool)

(assert (=> d!24805 (=> (not res!47933) (not e!61820))))

(declare-fun lt!47071 () ListLongMap!1489)

(assert (=> d!24805 (= res!47933 (contains!780 lt!47071 (_1!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun lt!47073 () List!1554)

(assert (=> d!24805 (= lt!47071 (ListLongMap!1490 lt!47073))))

(declare-fun lt!47072 () Unit!2786)

(declare-fun lt!47070 () Unit!2786)

(assert (=> d!24805 (= lt!47072 lt!47070)))

(assert (=> d!24805 (= (getValueByKey!149 lt!47073 (_1!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24805 (= lt!47070 (lemmaContainsTupThenGetReturnValue!65 lt!47073 (_1!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24805 (= lt!47073 (insertStrictlySorted!68 (toList!760 (ite c!15806 call!9484 (ite c!15805 call!9482 call!9486))) (_1!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24805 (= (+!128 (ite c!15806 call!9484 (ite c!15805 call!9482 call!9486)) (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) lt!47071)))

(declare-fun b!94726 () Bool)

(declare-fun res!47932 () Bool)

(assert (=> b!94726 (=> (not res!47932) (not e!61820))))

(assert (=> b!94726 (= res!47932 (= (getValueByKey!149 (toList!760 lt!47071) (_1!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))))

(declare-fun b!94727 () Bool)

(assert (=> b!94727 (= e!61820 (contains!782 (toList!760 lt!47071) (ite (or c!15806 c!15805) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (= (and d!24805 res!47933) b!94726))

(assert (= (and b!94726 res!47932) b!94727))

(declare-fun m!102131 () Bool)

(assert (=> d!24805 m!102131))

(declare-fun m!102133 () Bool)

(assert (=> d!24805 m!102133))

(declare-fun m!102135 () Bool)

(assert (=> d!24805 m!102135))

(declare-fun m!102137 () Bool)

(assert (=> d!24805 m!102137))

(declare-fun m!102139 () Bool)

(assert (=> b!94726 m!102139))

(declare-fun m!102141 () Bool)

(assert (=> b!94727 m!102141))

(assert (=> bm!9482 d!24805))

(declare-fun d!24807 () Bool)

(assert (=> d!24807 (= (apply!90 lt!46970 lt!46964) (get!1275 (getValueByKey!149 (toList!760 lt!46970) lt!46964)))))

(declare-fun bs!3892 () Bool)

(assert (= bs!3892 d!24807))

(declare-fun m!102143 () Bool)

(assert (=> bs!3892 m!102143))

(assert (=> bs!3892 m!102143))

(declare-fun m!102145 () Bool)

(assert (=> bs!3892 m!102145))

(assert (=> b!94557 d!24807))

(declare-fun d!24809 () Bool)

(assert (=> d!24809 (= (apply!90 lt!46968 lt!46973) (get!1275 (getValueByKey!149 (toList!760 lt!46968) lt!46973)))))

(declare-fun bs!3893 () Bool)

(assert (= bs!3893 d!24809))

(declare-fun m!102147 () Bool)

(assert (=> bs!3893 m!102147))

(assert (=> bs!3893 m!102147))

(declare-fun m!102149 () Bool)

(assert (=> bs!3893 m!102149))

(assert (=> b!94557 d!24809))

(declare-fun d!24811 () Bool)

(assert (=> d!24811 (= (apply!90 (+!128 lt!46970 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) lt!46964) (apply!90 lt!46970 lt!46964))))

(declare-fun lt!47074 () Unit!2786)

(assert (=> d!24811 (= lt!47074 (choose!568 lt!46970 lt!46962 (minValue!2322 newMap!16) lt!46964))))

(declare-fun e!61821 () Bool)

(assert (=> d!24811 e!61821))

(declare-fun res!47934 () Bool)

(assert (=> d!24811 (=> (not res!47934) (not e!61821))))

(assert (=> d!24811 (= res!47934 (contains!780 lt!46970 lt!46964))))

(assert (=> d!24811 (= (addApplyDifferent!66 lt!46970 lt!46962 (minValue!2322 newMap!16) lt!46964) lt!47074)))

(declare-fun b!94728 () Bool)

(assert (=> b!94728 (= e!61821 (not (= lt!46964 lt!46962)))))

(assert (= (and d!24811 res!47934) b!94728))

(assert (=> d!24811 m!101857))

(assert (=> d!24811 m!101855))

(declare-fun m!102151 () Bool)

(assert (=> d!24811 m!102151))

(declare-fun m!102153 () Bool)

(assert (=> d!24811 m!102153))

(assert (=> d!24811 m!101855))

(assert (=> d!24811 m!101881))

(assert (=> b!94557 d!24811))

(declare-fun d!24813 () Bool)

(assert (=> d!24813 (= (apply!90 (+!128 lt!46968 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) lt!46973) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46968 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))) lt!46973)))))

(declare-fun bs!3894 () Bool)

(assert (= bs!3894 d!24813))

(declare-fun m!102155 () Bool)

(assert (=> bs!3894 m!102155))

(assert (=> bs!3894 m!102155))

(declare-fun m!102157 () Bool)

(assert (=> bs!3894 m!102157))

(assert (=> b!94557 d!24813))

(declare-fun d!24815 () Bool)

(assert (=> d!24815 (= (apply!90 lt!46974 lt!46960) (get!1275 (getValueByKey!149 (toList!760 lt!46974) lt!46960)))))

(declare-fun bs!3895 () Bool)

(assert (= bs!3895 d!24815))

(declare-fun m!102159 () Bool)

(assert (=> bs!3895 m!102159))

(assert (=> bs!3895 m!102159))

(declare-fun m!102161 () Bool)

(assert (=> bs!3895 m!102161))

(assert (=> b!94557 d!24815))

(declare-fun d!24817 () Bool)

(declare-fun e!61822 () Bool)

(assert (=> d!24817 e!61822))

(declare-fun res!47936 () Bool)

(assert (=> d!24817 (=> (not res!47936) (not e!61822))))

(declare-fun lt!47076 () ListLongMap!1489)

(assert (=> d!24817 (= res!47936 (contains!780 lt!47076 (_1!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))))))

(declare-fun lt!47078 () List!1554)

(assert (=> d!24817 (= lt!47076 (ListLongMap!1490 lt!47078))))

(declare-fun lt!47077 () Unit!2786)

(declare-fun lt!47075 () Unit!2786)

(assert (=> d!24817 (= lt!47077 lt!47075)))

(assert (=> d!24817 (= (getValueByKey!149 lt!47078 (_1!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))))))

(assert (=> d!24817 (= lt!47075 (lemmaContainsTupThenGetReturnValue!65 lt!47078 (_1!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))))))

(assert (=> d!24817 (= lt!47078 (insertStrictlySorted!68 (toList!760 lt!46970) (_1!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))))))

(assert (=> d!24817 (= (+!128 lt!46970 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) lt!47076)))

(declare-fun b!94729 () Bool)

(declare-fun res!47935 () Bool)

(assert (=> b!94729 (=> (not res!47935) (not e!61822))))

(assert (=> b!94729 (= res!47935 (= (getValueByKey!149 (toList!760 lt!47076) (_1!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))))))))

(declare-fun b!94730 () Bool)

(assert (=> b!94730 (= e!61822 (contains!782 (toList!760 lt!47076) (tuple2!2283 lt!46962 (minValue!2322 newMap!16))))))

(assert (= (and d!24817 res!47936) b!94729))

(assert (= (and b!94729 res!47935) b!94730))

(declare-fun m!102163 () Bool)

(assert (=> d!24817 m!102163))

(declare-fun m!102165 () Bool)

(assert (=> d!24817 m!102165))

(declare-fun m!102167 () Bool)

(assert (=> d!24817 m!102167))

(declare-fun m!102169 () Bool)

(assert (=> d!24817 m!102169))

(declare-fun m!102171 () Bool)

(assert (=> b!94729 m!102171))

(declare-fun m!102173 () Bool)

(assert (=> b!94730 m!102173))

(assert (=> b!94557 d!24817))

(declare-fun d!24819 () Bool)

(declare-fun e!61823 () Bool)

(assert (=> d!24819 e!61823))

(declare-fun res!47938 () Bool)

(assert (=> d!24819 (=> (not res!47938) (not e!61823))))

(declare-fun lt!47080 () ListLongMap!1489)

(assert (=> d!24819 (= res!47938 (contains!780 lt!47080 (_1!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))))))

(declare-fun lt!47082 () List!1554)

(assert (=> d!24819 (= lt!47080 (ListLongMap!1490 lt!47082))))

(declare-fun lt!47081 () Unit!2786)

(declare-fun lt!47079 () Unit!2786)

(assert (=> d!24819 (= lt!47081 lt!47079)))

(assert (=> d!24819 (= (getValueByKey!149 lt!47082 (_1!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))))))

(assert (=> d!24819 (= lt!47079 (lemmaContainsTupThenGetReturnValue!65 lt!47082 (_1!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))))))

(assert (=> d!24819 (= lt!47082 (insertStrictlySorted!68 (toList!760 lt!46974) (_1!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))))))

(assert (=> d!24819 (= (+!128 lt!46974 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) lt!47080)))

(declare-fun b!94731 () Bool)

(declare-fun res!47937 () Bool)

(assert (=> b!94731 (=> (not res!47937) (not e!61823))))

(assert (=> b!94731 (= res!47937 (= (getValueByKey!149 (toList!760 lt!47080) (_1!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))))))))

(declare-fun b!94732 () Bool)

(assert (=> b!94732 (= e!61823 (contains!782 (toList!760 lt!47080) (tuple2!2283 lt!46966 (minValue!2322 newMap!16))))))

(assert (= (and d!24819 res!47938) b!94731))

(assert (= (and b!94731 res!47937) b!94732))

(declare-fun m!102175 () Bool)

(assert (=> d!24819 m!102175))

(declare-fun m!102177 () Bool)

(assert (=> d!24819 m!102177))

(declare-fun m!102179 () Bool)

(assert (=> d!24819 m!102179))

(declare-fun m!102181 () Bool)

(assert (=> d!24819 m!102181))

(declare-fun m!102183 () Bool)

(assert (=> b!94731 m!102183))

(declare-fun m!102185 () Bool)

(assert (=> b!94732 m!102185))

(assert (=> b!94557 d!24819))

(declare-fun d!24821 () Bool)

(assert (=> d!24821 (= (apply!90 (+!128 lt!46970 (tuple2!2283 lt!46962 (minValue!2322 newMap!16))) lt!46964) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46970 (tuple2!2283 lt!46962 (minValue!2322 newMap!16)))) lt!46964)))))

(declare-fun bs!3896 () Bool)

(assert (= bs!3896 d!24821))

(declare-fun m!102187 () Bool)

(assert (=> bs!3896 m!102187))

(assert (=> bs!3896 m!102187))

(declare-fun m!102189 () Bool)

(assert (=> bs!3896 m!102189))

(assert (=> b!94557 d!24821))

(declare-fun d!24823 () Bool)

(assert (=> d!24823 (= (apply!90 (+!128 lt!46968 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) lt!46973) (apply!90 lt!46968 lt!46973))))

(declare-fun lt!47083 () Unit!2786)

(assert (=> d!24823 (= lt!47083 (choose!568 lt!46968 lt!46958 (zeroValue!2322 newMap!16) lt!46973))))

(declare-fun e!61824 () Bool)

(assert (=> d!24823 e!61824))

(declare-fun res!47939 () Bool)

(assert (=> d!24823 (=> (not res!47939) (not e!61824))))

(assert (=> d!24823 (= res!47939 (contains!780 lt!46968 lt!46973))))

(assert (=> d!24823 (= (addApplyDifferent!66 lt!46968 lt!46958 (zeroValue!2322 newMap!16) lt!46973) lt!47083)))

(declare-fun b!94733 () Bool)

(assert (=> b!94733 (= e!61824 (not (= lt!46973 lt!46958)))))

(assert (= (and d!24823 res!47939) b!94733))

(assert (=> d!24823 m!101867))

(assert (=> d!24823 m!101863))

(declare-fun m!102191 () Bool)

(assert (=> d!24823 m!102191))

(declare-fun m!102193 () Bool)

(assert (=> d!24823 m!102193))

(assert (=> d!24823 m!101863))

(assert (=> d!24823 m!101865))

(assert (=> b!94557 d!24823))

(declare-fun d!24825 () Bool)

(assert (=> d!24825 (= (apply!90 (+!128 lt!46974 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) lt!46960) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46974 (tuple2!2283 lt!46966 (minValue!2322 newMap!16)))) lt!46960)))))

(declare-fun bs!3897 () Bool)

(assert (= bs!3897 d!24825))

(declare-fun m!102195 () Bool)

(assert (=> bs!3897 m!102195))

(assert (=> bs!3897 m!102195))

(declare-fun m!102197 () Bool)

(assert (=> bs!3897 m!102197))

(assert (=> b!94557 d!24825))

(declare-fun d!24827 () Bool)

(assert (=> d!24827 (= (apply!90 (+!128 lt!46974 (tuple2!2283 lt!46966 (minValue!2322 newMap!16))) lt!46960) (apply!90 lt!46974 lt!46960))))

(declare-fun lt!47084 () Unit!2786)

(assert (=> d!24827 (= lt!47084 (choose!568 lt!46974 lt!46966 (minValue!2322 newMap!16) lt!46960))))

(declare-fun e!61825 () Bool)

(assert (=> d!24827 e!61825))

(declare-fun res!47940 () Bool)

(assert (=> d!24827 (=> (not res!47940) (not e!61825))))

(assert (=> d!24827 (= res!47940 (contains!780 lt!46974 lt!46960))))

(assert (=> d!24827 (= (addApplyDifferent!66 lt!46974 lt!46966 (minValue!2322 newMap!16) lt!46960) lt!47084)))

(declare-fun b!94734 () Bool)

(assert (=> b!94734 (= e!61825 (not (= lt!46960 lt!46966)))))

(assert (= (and d!24827 res!47940) b!94734))

(assert (=> d!24827 m!101879))

(assert (=> d!24827 m!101861))

(declare-fun m!102199 () Bool)

(assert (=> d!24827 m!102199))

(declare-fun m!102201 () Bool)

(assert (=> d!24827 m!102201))

(assert (=> d!24827 m!101861))

(assert (=> d!24827 m!101873))

(assert (=> b!94557 d!24827))

(declare-fun d!24829 () Bool)

(declare-fun e!61826 () Bool)

(assert (=> d!24829 e!61826))

(declare-fun res!47942 () Bool)

(assert (=> d!24829 (=> (not res!47942) (not e!61826))))

(declare-fun lt!47086 () ListLongMap!1489)

(assert (=> d!24829 (= res!47942 (contains!780 lt!47086 (_1!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47088 () List!1554)

(assert (=> d!24829 (= lt!47086 (ListLongMap!1490 lt!47088))))

(declare-fun lt!47087 () Unit!2786)

(declare-fun lt!47085 () Unit!2786)

(assert (=> d!24829 (= lt!47087 lt!47085)))

(assert (=> d!24829 (= (getValueByKey!149 lt!47088 (_1!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24829 (= lt!47085 (lemmaContainsTupThenGetReturnValue!65 lt!47088 (_1!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24829 (= lt!47088 (insertStrictlySorted!68 (toList!760 lt!46957) (_1!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24829 (= (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) lt!47086)))

(declare-fun b!94735 () Bool)

(declare-fun res!47941 () Bool)

(assert (=> b!94735 (=> (not res!47941) (not e!61826))))

(assert (=> b!94735 (= res!47941 (= (getValueByKey!149 (toList!760 lt!47086) (_1!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94736 () Bool)

(assert (=> b!94736 (= e!61826 (contains!782 (toList!760 lt!47086) (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24829 res!47942) b!94735))

(assert (= (and b!94735 res!47941) b!94736))

(declare-fun m!102203 () Bool)

(assert (=> d!24829 m!102203))

(declare-fun m!102205 () Bool)

(assert (=> d!24829 m!102205))

(declare-fun m!102207 () Bool)

(assert (=> d!24829 m!102207))

(declare-fun m!102209 () Bool)

(assert (=> d!24829 m!102209))

(declare-fun m!102211 () Bool)

(assert (=> b!94735 m!102211))

(declare-fun m!102213 () Bool)

(assert (=> b!94736 m!102213))

(assert (=> b!94557 d!24829))

(declare-fun d!24831 () Bool)

(declare-fun e!61827 () Bool)

(assert (=> d!24831 e!61827))

(declare-fun res!47943 () Bool)

(assert (=> d!24831 (=> res!47943 e!61827)))

(declare-fun lt!47091 () Bool)

(assert (=> d!24831 (= res!47943 (not lt!47091))))

(declare-fun lt!47090 () Bool)

(assert (=> d!24831 (= lt!47091 lt!47090)))

(declare-fun lt!47089 () Unit!2786)

(declare-fun e!61828 () Unit!2786)

(assert (=> d!24831 (= lt!47089 e!61828)))

(declare-fun c!15839 () Bool)

(assert (=> d!24831 (= c!15839 lt!47090)))

(assert (=> d!24831 (= lt!47090 (containsKey!152 (toList!760 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) lt!46963))))

(assert (=> d!24831 (= (contains!780 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) lt!46963) lt!47091)))

(declare-fun b!94737 () Bool)

(declare-fun lt!47092 () Unit!2786)

(assert (=> b!94737 (= e!61828 lt!47092)))

(assert (=> b!94737 (= lt!47092 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) lt!46963))))

(assert (=> b!94737 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) lt!46963))))

(declare-fun b!94738 () Bool)

(declare-fun Unit!2815 () Unit!2786)

(assert (=> b!94738 (= e!61828 Unit!2815)))

(declare-fun b!94739 () Bool)

(assert (=> b!94739 (= e!61827 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16)))) lt!46963)))))

(assert (= (and d!24831 c!15839) b!94737))

(assert (= (and d!24831 (not c!15839)) b!94738))

(assert (= (and d!24831 (not res!47943)) b!94739))

(declare-fun m!102215 () Bool)

(assert (=> d!24831 m!102215))

(declare-fun m!102217 () Bool)

(assert (=> b!94737 m!102217))

(declare-fun m!102219 () Bool)

(assert (=> b!94737 m!102219))

(assert (=> b!94737 m!102219))

(declare-fun m!102221 () Bool)

(assert (=> b!94737 m!102221))

(assert (=> b!94739 m!102219))

(assert (=> b!94739 m!102219))

(assert (=> b!94739 m!102221))

(assert (=> b!94557 d!24831))

(declare-fun b!94740 () Bool)

(declare-fun e!61829 () Bool)

(assert (=> b!94740 (= e!61829 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94740 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94741 () Bool)

(declare-fun e!61831 () Bool)

(declare-fun lt!47099 () ListLongMap!1489)

(assert (=> b!94741 (= e!61831 (isEmpty!356 lt!47099))))

(declare-fun b!94742 () Bool)

(declare-fun e!61835 () Bool)

(declare-fun e!61834 () Bool)

(assert (=> b!94742 (= e!61835 e!61834)))

(assert (=> b!94742 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!47945 () Bool)

(assert (=> b!94742 (= res!47945 (contains!780 lt!47099 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94742 (=> (not res!47945) (not e!61834))))

(declare-fun d!24833 () Bool)

(declare-fun e!61830 () Bool)

(assert (=> d!24833 e!61830))

(declare-fun res!47946 () Bool)

(assert (=> d!24833 (=> (not res!47946) (not e!61830))))

(assert (=> d!24833 (= res!47946 (not (contains!780 lt!47099 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61833 () ListLongMap!1489)

(assert (=> d!24833 (= lt!47099 e!61833)))

(declare-fun c!15841 () Bool)

(assert (=> d!24833 (= c!15841 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24833 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24833 (= (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47099)))

(declare-fun b!94743 () Bool)

(declare-fun e!61832 () ListLongMap!1489)

(declare-fun call!9494 () ListLongMap!1489)

(assert (=> b!94743 (= e!61832 call!9494)))

(declare-fun b!94744 () Bool)

(assert (=> b!94744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> b!94744 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (_values!2418 newMap!16))))))

(assert (=> b!94744 (= e!61834 (= (apply!90 lt!47099 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94745 () Bool)

(assert (=> b!94745 (= e!61833 (ListLongMap!1490 Nil!1551))))

(declare-fun b!94746 () Bool)

(declare-fun lt!47094 () Unit!2786)

(declare-fun lt!47096 () Unit!2786)

(assert (=> b!94746 (= lt!47094 lt!47096)))

(declare-fun lt!47095 () V!3129)

(declare-fun lt!47093 () ListLongMap!1489)

(declare-fun lt!47097 () (_ BitVec 64))

(declare-fun lt!47098 () (_ BitVec 64))

(assert (=> b!94746 (not (contains!780 (+!128 lt!47093 (tuple2!2283 lt!47098 lt!47095)) lt!47097))))

(assert (=> b!94746 (= lt!47096 (addStillNotContains!40 lt!47093 lt!47098 lt!47095 lt!47097))))

(assert (=> b!94746 (= lt!47097 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94746 (= lt!47095 (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94746 (= lt!47098 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94746 (= lt!47093 call!9494)))

(assert (=> b!94746 (= e!61832 (+!128 call!9494 (tuple2!2283 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94747 () Bool)

(assert (=> b!94747 (= e!61830 e!61835)))

(declare-fun c!15843 () Bool)

(assert (=> b!94747 (= c!15843 e!61829)))

(declare-fun res!47944 () Bool)

(assert (=> b!94747 (=> (not res!47944) (not e!61829))))

(assert (=> b!94747 (= res!47944 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94748 () Bool)

(declare-fun res!47947 () Bool)

(assert (=> b!94748 (=> (not res!47947) (not e!61830))))

(assert (=> b!94748 (= res!47947 (not (contains!780 lt!47099 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!9491 () Bool)

(assert (=> bm!9491 (= call!9494 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94749 () Bool)

(assert (=> b!94749 (= e!61831 (= lt!47099 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!94750 () Bool)

(assert (=> b!94750 (= e!61835 e!61831)))

(declare-fun c!15842 () Bool)

(assert (=> b!94750 (= c!15842 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94751 () Bool)

(assert (=> b!94751 (= e!61833 e!61832)))

(declare-fun c!15840 () Bool)

(assert (=> b!94751 (= c!15840 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24833 c!15841) b!94745))

(assert (= (and d!24833 (not c!15841)) b!94751))

(assert (= (and b!94751 c!15840) b!94746))

(assert (= (and b!94751 (not c!15840)) b!94743))

(assert (= (or b!94746 b!94743) bm!9491))

(assert (= (and d!24833 res!47946) b!94748))

(assert (= (and b!94748 res!47947) b!94747))

(assert (= (and b!94747 res!47944) b!94740))

(assert (= (and b!94747 c!15843) b!94742))

(assert (= (and b!94747 (not c!15843)) b!94750))

(assert (= (and b!94742 res!47945) b!94744))

(assert (= (and b!94750 c!15842) b!94749))

(assert (= (and b!94750 (not c!15842)) b!94741))

(declare-fun b_lambda!4175 () Bool)

(assert (=> (not b_lambda!4175) (not b!94744)))

(assert (=> b!94744 t!5461))

(declare-fun b_and!5781 () Bool)

(assert (= b_and!5777 (and (=> t!5461 result!3197) b_and!5781)))

(assert (=> b!94744 t!5463))

(declare-fun b_and!5783 () Bool)

(assert (= b_and!5779 (and (=> t!5463 result!3199) b_and!5783)))

(declare-fun b_lambda!4177 () Bool)

(assert (=> (not b_lambda!4177) (not b!94746)))

(assert (=> b!94746 t!5461))

(declare-fun b_and!5785 () Bool)

(assert (= b_and!5781 (and (=> t!5461 result!3197) b_and!5785)))

(assert (=> b!94746 t!5463))

(declare-fun b_and!5787 () Bool)

(assert (= b_and!5783 (and (=> t!5463 result!3199) b_and!5787)))

(declare-fun m!102223 () Bool)

(assert (=> b!94748 m!102223))

(declare-fun m!102225 () Bool)

(assert (=> d!24833 m!102225))

(assert (=> d!24833 m!101529))

(assert (=> b!94746 m!101841))

(declare-fun m!102227 () Bool)

(assert (=> b!94746 m!102227))

(assert (=> b!94746 m!101717))

(assert (=> b!94746 m!101841))

(assert (=> b!94746 m!101717))

(assert (=> b!94746 m!101843))

(declare-fun m!102229 () Bool)

(assert (=> b!94746 m!102229))

(declare-fun m!102231 () Bool)

(assert (=> b!94746 m!102231))

(assert (=> b!94746 m!101635))

(assert (=> b!94746 m!102231))

(declare-fun m!102233 () Bool)

(assert (=> b!94746 m!102233))

(assert (=> b!94744 m!101635))

(assert (=> b!94744 m!101841))

(assert (=> b!94744 m!101635))

(declare-fun m!102235 () Bool)

(assert (=> b!94744 m!102235))

(assert (=> b!94744 m!101717))

(assert (=> b!94744 m!101841))

(assert (=> b!94744 m!101717))

(assert (=> b!94744 m!101843))

(assert (=> b!94740 m!101635))

(assert (=> b!94740 m!101635))

(assert (=> b!94740 m!101637))

(declare-fun m!102237 () Bool)

(assert (=> b!94749 m!102237))

(assert (=> b!94751 m!101635))

(assert (=> b!94751 m!101635))

(assert (=> b!94751 m!101637))

(assert (=> b!94742 m!101635))

(assert (=> b!94742 m!101635))

(declare-fun m!102239 () Bool)

(assert (=> b!94742 m!102239))

(assert (=> bm!9491 m!102237))

(declare-fun m!102241 () Bool)

(assert (=> b!94741 m!102241))

(assert (=> b!94557 d!24833))

(declare-fun d!24835 () Bool)

(assert (=> d!24835 (contains!780 (+!128 lt!46957 (tuple2!2283 lt!46971 (zeroValue!2322 newMap!16))) lt!46963)))

(declare-fun lt!47100 () Unit!2786)

(assert (=> d!24835 (= lt!47100 (choose!569 lt!46957 lt!46971 (zeroValue!2322 newMap!16) lt!46963))))

(assert (=> d!24835 (contains!780 lt!46957 lt!46963)))

(assert (=> d!24835 (= (addStillContains!66 lt!46957 lt!46971 (zeroValue!2322 newMap!16) lt!46963) lt!47100)))

(declare-fun bs!3898 () Bool)

(assert (= bs!3898 d!24835))

(assert (=> bs!3898 m!101853))

(assert (=> bs!3898 m!101853))

(assert (=> bs!3898 m!101875))

(declare-fun m!102243 () Bool)

(assert (=> bs!3898 m!102243))

(declare-fun m!102245 () Bool)

(assert (=> bs!3898 m!102245))

(assert (=> b!94557 d!24835))

(declare-fun d!24837 () Bool)

(declare-fun e!61836 () Bool)

(assert (=> d!24837 e!61836))

(declare-fun res!47949 () Bool)

(assert (=> d!24837 (=> (not res!47949) (not e!61836))))

(declare-fun lt!47102 () ListLongMap!1489)

(assert (=> d!24837 (= res!47949 (contains!780 lt!47102 (_1!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47104 () List!1554)

(assert (=> d!24837 (= lt!47102 (ListLongMap!1490 lt!47104))))

(declare-fun lt!47103 () Unit!2786)

(declare-fun lt!47101 () Unit!2786)

(assert (=> d!24837 (= lt!47103 lt!47101)))

(assert (=> d!24837 (= (getValueByKey!149 lt!47104 (_1!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24837 (= lt!47101 (lemmaContainsTupThenGetReturnValue!65 lt!47104 (_1!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24837 (= lt!47104 (insertStrictlySorted!68 (toList!760 lt!46968) (_1!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24837 (= (+!128 lt!46968 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))) lt!47102)))

(declare-fun b!94752 () Bool)

(declare-fun res!47948 () Bool)

(assert (=> b!94752 (=> (not res!47948) (not e!61836))))

(assert (=> b!94752 (= res!47948 (= (getValueByKey!149 (toList!760 lt!47102) (_1!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94753 () Bool)

(assert (=> b!94753 (= e!61836 (contains!782 (toList!760 lt!47102) (tuple2!2283 lt!46958 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24837 res!47949) b!94752))

(assert (= (and b!94752 res!47948) b!94753))

(declare-fun m!102247 () Bool)

(assert (=> d!24837 m!102247))

(declare-fun m!102249 () Bool)

(assert (=> d!24837 m!102249))

(declare-fun m!102251 () Bool)

(assert (=> d!24837 m!102251))

(declare-fun m!102253 () Bool)

(assert (=> d!24837 m!102253))

(declare-fun m!102255 () Bool)

(assert (=> b!94752 m!102255))

(declare-fun m!102257 () Bool)

(assert (=> b!94753 m!102257))

(assert (=> b!94557 d!24837))

(declare-fun d!24839 () Bool)

(declare-fun lt!47105 () Bool)

(assert (=> d!24839 (= lt!47105 (select (content!98 Nil!1552) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!61837 () Bool)

(assert (=> d!24839 (= lt!47105 e!61837)))

(declare-fun res!47950 () Bool)

(assert (=> d!24839 (=> (not res!47950) (not e!61837))))

(assert (=> d!24839 (= res!47950 ((_ is Cons!1551) Nil!1552))))

(assert (=> d!24839 (= (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) lt!47105)))

(declare-fun b!94754 () Bool)

(declare-fun e!61838 () Bool)

(assert (=> b!94754 (= e!61837 e!61838)))

(declare-fun res!47951 () Bool)

(assert (=> b!94754 (=> res!47951 e!61838)))

(assert (=> b!94754 (= res!47951 (= (h!2143 Nil!1552) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94755 () Bool)

(assert (=> b!94755 (= e!61838 (contains!781 (t!5449 Nil!1552) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24839 res!47950) b!94754))

(assert (= (and b!94754 (not res!47951)) b!94755))

(assert (=> d!24839 m!101697))

(assert (=> d!24839 m!101635))

(declare-fun m!102259 () Bool)

(assert (=> d!24839 m!102259))

(assert (=> b!94755 m!101635))

(declare-fun m!102261 () Bool)

(assert (=> b!94755 m!102261))

(assert (=> b!94428 d!24839))

(declare-fun d!24841 () Bool)

(assert (=> d!24841 (= (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!357 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3899 () Bool)

(assert (= bs!3899 d!24841))

(assert (=> bs!3899 m!101685))

(declare-fun m!102263 () Bool)

(assert (=> bs!3899 m!102263))

(assert (=> b!94601 d!24841))

(declare-fun d!24843 () Bool)

(declare-fun c!15844 () Bool)

(assert (=> d!24843 (= c!15844 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61839 () Option!155)

(assert (=> d!24843 (= (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000) e!61839)))

(declare-fun b!94757 () Bool)

(declare-fun e!61840 () Option!155)

(assert (=> b!94757 (= e!61839 e!61840)))

(declare-fun c!15845 () Bool)

(assert (=> b!94757 (= c!15845 (and ((_ is Cons!1550) (toList!760 lt!46612)) (not (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94759 () Bool)

(assert (=> b!94759 (= e!61840 None!153)))

(declare-fun b!94756 () Bool)

(assert (=> b!94756 (= e!61839 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46612)))))))

(declare-fun b!94758 () Bool)

(assert (=> b!94758 (= e!61840 (getValueByKey!149 (t!5448 (toList!760 lt!46612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!24843 c!15844) b!94756))

(assert (= (and d!24843 (not c!15844)) b!94757))

(assert (= (and b!94757 c!15845) b!94758))

(assert (= (and b!94757 (not c!15845)) b!94759))

(declare-fun m!102265 () Bool)

(assert (=> b!94758 m!102265))

(assert (=> b!94601 d!24843))

(assert (=> d!24627 d!24663))

(declare-fun d!24845 () Bool)

(declare-fun e!61843 () Bool)

(assert (=> d!24845 e!61843))

(declare-fun res!47957 () Bool)

(assert (=> d!24845 (=> (not res!47957) (not e!61843))))

(declare-fun lt!47108 () SeekEntryResult!245)

(assert (=> d!24845 (= res!47957 ((_ is Found!245) lt!47108))))

(assert (=> d!24845 (= lt!47108 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (=> d!24845 true))

(declare-fun _$33!75 () Unit!2786)

(assert (=> d!24845 (= (choose!567 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) _$33!75)))

(declare-fun b!94764 () Bool)

(declare-fun res!47956 () Bool)

(assert (=> b!94764 (=> (not res!47956) (not e!61843))))

(assert (=> b!94764 (= res!47956 (inRange!0 (index!3122 lt!47108) (mask!6510 newMap!16)))))

(declare-fun b!94765 () Bool)

(assert (=> b!94765 (= e!61843 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!47108)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24845 res!47957) b!94764))

(assert (= (and b!94764 res!47956) b!94765))

(assert (=> d!24845 m!101143))

(assert (=> d!24845 m!101389))

(declare-fun m!102267 () Bool)

(assert (=> b!94764 m!102267))

(declare-fun m!102269 () Bool)

(assert (=> b!94765 m!102269))

(assert (=> d!24627 d!24845))

(assert (=> d!24627 d!24761))

(declare-fun b!94766 () Bool)

(declare-fun e!61844 () Bool)

(assert (=> b!94766 (= e!61844 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94766 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94767 () Bool)

(declare-fun e!61846 () Bool)

(declare-fun lt!47115 () ListLongMap!1489)

(assert (=> b!94767 (= e!61846 (isEmpty!356 lt!47115))))

(declare-fun b!94768 () Bool)

(declare-fun e!61850 () Bool)

(declare-fun e!61849 () Bool)

(assert (=> b!94768 (= e!61850 e!61849)))

(assert (=> b!94768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!47959 () Bool)

(assert (=> b!94768 (= res!47959 (contains!780 lt!47115 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94768 (=> (not res!47959) (not e!61849))))

(declare-fun d!24847 () Bool)

(declare-fun e!61845 () Bool)

(assert (=> d!24847 e!61845))

(declare-fun res!47960 () Bool)

(assert (=> d!24847 (=> (not res!47960) (not e!61845))))

(assert (=> d!24847 (= res!47960 (not (contains!780 lt!47115 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61848 () ListLongMap!1489)

(assert (=> d!24847 (= lt!47115 e!61848)))

(declare-fun c!15847 () Bool)

(assert (=> d!24847 (= c!15847 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24847 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24847 (= (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47115)))

(declare-fun b!94769 () Bool)

(declare-fun e!61847 () ListLongMap!1489)

(declare-fun call!9495 () ListLongMap!1489)

(assert (=> b!94769 (= e!61847 call!9495)))

(declare-fun b!94770 () Bool)

(assert (=> b!94770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> b!94770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700))))))

(assert (=> b!94770 (= e!61849 (= (apply!90 lt!47115 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94771 () Bool)

(assert (=> b!94771 (= e!61848 (ListLongMap!1490 Nil!1551))))

(declare-fun b!94772 () Bool)

(declare-fun lt!47110 () Unit!2786)

(declare-fun lt!47112 () Unit!2786)

(assert (=> b!94772 (= lt!47110 lt!47112)))

(declare-fun lt!47109 () ListLongMap!1489)

(declare-fun lt!47114 () (_ BitVec 64))

(declare-fun lt!47113 () (_ BitVec 64))

(declare-fun lt!47111 () V!3129)

(assert (=> b!94772 (not (contains!780 (+!128 lt!47109 (tuple2!2283 lt!47114 lt!47111)) lt!47113))))

(assert (=> b!94772 (= lt!47112 (addStillNotContains!40 lt!47109 lt!47114 lt!47111 lt!47113))))

(assert (=> b!94772 (= lt!47113 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94772 (= lt!47111 (get!1272 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94772 (= lt!47114 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94772 (= lt!47109 call!9495)))

(assert (=> b!94772 (= e!61847 (+!128 call!9495 (tuple2!2283 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (get!1272 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94773 () Bool)

(assert (=> b!94773 (= e!61845 e!61850)))

(declare-fun c!15849 () Bool)

(assert (=> b!94773 (= c!15849 e!61844)))

(declare-fun res!47958 () Bool)

(assert (=> b!94773 (=> (not res!47958) (not e!61844))))

(assert (=> b!94773 (= res!47958 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94774 () Bool)

(declare-fun res!47961 () Bool)

(assert (=> b!94774 (=> (not res!47961) (not e!61845))))

(assert (=> b!94774 (= res!47961 (not (contains!780 lt!47115 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!9492 () Bool)

(assert (=> bm!9492 (= call!9495 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94775 () Bool)

(assert (=> b!94775 (= e!61846 (= lt!47115 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700) (mask!6510 newMap!16) (ite c!15720 (ite c!15711 (extraKeys!2264 newMap!16) lt!46690) (extraKeys!2264 newMap!16)) (zeroValue!2322 newMap!16) (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!94776 () Bool)

(assert (=> b!94776 (= e!61850 e!61846)))

(declare-fun c!15848 () Bool)

(assert (=> b!94776 (= c!15848 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94777 () Bool)

(assert (=> b!94777 (= e!61848 e!61847)))

(declare-fun c!15846 () Bool)

(assert (=> b!94777 (= c!15846 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24847 c!15847) b!94771))

(assert (= (and d!24847 (not c!15847)) b!94777))

(assert (= (and b!94777 c!15846) b!94772))

(assert (= (and b!94777 (not c!15846)) b!94769))

(assert (= (or b!94772 b!94769) bm!9492))

(assert (= (and d!24847 res!47960) b!94774))

(assert (= (and b!94774 res!47961) b!94773))

(assert (= (and b!94773 res!47958) b!94766))

(assert (= (and b!94773 c!15849) b!94768))

(assert (= (and b!94773 (not c!15849)) b!94776))

(assert (= (and b!94768 res!47959) b!94770))

(assert (= (and b!94776 c!15848) b!94775))

(assert (= (and b!94776 (not c!15848)) b!94767))

(declare-fun b_lambda!4179 () Bool)

(assert (=> (not b_lambda!4179) (not b!94770)))

(assert (=> b!94770 t!5461))

(declare-fun b_and!5789 () Bool)

(assert (= b_and!5785 (and (=> t!5461 result!3197) b_and!5789)))

(assert (=> b!94770 t!5463))

(declare-fun b_and!5791 () Bool)

(assert (= b_and!5787 (and (=> t!5463 result!3199) b_and!5791)))

(declare-fun b_lambda!4181 () Bool)

(assert (=> (not b_lambda!4181) (not b!94772)))

(assert (=> b!94772 t!5461))

(declare-fun b_and!5793 () Bool)

(assert (= b_and!5789 (and (=> t!5461 result!3197) b_and!5793)))

(assert (=> b!94772 t!5463))

(declare-fun b_and!5795 () Bool)

(assert (= b_and!5791 (and (=> t!5463 result!3199) b_and!5795)))

(declare-fun m!102271 () Bool)

(assert (=> b!94774 m!102271))

(declare-fun m!102273 () Bool)

(assert (=> d!24847 m!102273))

(assert (=> d!24847 m!101529))

(assert (=> b!94772 m!101715))

(declare-fun m!102275 () Bool)

(assert (=> b!94772 m!102275))

(assert (=> b!94772 m!101717))

(assert (=> b!94772 m!101715))

(assert (=> b!94772 m!101717))

(assert (=> b!94772 m!101719))

(declare-fun m!102277 () Bool)

(assert (=> b!94772 m!102277))

(declare-fun m!102279 () Bool)

(assert (=> b!94772 m!102279))

(assert (=> b!94772 m!101635))

(assert (=> b!94772 m!102279))

(declare-fun m!102281 () Bool)

(assert (=> b!94772 m!102281))

(assert (=> b!94770 m!101635))

(assert (=> b!94770 m!101715))

(assert (=> b!94770 m!101635))

(declare-fun m!102283 () Bool)

(assert (=> b!94770 m!102283))

(assert (=> b!94770 m!101717))

(assert (=> b!94770 m!101715))

(assert (=> b!94770 m!101717))

(assert (=> b!94770 m!101719))

(assert (=> b!94766 m!101635))

(assert (=> b!94766 m!101635))

(assert (=> b!94766 m!101637))

(declare-fun m!102285 () Bool)

(assert (=> b!94775 m!102285))

(assert (=> b!94777 m!101635))

(assert (=> b!94777 m!101635))

(assert (=> b!94777 m!101637))

(assert (=> b!94768 m!101635))

(assert (=> b!94768 m!101635))

(declare-fun m!102287 () Bool)

(assert (=> b!94768 m!102287))

(assert (=> bm!9492 m!102285))

(declare-fun m!102289 () Bool)

(assert (=> b!94767 m!102289))

(assert (=> b!94511 d!24847))

(declare-fun d!24849 () Bool)

(assert (=> d!24849 (= (apply!90 (+!128 lt!46920 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) lt!46925) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46920 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))) lt!46925)))))

(declare-fun bs!3900 () Bool)

(assert (= bs!3900 d!24849))

(declare-fun m!102291 () Bool)

(assert (=> bs!3900 m!102291))

(assert (=> bs!3900 m!102291))

(declare-fun m!102293 () Bool)

(assert (=> bs!3900 m!102293))

(assert (=> b!94511 d!24849))

(declare-fun d!24851 () Bool)

(assert (=> d!24851 (contains!780 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) lt!46915)))

(declare-fun lt!47116 () Unit!2786)

(assert (=> d!24851 (= lt!47116 (choose!569 lt!46909 lt!46923 (zeroValue!2322 newMap!16) lt!46915))))

(assert (=> d!24851 (contains!780 lt!46909 lt!46915)))

(assert (=> d!24851 (= (addStillContains!66 lt!46909 lt!46923 (zeroValue!2322 newMap!16) lt!46915) lt!47116)))

(declare-fun bs!3901 () Bool)

(assert (= bs!3901 d!24851))

(assert (=> bs!3901 m!101729))

(assert (=> bs!3901 m!101729))

(assert (=> bs!3901 m!101751))

(declare-fun m!102295 () Bool)

(assert (=> bs!3901 m!102295))

(declare-fun m!102297 () Bool)

(assert (=> bs!3901 m!102297))

(assert (=> b!94511 d!24851))

(declare-fun d!24853 () Bool)

(declare-fun e!61851 () Bool)

(assert (=> d!24853 e!61851))

(declare-fun res!47963 () Bool)

(assert (=> d!24853 (=> (not res!47963) (not e!61851))))

(declare-fun lt!47118 () ListLongMap!1489)

(assert (=> d!24853 (= res!47963 (contains!780 lt!47118 (_1!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47120 () List!1554)

(assert (=> d!24853 (= lt!47118 (ListLongMap!1490 lt!47120))))

(declare-fun lt!47119 () Unit!2786)

(declare-fun lt!47117 () Unit!2786)

(assert (=> d!24853 (= lt!47119 lt!47117)))

(assert (=> d!24853 (= (getValueByKey!149 lt!47120 (_1!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24853 (= lt!47117 (lemmaContainsTupThenGetReturnValue!65 lt!47120 (_1!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24853 (= lt!47120 (insertStrictlySorted!68 (toList!760 lt!46922) (_1!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24853 (= (+!128 lt!46922 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47118)))

(declare-fun b!94778 () Bool)

(declare-fun res!47962 () Bool)

(assert (=> b!94778 (=> (not res!47962) (not e!61851))))

(assert (=> b!94778 (= res!47962 (= (getValueByKey!149 (toList!760 lt!47118) (_1!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!94779 () Bool)

(assert (=> b!94779 (= e!61851 (contains!782 (toList!760 lt!47118) (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!24853 res!47963) b!94778))

(assert (= (and b!94778 res!47962) b!94779))

(declare-fun m!102299 () Bool)

(assert (=> d!24853 m!102299))

(declare-fun m!102301 () Bool)

(assert (=> d!24853 m!102301))

(declare-fun m!102303 () Bool)

(assert (=> d!24853 m!102303))

(declare-fun m!102305 () Bool)

(assert (=> d!24853 m!102305))

(declare-fun m!102307 () Bool)

(assert (=> b!94778 m!102307))

(declare-fun m!102309 () Bool)

(assert (=> b!94779 m!102309))

(assert (=> b!94511 d!24853))

(declare-fun d!24855 () Bool)

(assert (=> d!24855 (= (apply!90 lt!46920 lt!46925) (get!1275 (getValueByKey!149 (toList!760 lt!46920) lt!46925)))))

(declare-fun bs!3902 () Bool)

(assert (= bs!3902 d!24855))

(declare-fun m!102311 () Bool)

(assert (=> bs!3902 m!102311))

(assert (=> bs!3902 m!102311))

(declare-fun m!102313 () Bool)

(assert (=> bs!3902 m!102313))

(assert (=> b!94511 d!24855))

(declare-fun d!24857 () Bool)

(assert (=> d!24857 (= (apply!90 (+!128 lt!46926 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (apply!90 lt!46926 lt!46912))))

(declare-fun lt!47121 () Unit!2786)

(assert (=> d!24857 (= lt!47121 (choose!568 lt!46926 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912))))

(declare-fun e!61852 () Bool)

(assert (=> d!24857 e!61852))

(declare-fun res!47964 () Bool)

(assert (=> d!24857 (=> (not res!47964) (not e!61852))))

(assert (=> d!24857 (= res!47964 (contains!780 lt!46926 lt!46912))))

(assert (=> d!24857 (= (addApplyDifferent!66 lt!46926 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912) lt!47121)))

(declare-fun b!94780 () Bool)

(assert (=> b!94780 (= e!61852 (not (= lt!46912 lt!46918)))))

(assert (= (and d!24857 res!47964) b!94780))

(assert (=> d!24857 m!101755))

(assert (=> d!24857 m!101737))

(declare-fun m!102315 () Bool)

(assert (=> d!24857 m!102315))

(declare-fun m!102317 () Bool)

(assert (=> d!24857 m!102317))

(assert (=> d!24857 m!101737))

(assert (=> d!24857 m!101749))

(assert (=> b!94511 d!24857))

(declare-fun d!24859 () Bool)

(assert (=> d!24859 (= (apply!90 (+!128 lt!46922 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46916) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46922 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!46916)))))

(declare-fun bs!3903 () Bool)

(assert (= bs!3903 d!24859))

(declare-fun m!102319 () Bool)

(assert (=> bs!3903 m!102319))

(assert (=> bs!3903 m!102319))

(declare-fun m!102321 () Bool)

(assert (=> bs!3903 m!102321))

(assert (=> b!94511 d!24859))

(declare-fun d!24861 () Bool)

(assert (=> d!24861 (= (apply!90 (+!128 lt!46920 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) lt!46925) (apply!90 lt!46920 lt!46925))))

(declare-fun lt!47122 () Unit!2786)

(assert (=> d!24861 (= lt!47122 (choose!568 lt!46920 lt!46910 (zeroValue!2322 newMap!16) lt!46925))))

(declare-fun e!61853 () Bool)

(assert (=> d!24861 e!61853))

(declare-fun res!47965 () Bool)

(assert (=> d!24861 (=> (not res!47965) (not e!61853))))

(assert (=> d!24861 (= res!47965 (contains!780 lt!46920 lt!46925))))

(assert (=> d!24861 (= (addApplyDifferent!66 lt!46920 lt!46910 (zeroValue!2322 newMap!16) lt!46925) lt!47122)))

(declare-fun b!94781 () Bool)

(assert (=> b!94781 (= e!61853 (not (= lt!46925 lt!46910)))))

(assert (= (and d!24861 res!47965) b!94781))

(assert (=> d!24861 m!101743))

(assert (=> d!24861 m!101739))

(declare-fun m!102323 () Bool)

(assert (=> d!24861 m!102323))

(declare-fun m!102325 () Bool)

(assert (=> d!24861 m!102325))

(assert (=> d!24861 m!101739))

(assert (=> d!24861 m!101741))

(assert (=> b!94511 d!24861))

(declare-fun d!24863 () Bool)

(declare-fun e!61854 () Bool)

(assert (=> d!24863 e!61854))

(declare-fun res!47967 () Bool)

(assert (=> d!24863 (=> (not res!47967) (not e!61854))))

(declare-fun lt!47124 () ListLongMap!1489)

(assert (=> d!24863 (= res!47967 (contains!780 lt!47124 (_1!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47126 () List!1554)

(assert (=> d!24863 (= lt!47124 (ListLongMap!1490 lt!47126))))

(declare-fun lt!47125 () Unit!2786)

(declare-fun lt!47123 () Unit!2786)

(assert (=> d!24863 (= lt!47125 lt!47123)))

(assert (=> d!24863 (= (getValueByKey!149 lt!47126 (_1!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24863 (= lt!47123 (lemmaContainsTupThenGetReturnValue!65 lt!47126 (_1!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24863 (= lt!47126 (insertStrictlySorted!68 (toList!760 lt!46926) (_1!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24863 (= (+!128 lt!46926 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47124)))

(declare-fun b!94782 () Bool)

(declare-fun res!47966 () Bool)

(assert (=> b!94782 (=> (not res!47966) (not e!61854))))

(assert (=> b!94782 (= res!47966 (= (getValueByKey!149 (toList!760 lt!47124) (_1!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!94783 () Bool)

(assert (=> b!94783 (= e!61854 (contains!782 (toList!760 lt!47124) (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!24863 res!47967) b!94782))

(assert (= (and b!94782 res!47966) b!94783))

(declare-fun m!102327 () Bool)

(assert (=> d!24863 m!102327))

(declare-fun m!102329 () Bool)

(assert (=> d!24863 m!102329))

(declare-fun m!102331 () Bool)

(assert (=> d!24863 m!102331))

(declare-fun m!102333 () Bool)

(assert (=> d!24863 m!102333))

(declare-fun m!102335 () Bool)

(assert (=> b!94782 m!102335))

(declare-fun m!102337 () Bool)

(assert (=> b!94783 m!102337))

(assert (=> b!94511 d!24863))

(declare-fun d!24865 () Bool)

(assert (=> d!24865 (= (apply!90 (+!128 lt!46922 (tuple2!2283 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46916) (apply!90 lt!46922 lt!46916))))

(declare-fun lt!47127 () Unit!2786)

(assert (=> d!24865 (= lt!47127 (choose!568 lt!46922 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46916))))

(declare-fun e!61855 () Bool)

(assert (=> d!24865 e!61855))

(declare-fun res!47968 () Bool)

(assert (=> d!24865 (=> (not res!47968) (not e!61855))))

(assert (=> d!24865 (= res!47968 (contains!780 lt!46922 lt!46916))))

(assert (=> d!24865 (= (addApplyDifferent!66 lt!46922 lt!46914 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46916) lt!47127)))

(declare-fun b!94784 () Bool)

(assert (=> b!94784 (= e!61855 (not (= lt!46916 lt!46914)))))

(assert (= (and d!24865 res!47968) b!94784))

(assert (=> d!24865 m!101733))

(assert (=> d!24865 m!101731))

(declare-fun m!102339 () Bool)

(assert (=> d!24865 m!102339))

(declare-fun m!102341 () Bool)

(assert (=> d!24865 m!102341))

(assert (=> d!24865 m!101731))

(assert (=> d!24865 m!101757))

(assert (=> b!94511 d!24865))

(declare-fun d!24867 () Bool)

(assert (=> d!24867 (= (apply!90 lt!46922 lt!46916) (get!1275 (getValueByKey!149 (toList!760 lt!46922) lt!46916)))))

(declare-fun bs!3904 () Bool)

(assert (= bs!3904 d!24867))

(declare-fun m!102343 () Bool)

(assert (=> bs!3904 m!102343))

(assert (=> bs!3904 m!102343))

(declare-fun m!102345 () Bool)

(assert (=> bs!3904 m!102345))

(assert (=> b!94511 d!24867))

(declare-fun d!24869 () Bool)

(assert (=> d!24869 (= (apply!90 lt!46926 lt!46912) (get!1275 (getValueByKey!149 (toList!760 lt!46926) lt!46912)))))

(declare-fun bs!3905 () Bool)

(assert (= bs!3905 d!24869))

(declare-fun m!102347 () Bool)

(assert (=> bs!3905 m!102347))

(assert (=> bs!3905 m!102347))

(declare-fun m!102349 () Bool)

(assert (=> bs!3905 m!102349))

(assert (=> b!94511 d!24869))

(declare-fun d!24871 () Bool)

(declare-fun e!61856 () Bool)

(assert (=> d!24871 e!61856))

(declare-fun res!47970 () Bool)

(assert (=> d!24871 (=> (not res!47970) (not e!61856))))

(declare-fun lt!47129 () ListLongMap!1489)

(assert (=> d!24871 (= res!47970 (contains!780 lt!47129 (_1!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47131 () List!1554)

(assert (=> d!24871 (= lt!47129 (ListLongMap!1490 lt!47131))))

(declare-fun lt!47130 () Unit!2786)

(declare-fun lt!47128 () Unit!2786)

(assert (=> d!24871 (= lt!47130 lt!47128)))

(assert (=> d!24871 (= (getValueByKey!149 lt!47131 (_1!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24871 (= lt!47128 (lemmaContainsTupThenGetReturnValue!65 lt!47131 (_1!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24871 (= lt!47131 (insertStrictlySorted!68 (toList!760 lt!46920) (_1!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24871 (= (+!128 lt!46920 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))) lt!47129)))

(declare-fun b!94785 () Bool)

(declare-fun res!47969 () Bool)

(assert (=> b!94785 (=> (not res!47969) (not e!61856))))

(assert (=> b!94785 (= res!47969 (= (getValueByKey!149 (toList!760 lt!47129) (_1!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94786 () Bool)

(assert (=> b!94786 (= e!61856 (contains!782 (toList!760 lt!47129) (tuple2!2283 lt!46910 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24871 res!47970) b!94785))

(assert (= (and b!94785 res!47969) b!94786))

(declare-fun m!102351 () Bool)

(assert (=> d!24871 m!102351))

(declare-fun m!102353 () Bool)

(assert (=> d!24871 m!102353))

(declare-fun m!102355 () Bool)

(assert (=> d!24871 m!102355))

(declare-fun m!102357 () Bool)

(assert (=> d!24871 m!102357))

(declare-fun m!102359 () Bool)

(assert (=> b!94785 m!102359))

(declare-fun m!102361 () Bool)

(assert (=> b!94786 m!102361))

(assert (=> b!94511 d!24871))

(declare-fun d!24873 () Bool)

(declare-fun e!61857 () Bool)

(assert (=> d!24873 e!61857))

(declare-fun res!47971 () Bool)

(assert (=> d!24873 (=> res!47971 e!61857)))

(declare-fun lt!47134 () Bool)

(assert (=> d!24873 (= res!47971 (not lt!47134))))

(declare-fun lt!47133 () Bool)

(assert (=> d!24873 (= lt!47134 lt!47133)))

(declare-fun lt!47132 () Unit!2786)

(declare-fun e!61858 () Unit!2786)

(assert (=> d!24873 (= lt!47132 e!61858)))

(declare-fun c!15850 () Bool)

(assert (=> d!24873 (= c!15850 lt!47133)))

(assert (=> d!24873 (= lt!47133 (containsKey!152 (toList!760 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) lt!46915))))

(assert (=> d!24873 (= (contains!780 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) lt!46915) lt!47134)))

(declare-fun b!94787 () Bool)

(declare-fun lt!47135 () Unit!2786)

(assert (=> b!94787 (= e!61858 lt!47135)))

(assert (=> b!94787 (= lt!47135 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) lt!46915))))

(assert (=> b!94787 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) lt!46915))))

(declare-fun b!94788 () Bool)

(declare-fun Unit!2816 () Unit!2786)

(assert (=> b!94788 (= e!61858 Unit!2816)))

(declare-fun b!94789 () Bool)

(assert (=> b!94789 (= e!61857 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) lt!46915)))))

(assert (= (and d!24873 c!15850) b!94787))

(assert (= (and d!24873 (not c!15850)) b!94788))

(assert (= (and d!24873 (not res!47971)) b!94789))

(declare-fun m!102363 () Bool)

(assert (=> d!24873 m!102363))

(declare-fun m!102365 () Bool)

(assert (=> b!94787 m!102365))

(declare-fun m!102367 () Bool)

(assert (=> b!94787 m!102367))

(assert (=> b!94787 m!102367))

(declare-fun m!102369 () Bool)

(assert (=> b!94787 m!102369))

(assert (=> b!94789 m!102367))

(assert (=> b!94789 m!102367))

(assert (=> b!94789 m!102369))

(assert (=> b!94511 d!24873))

(declare-fun d!24875 () Bool)

(assert (=> d!24875 (= (apply!90 (+!128 lt!46926 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46926 (tuple2!2283 lt!46918 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!46912)))))

(declare-fun bs!3906 () Bool)

(assert (= bs!3906 d!24875))

(declare-fun m!102371 () Bool)

(assert (=> bs!3906 m!102371))

(assert (=> bs!3906 m!102371))

(declare-fun m!102373 () Bool)

(assert (=> bs!3906 m!102373))

(assert (=> b!94511 d!24875))

(declare-fun d!24877 () Bool)

(declare-fun e!61859 () Bool)

(assert (=> d!24877 e!61859))

(declare-fun res!47973 () Bool)

(assert (=> d!24877 (=> (not res!47973) (not e!61859))))

(declare-fun lt!47137 () ListLongMap!1489)

(assert (=> d!24877 (= res!47973 (contains!780 lt!47137 (_1!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47139 () List!1554)

(assert (=> d!24877 (= lt!47137 (ListLongMap!1490 lt!47139))))

(declare-fun lt!47138 () Unit!2786)

(declare-fun lt!47136 () Unit!2786)

(assert (=> d!24877 (= lt!47138 lt!47136)))

(assert (=> d!24877 (= (getValueByKey!149 lt!47139 (_1!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24877 (= lt!47136 (lemmaContainsTupThenGetReturnValue!65 lt!47139 (_1!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24877 (= lt!47139 (insertStrictlySorted!68 (toList!760 lt!46909) (_1!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24877 (= (+!128 lt!46909 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))) lt!47137)))

(declare-fun b!94790 () Bool)

(declare-fun res!47972 () Bool)

(assert (=> b!94790 (=> (not res!47972) (not e!61859))))

(assert (=> b!94790 (= res!47972 (= (getValueByKey!149 (toList!760 lt!47137) (_1!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94791 () Bool)

(assert (=> b!94791 (= e!61859 (contains!782 (toList!760 lt!47137) (tuple2!2283 lt!46923 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24877 res!47973) b!94790))

(assert (= (and b!94790 res!47972) b!94791))

(declare-fun m!102375 () Bool)

(assert (=> d!24877 m!102375))

(declare-fun m!102377 () Bool)

(assert (=> d!24877 m!102377))

(declare-fun m!102379 () Bool)

(assert (=> d!24877 m!102379))

(declare-fun m!102381 () Bool)

(assert (=> d!24877 m!102381))

(declare-fun m!102383 () Bool)

(assert (=> b!94790 m!102383))

(declare-fun m!102385 () Bool)

(assert (=> b!94791 m!102385))

(assert (=> b!94511 d!24877))

(declare-fun d!24879 () Bool)

(declare-fun e!61860 () Bool)

(assert (=> d!24879 e!61860))

(declare-fun res!47974 () Bool)

(assert (=> d!24879 (=> res!47974 e!61860)))

(declare-fun lt!47142 () Bool)

(assert (=> d!24879 (= res!47974 (not lt!47142))))

(declare-fun lt!47141 () Bool)

(assert (=> d!24879 (= lt!47142 lt!47141)))

(declare-fun lt!47140 () Unit!2786)

(declare-fun e!61861 () Unit!2786)

(assert (=> d!24879 (= lt!47140 e!61861)))

(declare-fun c!15851 () Bool)

(assert (=> d!24879 (= c!15851 lt!47141)))

(assert (=> d!24879 (= lt!47141 (containsKey!152 (toList!760 lt!46967) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24879 (= (contains!780 lt!46967 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) lt!47142)))

(declare-fun b!94792 () Bool)

(declare-fun lt!47143 () Unit!2786)

(assert (=> b!94792 (= e!61861 lt!47143)))

(assert (=> b!94792 (= lt!47143 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46967) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94792 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94793 () Bool)

(declare-fun Unit!2817 () Unit!2786)

(assert (=> b!94793 (= e!61861 Unit!2817)))

(declare-fun b!94794 () Bool)

(assert (=> b!94794 (= e!61860 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!24879 c!15851) b!94792))

(assert (= (and d!24879 (not c!15851)) b!94793))

(assert (= (and d!24879 (not res!47974)) b!94794))

(assert (=> d!24879 m!101635))

(declare-fun m!102387 () Bool)

(assert (=> d!24879 m!102387))

(assert (=> b!94792 m!101635))

(declare-fun m!102389 () Bool)

(assert (=> b!94792 m!102389))

(assert (=> b!94792 m!101635))

(declare-fun m!102391 () Bool)

(assert (=> b!94792 m!102391))

(assert (=> b!94792 m!102391))

(declare-fun m!102393 () Bool)

(assert (=> b!94792 m!102393))

(assert (=> b!94794 m!101635))

(assert (=> b!94794 m!102391))

(assert (=> b!94794 m!102391))

(assert (=> b!94794 m!102393))

(assert (=> b!94550 d!24879))

(declare-fun b!94796 () Bool)

(declare-fun res!47976 () Bool)

(declare-fun e!61862 () Bool)

(assert (=> b!94796 (=> (not res!47976) (not e!61862))))

(assert (=> b!94796 (= res!47976 (bvsge (size!2242 (_2!1151 lt!46714)) (_size!465 (_2!1151 lt!46714))))))

(declare-fun b!94795 () Bool)

(declare-fun res!47978 () Bool)

(assert (=> b!94795 (=> (not res!47978) (not e!61862))))

(assert (=> b!94795 (= res!47978 (and (= (size!2237 (_values!2418 (_2!1151 lt!46714))) (bvadd (mask!6510 (_2!1151 lt!46714)) #b00000000000000000000000000000001)) (= (size!2236 (_keys!4117 (_2!1151 lt!46714))) (size!2237 (_values!2418 (_2!1151 lt!46714)))) (bvsge (_size!465 (_2!1151 lt!46714)) #b00000000000000000000000000000000) (bvsle (_size!465 (_2!1151 lt!46714)) (bvadd (mask!6510 (_2!1151 lt!46714)) #b00000000000000000000000000000001))))))

(declare-fun b!94798 () Bool)

(assert (=> b!94798 (= e!61862 (and (bvsge (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000011) (bvsge (_vacant!465 (_2!1151 lt!46714)) #b00000000000000000000000000000000)))))

(declare-fun b!94797 () Bool)

(declare-fun res!47975 () Bool)

(assert (=> b!94797 (=> (not res!47975) (not e!61862))))

(assert (=> b!94797 (= res!47975 (= (size!2242 (_2!1151 lt!46714)) (bvadd (_size!465 (_2!1151 lt!46714)) (bvsdiv (bvadd (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!24881 () Bool)

(declare-fun res!47977 () Bool)

(assert (=> d!24881 (=> (not res!47977) (not e!61862))))

(assert (=> d!24881 (= res!47977 (validMask!0 (mask!6510 (_2!1151 lt!46714))))))

(assert (=> d!24881 (= (simpleValid!66 (_2!1151 lt!46714)) e!61862)))

(assert (= (and d!24881 res!47977) b!94795))

(assert (= (and b!94795 res!47978) b!94796))

(assert (= (and b!94796 res!47976) b!94797))

(assert (= (and b!94797 res!47975) b!94798))

(declare-fun m!102395 () Bool)

(assert (=> b!94796 m!102395))

(assert (=> b!94797 m!102395))

(declare-fun m!102397 () Bool)

(assert (=> d!24881 m!102397))

(assert (=> d!24695 d!24881))

(assert (=> b!94297 d!24735))

(declare-fun d!24883 () Bool)

(assert (=> d!24883 (= (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46618)) (v!2770 (getValueByKey!149 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46618)))))

(assert (=> d!24649 d!24883))

(declare-fun d!24885 () Bool)

(declare-fun c!15852 () Bool)

(assert (=> d!24885 (= c!15852 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46618)))))

(declare-fun e!61863 () Option!155)

(assert (=> d!24885 (= (getValueByKey!149 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46618) e!61863)))

(declare-fun b!94800 () Bool)

(declare-fun e!61864 () Option!155)

(assert (=> b!94800 (= e!61863 e!61864)))

(declare-fun c!15853 () Bool)

(assert (=> b!94800 (= c!15853 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (not (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46618))))))

(declare-fun b!94802 () Bool)

(assert (=> b!94802 (= e!61864 None!153)))

(declare-fun b!94799 () Bool)

(assert (=> b!94799 (= e!61863 (Some!154 (_2!1152 (h!2142 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!94801 () Bool)

(assert (=> b!94801 (= e!61864 (getValueByKey!149 (t!5448 (toList!760 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!46618))))

(assert (= (and d!24885 c!15852) b!94799))

(assert (= (and d!24885 (not c!15852)) b!94800))

(assert (= (and b!94800 c!15853) b!94801))

(assert (= (and b!94800 (not c!15853)) b!94802))

(declare-fun m!102399 () Bool)

(assert (=> b!94801 m!102399))

(assert (=> d!24649 d!24885))

(assert (=> b!94394 d!24669))

(declare-fun b!94803 () Bool)

(declare-fun e!61869 () Bool)

(declare-fun lt!47155 () ListLongMap!1489)

(assert (=> b!94803 (= e!61869 (= (apply!90 lt!47155 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (_values!2418 (_2!1151 lt!46714))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 (_2!1151 lt!46714)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (_values!2418 (_2!1151 lt!46714)))))))

(assert (=> b!94803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(declare-fun b!94804 () Bool)

(declare-fun e!61874 () ListLongMap!1489)

(declare-fun e!61867 () ListLongMap!1489)

(assert (=> b!94804 (= e!61874 e!61867)))

(declare-fun c!15857 () Bool)

(assert (=> b!94804 (= c!15857 (and (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94805 () Bool)

(declare-fun e!61877 () Bool)

(declare-fun call!9499 () Bool)

(assert (=> b!94805 (= e!61877 (not call!9499))))

(declare-fun bm!9493 () Bool)

(assert (=> bm!9493 (= call!9499 (contains!780 lt!47155 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94806 () Bool)

(declare-fun e!61872 () Bool)

(declare-fun e!61865 () Bool)

(assert (=> b!94806 (= e!61872 e!61865)))

(declare-fun c!15854 () Bool)

(assert (=> b!94806 (= c!15854 (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94807 () Bool)

(declare-fun e!61876 () Bool)

(assert (=> b!94807 (= e!61876 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun b!94808 () Bool)

(declare-fun call!9501 () Bool)

(assert (=> b!94808 (= e!61865 (not call!9501))))

(declare-fun b!94809 () Bool)

(declare-fun e!61875 () Bool)

(assert (=> b!94809 (= e!61875 (= (apply!90 lt!47155 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 (_2!1151 lt!46714))))))

(declare-fun d!24887 () Bool)

(assert (=> d!24887 e!61872))

(declare-fun res!47987 () Bool)

(assert (=> d!24887 (=> (not res!47987) (not e!61872))))

(assert (=> d!24887 (= res!47987 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))))

(declare-fun lt!47144 () ListLongMap!1489)

(assert (=> d!24887 (= lt!47155 lt!47144)))

(declare-fun lt!47165 () Unit!2786)

(declare-fun e!61871 () Unit!2786)

(assert (=> d!24887 (= lt!47165 e!61871)))

(declare-fun c!15856 () Bool)

(declare-fun e!61873 () Bool)

(assert (=> d!24887 (= c!15856 e!61873)))

(declare-fun res!47984 () Bool)

(assert (=> d!24887 (=> (not res!47984) (not e!61873))))

(assert (=> d!24887 (= res!47984 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (=> d!24887 (= lt!47144 e!61874)))

(declare-fun c!15858 () Bool)

(assert (=> d!24887 (= c!15858 (and (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24887 (validMask!0 (mask!6510 (_2!1151 lt!46714)))))

(assert (=> d!24887 (= (getCurrentListMap!450 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))) lt!47155)))

(declare-fun bm!9494 () Bool)

(declare-fun call!9500 () ListLongMap!1489)

(declare-fun call!9496 () ListLongMap!1489)

(assert (=> bm!9494 (= call!9500 call!9496)))

(declare-fun b!94810 () Bool)

(declare-fun e!61866 () Bool)

(assert (=> b!94810 (= e!61877 e!61866)))

(declare-fun res!47986 () Bool)

(assert (=> b!94810 (= res!47986 call!9499)))

(assert (=> b!94810 (=> (not res!47986) (not e!61866))))

(declare-fun bm!9495 () Bool)

(assert (=> bm!9495 (= call!9501 (contains!780 lt!47155 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94811 () Bool)

(declare-fun e!61868 () Bool)

(assert (=> b!94811 (= e!61868 e!61869)))

(declare-fun res!47980 () Bool)

(assert (=> b!94811 (=> (not res!47980) (not e!61869))))

(assert (=> b!94811 (= res!47980 (contains!780 lt!47155 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(assert (=> b!94811 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(declare-fun b!94812 () Bool)

(declare-fun c!15855 () Bool)

(assert (=> b!94812 (= c!15855 (and (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61870 () ListLongMap!1489)

(assert (=> b!94812 (= e!61867 e!61870)))

(declare-fun b!94813 () Bool)

(declare-fun res!47985 () Bool)

(assert (=> b!94813 (=> (not res!47985) (not e!61872))))

(assert (=> b!94813 (= res!47985 e!61877)))

(declare-fun c!15859 () Bool)

(assert (=> b!94813 (= c!15859 (not (= (bvand (extraKeys!2264 (_2!1151 lt!46714)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94814 () Bool)

(declare-fun res!47979 () Bool)

(assert (=> b!94814 (=> (not res!47979) (not e!61872))))

(assert (=> b!94814 (= res!47979 e!61868)))

(declare-fun res!47983 () Bool)

(assert (=> b!94814 (=> res!47983 e!61868)))

(assert (=> b!94814 (= res!47983 (not e!61876))))

(declare-fun res!47982 () Bool)

(assert (=> b!94814 (=> (not res!47982) (not e!61876))))

(assert (=> b!94814 (= res!47982 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(declare-fun b!94815 () Bool)

(declare-fun call!9497 () ListLongMap!1489)

(assert (=> b!94815 (= e!61867 call!9497)))

(declare-fun b!94816 () Bool)

(declare-fun call!9502 () ListLongMap!1489)

(assert (=> b!94816 (= e!61874 (+!128 call!9502 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (_2!1151 lt!46714)))))))

(declare-fun b!94817 () Bool)

(assert (=> b!94817 (= e!61866 (= (apply!90 lt!47155 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 (_2!1151 lt!46714))))))

(declare-fun call!9498 () ListLongMap!1489)

(declare-fun bm!9496 () Bool)

(assert (=> bm!9496 (= call!9502 (+!128 (ite c!15858 call!9498 (ite c!15857 call!9496 call!9500)) (ite (or c!15858 c!15857) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (_2!1151 lt!46714))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (_2!1151 lt!46714))))))))

(declare-fun b!94818 () Bool)

(declare-fun lt!47163 () Unit!2786)

(assert (=> b!94818 (= e!61871 lt!47163)))

(declare-fun lt!47145 () ListLongMap!1489)

(assert (=> b!94818 (= lt!47145 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun lt!47159 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47159 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47151 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47151 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000))))

(declare-fun lt!47164 () Unit!2786)

(assert (=> b!94818 (= lt!47164 (addStillContains!66 lt!47145 lt!47159 (zeroValue!2322 (_2!1151 lt!46714)) lt!47151))))

(assert (=> b!94818 (contains!780 (+!128 lt!47145 (tuple2!2283 lt!47159 (zeroValue!2322 (_2!1151 lt!46714)))) lt!47151)))

(declare-fun lt!47157 () Unit!2786)

(assert (=> b!94818 (= lt!47157 lt!47164)))

(declare-fun lt!47162 () ListLongMap!1489)

(assert (=> b!94818 (= lt!47162 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun lt!47154 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47154 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47148 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47148 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000))))

(declare-fun lt!47149 () Unit!2786)

(assert (=> b!94818 (= lt!47149 (addApplyDifferent!66 lt!47162 lt!47154 (minValue!2322 (_2!1151 lt!46714)) lt!47148))))

(assert (=> b!94818 (= (apply!90 (+!128 lt!47162 (tuple2!2283 lt!47154 (minValue!2322 (_2!1151 lt!46714)))) lt!47148) (apply!90 lt!47162 lt!47148))))

(declare-fun lt!47160 () Unit!2786)

(assert (=> b!94818 (= lt!47160 lt!47149)))

(declare-fun lt!47156 () ListLongMap!1489)

(assert (=> b!94818 (= lt!47156 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun lt!47146 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47146 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47161 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47161 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000))))

(declare-fun lt!47147 () Unit!2786)

(assert (=> b!94818 (= lt!47147 (addApplyDifferent!66 lt!47156 lt!47146 (zeroValue!2322 (_2!1151 lt!46714)) lt!47161))))

(assert (=> b!94818 (= (apply!90 (+!128 lt!47156 (tuple2!2283 lt!47146 (zeroValue!2322 (_2!1151 lt!46714)))) lt!47161) (apply!90 lt!47156 lt!47161))))

(declare-fun lt!47153 () Unit!2786)

(assert (=> b!94818 (= lt!47153 lt!47147)))

(declare-fun lt!47158 () ListLongMap!1489)

(assert (=> b!94818 (= lt!47158 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun lt!47150 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47150 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47152 () (_ BitVec 64))

(assert (=> b!94818 (= lt!47152 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000))))

(assert (=> b!94818 (= lt!47163 (addApplyDifferent!66 lt!47158 lt!47150 (minValue!2322 (_2!1151 lt!46714)) lt!47152))))

(assert (=> b!94818 (= (apply!90 (+!128 lt!47158 (tuple2!2283 lt!47150 (minValue!2322 (_2!1151 lt!46714)))) lt!47152) (apply!90 lt!47158 lt!47152))))

(declare-fun bm!9497 () Bool)

(assert (=> bm!9497 (= call!9496 call!9498)))

(declare-fun b!94819 () Bool)

(assert (=> b!94819 (= e!61870 call!9497)))

(declare-fun b!94820 () Bool)

(assert (=> b!94820 (= e!61870 call!9500)))

(declare-fun bm!9498 () Bool)

(assert (=> bm!9498 (= call!9497 call!9502)))

(declare-fun b!94821 () Bool)

(assert (=> b!94821 (= e!61865 e!61875)))

(declare-fun res!47981 () Bool)

(assert (=> b!94821 (= res!47981 call!9501)))

(assert (=> b!94821 (=> (not res!47981) (not e!61875))))

(declare-fun bm!9499 () Bool)

(assert (=> bm!9499 (= call!9498 (getCurrentListMapNoExtraKeys!93 (_keys!4117 (_2!1151 lt!46714)) (_values!2418 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714)) (extraKeys!2264 (_2!1151 lt!46714)) (zeroValue!2322 (_2!1151 lt!46714)) (minValue!2322 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46714))))))

(declare-fun b!94822 () Bool)

(assert (=> b!94822 (= e!61873 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun b!94823 () Bool)

(declare-fun Unit!2818 () Unit!2786)

(assert (=> b!94823 (= e!61871 Unit!2818)))

(assert (= (and d!24887 c!15858) b!94816))

(assert (= (and d!24887 (not c!15858)) b!94804))

(assert (= (and b!94804 c!15857) b!94815))

(assert (= (and b!94804 (not c!15857)) b!94812))

(assert (= (and b!94812 c!15855) b!94819))

(assert (= (and b!94812 (not c!15855)) b!94820))

(assert (= (or b!94819 b!94820) bm!9494))

(assert (= (or b!94815 bm!9494) bm!9497))

(assert (= (or b!94815 b!94819) bm!9498))

(assert (= (or b!94816 bm!9497) bm!9499))

(assert (= (or b!94816 bm!9498) bm!9496))

(assert (= (and d!24887 res!47984) b!94822))

(assert (= (and d!24887 c!15856) b!94818))

(assert (= (and d!24887 (not c!15856)) b!94823))

(assert (= (and d!24887 res!47987) b!94814))

(assert (= (and b!94814 res!47982) b!94807))

(assert (= (and b!94814 (not res!47983)) b!94811))

(assert (= (and b!94811 res!47980) b!94803))

(assert (= (and b!94814 res!47979) b!94813))

(assert (= (and b!94813 c!15859) b!94810))

(assert (= (and b!94813 (not c!15859)) b!94805))

(assert (= (and b!94810 res!47986) b!94817))

(assert (= (or b!94810 b!94805) bm!9493))

(assert (= (and b!94813 res!47985) b!94806))

(assert (= (and b!94806 c!15854) b!94821))

(assert (= (and b!94806 (not c!15854)) b!94808))

(assert (= (and b!94821 res!47981) b!94809))

(assert (= (or b!94821 b!94808) bm!9495))

(declare-fun b_lambda!4183 () Bool)

(assert (=> (not b_lambda!4183) (not b!94803)))

(declare-fun t!5465 () Bool)

(declare-fun tb!1877 () Bool)

(assert (=> (and b!93907 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 (_2!1151 lt!46714))) t!5465) tb!1877))

(declare-fun result!3201 () Bool)

(assert (=> tb!1877 (= result!3201 tp_is_empty!2611)))

(assert (=> b!94803 t!5465))

(declare-fun b_and!5797 () Bool)

(assert (= b_and!5793 (and (=> t!5465 result!3201) b_and!5797)))

(declare-fun t!5467 () Bool)

(declare-fun tb!1879 () Bool)

(assert (=> (and b!93913 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (_2!1151 lt!46714))) t!5467) tb!1879))

(declare-fun result!3203 () Bool)

(assert (= result!3203 result!3201))

(assert (=> b!94803 t!5467))

(declare-fun b_and!5799 () Bool)

(assert (= b_and!5795 (and (=> t!5467 result!3203) b_and!5799)))

(declare-fun m!102401 () Bool)

(assert (=> b!94816 m!102401))

(declare-fun m!102403 () Bool)

(assert (=> b!94809 m!102403))

(assert (=> d!24887 m!102397))

(declare-fun m!102405 () Bool)

(assert (=> bm!9496 m!102405))

(declare-fun m!102407 () Bool)

(assert (=> b!94803 m!102407))

(declare-fun m!102409 () Bool)

(assert (=> b!94803 m!102409))

(declare-fun m!102411 () Bool)

(assert (=> b!94803 m!102411))

(assert (=> b!94803 m!102409))

(assert (=> b!94803 m!102407))

(declare-fun m!102413 () Bool)

(assert (=> b!94803 m!102413))

(assert (=> b!94803 m!102413))

(declare-fun m!102415 () Bool)

(assert (=> b!94803 m!102415))

(declare-fun m!102417 () Bool)

(assert (=> bm!9495 m!102417))

(declare-fun m!102419 () Bool)

(assert (=> bm!9493 m!102419))

(declare-fun m!102421 () Bool)

(assert (=> b!94818 m!102421))

(declare-fun m!102423 () Bool)

(assert (=> b!94818 m!102423))

(declare-fun m!102425 () Bool)

(assert (=> b!94818 m!102425))

(declare-fun m!102427 () Bool)

(assert (=> b!94818 m!102427))

(declare-fun m!102429 () Bool)

(assert (=> b!94818 m!102429))

(declare-fun m!102431 () Bool)

(assert (=> b!94818 m!102431))

(declare-fun m!102433 () Bool)

(assert (=> b!94818 m!102433))

(declare-fun m!102435 () Bool)

(assert (=> b!94818 m!102435))

(assert (=> b!94818 m!102413))

(declare-fun m!102437 () Bool)

(assert (=> b!94818 m!102437))

(declare-fun m!102439 () Bool)

(assert (=> b!94818 m!102439))

(declare-fun m!102441 () Bool)

(assert (=> b!94818 m!102441))

(assert (=> b!94818 m!102431))

(declare-fun m!102443 () Bool)

(assert (=> b!94818 m!102443))

(assert (=> b!94818 m!102423))

(declare-fun m!102445 () Bool)

(assert (=> b!94818 m!102445))

(assert (=> b!94818 m!102433))

(declare-fun m!102447 () Bool)

(assert (=> b!94818 m!102447))

(declare-fun m!102449 () Bool)

(assert (=> b!94818 m!102449))

(assert (=> b!94818 m!102425))

(declare-fun m!102451 () Bool)

(assert (=> b!94818 m!102451))

(assert (=> b!94807 m!102413))

(assert (=> b!94807 m!102413))

(declare-fun m!102453 () Bool)

(assert (=> b!94807 m!102453))

(assert (=> b!94811 m!102413))

(assert (=> b!94811 m!102413))

(declare-fun m!102455 () Bool)

(assert (=> b!94811 m!102455))

(assert (=> b!94822 m!102413))

(assert (=> b!94822 m!102413))

(assert (=> b!94822 m!102453))

(assert (=> bm!9499 m!102447))

(declare-fun m!102457 () Bool)

(assert (=> b!94817 m!102457))

(assert (=> d!24723 d!24887))

(declare-fun d!24889 () Bool)

(declare-fun c!15860 () Bool)

(assert (=> d!24889 (= c!15860 (and ((_ is Cons!1550) (toList!760 lt!46949)) (= (_1!1152 (h!2142 (toList!760 lt!46949))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun e!61878 () Option!155)

(assert (=> d!24889 (= (getValueByKey!149 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) e!61878)))

(declare-fun b!94825 () Bool)

(declare-fun e!61879 () Option!155)

(assert (=> b!94825 (= e!61878 e!61879)))

(declare-fun c!15861 () Bool)

(assert (=> b!94825 (= c!15861 (and ((_ is Cons!1550) (toList!760 lt!46949)) (not (= (_1!1152 (h!2142 (toList!760 lt!46949))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!94827 () Bool)

(assert (=> b!94827 (= e!61879 None!153)))

(declare-fun b!94824 () Bool)

(assert (=> b!94824 (= e!61878 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46949)))))))

(declare-fun b!94826 () Bool)

(assert (=> b!94826 (= e!61879 (getValueByKey!149 (t!5448 (toList!760 lt!46949)) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!24889 c!15860) b!94824))

(assert (= (and d!24889 (not c!15860)) b!94825))

(assert (= (and b!94825 c!15861) b!94826))

(assert (= (and b!94825 (not c!15861)) b!94827))

(declare-fun m!102459 () Bool)

(assert (=> b!94826 m!102459))

(assert (=> b!94537 d!24889))

(declare-fun d!24891 () Bool)

(declare-fun e!61880 () Bool)

(assert (=> d!24891 e!61880))

(declare-fun res!47988 () Bool)

(assert (=> d!24891 (=> res!47988 e!61880)))

(declare-fun lt!47168 () Bool)

(assert (=> d!24891 (= res!47988 (not lt!47168))))

(declare-fun lt!47167 () Bool)

(assert (=> d!24891 (= lt!47168 lt!47167)))

(declare-fun lt!47166 () Unit!2786)

(declare-fun e!61881 () Unit!2786)

(assert (=> d!24891 (= lt!47166 e!61881)))

(declare-fun c!15862 () Bool)

(assert (=> d!24891 (= c!15862 lt!47167)))

(assert (=> d!24891 (= lt!47167 (containsKey!152 (toList!760 lt!46919) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24891 (= (contains!780 lt!46919 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) lt!47168)))

(declare-fun b!94828 () Bool)

(declare-fun lt!47169 () Unit!2786)

(assert (=> b!94828 (= e!61881 lt!47169)))

(assert (=> b!94828 (= lt!47169 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46919) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94828 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94829 () Bool)

(declare-fun Unit!2819 () Unit!2786)

(assert (=> b!94829 (= e!61881 Unit!2819)))

(declare-fun b!94830 () Bool)

(assert (=> b!94830 (= e!61880 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!24891 c!15862) b!94828))

(assert (= (and d!24891 (not c!15862)) b!94829))

(assert (= (and d!24891 (not res!47988)) b!94830))

(assert (=> d!24891 m!101635))

(declare-fun m!102461 () Bool)

(assert (=> d!24891 m!102461))

(assert (=> b!94828 m!101635))

(declare-fun m!102463 () Bool)

(assert (=> b!94828 m!102463))

(assert (=> b!94828 m!101635))

(declare-fun m!102465 () Bool)

(assert (=> b!94828 m!102465))

(assert (=> b!94828 m!102465))

(declare-fun m!102467 () Bool)

(assert (=> b!94828 m!102467))

(assert (=> b!94830 m!101635))

(assert (=> b!94830 m!102465))

(assert (=> b!94830 m!102465))

(assert (=> b!94830 m!102467))

(assert (=> b!94504 d!24891))

(declare-fun d!24893 () Bool)

(declare-fun res!47989 () Bool)

(declare-fun e!61882 () Bool)

(assert (=> d!24893 (=> res!47989 e!61882)))

(assert (=> d!24893 (= res!47989 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24893 (= (containsKey!152 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61882)))

(declare-fun b!94831 () Bool)

(declare-fun e!61883 () Bool)

(assert (=> b!94831 (= e!61882 e!61883)))

(declare-fun res!47990 () Bool)

(assert (=> b!94831 (=> (not res!47990) (not e!61883))))

(assert (=> b!94831 (= res!47990 (and (or (not ((_ is Cons!1550) (toList!760 lt!46612))) (bvsle (_1!1152 (h!2142 (toList!760 lt!46612))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1550) (toList!760 lt!46612)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46612))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!94832 () Bool)

(assert (=> b!94832 (= e!61883 (containsKey!152 (t!5448 (toList!760 lt!46612)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24893 (not res!47989)) b!94831))

(assert (= (and b!94831 res!47990) b!94832))

(assert (=> b!94832 m!101269))

(declare-fun m!102469 () Bool)

(assert (=> b!94832 m!102469))

(assert (=> d!24665 d!24893))

(declare-fun d!24895 () Bool)

(declare-fun e!61884 () Bool)

(assert (=> d!24895 e!61884))

(declare-fun res!47991 () Bool)

(assert (=> d!24895 (=> res!47991 e!61884)))

(declare-fun lt!47172 () Bool)

(assert (=> d!24895 (= res!47991 (not lt!47172))))

(declare-fun lt!47171 () Bool)

(assert (=> d!24895 (= lt!47172 lt!47171)))

(declare-fun lt!47170 () Unit!2786)

(declare-fun e!61885 () Unit!2786)

(assert (=> d!24895 (= lt!47170 e!61885)))

(declare-fun c!15863 () Bool)

(assert (=> d!24895 (= c!15863 lt!47171)))

(assert (=> d!24895 (= lt!47171 (containsKey!152 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!24895 (= (contains!780 lt!46854 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47172)))

(declare-fun b!94833 () Bool)

(declare-fun lt!47173 () Unit!2786)

(assert (=> b!94833 (= e!61885 lt!47173)))

(assert (=> b!94833 (= lt!47173 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> b!94833 (isDefined!101 (getValueByKey!149 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!94834 () Bool)

(declare-fun Unit!2820 () Unit!2786)

(assert (=> b!94834 (= e!61885 Unit!2820)))

(declare-fun b!94835 () Bool)

(assert (=> b!94835 (= e!61884 (isDefined!101 (getValueByKey!149 (toList!760 lt!46854) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!24895 c!15863) b!94833))

(assert (= (and d!24895 (not c!15863)) b!94834))

(assert (= (and d!24895 (not res!47991)) b!94835))

(declare-fun m!102471 () Bool)

(assert (=> d!24895 m!102471))

(declare-fun m!102473 () Bool)

(assert (=> b!94833 m!102473))

(assert (=> b!94833 m!101575))

(assert (=> b!94833 m!101575))

(declare-fun m!102475 () Bool)

(assert (=> b!94833 m!102475))

(assert (=> b!94835 m!101575))

(assert (=> b!94835 m!101575))

(assert (=> b!94835 m!102475))

(assert (=> d!24637 d!24895))

(declare-fun d!24897 () Bool)

(declare-fun c!15864 () Bool)

(assert (=> d!24897 (= c!15864 (and ((_ is Cons!1550) lt!46856) (= (_1!1152 (h!2142 lt!46856)) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!61886 () Option!155)

(assert (=> d!24897 (= (getValueByKey!149 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!61886)))

(declare-fun b!94837 () Bool)

(declare-fun e!61887 () Option!155)

(assert (=> b!94837 (= e!61886 e!61887)))

(declare-fun c!15865 () Bool)

(assert (=> b!94837 (= c!15865 (and ((_ is Cons!1550) lt!46856) (not (= (_1!1152 (h!2142 lt!46856)) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!94839 () Bool)

(assert (=> b!94839 (= e!61887 None!153)))

(declare-fun b!94836 () Bool)

(assert (=> b!94836 (= e!61886 (Some!154 (_2!1152 (h!2142 lt!46856))))))

(declare-fun b!94838 () Bool)

(assert (=> b!94838 (= e!61887 (getValueByKey!149 (t!5448 lt!46856) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!24897 c!15864) b!94836))

(assert (= (and d!24897 (not c!15864)) b!94837))

(assert (= (and b!94837 c!15865) b!94838))

(assert (= (and b!94837 (not c!15865)) b!94839))

(declare-fun m!102477 () Bool)

(assert (=> b!94838 m!102477))

(assert (=> d!24637 d!24897))

(declare-fun d!24899 () Bool)

(assert (=> d!24899 (= (getValueByKey!149 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!47176 () Unit!2786)

(declare-fun choose!577 (List!1554 (_ BitVec 64) V!3129) Unit!2786)

(assert (=> d!24899 (= lt!47176 (choose!577 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!61890 () Bool)

(assert (=> d!24899 e!61890))

(declare-fun res!47996 () Bool)

(assert (=> d!24899 (=> (not res!47996) (not e!61890))))

(assert (=> d!24899 (= res!47996 (isStrictlySorted!289 lt!46856))))

(assert (=> d!24899 (= (lemmaContainsTupThenGetReturnValue!65 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47176)))

(declare-fun b!94844 () Bool)

(declare-fun res!47997 () Bool)

(assert (=> b!94844 (=> (not res!47997) (not e!61890))))

(assert (=> b!94844 (= res!47997 (containsKey!152 lt!46856 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!94845 () Bool)

(assert (=> b!94845 (= e!61890 (contains!782 lt!46856 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!24899 res!47996) b!94844))

(assert (= (and b!94844 res!47997) b!94845))

(assert (=> d!24899 m!101569))

(declare-fun m!102479 () Bool)

(assert (=> d!24899 m!102479))

(declare-fun m!102481 () Bool)

(assert (=> d!24899 m!102481))

(declare-fun m!102483 () Bool)

(assert (=> b!94844 m!102483))

(declare-fun m!102485 () Bool)

(assert (=> b!94845 m!102485))

(assert (=> d!24637 d!24899))

(declare-fun e!61901 () List!1554)

(declare-fun b!94866 () Bool)

(assert (=> b!94866 (= e!61901 (insertStrictlySorted!68 (t!5448 (toList!760 lt!46613)) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!94867 () Bool)

(declare-fun e!61903 () List!1554)

(declare-fun call!9510 () List!1554)

(assert (=> b!94867 (= e!61903 call!9510)))

(declare-fun b!94868 () Bool)

(declare-fun e!61904 () List!1554)

(declare-fun call!9509 () List!1554)

(assert (=> b!94868 (= e!61904 call!9509)))

(declare-fun b!94869 () Bool)

(declare-fun res!48003 () Bool)

(declare-fun e!61905 () Bool)

(assert (=> b!94869 (=> (not res!48003) (not e!61905))))

(declare-fun lt!47179 () List!1554)

(assert (=> b!94869 (= res!48003 (containsKey!152 lt!47179 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun c!15876 () Bool)

(declare-fun b!94871 () Bool)

(declare-fun c!15877 () Bool)

(assert (=> b!94871 (= e!61901 (ite c!15877 (t!5448 (toList!760 lt!46613)) (ite c!15876 (Cons!1550 (h!2142 (toList!760 lt!46613)) (t!5448 (toList!760 lt!46613))) Nil!1551)))))

(declare-fun b!94872 () Bool)

(declare-fun e!61902 () List!1554)

(assert (=> b!94872 (= e!61902 e!61903)))

(assert (=> b!94872 (= c!15877 (and ((_ is Cons!1550) (toList!760 lt!46613)) (= (_1!1152 (h!2142 (toList!760 lt!46613))) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9506 () Bool)

(declare-fun call!9511 () List!1554)

(assert (=> bm!9506 (= call!9510 call!9511)))

(declare-fun b!94873 () Bool)

(assert (=> b!94873 (= e!61904 call!9509)))

(declare-fun b!94870 () Bool)

(assert (=> b!94870 (= e!61902 call!9511)))

(declare-fun d!24901 () Bool)

(assert (=> d!24901 e!61905))

(declare-fun res!48002 () Bool)

(assert (=> d!24901 (=> (not res!48002) (not e!61905))))

(assert (=> d!24901 (= res!48002 (isStrictlySorted!289 lt!47179))))

(assert (=> d!24901 (= lt!47179 e!61902)))

(declare-fun c!15874 () Bool)

(assert (=> d!24901 (= c!15874 (and ((_ is Cons!1550) (toList!760 lt!46613)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46613))) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!24901 (isStrictlySorted!289 (toList!760 lt!46613))))

(assert (=> d!24901 (= (insertStrictlySorted!68 (toList!760 lt!46613) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47179)))

(declare-fun bm!9507 () Bool)

(declare-fun $colon$colon!75 (List!1554 tuple2!2282) List!1554)

(assert (=> bm!9507 (= call!9511 ($colon$colon!75 e!61901 (ite c!15874 (h!2142 (toList!760 lt!46613)) (tuple2!2283 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun c!15875 () Bool)

(assert (=> bm!9507 (= c!15875 c!15874)))

(declare-fun b!94874 () Bool)

(assert (=> b!94874 (= e!61905 (contains!782 lt!47179 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9508 () Bool)

(assert (=> bm!9508 (= call!9509 call!9510)))

(declare-fun b!94875 () Bool)

(assert (=> b!94875 (= c!15876 (and ((_ is Cons!1550) (toList!760 lt!46613)) (bvsgt (_1!1152 (h!2142 (toList!760 lt!46613))) (_1!1152 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!94875 (= e!61903 e!61904)))

(assert (= (and d!24901 c!15874) b!94870))

(assert (= (and d!24901 (not c!15874)) b!94872))

(assert (= (and b!94872 c!15877) b!94867))

(assert (= (and b!94872 (not c!15877)) b!94875))

(assert (= (and b!94875 c!15876) b!94868))

(assert (= (and b!94875 (not c!15876)) b!94873))

(assert (= (or b!94868 b!94873) bm!9508))

(assert (= (or b!94867 bm!9508) bm!9506))

(assert (= (or b!94870 bm!9506) bm!9507))

(assert (= (and bm!9507 c!15875) b!94866))

(assert (= (and bm!9507 (not c!15875)) b!94871))

(assert (= (and d!24901 res!48002) b!94869))

(assert (= (and b!94869 res!48003) b!94874))

(declare-fun m!102487 () Bool)

(assert (=> bm!9507 m!102487))

(declare-fun m!102489 () Bool)

(assert (=> b!94874 m!102489))

(declare-fun m!102491 () Bool)

(assert (=> b!94866 m!102491))

(declare-fun m!102493 () Bool)

(assert (=> d!24901 m!102493))

(declare-fun m!102495 () Bool)

(assert (=> d!24901 m!102495))

(declare-fun m!102497 () Bool)

(assert (=> b!94869 m!102497))

(assert (=> d!24637 d!24901))

(declare-fun b!94877 () Bool)

(declare-fun res!48005 () Bool)

(declare-fun e!61906 () Bool)

(assert (=> b!94877 (=> (not res!48005) (not e!61906))))

(assert (=> b!94877 (= res!48005 (bvsge (size!2242 (v!2764 (underlying!330 thiss!992))) (_size!465 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun b!94876 () Bool)

(declare-fun res!48007 () Bool)

(assert (=> b!94876 (=> (not res!48007) (not e!61906))))

(assert (=> b!94876 (= res!48007 (and (= (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001)) (= (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (size!2237 (_values!2418 (v!2764 (underlying!330 thiss!992))))) (bvsge (_size!465 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!465 (v!2764 (underlying!330 thiss!992))) (bvadd (mask!6510 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!94879 () Bool)

(assert (=> b!94879 (= e!61906 (and (bvsge (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!465 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!94878 () Bool)

(declare-fun res!48004 () Bool)

(assert (=> b!94878 (=> (not res!48004) (not e!61906))))

(assert (=> b!94878 (= res!48004 (= (size!2242 (v!2764 (underlying!330 thiss!992))) (bvadd (_size!465 (v!2764 (underlying!330 thiss!992))) (bvsdiv (bvadd (extraKeys!2264 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!24903 () Bool)

(declare-fun res!48006 () Bool)

(assert (=> d!24903 (=> (not res!48006) (not e!61906))))

(assert (=> d!24903 (= res!48006 (validMask!0 (mask!6510 (v!2764 (underlying!330 thiss!992)))))))

(assert (=> d!24903 (= (simpleValid!66 (v!2764 (underlying!330 thiss!992))) e!61906)))

(assert (= (and d!24903 res!48006) b!94876))

(assert (= (and b!94876 res!48007) b!94877))

(assert (= (and b!94877 res!48005) b!94878))

(assert (= (and b!94878 res!48004) b!94879))

(declare-fun m!102499 () Bool)

(assert (=> b!94877 m!102499))

(assert (=> b!94878 m!102499))

(assert (=> d!24903 m!101173))

(assert (=> d!24693 d!24903))

(declare-fun d!24905 () Bool)

(declare-fun e!61907 () Bool)

(assert (=> d!24905 e!61907))

(declare-fun res!48008 () Bool)

(assert (=> d!24905 (=> res!48008 e!61907)))

(declare-fun lt!47182 () Bool)

(assert (=> d!24905 (= res!48008 (not lt!47182))))

(declare-fun lt!47181 () Bool)

(assert (=> d!24905 (= lt!47182 lt!47181)))

(declare-fun lt!47180 () Unit!2786)

(declare-fun e!61908 () Unit!2786)

(assert (=> d!24905 (= lt!47180 e!61908)))

(declare-fun c!15878 () Bool)

(assert (=> d!24905 (= c!15878 lt!47181)))

(assert (=> d!24905 (= lt!47181 (containsKey!152 (toList!760 lt!46748) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24905 (= (contains!780 lt!46748 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47182)))

(declare-fun b!94880 () Bool)

(declare-fun lt!47183 () Unit!2786)

(assert (=> b!94880 (= e!61908 lt!47183)))

(assert (=> b!94880 (= lt!47183 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46748) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94880 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94881 () Bool)

(declare-fun Unit!2821 () Unit!2786)

(assert (=> b!94881 (= e!61908 Unit!2821)))

(declare-fun b!94882 () Bool)

(assert (=> b!94882 (= e!61907 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24905 c!15878) b!94880))

(assert (= (and d!24905 (not c!15878)) b!94881))

(assert (= (and d!24905 (not res!48008)) b!94882))

(declare-fun m!102501 () Bool)

(assert (=> d!24905 m!102501))

(declare-fun m!102503 () Bool)

(assert (=> b!94880 m!102503))

(declare-fun m!102505 () Bool)

(assert (=> b!94880 m!102505))

(assert (=> b!94880 m!102505))

(declare-fun m!102507 () Bool)

(assert (=> b!94880 m!102507))

(assert (=> b!94882 m!102505))

(assert (=> b!94882 m!102505))

(assert (=> b!94882 m!102507))

(assert (=> d!24621 d!24905))

(assert (=> d!24621 d!24597))

(declare-fun d!24907 () Bool)

(declare-fun res!48009 () Bool)

(declare-fun e!61909 () Bool)

(assert (=> d!24907 (=> res!48009 e!61909)))

(assert (=> d!24907 (= res!48009 (and ((_ is Cons!1550) (toList!760 call!9431)) (= (_1!1152 (h!2142 (toList!760 call!9431))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))))

(assert (=> d!24907 (= (containsKey!152 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))) e!61909)))

(declare-fun b!94883 () Bool)

(declare-fun e!61910 () Bool)

(assert (=> b!94883 (= e!61909 e!61910)))

(declare-fun res!48010 () Bool)

(assert (=> b!94883 (=> (not res!48010) (not e!61910))))

(assert (=> b!94883 (= res!48010 (and (or (not ((_ is Cons!1550) (toList!760 call!9431))) (bvsle (_1!1152 (h!2142 (toList!760 call!9431))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))) ((_ is Cons!1550) (toList!760 call!9431)) (bvslt (_1!1152 (h!2142 (toList!760 call!9431))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))))

(declare-fun b!94884 () Bool)

(assert (=> b!94884 (= e!61910 (containsKey!152 (t!5448 (toList!760 call!9431)) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (= (and d!24907 (not res!48009)) b!94883))

(assert (= (and b!94883 res!48010) b!94884))

(assert (=> b!94884 m!101367))

(declare-fun m!102509 () Bool)

(assert (=> b!94884 m!102509))

(assert (=> d!24697 d!24907))

(declare-fun d!24909 () Bool)

(assert (=> d!24909 (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))

(assert (=> d!24909 true))

(declare-fun _$16!111 () Unit!2786)

(assert (=> d!24909 (= (choose!573 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (defaultEntry!2435 newMap!16)) _$16!111)))

(declare-fun bs!3907 () Bool)

(assert (= bs!3907 d!24909))

(assert (=> bs!3907 m!101795))

(assert (=> bs!3907 m!101367))

(assert (=> bs!3907 m!101795))

(assert (=> bs!3907 m!101367))

(assert (=> bs!3907 m!101797))

(assert (=> d!24699 d!24909))

(assert (=> d!24699 d!24761))

(declare-fun d!24911 () Bool)

(assert (=> d!24911 (= (inRange!0 (index!3122 lt!46843) (mask!6510 newMap!16)) (and (bvsge (index!3122 lt!46843) #b00000000000000000000000000000000) (bvslt (index!3122 lt!46843) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!94404 d!24911))

(declare-fun d!24913 () Bool)

(assert (=> d!24913 (= (apply!90 lt!46967 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46967) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3908 () Bool)

(assert (= bs!3908 d!24913))

(assert (=> bs!3908 m!102037))

(assert (=> bs!3908 m!102037))

(declare-fun m!102511 () Bool)

(assert (=> bs!3908 m!102511))

(assert (=> b!94548 d!24913))

(declare-fun d!24915 () Bool)

(assert (=> d!24915 (= (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!357 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3909 () Bool)

(assert (= bs!3909 d!24915))

(assert (=> bs!3909 m!101535))

(declare-fun m!102513 () Bool)

(assert (=> bs!3909 m!102513))

(assert (=> b!94519 d!24915))

(declare-fun d!24917 () Bool)

(declare-fun c!15879 () Bool)

(assert (=> d!24917 (= c!15879 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61911 () Option!155)

(assert (=> d!24917 (= (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000) e!61911)))

(declare-fun b!94886 () Bool)

(declare-fun e!61912 () Option!155)

(assert (=> b!94886 (= e!61911 e!61912)))

(declare-fun c!15880 () Bool)

(assert (=> b!94886 (= c!15880 (and ((_ is Cons!1550) (toList!760 lt!46612)) (not (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94888 () Bool)

(assert (=> b!94888 (= e!61912 None!153)))

(declare-fun b!94885 () Bool)

(assert (=> b!94885 (= e!61911 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46612)))))))

(declare-fun b!94887 () Bool)

(assert (=> b!94887 (= e!61912 (getValueByKey!149 (t!5448 (toList!760 lt!46612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!24917 c!15879) b!94885))

(assert (= (and d!24917 (not c!15879)) b!94886))

(assert (= (and b!94886 c!15880) b!94887))

(assert (= (and b!94886 (not c!15880)) b!94888))

(declare-fun m!102515 () Bool)

(assert (=> b!94887 m!102515))

(assert (=> b!94519 d!24917))

(declare-fun d!24919 () Bool)

(assert (=> d!24919 (= (get!1275 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2770 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24613 d!24919))

(declare-fun c!15881 () Bool)

(declare-fun d!24921 () Bool)

(assert (=> d!24921 (= c!15881 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!61913 () Option!155)

(assert (=> d!24921 (= (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61913)))

(declare-fun b!94890 () Bool)

(declare-fun e!61914 () Option!155)

(assert (=> b!94890 (= e!61913 e!61914)))

(declare-fun c!15882 () Bool)

(assert (=> b!94890 (= c!15882 (and ((_ is Cons!1550) (toList!760 lt!46612)) (not (= (_1!1152 (h!2142 (toList!760 lt!46612))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!94892 () Bool)

(assert (=> b!94892 (= e!61914 None!153)))

(declare-fun b!94889 () Bool)

(assert (=> b!94889 (= e!61913 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46612)))))))

(declare-fun b!94891 () Bool)

(assert (=> b!94891 (= e!61914 (getValueByKey!149 (t!5448 (toList!760 lt!46612)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24921 c!15881) b!94889))

(assert (= (and d!24921 (not c!15881)) b!94890))

(assert (= (and b!94890 c!15882) b!94891))

(assert (= (and b!94890 (not c!15882)) b!94892))

(assert (=> b!94891 m!101269))

(declare-fun m!102517 () Bool)

(assert (=> b!94891 m!102517))

(assert (=> d!24613 d!24921))

(declare-fun d!24923 () Bool)

(assert (=> d!24923 (= (apply!90 lt!46919 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3910 () Bool)

(assert (= bs!3910 d!24923))

(assert (=> bs!3910 m!101981))

(assert (=> bs!3910 m!101981))

(declare-fun m!102519 () Bool)

(assert (=> bs!3910 m!102519))

(assert (=> b!94502 d!24923))

(declare-fun d!24925 () Bool)

(declare-fun e!61915 () Bool)

(assert (=> d!24925 e!61915))

(declare-fun res!48011 () Bool)

(assert (=> d!24925 (=> res!48011 e!61915)))

(declare-fun lt!47186 () Bool)

(assert (=> d!24925 (= res!48011 (not lt!47186))))

(declare-fun lt!47185 () Bool)

(assert (=> d!24925 (= lt!47186 lt!47185)))

(declare-fun lt!47184 () Unit!2786)

(declare-fun e!61916 () Unit!2786)

(assert (=> d!24925 (= lt!47184 e!61916)))

(declare-fun c!15883 () Bool)

(assert (=> d!24925 (= c!15883 lt!47185)))

(assert (=> d!24925 (= lt!47185 (containsKey!152 (toList!760 lt!47000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24925 (= (contains!780 lt!47000 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47186)))

(declare-fun b!94893 () Bool)

(declare-fun lt!47187 () Unit!2786)

(assert (=> b!94893 (= e!61916 lt!47187)))

(assert (=> b!94893 (= lt!47187 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!47000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94893 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94894 () Bool)

(declare-fun Unit!2822 () Unit!2786)

(assert (=> b!94894 (= e!61916 Unit!2822)))

(declare-fun b!94895 () Bool)

(assert (=> b!94895 (= e!61915 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24925 c!15883) b!94893))

(assert (= (and d!24925 (not c!15883)) b!94894))

(assert (= (and d!24925 (not res!48011)) b!94895))

(declare-fun m!102521 () Bool)

(assert (=> d!24925 m!102521))

(declare-fun m!102523 () Bool)

(assert (=> b!94893 m!102523))

(declare-fun m!102525 () Bool)

(assert (=> b!94893 m!102525))

(assert (=> b!94893 m!102525))

(declare-fun m!102527 () Bool)

(assert (=> b!94893 m!102527))

(assert (=> b!94895 m!102525))

(assert (=> b!94895 m!102525))

(assert (=> b!94895 m!102527))

(assert (=> bm!9481 d!24925))

(declare-fun d!24927 () Bool)

(assert (=> d!24927 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!47188 () Unit!2786)

(assert (=> d!24927 (= lt!47188 (choose!575 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61917 () Bool)

(assert (=> d!24927 e!61917))

(declare-fun res!48012 () Bool)

(assert (=> d!24927 (=> (not res!48012) (not e!61917))))

(assert (=> d!24927 (= res!48012 (isStrictlySorted!289 (toList!760 lt!46612)))))

(assert (=> d!24927 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47188)))

(declare-fun b!94896 () Bool)

(assert (=> b!94896 (= e!61917 (containsKey!152 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24927 res!48012) b!94896))

(assert (=> d!24927 m!101269))

(assert (=> d!24927 m!101429))

(assert (=> d!24927 m!101429))

(assert (=> d!24927 m!101661))

(assert (=> d!24927 m!101269))

(declare-fun m!102529 () Bool)

(assert (=> d!24927 m!102529))

(declare-fun m!102531 () Bool)

(assert (=> d!24927 m!102531))

(assert (=> b!94896 m!101269))

(assert (=> b!94896 m!101657))

(assert (=> b!94447 d!24927))

(declare-fun d!24929 () Bool)

(assert (=> d!24929 (= (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!357 (getValueByKey!149 (toList!760 lt!46612) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3911 () Bool)

(assert (= bs!3911 d!24929))

(assert (=> bs!3911 m!101429))

(declare-fun m!102533 () Bool)

(assert (=> bs!3911 m!102533))

(assert (=> b!94447 d!24929))

(assert (=> b!94447 d!24921))

(declare-fun lt!47189 () Bool)

(declare-fun d!24931 () Bool)

(assert (=> d!24931 (= lt!47189 (select (content!99 (toList!760 lt!46854)) (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun e!61918 () Bool)

(assert (=> d!24931 (= lt!47189 e!61918)))

(declare-fun res!48013 () Bool)

(assert (=> d!24931 (=> (not res!48013) (not e!61918))))

(assert (=> d!24931 (= res!48013 ((_ is Cons!1550) (toList!760 lt!46854)))))

(assert (=> d!24931 (= (contains!782 (toList!760 lt!46854) (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!47189)))

(declare-fun b!94897 () Bool)

(declare-fun e!61919 () Bool)

(assert (=> b!94897 (= e!61918 e!61919)))

(declare-fun res!48014 () Bool)

(assert (=> b!94897 (=> res!48014 e!61919)))

(assert (=> b!94897 (= res!48014 (= (h!2142 (toList!760 lt!46854)) (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!94898 () Bool)

(assert (=> b!94898 (= e!61919 (contains!782 (t!5448 (toList!760 lt!46854)) (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!24931 res!48013) b!94897))

(assert (= (and b!94897 (not res!48014)) b!94898))

(declare-fun m!102535 () Bool)

(assert (=> d!24931 m!102535))

(declare-fun m!102537 () Bool)

(assert (=> d!24931 m!102537))

(declare-fun m!102539 () Bool)

(assert (=> b!94898 m!102539))

(assert (=> b!94411 d!24931))

(declare-fun d!24933 () Bool)

(declare-fun res!48015 () Bool)

(declare-fun e!61920 () Bool)

(assert (=> d!24933 (=> res!48015 e!61920)))

(assert (=> d!24933 (= res!48015 (and ((_ is Cons!1550) (toList!760 call!9426)) (= (_1!1152 (h!2142 (toList!760 call!9426))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24933 (= (containsKey!152 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61920)))

(declare-fun b!94899 () Bool)

(declare-fun e!61921 () Bool)

(assert (=> b!94899 (= e!61920 e!61921)))

(declare-fun res!48016 () Bool)

(assert (=> b!94899 (=> (not res!48016) (not e!61921))))

(assert (=> b!94899 (= res!48016 (and (or (not ((_ is Cons!1550) (toList!760 call!9426))) (bvsle (_1!1152 (h!2142 (toList!760 call!9426))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1550) (toList!760 call!9426)) (bvslt (_1!1152 (h!2142 (toList!760 call!9426))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94900 () Bool)

(assert (=> b!94900 (= e!61921 (containsKey!152 (t!5448 (toList!760 call!9426)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24933 (not res!48015)) b!94899))

(assert (= (and b!94899 res!48016) b!94900))

(assert (=> b!94900 m!101143))

(declare-fun m!102541 () Bool)

(assert (=> b!94900 m!102541))

(assert (=> d!24711 d!24933))

(assert (=> d!24713 d!24715))

(assert (=> d!24713 d!24717))

(declare-fun d!24935 () Bool)

(assert (=> d!24935 (isDefined!101 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24935 true))

(declare-fun _$12!338 () Unit!2786)

(assert (=> d!24935 (= (choose!575 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) _$12!338)))

(declare-fun bs!3912 () Bool)

(assert (= bs!3912 d!24935))

(assert (=> bs!3912 m!101143))

(assert (=> bs!3912 m!101349))

(assert (=> bs!3912 m!101349))

(assert (=> bs!3912 m!101351))

(assert (=> d!24713 d!24935))

(declare-fun d!24937 () Bool)

(declare-fun res!48021 () Bool)

(declare-fun e!61926 () Bool)

(assert (=> d!24937 (=> res!48021 e!61926)))

(assert (=> d!24937 (= res!48021 (or ((_ is Nil!1551) (toList!760 lt!46500)) ((_ is Nil!1551) (t!5448 (toList!760 lt!46500)))))))

(assert (=> d!24937 (= (isStrictlySorted!289 (toList!760 lt!46500)) e!61926)))

(declare-fun b!94905 () Bool)

(declare-fun e!61927 () Bool)

(assert (=> b!94905 (= e!61926 e!61927)))

(declare-fun res!48022 () Bool)

(assert (=> b!94905 (=> (not res!48022) (not e!61927))))

(assert (=> b!94905 (= res!48022 (bvslt (_1!1152 (h!2142 (toList!760 lt!46500))) (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500))))))))

(declare-fun b!94906 () Bool)

(assert (=> b!94906 (= e!61927 (isStrictlySorted!289 (t!5448 (toList!760 lt!46500))))))

(assert (= (and d!24937 (not res!48021)) b!94905))

(assert (= (and b!94905 res!48022) b!94906))

(declare-fun m!102543 () Bool)

(assert (=> b!94906 m!102543))

(assert (=> d!24713 d!24937))

(declare-fun d!24939 () Bool)

(assert (=> d!24939 (= (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46609)) (v!2770 (getValueByKey!149 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46609)))))

(assert (=> d!24641 d!24939))

(declare-fun d!24941 () Bool)

(declare-fun c!15884 () Bool)

(assert (=> d!24941 (= c!15884 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46609)))))

(declare-fun e!61928 () Option!155)

(assert (=> d!24941 (= (getValueByKey!149 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46609) e!61928)))

(declare-fun b!94908 () Bool)

(declare-fun e!61929 () Option!155)

(assert (=> b!94908 (= e!61928 e!61929)))

(declare-fun c!15885 () Bool)

(assert (=> b!94908 (= c!15885 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (not (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46609))))))

(declare-fun b!94910 () Bool)

(assert (=> b!94910 (= e!61929 None!153)))

(declare-fun b!94907 () Bool)

(assert (=> b!94907 (= e!61928 (Some!154 (_2!1152 (h!2142 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!94909 () Bool)

(assert (=> b!94909 (= e!61929 (getValueByKey!149 (t!5448 (toList!760 (+!128 lt!46615 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!46609))))

(assert (= (and d!24941 c!15884) b!94907))

(assert (= (and d!24941 (not c!15884)) b!94908))

(assert (= (and b!94908 c!15885) b!94909))

(assert (= (and b!94908 (not c!15885)) b!94910))

(declare-fun m!102545 () Bool)

(assert (=> b!94909 m!102545))

(assert (=> d!24641 d!24941))

(declare-fun d!24943 () Bool)

(declare-fun e!61930 () Bool)

(assert (=> d!24943 e!61930))

(declare-fun res!48023 () Bool)

(assert (=> d!24943 (=> res!48023 e!61930)))

(declare-fun lt!47192 () Bool)

(assert (=> d!24943 (= res!48023 (not lt!47192))))

(declare-fun lt!47191 () Bool)

(assert (=> d!24943 (= lt!47192 lt!47191)))

(declare-fun lt!47190 () Unit!2786)

(declare-fun e!61931 () Unit!2786)

(assert (=> d!24943 (= lt!47190 e!61931)))

(declare-fun c!15886 () Bool)

(assert (=> d!24943 (= c!15886 lt!47191)))

(assert (=> d!24943 (= lt!47191 (containsKey!152 (toList!760 lt!46967) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24943 (= (contains!780 lt!46967 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47192)))

(declare-fun b!94911 () Bool)

(declare-fun lt!47193 () Unit!2786)

(assert (=> b!94911 (= e!61931 lt!47193)))

(assert (=> b!94911 (= lt!47193 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46967) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94911 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94912 () Bool)

(declare-fun Unit!2823 () Unit!2786)

(assert (=> b!94912 (= e!61931 Unit!2823)))

(declare-fun b!94913 () Bool)

(assert (=> b!94913 (= e!61930 (isDefined!101 (getValueByKey!149 (toList!760 lt!46967) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24943 c!15886) b!94911))

(assert (= (and d!24943 (not c!15886)) b!94912))

(assert (= (and d!24943 (not res!48023)) b!94913))

(declare-fun m!102547 () Bool)

(assert (=> d!24943 m!102547))

(declare-fun m!102549 () Bool)

(assert (=> b!94911 m!102549))

(declare-fun m!102551 () Bool)

(assert (=> b!94911 m!102551))

(assert (=> b!94911 m!102551))

(declare-fun m!102553 () Bool)

(assert (=> b!94911 m!102553))

(assert (=> b!94913 m!102551))

(assert (=> b!94913 m!102551))

(assert (=> b!94913 m!102553))

(assert (=> bm!9472 d!24943))

(assert (=> b!94597 d!24791))

(declare-fun d!24945 () Bool)

(assert (=> d!24945 (= (inRange!0 (ite c!15748 (index!3122 lt!46812) (ite c!15751 (index!3121 lt!46827) (index!3124 lt!46827))) (mask!6510 newMap!16)) (and (bvsge (ite c!15748 (index!3122 lt!46812) (ite c!15751 (index!3121 lt!46827) (index!3124 lt!46827))) #b00000000000000000000000000000000) (bvslt (ite c!15748 (index!3122 lt!46812) (ite c!15751 (index!3121 lt!46827) (index!3124 lt!46827))) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9452 d!24945))

(declare-fun d!24947 () Bool)

(declare-fun res!48024 () Bool)

(declare-fun e!61932 () Bool)

(assert (=> d!24947 (=> res!48024 e!61932)))

(assert (=> d!24947 (= res!48024 (and ((_ is Cons!1550) (t!5448 (toList!760 lt!46500))) (= (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500)))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!24947 (= (containsKey!152 (t!5448 (toList!760 lt!46500)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!61932)))

(declare-fun b!94914 () Bool)

(declare-fun e!61933 () Bool)

(assert (=> b!94914 (= e!61932 e!61933)))

(declare-fun res!48025 () Bool)

(assert (=> b!94914 (=> (not res!48025) (not e!61933))))

(assert (=> b!94914 (= res!48025 (and (or (not ((_ is Cons!1550) (t!5448 (toList!760 lt!46500)))) (bvsle (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500)))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1550) (t!5448 (toList!760 lt!46500))) (bvslt (_1!1152 (h!2142 (t!5448 (toList!760 lt!46500)))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!94915 () Bool)

(assert (=> b!94915 (= e!61933 (containsKey!152 (t!5448 (t!5448 (toList!760 lt!46500))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!24947 (not res!48024)) b!94914))

(assert (= (and b!94914 res!48025) b!94915))

(assert (=> b!94915 m!101143))

(declare-fun m!102555 () Bool)

(assert (=> b!94915 m!102555))

(assert (=> b!94304 d!24947))

(declare-fun d!24949 () Bool)

(declare-fun e!61934 () Bool)

(assert (=> d!24949 e!61934))

(declare-fun res!48026 () Bool)

(assert (=> d!24949 (=> res!48026 e!61934)))

(declare-fun lt!47196 () Bool)

(assert (=> d!24949 (= res!48026 (not lt!47196))))

(declare-fun lt!47195 () Bool)

(assert (=> d!24949 (= lt!47196 lt!47195)))

(declare-fun lt!47194 () Unit!2786)

(declare-fun e!61935 () Unit!2786)

(assert (=> d!24949 (= lt!47194 e!61935)))

(declare-fun c!15887 () Bool)

(assert (=> d!24949 (= c!15887 lt!47195)))

(assert (=> d!24949 (= lt!47195 (containsKey!152 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!24949 (= (contains!780 lt!46949 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!47196)))

(declare-fun b!94916 () Bool)

(declare-fun lt!47197 () Unit!2786)

(assert (=> b!94916 (= e!61935 lt!47197)))

(assert (=> b!94916 (= lt!47197 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!94916 (isDefined!101 (getValueByKey!149 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94917 () Bool)

(declare-fun Unit!2824 () Unit!2786)

(assert (=> b!94917 (= e!61935 Unit!2824)))

(declare-fun b!94918 () Bool)

(assert (=> b!94918 (= e!61934 (isDefined!101 (getValueByKey!149 (toList!760 lt!46949) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(assert (= (and d!24949 c!15887) b!94916))

(assert (= (and d!24949 (not c!15887)) b!94917))

(assert (= (and d!24949 (not res!48026)) b!94918))

(declare-fun m!102557 () Bool)

(assert (=> d!24949 m!102557))

(declare-fun m!102559 () Bool)

(assert (=> b!94916 m!102559))

(assert (=> b!94916 m!101823))

(assert (=> b!94916 m!101823))

(declare-fun m!102561 () Bool)

(assert (=> b!94916 m!102561))

(assert (=> b!94918 m!101823))

(assert (=> b!94918 m!101823))

(assert (=> b!94918 m!102561))

(assert (=> d!24705 d!24949))

(declare-fun d!24951 () Bool)

(declare-fun c!15888 () Bool)

(assert (=> d!24951 (= c!15888 (and ((_ is Cons!1550) lt!46951) (= (_1!1152 (h!2142 lt!46951)) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun e!61936 () Option!155)

(assert (=> d!24951 (= (getValueByKey!149 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) e!61936)))

(declare-fun b!94920 () Bool)

(declare-fun e!61937 () Option!155)

(assert (=> b!94920 (= e!61936 e!61937)))

(declare-fun c!15889 () Bool)

(assert (=> b!94920 (= c!15889 (and ((_ is Cons!1550) lt!46951) (not (= (_1!1152 (h!2142 lt!46951)) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!94922 () Bool)

(assert (=> b!94922 (= e!61937 None!153)))

(declare-fun b!94919 () Bool)

(assert (=> b!94919 (= e!61936 (Some!154 (_2!1152 (h!2142 lt!46951))))))

(declare-fun b!94921 () Bool)

(assert (=> b!94921 (= e!61937 (getValueByKey!149 (t!5448 lt!46951) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!24951 c!15888) b!94919))

(assert (= (and d!24951 (not c!15888)) b!94920))

(assert (= (and b!94920 c!15889) b!94921))

(assert (= (and b!94920 (not c!15889)) b!94922))

(declare-fun m!102563 () Bool)

(assert (=> b!94921 m!102563))

(assert (=> d!24705 d!24951))

(declare-fun d!24953 () Bool)

(assert (=> d!24953 (= (getValueByKey!149 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (Some!154 (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun lt!47198 () Unit!2786)

(assert (=> d!24953 (= lt!47198 (choose!577 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!61938 () Bool)

(assert (=> d!24953 e!61938))

(declare-fun res!48027 () Bool)

(assert (=> d!24953 (=> (not res!48027) (not e!61938))))

(assert (=> d!24953 (= res!48027 (isStrictlySorted!289 lt!46951))))

(assert (=> d!24953 (= (lemmaContainsTupThenGetReturnValue!65 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!47198)))

(declare-fun b!94923 () Bool)

(declare-fun res!48028 () Bool)

(assert (=> b!94923 (=> (not res!48028) (not e!61938))))

(assert (=> b!94923 (= res!48028 (containsKey!152 lt!46951 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94924 () Bool)

(assert (=> b!94924 (= e!61938 (contains!782 lt!46951 (tuple2!2283 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(assert (= (and d!24953 res!48027) b!94923))

(assert (= (and b!94923 res!48028) b!94924))

(assert (=> d!24953 m!101817))

(declare-fun m!102565 () Bool)

(assert (=> d!24953 m!102565))

(declare-fun m!102567 () Bool)

(assert (=> d!24953 m!102567))

(declare-fun m!102569 () Bool)

(assert (=> b!94923 m!102569))

(declare-fun m!102571 () Bool)

(assert (=> b!94924 m!102571))

(assert (=> d!24705 d!24953))

(declare-fun b!94925 () Bool)

(declare-fun e!61939 () List!1554)

(assert (=> b!94925 (= e!61939 (insertStrictlySorted!68 (t!5448 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun b!94926 () Bool)

(declare-fun e!61941 () List!1554)

(declare-fun call!9513 () List!1554)

(assert (=> b!94926 (= e!61941 call!9513)))

(declare-fun b!94927 () Bool)

(declare-fun e!61942 () List!1554)

(declare-fun call!9512 () List!1554)

(assert (=> b!94927 (= e!61942 call!9512)))

(declare-fun b!94928 () Bool)

(declare-fun res!48030 () Bool)

(declare-fun e!61943 () Bool)

(assert (=> b!94928 (=> (not res!48030) (not e!61943))))

(declare-fun lt!47199 () List!1554)

(assert (=> b!94928 (= res!48030 (containsKey!152 lt!47199 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun c!15893 () Bool)

(declare-fun c!15892 () Bool)

(declare-fun b!94930 () Bool)

(assert (=> b!94930 (= e!61939 (ite c!15893 (t!5448 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (ite c!15892 (Cons!1550 (h!2142 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (t!5448 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))))) Nil!1551)))))

(declare-fun b!94931 () Bool)

(declare-fun e!61940 () List!1554)

(assert (=> b!94931 (= e!61940 e!61941)))

(assert (=> b!94931 (= c!15893 (and ((_ is Cons!1550) (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (= (_1!1152 (h!2142 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun bm!9509 () Bool)

(declare-fun call!9514 () List!1554)

(assert (=> bm!9509 (= call!9513 call!9514)))

(declare-fun b!94932 () Bool)

(assert (=> b!94932 (= e!61942 call!9512)))

(declare-fun b!94929 () Bool)

(assert (=> b!94929 (= e!61940 call!9514)))

(declare-fun d!24955 () Bool)

(assert (=> d!24955 e!61943))

(declare-fun res!48029 () Bool)

(assert (=> d!24955 (=> (not res!48029) (not e!61943))))

(assert (=> d!24955 (= res!48029 (isStrictlySorted!289 lt!47199))))

(assert (=> d!24955 (= lt!47199 e!61940)))

(declare-fun c!15890 () Bool)

(assert (=> d!24955 (= c!15890 (and ((_ is Cons!1550) (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (bvslt (_1!1152 (h!2142 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(assert (=> d!24955 (isStrictlySorted!289 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))))))

(assert (=> d!24955 (= (insertStrictlySorted!68 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!47199)))

(declare-fun bm!9510 () Bool)

(assert (=> bm!9510 (= call!9514 ($colon$colon!75 e!61939 (ite c!15890 (h!2142 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (tuple2!2283 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun c!15891 () Bool)

(assert (=> bm!9510 (= c!15891 c!15890)))

(declare-fun b!94933 () Bool)

(assert (=> b!94933 (= e!61943 (contains!782 lt!47199 (tuple2!2283 (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (_2!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun bm!9511 () Bool)

(assert (=> bm!9511 (= call!9512 call!9513)))

(declare-fun b!94934 () Bool)

(assert (=> b!94934 (= c!15892 (and ((_ is Cons!1550) (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367)))) (bvsgt (_1!1152 (h!2142 (toList!760 (ite c!15676 call!9365 (ite c!15675 call!9363 call!9367))))) (_1!1152 (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(assert (=> b!94934 (= e!61941 e!61942)))

(assert (= (and d!24955 c!15890) b!94929))

(assert (= (and d!24955 (not c!15890)) b!94931))

(assert (= (and b!94931 c!15893) b!94926))

(assert (= (and b!94931 (not c!15893)) b!94934))

(assert (= (and b!94934 c!15892) b!94927))

(assert (= (and b!94934 (not c!15892)) b!94932))

(assert (= (or b!94927 b!94932) bm!9511))

(assert (= (or b!94926 bm!9511) bm!9509))

(assert (= (or b!94929 bm!9509) bm!9510))

(assert (= (and bm!9510 c!15891) b!94925))

(assert (= (and bm!9510 (not c!15891)) b!94930))

(assert (= (and d!24955 res!48029) b!94928))

(assert (= (and b!94928 res!48030) b!94933))

(declare-fun m!102573 () Bool)

(assert (=> bm!9510 m!102573))

(declare-fun m!102575 () Bool)

(assert (=> b!94933 m!102575))

(declare-fun m!102577 () Bool)

(assert (=> b!94925 m!102577))

(declare-fun m!102579 () Bool)

(assert (=> d!24955 m!102579))

(declare-fun m!102581 () Bool)

(assert (=> d!24955 m!102581))

(declare-fun m!102583 () Bool)

(assert (=> b!94928 m!102583))

(assert (=> d!24705 d!24955))

(declare-fun d!24957 () Bool)

(declare-fun e!61944 () Bool)

(assert (=> d!24957 e!61944))

(declare-fun res!48031 () Bool)

(assert (=> d!24957 (=> res!48031 e!61944)))

(declare-fun lt!47202 () Bool)

(assert (=> d!24957 (= res!48031 (not lt!47202))))

(declare-fun lt!47201 () Bool)

(assert (=> d!24957 (= lt!47202 lt!47201)))

(declare-fun lt!47200 () Unit!2786)

(declare-fun e!61945 () Unit!2786)

(assert (=> d!24957 (= lt!47200 e!61945)))

(declare-fun c!15894 () Bool)

(assert (=> d!24957 (= c!15894 lt!47201)))

(assert (=> d!24957 (= lt!47201 (containsKey!152 (toList!760 lt!46919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24957 (= (contains!780 lt!46919 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47202)))

(declare-fun b!94935 () Bool)

(declare-fun lt!47203 () Unit!2786)

(assert (=> b!94935 (= e!61945 lt!47203)))

(assert (=> b!94935 (= lt!47203 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94935 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94936 () Bool)

(declare-fun Unit!2825 () Unit!2786)

(assert (=> b!94936 (= e!61945 Unit!2825)))

(declare-fun b!94937 () Bool)

(assert (=> b!94937 (= e!61944 (isDefined!101 (getValueByKey!149 (toList!760 lt!46919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24957 c!15894) b!94935))

(assert (= (and d!24957 (not c!15894)) b!94936))

(assert (= (and d!24957 (not res!48031)) b!94937))

(declare-fun m!102585 () Bool)

(assert (=> d!24957 m!102585))

(declare-fun m!102587 () Bool)

(assert (=> b!94935 m!102587))

(declare-fun m!102589 () Bool)

(assert (=> b!94935 m!102589))

(assert (=> b!94935 m!102589))

(declare-fun m!102591 () Bool)

(assert (=> b!94935 m!102591))

(assert (=> b!94937 m!102589))

(assert (=> b!94937 m!102589))

(assert (=> b!94937 m!102591))

(assert (=> bm!9465 d!24957))

(assert (=> d!24659 d!24649))

(declare-fun d!24959 () Bool)

(assert (=> d!24959 (= (apply!90 (+!128 lt!46613 (tuple2!2283 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46618) (apply!90 lt!46613 lt!46618))))

(assert (=> d!24959 true))

(declare-fun _$34!848 () Unit!2786)

(assert (=> d!24959 (= (choose!568 lt!46613 lt!46603 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46618) _$34!848)))

(declare-fun bs!3913 () Bool)

(assert (= bs!3913 d!24959))

(assert (=> bs!3913 m!101311))

(assert (=> bs!3913 m!101311))

(assert (=> bs!3913 m!101313))

(assert (=> bs!3913 m!101315))

(assert (=> d!24659 d!24959))

(assert (=> d!24659 d!24633))

(assert (=> d!24659 d!24637))

(declare-fun d!24961 () Bool)

(declare-fun e!61946 () Bool)

(assert (=> d!24961 e!61946))

(declare-fun res!48032 () Bool)

(assert (=> d!24961 (=> res!48032 e!61946)))

(declare-fun lt!47206 () Bool)

(assert (=> d!24961 (= res!48032 (not lt!47206))))

(declare-fun lt!47205 () Bool)

(assert (=> d!24961 (= lt!47206 lt!47205)))

(declare-fun lt!47204 () Unit!2786)

(declare-fun e!61947 () Unit!2786)

(assert (=> d!24961 (= lt!47204 e!61947)))

(declare-fun c!15895 () Bool)

(assert (=> d!24961 (= c!15895 lt!47205)))

(assert (=> d!24961 (= lt!47205 (containsKey!152 (toList!760 lt!46613) lt!46618))))

(assert (=> d!24961 (= (contains!780 lt!46613 lt!46618) lt!47206)))

(declare-fun b!94938 () Bool)

(declare-fun lt!47207 () Unit!2786)

(assert (=> b!94938 (= e!61947 lt!47207)))

(assert (=> b!94938 (= lt!47207 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46613) lt!46618))))

(assert (=> b!94938 (isDefined!101 (getValueByKey!149 (toList!760 lt!46613) lt!46618))))

(declare-fun b!94939 () Bool)

(declare-fun Unit!2826 () Unit!2786)

(assert (=> b!94939 (= e!61947 Unit!2826)))

(declare-fun b!94940 () Bool)

(assert (=> b!94940 (= e!61946 (isDefined!101 (getValueByKey!149 (toList!760 lt!46613) lt!46618)))))

(assert (= (and d!24961 c!15895) b!94938))

(assert (= (and d!24961 (not c!15895)) b!94939))

(assert (= (and d!24961 (not res!48032)) b!94940))

(declare-fun m!102593 () Bool)

(assert (=> d!24961 m!102593))

(declare-fun m!102595 () Bool)

(assert (=> b!94938 m!102595))

(assert (=> b!94938 m!101551))

(assert (=> b!94938 m!101551))

(declare-fun m!102597 () Bool)

(assert (=> b!94938 m!102597))

(assert (=> b!94940 m!101551))

(assert (=> b!94940 m!101551))

(assert (=> b!94940 m!102597))

(assert (=> d!24659 d!24961))

(declare-fun d!24963 () Bool)

(declare-fun e!61948 () Bool)

(assert (=> d!24963 e!61948))

(declare-fun res!48034 () Bool)

(assert (=> d!24963 (=> (not res!48034) (not e!61948))))

(declare-fun lt!47209 () ListLongMap!1489)

(assert (=> d!24963 (= res!48034 (contains!780 lt!47209 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun lt!47211 () List!1554)

(assert (=> d!24963 (= lt!47209 (ListLongMap!1490 lt!47211))))

(declare-fun lt!47210 () Unit!2786)

(declare-fun lt!47208 () Unit!2786)

(assert (=> d!24963 (= lt!47210 lt!47208)))

(assert (=> d!24963 (= (getValueByKey!149 lt!47211 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!24963 (= lt!47208 (lemmaContainsTupThenGetReturnValue!65 lt!47211 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!24963 (= lt!47211 (insertStrictlySorted!68 (toList!760 call!9481) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!24963 (= (+!128 call!9481 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) lt!47209)))

(declare-fun b!94941 () Bool)

(declare-fun res!48033 () Bool)

(assert (=> b!94941 (=> (not res!48033) (not e!61948))))

(assert (=> b!94941 (= res!48033 (= (getValueByKey!149 (toList!760 lt!47209) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun b!94942 () Bool)

(assert (=> b!94942 (= e!61948 (contains!782 (toList!760 lt!47209) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(assert (= (and d!24963 res!48034) b!94941))

(assert (= (and b!94941 res!48033) b!94942))

(declare-fun m!102599 () Bool)

(assert (=> d!24963 m!102599))

(declare-fun m!102601 () Bool)

(assert (=> d!24963 m!102601))

(declare-fun m!102603 () Bool)

(assert (=> d!24963 m!102603))

(declare-fun m!102605 () Bool)

(assert (=> d!24963 m!102605))

(declare-fun m!102607 () Bool)

(assert (=> b!94941 m!102607))

(declare-fun m!102609 () Bool)

(assert (=> b!94942 m!102609))

(assert (=> b!94555 d!24963))

(declare-fun b!94943 () Bool)

(declare-fun e!61949 () Bool)

(declare-fun e!61951 () Bool)

(assert (=> b!94943 (= e!61949 e!61951)))

(declare-fun lt!47212 () (_ BitVec 64))

(assert (=> b!94943 (= lt!47212 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!47213 () Unit!2786)

(assert (=> b!94943 (= lt!47213 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4117 newMap!16) lt!47212 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!94943 (arrayContainsKey!0 (_keys!4117 newMap!16) lt!47212 #b00000000000000000000000000000000)))

(declare-fun lt!47214 () Unit!2786)

(assert (=> b!94943 (= lt!47214 lt!47213)))

(declare-fun res!48036 () Bool)

(assert (=> b!94943 (= res!48036 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4117 newMap!16) (mask!6510 newMap!16)) (Found!245 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!94943 (=> (not res!48036) (not e!61951))))

(declare-fun bm!9512 () Bool)

(declare-fun call!9515 () Bool)

(assert (=> bm!9512 (= call!9515 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun d!24965 () Bool)

(declare-fun res!48035 () Bool)

(declare-fun e!61950 () Bool)

(assert (=> d!24965 (=> res!48035 e!61950)))

(assert (=> d!24965 (= res!48035 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24965 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4117 newMap!16) (mask!6510 newMap!16)) e!61950)))

(declare-fun b!94944 () Bool)

(assert (=> b!94944 (= e!61950 e!61949)))

(declare-fun c!15896 () Bool)

(assert (=> b!94944 (= c!15896 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!94945 () Bool)

(assert (=> b!94945 (= e!61951 call!9515)))

(declare-fun b!94946 () Bool)

(assert (=> b!94946 (= e!61949 call!9515)))

(assert (= (and d!24965 (not res!48035)) b!94944))

(assert (= (and b!94944 c!15896) b!94943))

(assert (= (and b!94944 (not c!15896)) b!94946))

(assert (= (and b!94943 res!48036) b!94945))

(assert (= (or b!94945 b!94946) bm!9512))

(assert (=> b!94943 m!101995))

(declare-fun m!102611 () Bool)

(assert (=> b!94943 m!102611))

(declare-fun m!102613 () Bool)

(assert (=> b!94943 m!102613))

(assert (=> b!94943 m!101995))

(declare-fun m!102615 () Bool)

(assert (=> b!94943 m!102615))

(declare-fun m!102617 () Bool)

(assert (=> bm!9512 m!102617))

(assert (=> b!94944 m!101995))

(assert (=> b!94944 m!101995))

(assert (=> b!94944 m!102029))

(assert (=> bm!9488 d!24965))

(assert (=> d!24725 d!24761))

(declare-fun d!24967 () Bool)

(assert (=> d!24967 (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))

(declare-fun lt!47217 () Unit!2786)

(declare-fun choose!578 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2786)

(assert (=> d!24967 (= lt!47217 (choose!578 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!24967 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24967 (= (lemmaArrayContainsKeyThenInListMap!23 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47217)))

(declare-fun bs!3914 () Bool)

(assert (= bs!3914 d!24967))

(assert (=> bs!3914 m!101281))

(assert (=> bs!3914 m!101281))

(assert (=> bs!3914 m!101143))

(assert (=> bs!3914 m!101483))

(assert (=> bs!3914 m!101143))

(declare-fun m!102619 () Bool)

(assert (=> bs!3914 m!102619))

(assert (=> bs!3914 m!101529))

(assert (=> b!94399 d!24967))

(declare-fun d!24969 () Bool)

(declare-fun e!61952 () Bool)

(assert (=> d!24969 e!61952))

(declare-fun res!48037 () Bool)

(assert (=> d!24969 (=> res!48037 e!61952)))

(declare-fun lt!47220 () Bool)

(assert (=> d!24969 (= res!48037 (not lt!47220))))

(declare-fun lt!47219 () Bool)

(assert (=> d!24969 (= lt!47220 lt!47219)))

(declare-fun lt!47218 () Unit!2786)

(declare-fun e!61953 () Unit!2786)

(assert (=> d!24969 (= lt!47218 e!61953)))

(declare-fun c!15897 () Bool)

(assert (=> d!24969 (= c!15897 lt!47219)))

(assert (=> d!24969 (= lt!47219 (containsKey!152 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!24969 (= (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!47220)))

(declare-fun b!94947 () Bool)

(declare-fun lt!47221 () Unit!2786)

(assert (=> b!94947 (= e!61953 lt!47221)))

(assert (=> b!94947 (= lt!47221 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!94947 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!94948 () Bool)

(declare-fun Unit!2827 () Unit!2786)

(assert (=> b!94948 (= e!61953 Unit!2827)))

(declare-fun b!94949 () Bool)

(assert (=> b!94949 (= e!61952 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!24969 c!15897) b!94947))

(assert (= (and d!24969 (not c!15897)) b!94948))

(assert (= (and d!24969 (not res!48037)) b!94949))

(assert (=> d!24969 m!101143))

(declare-fun m!102621 () Bool)

(assert (=> d!24969 m!102621))

(assert (=> b!94947 m!101143))

(declare-fun m!102623 () Bool)

(assert (=> b!94947 m!102623))

(assert (=> b!94947 m!101143))

(declare-fun m!102625 () Bool)

(assert (=> b!94947 m!102625))

(assert (=> b!94947 m!102625))

(declare-fun m!102627 () Bool)

(assert (=> b!94947 m!102627))

(assert (=> b!94949 m!101143))

(assert (=> b!94949 m!102625))

(assert (=> b!94949 m!102625))

(assert (=> b!94949 m!102627))

(assert (=> b!94399 d!24969))

(assert (=> b!94399 d!24709))

(declare-fun d!24971 () Bool)

(declare-fun e!61954 () Bool)

(assert (=> d!24971 e!61954))

(declare-fun res!48039 () Bool)

(assert (=> d!24971 (=> (not res!48039) (not e!61954))))

(declare-fun lt!47223 () ListLongMap!1489)

(assert (=> d!24971 (= res!48039 (contains!780 lt!47223 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47225 () List!1554)

(assert (=> d!24971 (= lt!47223 (ListLongMap!1490 lt!47225))))

(declare-fun lt!47224 () Unit!2786)

(declare-fun lt!47222 () Unit!2786)

(assert (=> d!24971 (= lt!47224 lt!47222)))

(assert (=> d!24971 (= (getValueByKey!149 lt!47225 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24971 (= lt!47222 (lemmaContainsTupThenGetReturnValue!65 lt!47225 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24971 (= lt!47225 (insertStrictlySorted!68 (toList!760 call!9474) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24971 (= (+!128 call!9474 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47223)))

(declare-fun b!94950 () Bool)

(declare-fun res!48038 () Bool)

(assert (=> b!94950 (=> (not res!48038) (not e!61954))))

(assert (=> b!94950 (= res!48038 (= (getValueByKey!149 (toList!760 lt!47223) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!94951 () Bool)

(assert (=> b!94951 (= e!61954 (contains!782 (toList!760 lt!47223) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!24971 res!48039) b!94950))

(assert (= (and b!94950 res!48038) b!94951))

(declare-fun m!102629 () Bool)

(assert (=> d!24971 m!102629))

(declare-fun m!102631 () Bool)

(assert (=> d!24971 m!102631))

(declare-fun m!102633 () Bool)

(assert (=> d!24971 m!102633))

(declare-fun m!102635 () Bool)

(assert (=> d!24971 m!102635))

(declare-fun m!102637 () Bool)

(assert (=> b!94950 m!102637))

(declare-fun m!102639 () Bool)

(assert (=> b!94951 m!102639))

(assert (=> b!94509 d!24971))

(assert (=> d!24647 d!24657))

(assert (=> d!24647 d!24631))

(declare-fun d!24973 () Bool)

(assert (=> d!24973 (contains!780 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46608)))

(assert (=> d!24973 true))

(declare-fun _$35!333 () Unit!2786)

(assert (=> d!24973 (= (choose!569 lt!46602 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46608) _$35!333)))

(declare-fun bs!3915 () Bool)

(assert (= bs!3915 d!24973))

(assert (=> bs!3915 m!101301))

(assert (=> bs!3915 m!101301))

(assert (=> bs!3915 m!101323))

(assert (=> d!24647 d!24973))

(declare-fun d!24975 () Bool)

(declare-fun e!61955 () Bool)

(assert (=> d!24975 e!61955))

(declare-fun res!48040 () Bool)

(assert (=> d!24975 (=> res!48040 e!61955)))

(declare-fun lt!47228 () Bool)

(assert (=> d!24975 (= res!48040 (not lt!47228))))

(declare-fun lt!47227 () Bool)

(assert (=> d!24975 (= lt!47228 lt!47227)))

(declare-fun lt!47226 () Unit!2786)

(declare-fun e!61956 () Unit!2786)

(assert (=> d!24975 (= lt!47226 e!61956)))

(declare-fun c!15898 () Bool)

(assert (=> d!24975 (= c!15898 lt!47227)))

(assert (=> d!24975 (= lt!47227 (containsKey!152 (toList!760 lt!46602) lt!46608))))

(assert (=> d!24975 (= (contains!780 lt!46602 lt!46608) lt!47228)))

(declare-fun b!94953 () Bool)

(declare-fun lt!47229 () Unit!2786)

(assert (=> b!94953 (= e!61956 lt!47229)))

(assert (=> b!94953 (= lt!47229 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46602) lt!46608))))

(assert (=> b!94953 (isDefined!101 (getValueByKey!149 (toList!760 lt!46602) lt!46608))))

(declare-fun b!94954 () Bool)

(declare-fun Unit!2828 () Unit!2786)

(assert (=> b!94954 (= e!61956 Unit!2828)))

(declare-fun b!94955 () Bool)

(assert (=> b!94955 (= e!61955 (isDefined!101 (getValueByKey!149 (toList!760 lt!46602) lt!46608)))))

(assert (= (and d!24975 c!15898) b!94953))

(assert (= (and d!24975 (not c!15898)) b!94954))

(assert (= (and d!24975 (not res!48040)) b!94955))

(declare-fun m!102641 () Bool)

(assert (=> d!24975 m!102641))

(declare-fun m!102643 () Bool)

(assert (=> b!94953 m!102643))

(declare-fun m!102645 () Bool)

(assert (=> b!94953 m!102645))

(assert (=> b!94953 m!102645))

(declare-fun m!102647 () Bool)

(assert (=> b!94953 m!102647))

(assert (=> b!94955 m!102645))

(assert (=> b!94955 m!102645))

(assert (=> b!94955 m!102647))

(assert (=> d!24647 d!24975))

(assert (=> b!94541 d!24753))

(assert (=> b!94541 d!24755))

(declare-fun d!24977 () Bool)

(declare-fun res!48041 () Bool)

(declare-fun e!61957 () Bool)

(assert (=> d!24977 (=> res!48041 e!61957)))

(assert (=> d!24977 (= res!48041 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46608)))))

(assert (=> d!24977 (= (containsKey!152 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608) e!61957)))

(declare-fun b!94956 () Bool)

(declare-fun e!61958 () Bool)

(assert (=> b!94956 (= e!61957 e!61958)))

(declare-fun res!48042 () Bool)

(assert (=> b!94956 (=> (not res!48042) (not e!61958))))

(assert (=> b!94956 (= res!48042 (and (or (not ((_ is Cons!1550) (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) (bvsle (_1!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46608)) ((_ is Cons!1550) (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) (bvslt (_1!1152 (h!2142 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46608)))))

(declare-fun b!94957 () Bool)

(assert (=> b!94957 (= e!61958 (containsKey!152 (t!5448 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!46608))))

(assert (= (and d!24977 (not res!48041)) b!94956))

(assert (= (and b!94956 res!48042) b!94957))

(declare-fun m!102649 () Bool)

(assert (=> b!94957 m!102649))

(assert (=> d!24657 d!24977))

(declare-fun d!24979 () Bool)

(declare-fun e!61959 () Bool)

(assert (=> d!24979 e!61959))

(declare-fun res!48044 () Bool)

(assert (=> d!24979 (=> (not res!48044) (not e!61959))))

(declare-fun lt!47231 () ListLongMap!1489)

(assert (=> d!24979 (= res!48044 (contains!780 lt!47231 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47233 () List!1554)

(assert (=> d!24979 (= lt!47231 (ListLongMap!1490 lt!47233))))

(declare-fun lt!47232 () Unit!2786)

(declare-fun lt!47230 () Unit!2786)

(assert (=> d!24979 (= lt!47232 lt!47230)))

(assert (=> d!24979 (= (getValueByKey!149 lt!47233 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24979 (= lt!47230 (lemmaContainsTupThenGetReturnValue!65 lt!47233 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24979 (= lt!47233 (insertStrictlySorted!68 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24979 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47231)))

(declare-fun b!94958 () Bool)

(declare-fun res!48043 () Bool)

(assert (=> b!94958 (=> (not res!48043) (not e!61959))))

(assert (=> b!94958 (= res!48043 (= (getValueByKey!149 (toList!760 lt!47231) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94959 () Bool)

(assert (=> b!94959 (= e!61959 (contains!782 (toList!760 lt!47231) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24979 res!48044) b!94958))

(assert (= (and b!94958 res!48043) b!94959))

(declare-fun m!102651 () Bool)

(assert (=> d!24979 m!102651))

(declare-fun m!102653 () Bool)

(assert (=> d!24979 m!102653))

(declare-fun m!102655 () Bool)

(assert (=> d!24979 m!102655))

(declare-fun m!102657 () Bool)

(assert (=> d!24979 m!102657))

(declare-fun m!102659 () Bool)

(assert (=> b!94958 m!102659))

(declare-fun m!102661 () Bool)

(assert (=> b!94959 m!102661))

(assert (=> b!94534 d!24979))

(assert (=> b!94534 d!24709))

(declare-fun e!61964 () Bool)

(declare-fun lt!47245 () ListLongMap!1489)

(declare-fun b!94960 () Bool)

(assert (=> b!94960 (= e!61964 (= (apply!90 lt!47245 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94960 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))))))

(assert (=> b!94960 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94961 () Bool)

(declare-fun e!61969 () ListLongMap!1489)

(declare-fun e!61962 () ListLongMap!1489)

(assert (=> b!94961 (= e!61969 e!61962)))

(declare-fun c!15902 () Bool)

(assert (=> b!94961 (= c!15902 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94962 () Bool)

(declare-fun e!61972 () Bool)

(declare-fun call!9519 () Bool)

(assert (=> b!94962 (= e!61972 (not call!9519))))

(declare-fun bm!9513 () Bool)

(assert (=> bm!9513 (= call!9519 (contains!780 lt!47245 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94963 () Bool)

(declare-fun e!61967 () Bool)

(declare-fun e!61960 () Bool)

(assert (=> b!94963 (= e!61967 e!61960)))

(declare-fun c!15899 () Bool)

(assert (=> b!94963 (= c!15899 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94964 () Bool)

(declare-fun e!61971 () Bool)

(assert (=> b!94964 (= e!61971 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94965 () Bool)

(declare-fun call!9521 () Bool)

(assert (=> b!94965 (= e!61960 (not call!9521))))

(declare-fun b!94966 () Bool)

(declare-fun e!61970 () Bool)

(assert (=> b!94966 (= e!61970 (= (apply!90 lt!47245 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!24981 () Bool)

(assert (=> d!24981 e!61967))

(declare-fun res!48053 () Bool)

(assert (=> d!24981 (=> (not res!48053) (not e!61967))))

(assert (=> d!24981 (= res!48053 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!47234 () ListLongMap!1489)

(assert (=> d!24981 (= lt!47245 lt!47234)))

(declare-fun lt!47255 () Unit!2786)

(declare-fun e!61966 () Unit!2786)

(assert (=> d!24981 (= lt!47255 e!61966)))

(declare-fun c!15901 () Bool)

(declare-fun e!61968 () Bool)

(assert (=> d!24981 (= c!15901 e!61968)))

(declare-fun res!48050 () Bool)

(assert (=> d!24981 (=> (not res!48050) (not e!61968))))

(assert (=> d!24981 (= res!48050 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!24981 (= lt!47234 e!61969)))

(declare-fun c!15903 () Bool)

(assert (=> d!24981 (= c!15903 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24981 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!24981 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47245)))

(declare-fun bm!9514 () Bool)

(declare-fun call!9520 () ListLongMap!1489)

(declare-fun call!9516 () ListLongMap!1489)

(assert (=> bm!9514 (= call!9520 call!9516)))

(declare-fun b!94967 () Bool)

(declare-fun e!61961 () Bool)

(assert (=> b!94967 (= e!61972 e!61961)))

(declare-fun res!48052 () Bool)

(assert (=> b!94967 (= res!48052 call!9519)))

(assert (=> b!94967 (=> (not res!48052) (not e!61961))))

(declare-fun bm!9515 () Bool)

(assert (=> bm!9515 (= call!9521 (contains!780 lt!47245 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94968 () Bool)

(declare-fun e!61963 () Bool)

(assert (=> b!94968 (= e!61963 e!61964)))

(declare-fun res!48046 () Bool)

(assert (=> b!94968 (=> (not res!48046) (not e!61964))))

(assert (=> b!94968 (= res!48046 (contains!780 lt!47245 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94968 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94969 () Bool)

(declare-fun c!15900 () Bool)

(assert (=> b!94969 (= c!15900 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!61965 () ListLongMap!1489)

(assert (=> b!94969 (= e!61962 e!61965)))

(declare-fun b!94970 () Bool)

(declare-fun res!48051 () Bool)

(assert (=> b!94970 (=> (not res!48051) (not e!61967))))

(assert (=> b!94970 (= res!48051 e!61972)))

(declare-fun c!15904 () Bool)

(assert (=> b!94970 (= c!15904 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94971 () Bool)

(declare-fun res!48045 () Bool)

(assert (=> b!94971 (=> (not res!48045) (not e!61967))))

(assert (=> b!94971 (= res!48045 e!61963)))

(declare-fun res!48049 () Bool)

(assert (=> b!94971 (=> res!48049 e!61963)))

(assert (=> b!94971 (= res!48049 (not e!61971))))

(declare-fun res!48048 () Bool)

(assert (=> b!94971 (=> (not res!48048) (not e!61971))))

(assert (=> b!94971 (= res!48048 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!94972 () Bool)

(declare-fun call!9517 () ListLongMap!1489)

(assert (=> b!94972 (= e!61962 call!9517)))

(declare-fun b!94973 () Bool)

(declare-fun call!9522 () ListLongMap!1489)

(assert (=> b!94973 (= e!61969 (+!128 call!9522 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!94974 () Bool)

(assert (=> b!94974 (= e!61961 (= (apply!90 lt!47245 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun call!9518 () ListLongMap!1489)

(declare-fun bm!9516 () Bool)

(assert (=> bm!9516 (= call!9522 (+!128 (ite c!15903 call!9518 (ite c!15902 call!9516 call!9520)) (ite (or c!15903 c!15902) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!94975 () Bool)

(declare-fun lt!47253 () Unit!2786)

(assert (=> b!94975 (= e!61966 lt!47253)))

(declare-fun lt!47235 () ListLongMap!1489)

(assert (=> b!94975 (= lt!47235 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47249 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47249 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47241 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47241 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47254 () Unit!2786)

(assert (=> b!94975 (= lt!47254 (addStillContains!66 lt!47235 lt!47249 (zeroValue!2322 newMap!16) lt!47241))))

(assert (=> b!94975 (contains!780 (+!128 lt!47235 (tuple2!2283 lt!47249 (zeroValue!2322 newMap!16))) lt!47241)))

(declare-fun lt!47247 () Unit!2786)

(assert (=> b!94975 (= lt!47247 lt!47254)))

(declare-fun lt!47252 () ListLongMap!1489)

(assert (=> b!94975 (= lt!47252 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47244 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47244 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47238 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47238 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47239 () Unit!2786)

(assert (=> b!94975 (= lt!47239 (addApplyDifferent!66 lt!47252 lt!47244 (minValue!2322 newMap!16) lt!47238))))

(assert (=> b!94975 (= (apply!90 (+!128 lt!47252 (tuple2!2283 lt!47244 (minValue!2322 newMap!16))) lt!47238) (apply!90 lt!47252 lt!47238))))

(declare-fun lt!47250 () Unit!2786)

(assert (=> b!94975 (= lt!47250 lt!47239)))

(declare-fun lt!47246 () ListLongMap!1489)

(assert (=> b!94975 (= lt!47246 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47236 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47236 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47251 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47251 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47237 () Unit!2786)

(assert (=> b!94975 (= lt!47237 (addApplyDifferent!66 lt!47246 lt!47236 (zeroValue!2322 newMap!16) lt!47251))))

(assert (=> b!94975 (= (apply!90 (+!128 lt!47246 (tuple2!2283 lt!47236 (zeroValue!2322 newMap!16))) lt!47251) (apply!90 lt!47246 lt!47251))))

(declare-fun lt!47243 () Unit!2786)

(assert (=> b!94975 (= lt!47243 lt!47237)))

(declare-fun lt!47248 () ListLongMap!1489)

(assert (=> b!94975 (= lt!47248 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47240 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47240 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47242 () (_ BitVec 64))

(assert (=> b!94975 (= lt!47242 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94975 (= lt!47253 (addApplyDifferent!66 lt!47248 lt!47240 (minValue!2322 newMap!16) lt!47242))))

(assert (=> b!94975 (= (apply!90 (+!128 lt!47248 (tuple2!2283 lt!47240 (minValue!2322 newMap!16))) lt!47242) (apply!90 lt!47248 lt!47242))))

(declare-fun bm!9517 () Bool)

(assert (=> bm!9517 (= call!9516 call!9518)))

(declare-fun b!94976 () Bool)

(assert (=> b!94976 (= e!61965 call!9517)))

(declare-fun b!94977 () Bool)

(assert (=> b!94977 (= e!61965 call!9520)))

(declare-fun bm!9518 () Bool)

(assert (=> bm!9518 (= call!9517 call!9522)))

(declare-fun b!94978 () Bool)

(assert (=> b!94978 (= e!61960 e!61970)))

(declare-fun res!48047 () Bool)

(assert (=> b!94978 (= res!48047 call!9521)))

(assert (=> b!94978 (=> (not res!48047) (not e!61970))))

(declare-fun bm!9519 () Bool)

(assert (=> bm!9519 (= call!9518 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94979 () Bool)

(assert (=> b!94979 (= e!61968 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94980 () Bool)

(declare-fun Unit!2829 () Unit!2786)

(assert (=> b!94980 (= e!61966 Unit!2829)))

(assert (= (and d!24981 c!15903) b!94973))

(assert (= (and d!24981 (not c!15903)) b!94961))

(assert (= (and b!94961 c!15902) b!94972))

(assert (= (and b!94961 (not c!15902)) b!94969))

(assert (= (and b!94969 c!15900) b!94976))

(assert (= (and b!94969 (not c!15900)) b!94977))

(assert (= (or b!94976 b!94977) bm!9514))

(assert (= (or b!94972 bm!9514) bm!9517))

(assert (= (or b!94972 b!94976) bm!9518))

(assert (= (or b!94973 bm!9517) bm!9519))

(assert (= (or b!94973 bm!9518) bm!9516))

(assert (= (and d!24981 res!48050) b!94979))

(assert (= (and d!24981 c!15901) b!94975))

(assert (= (and d!24981 (not c!15901)) b!94980))

(assert (= (and d!24981 res!48053) b!94971))

(assert (= (and b!94971 res!48048) b!94964))

(assert (= (and b!94971 (not res!48049)) b!94968))

(assert (= (and b!94968 res!48046) b!94960))

(assert (= (and b!94971 res!48045) b!94970))

(assert (= (and b!94970 c!15904) b!94967))

(assert (= (and b!94970 (not c!15904)) b!94962))

(assert (= (and b!94967 res!48052) b!94974))

(assert (= (or b!94967 b!94962) bm!9513))

(assert (= (and b!94970 res!48051) b!94963))

(assert (= (and b!94963 c!15899) b!94978))

(assert (= (and b!94963 (not c!15899)) b!94965))

(assert (= (and b!94978 res!48047) b!94966))

(assert (= (or b!94978 b!94965) bm!9515))

(declare-fun b_lambda!4185 () Bool)

(assert (=> (not b_lambda!4185) (not b!94960)))

(assert (=> b!94960 t!5461))

(declare-fun b_and!5801 () Bool)

(assert (= b_and!5797 (and (=> t!5461 result!3197) b_and!5801)))

(assert (=> b!94960 t!5463))

(declare-fun b_and!5803 () Bool)

(assert (= b_and!5799 (and (=> t!5463 result!3199) b_and!5803)))

(declare-fun m!102663 () Bool)

(assert (=> b!94973 m!102663))

(declare-fun m!102665 () Bool)

(assert (=> b!94966 m!102665))

(assert (=> d!24981 m!101529))

(declare-fun m!102667 () Bool)

(assert (=> bm!9516 m!102667))

(declare-fun m!102669 () Bool)

(assert (=> b!94960 m!102669))

(assert (=> b!94960 m!101717))

(declare-fun m!102671 () Bool)

(assert (=> b!94960 m!102671))

(assert (=> b!94960 m!101717))

(assert (=> b!94960 m!102669))

(assert (=> b!94960 m!101635))

(assert (=> b!94960 m!101635))

(declare-fun m!102673 () Bool)

(assert (=> b!94960 m!102673))

(declare-fun m!102675 () Bool)

(assert (=> bm!9515 m!102675))

(declare-fun m!102677 () Bool)

(assert (=> bm!9513 m!102677))

(declare-fun m!102679 () Bool)

(assert (=> b!94975 m!102679))

(declare-fun m!102681 () Bool)

(assert (=> b!94975 m!102681))

(declare-fun m!102683 () Bool)

(assert (=> b!94975 m!102683))

(declare-fun m!102685 () Bool)

(assert (=> b!94975 m!102685))

(declare-fun m!102687 () Bool)

(assert (=> b!94975 m!102687))

(declare-fun m!102689 () Bool)

(assert (=> b!94975 m!102689))

(declare-fun m!102691 () Bool)

(assert (=> b!94975 m!102691))

(declare-fun m!102693 () Bool)

(assert (=> b!94975 m!102693))

(assert (=> b!94975 m!101635))

(declare-fun m!102695 () Bool)

(assert (=> b!94975 m!102695))

(declare-fun m!102697 () Bool)

(assert (=> b!94975 m!102697))

(declare-fun m!102699 () Bool)

(assert (=> b!94975 m!102699))

(assert (=> b!94975 m!102689))

(declare-fun m!102701 () Bool)

(assert (=> b!94975 m!102701))

(assert (=> b!94975 m!102681))

(declare-fun m!102703 () Bool)

(assert (=> b!94975 m!102703))

(assert (=> b!94975 m!102691))

(declare-fun m!102705 () Bool)

(assert (=> b!94975 m!102705))

(declare-fun m!102707 () Bool)

(assert (=> b!94975 m!102707))

(assert (=> b!94975 m!102683))

(declare-fun m!102709 () Bool)

(assert (=> b!94975 m!102709))

(assert (=> b!94964 m!101635))

(assert (=> b!94964 m!101635))

(assert (=> b!94964 m!101637))

(assert (=> b!94968 m!101635))

(assert (=> b!94968 m!101635))

(declare-fun m!102711 () Bool)

(assert (=> b!94968 m!102711))

(assert (=> b!94979 m!101635))

(assert (=> b!94979 m!101635))

(assert (=> b!94979 m!101637))

(assert (=> bm!9519 m!102705))

(declare-fun m!102713 () Bool)

(assert (=> b!94974 m!102713))

(assert (=> b!94534 d!24981))

(declare-fun d!24983 () Bool)

(assert (=> d!24983 (contains!780 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46996)))

(declare-fun lt!47256 () Unit!2786)

(assert (=> d!24983 (= lt!47256 (choose!569 lt!46990 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46996))))

(assert (=> d!24983 (contains!780 lt!46990 lt!46996)))

(assert (=> d!24983 (= (addStillContains!66 lt!46990 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46996) lt!47256)))

(declare-fun bs!3916 () Bool)

(assert (= bs!3916 d!24983))

(assert (=> bs!3916 m!101931))

(assert (=> bs!3916 m!101931))

(assert (=> bs!3916 m!101953))

(declare-fun m!102715 () Bool)

(assert (=> bs!3916 m!102715))

(declare-fun m!102717 () Bool)

(assert (=> bs!3916 m!102717))

(assert (=> b!94617 d!24983))

(declare-fun d!24985 () Bool)

(assert (=> d!24985 (= (apply!90 (+!128 lt!47001 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47006) (apply!90 lt!47001 lt!47006))))

(declare-fun lt!47257 () Unit!2786)

(assert (=> d!24985 (= lt!47257 (choose!568 lt!47001 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!47006))))

(declare-fun e!61973 () Bool)

(assert (=> d!24985 e!61973))

(declare-fun res!48054 () Bool)

(assert (=> d!24985 (=> (not res!48054) (not e!61973))))

(assert (=> d!24985 (= res!48054 (contains!780 lt!47001 lt!47006))))

(assert (=> d!24985 (= (addApplyDifferent!66 lt!47001 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!47006) lt!47257)))

(declare-fun b!94981 () Bool)

(assert (=> b!94981 (= e!61973 (not (= lt!47006 lt!46991)))))

(assert (= (and d!24985 res!48054) b!94981))

(assert (=> d!24985 m!101945))

(assert (=> d!24985 m!101941))

(declare-fun m!102719 () Bool)

(assert (=> d!24985 m!102719))

(declare-fun m!102721 () Bool)

(assert (=> d!24985 m!102721))

(assert (=> d!24985 m!101941))

(assert (=> d!24985 m!101943))

(assert (=> b!94617 d!24985))

(declare-fun d!24987 () Bool)

(declare-fun e!61974 () Bool)

(assert (=> d!24987 e!61974))

(declare-fun res!48056 () Bool)

(assert (=> d!24987 (=> (not res!48056) (not e!61974))))

(declare-fun lt!47259 () ListLongMap!1489)

(assert (=> d!24987 (= res!48056 (contains!780 lt!47259 (_1!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))))))

(declare-fun lt!47261 () List!1554)

(assert (=> d!24987 (= lt!47259 (ListLongMap!1490 lt!47261))))

(declare-fun lt!47260 () Unit!2786)

(declare-fun lt!47258 () Unit!2786)

(assert (=> d!24987 (= lt!47260 lt!47258)))

(assert (=> d!24987 (= (getValueByKey!149 lt!47261 (_1!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))))))

(assert (=> d!24987 (= lt!47258 (lemmaContainsTupThenGetReturnValue!65 lt!47261 (_1!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))))))

(assert (=> d!24987 (= lt!47261 (insertStrictlySorted!68 (toList!760 lt!47007) (_1!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))))))

(assert (=> d!24987 (= (+!128 lt!47007 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) lt!47259)))

(declare-fun b!94982 () Bool)

(declare-fun res!48055 () Bool)

(assert (=> b!94982 (=> (not res!48055) (not e!61974))))

(assert (=> b!94982 (= res!48055 (= (getValueByKey!149 (toList!760 lt!47259) (_1!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))))))))

(declare-fun b!94983 () Bool)

(assert (=> b!94983 (= e!61974 (contains!782 (toList!760 lt!47259) (tuple2!2283 lt!46999 (minValue!2322 newMap!16))))))

(assert (= (and d!24987 res!48056) b!94982))

(assert (= (and b!94982 res!48055) b!94983))

(declare-fun m!102723 () Bool)

(assert (=> d!24987 m!102723))

(declare-fun m!102725 () Bool)

(assert (=> d!24987 m!102725))

(declare-fun m!102727 () Bool)

(assert (=> d!24987 m!102727))

(declare-fun m!102729 () Bool)

(assert (=> d!24987 m!102729))

(declare-fun m!102731 () Bool)

(assert (=> b!94982 m!102731))

(declare-fun m!102733 () Bool)

(assert (=> b!94983 m!102733))

(assert (=> b!94617 d!24987))

(declare-fun d!24989 () Bool)

(declare-fun e!61975 () Bool)

(assert (=> d!24989 e!61975))

(declare-fun res!48058 () Bool)

(assert (=> d!24989 (=> (not res!48058) (not e!61975))))

(declare-fun lt!47263 () ListLongMap!1489)

(assert (=> d!24989 (= res!48058 (contains!780 lt!47263 (_1!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(declare-fun lt!47265 () List!1554)

(assert (=> d!24989 (= lt!47263 (ListLongMap!1490 lt!47265))))

(declare-fun lt!47264 () Unit!2786)

(declare-fun lt!47262 () Unit!2786)

(assert (=> d!24989 (= lt!47264 lt!47262)))

(assert (=> d!24989 (= (getValueByKey!149 lt!47265 (_1!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24989 (= lt!47262 (lemmaContainsTupThenGetReturnValue!65 lt!47265 (_1!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24989 (= lt!47265 (insertStrictlySorted!68 (toList!760 lt!46990) (_1!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24989 (= (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47263)))

(declare-fun b!94984 () Bool)

(declare-fun res!48057 () Bool)

(assert (=> b!94984 (=> (not res!48057) (not e!61975))))

(assert (=> b!94984 (= res!48057 (= (getValueByKey!149 (toList!760 lt!47263) (_1!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))))

(declare-fun b!94985 () Bool)

(assert (=> b!94985 (= e!61975 (contains!782 (toList!760 lt!47263) (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))

(assert (= (and d!24989 res!48058) b!94984))

(assert (= (and b!94984 res!48057) b!94985))

(declare-fun m!102735 () Bool)

(assert (=> d!24989 m!102735))

(declare-fun m!102737 () Bool)

(assert (=> d!24989 m!102737))

(declare-fun m!102739 () Bool)

(assert (=> d!24989 m!102739))

(declare-fun m!102741 () Bool)

(assert (=> d!24989 m!102741))

(declare-fun m!102743 () Bool)

(assert (=> b!94984 m!102743))

(declare-fun m!102745 () Bool)

(assert (=> b!94985 m!102745))

(assert (=> b!94617 d!24989))

(declare-fun d!24991 () Bool)

(assert (=> d!24991 (= (apply!90 (+!128 lt!47003 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) lt!46997) (apply!90 lt!47003 lt!46997))))

(declare-fun lt!47266 () Unit!2786)

(assert (=> d!24991 (= lt!47266 (choose!568 lt!47003 lt!46995 (minValue!2322 newMap!16) lt!46997))))

(declare-fun e!61976 () Bool)

(assert (=> d!24991 e!61976))

(declare-fun res!48059 () Bool)

(assert (=> d!24991 (=> (not res!48059) (not e!61976))))

(assert (=> d!24991 (= res!48059 (contains!780 lt!47003 lt!46997))))

(assert (=> d!24991 (= (addApplyDifferent!66 lt!47003 lt!46995 (minValue!2322 newMap!16) lt!46997) lt!47266)))

(declare-fun b!94986 () Bool)

(assert (=> b!94986 (= e!61976 (not (= lt!46997 lt!46995)))))

(assert (= (and d!24991 res!48059) b!94986))

(assert (=> d!24991 m!101935))

(assert (=> d!24991 m!101933))

(declare-fun m!102747 () Bool)

(assert (=> d!24991 m!102747))

(declare-fun m!102749 () Bool)

(assert (=> d!24991 m!102749))

(assert (=> d!24991 m!101933))

(assert (=> d!24991 m!101959))

(assert (=> b!94617 d!24991))

(declare-fun d!24993 () Bool)

(declare-fun e!61977 () Bool)

(assert (=> d!24993 e!61977))

(declare-fun res!48061 () Bool)

(assert (=> d!24993 (=> (not res!48061) (not e!61977))))

(declare-fun lt!47268 () ListLongMap!1489)

(assert (=> d!24993 (= res!48061 (contains!780 lt!47268 (_1!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(declare-fun lt!47270 () List!1554)

(assert (=> d!24993 (= lt!47268 (ListLongMap!1490 lt!47270))))

(declare-fun lt!47269 () Unit!2786)

(declare-fun lt!47267 () Unit!2786)

(assert (=> d!24993 (= lt!47269 lt!47267)))

(assert (=> d!24993 (= (getValueByKey!149 lt!47270 (_1!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24993 (= lt!47267 (lemmaContainsTupThenGetReturnValue!65 lt!47270 (_1!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24993 (= lt!47270 (insertStrictlySorted!68 (toList!760 lt!47001) (_1!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!24993 (= (+!128 lt!47001 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47268)))

(declare-fun b!94987 () Bool)

(declare-fun res!48060 () Bool)

(assert (=> b!94987 (=> (not res!48060) (not e!61977))))

(assert (=> b!94987 (= res!48060 (= (getValueByKey!149 (toList!760 lt!47268) (_1!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!154 (_2!1152 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))))

(declare-fun b!94988 () Bool)

(assert (=> b!94988 (= e!61977 (contains!782 (toList!760 lt!47268) (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))

(assert (= (and d!24993 res!48061) b!94987))

(assert (= (and b!94987 res!48060) b!94988))

(declare-fun m!102751 () Bool)

(assert (=> d!24993 m!102751))

(declare-fun m!102753 () Bool)

(assert (=> d!24993 m!102753))

(declare-fun m!102755 () Bool)

(assert (=> d!24993 m!102755))

(declare-fun m!102757 () Bool)

(assert (=> d!24993 m!102757))

(declare-fun m!102759 () Bool)

(assert (=> b!94987 m!102759))

(declare-fun m!102761 () Bool)

(assert (=> b!94988 m!102761))

(assert (=> b!94617 d!24993))

(declare-fun d!24995 () Bool)

(assert (=> d!24995 (= (apply!90 lt!47001 lt!47006) (get!1275 (getValueByKey!149 (toList!760 lt!47001) lt!47006)))))

(declare-fun bs!3917 () Bool)

(assert (= bs!3917 d!24995))

(declare-fun m!102763 () Bool)

(assert (=> bs!3917 m!102763))

(assert (=> bs!3917 m!102763))

(declare-fun m!102765 () Bool)

(assert (=> bs!3917 m!102765))

(assert (=> b!94617 d!24995))

(declare-fun d!24997 () Bool)

(assert (=> d!24997 (= (apply!90 lt!47007 lt!46993) (get!1275 (getValueByKey!149 (toList!760 lt!47007) lt!46993)))))

(declare-fun bs!3918 () Bool)

(assert (= bs!3918 d!24997))

(declare-fun m!102767 () Bool)

(assert (=> bs!3918 m!102767))

(assert (=> bs!3918 m!102767))

(declare-fun m!102769 () Bool)

(assert (=> bs!3918 m!102769))

(assert (=> b!94617 d!24997))

(declare-fun d!24999 () Bool)

(assert (=> d!24999 (= (apply!90 (+!128 lt!47007 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) lt!46993) (apply!90 lt!47007 lt!46993))))

(declare-fun lt!47271 () Unit!2786)

(assert (=> d!24999 (= lt!47271 (choose!568 lt!47007 lt!46999 (minValue!2322 newMap!16) lt!46993))))

(declare-fun e!61978 () Bool)

(assert (=> d!24999 e!61978))

(declare-fun res!48062 () Bool)

(assert (=> d!24999 (=> (not res!48062) (not e!61978))))

(assert (=> d!24999 (= res!48062 (contains!780 lt!47007 lt!46993))))

(assert (=> d!24999 (= (addApplyDifferent!66 lt!47007 lt!46999 (minValue!2322 newMap!16) lt!46993) lt!47271)))

(declare-fun b!94989 () Bool)

(assert (=> b!94989 (= e!61978 (not (= lt!46993 lt!46999)))))

(assert (= (and d!24999 res!48062) b!94989))

(assert (=> d!24999 m!101957))

(assert (=> d!24999 m!101939))

(declare-fun m!102771 () Bool)

(assert (=> d!24999 m!102771))

(declare-fun m!102773 () Bool)

(assert (=> d!24999 m!102773))

(assert (=> d!24999 m!101939))

(assert (=> d!24999 m!101951))

(assert (=> b!94617 d!24999))

(declare-fun d!25001 () Bool)

(assert (=> d!25001 (= (apply!90 (+!128 lt!47001 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47006) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!47001 (tuple2!2283 lt!46991 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!47006)))))

(declare-fun bs!3919 () Bool)

(assert (= bs!3919 d!25001))

(declare-fun m!102775 () Bool)

(assert (=> bs!3919 m!102775))

(assert (=> bs!3919 m!102775))

(declare-fun m!102777 () Bool)

(assert (=> bs!3919 m!102777))

(assert (=> b!94617 d!25001))

(declare-fun d!25003 () Bool)

(assert (=> d!25003 (= (apply!90 (+!128 lt!47007 (tuple2!2283 lt!46999 (minValue!2322 newMap!16))) lt!46993) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!47007 (tuple2!2283 lt!46999 (minValue!2322 newMap!16)))) lt!46993)))))

(declare-fun bs!3920 () Bool)

(assert (= bs!3920 d!25003))

(declare-fun m!102779 () Bool)

(assert (=> bs!3920 m!102779))

(assert (=> bs!3920 m!102779))

(declare-fun m!102781 () Bool)

(assert (=> bs!3920 m!102781))

(assert (=> b!94617 d!25003))

(declare-fun d!25005 () Bool)

(assert (=> d!25005 (= (apply!90 lt!47003 lt!46997) (get!1275 (getValueByKey!149 (toList!760 lt!47003) lt!46997)))))

(declare-fun bs!3921 () Bool)

(assert (= bs!3921 d!25005))

(declare-fun m!102783 () Bool)

(assert (=> bs!3921 m!102783))

(assert (=> bs!3921 m!102783))

(declare-fun m!102785 () Bool)

(assert (=> bs!3921 m!102785))

(assert (=> b!94617 d!25005))

(declare-fun d!25007 () Bool)

(declare-fun e!61979 () Bool)

(assert (=> d!25007 e!61979))

(declare-fun res!48063 () Bool)

(assert (=> d!25007 (=> res!48063 e!61979)))

(declare-fun lt!47274 () Bool)

(assert (=> d!25007 (= res!48063 (not lt!47274))))

(declare-fun lt!47273 () Bool)

(assert (=> d!25007 (= lt!47274 lt!47273)))

(declare-fun lt!47272 () Unit!2786)

(declare-fun e!61980 () Unit!2786)

(assert (=> d!25007 (= lt!47272 e!61980)))

(declare-fun c!15905 () Bool)

(assert (=> d!25007 (= c!15905 lt!47273)))

(assert (=> d!25007 (= lt!47273 (containsKey!152 (toList!760 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46996))))

(assert (=> d!25007 (= (contains!780 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46996) lt!47274)))

(declare-fun b!94990 () Bool)

(declare-fun lt!47275 () Unit!2786)

(assert (=> b!94990 (= e!61980 lt!47275)))

(assert (=> b!94990 (= lt!47275 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46996))))

(assert (=> b!94990 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46996))))

(declare-fun b!94991 () Bool)

(declare-fun Unit!2830 () Unit!2786)

(assert (=> b!94991 (= e!61980 Unit!2830)))

(declare-fun b!94992 () Bool)

(assert (=> b!94992 (= e!61979 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46990 (tuple2!2283 lt!47004 (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46996)))))

(assert (= (and d!25007 c!15905) b!94990))

(assert (= (and d!25007 (not c!15905)) b!94991))

(assert (= (and d!25007 (not res!48063)) b!94992))

(declare-fun m!102787 () Bool)

(assert (=> d!25007 m!102787))

(declare-fun m!102789 () Bool)

(assert (=> b!94990 m!102789))

(declare-fun m!102791 () Bool)

(assert (=> b!94990 m!102791))

(assert (=> b!94990 m!102791))

(declare-fun m!102793 () Bool)

(assert (=> b!94990 m!102793))

(assert (=> b!94992 m!102791))

(assert (=> b!94992 m!102791))

(assert (=> b!94992 m!102793))

(assert (=> b!94617 d!25007))

(declare-fun d!25009 () Bool)

(assert (=> d!25009 (= (apply!90 (+!128 lt!47003 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) lt!46997) (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!47003 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))) lt!46997)))))

(declare-fun bs!3922 () Bool)

(assert (= bs!3922 d!25009))

(declare-fun m!102795 () Bool)

(assert (=> bs!3922 m!102795))

(assert (=> bs!3922 m!102795))

(declare-fun m!102797 () Bool)

(assert (=> bs!3922 m!102797))

(assert (=> b!94617 d!25009))

(declare-fun b!94993 () Bool)

(declare-fun e!61981 () Bool)

(assert (=> b!94993 (= e!61981 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94993 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94994 () Bool)

(declare-fun e!61983 () Bool)

(declare-fun lt!47282 () ListLongMap!1489)

(assert (=> b!94994 (= e!61983 (isEmpty!356 lt!47282))))

(declare-fun b!94995 () Bool)

(declare-fun e!61987 () Bool)

(declare-fun e!61986 () Bool)

(assert (=> b!94995 (= e!61987 e!61986)))

(assert (=> b!94995 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!48065 () Bool)

(assert (=> b!94995 (= res!48065 (contains!780 lt!47282 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94995 (=> (not res!48065) (not e!61986))))

(declare-fun d!25011 () Bool)

(declare-fun e!61982 () Bool)

(assert (=> d!25011 e!61982))

(declare-fun res!48066 () Bool)

(assert (=> d!25011 (=> (not res!48066) (not e!61982))))

(assert (=> d!25011 (= res!48066 (not (contains!780 lt!47282 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61985 () ListLongMap!1489)

(assert (=> d!25011 (= lt!47282 e!61985)))

(declare-fun c!15907 () Bool)

(assert (=> d!25011 (= c!15907 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25011 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25011 (= (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47282)))

(declare-fun b!94996 () Bool)

(declare-fun e!61984 () ListLongMap!1489)

(declare-fun call!9523 () ListLongMap!1489)

(assert (=> b!94996 (= e!61984 call!9523)))

(declare-fun b!94997 () Bool)

(assert (=> b!94997 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> b!94997 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))))))))

(assert (=> b!94997 (= e!61986 (= (apply!90 lt!47282 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94998 () Bool)

(assert (=> b!94998 (= e!61985 (ListLongMap!1490 Nil!1551))))

(declare-fun b!94999 () Bool)

(declare-fun lt!47277 () Unit!2786)

(declare-fun lt!47279 () Unit!2786)

(assert (=> b!94999 (= lt!47277 lt!47279)))

(declare-fun lt!47281 () (_ BitVec 64))

(declare-fun lt!47276 () ListLongMap!1489)

(declare-fun lt!47280 () (_ BitVec 64))

(declare-fun lt!47278 () V!3129)

(assert (=> b!94999 (not (contains!780 (+!128 lt!47276 (tuple2!2283 lt!47281 lt!47278)) lt!47280))))

(assert (=> b!94999 (= lt!47279 (addStillNotContains!40 lt!47276 lt!47281 lt!47278 lt!47280))))

(assert (=> b!94999 (= lt!47280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94999 (= lt!47278 (get!1272 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94999 (= lt!47281 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94999 (= lt!47276 call!9523)))

(assert (=> b!94999 (= e!61984 (+!128 call!9523 (tuple2!2283 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) (get!1272 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95000 () Bool)

(assert (=> b!95000 (= e!61982 e!61987)))

(declare-fun c!15909 () Bool)

(assert (=> b!95000 (= c!15909 e!61981)))

(declare-fun res!48064 () Bool)

(assert (=> b!95000 (=> (not res!48064) (not e!61981))))

(assert (=> b!95000 (= res!48064 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95001 () Bool)

(declare-fun res!48067 () Bool)

(assert (=> b!95001 (=> (not res!48067) (not e!61982))))

(assert (=> b!95001 (= res!48067 (not (contains!780 lt!47282 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bm!9520 () Bool)

(assert (=> bm!9520 (= call!9523 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!95002 () Bool)

(assert (=> b!95002 (= e!61983 (= lt!47282 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) (mask!6510 newMap!16) (ite (and c!15720 c!15711) lt!46710 (extraKeys!2264 newMap!16)) (ite (and c!15720 c!15711) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!95003 () Bool)

(assert (=> b!95003 (= e!61987 e!61983)))

(declare-fun c!15908 () Bool)

(assert (=> b!95003 (= c!15908 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95004 () Bool)

(assert (=> b!95004 (= e!61985 e!61984)))

(declare-fun c!15906 () Bool)

(assert (=> b!95004 (= c!15906 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25011 c!15907) b!94998))

(assert (= (and d!25011 (not c!15907)) b!95004))

(assert (= (and b!95004 c!15906) b!94999))

(assert (= (and b!95004 (not c!15906)) b!94996))

(assert (= (or b!94999 b!94996) bm!9520))

(assert (= (and d!25011 res!48066) b!95001))

(assert (= (and b!95001 res!48067) b!95000))

(assert (= (and b!95000 res!48064) b!94993))

(assert (= (and b!95000 c!15909) b!94995))

(assert (= (and b!95000 (not c!15909)) b!95003))

(assert (= (and b!94995 res!48065) b!94997))

(assert (= (and b!95003 c!15908) b!95002))

(assert (= (and b!95003 (not c!15908)) b!94994))

(declare-fun b_lambda!4187 () Bool)

(assert (=> (not b_lambda!4187) (not b!94997)))

(assert (=> b!94997 t!5461))

(declare-fun b_and!5805 () Bool)

(assert (= b_and!5801 (and (=> t!5461 result!3197) b_and!5805)))

(assert (=> b!94997 t!5463))

(declare-fun b_and!5807 () Bool)

(assert (= b_and!5803 (and (=> t!5463 result!3199) b_and!5807)))

(declare-fun b_lambda!4189 () Bool)

(assert (=> (not b_lambda!4189) (not b!94999)))

(assert (=> b!94999 t!5461))

(declare-fun b_and!5809 () Bool)

(assert (= b_and!5805 (and (=> t!5461 result!3197) b_and!5809)))

(assert (=> b!94999 t!5463))

(declare-fun b_and!5811 () Bool)

(assert (= b_and!5807 (and (=> t!5463 result!3199) b_and!5811)))

(declare-fun m!102799 () Bool)

(assert (=> b!95001 m!102799))

(declare-fun m!102801 () Bool)

(assert (=> d!25011 m!102801))

(assert (=> d!25011 m!101529))

(assert (=> b!94999 m!101919))

(declare-fun m!102803 () Bool)

(assert (=> b!94999 m!102803))

(assert (=> b!94999 m!101717))

(assert (=> b!94999 m!101919))

(assert (=> b!94999 m!101717))

(assert (=> b!94999 m!101921))

(declare-fun m!102805 () Bool)

(assert (=> b!94999 m!102805))

(declare-fun m!102807 () Bool)

(assert (=> b!94999 m!102807))

(assert (=> b!94999 m!101635))

(assert (=> b!94999 m!102807))

(declare-fun m!102809 () Bool)

(assert (=> b!94999 m!102809))

(assert (=> b!94997 m!101635))

(assert (=> b!94997 m!101919))

(assert (=> b!94997 m!101635))

(declare-fun m!102811 () Bool)

(assert (=> b!94997 m!102811))

(assert (=> b!94997 m!101717))

(assert (=> b!94997 m!101919))

(assert (=> b!94997 m!101717))

(assert (=> b!94997 m!101921))

(assert (=> b!94993 m!101635))

(assert (=> b!94993 m!101635))

(assert (=> b!94993 m!101637))

(declare-fun m!102813 () Bool)

(assert (=> b!95002 m!102813))

(assert (=> b!95004 m!101635))

(assert (=> b!95004 m!101635))

(assert (=> b!95004 m!101637))

(assert (=> b!94995 m!101635))

(assert (=> b!94995 m!101635))

(declare-fun m!102815 () Bool)

(assert (=> b!94995 m!102815))

(assert (=> bm!9520 m!102813))

(declare-fun m!102817 () Bool)

(assert (=> b!94994 m!102817))

(assert (=> b!94617 d!25011))

(declare-fun d!25013 () Bool)

(declare-fun e!61988 () Bool)

(assert (=> d!25013 e!61988))

(declare-fun res!48069 () Bool)

(assert (=> d!25013 (=> (not res!48069) (not e!61988))))

(declare-fun lt!47284 () ListLongMap!1489)

(assert (=> d!25013 (= res!48069 (contains!780 lt!47284 (_1!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))))))

(declare-fun lt!47286 () List!1554)

(assert (=> d!25013 (= lt!47284 (ListLongMap!1490 lt!47286))))

(declare-fun lt!47285 () Unit!2786)

(declare-fun lt!47283 () Unit!2786)

(assert (=> d!25013 (= lt!47285 lt!47283)))

(assert (=> d!25013 (= (getValueByKey!149 lt!47286 (_1!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))))))

(assert (=> d!25013 (= lt!47283 (lemmaContainsTupThenGetReturnValue!65 lt!47286 (_1!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))))))

(assert (=> d!25013 (= lt!47286 (insertStrictlySorted!68 (toList!760 lt!47003) (_1!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))))))

(assert (=> d!25013 (= (+!128 lt!47003 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))) lt!47284)))

(declare-fun b!95005 () Bool)

(declare-fun res!48068 () Bool)

(assert (=> b!95005 (=> (not res!48068) (not e!61988))))

(assert (=> b!95005 (= res!48068 (= (getValueByKey!149 (toList!760 lt!47284) (_1!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 lt!46995 (minValue!2322 newMap!16))))))))

(declare-fun b!95006 () Bool)

(assert (=> b!95006 (= e!61988 (contains!782 (toList!760 lt!47284) (tuple2!2283 lt!46995 (minValue!2322 newMap!16))))))

(assert (= (and d!25013 res!48069) b!95005))

(assert (= (and b!95005 res!48068) b!95006))

(declare-fun m!102819 () Bool)

(assert (=> d!25013 m!102819))

(declare-fun m!102821 () Bool)

(assert (=> d!25013 m!102821))

(declare-fun m!102823 () Bool)

(assert (=> d!25013 m!102823))

(declare-fun m!102825 () Bool)

(assert (=> d!25013 m!102825))

(declare-fun m!102827 () Bool)

(assert (=> b!95005 m!102827))

(declare-fun m!102829 () Bool)

(assert (=> b!95006 m!102829))

(assert (=> b!94617 d!25013))

(declare-fun b!95007 () Bool)

(declare-fun e!61990 () Bool)

(declare-fun call!9524 () Bool)

(assert (=> b!95007 (= e!61990 call!9524)))

(declare-fun b!95008 () Bool)

(assert (=> b!95008 (= e!61990 call!9524)))

(declare-fun b!95009 () Bool)

(declare-fun e!61989 () Bool)

(assert (=> b!95009 (= e!61989 e!61990)))

(declare-fun c!15910 () Bool)

(assert (=> b!95009 (= c!15910 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!95010 () Bool)

(declare-fun e!61991 () Bool)

(assert (=> b!95010 (= e!61991 e!61989)))

(declare-fun res!48072 () Bool)

(assert (=> b!95010 (=> (not res!48072) (not e!61989))))

(declare-fun e!61992 () Bool)

(assert (=> b!95010 (= res!48072 (not e!61992))))

(declare-fun res!48070 () Bool)

(assert (=> b!95010 (=> (not res!48070) (not e!61992))))

(assert (=> b!95010 (= res!48070 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!95011 () Bool)

(assert (=> b!95011 (= e!61992 (contains!781 (ite c!15753 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) Nil!1552) Nil!1552) (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9521 () Bool)

(assert (=> bm!9521 (= call!9524 (arrayNoDuplicates!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15910 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!15753 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) Nil!1552) Nil!1552)) (ite c!15753 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) Nil!1552) Nil!1552))))))

(declare-fun d!25015 () Bool)

(declare-fun res!48071 () Bool)

(assert (=> d!25015 (=> res!48071 e!61991)))

(assert (=> d!25015 (= res!48071 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25015 (= (arrayNoDuplicates!0 (_keys!4117 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15753 (Cons!1551 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000) Nil!1552) Nil!1552)) e!61991)))

(assert (= (and d!25015 (not res!48071)) b!95010))

(assert (= (and b!95010 res!48070) b!95011))

(assert (= (and b!95010 res!48072) b!95009))

(assert (= (and b!95009 c!15910) b!95007))

(assert (= (and b!95009 (not c!15910)) b!95008))

(assert (= (or b!95007 b!95008) bm!9521))

(assert (=> b!95009 m!101995))

(assert (=> b!95009 m!101995))

(assert (=> b!95009 m!102029))

(assert (=> b!95010 m!101995))

(assert (=> b!95010 m!101995))

(assert (=> b!95010 m!102029))

(assert (=> b!95011 m!101995))

(assert (=> b!95011 m!101995))

(declare-fun m!102831 () Bool)

(assert (=> b!95011 m!102831))

(assert (=> bm!9521 m!101995))

(declare-fun m!102833 () Bool)

(assert (=> bm!9521 m!102833))

(assert (=> bm!9455 d!25015))

(declare-fun d!25017 () Bool)

(assert (=> d!25017 (= (get!1275 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2770 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24675 d!25017))

(assert (=> d!24675 d!24843))

(declare-fun b!95012 () Bool)

(declare-fun e!61993 () (_ BitVec 32))

(declare-fun call!9525 () (_ BitVec 32))

(assert (=> b!95012 (= e!61993 (bvadd #b00000000000000000000000000000001 call!9525))))

(declare-fun b!95013 () Bool)

(declare-fun e!61994 () (_ BitVec 32))

(assert (=> b!95013 (= e!61994 #b00000000000000000000000000000000)))

(declare-fun d!25019 () Bool)

(declare-fun lt!47287 () (_ BitVec 32))

(assert (=> d!25019 (and (bvsge lt!47287 #b00000000000000000000000000000000) (bvsle lt!47287 (bvsub (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!25019 (= lt!47287 e!61994)))

(declare-fun c!15912 () Bool)

(assert (=> d!25019 (= c!15912 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!25019 (and (bvsle #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!25019 (= (arrayCountValidKeys!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))) lt!47287)))

(declare-fun b!95014 () Bool)

(assert (=> b!95014 (= e!61993 call!9525)))

(declare-fun b!95015 () Bool)

(assert (=> b!95015 (= e!61994 e!61993)))

(declare-fun c!15911 () Bool)

(assert (=> b!95015 (= c!15911 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9522 () Bool)

(assert (=> bm!9522 (= call!9525 (arrayCountValidKeys!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!25019 c!15912) b!95013))

(assert (= (and d!25019 (not c!15912)) b!95015))

(assert (= (and b!95015 c!15911) b!95012))

(assert (= (and b!95015 (not c!15911)) b!95014))

(assert (= (or b!95012 b!95014) bm!9522))

(declare-fun m!102835 () Bool)

(assert (=> b!95015 m!102835))

(assert (=> b!95015 m!102835))

(declare-fun m!102837 () Bool)

(assert (=> b!95015 m!102837))

(declare-fun m!102839 () Bool)

(assert (=> bm!9522 m!102839))

(assert (=> b!94520 d!25019))

(declare-fun d!25021 () Bool)

(declare-fun e!61995 () Bool)

(assert (=> d!25021 e!61995))

(declare-fun res!48073 () Bool)

(assert (=> d!25021 (=> res!48073 e!61995)))

(declare-fun lt!47290 () Bool)

(assert (=> d!25021 (= res!48073 (not lt!47290))))

(declare-fun lt!47289 () Bool)

(assert (=> d!25021 (= lt!47290 lt!47289)))

(declare-fun lt!47288 () Unit!2786)

(declare-fun e!61996 () Unit!2786)

(assert (=> d!25021 (= lt!47288 e!61996)))

(declare-fun c!15913 () Bool)

(assert (=> d!25021 (= c!15913 lt!47289)))

(assert (=> d!25021 (= lt!47289 (containsKey!152 (toList!760 lt!47000) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25021 (= (contains!780 lt!47000 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) lt!47290)))

(declare-fun b!95016 () Bool)

(declare-fun lt!47291 () Unit!2786)

(assert (=> b!95016 (= e!61996 lt!47291)))

(assert (=> b!95016 (= lt!47291 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!47000) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95016 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95017 () Bool)

(declare-fun Unit!2831 () Unit!2786)

(assert (=> b!95017 (= e!61996 Unit!2831)))

(declare-fun b!95018 () Bool)

(assert (=> b!95018 (= e!61995 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25021 c!15913) b!95016))

(assert (= (and d!25021 (not c!15913)) b!95017))

(assert (= (and d!25021 (not res!48073)) b!95018))

(assert (=> d!25021 m!101635))

(declare-fun m!102841 () Bool)

(assert (=> d!25021 m!102841))

(assert (=> b!95016 m!101635))

(declare-fun m!102843 () Bool)

(assert (=> b!95016 m!102843))

(assert (=> b!95016 m!101635))

(declare-fun m!102845 () Bool)

(assert (=> b!95016 m!102845))

(assert (=> b!95016 m!102845))

(declare-fun m!102847 () Bool)

(assert (=> b!95016 m!102847))

(assert (=> b!95018 m!101635))

(assert (=> b!95018 m!102845))

(assert (=> b!95018 m!102845))

(assert (=> b!95018 m!102847))

(assert (=> b!94610 d!25021))

(declare-fun d!25023 () Bool)

(assert (=> d!25023 (isDefined!101 (getValueByKey!149 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!47292 () Unit!2786)

(assert (=> d!25023 (= lt!47292 (choose!575 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!61997 () Bool)

(assert (=> d!25023 e!61997))

(declare-fun res!48074 () Bool)

(assert (=> d!25023 (=> (not res!48074) (not e!61997))))

(assert (=> d!25023 (= res!48074 (isStrictlySorted!289 (toList!760 call!9426)))))

(assert (=> d!25023 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!47292)))

(declare-fun b!95019 () Bool)

(assert (=> b!95019 (= e!61997 (containsKey!152 (toList!760 call!9426) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25023 res!48074) b!95019))

(assert (=> d!25023 m!101143))

(assert (=> d!25023 m!101891))

(assert (=> d!25023 m!101891))

(assert (=> d!25023 m!101893))

(assert (=> d!25023 m!101143))

(declare-fun m!102849 () Bool)

(assert (=> d!25023 m!102849))

(declare-fun m!102851 () Bool)

(assert (=> d!25023 m!102851))

(assert (=> b!95019 m!101143))

(assert (=> b!95019 m!101887))

(assert (=> b!94563 d!25023))

(assert (=> b!94563 d!24741))

(assert (=> b!94563 d!24743))

(declare-fun d!25025 () Bool)

(declare-fun e!61998 () Bool)

(assert (=> d!25025 e!61998))

(declare-fun res!48076 () Bool)

(assert (=> d!25025 (=> (not res!48076) (not e!61998))))

(declare-fun lt!47294 () ListLongMap!1489)

(assert (=> d!25025 (= res!48076 (contains!780 lt!47294 (_1!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47296 () List!1554)

(assert (=> d!25025 (= lt!47294 (ListLongMap!1490 lt!47296))))

(declare-fun lt!47295 () Unit!2786)

(declare-fun lt!47293 () Unit!2786)

(assert (=> d!25025 (= lt!47295 lt!47293)))

(assert (=> d!25025 (= (getValueByKey!149 lt!47296 (_1!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25025 (= lt!47293 (lemmaContainsTupThenGetReturnValue!65 lt!47296 (_1!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25025 (= lt!47296 (insertStrictlySorted!68 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25025 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47294)))

(declare-fun b!95020 () Bool)

(declare-fun res!48075 () Bool)

(assert (=> b!95020 (=> (not res!48075) (not e!61998))))

(assert (=> b!95020 (= res!48075 (= (getValueByKey!149 (toList!760 lt!47294) (_1!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95021 () Bool)

(assert (=> b!95021 (= e!61998 (contains!782 (toList!760 lt!47294) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25025 res!48076) b!95020))

(assert (= (and b!95020 res!48075) b!95021))

(declare-fun m!102853 () Bool)

(assert (=> d!25025 m!102853))

(declare-fun m!102855 () Bool)

(assert (=> d!25025 m!102855))

(declare-fun m!102857 () Bool)

(assert (=> d!25025 m!102857))

(declare-fun m!102859 () Bool)

(assert (=> d!25025 m!102859))

(declare-fun m!102861 () Bool)

(assert (=> b!95020 m!102861))

(declare-fun m!102863 () Bool)

(assert (=> b!95021 m!102863))

(assert (=> d!24679 d!25025))

(assert (=> d!24679 d!24709))

(declare-fun d!25027 () Bool)

(assert (=> d!25027 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!25027 true))

(declare-fun _$7!77 () Unit!2786)

(assert (=> d!25027 (= (choose!571 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46710 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)) _$7!77)))

(declare-fun bs!3923 () Bool)

(assert (= bs!3923 d!25027))

(assert (=> bs!3923 m!101281))

(assert (=> bs!3923 m!101281))

(assert (=> bs!3923 m!101689))

(assert (=> bs!3923 m!101165))

(assert (=> bs!3923 m!101691))

(assert (=> d!24679 d!25027))

(assert (=> d!24679 d!24761))

(declare-fun b!95022 () Bool)

(declare-fun e!62003 () Bool)

(declare-fun lt!47308 () ListLongMap!1489)

(assert (=> b!95022 (= e!62003 (= (apply!90 lt!47308 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (_values!2418 newMap!16))))))

(assert (=> b!95022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95023 () Bool)

(declare-fun e!62008 () ListLongMap!1489)

(declare-fun e!62001 () ListLongMap!1489)

(assert (=> b!95023 (= e!62008 e!62001)))

(declare-fun c!15917 () Bool)

(assert (=> b!95023 (= c!15917 (and (not (= (bvand lt!46710 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46710 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95024 () Bool)

(declare-fun e!62011 () Bool)

(declare-fun call!9529 () Bool)

(assert (=> b!95024 (= e!62011 (not call!9529))))

(declare-fun bm!9523 () Bool)

(assert (=> bm!9523 (= call!9529 (contains!780 lt!47308 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95025 () Bool)

(declare-fun e!62006 () Bool)

(declare-fun e!61999 () Bool)

(assert (=> b!95025 (= e!62006 e!61999)))

(declare-fun c!15914 () Bool)

(assert (=> b!95025 (= c!15914 (not (= (bvand lt!46710 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95026 () Bool)

(declare-fun e!62010 () Bool)

(assert (=> b!95026 (= e!62010 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95027 () Bool)

(declare-fun call!9531 () Bool)

(assert (=> b!95027 (= e!61999 (not call!9531))))

(declare-fun b!95028 () Bool)

(declare-fun e!62009 () Bool)

(assert (=> b!95028 (= e!62009 (= (apply!90 lt!47308 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!25029 () Bool)

(assert (=> d!25029 e!62006))

(declare-fun res!48085 () Bool)

(assert (=> d!25029 (=> (not res!48085) (not e!62006))))

(assert (=> d!25029 (= res!48085 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!47297 () ListLongMap!1489)

(assert (=> d!25029 (= lt!47308 lt!47297)))

(declare-fun lt!47318 () Unit!2786)

(declare-fun e!62005 () Unit!2786)

(assert (=> d!25029 (= lt!47318 e!62005)))

(declare-fun c!15916 () Bool)

(declare-fun e!62007 () Bool)

(assert (=> d!25029 (= c!15916 e!62007)))

(declare-fun res!48082 () Bool)

(assert (=> d!25029 (=> (not res!48082) (not e!62007))))

(assert (=> d!25029 (= res!48082 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25029 (= lt!47297 e!62008)))

(declare-fun c!15918 () Bool)

(assert (=> d!25029 (= c!15918 (and (not (= (bvand lt!46710 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46710 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25029 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25029 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47308)))

(declare-fun bm!9524 () Bool)

(declare-fun call!9530 () ListLongMap!1489)

(declare-fun call!9526 () ListLongMap!1489)

(assert (=> bm!9524 (= call!9530 call!9526)))

(declare-fun b!95029 () Bool)

(declare-fun e!62000 () Bool)

(assert (=> b!95029 (= e!62011 e!62000)))

(declare-fun res!48084 () Bool)

(assert (=> b!95029 (= res!48084 call!9529)))

(assert (=> b!95029 (=> (not res!48084) (not e!62000))))

(declare-fun bm!9525 () Bool)

(assert (=> bm!9525 (= call!9531 (contains!780 lt!47308 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95030 () Bool)

(declare-fun e!62002 () Bool)

(assert (=> b!95030 (= e!62002 e!62003)))

(declare-fun res!48078 () Bool)

(assert (=> b!95030 (=> (not res!48078) (not e!62003))))

(assert (=> b!95030 (= res!48078 (contains!780 lt!47308 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95030 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95031 () Bool)

(declare-fun c!15915 () Bool)

(assert (=> b!95031 (= c!15915 (and (not (= (bvand lt!46710 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46710 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!62004 () ListLongMap!1489)

(assert (=> b!95031 (= e!62001 e!62004)))

(declare-fun b!95032 () Bool)

(declare-fun res!48083 () Bool)

(assert (=> b!95032 (=> (not res!48083) (not e!62006))))

(assert (=> b!95032 (= res!48083 e!62011)))

(declare-fun c!15919 () Bool)

(assert (=> b!95032 (= c!15919 (not (= (bvand lt!46710 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95033 () Bool)

(declare-fun res!48077 () Bool)

(assert (=> b!95033 (=> (not res!48077) (not e!62006))))

(assert (=> b!95033 (= res!48077 e!62002)))

(declare-fun res!48081 () Bool)

(assert (=> b!95033 (=> res!48081 e!62002)))

(assert (=> b!95033 (= res!48081 (not e!62010))))

(declare-fun res!48080 () Bool)

(assert (=> b!95033 (=> (not res!48080) (not e!62010))))

(assert (=> b!95033 (= res!48080 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95034 () Bool)

(declare-fun call!9527 () ListLongMap!1489)

(assert (=> b!95034 (= e!62001 call!9527)))

(declare-fun b!95035 () Bool)

(declare-fun call!9532 () ListLongMap!1489)

(assert (=> b!95035 (= e!62008 (+!128 call!9532 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!95036 () Bool)

(assert (=> b!95036 (= e!62000 (= (apply!90 lt!47308 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!9528 () ListLongMap!1489)

(declare-fun bm!9526 () Bool)

(assert (=> bm!9526 (= call!9532 (+!128 (ite c!15918 call!9528 (ite c!15917 call!9526 call!9530)) (ite (or c!15918 c!15917) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!95037 () Bool)

(declare-fun lt!47316 () Unit!2786)

(assert (=> b!95037 (= e!62005 lt!47316)))

(declare-fun lt!47298 () ListLongMap!1489)

(assert (=> b!95037 (= lt!47298 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47312 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47312 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47304 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47304 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47317 () Unit!2786)

(assert (=> b!95037 (= lt!47317 (addStillContains!66 lt!47298 lt!47312 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47304))))

(assert (=> b!95037 (contains!780 (+!128 lt!47298 (tuple2!2283 lt!47312 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47304)))

(declare-fun lt!47310 () Unit!2786)

(assert (=> b!95037 (= lt!47310 lt!47317)))

(declare-fun lt!47315 () ListLongMap!1489)

(assert (=> b!95037 (= lt!47315 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47307 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47307 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47301 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47301 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47302 () Unit!2786)

(assert (=> b!95037 (= lt!47302 (addApplyDifferent!66 lt!47315 lt!47307 (minValue!2322 newMap!16) lt!47301))))

(assert (=> b!95037 (= (apply!90 (+!128 lt!47315 (tuple2!2283 lt!47307 (minValue!2322 newMap!16))) lt!47301) (apply!90 lt!47315 lt!47301))))

(declare-fun lt!47313 () Unit!2786)

(assert (=> b!95037 (= lt!47313 lt!47302)))

(declare-fun lt!47309 () ListLongMap!1489)

(assert (=> b!95037 (= lt!47309 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47299 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47299 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47314 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47314 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47300 () Unit!2786)

(assert (=> b!95037 (= lt!47300 (addApplyDifferent!66 lt!47309 lt!47299 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47314))))

(assert (=> b!95037 (= (apply!90 (+!128 lt!47309 (tuple2!2283 lt!47299 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47314) (apply!90 lt!47309 lt!47314))))

(declare-fun lt!47306 () Unit!2786)

(assert (=> b!95037 (= lt!47306 lt!47300)))

(declare-fun lt!47311 () ListLongMap!1489)

(assert (=> b!95037 (= lt!47311 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47303 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47303 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47305 () (_ BitVec 64))

(assert (=> b!95037 (= lt!47305 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95037 (= lt!47316 (addApplyDifferent!66 lt!47311 lt!47303 (minValue!2322 newMap!16) lt!47305))))

(assert (=> b!95037 (= (apply!90 (+!128 lt!47311 (tuple2!2283 lt!47303 (minValue!2322 newMap!16))) lt!47305) (apply!90 lt!47311 lt!47305))))

(declare-fun bm!9527 () Bool)

(assert (=> bm!9527 (= call!9526 call!9528)))

(declare-fun b!95038 () Bool)

(assert (=> b!95038 (= e!62004 call!9527)))

(declare-fun b!95039 () Bool)

(assert (=> b!95039 (= e!62004 call!9530)))

(declare-fun bm!9528 () Bool)

(assert (=> bm!9528 (= call!9527 call!9532)))

(declare-fun b!95040 () Bool)

(assert (=> b!95040 (= e!61999 e!62009)))

(declare-fun res!48079 () Bool)

(assert (=> b!95040 (= res!48079 call!9531)))

(assert (=> b!95040 (=> (not res!48079) (not e!62009))))

(declare-fun bm!9529 () Bool)

(assert (=> bm!9529 (= call!9528 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46710 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95041 () Bool)

(assert (=> b!95041 (= e!62007 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95042 () Bool)

(declare-fun Unit!2832 () Unit!2786)

(assert (=> b!95042 (= e!62005 Unit!2832)))

(assert (= (and d!25029 c!15918) b!95035))

(assert (= (and d!25029 (not c!15918)) b!95023))

(assert (= (and b!95023 c!15917) b!95034))

(assert (= (and b!95023 (not c!15917)) b!95031))

(assert (= (and b!95031 c!15915) b!95038))

(assert (= (and b!95031 (not c!15915)) b!95039))

(assert (= (or b!95038 b!95039) bm!9524))

(assert (= (or b!95034 bm!9524) bm!9527))

(assert (= (or b!95034 b!95038) bm!9528))

(assert (= (or b!95035 bm!9527) bm!9529))

(assert (= (or b!95035 bm!9528) bm!9526))

(assert (= (and d!25029 res!48082) b!95041))

(assert (= (and d!25029 c!15916) b!95037))

(assert (= (and d!25029 (not c!15916)) b!95042))

(assert (= (and d!25029 res!48085) b!95033))

(assert (= (and b!95033 res!48080) b!95026))

(assert (= (and b!95033 (not res!48081)) b!95030))

(assert (= (and b!95030 res!48078) b!95022))

(assert (= (and b!95033 res!48077) b!95032))

(assert (= (and b!95032 c!15919) b!95029))

(assert (= (and b!95032 (not c!15919)) b!95024))

(assert (= (and b!95029 res!48084) b!95036))

(assert (= (or b!95029 b!95024) bm!9523))

(assert (= (and b!95032 res!48083) b!95025))

(assert (= (and b!95025 c!15914) b!95040))

(assert (= (and b!95025 (not c!15914)) b!95027))

(assert (= (and b!95040 res!48079) b!95028))

(assert (= (or b!95040 b!95027) bm!9525))

(declare-fun b_lambda!4191 () Bool)

(assert (=> (not b_lambda!4191) (not b!95022)))

(assert (=> b!95022 t!5461))

(declare-fun b_and!5813 () Bool)

(assert (= b_and!5809 (and (=> t!5461 result!3197) b_and!5813)))

(assert (=> b!95022 t!5463))

(declare-fun b_and!5815 () Bool)

(assert (= b_and!5811 (and (=> t!5463 result!3199) b_and!5815)))

(declare-fun m!102865 () Bool)

(assert (=> b!95035 m!102865))

(declare-fun m!102867 () Bool)

(assert (=> b!95028 m!102867))

(assert (=> d!25029 m!101529))

(declare-fun m!102869 () Bool)

(assert (=> bm!9526 m!102869))

(assert (=> b!95022 m!101841))

(assert (=> b!95022 m!101717))

(assert (=> b!95022 m!101843))

(assert (=> b!95022 m!101717))

(assert (=> b!95022 m!101841))

(assert (=> b!95022 m!101635))

(assert (=> b!95022 m!101635))

(declare-fun m!102871 () Bool)

(assert (=> b!95022 m!102871))

(declare-fun m!102873 () Bool)

(assert (=> bm!9525 m!102873))

(declare-fun m!102875 () Bool)

(assert (=> bm!9523 m!102875))

(assert (=> b!95037 m!101165))

(declare-fun m!102877 () Bool)

(assert (=> b!95037 m!102877))

(declare-fun m!102879 () Bool)

(assert (=> b!95037 m!102879))

(declare-fun m!102881 () Bool)

(assert (=> b!95037 m!102881))

(declare-fun m!102883 () Bool)

(assert (=> b!95037 m!102883))

(assert (=> b!95037 m!101165))

(declare-fun m!102885 () Bool)

(assert (=> b!95037 m!102885))

(declare-fun m!102887 () Bool)

(assert (=> b!95037 m!102887))

(declare-fun m!102889 () Bool)

(assert (=> b!95037 m!102889))

(declare-fun m!102891 () Bool)

(assert (=> b!95037 m!102891))

(assert (=> b!95037 m!101635))

(declare-fun m!102893 () Bool)

(assert (=> b!95037 m!102893))

(declare-fun m!102895 () Bool)

(assert (=> b!95037 m!102895))

(declare-fun m!102897 () Bool)

(assert (=> b!95037 m!102897))

(assert (=> b!95037 m!102887))

(declare-fun m!102899 () Bool)

(assert (=> b!95037 m!102899))

(assert (=> b!95037 m!102879))

(declare-fun m!102901 () Bool)

(assert (=> b!95037 m!102901))

(assert (=> b!95037 m!102889))

(assert (=> b!95037 m!101165))

(declare-fun m!102903 () Bool)

(assert (=> b!95037 m!102903))

(declare-fun m!102905 () Bool)

(assert (=> b!95037 m!102905))

(assert (=> b!95037 m!102881))

(declare-fun m!102907 () Bool)

(assert (=> b!95037 m!102907))

(assert (=> b!95026 m!101635))

(assert (=> b!95026 m!101635))

(assert (=> b!95026 m!101637))

(assert (=> b!95030 m!101635))

(assert (=> b!95030 m!101635))

(declare-fun m!102909 () Bool)

(assert (=> b!95030 m!102909))

(assert (=> b!95041 m!101635))

(assert (=> b!95041 m!101635))

(assert (=> b!95041 m!101637))

(assert (=> bm!9529 m!101165))

(assert (=> bm!9529 m!102903))

(declare-fun m!102911 () Bool)

(assert (=> b!95036 m!102911))

(assert (=> d!24679 d!25029))

(declare-fun d!25031 () Bool)

(declare-fun e!62012 () Bool)

(assert (=> d!25031 e!62012))

(declare-fun res!48086 () Bool)

(assert (=> d!25031 (=> res!48086 e!62012)))

(declare-fun lt!47321 () Bool)

(assert (=> d!25031 (= res!48086 (not lt!47321))))

(declare-fun lt!47320 () Bool)

(assert (=> d!25031 (= lt!47321 lt!47320)))

(declare-fun lt!47319 () Unit!2786)

(declare-fun e!62013 () Unit!2786)

(assert (=> d!25031 (= lt!47319 e!62013)))

(declare-fun c!15920 () Bool)

(assert (=> d!25031 (= c!15920 lt!47320)))

(assert (=> d!25031 (= lt!47320 (containsKey!152 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25031 (= (contains!780 lt!46725 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47321)))

(declare-fun b!95043 () Bool)

(declare-fun lt!47322 () Unit!2786)

(assert (=> b!95043 (= e!62013 lt!47322)))

(assert (=> b!95043 (= lt!47322 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!95043 (isDefined!101 (getValueByKey!149 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95044 () Bool)

(declare-fun Unit!2833 () Unit!2786)

(assert (=> b!95044 (= e!62013 Unit!2833)))

(declare-fun b!95045 () Bool)

(assert (=> b!95045 (= e!62012 (isDefined!101 (getValueByKey!149 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25031 c!15920) b!95043))

(assert (= (and d!25031 (not c!15920)) b!95044))

(assert (= (and d!25031 (not res!48086)) b!95045))

(declare-fun m!102913 () Bool)

(assert (=> d!25031 m!102913))

(declare-fun m!102915 () Bool)

(assert (=> b!95043 m!102915))

(assert (=> b!95043 m!101445))

(assert (=> b!95043 m!101445))

(declare-fun m!102917 () Bool)

(assert (=> b!95043 m!102917))

(assert (=> b!95045 m!101445))

(assert (=> b!95045 m!101445))

(assert (=> b!95045 m!102917))

(assert (=> d!24619 d!25031))

(declare-fun d!25033 () Bool)

(declare-fun c!15921 () Bool)

(assert (=> d!25033 (= c!15921 (and ((_ is Cons!1550) lt!46727) (= (_1!1152 (h!2142 lt!46727)) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62014 () Option!155)

(assert (=> d!25033 (= (getValueByKey!149 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62014)))

(declare-fun b!95047 () Bool)

(declare-fun e!62015 () Option!155)

(assert (=> b!95047 (= e!62014 e!62015)))

(declare-fun c!15922 () Bool)

(assert (=> b!95047 (= c!15922 (and ((_ is Cons!1550) lt!46727) (not (= (_1!1152 (h!2142 lt!46727)) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!95049 () Bool)

(assert (=> b!95049 (= e!62015 None!153)))

(declare-fun b!95046 () Bool)

(assert (=> b!95046 (= e!62014 (Some!154 (_2!1152 (h!2142 lt!46727))))))

(declare-fun b!95048 () Bool)

(assert (=> b!95048 (= e!62015 (getValueByKey!149 (t!5448 lt!46727) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25033 c!15921) b!95046))

(assert (= (and d!25033 (not c!15921)) b!95047))

(assert (= (and b!95047 c!15922) b!95048))

(assert (= (and b!95047 (not c!15922)) b!95049))

(declare-fun m!102919 () Bool)

(assert (=> b!95048 m!102919))

(assert (=> d!24619 d!25033))

(declare-fun d!25035 () Bool)

(assert (=> d!25035 (= (getValueByKey!149 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!154 (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47323 () Unit!2786)

(assert (=> d!25035 (= lt!47323 (choose!577 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62016 () Bool)

(assert (=> d!25035 e!62016))

(declare-fun res!48087 () Bool)

(assert (=> d!25035 (=> (not res!48087) (not e!62016))))

(assert (=> d!25035 (= res!48087 (isStrictlySorted!289 lt!46727))))

(assert (=> d!25035 (= (lemmaContainsTupThenGetReturnValue!65 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47323)))

(declare-fun b!95050 () Bool)

(declare-fun res!48088 () Bool)

(assert (=> b!95050 (=> (not res!48088) (not e!62016))))

(assert (=> b!95050 (= res!48088 (containsKey!152 lt!46727 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95051 () Bool)

(assert (=> b!95051 (= e!62016 (contains!782 lt!46727 (tuple2!2283 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25035 res!48087) b!95050))

(assert (= (and b!95050 res!48088) b!95051))

(assert (=> d!25035 m!101439))

(declare-fun m!102921 () Bool)

(assert (=> d!25035 m!102921))

(declare-fun m!102923 () Bool)

(assert (=> d!25035 m!102923))

(declare-fun m!102925 () Bool)

(assert (=> b!95050 m!102925))

(declare-fun m!102927 () Bool)

(assert (=> b!95051 m!102927))

(assert (=> d!24619 d!25035))

(declare-fun e!62017 () List!1554)

(declare-fun b!95052 () Bool)

(assert (=> b!95052 (= e!62017 (insertStrictlySorted!68 (t!5448 (toList!760 e!61545)) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95053 () Bool)

(declare-fun e!62019 () List!1554)

(declare-fun call!9534 () List!1554)

(assert (=> b!95053 (= e!62019 call!9534)))

(declare-fun b!95054 () Bool)

(declare-fun e!62020 () List!1554)

(declare-fun call!9533 () List!1554)

(assert (=> b!95054 (= e!62020 call!9533)))

(declare-fun b!95055 () Bool)

(declare-fun res!48090 () Bool)

(declare-fun e!62021 () Bool)

(assert (=> b!95055 (=> (not res!48090) (not e!62021))))

(declare-fun lt!47324 () List!1554)

(assert (=> b!95055 (= res!48090 (containsKey!152 lt!47324 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95057 () Bool)

(declare-fun c!15926 () Bool)

(declare-fun c!15925 () Bool)

(assert (=> b!95057 (= e!62017 (ite c!15926 (t!5448 (toList!760 e!61545)) (ite c!15925 (Cons!1550 (h!2142 (toList!760 e!61545)) (t!5448 (toList!760 e!61545))) Nil!1551)))))

(declare-fun b!95058 () Bool)

(declare-fun e!62018 () List!1554)

(assert (=> b!95058 (= e!62018 e!62019)))

(assert (=> b!95058 (= c!15926 (and ((_ is Cons!1550) (toList!760 e!61545)) (= (_1!1152 (h!2142 (toList!760 e!61545))) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!9530 () Bool)

(declare-fun call!9535 () List!1554)

(assert (=> bm!9530 (= call!9534 call!9535)))

(declare-fun b!95059 () Bool)

(assert (=> b!95059 (= e!62020 call!9533)))

(declare-fun b!95056 () Bool)

(assert (=> b!95056 (= e!62018 call!9535)))

(declare-fun d!25037 () Bool)

(assert (=> d!25037 e!62021))

(declare-fun res!48089 () Bool)

(assert (=> d!25037 (=> (not res!48089) (not e!62021))))

(assert (=> d!25037 (= res!48089 (isStrictlySorted!289 lt!47324))))

(assert (=> d!25037 (= lt!47324 e!62018)))

(declare-fun c!15923 () Bool)

(assert (=> d!25037 (= c!15923 (and ((_ is Cons!1550) (toList!760 e!61545)) (bvslt (_1!1152 (h!2142 (toList!760 e!61545))) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25037 (isStrictlySorted!289 (toList!760 e!61545))))

(assert (=> d!25037 (= (insertStrictlySorted!68 (toList!760 e!61545) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47324)))

(declare-fun bm!9531 () Bool)

(assert (=> bm!9531 (= call!9535 ($colon$colon!75 e!62017 (ite c!15923 (h!2142 (toList!760 e!61545)) (tuple2!2283 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!15924 () Bool)

(assert (=> bm!9531 (= c!15924 c!15923)))

(declare-fun b!95060 () Bool)

(assert (=> b!95060 (= e!62021 (contains!782 lt!47324 (tuple2!2283 (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!9532 () Bool)

(assert (=> bm!9532 (= call!9533 call!9534)))

(declare-fun b!95061 () Bool)

(assert (=> b!95061 (= c!15925 (and ((_ is Cons!1550) (toList!760 e!61545)) (bvsgt (_1!1152 (h!2142 (toList!760 e!61545))) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!95061 (= e!62019 e!62020)))

(assert (= (and d!25037 c!15923) b!95056))

(assert (= (and d!25037 (not c!15923)) b!95058))

(assert (= (and b!95058 c!15926) b!95053))

(assert (= (and b!95058 (not c!15926)) b!95061))

(assert (= (and b!95061 c!15925) b!95054))

(assert (= (and b!95061 (not c!15925)) b!95059))

(assert (= (or b!95054 b!95059) bm!9532))

(assert (= (or b!95053 bm!9532) bm!9530))

(assert (= (or b!95056 bm!9530) bm!9531))

(assert (= (and bm!9531 c!15924) b!95052))

(assert (= (and bm!9531 (not c!15924)) b!95057))

(assert (= (and d!25037 res!48089) b!95055))

(assert (= (and b!95055 res!48090) b!95060))

(declare-fun m!102929 () Bool)

(assert (=> bm!9531 m!102929))

(declare-fun m!102931 () Bool)

(assert (=> b!95060 m!102931))

(declare-fun m!102933 () Bool)

(assert (=> b!95052 m!102933))

(declare-fun m!102935 () Bool)

(assert (=> d!25037 m!102935))

(declare-fun m!102937 () Bool)

(assert (=> d!25037 m!102937))

(declare-fun m!102939 () Bool)

(assert (=> b!95055 m!102939))

(assert (=> d!24619 d!25037))

(declare-fun c!15927 () Bool)

(declare-fun d!25039 () Bool)

(assert (=> d!25039 (= c!15927 (and ((_ is Cons!1550) (toList!760 lt!46846)) (= (_1!1152 (h!2142 (toList!760 lt!46846))) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62022 () Option!155)

(assert (=> d!25039 (= (getValueByKey!149 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62022)))

(declare-fun b!95063 () Bool)

(declare-fun e!62023 () Option!155)

(assert (=> b!95063 (= e!62022 e!62023)))

(declare-fun c!15928 () Bool)

(assert (=> b!95063 (= c!15928 (and ((_ is Cons!1550) (toList!760 lt!46846)) (not (= (_1!1152 (h!2142 (toList!760 lt!46846))) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95065 () Bool)

(assert (=> b!95065 (= e!62023 None!153)))

(declare-fun b!95062 () Bool)

(assert (=> b!95062 (= e!62022 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46846)))))))

(declare-fun b!95064 () Bool)

(assert (=> b!95064 (= e!62023 (getValueByKey!149 (t!5448 (toList!760 lt!46846)) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25039 c!15927) b!95062))

(assert (= (and d!25039 (not c!15927)) b!95063))

(assert (= (and b!95063 c!15928) b!95064))

(assert (= (and b!95063 (not c!15928)) b!95065))

(declare-fun m!102941 () Bool)

(assert (=> b!95064 m!102941))

(assert (=> b!94406 d!25039))

(declare-fun lt!47325 () Bool)

(declare-fun d!25041 () Bool)

(assert (=> d!25041 (= lt!47325 (select (content!99 (toList!760 lt!46949)) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!62024 () Bool)

(assert (=> d!25041 (= lt!47325 e!62024)))

(declare-fun res!48091 () Bool)

(assert (=> d!25041 (=> (not res!48091) (not e!62024))))

(assert (=> d!25041 (= res!48091 ((_ is Cons!1550) (toList!760 lt!46949)))))

(assert (=> d!25041 (= (contains!782 (toList!760 lt!46949) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47325)))

(declare-fun b!95066 () Bool)

(declare-fun e!62025 () Bool)

(assert (=> b!95066 (= e!62024 e!62025)))

(declare-fun res!48092 () Bool)

(assert (=> b!95066 (=> res!48092 e!62025)))

(assert (=> b!95066 (= res!48092 (= (h!2142 (toList!760 lt!46949)) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95067 () Bool)

(assert (=> b!95067 (= e!62025 (contains!782 (t!5448 (toList!760 lt!46949)) (ite (or c!15676 c!15675) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25041 res!48091) b!95066))

(assert (= (and b!95066 (not res!48092)) b!95067))

(declare-fun m!102943 () Bool)

(assert (=> d!25041 m!102943))

(declare-fun m!102945 () Bool)

(assert (=> d!25041 m!102945))

(declare-fun m!102947 () Bool)

(assert (=> b!95067 m!102947))

(assert (=> b!94538 d!25041))

(declare-fun d!25043 () Bool)

(declare-fun lt!47326 () Bool)

(assert (=> d!25043 (= lt!47326 (select (content!98 (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!62026 () Bool)

(assert (=> d!25043 (= lt!47326 e!62026)))

(declare-fun res!48093 () Bool)

(assert (=> d!25043 (=> (not res!48093) (not e!62026))))

(assert (=> d!25043 (= res!48093 ((_ is Cons!1551) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)))))

(assert (=> d!25043 (= (contains!781 (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!47326)))

(declare-fun b!95068 () Bool)

(declare-fun e!62027 () Bool)

(assert (=> b!95068 (= e!62026 e!62027)))

(declare-fun res!48094 () Bool)

(assert (=> b!95068 (=> res!48094 e!62027)))

(assert (=> b!95068 (= res!48094 (= (h!2143 (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!95069 () Bool)

(assert (=> b!95069 (= e!62027 (contains!781 (t!5449 (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25043 res!48093) b!95068))

(assert (= (and b!95068 (not res!48094)) b!95069))

(declare-fun m!102949 () Bool)

(assert (=> d!25043 m!102949))

(assert (=> d!25043 m!101419))

(declare-fun m!102951 () Bool)

(assert (=> d!25043 m!102951))

(assert (=> b!95069 m!101419))

(declare-fun m!102953 () Bool)

(assert (=> b!95069 m!102953))

(assert (=> b!94298 d!25043))

(declare-fun c!15929 () Bool)

(declare-fun d!25045 () Bool)

(assert (=> d!25045 (= c!15929 (and ((_ is Cons!1550) (toList!760 lt!46864)) (= (_1!1152 (h!2142 (toList!760 lt!46864))) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62028 () Option!155)

(assert (=> d!25045 (= (getValueByKey!149 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62028)))

(declare-fun b!95071 () Bool)

(declare-fun e!62029 () Option!155)

(assert (=> b!95071 (= e!62028 e!62029)))

(declare-fun c!15930 () Bool)

(assert (=> b!95071 (= c!15930 (and ((_ is Cons!1550) (toList!760 lt!46864)) (not (= (_1!1152 (h!2142 (toList!760 lt!46864))) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95073 () Bool)

(assert (=> b!95073 (= e!62029 None!153)))

(declare-fun b!95070 () Bool)

(assert (=> b!95070 (= e!62028 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46864)))))))

(declare-fun b!95072 () Bool)

(assert (=> b!95072 (= e!62029 (getValueByKey!149 (t!5448 (toList!760 lt!46864)) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25045 c!15929) b!95070))

(assert (= (and d!25045 (not c!15929)) b!95071))

(assert (= (and b!95071 c!15930) b!95072))

(assert (= (and b!95071 (not c!15930)) b!95073))

(declare-fun m!102955 () Bool)

(assert (=> b!95072 m!102955))

(assert (=> b!94417 d!25045))

(declare-fun d!25047 () Bool)

(assert (=> d!25047 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!25047 true))

(declare-fun _$5!95 () Unit!2786)

(assert (=> d!25047 (= (choose!574 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3122 lt!46692) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) _$5!95)))

(declare-fun bs!3924 () Bool)

(assert (= bs!3924 d!25047))

(assert (=> bs!3924 m!101281))

(assert (=> bs!3924 m!101281))

(assert (=> bs!3924 m!101495))

(assert (=> bs!3924 m!101365))

(assert (=> bs!3924 m!101801))

(assert (=> d!24701 d!25047))

(assert (=> d!24701 d!24761))

(declare-fun b!95074 () Bool)

(declare-fun e!62030 () (_ BitVec 32))

(declare-fun call!9536 () (_ BitVec 32))

(assert (=> b!95074 (= e!62030 (bvadd #b00000000000000000000000000000001 call!9536))))

(declare-fun b!95075 () Bool)

(declare-fun e!62031 () (_ BitVec 32))

(assert (=> b!95075 (= e!62031 #b00000000000000000000000000000000)))

(declare-fun d!25049 () Bool)

(declare-fun lt!47327 () (_ BitVec 32))

(assert (=> d!25049 (and (bvsge lt!47327 #b00000000000000000000000000000000) (bvsle lt!47327 (bvsub (size!2236 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(assert (=> d!25049 (= lt!47327 e!62031)))

(declare-fun c!15932 () Bool)

(assert (=> d!25049 (= c!15932 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (=> d!25049 (and (bvsle #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2236 (_keys!4117 (_2!1151 lt!46714))) (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (=> d!25049 (= (arrayCountValidKeys!0 (_keys!4117 (_2!1151 lt!46714)) #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))) lt!47327)))

(declare-fun b!95076 () Bool)

(assert (=> b!95076 (= e!62030 call!9536)))

(declare-fun b!95077 () Bool)

(assert (=> b!95077 (= e!62031 e!62030)))

(declare-fun c!15931 () Bool)

(assert (=> b!95077 (= c!15931 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun bm!9533 () Bool)

(assert (=> bm!9533 (= call!9536 (arrayCountValidKeys!0 (_keys!4117 (_2!1151 lt!46714)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (= (and d!25049 c!15932) b!95075))

(assert (= (and d!25049 (not c!15932)) b!95077))

(assert (= (and b!95077 c!15931) b!95074))

(assert (= (and b!95077 (not c!15931)) b!95076))

(assert (= (or b!95074 b!95076) bm!9533))

(assert (=> b!95077 m!102413))

(assert (=> b!95077 m!102413))

(assert (=> b!95077 m!102453))

(declare-fun m!102957 () Bool)

(assert (=> bm!9533 m!102957))

(assert (=> b!94523 d!25049))

(declare-fun d!25051 () Bool)

(assert (=> d!25051 (isDefined!101 (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(declare-fun lt!47328 () Unit!2786)

(assert (=> d!25051 (= lt!47328 (choose!575 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(declare-fun e!62032 () Bool)

(assert (=> d!25051 e!62032))

(declare-fun res!48095 () Bool)

(assert (=> d!25051 (=> (not res!48095) (not e!62032))))

(assert (=> d!25051 (= res!48095 (isStrictlySorted!289 (toList!760 call!9431)))))

(assert (=> d!25051 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))) lt!47328)))

(declare-fun b!95078 () Bool)

(assert (=> b!95078 (= e!62032 (containsKey!152 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (= (and d!25051 res!48095) b!95078))

(assert (=> d!25051 m!101367))

(assert (=> d!25051 m!101789))

(assert (=> d!25051 m!101789))

(assert (=> d!25051 m!101791))

(assert (=> d!25051 m!101367))

(declare-fun m!102959 () Bool)

(assert (=> d!25051 m!102959))

(declare-fun m!102961 () Bool)

(assert (=> d!25051 m!102961))

(assert (=> b!95078 m!101367))

(assert (=> b!95078 m!101785))

(assert (=> b!94526 d!25051))

(declare-fun d!25053 () Bool)

(assert (=> d!25053 (= (isDefined!101 (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))) (not (isEmpty!357 (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))))

(declare-fun bs!3925 () Bool)

(assert (= bs!3925 d!25053))

(assert (=> bs!3925 m!101789))

(declare-fun m!102963 () Bool)

(assert (=> bs!3925 m!102963))

(assert (=> b!94526 d!25053))

(declare-fun d!25055 () Bool)

(declare-fun c!15933 () Bool)

(assert (=> d!25055 (= c!15933 (and ((_ is Cons!1550) (toList!760 call!9431)) (= (_1!1152 (h!2142 (toList!760 call!9431))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))))

(declare-fun e!62033 () Option!155)

(assert (=> d!25055 (= (getValueByKey!149 (toList!760 call!9431) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))) e!62033)))

(declare-fun b!95080 () Bool)

(declare-fun e!62034 () Option!155)

(assert (=> b!95080 (= e!62033 e!62034)))

(declare-fun c!15934 () Bool)

(assert (=> b!95080 (= c!15934 (and ((_ is Cons!1550) (toList!760 call!9431)) (not (= (_1!1152 (h!2142 (toList!760 call!9431))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))))

(declare-fun b!95082 () Bool)

(assert (=> b!95082 (= e!62034 None!153)))

(declare-fun b!95079 () Bool)

(assert (=> b!95079 (= e!62033 (Some!154 (_2!1152 (h!2142 (toList!760 call!9431)))))))

(declare-fun b!95081 () Bool)

(assert (=> b!95081 (= e!62034 (getValueByKey!149 (t!5448 (toList!760 call!9431)) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (= (and d!25055 c!15933) b!95079))

(assert (= (and d!25055 (not c!15933)) b!95080))

(assert (= (and b!95080 c!15934) b!95081))

(assert (= (and b!95080 (not c!15934)) b!95082))

(assert (=> b!95081 m!101367))

(declare-fun m!102965 () Bool)

(assert (=> b!95081 m!102965))

(assert (=> b!94526 d!25055))

(assert (=> b!94348 d!24687))

(assert (=> bm!9471 d!24847))

(declare-fun d!25057 () Bool)

(declare-fun e!62035 () Bool)

(assert (=> d!25057 e!62035))

(declare-fun res!48096 () Bool)

(assert (=> d!25057 (=> res!48096 e!62035)))

(declare-fun lt!47331 () Bool)

(assert (=> d!25057 (= res!48096 (not lt!47331))))

(declare-fun lt!47330 () Bool)

(assert (=> d!25057 (= lt!47331 lt!47330)))

(declare-fun lt!47329 () Unit!2786)

(declare-fun e!62036 () Unit!2786)

(assert (=> d!25057 (= lt!47329 e!62036)))

(declare-fun c!15935 () Bool)

(assert (=> d!25057 (= c!15935 lt!47330)))

(assert (=> d!25057 (= lt!47330 (containsKey!152 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!25057 (= (contains!780 lt!46864 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47331)))

(declare-fun b!95083 () Bool)

(declare-fun lt!47332 () Unit!2786)

(assert (=> b!95083 (= e!62036 lt!47332)))

(assert (=> b!95083 (= lt!47332 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> b!95083 (isDefined!101 (getValueByKey!149 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95084 () Bool)

(declare-fun Unit!2834 () Unit!2786)

(assert (=> b!95084 (= e!62036 Unit!2834)))

(declare-fun b!95085 () Bool)

(assert (=> b!95085 (= e!62035 (isDefined!101 (getValueByKey!149 (toList!760 lt!46864) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25057 c!15935) b!95083))

(assert (= (and d!25057 (not c!15935)) b!95084))

(assert (= (and d!25057 (not res!48096)) b!95085))

(declare-fun m!102967 () Bool)

(assert (=> d!25057 m!102967))

(declare-fun m!102969 () Bool)

(assert (=> b!95083 m!102969))

(assert (=> b!95083 m!101615))

(assert (=> b!95083 m!101615))

(declare-fun m!102971 () Bool)

(assert (=> b!95083 m!102971))

(assert (=> b!95085 m!101615))

(assert (=> b!95085 m!101615))

(assert (=> b!95085 m!102971))

(assert (=> d!24653 d!25057))

(declare-fun c!15936 () Bool)

(declare-fun d!25059 () Bool)

(assert (=> d!25059 (= c!15936 (and ((_ is Cons!1550) lt!46866) (= (_1!1152 (h!2142 lt!46866)) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62037 () Option!155)

(assert (=> d!25059 (= (getValueByKey!149 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62037)))

(declare-fun b!95087 () Bool)

(declare-fun e!62038 () Option!155)

(assert (=> b!95087 (= e!62037 e!62038)))

(declare-fun c!15937 () Bool)

(assert (=> b!95087 (= c!15937 (and ((_ is Cons!1550) lt!46866) (not (= (_1!1152 (h!2142 lt!46866)) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95089 () Bool)

(assert (=> b!95089 (= e!62038 None!153)))

(declare-fun b!95086 () Bool)

(assert (=> b!95086 (= e!62037 (Some!154 (_2!1152 (h!2142 lt!46866))))))

(declare-fun b!95088 () Bool)

(assert (=> b!95088 (= e!62038 (getValueByKey!149 (t!5448 lt!46866) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25059 c!15936) b!95086))

(assert (= (and d!25059 (not c!15936)) b!95087))

(assert (= (and b!95087 c!15937) b!95088))

(assert (= (and b!95087 (not c!15937)) b!95089))

(declare-fun m!102973 () Bool)

(assert (=> b!95088 m!102973))

(assert (=> d!24653 d!25059))

(declare-fun d!25061 () Bool)

(assert (=> d!25061 (= (getValueByKey!149 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!47333 () Unit!2786)

(assert (=> d!25061 (= lt!47333 (choose!577 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!62039 () Bool)

(assert (=> d!25061 e!62039))

(declare-fun res!48097 () Bool)

(assert (=> d!25061 (=> (not res!48097) (not e!62039))))

(assert (=> d!25061 (= res!48097 (isStrictlySorted!289 lt!46866))))

(assert (=> d!25061 (= (lemmaContainsTupThenGetReturnValue!65 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47333)))

(declare-fun b!95090 () Bool)

(declare-fun res!48098 () Bool)

(assert (=> b!95090 (=> (not res!48098) (not e!62039))))

(assert (=> b!95090 (= res!48098 (containsKey!152 lt!46866 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95091 () Bool)

(assert (=> b!95091 (= e!62039 (contains!782 lt!46866 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25061 res!48097) b!95090))

(assert (= (and b!95090 res!48098) b!95091))

(assert (=> d!25061 m!101609))

(declare-fun m!102975 () Bool)

(assert (=> d!25061 m!102975))

(declare-fun m!102977 () Bool)

(assert (=> d!25061 m!102977))

(declare-fun m!102979 () Bool)

(assert (=> b!95090 m!102979))

(declare-fun m!102981 () Bool)

(assert (=> b!95091 m!102981))

(assert (=> d!24653 d!25061))

(declare-fun b!95092 () Bool)

(declare-fun e!62040 () List!1554)

(assert (=> b!95092 (= e!62040 (insertStrictlySorted!68 (t!5448 (toList!760 lt!46615)) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95093 () Bool)

(declare-fun e!62042 () List!1554)

(declare-fun call!9538 () List!1554)

(assert (=> b!95093 (= e!62042 call!9538)))

(declare-fun b!95094 () Bool)

(declare-fun e!62043 () List!1554)

(declare-fun call!9537 () List!1554)

(assert (=> b!95094 (= e!62043 call!9537)))

(declare-fun b!95095 () Bool)

(declare-fun res!48100 () Bool)

(declare-fun e!62044 () Bool)

(assert (=> b!95095 (=> (not res!48100) (not e!62044))))

(declare-fun lt!47334 () List!1554)

(assert (=> b!95095 (= res!48100 (containsKey!152 lt!47334 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95097 () Bool)

(declare-fun c!15941 () Bool)

(declare-fun c!15940 () Bool)

(assert (=> b!95097 (= e!62040 (ite c!15941 (t!5448 (toList!760 lt!46615)) (ite c!15940 (Cons!1550 (h!2142 (toList!760 lt!46615)) (t!5448 (toList!760 lt!46615))) Nil!1551)))))

(declare-fun b!95098 () Bool)

(declare-fun e!62041 () List!1554)

(assert (=> b!95098 (= e!62041 e!62042)))

(assert (=> b!95098 (= c!15941 (and ((_ is Cons!1550) (toList!760 lt!46615)) (= (_1!1152 (h!2142 (toList!760 lt!46615))) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9534 () Bool)

(declare-fun call!9539 () List!1554)

(assert (=> bm!9534 (= call!9538 call!9539)))

(declare-fun b!95099 () Bool)

(assert (=> b!95099 (= e!62043 call!9537)))

(declare-fun b!95096 () Bool)

(assert (=> b!95096 (= e!62041 call!9539)))

(declare-fun d!25063 () Bool)

(assert (=> d!25063 e!62044))

(declare-fun res!48099 () Bool)

(assert (=> d!25063 (=> (not res!48099) (not e!62044))))

(assert (=> d!25063 (= res!48099 (isStrictlySorted!289 lt!47334))))

(assert (=> d!25063 (= lt!47334 e!62041)))

(declare-fun c!15938 () Bool)

(assert (=> d!25063 (= c!15938 (and ((_ is Cons!1550) (toList!760 lt!46615)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46615))) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!25063 (isStrictlySorted!289 (toList!760 lt!46615))))

(assert (=> d!25063 (= (insertStrictlySorted!68 (toList!760 lt!46615) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47334)))

(declare-fun bm!9535 () Bool)

(assert (=> bm!9535 (= call!9539 ($colon$colon!75 e!62040 (ite c!15938 (h!2142 (toList!760 lt!46615)) (tuple2!2283 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun c!15939 () Bool)

(assert (=> bm!9535 (= c!15939 c!15938)))

(declare-fun b!95100 () Bool)

(assert (=> b!95100 (= e!62044 (contains!782 lt!47334 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9536 () Bool)

(assert (=> bm!9536 (= call!9537 call!9538)))

(declare-fun b!95101 () Bool)

(assert (=> b!95101 (= c!15940 (and ((_ is Cons!1550) (toList!760 lt!46615)) (bvsgt (_1!1152 (h!2142 (toList!760 lt!46615))) (_1!1152 (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!95101 (= e!62042 e!62043)))

(assert (= (and d!25063 c!15938) b!95096))

(assert (= (and d!25063 (not c!15938)) b!95098))

(assert (= (and b!95098 c!15941) b!95093))

(assert (= (and b!95098 (not c!15941)) b!95101))

(assert (= (and b!95101 c!15940) b!95094))

(assert (= (and b!95101 (not c!15940)) b!95099))

(assert (= (or b!95094 b!95099) bm!9536))

(assert (= (or b!95093 bm!9536) bm!9534))

(assert (= (or b!95096 bm!9534) bm!9535))

(assert (= (and bm!9535 c!15939) b!95092))

(assert (= (and bm!9535 (not c!15939)) b!95097))

(assert (= (and d!25063 res!48099) b!95095))

(assert (= (and b!95095 res!48100) b!95100))

(declare-fun m!102983 () Bool)

(assert (=> bm!9535 m!102983))

(declare-fun m!102985 () Bool)

(assert (=> b!95100 m!102985))

(declare-fun m!102987 () Bool)

(assert (=> b!95092 m!102987))

(declare-fun m!102989 () Bool)

(assert (=> d!25063 m!102989))

(declare-fun m!102991 () Bool)

(assert (=> d!25063 m!102991))

(declare-fun m!102993 () Bool)

(assert (=> b!95095 m!102993))

(assert (=> d!24653 d!25063))

(declare-fun d!25065 () Bool)

(assert (=> d!25065 (= (apply!90 lt!47000 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!47000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3926 () Bool)

(assert (= bs!3926 d!25065))

(assert (=> bs!3926 m!102525))

(assert (=> bs!3926 m!102525))

(declare-fun m!102995 () Bool)

(assert (=> bs!3926 m!102995))

(assert (=> b!94608 d!25065))

(declare-fun d!25067 () Bool)

(declare-fun e!62045 () Bool)

(assert (=> d!25067 e!62045))

(declare-fun res!48101 () Bool)

(assert (=> d!25067 (=> res!48101 e!62045)))

(declare-fun lt!47337 () Bool)

(assert (=> d!25067 (= res!48101 (not lt!47337))))

(declare-fun lt!47336 () Bool)

(assert (=> d!25067 (= lt!47337 lt!47336)))

(declare-fun lt!47335 () Unit!2786)

(declare-fun e!62046 () Unit!2786)

(assert (=> d!25067 (= lt!47335 e!62046)))

(declare-fun c!15942 () Bool)

(assert (=> d!25067 (= c!15942 lt!47336)))

(assert (=> d!25067 (= lt!47336 (containsKey!152 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (=> d!25067 (= (contains!780 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))) lt!47337)))

(declare-fun b!95102 () Bool)

(declare-fun lt!47338 () Unit!2786)

(assert (=> b!95102 (= e!62046 lt!47338)))

(assert (=> b!95102 (= lt!47338 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(assert (=> b!95102 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692))))))

(declare-fun b!95103 () Bool)

(declare-fun Unit!2835 () Unit!2786)

(assert (=> b!95103 (= e!62046 Unit!2835)))

(declare-fun b!95104 () Bool)

(assert (=> b!95104 (= e!62045 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!46692)))))))

(assert (= (and d!25067 c!15942) b!95102))

(assert (= (and d!25067 (not c!15942)) b!95103))

(assert (= (and d!25067 (not res!48101)) b!95104))

(assert (=> d!25067 m!101367))

(declare-fun m!102997 () Bool)

(assert (=> d!25067 m!102997))

(assert (=> b!95102 m!101367))

(declare-fun m!102999 () Bool)

(assert (=> b!95102 m!102999))

(assert (=> b!95102 m!101367))

(declare-fun m!103001 () Bool)

(assert (=> b!95102 m!103001))

(assert (=> b!95102 m!103001))

(declare-fun m!103003 () Bool)

(assert (=> b!95102 m!103003))

(assert (=> b!95104 m!101367))

(assert (=> b!95104 m!103001))

(assert (=> b!95104 m!103001))

(assert (=> b!95104 m!103003))

(assert (=> b!94531 d!25067))

(declare-fun e!62051 () Bool)

(declare-fun b!95105 () Bool)

(declare-fun lt!47350 () ListLongMap!1489)

(assert (=> b!95105 (= e!62051 (= (apply!90 lt!47350 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 lt!46700) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95105 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 lt!46700)))))

(assert (=> b!95105 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95106 () Bool)

(declare-fun e!62056 () ListLongMap!1489)

(declare-fun e!62049 () ListLongMap!1489)

(assert (=> b!95106 (= e!62056 e!62049)))

(declare-fun c!15946 () Bool)

(assert (=> b!95106 (= c!15946 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95107 () Bool)

(declare-fun e!62059 () Bool)

(declare-fun call!9543 () Bool)

(assert (=> b!95107 (= e!62059 (not call!9543))))

(declare-fun bm!9537 () Bool)

(assert (=> bm!9537 (= call!9543 (contains!780 lt!47350 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95108 () Bool)

(declare-fun e!62054 () Bool)

(declare-fun e!62047 () Bool)

(assert (=> b!95108 (= e!62054 e!62047)))

(declare-fun c!15943 () Bool)

(assert (=> b!95108 (= c!15943 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95109 () Bool)

(declare-fun e!62058 () Bool)

(assert (=> b!95109 (= e!62058 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95110 () Bool)

(declare-fun call!9545 () Bool)

(assert (=> b!95110 (= e!62047 (not call!9545))))

(declare-fun b!95111 () Bool)

(declare-fun e!62057 () Bool)

(assert (=> b!95111 (= e!62057 (= (apply!90 lt!47350 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!25069 () Bool)

(assert (=> d!25069 e!62054))

(declare-fun res!48110 () Bool)

(assert (=> d!25069 (=> (not res!48110) (not e!62054))))

(assert (=> d!25069 (= res!48110 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!47339 () ListLongMap!1489)

(assert (=> d!25069 (= lt!47350 lt!47339)))

(declare-fun lt!47360 () Unit!2786)

(declare-fun e!62053 () Unit!2786)

(assert (=> d!25069 (= lt!47360 e!62053)))

(declare-fun c!15945 () Bool)

(declare-fun e!62055 () Bool)

(assert (=> d!25069 (= c!15945 e!62055)))

(declare-fun res!48107 () Bool)

(assert (=> d!25069 (=> (not res!48107) (not e!62055))))

(assert (=> d!25069 (= res!48107 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25069 (= lt!47339 e!62056)))

(declare-fun c!15947 () Bool)

(assert (=> d!25069 (= c!15947 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25069 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25069 (= (getCurrentListMap!450 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47350)))

(declare-fun bm!9538 () Bool)

(declare-fun call!9544 () ListLongMap!1489)

(declare-fun call!9540 () ListLongMap!1489)

(assert (=> bm!9538 (= call!9544 call!9540)))

(declare-fun b!95112 () Bool)

(declare-fun e!62048 () Bool)

(assert (=> b!95112 (= e!62059 e!62048)))

(declare-fun res!48109 () Bool)

(assert (=> b!95112 (= res!48109 call!9543)))

(assert (=> b!95112 (=> (not res!48109) (not e!62048))))

(declare-fun bm!9539 () Bool)

(assert (=> bm!9539 (= call!9545 (contains!780 lt!47350 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95113 () Bool)

(declare-fun e!62050 () Bool)

(assert (=> b!95113 (= e!62050 e!62051)))

(declare-fun res!48103 () Bool)

(assert (=> b!95113 (=> (not res!48103) (not e!62051))))

(assert (=> b!95113 (= res!48103 (contains!780 lt!47350 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95113 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95114 () Bool)

(declare-fun c!15944 () Bool)

(assert (=> b!95114 (= c!15944 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!62052 () ListLongMap!1489)

(assert (=> b!95114 (= e!62049 e!62052)))

(declare-fun b!95115 () Bool)

(declare-fun res!48108 () Bool)

(assert (=> b!95115 (=> (not res!48108) (not e!62054))))

(assert (=> b!95115 (= res!48108 e!62059)))

(declare-fun c!15948 () Bool)

(assert (=> b!95115 (= c!15948 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95116 () Bool)

(declare-fun res!48102 () Bool)

(assert (=> b!95116 (=> (not res!48102) (not e!62054))))

(assert (=> b!95116 (= res!48102 e!62050)))

(declare-fun res!48106 () Bool)

(assert (=> b!95116 (=> res!48106 e!62050)))

(assert (=> b!95116 (= res!48106 (not e!62058))))

(declare-fun res!48105 () Bool)

(assert (=> b!95116 (=> (not res!48105) (not e!62058))))

(assert (=> b!95116 (= res!48105 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95117 () Bool)

(declare-fun call!9541 () ListLongMap!1489)

(assert (=> b!95117 (= e!62049 call!9541)))

(declare-fun b!95118 () Bool)

(declare-fun call!9546 () ListLongMap!1489)

(assert (=> b!95118 (= e!62056 (+!128 call!9546 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!95119 () Bool)

(assert (=> b!95119 (= e!62048 (= (apply!90 lt!47350 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun bm!9540 () Bool)

(declare-fun call!9542 () ListLongMap!1489)

(assert (=> bm!9540 (= call!9546 (+!128 (ite c!15947 call!9542 (ite c!15946 call!9540 call!9544)) (ite (or c!15947 c!15946) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!95120 () Bool)

(declare-fun lt!47358 () Unit!2786)

(assert (=> b!95120 (= e!62053 lt!47358)))

(declare-fun lt!47340 () ListLongMap!1489)

(assert (=> b!95120 (= lt!47340 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47354 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47354 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47346 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47346 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47359 () Unit!2786)

(assert (=> b!95120 (= lt!47359 (addStillContains!66 lt!47340 lt!47354 (zeroValue!2322 newMap!16) lt!47346))))

(assert (=> b!95120 (contains!780 (+!128 lt!47340 (tuple2!2283 lt!47354 (zeroValue!2322 newMap!16))) lt!47346)))

(declare-fun lt!47352 () Unit!2786)

(assert (=> b!95120 (= lt!47352 lt!47359)))

(declare-fun lt!47357 () ListLongMap!1489)

(assert (=> b!95120 (= lt!47357 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47349 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47349 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47343 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47343 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47344 () Unit!2786)

(assert (=> b!95120 (= lt!47344 (addApplyDifferent!66 lt!47357 lt!47349 (minValue!2322 newMap!16) lt!47343))))

(assert (=> b!95120 (= (apply!90 (+!128 lt!47357 (tuple2!2283 lt!47349 (minValue!2322 newMap!16))) lt!47343) (apply!90 lt!47357 lt!47343))))

(declare-fun lt!47355 () Unit!2786)

(assert (=> b!95120 (= lt!47355 lt!47344)))

(declare-fun lt!47351 () ListLongMap!1489)

(assert (=> b!95120 (= lt!47351 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47341 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47341 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47356 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47356 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47342 () Unit!2786)

(assert (=> b!95120 (= lt!47342 (addApplyDifferent!66 lt!47351 lt!47341 (zeroValue!2322 newMap!16) lt!47356))))

(assert (=> b!95120 (= (apply!90 (+!128 lt!47351 (tuple2!2283 lt!47341 (zeroValue!2322 newMap!16))) lt!47356) (apply!90 lt!47351 lt!47356))))

(declare-fun lt!47348 () Unit!2786)

(assert (=> b!95120 (= lt!47348 lt!47342)))

(declare-fun lt!47353 () ListLongMap!1489)

(assert (=> b!95120 (= lt!47353 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47345 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47345 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47347 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47347 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95120 (= lt!47358 (addApplyDifferent!66 lt!47353 lt!47345 (minValue!2322 newMap!16) lt!47347))))

(assert (=> b!95120 (= (apply!90 (+!128 lt!47353 (tuple2!2283 lt!47345 (minValue!2322 newMap!16))) lt!47347) (apply!90 lt!47353 lt!47347))))

(declare-fun bm!9541 () Bool)

(assert (=> bm!9541 (= call!9540 call!9542)))

(declare-fun b!95121 () Bool)

(assert (=> b!95121 (= e!62052 call!9541)))

(declare-fun b!95122 () Bool)

(assert (=> b!95122 (= e!62052 call!9544)))

(declare-fun bm!9542 () Bool)

(assert (=> bm!9542 (= call!9541 call!9546)))

(declare-fun b!95123 () Bool)

(assert (=> b!95123 (= e!62047 e!62057)))

(declare-fun res!48104 () Bool)

(assert (=> b!95123 (= res!48104 call!9545)))

(assert (=> b!95123 (=> (not res!48104) (not e!62057))))

(declare-fun bm!9543 () Bool)

(assert (=> bm!9543 (= call!9542 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) lt!46700 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95124 () Bool)

(assert (=> b!95124 (= e!62055 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95125 () Bool)

(declare-fun Unit!2836 () Unit!2786)

(assert (=> b!95125 (= e!62053 Unit!2836)))

(assert (= (and d!25069 c!15947) b!95118))

(assert (= (and d!25069 (not c!15947)) b!95106))

(assert (= (and b!95106 c!15946) b!95117))

(assert (= (and b!95106 (not c!15946)) b!95114))

(assert (= (and b!95114 c!15944) b!95121))

(assert (= (and b!95114 (not c!15944)) b!95122))

(assert (= (or b!95121 b!95122) bm!9538))

(assert (= (or b!95117 bm!9538) bm!9541))

(assert (= (or b!95117 b!95121) bm!9542))

(assert (= (or b!95118 bm!9541) bm!9543))

(assert (= (or b!95118 bm!9542) bm!9540))

(assert (= (and d!25069 res!48107) b!95124))

(assert (= (and d!25069 c!15945) b!95120))

(assert (= (and d!25069 (not c!15945)) b!95125))

(assert (= (and d!25069 res!48110) b!95116))

(assert (= (and b!95116 res!48105) b!95109))

(assert (= (and b!95116 (not res!48106)) b!95113))

(assert (= (and b!95113 res!48103) b!95105))

(assert (= (and b!95116 res!48102) b!95115))

(assert (= (and b!95115 c!15948) b!95112))

(assert (= (and b!95115 (not c!15948)) b!95107))

(assert (= (and b!95112 res!48109) b!95119))

(assert (= (or b!95112 b!95107) bm!9537))

(assert (= (and b!95115 res!48108) b!95108))

(assert (= (and b!95108 c!15943) b!95123))

(assert (= (and b!95108 (not c!15943)) b!95110))

(assert (= (and b!95123 res!48104) b!95111))

(assert (= (or b!95123 b!95110) bm!9539))

(declare-fun b_lambda!4193 () Bool)

(assert (=> (not b_lambda!4193) (not b!95105)))

(assert (=> b!95105 t!5461))

(declare-fun b_and!5817 () Bool)

(assert (= b_and!5813 (and (=> t!5461 result!3197) b_and!5817)))

(assert (=> b!95105 t!5463))

(declare-fun b_and!5819 () Bool)

(assert (= b_and!5815 (and (=> t!5463 result!3199) b_and!5819)))

(declare-fun m!103005 () Bool)

(assert (=> b!95118 m!103005))

(declare-fun m!103007 () Bool)

(assert (=> b!95111 m!103007))

(assert (=> d!25069 m!101529))

(declare-fun m!103009 () Bool)

(assert (=> bm!9540 m!103009))

(declare-fun m!103011 () Bool)

(assert (=> b!95105 m!103011))

(assert (=> b!95105 m!101717))

(declare-fun m!103013 () Bool)

(assert (=> b!95105 m!103013))

(assert (=> b!95105 m!101717))

(assert (=> b!95105 m!103011))

(assert (=> b!95105 m!101635))

(assert (=> b!95105 m!101635))

(declare-fun m!103015 () Bool)

(assert (=> b!95105 m!103015))

(declare-fun m!103017 () Bool)

(assert (=> bm!9539 m!103017))

(declare-fun m!103019 () Bool)

(assert (=> bm!9537 m!103019))

(declare-fun m!103021 () Bool)

(assert (=> b!95120 m!103021))

(declare-fun m!103023 () Bool)

(assert (=> b!95120 m!103023))

(declare-fun m!103025 () Bool)

(assert (=> b!95120 m!103025))

(declare-fun m!103027 () Bool)

(assert (=> b!95120 m!103027))

(declare-fun m!103029 () Bool)

(assert (=> b!95120 m!103029))

(declare-fun m!103031 () Bool)

(assert (=> b!95120 m!103031))

(declare-fun m!103033 () Bool)

(assert (=> b!95120 m!103033))

(declare-fun m!103035 () Bool)

(assert (=> b!95120 m!103035))

(assert (=> b!95120 m!101635))

(declare-fun m!103037 () Bool)

(assert (=> b!95120 m!103037))

(declare-fun m!103039 () Bool)

(assert (=> b!95120 m!103039))

(declare-fun m!103041 () Bool)

(assert (=> b!95120 m!103041))

(assert (=> b!95120 m!103031))

(declare-fun m!103043 () Bool)

(assert (=> b!95120 m!103043))

(assert (=> b!95120 m!103023))

(declare-fun m!103045 () Bool)

(assert (=> b!95120 m!103045))

(assert (=> b!95120 m!103033))

(declare-fun m!103047 () Bool)

(assert (=> b!95120 m!103047))

(declare-fun m!103049 () Bool)

(assert (=> b!95120 m!103049))

(assert (=> b!95120 m!103025))

(declare-fun m!103051 () Bool)

(assert (=> b!95120 m!103051))

(assert (=> b!95109 m!101635))

(assert (=> b!95109 m!101635))

(assert (=> b!95109 m!101637))

(assert (=> b!95113 m!101635))

(assert (=> b!95113 m!101635))

(declare-fun m!103053 () Bool)

(assert (=> b!95113 m!103053))

(assert (=> b!95124 m!101635))

(assert (=> b!95124 m!101635))

(assert (=> b!95124 m!101637))

(assert (=> bm!9543 m!103047))

(declare-fun m!103055 () Bool)

(assert (=> b!95119 m!103055))

(assert (=> b!94531 d!25069))

(declare-fun d!25071 () Bool)

(declare-fun res!48111 () Bool)

(declare-fun e!62060 () Bool)

(assert (=> d!25071 (=> res!48111 e!62060)))

(assert (=> d!25071 (= res!48111 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25071 (= (containsKey!152 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000) e!62060)))

(declare-fun b!95126 () Bool)

(declare-fun e!62061 () Bool)

(assert (=> b!95126 (= e!62060 e!62061)))

(declare-fun res!48112 () Bool)

(assert (=> b!95126 (=> (not res!48112) (not e!62061))))

(assert (=> b!95126 (= res!48112 (and (or (not ((_ is Cons!1550) (toList!760 lt!46612))) (bvsle (_1!1152 (h!2142 (toList!760 lt!46612))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1550) (toList!760 lt!46612)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95127 () Bool)

(assert (=> b!95127 (= e!62061 (containsKey!152 (t!5448 (toList!760 lt!46612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25071 (not res!48111)) b!95126))

(assert (= (and b!95126 res!48112) b!95127))

(declare-fun m!103057 () Bool)

(assert (=> b!95127 m!103057))

(assert (=> d!24727 d!25071))

(assert (=> b!94585 d!24587))

(declare-fun d!25073 () Bool)

(assert (=> d!25073 (= (map!1242 (_2!1151 lt!46838)) (getCurrentListMap!450 (_keys!4117 (_2!1151 lt!46838)) (_values!2418 (_2!1151 lt!46838)) (mask!6510 (_2!1151 lt!46838)) (extraKeys!2264 (_2!1151 lt!46838)) (zeroValue!2322 (_2!1151 lt!46838)) (minValue!2322 (_2!1151 lt!46838)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1151 lt!46838))))))

(declare-fun bs!3927 () Bool)

(assert (= bs!3927 d!25073))

(declare-fun m!103059 () Bool)

(assert (=> bs!3927 m!103059))

(assert (=> b!94392 d!25073))

(declare-fun d!25075 () Bool)

(declare-fun e!62062 () Bool)

(assert (=> d!25075 e!62062))

(declare-fun res!48114 () Bool)

(assert (=> d!25075 (=> (not res!48114) (not e!62062))))

(declare-fun lt!47362 () ListLongMap!1489)

(assert (=> d!25075 (= res!48114 (contains!780 lt!47362 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47364 () List!1554)

(assert (=> d!25075 (= lt!47362 (ListLongMap!1490 lt!47364))))

(declare-fun lt!47363 () Unit!2786)

(declare-fun lt!47361 () Unit!2786)

(assert (=> d!25075 (= lt!47363 lt!47361)))

(assert (=> d!25075 (= (getValueByKey!149 lt!47364 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25075 (= lt!47361 (lemmaContainsTupThenGetReturnValue!65 lt!47364 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25075 (= lt!47364 (insertStrictlySorted!68 (toList!760 (map!1242 newMap!16)) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25075 (= (+!128 (map!1242 newMap!16) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47362)))

(declare-fun b!95128 () Bool)

(declare-fun res!48113 () Bool)

(assert (=> b!95128 (=> (not res!48113) (not e!62062))))

(assert (=> b!95128 (= res!48113 (= (getValueByKey!149 (toList!760 lt!47362) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95129 () Bool)

(assert (=> b!95129 (= e!62062 (contains!782 (toList!760 lt!47362) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25075 res!48114) b!95128))

(assert (= (and b!95128 res!48113) b!95129))

(declare-fun m!103061 () Bool)

(assert (=> d!25075 m!103061))

(declare-fun m!103063 () Bool)

(assert (=> d!25075 m!103063))

(declare-fun m!103065 () Bool)

(assert (=> d!25075 m!103065))

(declare-fun m!103067 () Bool)

(assert (=> d!25075 m!103067))

(declare-fun m!103069 () Bool)

(assert (=> b!95128 m!103069))

(declare-fun m!103071 () Bool)

(assert (=> b!95129 m!103071))

(assert (=> b!94392 d!25075))

(assert (=> b!94392 d!24593))

(declare-fun d!25077 () Bool)

(assert (=> d!25077 (= (get!1273 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2763 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94305 d!25077))

(declare-fun d!25079 () Bool)

(assert (=> d!25079 (= (apply!90 lt!46967 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (getValueByKey!149 (toList!760 lt!46967) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3928 () Bool)

(assert (= bs!3928 d!25079))

(assert (=> bs!3928 m!101635))

(assert (=> bs!3928 m!102391))

(assert (=> bs!3928 m!102391))

(declare-fun m!103073 () Bool)

(assert (=> bs!3928 m!103073))

(assert (=> b!94542 d!25079))

(declare-fun d!25081 () Bool)

(declare-fun c!15949 () Bool)

(assert (=> d!25081 (= c!15949 ((_ is ValueCellFull!962) (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62063 () V!3129)

(assert (=> d!25081 (= (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62063)))

(declare-fun b!95130 () Bool)

(assert (=> b!95130 (= e!62063 (get!1273 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95131 () Bool)

(assert (=> b!95131 (= e!62063 (get!1274 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25081 c!15949) b!95130))

(assert (= (and d!25081 (not c!15949)) b!95131))

(assert (=> b!95130 m!101841))

(assert (=> b!95130 m!101717))

(declare-fun m!103075 () Bool)

(assert (=> b!95130 m!103075))

(assert (=> b!95131 m!101841))

(assert (=> b!95131 m!101717))

(declare-fun m!103077 () Bool)

(assert (=> b!95131 m!103077))

(assert (=> b!94542 d!25081))

(declare-fun c!15950 () Bool)

(declare-fun d!25083 () Bool)

(assert (=> d!25083 (= c!15950 (and ((_ is Cons!1550) (toList!760 lt!46725)) (= (_1!1152 (h!2142 (toList!760 lt!46725))) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62064 () Option!155)

(assert (=> d!25083 (= (getValueByKey!149 (toList!760 lt!46725) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62064)))

(declare-fun b!95133 () Bool)

(declare-fun e!62065 () Option!155)

(assert (=> b!95133 (= e!62064 e!62065)))

(declare-fun c!15951 () Bool)

(assert (=> b!95133 (= c!15951 (and ((_ is Cons!1550) (toList!760 lt!46725)) (not (= (_1!1152 (h!2142 (toList!760 lt!46725))) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!95135 () Bool)

(assert (=> b!95135 (= e!62065 None!153)))

(declare-fun b!95132 () Bool)

(assert (=> b!95132 (= e!62064 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46725)))))))

(declare-fun b!95134 () Bool)

(assert (=> b!95134 (= e!62065 (getValueByKey!149 (t!5448 (toList!760 lt!46725)) (_1!1152 (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25083 c!15950) b!95132))

(assert (= (and d!25083 (not c!15950)) b!95133))

(assert (= (and b!95133 c!15951) b!95134))

(assert (= (and b!95133 (not c!15951)) b!95135))

(declare-fun m!103079 () Bool)

(assert (=> b!95134 m!103079))

(assert (=> b!94311 d!25083))

(declare-fun d!25085 () Bool)

(declare-fun e!62066 () Bool)

(assert (=> d!25085 e!62066))

(declare-fun res!48115 () Bool)

(assert (=> d!25085 (=> res!48115 e!62066)))

(declare-fun lt!47367 () Bool)

(assert (=> d!25085 (= res!48115 (not lt!47367))))

(declare-fun lt!47366 () Bool)

(assert (=> d!25085 (= lt!47367 lt!47366)))

(declare-fun lt!47365 () Unit!2786)

(declare-fun e!62067 () Unit!2786)

(assert (=> d!25085 (= lt!47365 e!62067)))

(declare-fun c!15952 () Bool)

(assert (=> d!25085 (= c!15952 lt!47366)))

(assert (=> d!25085 (= lt!47366 (containsKey!152 (toList!760 lt!46748) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25085 (= (contains!780 lt!46748 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47367)))

(declare-fun b!95136 () Bool)

(declare-fun lt!47368 () Unit!2786)

(assert (=> b!95136 (= e!62067 lt!47368)))

(assert (=> b!95136 (= lt!47368 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46748) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95136 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95137 () Bool)

(declare-fun Unit!2837 () Unit!2786)

(assert (=> b!95137 (= e!62067 Unit!2837)))

(declare-fun b!95138 () Bool)

(assert (=> b!95138 (= e!62066 (isDefined!101 (getValueByKey!149 (toList!760 lt!46748) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25085 c!15952) b!95136))

(assert (= (and d!25085 (not c!15952)) b!95137))

(assert (= (and d!25085 (not res!48115)) b!95138))

(declare-fun m!103081 () Bool)

(assert (=> d!25085 m!103081))

(declare-fun m!103083 () Bool)

(assert (=> b!95136 m!103083))

(declare-fun m!103085 () Bool)

(assert (=> b!95136 m!103085))

(assert (=> b!95136 m!103085))

(declare-fun m!103087 () Bool)

(assert (=> b!95136 m!103087))

(assert (=> b!95138 m!103085))

(assert (=> b!95138 m!103085))

(assert (=> b!95138 m!103087))

(assert (=> b!94345 d!25085))

(assert (=> d!24731 d!24591))

(declare-fun d!25087 () Bool)

(assert (=> d!25087 (= (apply!90 lt!46919 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (getValueByKey!149 (toList!760 lt!46919) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3929 () Bool)

(assert (= bs!3929 d!25087))

(assert (=> bs!3929 m!101635))

(assert (=> bs!3929 m!102465))

(assert (=> bs!3929 m!102465))

(declare-fun m!103089 () Bool)

(assert (=> bs!3929 m!103089))

(assert (=> b!94496 d!25087))

(declare-fun d!25089 () Bool)

(declare-fun c!15953 () Bool)

(assert (=> d!25089 (= c!15953 ((_ is ValueCellFull!962) (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000)))))

(declare-fun e!62068 () V!3129)

(assert (=> d!25089 (= (get!1272 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62068)))

(declare-fun b!95139 () Bool)

(assert (=> b!95139 (= e!62068 (get!1273 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95140 () Bool)

(assert (=> b!95140 (= e!62068 (get!1274 (select (arr!1989 (ite (or c!15720 c!15718) (_values!2418 newMap!16) lt!46700)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25089 c!15953) b!95139))

(assert (= (and d!25089 (not c!15953)) b!95140))

(assert (=> b!95139 m!101715))

(assert (=> b!95139 m!101717))

(declare-fun m!103091 () Bool)

(assert (=> b!95139 m!103091))

(assert (=> b!95140 m!101715))

(assert (=> b!95140 m!101717))

(declare-fun m!103093 () Bool)

(assert (=> b!95140 m!103093))

(assert (=> b!94496 d!25089))

(declare-fun d!25091 () Bool)

(assert (=> d!25091 (= (isEmpty!357 (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) (not ((_ is Some!154) (getValueByKey!149 (toList!760 lt!46500) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))))

(assert (=> d!24715 d!25091))

(declare-fun d!25093 () Bool)

(declare-fun e!62069 () Bool)

(assert (=> d!25093 e!62069))

(declare-fun res!48116 () Bool)

(assert (=> d!25093 (=> res!48116 e!62069)))

(declare-fun lt!47371 () Bool)

(assert (=> d!25093 (= res!48116 (not lt!47371))))

(declare-fun lt!47370 () Bool)

(assert (=> d!25093 (= lt!47371 lt!47370)))

(declare-fun lt!47369 () Unit!2786)

(declare-fun e!62070 () Unit!2786)

(assert (=> d!25093 (= lt!47369 e!62070)))

(declare-fun c!15954 () Bool)

(assert (=> d!25093 (= c!15954 lt!47370)))

(assert (=> d!25093 (= lt!47370 (containsKey!152 (toList!760 lt!47000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25093 (= (contains!780 lt!47000 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47371)))

(declare-fun b!95141 () Bool)

(declare-fun lt!47372 () Unit!2786)

(assert (=> b!95141 (= e!62070 lt!47372)))

(assert (=> b!95141 (= lt!47372 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!47000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95141 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95142 () Bool)

(declare-fun Unit!2838 () Unit!2786)

(assert (=> b!95142 (= e!62070 Unit!2838)))

(declare-fun b!95143 () Bool)

(assert (=> b!95143 (= e!62069 (isDefined!101 (getValueByKey!149 (toList!760 lt!47000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25093 c!15954) b!95141))

(assert (= (and d!25093 (not c!15954)) b!95142))

(assert (= (and d!25093 (not res!48116)) b!95143))

(declare-fun m!103095 () Bool)

(assert (=> d!25093 m!103095))

(declare-fun m!103097 () Bool)

(assert (=> b!95141 m!103097))

(declare-fun m!103099 () Bool)

(assert (=> b!95141 m!103099))

(assert (=> b!95141 m!103099))

(declare-fun m!103101 () Bool)

(assert (=> b!95141 m!103101))

(assert (=> b!95143 m!103099))

(assert (=> b!95143 m!103099))

(assert (=> b!95143 m!103101))

(assert (=> bm!9479 d!25093))

(assert (=> d!24669 d!24663))

(declare-fun d!25095 () Bool)

(declare-fun e!62080 () Bool)

(assert (=> d!25095 e!62080))

(declare-fun c!15959 () Bool)

(declare-fun lt!47375 () SeekEntryResult!245)

(assert (=> d!25095 (= c!15959 ((_ is MissingZero!245) lt!47375))))

(assert (=> d!25095 (= lt!47375 (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (=> d!25095 true))

(declare-fun _$34!851 () Unit!2786)

(assert (=> d!25095 (= (choose!570 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) _$34!851)))

(declare-fun b!95160 () Bool)

(declare-fun e!62081 () Bool)

(declare-fun call!9551 () Bool)

(assert (=> b!95160 (= e!62081 (not call!9551))))

(declare-fun b!95161 () Bool)

(declare-fun e!62079 () Bool)

(assert (=> b!95161 (= e!62079 (not call!9551))))

(declare-fun bm!9548 () Bool)

(assert (=> bm!9548 (= call!9551 (arrayContainsKey!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!95162 () Bool)

(declare-fun res!48126 () Bool)

(assert (=> b!95162 (= res!48126 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3121 lt!47375)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95162 (=> (not res!48126) (not e!62081))))

(declare-fun b!95163 () Bool)

(declare-fun res!48127 () Bool)

(assert (=> b!95163 (=> (not res!48127) (not e!62079))))

(assert (=> b!95163 (= res!48127 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!47375)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95164 () Bool)

(assert (=> b!95164 (= e!62080 e!62081)))

(declare-fun res!48128 () Bool)

(declare-fun call!9552 () Bool)

(assert (=> b!95164 (= res!48128 call!9552)))

(assert (=> b!95164 (=> (not res!48128) (not e!62081))))

(declare-fun b!95165 () Bool)

(declare-fun e!62082 () Bool)

(assert (=> b!95165 (= e!62080 e!62082)))

(declare-fun c!15960 () Bool)

(assert (=> b!95165 (= c!15960 ((_ is MissingVacant!245) lt!47375))))

(declare-fun b!95166 () Bool)

(declare-fun res!48125 () Bool)

(assert (=> b!95166 (=> (not res!48125) (not e!62079))))

(assert (=> b!95166 (= res!48125 call!9552)))

(assert (=> b!95166 (= e!62082 e!62079)))

(declare-fun b!95167 () Bool)

(assert (=> b!95167 (= e!62082 ((_ is Undefined!245) lt!47375))))

(declare-fun bm!9549 () Bool)

(assert (=> bm!9549 (= call!9552 (inRange!0 (ite c!15959 (index!3121 lt!47375) (index!3124 lt!47375)) (mask!6510 newMap!16)))))

(assert (= (and d!25095 c!15959) b!95164))

(assert (= (and d!25095 (not c!15959)) b!95165))

(assert (= (and b!95164 res!48128) b!95162))

(assert (= (and b!95162 res!48126) b!95160))

(assert (= (and b!95165 c!15960) b!95166))

(assert (= (and b!95165 (not c!15960)) b!95167))

(assert (= (and b!95166 res!48125) b!95163))

(assert (= (and b!95163 res!48127) b!95161))

(assert (= (or b!95164 b!95166) bm!9549))

(assert (= (or b!95160 b!95161) bm!9548))

(assert (=> d!25095 m!101143))

(assert (=> d!25095 m!101389))

(declare-fun m!103103 () Bool)

(assert (=> b!95162 m!103103))

(assert (=> bm!9548 m!101143))

(assert (=> bm!9548 m!101383))

(declare-fun m!103105 () Bool)

(assert (=> b!95163 m!103105))

(declare-fun m!103107 () Bool)

(assert (=> bm!9549 m!103107))

(assert (=> d!24669 d!25095))

(assert (=> d!24669 d!24761))

(assert (=> bm!9478 d!24833))

(declare-fun d!25097 () Bool)

(assert (=> d!25097 (isDefined!101 (getValueByKey!149 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(declare-fun lt!47376 () Unit!2786)

(assert (=> d!25097 (= lt!47376 (choose!575 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(declare-fun e!62083 () Bool)

(assert (=> d!25097 e!62083))

(declare-fun res!48129 () Bool)

(assert (=> d!25097 (=> (not res!48129) (not e!62083))))

(assert (=> d!25097 (= res!48129 (isStrictlySorted!289 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!25097 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608) lt!47376)))

(declare-fun b!95168 () Bool)

(assert (=> b!95168 (= e!62083 (containsKey!152 (toList!760 (+!128 lt!46602 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46608))))

(assert (= (and d!25097 res!48129) b!95168))

(assert (=> d!25097 m!101627))

(assert (=> d!25097 m!101627))

(assert (=> d!25097 m!101629))

(declare-fun m!103109 () Bool)

(assert (=> d!25097 m!103109))

(declare-fun m!103111 () Bool)

(assert (=> d!25097 m!103111))

(assert (=> b!95168 m!101623))

(assert (=> b!94420 d!25097))

(assert (=> b!94420 d!24769))

(assert (=> b!94420 d!24771))

(declare-fun d!25099 () Bool)

(declare-fun e!62084 () Bool)

(assert (=> d!25099 e!62084))

(declare-fun res!48130 () Bool)

(assert (=> d!25099 (=> res!48130 e!62084)))

(declare-fun lt!47379 () Bool)

(assert (=> d!25099 (= res!48130 (not lt!47379))))

(declare-fun lt!47378 () Bool)

(assert (=> d!25099 (= lt!47379 lt!47378)))

(declare-fun lt!47377 () Unit!2786)

(declare-fun e!62085 () Unit!2786)

(assert (=> d!25099 (= lt!47377 e!62085)))

(declare-fun c!15961 () Bool)

(assert (=> d!25099 (= c!15961 lt!47378)))

(assert (=> d!25099 (= lt!47378 (containsKey!152 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!25099 (= (contains!780 lt!46846 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47379)))

(declare-fun b!95169 () Bool)

(declare-fun lt!47380 () Unit!2786)

(assert (=> b!95169 (= e!62085 lt!47380)))

(assert (=> b!95169 (= lt!47380 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> b!95169 (isDefined!101 (getValueByKey!149 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95170 () Bool)

(declare-fun Unit!2839 () Unit!2786)

(assert (=> b!95170 (= e!62085 Unit!2839)))

(declare-fun b!95171 () Bool)

(assert (=> b!95171 (= e!62084 (isDefined!101 (getValueByKey!149 (toList!760 lt!46846) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25099 c!15961) b!95169))

(assert (= (and d!25099 (not c!15961)) b!95170))

(assert (= (and d!25099 (not res!48130)) b!95171))

(declare-fun m!103113 () Bool)

(assert (=> d!25099 m!103113))

(declare-fun m!103115 () Bool)

(assert (=> b!95169 m!103115))

(assert (=> b!95169 m!101547))

(assert (=> b!95169 m!101547))

(declare-fun m!103117 () Bool)

(assert (=> b!95169 m!103117))

(assert (=> b!95171 m!101547))

(assert (=> b!95171 m!101547))

(assert (=> b!95171 m!103117))

(assert (=> d!24631 d!25099))

(declare-fun c!15962 () Bool)

(declare-fun d!25101 () Bool)

(assert (=> d!25101 (= c!15962 (and ((_ is Cons!1550) lt!46848) (= (_1!1152 (h!2142 lt!46848)) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62086 () Option!155)

(assert (=> d!25101 (= (getValueByKey!149 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62086)))

(declare-fun b!95173 () Bool)

(declare-fun e!62087 () Option!155)

(assert (=> b!95173 (= e!62086 e!62087)))

(declare-fun c!15963 () Bool)

(assert (=> b!95173 (= c!15963 (and ((_ is Cons!1550) lt!46848) (not (= (_1!1152 (h!2142 lt!46848)) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95175 () Bool)

(assert (=> b!95175 (= e!62087 None!153)))

(declare-fun b!95172 () Bool)

(assert (=> b!95172 (= e!62086 (Some!154 (_2!1152 (h!2142 lt!46848))))))

(declare-fun b!95174 () Bool)

(assert (=> b!95174 (= e!62087 (getValueByKey!149 (t!5448 lt!46848) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25101 c!15962) b!95172))

(assert (= (and d!25101 (not c!15962)) b!95173))

(assert (= (and b!95173 c!15963) b!95174))

(assert (= (and b!95173 (not c!15963)) b!95175))

(declare-fun m!103119 () Bool)

(assert (=> b!95174 m!103119))

(assert (=> d!24631 d!25101))

(declare-fun d!25103 () Bool)

(assert (=> d!25103 (= (getValueByKey!149 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!47381 () Unit!2786)

(assert (=> d!25103 (= lt!47381 (choose!577 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!62088 () Bool)

(assert (=> d!25103 e!62088))

(declare-fun res!48131 () Bool)

(assert (=> d!25103 (=> (not res!48131) (not e!62088))))

(assert (=> d!25103 (= res!48131 (isStrictlySorted!289 lt!46848))))

(assert (=> d!25103 (= (lemmaContainsTupThenGetReturnValue!65 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47381)))

(declare-fun b!95176 () Bool)

(declare-fun res!48132 () Bool)

(assert (=> b!95176 (=> (not res!48132) (not e!62088))))

(assert (=> b!95176 (= res!48132 (containsKey!152 lt!46848 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95177 () Bool)

(assert (=> b!95177 (= e!62088 (contains!782 lt!46848 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25103 res!48131) b!95176))

(assert (= (and b!95176 res!48132) b!95177))

(assert (=> d!25103 m!101541))

(declare-fun m!103121 () Bool)

(assert (=> d!25103 m!103121))

(declare-fun m!103123 () Bool)

(assert (=> d!25103 m!103123))

(declare-fun m!103125 () Bool)

(assert (=> b!95176 m!103125))

(declare-fun m!103127 () Bool)

(assert (=> b!95177 m!103127))

(assert (=> d!24631 d!25103))

(declare-fun b!95178 () Bool)

(declare-fun e!62089 () List!1554)

(assert (=> b!95178 (= e!62089 (insertStrictlySorted!68 (t!5448 (toList!760 lt!46602)) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95179 () Bool)

(declare-fun e!62091 () List!1554)

(declare-fun call!9554 () List!1554)

(assert (=> b!95179 (= e!62091 call!9554)))

(declare-fun b!95180 () Bool)

(declare-fun e!62092 () List!1554)

(declare-fun call!9553 () List!1554)

(assert (=> b!95180 (= e!62092 call!9553)))

(declare-fun b!95181 () Bool)

(declare-fun res!48134 () Bool)

(declare-fun e!62093 () Bool)

(assert (=> b!95181 (=> (not res!48134) (not e!62093))))

(declare-fun lt!47382 () List!1554)

(assert (=> b!95181 (= res!48134 (containsKey!152 lt!47382 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95183 () Bool)

(declare-fun c!15966 () Bool)

(declare-fun c!15967 () Bool)

(assert (=> b!95183 (= e!62089 (ite c!15967 (t!5448 (toList!760 lt!46602)) (ite c!15966 (Cons!1550 (h!2142 (toList!760 lt!46602)) (t!5448 (toList!760 lt!46602))) Nil!1551)))))

(declare-fun b!95184 () Bool)

(declare-fun e!62090 () List!1554)

(assert (=> b!95184 (= e!62090 e!62091)))

(assert (=> b!95184 (= c!15967 (and ((_ is Cons!1550) (toList!760 lt!46602)) (= (_1!1152 (h!2142 (toList!760 lt!46602))) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9550 () Bool)

(declare-fun call!9555 () List!1554)

(assert (=> bm!9550 (= call!9554 call!9555)))

(declare-fun b!95185 () Bool)

(assert (=> b!95185 (= e!62092 call!9553)))

(declare-fun b!95182 () Bool)

(assert (=> b!95182 (= e!62090 call!9555)))

(declare-fun d!25105 () Bool)

(assert (=> d!25105 e!62093))

(declare-fun res!48133 () Bool)

(assert (=> d!25105 (=> (not res!48133) (not e!62093))))

(assert (=> d!25105 (= res!48133 (isStrictlySorted!289 lt!47382))))

(assert (=> d!25105 (= lt!47382 e!62090)))

(declare-fun c!15964 () Bool)

(assert (=> d!25105 (= c!15964 (and ((_ is Cons!1550) (toList!760 lt!46602)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46602))) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!25105 (isStrictlySorted!289 (toList!760 lt!46602))))

(assert (=> d!25105 (= (insertStrictlySorted!68 (toList!760 lt!46602) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47382)))

(declare-fun bm!9551 () Bool)

(assert (=> bm!9551 (= call!9555 ($colon$colon!75 e!62089 (ite c!15964 (h!2142 (toList!760 lt!46602)) (tuple2!2283 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun c!15965 () Bool)

(assert (=> bm!9551 (= c!15965 c!15964)))

(declare-fun b!95186 () Bool)

(assert (=> b!95186 (= e!62093 (contains!782 lt!47382 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9552 () Bool)

(assert (=> bm!9552 (= call!9553 call!9554)))

(declare-fun b!95187 () Bool)

(assert (=> b!95187 (= c!15966 (and ((_ is Cons!1550) (toList!760 lt!46602)) (bvsgt (_1!1152 (h!2142 (toList!760 lt!46602))) (_1!1152 (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!95187 (= e!62091 e!62092)))

(assert (= (and d!25105 c!15964) b!95182))

(assert (= (and d!25105 (not c!15964)) b!95184))

(assert (= (and b!95184 c!15967) b!95179))

(assert (= (and b!95184 (not c!15967)) b!95187))

(assert (= (and b!95187 c!15966) b!95180))

(assert (= (and b!95187 (not c!15966)) b!95185))

(assert (= (or b!95180 b!95185) bm!9552))

(assert (= (or b!95179 bm!9552) bm!9550))

(assert (= (or b!95182 bm!9550) bm!9551))

(assert (= (and bm!9551 c!15965) b!95178))

(assert (= (and bm!9551 (not c!15965)) b!95183))

(assert (= (and d!25105 res!48133) b!95181))

(assert (= (and b!95181 res!48134) b!95186))

(declare-fun m!103129 () Bool)

(assert (=> bm!9551 m!103129))

(declare-fun m!103131 () Bool)

(assert (=> b!95186 m!103131))

(declare-fun m!103133 () Bool)

(assert (=> b!95178 m!103133))

(declare-fun m!103135 () Bool)

(assert (=> d!25105 m!103135))

(declare-fun m!103137 () Bool)

(assert (=> d!25105 m!103137))

(declare-fun m!103139 () Bool)

(assert (=> b!95181 m!103139))

(assert (=> d!24631 d!25105))

(declare-fun b!95200 () Bool)

(declare-fun e!62101 () SeekEntryResult!245)

(assert (=> b!95200 (= e!62101 (MissingVacant!245 (index!3123 lt!46879)))))

(declare-fun b!95201 () Bool)

(declare-fun e!62102 () SeekEntryResult!245)

(assert (=> b!95201 (= e!62102 (Found!245 (index!3123 lt!46879)))))

(declare-fun b!95202 () Bool)

(declare-fun e!62100 () SeekEntryResult!245)

(assert (=> b!95202 (= e!62100 Undefined!245)))

(declare-fun b!95203 () Bool)

(assert (=> b!95203 (= e!62100 e!62102)))

(declare-fun c!15976 () Bool)

(declare-fun lt!47387 () (_ BitVec 64))

(assert (=> b!95203 (= c!15976 (= lt!47387 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun lt!47388 () SeekEntryResult!245)

(declare-fun d!25107 () Bool)

(assert (=> d!25107 (and (or ((_ is Undefined!245) lt!47388) (not ((_ is Found!245) lt!47388)) (and (bvsge (index!3122 lt!47388) #b00000000000000000000000000000000) (bvslt (index!3122 lt!47388) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!47388) ((_ is Found!245) lt!47388) (not ((_ is MissingVacant!245) lt!47388)) (not (= (index!3124 lt!47388) (index!3123 lt!46879))) (and (bvsge (index!3124 lt!47388) #b00000000000000000000000000000000) (bvslt (index!3124 lt!47388) (size!2236 (_keys!4117 newMap!16))))) (or ((_ is Undefined!245) lt!47388) (ite ((_ is Found!245) lt!47388) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3122 lt!47388)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (and ((_ is MissingVacant!245) lt!47388) (= (index!3124 lt!47388) (index!3123 lt!46879)) (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3124 lt!47388)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!25107 (= lt!47388 e!62100)))

(declare-fun c!15975 () Bool)

(assert (=> d!25107 (= c!15975 (bvsge (x!12649 lt!46879) #b01111111111111111111111111111110))))

(assert (=> d!25107 (= lt!47387 (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!46879)))))

(assert (=> d!25107 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25107 (= (seekKeyOrZeroReturnVacant!0 (x!12649 lt!46879) (index!3123 lt!46879) (index!3123 lt!46879) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)) lt!47388)))

(declare-fun b!95204 () Bool)

(declare-fun c!15974 () Bool)

(assert (=> b!95204 (= c!15974 (= lt!47387 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95204 (= e!62102 e!62101)))

(declare-fun b!95205 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!95205 (= e!62101 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12649 lt!46879) #b00000000000000000000000000000001) (nextIndex!0 (index!3123 lt!46879) (bvadd (x!12649 lt!46879) #b00000000000000000000000000000001) (mask!6510 newMap!16)) (index!3123 lt!46879) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(assert (= (and d!25107 c!15975) b!95202))

(assert (= (and d!25107 (not c!15975)) b!95203))

(assert (= (and b!95203 c!15976) b!95201))

(assert (= (and b!95203 (not c!15976)) b!95204))

(assert (= (and b!95204 c!15974) b!95200))

(assert (= (and b!95204 (not c!15974)) b!95205))

(declare-fun m!103141 () Bool)

(assert (=> d!25107 m!103141))

(declare-fun m!103143 () Bool)

(assert (=> d!25107 m!103143))

(assert (=> d!25107 m!101655))

(assert (=> d!25107 m!101529))

(declare-fun m!103145 () Bool)

(assert (=> b!95205 m!103145))

(assert (=> b!95205 m!103145))

(assert (=> b!95205 m!101143))

(declare-fun m!103147 () Bool)

(assert (=> b!95205 m!103147))

(assert (=> b!94443 d!25107))

(declare-fun d!25109 () Bool)

(declare-fun e!62103 () Bool)

(assert (=> d!25109 e!62103))

(declare-fun res!48136 () Bool)

(assert (=> d!25109 (=> (not res!48136) (not e!62103))))

(declare-fun lt!47390 () ListLongMap!1489)

(assert (=> d!25109 (= res!48136 (contains!780 lt!47390 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun lt!47392 () List!1554)

(assert (=> d!25109 (= lt!47390 (ListLongMap!1490 lt!47392))))

(declare-fun lt!47391 () Unit!2786)

(declare-fun lt!47389 () Unit!2786)

(assert (=> d!25109 (= lt!47391 lt!47389)))

(assert (=> d!25109 (= (getValueByKey!149 lt!47392 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25109 (= lt!47389 (lemmaContainsTupThenGetReturnValue!65 lt!47392 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25109 (= lt!47392 (insertStrictlySorted!68 (toList!760 call!9488) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25109 (= (+!128 call!9488 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) lt!47390)))

(declare-fun b!95206 () Bool)

(declare-fun res!48135 () Bool)

(assert (=> b!95206 (=> (not res!48135) (not e!62103))))

(assert (=> b!95206 (= res!48135 (= (getValueByKey!149 (toList!760 lt!47390) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun b!95207 () Bool)

(assert (=> b!95207 (= e!62103 (contains!782 (toList!760 lt!47390) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(assert (= (and d!25109 res!48136) b!95206))

(assert (= (and b!95206 res!48135) b!95207))

(declare-fun m!103149 () Bool)

(assert (=> d!25109 m!103149))

(declare-fun m!103151 () Bool)

(assert (=> d!25109 m!103151))

(declare-fun m!103153 () Bool)

(assert (=> d!25109 m!103153))

(declare-fun m!103155 () Bool)

(assert (=> d!25109 m!103155))

(declare-fun m!103157 () Bool)

(assert (=> b!95206 m!103157))

(declare-fun m!103159 () Bool)

(assert (=> b!95207 m!103159))

(assert (=> b!94615 d!25109))

(declare-fun d!25111 () Bool)

(assert (=> d!25111 (= (get!1275 (getValueByKey!149 (toList!760 lt!46619) lt!46605)) (v!2770 (getValueByKey!149 (toList!760 lt!46619) lt!46605)))))

(assert (=> d!24639 d!25111))

(declare-fun d!25113 () Bool)

(declare-fun c!15977 () Bool)

(assert (=> d!25113 (= c!15977 (and ((_ is Cons!1550) (toList!760 lt!46619)) (= (_1!1152 (h!2142 (toList!760 lt!46619))) lt!46605)))))

(declare-fun e!62104 () Option!155)

(assert (=> d!25113 (= (getValueByKey!149 (toList!760 lt!46619) lt!46605) e!62104)))

(declare-fun b!95209 () Bool)

(declare-fun e!62105 () Option!155)

(assert (=> b!95209 (= e!62104 e!62105)))

(declare-fun c!15978 () Bool)

(assert (=> b!95209 (= c!15978 (and ((_ is Cons!1550) (toList!760 lt!46619)) (not (= (_1!1152 (h!2142 (toList!760 lt!46619))) lt!46605))))))

(declare-fun b!95211 () Bool)

(assert (=> b!95211 (= e!62105 None!153)))

(declare-fun b!95208 () Bool)

(assert (=> b!95208 (= e!62104 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46619)))))))

(declare-fun b!95210 () Bool)

(assert (=> b!95210 (= e!62105 (getValueByKey!149 (t!5448 (toList!760 lt!46619)) lt!46605))))

(assert (= (and d!25113 c!15977) b!95208))

(assert (= (and d!25113 (not c!15977)) b!95209))

(assert (= (and b!95209 c!15978) b!95210))

(assert (= (and b!95209 (not c!15978)) b!95211))

(declare-fun m!103161 () Bool)

(assert (=> b!95210 m!103161))

(assert (=> d!24639 d!25113))

(declare-fun d!25115 () Bool)

(assert (=> d!25115 (= (apply!90 lt!46967 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46967) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3930 () Bool)

(assert (= bs!3930 d!25115))

(assert (=> bs!3930 m!102551))

(assert (=> bs!3930 m!102551))

(declare-fun m!103163 () Bool)

(assert (=> bs!3930 m!103163))

(assert (=> b!94556 d!25115))

(declare-fun b!95212 () Bool)

(declare-fun e!62106 () Bool)

(declare-fun e!62108 () Bool)

(assert (=> b!95212 (= e!62106 e!62108)))

(declare-fun lt!47393 () (_ BitVec 64))

(assert (=> b!95212 (= lt!47393 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000))))

(declare-fun lt!47394 () Unit!2786)

(assert (=> b!95212 (= lt!47394 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4117 (_2!1151 lt!46714)) lt!47393 #b00000000000000000000000000000000))))

(assert (=> b!95212 (arrayContainsKey!0 (_keys!4117 (_2!1151 lt!46714)) lt!47393 #b00000000000000000000000000000000)))

(declare-fun lt!47395 () Unit!2786)

(assert (=> b!95212 (= lt!47395 lt!47394)))

(declare-fun res!48138 () Bool)

(assert (=> b!95212 (= res!48138 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000) (_keys!4117 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!95212 (=> (not res!48138) (not e!62108))))

(declare-fun bm!9553 () Bool)

(declare-fun call!9556 () Bool)

(assert (=> bm!9553 (= call!9556 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4117 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714))))))

(declare-fun d!25117 () Bool)

(declare-fun res!48137 () Bool)

(declare-fun e!62107 () Bool)

(assert (=> d!25117 (=> res!48137 e!62107)))

(assert (=> d!25117 (= res!48137 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (=> d!25117 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 (_2!1151 lt!46714)) (mask!6510 (_2!1151 lt!46714))) e!62107)))

(declare-fun b!95213 () Bool)

(assert (=> b!95213 (= e!62107 e!62106)))

(declare-fun c!15979 () Bool)

(assert (=> b!95213 (= c!15979 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun b!95214 () Bool)

(assert (=> b!95214 (= e!62108 call!9556)))

(declare-fun b!95215 () Bool)

(assert (=> b!95215 (= e!62106 call!9556)))

(assert (= (and d!25117 (not res!48137)) b!95213))

(assert (= (and b!95213 c!15979) b!95212))

(assert (= (and b!95213 (not c!15979)) b!95215))

(assert (= (and b!95212 res!48138) b!95214))

(assert (= (or b!95214 b!95215) bm!9553))

(assert (=> b!95212 m!102413))

(declare-fun m!103165 () Bool)

(assert (=> b!95212 m!103165))

(declare-fun m!103167 () Bool)

(assert (=> b!95212 m!103167))

(assert (=> b!95212 m!102413))

(declare-fun m!103169 () Bool)

(assert (=> b!95212 m!103169))

(declare-fun m!103171 () Bool)

(assert (=> bm!9553 m!103171))

(assert (=> b!95213 m!102413))

(assert (=> b!95213 m!102413))

(assert (=> b!95213 m!102453))

(assert (=> b!94524 d!25117))

(declare-fun d!25119 () Bool)

(assert (=> d!25119 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47396 () Unit!2786)

(assert (=> d!25119 (= lt!47396 (choose!575 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62109 () Bool)

(assert (=> d!25119 e!62109))

(declare-fun res!48139 () Bool)

(assert (=> d!25119 (=> (not res!48139) (not e!62109))))

(assert (=> d!25119 (= res!48139 (isStrictlySorted!289 (toList!760 lt!46612)))))

(assert (=> d!25119 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000) lt!47396)))

(declare-fun b!95216 () Bool)

(assert (=> b!95216 (= e!62109 (containsKey!152 (toList!760 lt!46612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25119 res!48139) b!95216))

(assert (=> d!25119 m!101685))

(assert (=> d!25119 m!101685))

(assert (=> d!25119 m!101911))

(declare-fun m!103173 () Bool)

(assert (=> d!25119 m!103173))

(assert (=> d!25119 m!102531))

(assert (=> b!95216 m!101907))

(assert (=> b!94599 d!25119))

(assert (=> b!94599 d!24841))

(assert (=> b!94599 d!24843))

(declare-fun d!25121 () Bool)

(declare-fun res!48140 () Bool)

(declare-fun e!62110 () Bool)

(assert (=> d!25121 (=> res!48140 e!62110)))

(assert (=> d!25121 (= res!48140 (and ((_ is Cons!1550) (toList!760 lt!46612)) (= (_1!1152 (h!2142 (toList!760 lt!46612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25121 (= (containsKey!152 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000) e!62110)))

(declare-fun b!95217 () Bool)

(declare-fun e!62111 () Bool)

(assert (=> b!95217 (= e!62110 e!62111)))

(declare-fun res!48141 () Bool)

(assert (=> b!95217 (=> (not res!48141) (not e!62111))))

(assert (=> b!95217 (= res!48141 (and (or (not ((_ is Cons!1550) (toList!760 lt!46612))) (bvsle (_1!1152 (h!2142 (toList!760 lt!46612))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1550) (toList!760 lt!46612)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95218 () Bool)

(assert (=> b!95218 (= e!62111 (containsKey!152 (t!5448 (toList!760 lt!46612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25121 (not res!48140)) b!95217))

(assert (= (and b!95217 res!48141) b!95218))

(declare-fun m!103175 () Bool)

(assert (=> b!95218 m!103175))

(assert (=> d!24691 d!25121))

(assert (=> b!94426 d!24795))

(assert (=> b!94632 d!24795))

(declare-fun d!25123 () Bool)

(assert (=> d!25123 (= (apply!90 lt!46748 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1275 (getValueByKey!149 (toList!760 lt!46748) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3931 () Bool)

(assert (= bs!3931 d!25123))

(assert (=> bs!3931 m!101269))

(assert (=> bs!3931 m!102127))

(assert (=> bs!3931 m!102127))

(declare-fun m!103177 () Bool)

(assert (=> bs!3931 m!103177))

(assert (=> b!94341 d!25123))

(assert (=> b!94341 d!24615))

(declare-fun d!25125 () Bool)

(assert (=> d!25125 (= (apply!90 lt!46919 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!46919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3932 () Bool)

(assert (= bs!3932 d!25125))

(assert (=> bs!3932 m!102589))

(assert (=> bs!3932 m!102589))

(declare-fun m!103179 () Bool)

(assert (=> bs!3932 m!103179))

(assert (=> b!94510 d!25125))

(declare-fun d!25127 () Bool)

(declare-fun e!62116 () Bool)

(assert (=> d!25127 e!62116))

(declare-fun res!48152 () Bool)

(assert (=> d!25127 (=> (not res!48152) (not e!62116))))

(assert (=> d!25127 (= res!48152 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 (_keys!4117 newMap!16)))))))

(declare-fun lt!47399 () Unit!2786)

(declare-fun choose!1 (array!4183 (_ BitVec 32) (_ BitVec 64)) Unit!2786)

(assert (=> d!25127 (= lt!47399 (choose!1 (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun e!62117 () Bool)

(assert (=> d!25127 e!62117))

(declare-fun res!48153 () Bool)

(assert (=> d!25127 (=> (not res!48153) (not e!62117))))

(assert (=> d!25127 (= res!48153 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 (_keys!4117 newMap!16)))))))

(assert (=> d!25127 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!47399)))

(declare-fun b!95229 () Bool)

(assert (=> b!95229 (= e!62117 (bvslt (size!2236 (_keys!4117 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!95227 () Bool)

(declare-fun res!48151 () Bool)

(assert (=> b!95227 (=> (not res!48151) (not e!62117))))

(assert (=> b!95227 (= res!48151 (not (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))))

(declare-fun b!95230 () Bool)

(assert (=> b!95230 (= e!62116 (= (arrayCountValidKeys!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4117 newMap!16) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!95228 () Bool)

(declare-fun res!48150 () Bool)

(assert (=> b!95228 (=> (not res!48150) (not e!62117))))

(assert (=> b!95228 (= res!48150 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25127 res!48153) b!95227))

(assert (= (and b!95227 res!48151) b!95228))

(assert (= (and b!95228 res!48150) b!95229))

(assert (= (and d!25127 res!48152) b!95230))

(assert (=> d!25127 m!101143))

(declare-fun m!103181 () Bool)

(assert (=> d!25127 m!103181))

(declare-fun m!103183 () Bool)

(assert (=> b!95227 m!103183))

(assert (=> b!95227 m!103183))

(declare-fun m!103185 () Bool)

(assert (=> b!95227 m!103185))

(assert (=> b!95230 m!101505))

(assert (=> b!95230 m!101487))

(assert (=> b!95230 m!101339))

(assert (=> b!95228 m!101143))

(assert (=> b!95228 m!101275))

(assert (=> d!24623 d!25127))

(assert (=> d!24623 d!24709))

(assert (=> d!24623 d!24599))

(declare-fun d!25129 () Bool)

(assert (=> d!25129 (arrayContainsKey!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!47400 () Unit!2786)

(assert (=> d!25129 (= lt!47400 (choose!13 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(assert (=> d!25129 (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000)))

(assert (=> d!25129 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))) lt!47400)))

(declare-fun bs!3933 () Bool)

(assert (= bs!3933 d!25129))

(assert (=> bs!3933 m!101143))

(assert (=> bs!3933 m!101491))

(assert (=> bs!3933 m!101143))

(declare-fun m!103187 () Bool)

(assert (=> bs!3933 m!103187))

(assert (=> d!24623 d!25129))

(assert (=> d!24623 d!24671))

(declare-fun b!95231 () Bool)

(declare-fun e!62119 () Bool)

(declare-fun call!9557 () Bool)

(assert (=> b!95231 (= e!62119 call!9557)))

(declare-fun b!95232 () Bool)

(assert (=> b!95232 (= e!62119 call!9557)))

(declare-fun b!95233 () Bool)

(declare-fun e!62118 () Bool)

(assert (=> b!95233 (= e!62118 e!62119)))

(declare-fun c!15980 () Bool)

(assert (=> b!95233 (= c!15980 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) lt!46813)))))

(declare-fun b!95234 () Bool)

(declare-fun e!62120 () Bool)

(assert (=> b!95234 (= e!62120 e!62118)))

(declare-fun res!48156 () Bool)

(assert (=> b!95234 (=> (not res!48156) (not e!62118))))

(declare-fun e!62121 () Bool)

(assert (=> b!95234 (= res!48156 (not e!62121))))

(declare-fun res!48154 () Bool)

(assert (=> b!95234 (=> (not res!48154) (not e!62121))))

(assert (=> b!95234 (= res!48154 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) lt!46813)))))

(declare-fun b!95235 () Bool)

(assert (=> b!95235 (= e!62121 (contains!781 lt!46817 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) lt!46813)))))

(declare-fun bm!9554 () Bool)

(assert (=> bm!9554 (= call!9557 (arrayNoDuplicates!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (bvadd lt!46813 #b00000000000000000000000000000001) (ite c!15980 (Cons!1551 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) lt!46813) lt!46817) lt!46817)))))

(declare-fun d!25131 () Bool)

(declare-fun res!48155 () Bool)

(assert (=> d!25131 (=> res!48155 e!62120)))

(assert (=> d!25131 (= res!48155 (bvsge lt!46813 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(assert (=> d!25131 (= (arrayNoDuplicates!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) lt!46813 lt!46817) e!62120)))

(assert (= (and d!25131 (not res!48155)) b!95234))

(assert (= (and b!95234 res!48154) b!95235))

(assert (= (and b!95234 res!48156) b!95233))

(assert (= (and b!95233 c!15980) b!95231))

(assert (= (and b!95233 (not c!15980)) b!95232))

(assert (= (or b!95231 b!95232) bm!9554))

(declare-fun m!103189 () Bool)

(assert (=> b!95233 m!103189))

(assert (=> b!95233 m!103189))

(declare-fun m!103191 () Bool)

(assert (=> b!95233 m!103191))

(assert (=> b!95234 m!103189))

(assert (=> b!95234 m!103189))

(assert (=> b!95234 m!103191))

(assert (=> b!95235 m!103189))

(assert (=> b!95235 m!103189))

(declare-fun m!103193 () Bool)

(assert (=> b!95235 m!103193))

(assert (=> bm!9554 m!103189))

(declare-fun m!103195 () Bool)

(assert (=> bm!9554 m!103195))

(assert (=> d!24623 d!25131))

(declare-fun d!25133 () Bool)

(declare-fun e!62124 () Bool)

(assert (=> d!25133 e!62124))

(declare-fun res!48159 () Bool)

(assert (=> d!25133 (=> (not res!48159) (not e!62124))))

(assert (=> d!25133 (= res!48159 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 (_keys!4117 newMap!16))) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2237 (_values!2418 newMap!16)))))))

(declare-fun lt!47403 () Unit!2786)

(declare-fun choose!579 (array!4183 array!4185 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2786)

(assert (=> d!25133 (= lt!47403 (choose!579 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!25133 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25133 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!47403)))

(declare-fun b!95238 () Bool)

(assert (=> b!95238 (= e!62124 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))))

(assert (= (and d!25133 res!48159) b!95238))

(assert (=> d!25133 m!101143))

(assert (=> d!25133 m!101165))

(declare-fun m!103197 () Bool)

(assert (=> d!25133 m!103197))

(assert (=> d!25133 m!101529))

(assert (=> b!95238 m!101521))

(assert (=> b!95238 m!101509))

(assert (=> b!95238 m!101281))

(assert (=> b!95238 m!101495))

(assert (=> b!95238 m!101281))

(assert (=> b!95238 m!101505))

(assert (=> d!24623 d!25133))

(declare-fun d!25135 () Bool)

(declare-fun res!48160 () Bool)

(declare-fun e!62125 () Bool)

(assert (=> d!25135 (=> res!48160 e!62125)))

(assert (=> d!25135 (= res!48160 (= (select (arr!1988 lt!46819) #b00000000000000000000000000000000) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25135 (= (arrayContainsKey!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b00000000000000000000000000000000) e!62125)))

(declare-fun b!95239 () Bool)

(declare-fun e!62126 () Bool)

(assert (=> b!95239 (= e!62125 e!62126)))

(declare-fun res!48161 () Bool)

(assert (=> b!95239 (=> (not res!48161) (not e!62126))))

(assert (=> b!95239 (= res!48161 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 lt!46819)))))

(declare-fun b!95240 () Bool)

(assert (=> b!95240 (= e!62126 (arrayContainsKey!0 lt!46819 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25135 (not res!48160)) b!95239))

(assert (= (and b!95239 res!48161) b!95240))

(declare-fun m!103199 () Bool)

(assert (=> d!25135 m!103199))

(assert (=> b!95240 m!101143))

(declare-fun m!103201 () Bool)

(assert (=> b!95240 m!103201))

(assert (=> d!24623 d!25135))

(assert (=> d!24623 d!24979))

(declare-fun d!25137 () Bool)

(declare-fun e!62127 () Bool)

(assert (=> d!25137 e!62127))

(declare-fun res!48162 () Bool)

(assert (=> d!25137 (=> res!48162 e!62127)))

(declare-fun lt!47406 () Bool)

(assert (=> d!25137 (= res!48162 (not lt!47406))))

(declare-fun lt!47405 () Bool)

(assert (=> d!25137 (= lt!47406 lt!47405)))

(declare-fun lt!47404 () Unit!2786)

(declare-fun e!62128 () Unit!2786)

(assert (=> d!25137 (= lt!47404 e!62128)))

(declare-fun c!15981 () Bool)

(assert (=> d!25137 (= c!15981 lt!47405)))

(assert (=> d!25137 (= lt!47405 (containsKey!152 (toList!760 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(assert (=> d!25137 (= (contains!780 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))) lt!47406)))

(declare-fun b!95241 () Bool)

(declare-fun lt!47407 () Unit!2786)

(assert (=> b!95241 (= e!62128 lt!47407)))

(assert (=> b!95241 (= lt!47407 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(assert (=> b!95241 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(declare-fun b!95242 () Bool)

(declare-fun Unit!2840 () Unit!2786)

(assert (=> b!95242 (= e!62128 Unit!2840)))

(declare-fun b!95243 () Bool)

(assert (=> b!95243 (= e!62127 (isDefined!101 (getValueByKey!149 (toList!760 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))))

(assert (= (and d!25137 c!15981) b!95241))

(assert (= (and d!25137 (not c!15981)) b!95242))

(assert (= (and d!25137 (not res!48162)) b!95243))

(assert (=> d!25137 m!101501))

(declare-fun m!103203 () Bool)

(assert (=> d!25137 m!103203))

(assert (=> b!95241 m!101501))

(declare-fun m!103205 () Bool)

(assert (=> b!95241 m!103205))

(assert (=> b!95241 m!101501))

(declare-fun m!103207 () Bool)

(assert (=> b!95241 m!103207))

(assert (=> b!95241 m!103207))

(declare-fun m!103209 () Bool)

(assert (=> b!95241 m!103209))

(assert (=> b!95243 m!101501))

(assert (=> b!95243 m!103207))

(assert (=> b!95243 m!103207))

(assert (=> b!95243 m!103209))

(assert (=> d!24623 d!25137))

(declare-fun e!62133 () Bool)

(declare-fun lt!47419 () ListLongMap!1489)

(declare-fun b!95244 () Bool)

(assert (=> b!95244 (= e!62133 (= (apply!90 lt!47419 (select (arr!1988 lt!46831) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 lt!46829) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95244 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 lt!46829)))))

(assert (=> b!95244 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 lt!46831)))))

(declare-fun b!95245 () Bool)

(declare-fun e!62138 () ListLongMap!1489)

(declare-fun e!62131 () ListLongMap!1489)

(assert (=> b!95245 (= e!62138 e!62131)))

(declare-fun c!15985 () Bool)

(assert (=> b!95245 (= c!15985 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95246 () Bool)

(declare-fun e!62141 () Bool)

(declare-fun call!9561 () Bool)

(assert (=> b!95246 (= e!62141 (not call!9561))))

(declare-fun bm!9555 () Bool)

(assert (=> bm!9555 (= call!9561 (contains!780 lt!47419 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95247 () Bool)

(declare-fun e!62136 () Bool)

(declare-fun e!62129 () Bool)

(assert (=> b!95247 (= e!62136 e!62129)))

(declare-fun c!15982 () Bool)

(assert (=> b!95247 (= c!15982 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95248 () Bool)

(declare-fun e!62140 () Bool)

(assert (=> b!95248 (= e!62140 (validKeyInArray!0 (select (arr!1988 lt!46831) #b00000000000000000000000000000000)))))

(declare-fun b!95249 () Bool)

(declare-fun call!9563 () Bool)

(assert (=> b!95249 (= e!62129 (not call!9563))))

(declare-fun b!95250 () Bool)

(declare-fun e!62139 () Bool)

(assert (=> b!95250 (= e!62139 (= (apply!90 lt!47419 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!25139 () Bool)

(assert (=> d!25139 e!62136))

(declare-fun res!48171 () Bool)

(assert (=> d!25139 (=> (not res!48171) (not e!62136))))

(assert (=> d!25139 (= res!48171 (or (bvsge #b00000000000000000000000000000000 (size!2236 lt!46831)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 lt!46831)))))))

(declare-fun lt!47408 () ListLongMap!1489)

(assert (=> d!25139 (= lt!47419 lt!47408)))

(declare-fun lt!47429 () Unit!2786)

(declare-fun e!62135 () Unit!2786)

(assert (=> d!25139 (= lt!47429 e!62135)))

(declare-fun c!15984 () Bool)

(declare-fun e!62137 () Bool)

(assert (=> d!25139 (= c!15984 e!62137)))

(declare-fun res!48168 () Bool)

(assert (=> d!25139 (=> (not res!48168) (not e!62137))))

(assert (=> d!25139 (= res!48168 (bvslt #b00000000000000000000000000000000 (size!2236 lt!46831)))))

(assert (=> d!25139 (= lt!47408 e!62138)))

(declare-fun c!15986 () Bool)

(assert (=> d!25139 (= c!15986 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25139 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25139 (= (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47419)))

(declare-fun bm!9556 () Bool)

(declare-fun call!9562 () ListLongMap!1489)

(declare-fun call!9558 () ListLongMap!1489)

(assert (=> bm!9556 (= call!9562 call!9558)))

(declare-fun b!95251 () Bool)

(declare-fun e!62130 () Bool)

(assert (=> b!95251 (= e!62141 e!62130)))

(declare-fun res!48170 () Bool)

(assert (=> b!95251 (= res!48170 call!9561)))

(assert (=> b!95251 (=> (not res!48170) (not e!62130))))

(declare-fun bm!9557 () Bool)

(assert (=> bm!9557 (= call!9563 (contains!780 lt!47419 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95252 () Bool)

(declare-fun e!62132 () Bool)

(assert (=> b!95252 (= e!62132 e!62133)))

(declare-fun res!48164 () Bool)

(assert (=> b!95252 (=> (not res!48164) (not e!62133))))

(assert (=> b!95252 (= res!48164 (contains!780 lt!47419 (select (arr!1988 lt!46831) #b00000000000000000000000000000000)))))

(assert (=> b!95252 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 lt!46831)))))

(declare-fun b!95253 () Bool)

(declare-fun c!15983 () Bool)

(assert (=> b!95253 (= c!15983 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!62134 () ListLongMap!1489)

(assert (=> b!95253 (= e!62131 e!62134)))

(declare-fun b!95254 () Bool)

(declare-fun res!48169 () Bool)

(assert (=> b!95254 (=> (not res!48169) (not e!62136))))

(assert (=> b!95254 (= res!48169 e!62141)))

(declare-fun c!15987 () Bool)

(assert (=> b!95254 (= c!15987 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95255 () Bool)

(declare-fun res!48163 () Bool)

(assert (=> b!95255 (=> (not res!48163) (not e!62136))))

(assert (=> b!95255 (= res!48163 e!62132)))

(declare-fun res!48167 () Bool)

(assert (=> b!95255 (=> res!48167 e!62132)))

(assert (=> b!95255 (= res!48167 (not e!62140))))

(declare-fun res!48166 () Bool)

(assert (=> b!95255 (=> (not res!48166) (not e!62140))))

(assert (=> b!95255 (= res!48166 (bvslt #b00000000000000000000000000000000 (size!2236 lt!46831)))))

(declare-fun b!95256 () Bool)

(declare-fun call!9559 () ListLongMap!1489)

(assert (=> b!95256 (= e!62131 call!9559)))

(declare-fun b!95257 () Bool)

(declare-fun call!9564 () ListLongMap!1489)

(assert (=> b!95257 (= e!62138 (+!128 call!9564 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!95258 () Bool)

(assert (=> b!95258 (= e!62130 (= (apply!90 lt!47419 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun bm!9558 () Bool)

(declare-fun call!9560 () ListLongMap!1489)

(assert (=> bm!9558 (= call!9564 (+!128 (ite c!15986 call!9560 (ite c!15985 call!9558 call!9562)) (ite (or c!15986 c!15985) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!95259 () Bool)

(declare-fun lt!47427 () Unit!2786)

(assert (=> b!95259 (= e!62135 lt!47427)))

(declare-fun lt!47409 () ListLongMap!1489)

(assert (=> b!95259 (= lt!47409 (getCurrentListMapNoExtraKeys!93 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47423 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47423 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47415 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47415 (select (arr!1988 lt!46831) #b00000000000000000000000000000000))))

(declare-fun lt!47428 () Unit!2786)

(assert (=> b!95259 (= lt!47428 (addStillContains!66 lt!47409 lt!47423 (zeroValue!2322 newMap!16) lt!47415))))

(assert (=> b!95259 (contains!780 (+!128 lt!47409 (tuple2!2283 lt!47423 (zeroValue!2322 newMap!16))) lt!47415)))

(declare-fun lt!47421 () Unit!2786)

(assert (=> b!95259 (= lt!47421 lt!47428)))

(declare-fun lt!47426 () ListLongMap!1489)

(assert (=> b!95259 (= lt!47426 (getCurrentListMapNoExtraKeys!93 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47418 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47418 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47412 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47412 (select (arr!1988 lt!46831) #b00000000000000000000000000000000))))

(declare-fun lt!47413 () Unit!2786)

(assert (=> b!95259 (= lt!47413 (addApplyDifferent!66 lt!47426 lt!47418 (minValue!2322 newMap!16) lt!47412))))

(assert (=> b!95259 (= (apply!90 (+!128 lt!47426 (tuple2!2283 lt!47418 (minValue!2322 newMap!16))) lt!47412) (apply!90 lt!47426 lt!47412))))

(declare-fun lt!47424 () Unit!2786)

(assert (=> b!95259 (= lt!47424 lt!47413)))

(declare-fun lt!47420 () ListLongMap!1489)

(assert (=> b!95259 (= lt!47420 (getCurrentListMapNoExtraKeys!93 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47410 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47410 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47425 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47425 (select (arr!1988 lt!46831) #b00000000000000000000000000000000))))

(declare-fun lt!47411 () Unit!2786)

(assert (=> b!95259 (= lt!47411 (addApplyDifferent!66 lt!47420 lt!47410 (zeroValue!2322 newMap!16) lt!47425))))

(assert (=> b!95259 (= (apply!90 (+!128 lt!47420 (tuple2!2283 lt!47410 (zeroValue!2322 newMap!16))) lt!47425) (apply!90 lt!47420 lt!47425))))

(declare-fun lt!47417 () Unit!2786)

(assert (=> b!95259 (= lt!47417 lt!47411)))

(declare-fun lt!47422 () ListLongMap!1489)

(assert (=> b!95259 (= lt!47422 (getCurrentListMapNoExtraKeys!93 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47414 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47414 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47416 () (_ BitVec 64))

(assert (=> b!95259 (= lt!47416 (select (arr!1988 lt!46831) #b00000000000000000000000000000000))))

(assert (=> b!95259 (= lt!47427 (addApplyDifferent!66 lt!47422 lt!47414 (minValue!2322 newMap!16) lt!47416))))

(assert (=> b!95259 (= (apply!90 (+!128 lt!47422 (tuple2!2283 lt!47414 (minValue!2322 newMap!16))) lt!47416) (apply!90 lt!47422 lt!47416))))

(declare-fun bm!9559 () Bool)

(assert (=> bm!9559 (= call!9558 call!9560)))

(declare-fun b!95260 () Bool)

(assert (=> b!95260 (= e!62134 call!9559)))

(declare-fun b!95261 () Bool)

(assert (=> b!95261 (= e!62134 call!9562)))

(declare-fun bm!9560 () Bool)

(assert (=> bm!9560 (= call!9559 call!9564)))

(declare-fun b!95262 () Bool)

(assert (=> b!95262 (= e!62129 e!62139)))

(declare-fun res!48165 () Bool)

(assert (=> b!95262 (= res!48165 call!9563)))

(assert (=> b!95262 (=> (not res!48165) (not e!62139))))

(declare-fun bm!9561 () Bool)

(assert (=> bm!9561 (= call!9560 (getCurrentListMapNoExtraKeys!93 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95263 () Bool)

(assert (=> b!95263 (= e!62137 (validKeyInArray!0 (select (arr!1988 lt!46831) #b00000000000000000000000000000000)))))

(declare-fun b!95264 () Bool)

(declare-fun Unit!2841 () Unit!2786)

(assert (=> b!95264 (= e!62135 Unit!2841)))

(assert (= (and d!25139 c!15986) b!95257))

(assert (= (and d!25139 (not c!15986)) b!95245))

(assert (= (and b!95245 c!15985) b!95256))

(assert (= (and b!95245 (not c!15985)) b!95253))

(assert (= (and b!95253 c!15983) b!95260))

(assert (= (and b!95253 (not c!15983)) b!95261))

(assert (= (or b!95260 b!95261) bm!9556))

(assert (= (or b!95256 bm!9556) bm!9559))

(assert (= (or b!95256 b!95260) bm!9560))

(assert (= (or b!95257 bm!9559) bm!9561))

(assert (= (or b!95257 bm!9560) bm!9558))

(assert (= (and d!25139 res!48168) b!95263))

(assert (= (and d!25139 c!15984) b!95259))

(assert (= (and d!25139 (not c!15984)) b!95264))

(assert (= (and d!25139 res!48171) b!95255))

(assert (= (and b!95255 res!48166) b!95248))

(assert (= (and b!95255 (not res!48167)) b!95252))

(assert (= (and b!95252 res!48164) b!95244))

(assert (= (and b!95255 res!48163) b!95254))

(assert (= (and b!95254 c!15987) b!95251))

(assert (= (and b!95254 (not c!15987)) b!95246))

(assert (= (and b!95251 res!48170) b!95258))

(assert (= (or b!95251 b!95246) bm!9555))

(assert (= (and b!95254 res!48169) b!95247))

(assert (= (and b!95247 c!15982) b!95262))

(assert (= (and b!95247 (not c!15982)) b!95249))

(assert (= (and b!95262 res!48165) b!95250))

(assert (= (or b!95262 b!95249) bm!9557))

(declare-fun b_lambda!4195 () Bool)

(assert (=> (not b_lambda!4195) (not b!95244)))

(assert (=> b!95244 t!5461))

(declare-fun b_and!5821 () Bool)

(assert (= b_and!5817 (and (=> t!5461 result!3197) b_and!5821)))

(assert (=> b!95244 t!5463))

(declare-fun b_and!5823 () Bool)

(assert (= b_and!5819 (and (=> t!5463 result!3199) b_and!5823)))

(declare-fun m!103211 () Bool)

(assert (=> b!95257 m!103211))

(declare-fun m!103213 () Bool)

(assert (=> b!95250 m!103213))

(assert (=> d!25139 m!101529))

(declare-fun m!103215 () Bool)

(assert (=> bm!9558 m!103215))

(declare-fun m!103217 () Bool)

(assert (=> b!95244 m!103217))

(assert (=> b!95244 m!101717))

(declare-fun m!103219 () Bool)

(assert (=> b!95244 m!103219))

(assert (=> b!95244 m!101717))

(assert (=> b!95244 m!103217))

(declare-fun m!103221 () Bool)

(assert (=> b!95244 m!103221))

(assert (=> b!95244 m!103221))

(declare-fun m!103223 () Bool)

(assert (=> b!95244 m!103223))

(declare-fun m!103225 () Bool)

(assert (=> bm!9557 m!103225))

(declare-fun m!103227 () Bool)

(assert (=> bm!9555 m!103227))

(declare-fun m!103229 () Bool)

(assert (=> b!95259 m!103229))

(declare-fun m!103231 () Bool)

(assert (=> b!95259 m!103231))

(declare-fun m!103233 () Bool)

(assert (=> b!95259 m!103233))

(declare-fun m!103235 () Bool)

(assert (=> b!95259 m!103235))

(declare-fun m!103237 () Bool)

(assert (=> b!95259 m!103237))

(declare-fun m!103239 () Bool)

(assert (=> b!95259 m!103239))

(declare-fun m!103241 () Bool)

(assert (=> b!95259 m!103241))

(declare-fun m!103243 () Bool)

(assert (=> b!95259 m!103243))

(assert (=> b!95259 m!103221))

(declare-fun m!103245 () Bool)

(assert (=> b!95259 m!103245))

(declare-fun m!103247 () Bool)

(assert (=> b!95259 m!103247))

(declare-fun m!103249 () Bool)

(assert (=> b!95259 m!103249))

(assert (=> b!95259 m!103239))

(declare-fun m!103251 () Bool)

(assert (=> b!95259 m!103251))

(assert (=> b!95259 m!103231))

(declare-fun m!103253 () Bool)

(assert (=> b!95259 m!103253))

(assert (=> b!95259 m!103241))

(declare-fun m!103255 () Bool)

(assert (=> b!95259 m!103255))

(declare-fun m!103257 () Bool)

(assert (=> b!95259 m!103257))

(assert (=> b!95259 m!103233))

(declare-fun m!103259 () Bool)

(assert (=> b!95259 m!103259))

(assert (=> b!95248 m!103221))

(assert (=> b!95248 m!103221))

(declare-fun m!103261 () Bool)

(assert (=> b!95248 m!103261))

(assert (=> b!95252 m!103221))

(assert (=> b!95252 m!103221))

(declare-fun m!103263 () Bool)

(assert (=> b!95252 m!103263))

(assert (=> b!95263 m!103221))

(assert (=> b!95263 m!103221))

(assert (=> b!95263 m!103261))

(assert (=> bm!9561 m!103255))

(declare-fun m!103265 () Bool)

(assert (=> b!95258 m!103265))

(assert (=> d!24623 d!25139))

(declare-fun b!95265 () Bool)

(declare-fun e!62142 () (_ BitVec 32))

(declare-fun call!9565 () (_ BitVec 32))

(assert (=> b!95265 (= e!62142 (bvadd #b00000000000000000000000000000001 call!9565))))

(declare-fun b!95266 () Bool)

(declare-fun e!62143 () (_ BitVec 32))

(assert (=> b!95266 (= e!62143 #b00000000000000000000000000000000)))

(declare-fun lt!47430 () (_ BitVec 32))

(declare-fun d!25141 () Bool)

(assert (=> d!25141 (and (bvsge lt!47430 #b00000000000000000000000000000000) (bvsle lt!47430 (bvsub (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!25141 (= lt!47430 e!62143)))

(declare-fun c!15989 () Bool)

(assert (=> d!25141 (= c!15989 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25141 (and (bvsle #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2236 (_keys!4117 newMap!16)) (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(assert (=> d!25141 (= (arrayCountValidKeys!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) lt!47430)))

(declare-fun b!95267 () Bool)

(assert (=> b!95267 (= e!62142 call!9565)))

(declare-fun b!95268 () Bool)

(assert (=> b!95268 (= e!62143 e!62142)))

(declare-fun c!15988 () Bool)

(assert (=> b!95268 (= c!15988 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9562 () Bool)

(assert (=> bm!9562 (= call!9565 (arrayCountValidKeys!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2236 (_keys!4117 newMap!16))))))

(assert (= (and d!25141 c!15989) b!95266))

(assert (= (and d!25141 (not c!15989)) b!95268))

(assert (= (and b!95268 c!15988) b!95265))

(assert (= (and b!95268 (not c!15988)) b!95267))

(assert (= (or b!95265 b!95267) bm!9562))

(declare-fun m!103267 () Bool)

(assert (=> b!95268 m!103267))

(assert (=> b!95268 m!103267))

(declare-fun m!103269 () Bool)

(assert (=> b!95268 m!103269))

(declare-fun m!103271 () Bool)

(assert (=> bm!9562 m!103271))

(assert (=> d!24623 d!25141))

(declare-fun d!25143 () Bool)

(declare-fun e!62146 () Bool)

(assert (=> d!25143 e!62146))

(declare-fun res!48174 () Bool)

(assert (=> d!25143 (=> (not res!48174) (not e!62146))))

(assert (=> d!25143 (= res!48174 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 (_keys!4117 newMap!16)))))))

(declare-fun lt!47433 () Unit!2786)

(declare-fun choose!41 (array!4183 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1555) Unit!2786)

(assert (=> d!25143 (= lt!47433 (choose!41 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) lt!46813 lt!46817))))

(assert (=> d!25143 (bvslt (size!2236 (_keys!4117 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!25143 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4117 newMap!16) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) lt!46813 lt!46817) lt!47433)))

(declare-fun b!95271 () Bool)

(assert (=> b!95271 (= e!62146 (arrayNoDuplicates!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) lt!46813 lt!46817))))

(assert (= (and d!25143 res!48174) b!95271))

(assert (=> d!25143 m!101143))

(declare-fun m!103273 () Bool)

(assert (=> d!25143 m!103273))

(assert (=> b!95271 m!101505))

(assert (=> b!95271 m!101515))

(assert (=> d!24623 d!25143))

(declare-fun d!25145 () Bool)

(assert (=> d!25145 (= (arrayCountValidKeys!0 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!47436 () Unit!2786)

(declare-fun choose!2 (array!4183 (_ BitVec 32)) Unit!2786)

(assert (=> d!25145 (= lt!47436 (choose!2 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))))))

(declare-fun e!62149 () Bool)

(assert (=> d!25145 e!62149))

(declare-fun res!48179 () Bool)

(assert (=> d!25145 (=> (not res!48179) (not e!62149))))

(assert (=> d!25145 (= res!48179 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 lt!46815))))))

(assert (=> d!25145 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692))) lt!47436)))

(declare-fun b!95276 () Bool)

(declare-fun res!48180 () Bool)

(assert (=> b!95276 (=> (not res!48180) (not e!62149))))

(assert (=> b!95276 (= res!48180 (validKeyInArray!0 (select (arr!1988 lt!46815) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(declare-fun b!95277 () Bool)

(assert (=> b!95277 (= e!62149 (bvslt (size!2236 lt!46815) #b01111111111111111111111111111111))))

(assert (= (and d!25145 res!48179) b!95276))

(assert (= (and b!95276 res!48180) b!95277))

(assert (=> d!25145 m!101523))

(declare-fun m!103275 () Bool)

(assert (=> d!25145 m!103275))

(declare-fun m!103277 () Bool)

(assert (=> b!95276 m!103277))

(assert (=> b!95276 m!103277))

(declare-fun m!103279 () Bool)

(assert (=> b!95276 m!103279))

(assert (=> d!24623 d!25145))

(assert (=> d!24623 d!24969))

(declare-fun e!62154 () Bool)

(declare-fun b!95278 () Bool)

(declare-fun lt!47448 () ListLongMap!1489)

(assert (=> b!95278 (= e!62154 (= (apply!90 lt!47448 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95278 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))))))

(assert (=> b!95278 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun b!95279 () Bool)

(declare-fun e!62159 () ListLongMap!1489)

(declare-fun e!62152 () ListLongMap!1489)

(assert (=> b!95279 (= e!62159 e!62152)))

(declare-fun c!15993 () Bool)

(assert (=> b!95279 (= c!15993 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95280 () Bool)

(declare-fun e!62162 () Bool)

(declare-fun call!9569 () Bool)

(assert (=> b!95280 (= e!62162 (not call!9569))))

(declare-fun bm!9563 () Bool)

(assert (=> bm!9563 (= call!9569 (contains!780 lt!47448 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95281 () Bool)

(declare-fun e!62157 () Bool)

(declare-fun e!62150 () Bool)

(assert (=> b!95281 (= e!62157 e!62150)))

(declare-fun c!15990 () Bool)

(assert (=> b!95281 (= c!15990 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95282 () Bool)

(declare-fun e!62161 () Bool)

(assert (=> b!95282 (= e!62161 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95283 () Bool)

(declare-fun call!9571 () Bool)

(assert (=> b!95283 (= e!62150 (not call!9571))))

(declare-fun b!95284 () Bool)

(declare-fun e!62160 () Bool)

(assert (=> b!95284 (= e!62160 (= (apply!90 lt!47448 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun d!25147 () Bool)

(assert (=> d!25147 e!62157))

(declare-fun res!48189 () Bool)

(assert (=> d!25147 (=> (not res!48189) (not e!62157))))

(assert (=> d!25147 (= res!48189 (or (bvsge #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))))

(declare-fun lt!47437 () ListLongMap!1489)

(assert (=> d!25147 (= lt!47448 lt!47437)))

(declare-fun lt!47458 () Unit!2786)

(declare-fun e!62156 () Unit!2786)

(assert (=> d!25147 (= lt!47458 e!62156)))

(declare-fun c!15992 () Bool)

(declare-fun e!62158 () Bool)

(assert (=> d!25147 (= c!15992 e!62158)))

(declare-fun res!48186 () Bool)

(assert (=> d!25147 (=> (not res!48186) (not e!62158))))

(assert (=> d!25147 (= res!48186 (bvslt #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(assert (=> d!25147 (= lt!47437 e!62159)))

(declare-fun c!15994 () Bool)

(assert (=> d!25147 (= c!15994 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25147 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25147 (= (getCurrentListMap!450 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47448)))

(declare-fun bm!9564 () Bool)

(declare-fun call!9570 () ListLongMap!1489)

(declare-fun call!9566 () ListLongMap!1489)

(assert (=> bm!9564 (= call!9570 call!9566)))

(declare-fun b!95285 () Bool)

(declare-fun e!62151 () Bool)

(assert (=> b!95285 (= e!62162 e!62151)))

(declare-fun res!48188 () Bool)

(assert (=> b!95285 (= res!48188 call!9569)))

(assert (=> b!95285 (=> (not res!48188) (not e!62151))))

(declare-fun bm!9565 () Bool)

(assert (=> bm!9565 (= call!9571 (contains!780 lt!47448 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95286 () Bool)

(declare-fun e!62153 () Bool)

(assert (=> b!95286 (= e!62153 e!62154)))

(declare-fun res!48182 () Bool)

(assert (=> b!95286 (=> (not res!48182) (not e!62154))))

(assert (=> b!95286 (= res!48182 (contains!780 lt!47448 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!95286 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun b!95287 () Bool)

(declare-fun c!15991 () Bool)

(assert (=> b!95287 (= c!15991 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!62155 () ListLongMap!1489)

(assert (=> b!95287 (= e!62152 e!62155)))

(declare-fun b!95288 () Bool)

(declare-fun res!48187 () Bool)

(assert (=> b!95288 (=> (not res!48187) (not e!62157))))

(assert (=> b!95288 (= res!48187 e!62162)))

(declare-fun c!15995 () Bool)

(assert (=> b!95288 (= c!15995 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95289 () Bool)

(declare-fun res!48181 () Bool)

(assert (=> b!95289 (=> (not res!48181) (not e!62157))))

(assert (=> b!95289 (= res!48181 e!62153)))

(declare-fun res!48185 () Bool)

(assert (=> b!95289 (=> res!48185 e!62153)))

(assert (=> b!95289 (= res!48185 (not e!62161))))

(declare-fun res!48184 () Bool)

(assert (=> b!95289 (=> (not res!48184) (not e!62161))))

(assert (=> b!95289 (= res!48184 (bvslt #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun b!95290 () Bool)

(declare-fun call!9567 () ListLongMap!1489)

(assert (=> b!95290 (= e!62152 call!9567)))

(declare-fun b!95291 () Bool)

(declare-fun call!9572 () ListLongMap!1489)

(assert (=> b!95291 (= e!62159 (+!128 call!9572 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun b!95292 () Bool)

(assert (=> b!95292 (= e!62151 (= (apply!90 lt!47448 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun call!9568 () ListLongMap!1489)

(declare-fun bm!9566 () Bool)

(assert (=> bm!9566 (= call!9572 (+!128 (ite c!15994 call!9568 (ite c!15993 call!9566 call!9570)) (ite (or c!15994 c!15993) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun b!95293 () Bool)

(declare-fun lt!47456 () Unit!2786)

(assert (=> b!95293 (= e!62156 lt!47456)))

(declare-fun lt!47438 () ListLongMap!1489)

(assert (=> b!95293 (= lt!47438 (getCurrentListMapNoExtraKeys!93 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47452 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47452 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47444 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47444 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47457 () Unit!2786)

(assert (=> b!95293 (= lt!47457 (addStillContains!66 lt!47438 lt!47452 (zeroValue!2322 newMap!16) lt!47444))))

(assert (=> b!95293 (contains!780 (+!128 lt!47438 (tuple2!2283 lt!47452 (zeroValue!2322 newMap!16))) lt!47444)))

(declare-fun lt!47450 () Unit!2786)

(assert (=> b!95293 (= lt!47450 lt!47457)))

(declare-fun lt!47455 () ListLongMap!1489)

(assert (=> b!95293 (= lt!47455 (getCurrentListMapNoExtraKeys!93 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47447 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47447 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47441 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47441 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47442 () Unit!2786)

(assert (=> b!95293 (= lt!47442 (addApplyDifferent!66 lt!47455 lt!47447 (minValue!2322 newMap!16) lt!47441))))

(assert (=> b!95293 (= (apply!90 (+!128 lt!47455 (tuple2!2283 lt!47447 (minValue!2322 newMap!16))) lt!47441) (apply!90 lt!47455 lt!47441))))

(declare-fun lt!47453 () Unit!2786)

(assert (=> b!95293 (= lt!47453 lt!47442)))

(declare-fun lt!47449 () ListLongMap!1489)

(assert (=> b!95293 (= lt!47449 (getCurrentListMapNoExtraKeys!93 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47439 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47439 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47454 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47454 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47440 () Unit!2786)

(assert (=> b!95293 (= lt!47440 (addApplyDifferent!66 lt!47449 lt!47439 (zeroValue!2322 newMap!16) lt!47454))))

(assert (=> b!95293 (= (apply!90 (+!128 lt!47449 (tuple2!2283 lt!47439 (zeroValue!2322 newMap!16))) lt!47454) (apply!90 lt!47449 lt!47454))))

(declare-fun lt!47446 () Unit!2786)

(assert (=> b!95293 (= lt!47446 lt!47440)))

(declare-fun lt!47451 () ListLongMap!1489)

(assert (=> b!95293 (= lt!47451 (getCurrentListMapNoExtraKeys!93 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47443 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47443 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47445 () (_ BitVec 64))

(assert (=> b!95293 (= lt!47445 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!95293 (= lt!47456 (addApplyDifferent!66 lt!47451 lt!47443 (minValue!2322 newMap!16) lt!47445))))

(assert (=> b!95293 (= (apply!90 (+!128 lt!47451 (tuple2!2283 lt!47443 (minValue!2322 newMap!16))) lt!47445) (apply!90 lt!47451 lt!47445))))

(declare-fun bm!9567 () Bool)

(assert (=> bm!9567 (= call!9566 call!9568)))

(declare-fun b!95294 () Bool)

(assert (=> b!95294 (= e!62155 call!9567)))

(declare-fun b!95295 () Bool)

(assert (=> b!95295 (= e!62155 call!9570)))

(declare-fun bm!9568 () Bool)

(assert (=> bm!9568 (= call!9567 call!9572)))

(declare-fun b!95296 () Bool)

(assert (=> b!95296 (= e!62150 e!62160)))

(declare-fun res!48183 () Bool)

(assert (=> b!95296 (= res!48183 call!9571)))

(assert (=> b!95296 (=> (not res!48183) (not e!62160))))

(declare-fun bm!9569 () Bool)

(assert (=> bm!9569 (= call!9568 (getCurrentListMapNoExtraKeys!93 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95297 () Bool)

(assert (=> b!95297 (= e!62158 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95298 () Bool)

(declare-fun Unit!2842 () Unit!2786)

(assert (=> b!95298 (= e!62156 Unit!2842)))

(assert (= (and d!25147 c!15994) b!95291))

(assert (= (and d!25147 (not c!15994)) b!95279))

(assert (= (and b!95279 c!15993) b!95290))

(assert (= (and b!95279 (not c!15993)) b!95287))

(assert (= (and b!95287 c!15991) b!95294))

(assert (= (and b!95287 (not c!15991)) b!95295))

(assert (= (or b!95294 b!95295) bm!9564))

(assert (= (or b!95290 bm!9564) bm!9567))

(assert (= (or b!95290 b!95294) bm!9568))

(assert (= (or b!95291 bm!9567) bm!9569))

(assert (= (or b!95291 bm!9568) bm!9566))

(assert (= (and d!25147 res!48186) b!95297))

(assert (= (and d!25147 c!15992) b!95293))

(assert (= (and d!25147 (not c!15992)) b!95298))

(assert (= (and d!25147 res!48189) b!95289))

(assert (= (and b!95289 res!48184) b!95282))

(assert (= (and b!95289 (not res!48185)) b!95286))

(assert (= (and b!95286 res!48182) b!95278))

(assert (= (and b!95289 res!48181) b!95288))

(assert (= (and b!95288 c!15995) b!95285))

(assert (= (and b!95288 (not c!15995)) b!95280))

(assert (= (and b!95285 res!48188) b!95292))

(assert (= (or b!95285 b!95280) bm!9563))

(assert (= (and b!95288 res!48187) b!95281))

(assert (= (and b!95281 c!15990) b!95296))

(assert (= (and b!95281 (not c!15990)) b!95283))

(assert (= (and b!95296 res!48183) b!95284))

(assert (= (or b!95296 b!95283) bm!9565))

(declare-fun b_lambda!4197 () Bool)

(assert (=> (not b_lambda!4197) (not b!95278)))

(assert (=> b!95278 t!5461))

(declare-fun b_and!5825 () Bool)

(assert (= b_and!5821 (and (=> t!5461 result!3197) b_and!5825)))

(assert (=> b!95278 t!5463))

(declare-fun b_and!5827 () Bool)

(assert (= b_and!5823 (and (=> t!5463 result!3199) b_and!5827)))

(declare-fun m!103281 () Bool)

(assert (=> b!95291 m!103281))

(declare-fun m!103283 () Bool)

(assert (=> b!95284 m!103283))

(assert (=> d!25147 m!101529))

(declare-fun m!103285 () Bool)

(assert (=> bm!9566 m!103285))

(declare-fun m!103287 () Bool)

(assert (=> b!95278 m!103287))

(assert (=> b!95278 m!101717))

(declare-fun m!103289 () Bool)

(assert (=> b!95278 m!103289))

(assert (=> b!95278 m!101717))

(assert (=> b!95278 m!103287))

(assert (=> b!95278 m!103267))

(assert (=> b!95278 m!103267))

(declare-fun m!103291 () Bool)

(assert (=> b!95278 m!103291))

(declare-fun m!103293 () Bool)

(assert (=> bm!9565 m!103293))

(declare-fun m!103295 () Bool)

(assert (=> bm!9563 m!103295))

(declare-fun m!103297 () Bool)

(assert (=> b!95293 m!103297))

(declare-fun m!103299 () Bool)

(assert (=> b!95293 m!103299))

(declare-fun m!103301 () Bool)

(assert (=> b!95293 m!103301))

(declare-fun m!103303 () Bool)

(assert (=> b!95293 m!103303))

(declare-fun m!103305 () Bool)

(assert (=> b!95293 m!103305))

(declare-fun m!103307 () Bool)

(assert (=> b!95293 m!103307))

(declare-fun m!103309 () Bool)

(assert (=> b!95293 m!103309))

(declare-fun m!103311 () Bool)

(assert (=> b!95293 m!103311))

(assert (=> b!95293 m!103267))

(declare-fun m!103313 () Bool)

(assert (=> b!95293 m!103313))

(declare-fun m!103315 () Bool)

(assert (=> b!95293 m!103315))

(declare-fun m!103317 () Bool)

(assert (=> b!95293 m!103317))

(assert (=> b!95293 m!103307))

(declare-fun m!103319 () Bool)

(assert (=> b!95293 m!103319))

(assert (=> b!95293 m!103299))

(declare-fun m!103321 () Bool)

(assert (=> b!95293 m!103321))

(assert (=> b!95293 m!103309))

(declare-fun m!103323 () Bool)

(assert (=> b!95293 m!103323))

(declare-fun m!103325 () Bool)

(assert (=> b!95293 m!103325))

(assert (=> b!95293 m!103301))

(declare-fun m!103327 () Bool)

(assert (=> b!95293 m!103327))

(assert (=> b!95282 m!103267))

(assert (=> b!95282 m!103267))

(assert (=> b!95282 m!103269))

(assert (=> b!95286 m!103267))

(assert (=> b!95286 m!103267))

(declare-fun m!103329 () Bool)

(assert (=> b!95286 m!103329))

(assert (=> b!95297 m!103267))

(assert (=> b!95297 m!103267))

(assert (=> b!95297 m!103269))

(assert (=> bm!9569 m!103323))

(declare-fun m!103331 () Bool)

(assert (=> b!95292 m!103331))

(assert (=> d!24623 d!25147))

(declare-fun b!95299 () Bool)

(declare-fun e!62163 () (_ BitVec 32))

(declare-fun call!9573 () (_ BitVec 32))

(assert (=> b!95299 (= e!62163 (bvadd #b00000000000000000000000000000001 call!9573))))

(declare-fun b!95300 () Bool)

(declare-fun e!62164 () (_ BitVec 32))

(assert (=> b!95300 (= e!62164 #b00000000000000000000000000000000)))

(declare-fun d!25149 () Bool)

(declare-fun lt!47459 () (_ BitVec 32))

(assert (=> d!25149 (and (bvsge lt!47459 #b00000000000000000000000000000000) (bvsle lt!47459 (bvsub (size!2236 lt!46815) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(assert (=> d!25149 (= lt!47459 e!62164)))

(declare-fun c!15997 () Bool)

(assert (=> d!25149 (= c!15997 (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)))))

(assert (=> d!25149 (and (bvsle (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)) (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001) (size!2236 lt!46815)))))

(assert (=> d!25149 (= (arrayCountValidKeys!0 lt!46815 (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)) lt!47459)))

(declare-fun b!95301 () Bool)

(assert (=> b!95301 (= e!62163 call!9573)))

(declare-fun b!95302 () Bool)

(assert (=> b!95302 (= e!62164 e!62163)))

(declare-fun c!15996 () Bool)

(assert (=> b!95302 (= c!15996 (validKeyInArray!0 (select (arr!1988 lt!46815) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(declare-fun bm!9570 () Bool)

(assert (=> bm!9570 (= call!9573 (arrayCountValidKeys!0 lt!46815 (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001) (bvadd (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000001)))))

(assert (= (and d!25149 c!15997) b!95300))

(assert (= (and d!25149 (not c!15997)) b!95302))

(assert (= (and b!95302 c!15996) b!95299))

(assert (= (and b!95302 (not c!15996)) b!95301))

(assert (= (or b!95299 b!95301) bm!9570))

(assert (=> b!95302 m!103277))

(assert (=> b!95302 m!103277))

(assert (=> b!95302 m!103279))

(declare-fun m!103333 () Bool)

(assert (=> bm!9570 m!103333))

(assert (=> d!24623 d!25149))

(assert (=> d!24623 d!24681))

(declare-fun d!25151 () Bool)

(declare-fun e!62165 () Bool)

(assert (=> d!25151 e!62165))

(declare-fun res!48190 () Bool)

(assert (=> d!25151 (=> (not res!48190) (not e!62165))))

(assert (=> d!25151 (= res!48190 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 lt!46831))))))

(declare-fun lt!47460 () Unit!2786)

(assert (=> d!25151 (= lt!47460 (choose!573 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!25151 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25151 (= (lemmaValidKeyInArrayIsInListMap!99 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (defaultEntry!2435 newMap!16)) lt!47460)))

(declare-fun b!95303 () Bool)

(assert (=> b!95303 (= e!62165 (contains!780 (getCurrentListMap!450 lt!46831 lt!46829 (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1988 lt!46831) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)))))))

(assert (= (and d!25151 res!48190) b!95303))

(declare-fun m!103335 () Bool)

(assert (=> d!25151 m!103335))

(assert (=> d!25151 m!101529))

(assert (=> b!95303 m!101499))

(declare-fun m!103337 () Bool)

(assert (=> b!95303 m!103337))

(assert (=> b!95303 m!101499))

(assert (=> b!95303 m!103337))

(declare-fun m!103339 () Bool)

(assert (=> b!95303 m!103339))

(assert (=> d!24623 d!25151))

(declare-fun d!25153 () Bool)

(declare-fun e!62168 () Bool)

(assert (=> d!25153 e!62168))

(declare-fun res!48193 () Bool)

(assert (=> d!25153 (=> (not res!48193) (not e!62168))))

(assert (=> d!25153 (= res!48193 (and (bvsge (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) #b00000000000000000000000000000000) (bvslt (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (size!2236 (_keys!4117 newMap!16)))))))

(declare-fun lt!47463 () Unit!2786)

(declare-fun choose!102 ((_ BitVec 64) array!4183 (_ BitVec 32) (_ BitVec 32)) Unit!2786)

(assert (=> d!25153 (= lt!47463 (choose!102 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (mask!6510 newMap!16)))))

(assert (=> d!25153 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25153 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (mask!6510 newMap!16)) lt!47463)))

(declare-fun b!95306 () Bool)

(assert (=> b!95306 (= e!62168 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (mask!6510 newMap!16)))))

(assert (= (and d!25153 res!48193) b!95306))

(assert (=> d!25153 m!101143))

(declare-fun m!103341 () Bool)

(assert (=> d!25153 m!103341))

(assert (=> d!25153 m!101529))

(assert (=> b!95306 m!101505))

(assert (=> b!95306 m!101511))

(assert (=> d!24623 d!25153))

(declare-fun b!95307 () Bool)

(declare-fun e!62169 () Bool)

(declare-fun e!62171 () Bool)

(assert (=> b!95307 (= e!62169 e!62171)))

(declare-fun lt!47464 () (_ BitVec 64))

(assert (=> b!95307 (= lt!47464 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47465 () Unit!2786)

(assert (=> b!95307 (= lt!47465 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) lt!47464 #b00000000000000000000000000000000))))

(assert (=> b!95307 (arrayContainsKey!0 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) lt!47464 #b00000000000000000000000000000000)))

(declare-fun lt!47466 () Unit!2786)

(assert (=> b!95307 (= lt!47466 lt!47465)))

(declare-fun res!48195 () Bool)

(assert (=> b!95307 (= res!48195 (= (seekEntryOrOpen!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000) (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (mask!6510 newMap!16)) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!95307 (=> (not res!48195) (not e!62171))))

(declare-fun bm!9571 () Bool)

(declare-fun call!9574 () Bool)

(assert (=> bm!9571 (= call!9574 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (mask!6510 newMap!16)))))

(declare-fun d!25155 () Bool)

(declare-fun res!48194 () Bool)

(declare-fun e!62170 () Bool)

(assert (=> d!25155 (=> res!48194 e!62170)))

(assert (=> d!25155 (= res!48194 (bvsge #b00000000000000000000000000000000 (size!2236 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))))))))

(assert (=> d!25155 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16))) (mask!6510 newMap!16)) e!62170)))

(declare-fun b!95308 () Bool)

(assert (=> b!95308 (= e!62170 e!62169)))

(declare-fun c!15998 () Bool)

(assert (=> b!95308 (= c!15998 (validKeyInArray!0 (select (arr!1988 (array!4184 (store (arr!1988 (_keys!4117 newMap!16)) (ite c!15712 (index!3124 lt!46692) (index!3121 lt!46692)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (size!2236 (_keys!4117 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95309 () Bool)

(assert (=> b!95309 (= e!62171 call!9574)))

(declare-fun b!95310 () Bool)

(assert (=> b!95310 (= e!62169 call!9574)))

(assert (= (and d!25155 (not res!48194)) b!95308))

(assert (= (and b!95308 c!15998) b!95307))

(assert (= (and b!95308 (not c!15998)) b!95310))

(assert (= (and b!95307 res!48195) b!95309))

(assert (= (or b!95309 b!95310) bm!9571))

(assert (=> b!95307 m!103267))

(declare-fun m!103343 () Bool)

(assert (=> b!95307 m!103343))

(declare-fun m!103345 () Bool)

(assert (=> b!95307 m!103345))

(assert (=> b!95307 m!103267))

(declare-fun m!103347 () Bool)

(assert (=> b!95307 m!103347))

(declare-fun m!103349 () Bool)

(assert (=> bm!9571 m!103349))

(assert (=> b!95308 m!103267))

(assert (=> b!95308 m!103267))

(assert (=> b!95308 m!103269))

(assert (=> d!24623 d!25155))

(declare-fun d!25157 () Bool)

(declare-fun c!15999 () Bool)

(assert (=> d!25157 (= c!15999 (and ((_ is Cons!1550) (toList!760 lt!46850)) (= (_1!1152 (h!2142 (toList!760 lt!46850))) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62172 () Option!155)

(assert (=> d!25157 (= (getValueByKey!149 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62172)))

(declare-fun b!95312 () Bool)

(declare-fun e!62173 () Option!155)

(assert (=> b!95312 (= e!62172 e!62173)))

(declare-fun c!16000 () Bool)

(assert (=> b!95312 (= c!16000 (and ((_ is Cons!1550) (toList!760 lt!46850)) (not (= (_1!1152 (h!2142 (toList!760 lt!46850))) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95314 () Bool)

(assert (=> b!95314 (= e!62173 None!153)))

(declare-fun b!95311 () Bool)

(assert (=> b!95311 (= e!62172 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46850)))))))

(declare-fun b!95313 () Bool)

(assert (=> b!95313 (= e!62173 (getValueByKey!149 (t!5448 (toList!760 lt!46850)) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25157 c!15999) b!95311))

(assert (= (and d!25157 (not c!15999)) b!95312))

(assert (= (and b!95312 c!16000) b!95313))

(assert (= (and b!95312 (not c!16000)) b!95314))

(declare-fun m!103351 () Bool)

(assert (=> b!95313 m!103351))

(assert (=> b!94408 d!25157))

(declare-fun b!95315 () Bool)

(declare-fun e!62174 () Bool)

(declare-fun e!62176 () Bool)

(assert (=> b!95315 (= e!62174 e!62176)))

(declare-fun lt!47467 () (_ BitVec 64))

(assert (=> b!95315 (= lt!47467 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!47468 () Unit!2786)

(assert (=> b!95315 (= lt!47468 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) lt!47467 #b00000000000000000000000000000000))))

(assert (=> b!95315 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) lt!47467 #b00000000000000000000000000000000)))

(declare-fun lt!47469 () Unit!2786)

(assert (=> b!95315 (= lt!47469 lt!47468)))

(declare-fun res!48197 () Bool)

(assert (=> b!95315 (= res!48197 (= (seekEntryOrOpen!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000) (_keys!4117 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992)))) (Found!245 #b00000000000000000000000000000000)))))

(assert (=> b!95315 (=> (not res!48197) (not e!62176))))

(declare-fun bm!9572 () Bool)

(declare-fun call!9575 () Bool)

(assert (=> bm!9572 (= call!9575 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4117 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992)))))))

(declare-fun d!25159 () Bool)

(declare-fun res!48196 () Bool)

(declare-fun e!62175 () Bool)

(assert (=> d!25159 (=> res!48196 e!62175)))

(assert (=> d!25159 (= res!48196 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!25159 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (mask!6510 (v!2764 (underlying!330 thiss!992)))) e!62175)))

(declare-fun b!95316 () Bool)

(assert (=> b!95316 (= e!62175 e!62174)))

(declare-fun c!16001 () Bool)

(assert (=> b!95316 (= c!16001 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95317 () Bool)

(assert (=> b!95317 (= e!62176 call!9575)))

(declare-fun b!95318 () Bool)

(assert (=> b!95318 (= e!62174 call!9575)))

(assert (= (and d!25159 (not res!48196)) b!95316))

(assert (= (and b!95316 c!16001) b!95315))

(assert (= (and b!95316 (not c!16001)) b!95318))

(assert (= (and b!95315 res!48197) b!95317))

(assert (= (or b!95317 b!95318) bm!9572))

(assert (=> b!95315 m!102835))

(declare-fun m!103353 () Bool)

(assert (=> b!95315 m!103353))

(declare-fun m!103355 () Bool)

(assert (=> b!95315 m!103355))

(assert (=> b!95315 m!102835))

(declare-fun m!103357 () Bool)

(assert (=> b!95315 m!103357))

(declare-fun m!103359 () Bool)

(assert (=> bm!9572 m!103359))

(assert (=> b!95316 m!102835))

(assert (=> b!95316 m!102835))

(assert (=> b!95316 m!102837))

(assert (=> b!94521 d!25159))

(declare-fun d!25161 () Bool)

(declare-fun c!16002 () Bool)

(assert (=> d!25161 (= c!16002 (and ((_ is Cons!1550) (toList!760 lt!46945)) (= (_1!1152 (h!2142 (toList!760 lt!46945))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62177 () Option!155)

(assert (=> d!25161 (= (getValueByKey!149 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62177)))

(declare-fun b!95320 () Bool)

(declare-fun e!62178 () Option!155)

(assert (=> b!95320 (= e!62177 e!62178)))

(declare-fun c!16003 () Bool)

(assert (=> b!95320 (= c!16003 (and ((_ is Cons!1550) (toList!760 lt!46945)) (not (= (_1!1152 (h!2142 (toList!760 lt!46945))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95322 () Bool)

(assert (=> b!95322 (= e!62178 None!153)))

(declare-fun b!95319 () Bool)

(assert (=> b!95319 (= e!62177 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46945)))))))

(declare-fun b!95321 () Bool)

(assert (=> b!95321 (= e!62178 (getValueByKey!149 (t!5448 (toList!760 lt!46945)) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25161 c!16002) b!95319))

(assert (= (and d!25161 (not c!16002)) b!95320))

(assert (= (and b!95320 c!16003) b!95321))

(assert (= (and b!95320 (not c!16003)) b!95322))

(declare-fun m!103361 () Bool)

(assert (=> b!95321 m!103361))

(assert (=> b!94535 d!25161))

(declare-fun d!25163 () Bool)

(declare-fun e!62179 () Bool)

(assert (=> d!25163 e!62179))

(declare-fun res!48198 () Bool)

(assert (=> d!25163 (=> res!48198 e!62179)))

(declare-fun lt!47472 () Bool)

(assert (=> d!25163 (= res!48198 (not lt!47472))))

(declare-fun lt!47471 () Bool)

(assert (=> d!25163 (= lt!47472 lt!47471)))

(declare-fun lt!47470 () Unit!2786)

(declare-fun e!62180 () Unit!2786)

(assert (=> d!25163 (= lt!47470 e!62180)))

(declare-fun c!16004 () Bool)

(assert (=> d!25163 (= c!16004 lt!47471)))

(assert (=> d!25163 (= lt!47471 (containsKey!152 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!25163 (= (contains!780 lt!46850 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47472)))

(declare-fun b!95323 () Bool)

(declare-fun lt!47473 () Unit!2786)

(assert (=> b!95323 (= e!62180 lt!47473)))

(assert (=> b!95323 (= lt!47473 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> b!95323 (isDefined!101 (getValueByKey!149 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95324 () Bool)

(declare-fun Unit!2843 () Unit!2786)

(assert (=> b!95324 (= e!62180 Unit!2843)))

(declare-fun b!95325 () Bool)

(assert (=> b!95325 (= e!62179 (isDefined!101 (getValueByKey!149 (toList!760 lt!46850) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25163 c!16004) b!95323))

(assert (= (and d!25163 (not c!16004)) b!95324))

(assert (= (and d!25163 (not res!48198)) b!95325))

(declare-fun m!103363 () Bool)

(assert (=> d!25163 m!103363))

(declare-fun m!103365 () Bool)

(assert (=> b!95323 m!103365))

(assert (=> b!95323 m!101563))

(assert (=> b!95323 m!101563))

(declare-fun m!103367 () Bool)

(assert (=> b!95323 m!103367))

(assert (=> b!95325 m!101563))

(assert (=> b!95325 m!101563))

(assert (=> b!95325 m!103367))

(assert (=> d!24635 d!25163))

(declare-fun c!16005 () Bool)

(declare-fun d!25165 () Bool)

(assert (=> d!25165 (= c!16005 (and ((_ is Cons!1550) lt!46852) (= (_1!1152 (h!2142 lt!46852)) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62181 () Option!155)

(assert (=> d!25165 (= (getValueByKey!149 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62181)))

(declare-fun b!95327 () Bool)

(declare-fun e!62182 () Option!155)

(assert (=> b!95327 (= e!62181 e!62182)))

(declare-fun c!16006 () Bool)

(assert (=> b!95327 (= c!16006 (and ((_ is Cons!1550) lt!46852) (not (= (_1!1152 (h!2142 lt!46852)) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95329 () Bool)

(assert (=> b!95329 (= e!62182 None!153)))

(declare-fun b!95326 () Bool)

(assert (=> b!95326 (= e!62181 (Some!154 (_2!1152 (h!2142 lt!46852))))))

(declare-fun b!95328 () Bool)

(assert (=> b!95328 (= e!62182 (getValueByKey!149 (t!5448 lt!46852) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25165 c!16005) b!95326))

(assert (= (and d!25165 (not c!16005)) b!95327))

(assert (= (and b!95327 c!16006) b!95328))

(assert (= (and b!95327 (not c!16006)) b!95329))

(declare-fun m!103369 () Bool)

(assert (=> b!95328 m!103369))

(assert (=> d!24635 d!25165))

(declare-fun d!25167 () Bool)

(assert (=> d!25167 (= (getValueByKey!149 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!47474 () Unit!2786)

(assert (=> d!25167 (= lt!47474 (choose!577 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!62183 () Bool)

(assert (=> d!25167 e!62183))

(declare-fun res!48199 () Bool)

(assert (=> d!25167 (=> (not res!48199) (not e!62183))))

(assert (=> d!25167 (= res!48199 (isStrictlySorted!289 lt!46852))))

(assert (=> d!25167 (= (lemmaContainsTupThenGetReturnValue!65 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47474)))

(declare-fun b!95330 () Bool)

(declare-fun res!48200 () Bool)

(assert (=> b!95330 (=> (not res!48200) (not e!62183))))

(assert (=> b!95330 (= res!48200 (containsKey!152 lt!46852 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95331 () Bool)

(assert (=> b!95331 (= e!62183 (contains!782 lt!46852 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25167 res!48199) b!95330))

(assert (= (and b!95330 res!48200) b!95331))

(assert (=> d!25167 m!101557))

(declare-fun m!103371 () Bool)

(assert (=> d!25167 m!103371))

(declare-fun m!103373 () Bool)

(assert (=> d!25167 m!103373))

(declare-fun m!103375 () Bool)

(assert (=> b!95330 m!103375))

(declare-fun m!103377 () Bool)

(assert (=> b!95331 m!103377))

(assert (=> d!24635 d!25167))

(declare-fun b!95332 () Bool)

(declare-fun e!62184 () List!1554)

(assert (=> b!95332 (= e!62184 (insertStrictlySorted!68 (t!5448 (toList!760 lt!46619)) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95333 () Bool)

(declare-fun e!62186 () List!1554)

(declare-fun call!9577 () List!1554)

(assert (=> b!95333 (= e!62186 call!9577)))

(declare-fun b!95334 () Bool)

(declare-fun e!62187 () List!1554)

(declare-fun call!9576 () List!1554)

(assert (=> b!95334 (= e!62187 call!9576)))

(declare-fun b!95335 () Bool)

(declare-fun res!48202 () Bool)

(declare-fun e!62188 () Bool)

(assert (=> b!95335 (=> (not res!48202) (not e!62188))))

(declare-fun lt!47475 () List!1554)

(assert (=> b!95335 (= res!48202 (containsKey!152 lt!47475 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun c!16010 () Bool)

(declare-fun b!95337 () Bool)

(declare-fun c!16009 () Bool)

(assert (=> b!95337 (= e!62184 (ite c!16010 (t!5448 (toList!760 lt!46619)) (ite c!16009 (Cons!1550 (h!2142 (toList!760 lt!46619)) (t!5448 (toList!760 lt!46619))) Nil!1551)))))

(declare-fun b!95338 () Bool)

(declare-fun e!62185 () List!1554)

(assert (=> b!95338 (= e!62185 e!62186)))

(assert (=> b!95338 (= c!16010 (and ((_ is Cons!1550) (toList!760 lt!46619)) (= (_1!1152 (h!2142 (toList!760 lt!46619))) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9573 () Bool)

(declare-fun call!9578 () List!1554)

(assert (=> bm!9573 (= call!9577 call!9578)))

(declare-fun b!95339 () Bool)

(assert (=> b!95339 (= e!62187 call!9576)))

(declare-fun b!95336 () Bool)

(assert (=> b!95336 (= e!62185 call!9578)))

(declare-fun d!25169 () Bool)

(assert (=> d!25169 e!62188))

(declare-fun res!48201 () Bool)

(assert (=> d!25169 (=> (not res!48201) (not e!62188))))

(assert (=> d!25169 (= res!48201 (isStrictlySorted!289 lt!47475))))

(assert (=> d!25169 (= lt!47475 e!62185)))

(declare-fun c!16007 () Bool)

(assert (=> d!25169 (= c!16007 (and ((_ is Cons!1550) (toList!760 lt!46619)) (bvslt (_1!1152 (h!2142 (toList!760 lt!46619))) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!25169 (isStrictlySorted!289 (toList!760 lt!46619))))

(assert (=> d!25169 (= (insertStrictlySorted!68 (toList!760 lt!46619) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47475)))

(declare-fun bm!9574 () Bool)

(assert (=> bm!9574 (= call!9578 ($colon$colon!75 e!62184 (ite c!16007 (h!2142 (toList!760 lt!46619)) (tuple2!2283 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun c!16008 () Bool)

(assert (=> bm!9574 (= c!16008 c!16007)))

(declare-fun b!95340 () Bool)

(assert (=> b!95340 (= e!62188 (contains!782 lt!47475 (tuple2!2283 (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9575 () Bool)

(assert (=> bm!9575 (= call!9576 call!9577)))

(declare-fun b!95341 () Bool)

(assert (=> b!95341 (= c!16009 (and ((_ is Cons!1550) (toList!760 lt!46619)) (bvsgt (_1!1152 (h!2142 (toList!760 lt!46619))) (_1!1152 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!95341 (= e!62186 e!62187)))

(assert (= (and d!25169 c!16007) b!95336))

(assert (= (and d!25169 (not c!16007)) b!95338))

(assert (= (and b!95338 c!16010) b!95333))

(assert (= (and b!95338 (not c!16010)) b!95341))

(assert (= (and b!95341 c!16009) b!95334))

(assert (= (and b!95341 (not c!16009)) b!95339))

(assert (= (or b!95334 b!95339) bm!9575))

(assert (= (or b!95333 bm!9575) bm!9573))

(assert (= (or b!95336 bm!9573) bm!9574))

(assert (= (and bm!9574 c!16008) b!95332))

(assert (= (and bm!9574 (not c!16008)) b!95337))

(assert (= (and d!25169 res!48201) b!95335))

(assert (= (and b!95335 res!48202) b!95340))

(declare-fun m!103379 () Bool)

(assert (=> bm!9574 m!103379))

(declare-fun m!103381 () Bool)

(assert (=> b!95340 m!103381))

(declare-fun m!103383 () Bool)

(assert (=> b!95332 m!103383))

(declare-fun m!103385 () Bool)

(assert (=> d!25169 m!103385))

(declare-fun m!103387 () Bool)

(assert (=> d!25169 m!103387))

(declare-fun m!103389 () Bool)

(assert (=> b!95335 m!103389))

(assert (=> d!24635 d!25169))

(declare-fun d!25171 () Bool)

(declare-fun lt!47476 () Bool)

(assert (=> d!25171 (= lt!47476 (select (content!99 (toList!760 lt!46846)) (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun e!62189 () Bool)

(assert (=> d!25171 (= lt!47476 e!62189)))

(declare-fun res!48203 () Bool)

(assert (=> d!25171 (=> (not res!48203) (not e!62189))))

(assert (=> d!25171 (= res!48203 ((_ is Cons!1550) (toList!760 lt!46846)))))

(assert (=> d!25171 (= (contains!782 (toList!760 lt!46846) (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!47476)))

(declare-fun b!95342 () Bool)

(declare-fun e!62190 () Bool)

(assert (=> b!95342 (= e!62189 e!62190)))

(declare-fun res!48204 () Bool)

(assert (=> b!95342 (=> res!48204 e!62190)))

(assert (=> b!95342 (= res!48204 (= (h!2142 (toList!760 lt!46846)) (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!95343 () Bool)

(assert (=> b!95343 (= e!62190 (contains!782 (t!5448 (toList!760 lt!46846)) (tuple2!2283 lt!46616 (zeroValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!25171 res!48203) b!95342))

(assert (= (and b!95342 (not res!48204)) b!95343))

(declare-fun m!103391 () Bool)

(assert (=> d!25171 m!103391))

(declare-fun m!103393 () Bool)

(assert (=> d!25171 m!103393))

(declare-fun m!103395 () Bool)

(assert (=> b!95343 m!103395))

(assert (=> b!94407 d!25171))

(assert (=> d!24667 d!24587))

(assert (=> b!94337 d!24687))

(assert (=> d!24645 d!24651))

(assert (=> d!24645 d!24635))

(assert (=> d!24645 d!24639))

(declare-fun d!25173 () Bool)

(assert (=> d!25173 (= (apply!90 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!46605) (apply!90 lt!46619 lt!46605))))

(assert (=> d!25173 true))

(declare-fun _$34!852 () Unit!2786)

(assert (=> d!25173 (= (choose!568 lt!46619 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))) lt!46605) _$34!852)))

(declare-fun bs!3934 () Bool)

(assert (= bs!3934 d!25173))

(assert (=> bs!3934 m!101309))

(assert (=> bs!3934 m!101309))

(assert (=> bs!3934 m!101321))

(assert (=> bs!3934 m!101327))

(assert (=> d!24645 d!25173))

(declare-fun d!25175 () Bool)

(declare-fun e!62191 () Bool)

(assert (=> d!25175 e!62191))

(declare-fun res!48205 () Bool)

(assert (=> d!25175 (=> res!48205 e!62191)))

(declare-fun lt!47479 () Bool)

(assert (=> d!25175 (= res!48205 (not lt!47479))))

(declare-fun lt!47478 () Bool)

(assert (=> d!25175 (= lt!47479 lt!47478)))

(declare-fun lt!47477 () Unit!2786)

(declare-fun e!62192 () Unit!2786)

(assert (=> d!25175 (= lt!47477 e!62192)))

(declare-fun c!16011 () Bool)

(assert (=> d!25175 (= c!16011 lt!47478)))

(assert (=> d!25175 (= lt!47478 (containsKey!152 (toList!760 lt!46619) lt!46605))))

(assert (=> d!25175 (= (contains!780 lt!46619 lt!46605) lt!47479)))

(declare-fun b!95344 () Bool)

(declare-fun lt!47480 () Unit!2786)

(assert (=> b!95344 (= e!62192 lt!47480)))

(assert (=> b!95344 (= lt!47480 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46619) lt!46605))))

(assert (=> b!95344 (isDefined!101 (getValueByKey!149 (toList!760 lt!46619) lt!46605))))

(declare-fun b!95345 () Bool)

(declare-fun Unit!2844 () Unit!2786)

(assert (=> b!95345 (= e!62192 Unit!2844)))

(declare-fun b!95346 () Bool)

(assert (=> b!95346 (= e!62191 (isDefined!101 (getValueByKey!149 (toList!760 lt!46619) lt!46605)))))

(assert (= (and d!25175 c!16011) b!95344))

(assert (= (and d!25175 (not c!16011)) b!95345))

(assert (= (and d!25175 (not res!48205)) b!95346))

(declare-fun m!103397 () Bool)

(assert (=> d!25175 m!103397))

(declare-fun m!103399 () Bool)

(assert (=> b!95344 m!103399))

(assert (=> b!95344 m!101579))

(assert (=> b!95344 m!101579))

(declare-fun m!103401 () Bool)

(assert (=> b!95344 m!103401))

(assert (=> b!95346 m!101579))

(assert (=> b!95346 m!101579))

(assert (=> b!95346 m!103401))

(assert (=> d!24645 d!25175))

(declare-fun d!25177 () Bool)

(declare-fun res!48206 () Bool)

(declare-fun e!62193 () Bool)

(assert (=> d!25177 (=> res!48206 e!62193)))

(assert (=> d!25177 (= res!48206 (= (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25177 (= (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!62193)))

(declare-fun b!95347 () Bool)

(declare-fun e!62194 () Bool)

(assert (=> b!95347 (= e!62193 e!62194)))

(declare-fun res!48207 () Bool)

(assert (=> b!95347 (=> (not res!48207) (not e!62194))))

(assert (=> b!95347 (= res!48207 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!95348 () Bool)

(assert (=> b!95348 (= e!62194 (arrayContainsKey!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25177 (not res!48206)) b!95347))

(assert (= (and b!95347 res!48207) b!95348))

(declare-fun m!103403 () Bool)

(assert (=> d!25177 m!103403))

(assert (=> b!95348 m!101143))

(declare-fun m!103405 () Bool)

(assert (=> b!95348 m!103405))

(assert (=> b!94293 d!25177))

(declare-fun d!25179 () Bool)

(declare-fun lt!47481 () Bool)

(assert (=> d!25179 (= lt!47481 (select (content!99 (toList!760 lt!46864)) (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun e!62195 () Bool)

(assert (=> d!25179 (= lt!47481 e!62195)))

(declare-fun res!48208 () Bool)

(assert (=> d!25179 (=> (not res!48208) (not e!62195))))

(assert (=> d!25179 (= res!48208 ((_ is Cons!1550) (toList!760 lt!46864)))))

(assert (=> d!25179 (= (contains!782 (toList!760 lt!46864) (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!47481)))

(declare-fun b!95349 () Bool)

(declare-fun e!62196 () Bool)

(assert (=> b!95349 (= e!62195 e!62196)))

(declare-fun res!48209 () Bool)

(assert (=> b!95349 (=> res!48209 e!62196)))

(assert (=> b!95349 (= res!48209 (= (h!2142 (toList!760 lt!46864)) (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!95350 () Bool)

(assert (=> b!95350 (= e!62196 (contains!782 (t!5448 (toList!760 lt!46864)) (tuple2!2283 lt!46607 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!25179 res!48208) b!95349))

(assert (= (and b!95349 (not res!48209)) b!95350))

(declare-fun m!103407 () Bool)

(assert (=> d!25179 m!103407))

(declare-fun m!103409 () Bool)

(assert (=> d!25179 m!103409))

(declare-fun m!103411 () Bool)

(assert (=> b!95350 m!103411))

(assert (=> b!94418 d!25179))

(declare-fun b!95351 () Bool)

(declare-fun e!62198 () Bool)

(declare-fun call!9579 () Bool)

(assert (=> b!95351 (= e!62198 call!9579)))

(declare-fun b!95352 () Bool)

(assert (=> b!95352 (= e!62198 call!9579)))

(declare-fun b!95353 () Bool)

(declare-fun e!62197 () Bool)

(assert (=> b!95353 (= e!62197 e!62198)))

(declare-fun c!16012 () Bool)

(assert (=> b!95353 (= c!16012 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95354 () Bool)

(declare-fun e!62199 () Bool)

(assert (=> b!95354 (= e!62199 e!62197)))

(declare-fun res!48212 () Bool)

(assert (=> b!95354 (=> (not res!48212) (not e!62197))))

(declare-fun e!62200 () Bool)

(assert (=> b!95354 (= res!48212 (not e!62200))))

(declare-fun res!48210 () Bool)

(assert (=> b!95354 (=> (not res!48210) (not e!62200))))

(assert (=> b!95354 (= res!48210 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95355 () Bool)

(assert (=> b!95355 (= e!62200 (contains!781 (ite c!15726 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!9576 () Bool)

(assert (=> bm!9576 (= call!9579 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16012 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!15726 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552))) (ite c!15726 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)))))))

(declare-fun d!25181 () Bool)

(declare-fun res!48211 () Bool)

(assert (=> d!25181 (=> res!48211 e!62199)))

(assert (=> d!25181 (= res!48211 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!25181 (= (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15726 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552)) (ite c!15659 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) Nil!1552) Nil!1552))) e!62199)))

(assert (= (and d!25181 (not res!48211)) b!95354))

(assert (= (and b!95354 res!48210) b!95355))

(assert (= (and b!95354 res!48212) b!95353))

(assert (= (and b!95353 c!16012) b!95351))

(assert (= (and b!95353 (not c!16012)) b!95352))

(assert (= (or b!95351 b!95352) bm!9576))

(declare-fun m!103413 () Bool)

(assert (=> b!95353 m!103413))

(assert (=> b!95353 m!103413))

(declare-fun m!103415 () Bool)

(assert (=> b!95353 m!103415))

(assert (=> b!95354 m!103413))

(assert (=> b!95354 m!103413))

(assert (=> b!95354 m!103415))

(assert (=> b!95355 m!103413))

(assert (=> b!95355 m!103413))

(declare-fun m!103417 () Bool)

(assert (=> b!95355 m!103417))

(assert (=> bm!9576 m!103413))

(declare-fun m!103419 () Bool)

(assert (=> bm!9576 m!103419))

(assert (=> bm!9439 d!25181))

(declare-fun d!25183 () Bool)

(declare-fun c!16013 () Bool)

(assert (=> d!25183 (= c!16013 (and ((_ is Cons!1550) (toList!760 lt!46893)) (= (_1!1152 (h!2142 (toList!760 lt!46893))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62201 () Option!155)

(assert (=> d!25183 (= (getValueByKey!149 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62201)))

(declare-fun b!95357 () Bool)

(declare-fun e!62202 () Option!155)

(assert (=> b!95357 (= e!62201 e!62202)))

(declare-fun c!16014 () Bool)

(assert (=> b!95357 (= c!16014 (and ((_ is Cons!1550) (toList!760 lt!46893)) (not (= (_1!1152 (h!2142 (toList!760 lt!46893))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95359 () Bool)

(assert (=> b!95359 (= e!62202 None!153)))

(declare-fun b!95356 () Bool)

(assert (=> b!95356 (= e!62201 (Some!154 (_2!1152 (h!2142 (toList!760 lt!46893)))))))

(declare-fun b!95358 () Bool)

(assert (=> b!95358 (= e!62202 (getValueByKey!149 (t!5448 (toList!760 lt!46893)) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25183 c!16013) b!95356))

(assert (= (and d!25183 (not c!16013)) b!95357))

(assert (= (and b!95357 c!16014) b!95358))

(assert (= (and b!95357 (not c!16014)) b!95359))

(declare-fun m!103421 () Bool)

(assert (=> b!95358 m!103421))

(assert (=> b!94476 d!25183))

(declare-fun d!25185 () Bool)

(declare-fun res!48213 () Bool)

(declare-fun e!62203 () Bool)

(assert (=> d!25185 (=> res!48213 e!62203)))

(assert (=> d!25185 (= res!48213 (and ((_ is Cons!1550) (toList!760 e!61548)) (= (_1!1152 (h!2142 (toList!760 e!61548))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (=> d!25185 (= (containsKey!152 (toList!760 e!61548) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) e!62203)))

(declare-fun b!95360 () Bool)

(declare-fun e!62204 () Bool)

(assert (=> b!95360 (= e!62203 e!62204)))

(declare-fun res!48214 () Bool)

(assert (=> b!95360 (=> (not res!48214) (not e!62204))))

(assert (=> b!95360 (= res!48214 (and (or (not ((_ is Cons!1550) (toList!760 e!61548))) (bvsle (_1!1152 (h!2142 (toList!760 e!61548))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))) ((_ is Cons!1550) (toList!760 e!61548)) (bvslt (_1!1152 (h!2142 (toList!760 e!61548))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(declare-fun b!95361 () Bool)

(assert (=> b!95361 (= e!62204 (containsKey!152 (t!5448 (toList!760 e!61548)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (= (and d!25185 (not res!48213)) b!95360))

(assert (= (and b!95360 res!48214) b!95361))

(assert (=> b!95361 m!101143))

(declare-fun m!103423 () Bool)

(assert (=> b!95361 m!103423))

(assert (=> d!24707 d!25185))

(assert (=> b!94515 d!24795))

(assert (=> d!24709 d!24761))

(assert (=> b!94500 d!24795))

(assert (=> d!24689 d!24761))

(declare-fun d!25187 () Bool)

(declare-fun e!62205 () Bool)

(assert (=> d!25187 e!62205))

(declare-fun res!48215 () Bool)

(assert (=> d!25187 (=> res!48215 e!62205)))

(declare-fun lt!47484 () Bool)

(assert (=> d!25187 (= res!48215 (not lt!47484))))

(declare-fun lt!47483 () Bool)

(assert (=> d!25187 (= lt!47484 lt!47483)))

(declare-fun lt!47482 () Unit!2786)

(declare-fun e!62206 () Unit!2786)

(assert (=> d!25187 (= lt!47482 e!62206)))

(declare-fun c!16015 () Bool)

(assert (=> d!25187 (= c!16015 lt!47483)))

(assert (=> d!25187 (= lt!47483 (containsKey!152 (toList!760 (map!1242 (_2!1151 lt!46838))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> d!25187 (= (contains!780 (map!1242 (_2!1151 lt!46838)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) lt!47484)))

(declare-fun b!95362 () Bool)

(declare-fun lt!47485 () Unit!2786)

(assert (=> b!95362 (= e!62206 lt!47485)))

(assert (=> b!95362 (= lt!47485 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 (map!1242 (_2!1151 lt!46838))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!95362 (isDefined!101 (getValueByKey!149 (toList!760 (map!1242 (_2!1151 lt!46838))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(declare-fun b!95363 () Bool)

(declare-fun Unit!2845 () Unit!2786)

(assert (=> b!95363 (= e!62206 Unit!2845)))

(declare-fun b!95364 () Bool)

(assert (=> b!95364 (= e!62205 (isDefined!101 (getValueByKey!149 (toList!760 (map!1242 (_2!1151 lt!46838))) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355))))))

(assert (= (and d!25187 c!16015) b!95362))

(assert (= (and d!25187 (not c!16015)) b!95363))

(assert (= (and d!25187 (not res!48215)) b!95364))

(assert (=> d!25187 m!101143))

(declare-fun m!103425 () Bool)

(assert (=> d!25187 m!103425))

(assert (=> b!95362 m!101143))

(declare-fun m!103427 () Bool)

(assert (=> b!95362 m!103427))

(assert (=> b!95362 m!101143))

(declare-fun m!103429 () Bool)

(assert (=> b!95362 m!103429))

(assert (=> b!95362 m!103429))

(declare-fun m!103431 () Bool)

(assert (=> b!95362 m!103431))

(assert (=> b!95364 m!101143))

(assert (=> b!95364 m!103429))

(assert (=> b!95364 m!103429))

(assert (=> b!95364 m!103431))

(assert (=> b!94390 d!25187))

(assert (=> b!94390 d!25073))

(assert (=> b!94489 d!24795))

(declare-fun b!95383 () Bool)

(declare-fun e!62221 () Bool)

(declare-fun lt!47490 () SeekEntryResult!245)

(assert (=> b!95383 (= e!62221 (bvsge (x!12649 lt!47490) #b01111111111111111111111111111110))))

(declare-fun d!25189 () Bool)

(assert (=> d!25189 e!62221))

(declare-fun c!16023 () Bool)

(assert (=> d!25189 (= c!16023 (and ((_ is Intermediate!245) lt!47490) (undefined!1057 lt!47490)))))

(declare-fun e!62220 () SeekEntryResult!245)

(assert (=> d!25189 (= lt!47490 e!62220)))

(declare-fun c!16024 () Bool)

(assert (=> d!25189 (= c!16024 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!47491 () (_ BitVec 64))

(assert (=> d!25189 (= lt!47491 (select (arr!1988 (_keys!4117 newMap!16)) (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16))))))

(assert (=> d!25189 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25189 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)) lt!47490)))

(declare-fun b!95384 () Bool)

(assert (=> b!95384 (and (bvsge (index!3123 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3123 lt!47490) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun e!62218 () Bool)

(assert (=> b!95384 (= e!62218 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!47490)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95385 () Bool)

(assert (=> b!95385 (and (bvsge (index!3123 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3123 lt!47490) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!48224 () Bool)

(assert (=> b!95385 (= res!48224 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!47490)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)))))

(assert (=> b!95385 (=> res!48224 e!62218)))

(declare-fun e!62219 () Bool)

(assert (=> b!95385 (= e!62219 e!62218)))

(declare-fun b!95386 () Bool)

(assert (=> b!95386 (= e!62220 (Intermediate!245 true (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!95387 () Bool)

(assert (=> b!95387 (= e!62221 e!62219)))

(declare-fun res!48223 () Bool)

(assert (=> b!95387 (= res!48223 (and ((_ is Intermediate!245) lt!47490) (not (undefined!1057 lt!47490)) (bvslt (x!12649 lt!47490) #b01111111111111111111111111111110) (bvsge (x!12649 lt!47490) #b00000000000000000000000000000000) (bvsge (x!12649 lt!47490) #b00000000000000000000000000000000)))))

(assert (=> b!95387 (=> (not res!48223) (not e!62219))))

(declare-fun e!62217 () SeekEntryResult!245)

(declare-fun b!95388 () Bool)

(assert (=> b!95388 (= e!62217 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6510 newMap!16)) (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (_keys!4117 newMap!16) (mask!6510 newMap!16)))))

(declare-fun b!95389 () Bool)

(assert (=> b!95389 (and (bvsge (index!3123 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3123 lt!47490) (size!2236 (_keys!4117 newMap!16))))))

(declare-fun res!48222 () Bool)

(assert (=> b!95389 (= res!48222 (= (select (arr!1988 (_keys!4117 newMap!16)) (index!3123 lt!47490)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95389 (=> res!48222 e!62218)))

(declare-fun b!95390 () Bool)

(assert (=> b!95390 (= e!62220 e!62217)))

(declare-fun c!16022 () Bool)

(assert (=> b!95390 (= c!16022 (or (= lt!47491 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355)) (= (bvadd lt!47491 lt!47491) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95391 () Bool)

(assert (=> b!95391 (= e!62217 (Intermediate!245 false (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!25189 c!16024) b!95386))

(assert (= (and d!25189 (not c!16024)) b!95390))

(assert (= (and b!95390 c!16022) b!95391))

(assert (= (and b!95390 (not c!16022)) b!95388))

(assert (= (and d!25189 c!16023) b!95383))

(assert (= (and d!25189 (not c!16023)) b!95387))

(assert (= (and b!95387 res!48223) b!95385))

(assert (= (and b!95385 (not res!48224)) b!95389))

(assert (= (and b!95389 (not res!48222)) b!95384))

(assert (=> d!25189 m!101649))

(declare-fun m!103433 () Bool)

(assert (=> d!25189 m!103433))

(assert (=> d!25189 m!101529))

(declare-fun m!103435 () Bool)

(assert (=> b!95385 m!103435))

(assert (=> b!95384 m!103435))

(assert (=> b!95388 m!101649))

(declare-fun m!103437 () Bool)

(assert (=> b!95388 m!103437))

(assert (=> b!95388 m!103437))

(assert (=> b!95388 m!101143))

(declare-fun m!103439 () Bool)

(assert (=> b!95388 m!103439))

(assert (=> b!95389 m!103435))

(assert (=> d!24663 d!25189))

(declare-fun d!25191 () Bool)

(declare-fun lt!47497 () (_ BitVec 32))

(declare-fun lt!47496 () (_ BitVec 32))

(assert (=> d!25191 (= lt!47497 (bvmul (bvxor lt!47496 (bvlshr lt!47496 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!25191 (= lt!47496 ((_ extract 31 0) (bvand (bvxor (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvlshr (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!25191 (and (bvsge (mask!6510 newMap!16) #b00000000000000000000000000000000) (let ((res!48225 (let ((h!2146 ((_ extract 31 0) (bvand (bvxor (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (bvlshr (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12753 (bvmul (bvxor h!2146 (bvlshr h!2146 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12753 (bvlshr x!12753 #b00000000000000000000000000001101)) (mask!6510 newMap!16)))))) (and (bvslt res!48225 (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48225 #b00000000000000000000000000000000))))))

(assert (=> d!25191 (= (toIndex!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (mask!6510 newMap!16)) (bvand (bvxor lt!47497 (bvlshr lt!47497 #b00000000000000000000000000001101)) (mask!6510 newMap!16)))))

(assert (=> d!24663 d!25191))

(assert (=> d!24663 d!24761))

(declare-fun d!25193 () Bool)

(declare-fun lt!47498 () Bool)

(assert (=> d!25193 (= lt!47498 (select (content!99 (toList!760 lt!46725)) (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62222 () Bool)

(assert (=> d!25193 (= lt!47498 e!62222)))

(declare-fun res!48226 () Bool)

(assert (=> d!25193 (=> (not res!48226) (not e!62222))))

(assert (=> d!25193 (= res!48226 ((_ is Cons!1550) (toList!760 lt!46725)))))

(assert (=> d!25193 (= (contains!782 (toList!760 lt!46725) (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47498)))

(declare-fun b!95392 () Bool)

(declare-fun e!62223 () Bool)

(assert (=> b!95392 (= e!62222 e!62223)))

(declare-fun res!48227 () Bool)

(assert (=> b!95392 (=> res!48227 e!62223)))

(assert (=> b!95392 (= res!48227 (= (h!2142 (toList!760 lt!46725)) (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95393 () Bool)

(assert (=> b!95393 (= e!62223 (contains!782 (t!5448 (toList!760 lt!46725)) (ite c!15720 (ite c!15711 (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25193 res!48226) b!95392))

(assert (= (and b!95392 (not res!48227)) b!95393))

(declare-fun m!103441 () Bool)

(assert (=> d!25193 m!103441))

(declare-fun m!103443 () Bool)

(assert (=> d!25193 m!103443))

(declare-fun m!103445 () Bool)

(assert (=> b!95393 m!103445))

(assert (=> b!94312 d!25193))

(declare-fun d!25195 () Bool)

(assert (=> d!25195 (= (apply!90 lt!47000 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (getValueByKey!149 (toList!760 lt!47000) (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3935 () Bool)

(assert (= bs!3935 d!25195))

(assert (=> bs!3935 m!101635))

(assert (=> bs!3935 m!102845))

(assert (=> bs!3935 m!102845))

(declare-fun m!103447 () Bool)

(assert (=> bs!3935 m!103447))

(assert (=> b!94602 d!25195))

(declare-fun d!25197 () Bool)

(declare-fun c!16025 () Bool)

(assert (=> d!25197 (= c!16025 ((_ is ValueCellFull!962) (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62224 () V!3129)

(assert (=> d!25197 (= (get!1272 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62224)))

(declare-fun b!95394 () Bool)

(assert (=> b!95394 (= e!62224 (get!1273 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95395 () Bool)

(assert (=> b!95395 (= e!62224 (get!1274 (select (arr!1989 (ite c!15720 (_values!2418 newMap!16) (array!4186 (store (arr!1989 (_values!2418 newMap!16)) (index!3122 lt!46692) (ValueCellFull!962 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2237 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25197 c!16025) b!95394))

(assert (= (and d!25197 (not c!16025)) b!95395))

(assert (=> b!95394 m!101919))

(assert (=> b!95394 m!101717))

(declare-fun m!103449 () Bool)

(assert (=> b!95394 m!103449))

(assert (=> b!95395 m!101919))

(assert (=> b!95395 m!101717))

(declare-fun m!103451 () Bool)

(assert (=> b!95395 m!103451))

(assert (=> b!94602 d!25197))

(declare-fun d!25199 () Bool)

(declare-fun lt!47499 () Bool)

(assert (=> d!25199 (= lt!47499 (select (content!99 (toList!760 lt!46850)) (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun e!62225 () Bool)

(assert (=> d!25199 (= lt!47499 e!62225)))

(declare-fun res!48228 () Bool)

(assert (=> d!25199 (=> (not res!48228) (not e!62225))))

(assert (=> d!25199 (= res!48228 ((_ is Cons!1550) (toList!760 lt!46850)))))

(assert (=> d!25199 (= (contains!782 (toList!760 lt!46850) (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) lt!47499)))

(declare-fun b!95396 () Bool)

(declare-fun e!62226 () Bool)

(assert (=> b!95396 (= e!62225 e!62226)))

(declare-fun res!48229 () Bool)

(assert (=> b!95396 (=> res!48229 e!62226)))

(assert (=> b!95396 (= res!48229 (= (h!2142 (toList!760 lt!46850)) (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(declare-fun b!95397 () Bool)

(assert (=> b!95397 (= e!62226 (contains!782 (t!5448 (toList!760 lt!46850)) (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))

(assert (= (and d!25199 res!48228) b!95396))

(assert (= (and b!95396 (not res!48229)) b!95397))

(declare-fun m!103453 () Bool)

(assert (=> d!25199 m!103453))

(declare-fun m!103455 () Bool)

(assert (=> d!25199 m!103455))

(declare-fun m!103457 () Bool)

(assert (=> b!95397 m!103457))

(assert (=> b!94409 d!25199))

(declare-fun b!95398 () Bool)

(declare-fun e!62228 () Bool)

(declare-fun call!9580 () Bool)

(assert (=> b!95398 (= e!62228 call!9580)))

(declare-fun b!95399 () Bool)

(assert (=> b!95399 (= e!62228 call!9580)))

(declare-fun b!95400 () Bool)

(declare-fun e!62227 () Bool)

(assert (=> b!95400 (= e!62227 e!62228)))

(declare-fun c!16026 () Bool)

(assert (=> b!95400 (= c!16026 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95401 () Bool)

(declare-fun e!62229 () Bool)

(assert (=> b!95401 (= e!62229 e!62227)))

(declare-fun res!48232 () Bool)

(assert (=> b!95401 (=> (not res!48232) (not e!62227))))

(declare-fun e!62230 () Bool)

(assert (=> b!95401 (= res!48232 (not e!62230))))

(declare-fun res!48230 () Bool)

(assert (=> b!95401 (=> (not res!48230) (not e!62230))))

(assert (=> b!95401 (= res!48230 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95402 () Bool)

(assert (=> b!95402 (= e!62230 (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9577 () Bool)

(assert (=> bm!9577 (= call!9580 (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16026 (Cons!1551 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) #b00000000000000000000000000000000) Nil!1552) Nil!1552)))))

(declare-fun d!25201 () Bool)

(declare-fun res!48231 () Bool)

(assert (=> d!25201 (=> res!48231 e!62229)))

(assert (=> d!25201 (= res!48231 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (v!2764 (underlying!330 thiss!992))))))))

(assert (=> d!25201 (= (arrayNoDuplicates!0 (_keys!4117 (v!2764 (underlying!330 thiss!992))) #b00000000000000000000000000000000 Nil!1552) e!62229)))

(assert (= (and d!25201 (not res!48231)) b!95401))

(assert (= (and b!95401 res!48230) b!95402))

(assert (= (and b!95401 res!48232) b!95400))

(assert (= (and b!95400 c!16026) b!95398))

(assert (= (and b!95400 (not c!16026)) b!95399))

(assert (= (or b!95398 b!95399) bm!9577))

(assert (=> b!95400 m!102835))

(assert (=> b!95400 m!102835))

(assert (=> b!95400 m!102837))

(assert (=> b!95401 m!102835))

(assert (=> b!95401 m!102835))

(assert (=> b!95401 m!102837))

(assert (=> b!95402 m!102835))

(assert (=> b!95402 m!102835))

(declare-fun m!103459 () Bool)

(assert (=> b!95402 m!103459))

(assert (=> bm!9577 m!102835))

(declare-fun m!103461 () Bool)

(assert (=> bm!9577 m!103461))

(assert (=> b!94522 d!25201))

(declare-fun d!25203 () Bool)

(assert (=> d!25203 (= (get!1274 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94306 d!25203))

(declare-fun d!25205 () Bool)

(declare-fun e!62231 () Bool)

(assert (=> d!25205 e!62231))

(declare-fun res!48233 () Bool)

(assert (=> d!25205 (=> res!48233 e!62231)))

(declare-fun lt!47502 () Bool)

(assert (=> d!25205 (= res!48233 (not lt!47502))))

(declare-fun lt!47501 () Bool)

(assert (=> d!25205 (= lt!47502 lt!47501)))

(declare-fun lt!47500 () Unit!2786)

(declare-fun e!62232 () Unit!2786)

(assert (=> d!25205 (= lt!47500 e!62232)))

(declare-fun c!16027 () Bool)

(assert (=> d!25205 (= c!16027 lt!47501)))

(assert (=> d!25205 (= lt!47501 (containsKey!152 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> d!25205 (= (contains!780 lt!46945 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47502)))

(declare-fun b!95403 () Bool)

(declare-fun lt!47503 () Unit!2786)

(assert (=> b!95403 (= e!62232 lt!47503)))

(assert (=> b!95403 (= lt!47503 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (=> b!95403 (isDefined!101 (getValueByKey!149 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95404 () Bool)

(declare-fun Unit!2846 () Unit!2786)

(assert (=> b!95404 (= e!62232 Unit!2846)))

(declare-fun b!95405 () Bool)

(assert (=> b!95405 (= e!62231 (isDefined!101 (getValueByKey!149 (toList!760 lt!46945) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25205 c!16027) b!95403))

(assert (= (and d!25205 (not c!16027)) b!95404))

(assert (= (and d!25205 (not res!48233)) b!95405))

(declare-fun m!103463 () Bool)

(assert (=> d!25205 m!103463))

(declare-fun m!103465 () Bool)

(assert (=> b!95403 m!103465))

(assert (=> b!95403 m!101811))

(assert (=> b!95403 m!101811))

(declare-fun m!103467 () Bool)

(assert (=> b!95403 m!103467))

(assert (=> b!95405 m!101811))

(assert (=> b!95405 m!101811))

(assert (=> b!95405 m!103467))

(assert (=> d!24703 d!25205))

(declare-fun d!25207 () Bool)

(declare-fun c!16028 () Bool)

(assert (=> d!25207 (= c!16028 (and ((_ is Cons!1550) lt!46947) (= (_1!1152 (h!2142 lt!46947)) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun e!62233 () Option!155)

(assert (=> d!25207 (= (getValueByKey!149 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) e!62233)))

(declare-fun b!95407 () Bool)

(declare-fun e!62234 () Option!155)

(assert (=> b!95407 (= e!62233 e!62234)))

(declare-fun c!16029 () Bool)

(assert (=> b!95407 (= c!16029 (and ((_ is Cons!1550) lt!46947) (not (= (_1!1152 (h!2142 lt!46947)) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun b!95409 () Bool)

(assert (=> b!95409 (= e!62234 None!153)))

(declare-fun b!95406 () Bool)

(assert (=> b!95406 (= e!62233 (Some!154 (_2!1152 (h!2142 lt!46947))))))

(declare-fun b!95408 () Bool)

(assert (=> b!95408 (= e!62234 (getValueByKey!149 (t!5448 lt!46947) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(assert (= (and d!25207 c!16028) b!95406))

(assert (= (and d!25207 (not c!16028)) b!95407))

(assert (= (and b!95407 c!16029) b!95408))

(assert (= (and b!95407 (not c!16029)) b!95409))

(declare-fun m!103469 () Bool)

(assert (=> b!95408 m!103469))

(assert (=> d!24703 d!25207))

(declare-fun d!25209 () Bool)

(assert (=> d!25209 (= (getValueByKey!149 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun lt!47504 () Unit!2786)

(assert (=> d!25209 (= lt!47504 (choose!577 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun e!62235 () Bool)

(assert (=> d!25209 e!62235))

(declare-fun res!48234 () Bool)

(assert (=> d!25209 (=> (not res!48234) (not e!62235))))

(assert (=> d!25209 (= res!48234 (isStrictlySorted!289 lt!46947))))

(assert (=> d!25209 (= (lemmaContainsTupThenGetReturnValue!65 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47504)))

(declare-fun b!95410 () Bool)

(declare-fun res!48235 () Bool)

(assert (=> b!95410 (=> (not res!48235) (not e!62235))))

(assert (=> b!95410 (= res!48235 (containsKey!152 lt!46947 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95411 () Bool)

(assert (=> b!95411 (= e!62235 (contains!782 lt!46947 (tuple2!2283 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (= (and d!25209 res!48234) b!95410))

(assert (= (and b!95410 res!48235) b!95411))

(assert (=> d!25209 m!101805))

(declare-fun m!103471 () Bool)

(assert (=> d!25209 m!103471))

(declare-fun m!103473 () Bool)

(assert (=> d!25209 m!103473))

(declare-fun m!103475 () Bool)

(assert (=> b!95410 m!103475))

(declare-fun m!103477 () Bool)

(assert (=> b!95411 m!103477))

(assert (=> d!24703 d!25209))

(declare-fun b!95412 () Bool)

(declare-fun e!62236 () List!1554)

(assert (=> b!95412 (= e!62236 (insertStrictlySorted!68 (t!5448 (toList!760 call!9369)) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun b!95413 () Bool)

(declare-fun e!62238 () List!1554)

(declare-fun call!9582 () List!1554)

(assert (=> b!95413 (= e!62238 call!9582)))

(declare-fun b!95414 () Bool)

(declare-fun e!62239 () List!1554)

(declare-fun call!9581 () List!1554)

(assert (=> b!95414 (= e!62239 call!9581)))

(declare-fun b!95415 () Bool)

(declare-fun res!48237 () Bool)

(declare-fun e!62240 () Bool)

(assert (=> b!95415 (=> (not res!48237) (not e!62240))))

(declare-fun lt!47505 () List!1554)

(assert (=> b!95415 (= res!48237 (containsKey!152 lt!47505 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))

(declare-fun c!16032 () Bool)

(declare-fun c!16033 () Bool)

(declare-fun b!95417 () Bool)

(assert (=> b!95417 (= e!62236 (ite c!16033 (t!5448 (toList!760 call!9369)) (ite c!16032 (Cons!1550 (h!2142 (toList!760 call!9369)) (t!5448 (toList!760 call!9369))) Nil!1551)))))

(declare-fun b!95418 () Bool)

(declare-fun e!62237 () List!1554)

(assert (=> b!95418 (= e!62237 e!62238)))

(assert (=> b!95418 (= c!16033 (and ((_ is Cons!1550) (toList!760 call!9369)) (= (_1!1152 (h!2142 (toList!760 call!9369))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9578 () Bool)

(declare-fun call!9583 () List!1554)

(assert (=> bm!9578 (= call!9582 call!9583)))

(declare-fun b!95419 () Bool)

(assert (=> b!95419 (= e!62239 call!9581)))

(declare-fun b!95416 () Bool)

(assert (=> b!95416 (= e!62237 call!9583)))

(declare-fun d!25211 () Bool)

(assert (=> d!25211 e!62240))

(declare-fun res!48236 () Bool)

(assert (=> d!25211 (=> (not res!48236) (not e!62240))))

(assert (=> d!25211 (= res!48236 (isStrictlySorted!289 lt!47505))))

(assert (=> d!25211 (= lt!47505 e!62237)))

(declare-fun c!16030 () Bool)

(assert (=> d!25211 (= c!16030 (and ((_ is Cons!1550) (toList!760 call!9369)) (bvslt (_1!1152 (h!2142 (toList!760 call!9369))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> d!25211 (isStrictlySorted!289 (toList!760 call!9369))))

(assert (=> d!25211 (= (insertStrictlySorted!68 (toList!760 call!9369) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!47505)))

(declare-fun bm!9579 () Bool)

(assert (=> bm!9579 (= call!9583 ($colon$colon!75 e!62236 (ite c!16030 (h!2142 (toList!760 call!9369)) (tuple2!2283 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))))))

(declare-fun c!16031 () Bool)

(assert (=> bm!9579 (= c!16031 c!16030)))

(declare-fun b!95420 () Bool)

(assert (=> b!95420 (= e!62240 (contains!782 lt!47505 (tuple2!2283 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(declare-fun bm!9580 () Bool)

(assert (=> bm!9580 (= call!9581 call!9582)))

(declare-fun b!95421 () Bool)

(assert (=> b!95421 (= c!16032 (and ((_ is Cons!1550) (toList!760 call!9369)) (bvsgt (_1!1152 (h!2142 (toList!760 call!9369))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))

(assert (=> b!95421 (= e!62238 e!62239)))

(assert (= (and d!25211 c!16030) b!95416))

(assert (= (and d!25211 (not c!16030)) b!95418))

(assert (= (and b!95418 c!16033) b!95413))

(assert (= (and b!95418 (not c!16033)) b!95421))

(assert (= (and b!95421 c!16032) b!95414))

(assert (= (and b!95421 (not c!16032)) b!95419))

(assert (= (or b!95414 b!95419) bm!9580))

(assert (= (or b!95413 bm!9580) bm!9578))

(assert (= (or b!95416 bm!9578) bm!9579))

(assert (= (and bm!9579 c!16031) b!95412))

(assert (= (and bm!9579 (not c!16031)) b!95417))

(assert (= (and d!25211 res!48236) b!95415))

(assert (= (and b!95415 res!48237) b!95420))

(declare-fun m!103479 () Bool)

(assert (=> bm!9579 m!103479))

(declare-fun m!103481 () Bool)

(assert (=> b!95420 m!103481))

(declare-fun m!103483 () Bool)

(assert (=> b!95412 m!103483))

(declare-fun m!103485 () Bool)

(assert (=> d!25211 m!103485))

(declare-fun m!103487 () Bool)

(assert (=> d!25211 m!103487))

(declare-fun m!103489 () Bool)

(assert (=> b!95415 m!103489))

(assert (=> d!24703 d!25211))

(assert (=> bm!9485 d!25011))

(assert (=> bm!9442 d!24793))

(declare-fun d!25213 () Bool)

(declare-fun e!62241 () Bool)

(assert (=> d!25213 e!62241))

(declare-fun res!48239 () Bool)

(assert (=> d!25213 (=> (not res!48239) (not e!62241))))

(declare-fun lt!47507 () ListLongMap!1489)

(assert (=> d!25213 (= res!48239 (contains!780 lt!47507 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47509 () List!1554)

(assert (=> d!25213 (= lt!47507 (ListLongMap!1490 lt!47509))))

(declare-fun lt!47508 () Unit!2786)

(declare-fun lt!47506 () Unit!2786)

(assert (=> d!25213 (= lt!47508 lt!47506)))

(assert (=> d!25213 (= (getValueByKey!149 lt!47509 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25213 (= lt!47506 (lemmaContainsTupThenGetReturnValue!65 lt!47509 (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25213 (= lt!47509 (insertStrictlySorted!68 (toList!760 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25213 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47507)))

(declare-fun b!95422 () Bool)

(declare-fun res!48238 () Bool)

(assert (=> b!95422 (=> (not res!48238) (not e!62241))))

(assert (=> b!95422 (= res!48238 (= (getValueByKey!149 (toList!760 lt!47507) (_1!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95423 () Bool)

(assert (=> b!95423 (= e!62241 (contains!782 (toList!760 lt!47507) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25213 res!48239) b!95422))

(assert (= (and b!95422 res!48238) b!95423))

(declare-fun m!103491 () Bool)

(assert (=> d!25213 m!103491))

(declare-fun m!103493 () Bool)

(assert (=> d!25213 m!103493))

(declare-fun m!103495 () Bool)

(assert (=> d!25213 m!103495))

(declare-fun m!103497 () Bool)

(assert (=> d!25213 m!103497))

(declare-fun m!103499 () Bool)

(assert (=> b!95422 m!103499))

(declare-fun m!103501 () Bool)

(assert (=> b!95423 m!103501))

(assert (=> d!24685 d!25213))

(assert (=> d!24685 d!24709))

(declare-fun d!25215 () Bool)

(assert (=> d!25215 (= (+!128 (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!25215 true))

(declare-fun _$8!79 () Unit!2786)

(assert (=> d!25215 (= (choose!572 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) (extraKeys!2264 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) _$8!79)))

(declare-fun bs!3936 () Bool)

(assert (= bs!3936 d!25215))

(assert (=> bs!3936 m!101281))

(assert (=> bs!3936 m!101281))

(assert (=> bs!3936 m!101705))

(assert (=> bs!3936 m!101165))

(assert (=> bs!3936 m!101703))

(assert (=> d!24685 d!25215))

(assert (=> d!24685 d!24761))

(declare-fun b!95424 () Bool)

(declare-fun e!62246 () Bool)

(declare-fun lt!47521 () ListLongMap!1489)

(assert (=> b!95424 (= e!62246 (= (apply!90 lt!47521 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (select (arr!1989 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!366 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2237 (_values!2418 newMap!16))))))

(assert (=> b!95424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95425 () Bool)

(declare-fun e!62251 () ListLongMap!1489)

(declare-fun e!62244 () ListLongMap!1489)

(assert (=> b!95425 (= e!62251 e!62244)))

(declare-fun c!16037 () Bool)

(assert (=> b!95425 (= c!16037 (and (not (= (bvand lt!46690 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46690 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95426 () Bool)

(declare-fun e!62254 () Bool)

(declare-fun call!9587 () Bool)

(assert (=> b!95426 (= e!62254 (not call!9587))))

(declare-fun bm!9581 () Bool)

(assert (=> bm!9581 (= call!9587 (contains!780 lt!47521 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95427 () Bool)

(declare-fun e!62249 () Bool)

(declare-fun e!62242 () Bool)

(assert (=> b!95427 (= e!62249 e!62242)))

(declare-fun c!16034 () Bool)

(assert (=> b!95427 (= c!16034 (not (= (bvand lt!46690 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95428 () Bool)

(declare-fun e!62253 () Bool)

(assert (=> b!95428 (= e!62253 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95429 () Bool)

(declare-fun call!9589 () Bool)

(assert (=> b!95429 (= e!62242 (not call!9589))))

(declare-fun b!95430 () Bool)

(declare-fun e!62252 () Bool)

(assert (=> b!95430 (= e!62252 (= (apply!90 lt!47521 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!25217 () Bool)

(assert (=> d!25217 e!62249))

(declare-fun res!48248 () Bool)

(assert (=> d!25217 (=> (not res!48248) (not e!62249))))

(assert (=> d!25217 (= res!48248 (or (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))))

(declare-fun lt!47510 () ListLongMap!1489)

(assert (=> d!25217 (= lt!47521 lt!47510)))

(declare-fun lt!47531 () Unit!2786)

(declare-fun e!62248 () Unit!2786)

(assert (=> d!25217 (= lt!47531 e!62248)))

(declare-fun c!16036 () Bool)

(declare-fun e!62250 () Bool)

(assert (=> d!25217 (= c!16036 e!62250)))

(declare-fun res!48245 () Bool)

(assert (=> d!25217 (=> (not res!48245) (not e!62250))))

(assert (=> d!25217 (= res!48245 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(assert (=> d!25217 (= lt!47510 e!62251)))

(declare-fun c!16038 () Bool)

(assert (=> d!25217 (= c!16038 (and (not (= (bvand lt!46690 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46690 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25217 (validMask!0 (mask!6510 newMap!16))))

(assert (=> d!25217 (= (getCurrentListMap!450 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47521)))

(declare-fun bm!9582 () Bool)

(declare-fun call!9588 () ListLongMap!1489)

(declare-fun call!9584 () ListLongMap!1489)

(assert (=> bm!9582 (= call!9588 call!9584)))

(declare-fun b!95431 () Bool)

(declare-fun e!62243 () Bool)

(assert (=> b!95431 (= e!62254 e!62243)))

(declare-fun res!48247 () Bool)

(assert (=> b!95431 (= res!48247 call!9587)))

(assert (=> b!95431 (=> (not res!48247) (not e!62243))))

(declare-fun bm!9583 () Bool)

(assert (=> bm!9583 (= call!9589 (contains!780 lt!47521 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95432 () Bool)

(declare-fun e!62245 () Bool)

(assert (=> b!95432 (= e!62245 e!62246)))

(declare-fun res!48241 () Bool)

(assert (=> b!95432 (=> (not res!48241) (not e!62246))))

(assert (=> b!95432 (= res!48241 (contains!780 lt!47521 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95433 () Bool)

(declare-fun c!16035 () Bool)

(assert (=> b!95433 (= c!16035 (and (not (= (bvand lt!46690 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46690 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!62247 () ListLongMap!1489)

(assert (=> b!95433 (= e!62244 e!62247)))

(declare-fun b!95434 () Bool)

(declare-fun res!48246 () Bool)

(assert (=> b!95434 (=> (not res!48246) (not e!62249))))

(assert (=> b!95434 (= res!48246 e!62254)))

(declare-fun c!16039 () Bool)

(assert (=> b!95434 (= c!16039 (not (= (bvand lt!46690 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95435 () Bool)

(declare-fun res!48240 () Bool)

(assert (=> b!95435 (=> (not res!48240) (not e!62249))))

(assert (=> b!95435 (= res!48240 e!62245)))

(declare-fun res!48244 () Bool)

(assert (=> b!95435 (=> res!48244 e!62245)))

(assert (=> b!95435 (= res!48244 (not e!62253))))

(declare-fun res!48243 () Bool)

(assert (=> b!95435 (=> (not res!48243) (not e!62253))))

(assert (=> b!95435 (= res!48243 (bvslt #b00000000000000000000000000000000 (size!2236 (_keys!4117 newMap!16))))))

(declare-fun b!95436 () Bool)

(declare-fun call!9585 () ListLongMap!1489)

(assert (=> b!95436 (= e!62244 call!9585)))

(declare-fun b!95437 () Bool)

(declare-fun call!9590 () ListLongMap!1489)

(assert (=> b!95437 (= e!62251 (+!128 call!9590 (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95438 () Bool)

(assert (=> b!95438 (= e!62243 (= (apply!90 lt!47521 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun bm!9584 () Bool)

(declare-fun call!9586 () ListLongMap!1489)

(assert (=> bm!9584 (= call!9590 (+!128 (ite c!16038 call!9586 (ite c!16037 call!9584 call!9588)) (ite (or c!16038 c!16037) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95439 () Bool)

(declare-fun lt!47529 () Unit!2786)

(assert (=> b!95439 (= e!62248 lt!47529)))

(declare-fun lt!47511 () ListLongMap!1489)

(assert (=> b!95439 (= lt!47511 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47525 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47525 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47517 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47517 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47530 () Unit!2786)

(assert (=> b!95439 (= lt!47530 (addStillContains!66 lt!47511 lt!47525 (zeroValue!2322 newMap!16) lt!47517))))

(assert (=> b!95439 (contains!780 (+!128 lt!47511 (tuple2!2283 lt!47525 (zeroValue!2322 newMap!16))) lt!47517)))

(declare-fun lt!47523 () Unit!2786)

(assert (=> b!95439 (= lt!47523 lt!47530)))

(declare-fun lt!47528 () ListLongMap!1489)

(assert (=> b!95439 (= lt!47528 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47520 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47520 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47514 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47514 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47515 () Unit!2786)

(assert (=> b!95439 (= lt!47515 (addApplyDifferent!66 lt!47528 lt!47520 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47514))))

(assert (=> b!95439 (= (apply!90 (+!128 lt!47528 (tuple2!2283 lt!47520 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47514) (apply!90 lt!47528 lt!47514))))

(declare-fun lt!47526 () Unit!2786)

(assert (=> b!95439 (= lt!47526 lt!47515)))

(declare-fun lt!47522 () ListLongMap!1489)

(assert (=> b!95439 (= lt!47522 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47512 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47512 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47527 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47527 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47513 () Unit!2786)

(assert (=> b!95439 (= lt!47513 (addApplyDifferent!66 lt!47522 lt!47512 (zeroValue!2322 newMap!16) lt!47527))))

(assert (=> b!95439 (= (apply!90 (+!128 lt!47522 (tuple2!2283 lt!47512 (zeroValue!2322 newMap!16))) lt!47527) (apply!90 lt!47522 lt!47527))))

(declare-fun lt!47519 () Unit!2786)

(assert (=> b!95439 (= lt!47519 lt!47513)))

(declare-fun lt!47524 () ListLongMap!1489)

(assert (=> b!95439 (= lt!47524 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47516 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47516 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47518 () (_ BitVec 64))

(assert (=> b!95439 (= lt!47518 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95439 (= lt!47529 (addApplyDifferent!66 lt!47524 lt!47516 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47518))))

(assert (=> b!95439 (= (apply!90 (+!128 lt!47524 (tuple2!2283 lt!47516 (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47518) (apply!90 lt!47524 lt!47518))))

(declare-fun bm!9585 () Bool)

(assert (=> bm!9585 (= call!9584 call!9586)))

(declare-fun b!95440 () Bool)

(assert (=> b!95440 (= e!62247 call!9585)))

(declare-fun b!95441 () Bool)

(assert (=> b!95441 (= e!62247 call!9588)))

(declare-fun bm!9586 () Bool)

(assert (=> bm!9586 (= call!9585 call!9590)))

(declare-fun b!95442 () Bool)

(assert (=> b!95442 (= e!62242 e!62252)))

(declare-fun res!48242 () Bool)

(assert (=> b!95442 (= res!48242 call!9589)))

(assert (=> b!95442 (=> (not res!48242) (not e!62252))))

(declare-fun bm!9587 () Bool)

(assert (=> bm!9587 (= call!9586 (getCurrentListMapNoExtraKeys!93 (_keys!4117 newMap!16) (_values!2418 newMap!16) (mask!6510 newMap!16) lt!46690 (zeroValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95443 () Bool)

(assert (=> b!95443 (= e!62250 (validKeyInArray!0 (select (arr!1988 (_keys!4117 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95444 () Bool)

(declare-fun Unit!2847 () Unit!2786)

(assert (=> b!95444 (= e!62248 Unit!2847)))

(assert (= (and d!25217 c!16038) b!95437))

(assert (= (and d!25217 (not c!16038)) b!95425))

(assert (= (and b!95425 c!16037) b!95436))

(assert (= (and b!95425 (not c!16037)) b!95433))

(assert (= (and b!95433 c!16035) b!95440))

(assert (= (and b!95433 (not c!16035)) b!95441))

(assert (= (or b!95440 b!95441) bm!9582))

(assert (= (or b!95436 bm!9582) bm!9585))

(assert (= (or b!95436 b!95440) bm!9586))

(assert (= (or b!95437 bm!9585) bm!9587))

(assert (= (or b!95437 bm!9586) bm!9584))

(assert (= (and d!25217 res!48245) b!95443))

(assert (= (and d!25217 c!16036) b!95439))

(assert (= (and d!25217 (not c!16036)) b!95444))

(assert (= (and d!25217 res!48248) b!95435))

(assert (= (and b!95435 res!48243) b!95428))

(assert (= (and b!95435 (not res!48244)) b!95432))

(assert (= (and b!95432 res!48241) b!95424))

(assert (= (and b!95435 res!48240) b!95434))

(assert (= (and b!95434 c!16039) b!95431))

(assert (= (and b!95434 (not c!16039)) b!95426))

(assert (= (and b!95431 res!48247) b!95438))

(assert (= (or b!95431 b!95426) bm!9581))

(assert (= (and b!95434 res!48246) b!95427))

(assert (= (and b!95427 c!16034) b!95442))

(assert (= (and b!95427 (not c!16034)) b!95429))

(assert (= (and b!95442 res!48242) b!95430))

(assert (= (or b!95442 b!95429) bm!9583))

(declare-fun b_lambda!4199 () Bool)

(assert (=> (not b_lambda!4199) (not b!95424)))

(assert (=> b!95424 t!5461))

(declare-fun b_and!5829 () Bool)

(assert (= b_and!5825 (and (=> t!5461 result!3197) b_and!5829)))

(assert (=> b!95424 t!5463))

(declare-fun b_and!5831 () Bool)

(assert (= b_and!5827 (and (=> t!5463 result!3199) b_and!5831)))

(declare-fun m!103503 () Bool)

(assert (=> b!95437 m!103503))

(declare-fun m!103505 () Bool)

(assert (=> b!95430 m!103505))

(assert (=> d!25217 m!101529))

(declare-fun m!103507 () Bool)

(assert (=> bm!9584 m!103507))

(assert (=> b!95424 m!101841))

(assert (=> b!95424 m!101717))

(assert (=> b!95424 m!101843))

(assert (=> b!95424 m!101717))

(assert (=> b!95424 m!101841))

(assert (=> b!95424 m!101635))

(assert (=> b!95424 m!101635))

(declare-fun m!103509 () Bool)

(assert (=> b!95424 m!103509))

(declare-fun m!103511 () Bool)

(assert (=> bm!9583 m!103511))

(declare-fun m!103513 () Bool)

(assert (=> bm!9581 m!103513))

(declare-fun m!103515 () Bool)

(assert (=> b!95439 m!103515))

(declare-fun m!103517 () Bool)

(assert (=> b!95439 m!103517))

(declare-fun m!103519 () Bool)

(assert (=> b!95439 m!103519))

(declare-fun m!103521 () Bool)

(assert (=> b!95439 m!103521))

(declare-fun m!103523 () Bool)

(assert (=> b!95439 m!103523))

(declare-fun m!103525 () Bool)

(assert (=> b!95439 m!103525))

(declare-fun m!103527 () Bool)

(assert (=> b!95439 m!103527))

(declare-fun m!103529 () Bool)

(assert (=> b!95439 m!103529))

(assert (=> b!95439 m!101635))

(declare-fun m!103531 () Bool)

(assert (=> b!95439 m!103531))

(assert (=> b!95439 m!101165))

(declare-fun m!103533 () Bool)

(assert (=> b!95439 m!103533))

(assert (=> b!95439 m!101165))

(declare-fun m!103535 () Bool)

(assert (=> b!95439 m!103535))

(assert (=> b!95439 m!103525))

(declare-fun m!103537 () Bool)

(assert (=> b!95439 m!103537))

(assert (=> b!95439 m!103517))

(declare-fun m!103539 () Bool)

(assert (=> b!95439 m!103539))

(assert (=> b!95439 m!103527))

(assert (=> b!95439 m!101165))

(declare-fun m!103541 () Bool)

(assert (=> b!95439 m!103541))

(declare-fun m!103543 () Bool)

(assert (=> b!95439 m!103543))

(assert (=> b!95439 m!103519))

(declare-fun m!103545 () Bool)

(assert (=> b!95439 m!103545))

(assert (=> b!95428 m!101635))

(assert (=> b!95428 m!101635))

(assert (=> b!95428 m!101637))

(assert (=> b!95432 m!101635))

(assert (=> b!95432 m!101635))

(declare-fun m!103547 () Bool)

(assert (=> b!95432 m!103547))

(assert (=> b!95443 m!101635))

(assert (=> b!95443 m!101635))

(assert (=> b!95443 m!101637))

(assert (=> bm!9587 m!101165))

(assert (=> bm!9587 m!103541))

(declare-fun m!103549 () Bool)

(assert (=> b!95438 m!103549))

(assert (=> d!24685 d!25217))

(assert (=> b!94449 d!24929))

(assert (=> b!94449 d!24921))

(assert (=> b!94546 d!24795))

(declare-fun d!25219 () Bool)

(assert (=> d!25219 (isDefined!101 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47532 () Unit!2786)

(assert (=> d!25219 (= lt!47532 (choose!575 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62255 () Bool)

(assert (=> d!25219 e!62255))

(declare-fun res!48249 () Bool)

(assert (=> d!25219 (=> (not res!48249) (not e!62255))))

(assert (=> d!25219 (= res!48249 (isStrictlySorted!289 (toList!760 lt!46612)))))

(assert (=> d!25219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000) lt!47532)))

(declare-fun b!95445 () Bool)

(assert (=> b!95445 (= e!62255 (containsKey!152 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25219 res!48249) b!95445))

(assert (=> d!25219 m!101535))

(assert (=> d!25219 m!101535))

(assert (=> d!25219 m!101767))

(declare-fun m!103551 () Bool)

(assert (=> d!25219 m!103551))

(assert (=> d!25219 m!102531))

(assert (=> b!95445 m!101763))

(assert (=> b!94517 d!25219))

(assert (=> b!94517 d!24915))

(assert (=> b!94517 d!24917))

(assert (=> b!94561 d!24795))

(declare-fun d!25221 () Bool)

(declare-fun res!48250 () Bool)

(declare-fun e!62256 () Bool)

(assert (=> d!25221 (=> (not res!48250) (not e!62256))))

(assert (=> d!25221 (= res!48250 (simpleValid!66 (_2!1151 lt!46838)))))

(assert (=> d!25221 (= (valid!384 (_2!1151 lt!46838)) e!62256)))

(declare-fun b!95446 () Bool)

(declare-fun res!48251 () Bool)

(assert (=> b!95446 (=> (not res!48251) (not e!62256))))

(assert (=> b!95446 (= res!48251 (= (arrayCountValidKeys!0 (_keys!4117 (_2!1151 lt!46838)) #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46838)))) (_size!465 (_2!1151 lt!46838))))))

(declare-fun b!95447 () Bool)

(declare-fun res!48252 () Bool)

(assert (=> b!95447 (=> (not res!48252) (not e!62256))))

(assert (=> b!95447 (= res!48252 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4117 (_2!1151 lt!46838)) (mask!6510 (_2!1151 lt!46838))))))

(declare-fun b!95448 () Bool)

(assert (=> b!95448 (= e!62256 (arrayNoDuplicates!0 (_keys!4117 (_2!1151 lt!46838)) #b00000000000000000000000000000000 Nil!1552))))

(assert (= (and d!25221 res!48250) b!95446))

(assert (= (and b!95446 res!48251) b!95447))

(assert (= (and b!95447 res!48252) b!95448))

(declare-fun m!103553 () Bool)

(assert (=> d!25221 m!103553))

(declare-fun m!103555 () Bool)

(assert (=> b!95446 m!103555))

(declare-fun m!103557 () Bool)

(assert (=> b!95447 m!103557))

(declare-fun m!103559 () Bool)

(assert (=> b!95448 m!103559))

(assert (=> b!94397 d!25221))

(declare-fun d!25223 () Bool)

(assert (=> d!25223 (= (apply!90 lt!47000 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1275 (getValueByKey!149 (toList!760 lt!47000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3937 () Bool)

(assert (= bs!3937 d!25223))

(assert (=> bs!3937 m!103099))

(assert (=> bs!3937 m!103099))

(declare-fun m!103561 () Bool)

(assert (=> bs!3937 m!103561))

(assert (=> b!94616 d!25223))

(declare-fun d!25225 () Bool)

(declare-fun isEmpty!358 (List!1554) Bool)

(assert (=> d!25225 (= (isEmpty!356 lt!46748) (isEmpty!358 (toList!760 lt!46748)))))

(declare-fun bs!3938 () Bool)

(assert (= bs!3938 d!25225))

(declare-fun m!103563 () Bool)

(assert (=> bs!3938 m!103563))

(assert (=> b!94338 d!25225))

(declare-fun b!95449 () Bool)

(declare-fun e!62258 () Bool)

(declare-fun call!9591 () Bool)

(assert (=> b!95449 (= e!62258 call!9591)))

(declare-fun b!95450 () Bool)

(assert (=> b!95450 (= e!62258 call!9591)))

(declare-fun b!95451 () Bool)

(declare-fun e!62257 () Bool)

(assert (=> b!95451 (= e!62257 e!62258)))

(declare-fun c!16040 () Bool)

(assert (=> b!95451 (= c!16040 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun b!95452 () Bool)

(declare-fun e!62259 () Bool)

(assert (=> b!95452 (= e!62259 e!62257)))

(declare-fun res!48255 () Bool)

(assert (=> b!95452 (=> (not res!48255) (not e!62257))))

(declare-fun e!62260 () Bool)

(assert (=> b!95452 (= res!48255 (not e!62260))))

(declare-fun res!48253 () Bool)

(assert (=> b!95452 (=> (not res!48253) (not e!62260))))

(assert (=> b!95452 (= res!48253 (validKeyInArray!0 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun b!95453 () Bool)

(assert (=> b!95453 (= e!62260 (contains!781 Nil!1552 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000)))))

(declare-fun bm!9588 () Bool)

(assert (=> bm!9588 (= call!9591 (arrayNoDuplicates!0 (_keys!4117 (_2!1151 lt!46714)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16040 (Cons!1551 (select (arr!1988 (_keys!4117 (_2!1151 lt!46714))) #b00000000000000000000000000000000) Nil!1552) Nil!1552)))))

(declare-fun d!25227 () Bool)

(declare-fun res!48254 () Bool)

(assert (=> d!25227 (=> res!48254 e!62259)))

(assert (=> d!25227 (= res!48254 (bvsge #b00000000000000000000000000000000 (size!2236 (_keys!4117 (_2!1151 lt!46714)))))))

(assert (=> d!25227 (= (arrayNoDuplicates!0 (_keys!4117 (_2!1151 lt!46714)) #b00000000000000000000000000000000 Nil!1552) e!62259)))

(assert (= (and d!25227 (not res!48254)) b!95452))

(assert (= (and b!95452 res!48253) b!95453))

(assert (= (and b!95452 res!48255) b!95451))

(assert (= (and b!95451 c!16040) b!95449))

(assert (= (and b!95451 (not c!16040)) b!95450))

(assert (= (or b!95449 b!95450) bm!9588))

(assert (=> b!95451 m!102413))

(assert (=> b!95451 m!102413))

(assert (=> b!95451 m!102453))

(assert (=> b!95452 m!102413))

(assert (=> b!95452 m!102413))

(assert (=> b!95452 m!102453))

(assert (=> b!95453 m!102413))

(assert (=> b!95453 m!102413))

(declare-fun m!103565 () Bool)

(assert (=> b!95453 m!103565))

(assert (=> bm!9588 m!102413))

(declare-fun m!103567 () Bool)

(assert (=> bm!9588 m!103567))

(assert (=> b!94525 d!25227))

(declare-fun d!25229 () Bool)

(assert (=> d!25229 (= (get!1275 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2770 (getValueByKey!149 (toList!760 lt!46612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24629 d!25229))

(assert (=> d!24629 d!24917))

(assert (=> b!94528 d!25053))

(assert (=> b!94528 d!25055))

(declare-fun d!25231 () Bool)

(assert (not d!25231))

(assert (=> b!94495 d!25231))

(declare-fun d!25233 () Bool)

(declare-fun e!62261 () Bool)

(assert (=> d!25233 e!62261))

(declare-fun res!48257 () Bool)

(assert (=> d!25233 (=> (not res!48257) (not e!62261))))

(declare-fun lt!47534 () ListLongMap!1489)

(assert (=> d!25233 (= res!48257 (contains!780 lt!47534 (_1!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun lt!47536 () List!1554)

(assert (=> d!25233 (= lt!47534 (ListLongMap!1490 lt!47536))))

(declare-fun lt!47535 () Unit!2786)

(declare-fun lt!47533 () Unit!2786)

(assert (=> d!25233 (= lt!47535 lt!47533)))

(assert (=> d!25233 (= (getValueByKey!149 lt!47536 (_1!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25233 (= lt!47533 (lemmaContainsTupThenGetReturnValue!65 lt!47536 (_1!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25233 (= lt!47536 (insertStrictlySorted!68 (toList!760 (ite c!15789 call!9477 (ite c!15788 call!9475 call!9479))) (_1!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25233 (= (+!128 (ite c!15789 call!9477 (ite c!15788 call!9475 call!9479)) (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) lt!47534)))

(declare-fun b!95454 () Bool)

(declare-fun res!48256 () Bool)

(assert (=> b!95454 (=> (not res!48256) (not e!62261))))

(assert (=> b!95454 (= res!48256 (= (getValueByKey!149 (toList!760 lt!47534) (_1!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!154 (_2!1152 (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))))

(declare-fun b!95455 () Bool)

(assert (=> b!95455 (= e!62261 (contains!782 (toList!760 lt!47534) (ite (or c!15789 c!15788) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (= (and d!25233 res!48257) b!95454))

(assert (= (and b!95454 res!48256) b!95455))

(declare-fun m!103569 () Bool)

(assert (=> d!25233 m!103569))

(declare-fun m!103571 () Bool)

(assert (=> d!25233 m!103571))

(declare-fun m!103573 () Bool)

(assert (=> d!25233 m!103573))

(declare-fun m!103575 () Bool)

(assert (=> d!25233 m!103575))

(declare-fun m!103577 () Bool)

(assert (=> b!95454 m!103577))

(declare-fun m!103579 () Bool)

(assert (=> b!95455 m!103579))

(assert (=> bm!9475 d!25233))

(declare-fun d!25235 () Bool)

(declare-fun e!62262 () Bool)

(assert (=> d!25235 e!62262))

(declare-fun res!48258 () Bool)

(assert (=> d!25235 (=> res!48258 e!62262)))

(declare-fun lt!47539 () Bool)

(assert (=> d!25235 (= res!48258 (not lt!47539))))

(declare-fun lt!47538 () Bool)

(assert (=> d!25235 (= lt!47539 lt!47538)))

(declare-fun lt!47537 () Unit!2786)

(declare-fun e!62263 () Unit!2786)

(assert (=> d!25235 (= lt!47537 e!62263)))

(declare-fun c!16041 () Bool)

(assert (=> d!25235 (= c!16041 lt!47538)))

(assert (=> d!25235 (= lt!47538 (containsKey!152 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25235 (= (contains!780 lt!46893 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47539)))

(declare-fun b!95456 () Bool)

(declare-fun lt!47540 () Unit!2786)

(assert (=> b!95456 (= e!62263 lt!47540)))

(assert (=> b!95456 (= lt!47540 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!95456 (isDefined!101 (getValueByKey!149 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95457 () Bool)

(declare-fun Unit!2848 () Unit!2786)

(assert (=> b!95457 (= e!62263 Unit!2848)))

(declare-fun b!95458 () Bool)

(assert (=> b!95458 (= e!62262 (isDefined!101 (getValueByKey!149 (toList!760 lt!46893) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25235 c!16041) b!95456))

(assert (= (and d!25235 (not c!16041)) b!95457))

(assert (= (and d!25235 (not res!48258)) b!95458))

(declare-fun m!103581 () Bool)

(assert (=> d!25235 m!103581))

(declare-fun m!103583 () Bool)

(assert (=> b!95456 m!103583))

(assert (=> b!95456 m!101681))

(assert (=> b!95456 m!101681))

(declare-fun m!103585 () Bool)

(assert (=> b!95456 m!103585))

(assert (=> b!95458 m!101681))

(assert (=> b!95458 m!101681))

(assert (=> b!95458 m!103585))

(assert (=> d!24673 d!25235))

(declare-fun c!16042 () Bool)

(declare-fun d!25237 () Bool)

(assert (=> d!25237 (= c!16042 (and ((_ is Cons!1550) lt!46895) (= (_1!1152 (h!2142 lt!46895)) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62264 () Option!155)

(assert (=> d!25237 (= (getValueByKey!149 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62264)))

(declare-fun b!95460 () Bool)

(declare-fun e!62265 () Option!155)

(assert (=> b!95460 (= e!62264 e!62265)))

(declare-fun c!16043 () Bool)

(assert (=> b!95460 (= c!16043 (and ((_ is Cons!1550) lt!46895) (not (= (_1!1152 (h!2142 lt!46895)) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95462 () Bool)

(assert (=> b!95462 (= e!62265 None!153)))

(declare-fun b!95459 () Bool)

(assert (=> b!95459 (= e!62264 (Some!154 (_2!1152 (h!2142 lt!46895))))))

(declare-fun b!95461 () Bool)

(assert (=> b!95461 (= e!62265 (getValueByKey!149 (t!5448 lt!46895) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25237 c!16042) b!95459))

(assert (= (and d!25237 (not c!16042)) b!95460))

(assert (= (and b!95460 c!16043) b!95461))

(assert (= (and b!95460 (not c!16043)) b!95462))

(declare-fun m!103587 () Bool)

(assert (=> b!95461 m!103587))

(assert (=> d!24673 d!25237))

(declare-fun d!25239 () Bool)

(assert (=> d!25239 (= (getValueByKey!149 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!154 (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47541 () Unit!2786)

(assert (=> d!25239 (= lt!47541 (choose!577 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62266 () Bool)

(assert (=> d!25239 e!62266))

(declare-fun res!48259 () Bool)

(assert (=> d!25239 (=> (not res!48259) (not e!62266))))

(assert (=> d!25239 (= res!48259 (isStrictlySorted!289 lt!46895))))

(assert (=> d!25239 (= (lemmaContainsTupThenGetReturnValue!65 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47541)))

(declare-fun b!95463 () Bool)

(declare-fun res!48260 () Bool)

(assert (=> b!95463 (=> (not res!48260) (not e!62266))))

(assert (=> b!95463 (= res!48260 (containsKey!152 lt!46895 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95464 () Bool)

(assert (=> b!95464 (= e!62266 (contains!782 lt!46895 (tuple2!2283 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25239 res!48259) b!95463))

(assert (= (and b!95463 res!48260) b!95464))

(assert (=> d!25239 m!101675))

(declare-fun m!103589 () Bool)

(assert (=> d!25239 m!103589))

(declare-fun m!103591 () Bool)

(assert (=> d!25239 m!103591))

(declare-fun m!103593 () Bool)

(assert (=> b!95463 m!103593))

(declare-fun m!103595 () Bool)

(assert (=> b!95464 m!103595))

(assert (=> d!24673 d!25239))

(declare-fun e!62267 () List!1554)

(declare-fun b!95465 () Bool)

(assert (=> b!95465 (= e!62267 (insertStrictlySorted!68 (t!5448 (toList!760 call!9428)) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95466 () Bool)

(declare-fun e!62269 () List!1554)

(declare-fun call!9593 () List!1554)

(assert (=> b!95466 (= e!62269 call!9593)))

(declare-fun b!95467 () Bool)

(declare-fun e!62270 () List!1554)

(declare-fun call!9592 () List!1554)

(assert (=> b!95467 (= e!62270 call!9592)))

(declare-fun b!95468 () Bool)

(declare-fun res!48262 () Bool)

(declare-fun e!62271 () Bool)

(assert (=> b!95468 (=> (not res!48262) (not e!62271))))

(declare-fun lt!47542 () List!1554)

(assert (=> b!95468 (= res!48262 (containsKey!152 lt!47542 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!16047 () Bool)

(declare-fun b!95470 () Bool)

(declare-fun c!16046 () Bool)

(assert (=> b!95470 (= e!62267 (ite c!16047 (t!5448 (toList!760 call!9428)) (ite c!16046 (Cons!1550 (h!2142 (toList!760 call!9428)) (t!5448 (toList!760 call!9428))) Nil!1551)))))

(declare-fun b!95471 () Bool)

(declare-fun e!62268 () List!1554)

(assert (=> b!95471 (= e!62268 e!62269)))

(assert (=> b!95471 (= c!16047 (and ((_ is Cons!1550) (toList!760 call!9428)) (= (_1!1152 (h!2142 (toList!760 call!9428))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9589 () Bool)

(declare-fun call!9594 () List!1554)

(assert (=> bm!9589 (= call!9593 call!9594)))

(declare-fun b!95472 () Bool)

(assert (=> b!95472 (= e!62270 call!9592)))

(declare-fun b!95469 () Bool)

(assert (=> b!95469 (= e!62268 call!9594)))

(declare-fun d!25241 () Bool)

(assert (=> d!25241 e!62271))

(declare-fun res!48261 () Bool)

(assert (=> d!25241 (=> (not res!48261) (not e!62271))))

(assert (=> d!25241 (= res!48261 (isStrictlySorted!289 lt!47542))))

(assert (=> d!25241 (= lt!47542 e!62268)))

(declare-fun c!16044 () Bool)

(assert (=> d!25241 (= c!16044 (and ((_ is Cons!1550) (toList!760 call!9428)) (bvslt (_1!1152 (h!2142 (toList!760 call!9428))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25241 (isStrictlySorted!289 (toList!760 call!9428))))

(assert (=> d!25241 (= (insertStrictlySorted!68 (toList!760 call!9428) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47542)))

(declare-fun bm!9590 () Bool)

(assert (=> bm!9590 (= call!9594 ($colon$colon!75 e!62267 (ite c!16044 (h!2142 (toList!760 call!9428)) (tuple2!2283 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16045 () Bool)

(assert (=> bm!9590 (= c!16045 c!16044)))

(declare-fun b!95473 () Bool)

(assert (=> b!95473 (= e!62271 (contains!782 lt!47542 (tuple2!2283 (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9591 () Bool)

(assert (=> bm!9591 (= call!9592 call!9593)))

(declare-fun b!95474 () Bool)

(assert (=> b!95474 (= c!16046 (and ((_ is Cons!1550) (toList!760 call!9428)) (bvsgt (_1!1152 (h!2142 (toList!760 call!9428))) (_1!1152 (tuple2!2283 (select (arr!1988 (_keys!4117 (v!2764 (underlying!330 thiss!992)))) from!355) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!95474 (= e!62269 e!62270)))

(assert (= (and d!25241 c!16044) b!95469))

(assert (= (and d!25241 (not c!16044)) b!95471))

(assert (= (and b!95471 c!16047) b!95466))

(assert (= (and b!95471 (not c!16047)) b!95474))

(assert (= (and b!95474 c!16046) b!95467))

(assert (= (and b!95474 (not c!16046)) b!95472))

(assert (= (or b!95467 b!95472) bm!9591))

(assert (= (or b!95466 bm!9591) bm!9589))

(assert (= (or b!95469 bm!9589) bm!9590))

(assert (= (and bm!9590 c!16045) b!95465))

(assert (= (and bm!9590 (not c!16045)) b!95470))

(assert (= (and d!25241 res!48261) b!95468))

(assert (= (and b!95468 res!48262) b!95473))

(declare-fun m!103597 () Bool)

(assert (=> bm!9590 m!103597))

(declare-fun m!103599 () Bool)

(assert (=> b!95473 m!103599))

(declare-fun m!103601 () Bool)

(assert (=> b!95465 m!103601))

(declare-fun m!103603 () Bool)

(assert (=> d!25241 m!103603))

(declare-fun m!103605 () Bool)

(assert (=> d!25241 m!103605))

(declare-fun m!103607 () Bool)

(assert (=> b!95468 m!103607))

(assert (=> d!24673 d!25241))

(declare-fun d!25243 () Bool)

(assert (=> d!25243 (= (inRange!0 (ite c!15769 (index!3121 lt!46891) (index!3124 lt!46891)) (mask!6510 newMap!16)) (and (bvsge (ite c!15769 (index!3121 lt!46891) (index!3124 lt!46891)) #b00000000000000000000000000000000) (bvslt (ite c!15769 (index!3121 lt!46891) (index!3124 lt!46891)) (bvadd (mask!6510 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9461 d!25243))

(assert (=> b!94427 d!24795))

(declare-fun d!25245 () Bool)

(declare-fun e!62272 () Bool)

(assert (=> d!25245 e!62272))

(declare-fun res!48264 () Bool)

(assert (=> d!25245 (=> (not res!48264) (not e!62272))))

(declare-fun lt!47544 () ListLongMap!1489)

(assert (=> d!25245 (= res!48264 (contains!780 lt!47544 (_1!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun lt!47546 () List!1554)

(assert (=> d!25245 (= lt!47544 (ListLongMap!1490 lt!47546))))

(declare-fun lt!47545 () Unit!2786)

(declare-fun lt!47543 () Unit!2786)

(assert (=> d!25245 (= lt!47545 lt!47543)))

(assert (=> d!25245 (= (getValueByKey!149 lt!47546 (_1!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))) (Some!154 (_2!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!25245 (= lt!47543 (lemmaContainsTupThenGetReturnValue!65 lt!47546 (_1!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (_2!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!25245 (= lt!47546 (insertStrictlySorted!68 (toList!760 (ite c!15780 call!9470 (ite c!15779 call!9468 call!9472))) (_1!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (_2!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!25245 (= (+!128 (ite c!15780 call!9470 (ite c!15779 call!9468 call!9472)) (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!47544)))

(declare-fun b!95475 () Bool)

(declare-fun res!48263 () Bool)

(assert (=> b!95475 (=> (not res!48263) (not e!62272))))

(assert (=> b!95475 (= res!48263 (= (getValueByKey!149 (toList!760 lt!47544) (_1!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))) (Some!154 (_2!1152 (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))))

(declare-fun b!95476 () Bool)

(assert (=> b!95476 (= e!62272 (contains!782 (toList!760 lt!47544) (ite (or c!15780 c!15779) (tuple2!2283 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2283 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15720 (ite c!15711 (minValue!2322 newMap!16) (get!1272 (select (arr!1989 (_values!2418 (v!2764 (underlying!330 thiss!992)))) from!355) (dynLambda!366 (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (= (and d!25245 res!48264) b!95475))

(assert (= (and b!95475 res!48263) b!95476))

(declare-fun m!103609 () Bool)

(assert (=> d!25245 m!103609))

(declare-fun m!103611 () Bool)

(assert (=> d!25245 m!103611))

(declare-fun m!103613 () Bool)

(assert (=> d!25245 m!103613))

(declare-fun m!103615 () Bool)

(assert (=> d!25245 m!103615))

(declare-fun m!103617 () Bool)

(assert (=> b!95475 m!103617))

(declare-fun m!103619 () Bool)

(assert (=> b!95476 m!103619))

(assert (=> bm!9468 d!25245))

(declare-fun d!25247 () Bool)

(assert (=> d!25247 (= (get!1275 (getValueByKey!149 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46605)) (v!2770 (getValueByKey!149 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46605)))))

(assert (=> d!24651 d!25247))

(declare-fun c!16048 () Bool)

(declare-fun d!25249 () Bool)

(assert (=> d!25249 (= c!16048 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46605)))))

(declare-fun e!62273 () Option!155)

(assert (=> d!25249 (= (getValueByKey!149 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))) lt!46605) e!62273)))

(declare-fun b!95478 () Bool)

(declare-fun e!62274 () Option!155)

(assert (=> b!95478 (= e!62273 e!62274)))

(declare-fun c!16049 () Bool)

(assert (=> b!95478 (= c!16049 (and ((_ is Cons!1550) (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) (not (= (_1!1152 (h!2142 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992)))))))) lt!46605))))))

(declare-fun b!95480 () Bool)

(assert (=> b!95480 (= e!62274 None!153)))

(declare-fun b!95477 () Bool)

(assert (=> b!95477 (= e!62273 (Some!154 (_2!1152 (h!2142 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))))))))

(declare-fun b!95479 () Bool)

(assert (=> b!95479 (= e!62274 (getValueByKey!149 (t!5448 (toList!760 (+!128 lt!46619 (tuple2!2283 lt!46611 (minValue!2322 (v!2764 (underlying!330 thiss!992))))))) lt!46605))))

(assert (= (and d!25249 c!16048) b!95477))

(assert (= (and d!25249 (not c!16048)) b!95478))

(assert (= (and b!95478 c!16049) b!95479))

(assert (= (and b!95478 (not c!16049)) b!95480))

(declare-fun m!103621 () Bool)

(assert (=> b!95479 m!103621))

(assert (=> d!24651 d!25249))

(assert (=> b!94384 d!24627))

(declare-fun condMapEmpty!3689 () Bool)

(declare-fun mapDefault!3689 () ValueCell!962)

(assert (=> mapNonEmpty!3688 (= condMapEmpty!3689 (= mapRest!3688 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3689)))))

(declare-fun e!62276 () Bool)

(declare-fun mapRes!3689 () Bool)

(assert (=> mapNonEmpty!3688 (= tp!9466 (and e!62276 mapRes!3689))))

(declare-fun b!95482 () Bool)

(assert (=> b!95482 (= e!62276 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3689 () Bool)

(declare-fun tp!9467 () Bool)

(declare-fun e!62275 () Bool)

(assert (=> mapNonEmpty!3689 (= mapRes!3689 (and tp!9467 e!62275))))

(declare-fun mapValue!3689 () ValueCell!962)

(declare-fun mapKey!3689 () (_ BitVec 32))

(declare-fun mapRest!3689 () (Array (_ BitVec 32) ValueCell!962))

(assert (=> mapNonEmpty!3689 (= mapRest!3688 (store mapRest!3689 mapKey!3689 mapValue!3689))))

(declare-fun mapIsEmpty!3689 () Bool)

(assert (=> mapIsEmpty!3689 mapRes!3689))

(declare-fun b!95481 () Bool)

(assert (=> b!95481 (= e!62275 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3688 condMapEmpty!3689) mapIsEmpty!3689))

(assert (= (and mapNonEmpty!3688 (not condMapEmpty!3689)) mapNonEmpty!3689))

(assert (= (and mapNonEmpty!3689 ((_ is ValueCellFull!962) mapValue!3689)) b!95481))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!962) mapDefault!3689)) b!95482))

(declare-fun m!103623 () Bool)

(assert (=> mapNonEmpty!3689 m!103623))

(declare-fun condMapEmpty!3690 () Bool)

(declare-fun mapDefault!3690 () ValueCell!962)

(assert (=> mapNonEmpty!3687 (= condMapEmpty!3690 (= mapRest!3687 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3690)))))

(declare-fun e!62278 () Bool)

(declare-fun mapRes!3690 () Bool)

(assert (=> mapNonEmpty!3687 (= tp!9465 (and e!62278 mapRes!3690))))

(declare-fun b!95484 () Bool)

(assert (=> b!95484 (= e!62278 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3690 () Bool)

(declare-fun tp!9468 () Bool)

(declare-fun e!62277 () Bool)

(assert (=> mapNonEmpty!3690 (= mapRes!3690 (and tp!9468 e!62277))))

(declare-fun mapRest!3690 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3690 () (_ BitVec 32))

(declare-fun mapValue!3690 () ValueCell!962)

(assert (=> mapNonEmpty!3690 (= mapRest!3687 (store mapRest!3690 mapKey!3690 mapValue!3690))))

(declare-fun mapIsEmpty!3690 () Bool)

(assert (=> mapIsEmpty!3690 mapRes!3690))

(declare-fun b!95483 () Bool)

(assert (=> b!95483 (= e!62277 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3687 condMapEmpty!3690) mapIsEmpty!3690))

(assert (= (and mapNonEmpty!3687 (not condMapEmpty!3690)) mapNonEmpty!3690))

(assert (= (and mapNonEmpty!3690 ((_ is ValueCellFull!962) mapValue!3690)) b!95483))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!962) mapDefault!3690)) b!95484))

(declare-fun m!103625 () Bool)

(assert (=> mapNonEmpty!3690 m!103625))

(declare-fun b_lambda!4201 () Bool)

(assert (= b_lambda!4173 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4201)))

(declare-fun b_lambda!4203 () Bool)

(assert (= b_lambda!4185 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4203)))

(declare-fun b_lambda!4205 () Bool)

(assert (= b_lambda!4195 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4205)))

(declare-fun b_lambda!4207 () Bool)

(assert (= b_lambda!4175 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4207)))

(declare-fun b_lambda!4209 () Bool)

(assert (= b_lambda!4181 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4209)))

(declare-fun b_lambda!4211 () Bool)

(assert (= b_lambda!4177 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4211)))

(declare-fun b_lambda!4213 () Bool)

(assert (= b_lambda!4179 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4213)))

(declare-fun b_lambda!4215 () Bool)

(assert (= b_lambda!4189 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4215)))

(declare-fun b_lambda!4217 () Bool)

(assert (= b_lambda!4171 (or (and b!93907 b_free!2389) (and b!93913 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))))) b_lambda!4217)))

(declare-fun b_lambda!4219 () Bool)

(assert (= b_lambda!4191 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4219)))

(declare-fun b_lambda!4221 () Bool)

(assert (= b_lambda!4193 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4221)))

(declare-fun b_lambda!4223 () Bool)

(assert (= b_lambda!4199 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4223)))

(declare-fun b_lambda!4225 () Bool)

(assert (= b_lambda!4187 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4225)))

(declare-fun b_lambda!4227 () Bool)

(assert (= b_lambda!4197 (or (and b!93907 b_free!2389 (= (defaultEntry!2435 (v!2764 (underlying!330 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93913 b_free!2391) b_lambda!4227)))

(check-sat (not d!24805) (not b_lambda!4167) (not d!25187) (not b!94685) (not b!95205) (not b!95143) (not b!94726) (not b!94777) (not b!95026) (not b!95393) (not d!24957) (not mapNonEmpty!3689) (not b_lambda!4183) (not d!24949) (not b!94742) (not b!94997) (not d!25109) (not b!94811) (not b!95364) (not bm!9571) (not b!95401) (not b!94884) (not bm!9519) (not b_next!2391) (not d!25021) (not bm!9495) (not d!25003) (not b!95291) (not b!94838) (not d!24955) (not b!95286) (not b!94661) (not b!95104) (not b!95100) (not b!94807) (not b!94705) (not b!95331) (not d!24993) (not b!95353) (not b!94915) (not b!94990) (not bm!9492) (not b!94693) (not d!25129) (not d!24849) (not b!94826) (not b!95171) (not d!24931) (not bm!9551) (not b!94770) (not d!25069) (not d!25009) (not b!95271) (not b!95428) (not b!94766) (not b!95464) (not bm!9566) (not d!24997) (not d!24783) (not d!24833) (not d!24819) (not bm!9588) (not bm!9540) (not d!24913) (not b!94947) (not d!24815) (not b!94877) (not bm!9583) (not b_lambda!4169) (not b!95233) (not d!25221) (not b!94979) (not b!95453) (not b!95432) (not b!95177) (not b!95350) (not b!95045) (not d!25027) (not b!95129) (not d!25213) (not d!25143) (not b!95244) (not b!95213) (not d!24807) (not b!95015) (not b!95009) (not b_lambda!4213) (not d!25137) (not b!94778) (not b!95041) (not b!95048) (not d!25035) (not d!24857) (not b!95022) (not bm!9535) (not b!95463) (not b_lambda!4163) (not d!24915) (not d!24809) (not b!94987) (not d!25029) (not b!94665) (not b!94993) (not b!94687) (not d!24763) (not b!94995) (not b!95109) (not b!95448) (not b!95141) (not b!95090) (not b!94679) (not b!95284) (not d!25041) (not b!95210) (not b!94988) (not b!94830) (not d!25151) (not b!94985) (not d!24973) (not b!95430) (not b!95030) (not b!95235) (not b_lambda!4227) (not bm!9584) (not b_lambda!4205) (not d!24989) (not b!94984) (not b!95060) (not b!95276) (not b!95227) (not b!94737) (not d!24827) (not b!95437) (not b!95410) (not d!24789) (not b!94935) (not bm!9496) (not bm!9581) (not b!94896) (not b!94816) (not d!25087) (not d!25211) (not b!94828) (not b!94732) (not d!24821) (not b!95140) (not d!25051) (not d!24863) (not b!94941) (not b!94953) (not b!95001) (not b!95282) (not d!25037) (not b!95451) (not b!94656) (not b!94869) (not d!25065) (not b!94928) (not b!95452) (not d!24825) (not b!94944) (not b!95455) (not d!25215) (not b!94880) (not b!95176) (not b!94994) (not bm!9569) (not d!25169) (not b!95443) (not d!24803) (not b!95120) (not d!24737) (not b!95473) (not b!94767) (not d!24823) (not b!94739) (not d!25173) (not b!94822) (not b!95293) (not b!95169) (not b!94735) (not b_lambda!4219) (not d!24991) (not bm!9553) (not bm!9539) (not b!94692) (not b!95328) (not d!25053) (not b!94768) (not b!95230) (not b!95234) (not d!24741) (not b!95095) (not b!95313) (not b!94968) (not d!25139) (not d!24963) (not b!95130) (not b!94957) (not b!95186) (not b_lambda!4203) (not bm!9537) (not b!95292) (not bm!9554) (not d!24867) (not d!25123) (not b!94772) (not b!94949) (not b!95111) (not b!94700) (not b!94647) (not bm!9512) (not b!95388) (not b!94999) (not b!94943) (not b!95036) (not d!24847) (not b!94833) (not b!95335) (not d!24811) (not d!24765) (not d!24987) (not b!94740) (not b!95212) (not b!95138) (not b_lambda!4207) (not b!95316) (not bm!9587) (not d!24961) (not d!24751) (not b!95083) (not b!95424) (not b!95258) (not b!95323) (not d!25153) (not b!95119) (not d!24895) (not d!24845) (not d!24801) (not bm!9574) (not bm!9555) (not d!24887) (not bm!9513) (not d!24797) (not b!95043) (not b!94712) (not b!95050) (not d!25233) (not d!24793) (not b!94809) (not b!94964) (not d!24739) (not d!24909) (not d!24943) (not d!25095) (not b!94668) (not d!24865) (not b!95077) (not b!94818) (not b_lambda!4149) (not d!25097) (not d!25241) (not bm!9491) (not b_lambda!4161) (not bm!9507) (not b!94744) (not b!94916) (not bm!9510) (not b!95306) (not b!94983) (not d!25031) (not d!24753) (not d!25107) (not b!95243) (not b!95072) (not b!94684) (not b!94796) (not d!25125) (not b!95400) (not b!95240) (not b!95412) (not b!94789) (not d!25115) (not b!94974) (not b!94959) (not b!94752) (not d!24929) (not b!95395) (not b_lambda!4225) (not d!25005) (not b!95268) (not b!95069) (not bm!9590) (not b!94921) (not d!24841) (not d!24953) (not bm!9523) (not d!25225) (not b!95408) (not b!94707) (not b!95423) (not b!94758) (not d!24853) (not b!95134) (not b!94764) (not b_lambda!4215) (not d!24971) (not bm!9576) (not d!24881) (not d!25061) (not b!95088) (not d!24975) (not b!95178) (not bm!9515) (not b!94730) (not d!24983) (not b!94960) (not d!25133) (not b!95005) (not d!25171) (not d!25195) (not bm!9572) (not b!95016) (not d!24967) (not b!95174) (not bm!9520) (not b!94690) (not b!95461) (not d!24767) (not b!95330) (not b!95447) (not bm!9570) (not bm!9548) (not b!95446) (not b!94844) (not d!25239) (not b!95105) (not b_lambda!4211) (not b!95403) (not d!25079) (not b!95250) (not b!95113) (not b!95348) (not b!94973) (not d!24855) (not b!94704) (not b_lambda!4145) (not bm!9565) (not bm!9490) (not b!95002) (not b!94801) (not b!95362) (not b!95028) (not b_lambda!4217) (not d!24979) (not b!94797) (not d!25223) (not bm!9563) (not b!95307) (not b!95476) (not b!94711) (not b!94906) (not b_lambda!4223) (not b!95439) (not b_lambda!4201) (not bm!9533) (not b_lambda!4221) (not b!95321) (not d!24813) (not b!95422) (not d!24869) (not d!24871) (not b!95102) (not mapNonEmpty!3690) (not b!95035) (not b!95354) (not bm!9516) (not b!95303) (not b!94913) (not d!24927) (not d!24769) (not b!94832) (not d!24873) (not b!94925) (not b!95332) (not b!94786) (not b!95263) (not d!25105) (not b!95081) (not d!25063) (not b!94787) (not d!24925) (not b!94911) (not b!94719) (not b!95006) (not b!94783) (not d!25013) (not b!95124) (not bm!9526) (not b!95343) (not b!95020) (not b!94785) (not b!94779) (not b!95454) (not b!94893) (not b!95397) (not d!24817) (not b!94709) (not d!24901) (not b!95078) (not d!25093) (not b!94792) (not b!94992) (not b!95252) (not b!94882) (not b!95067) (not b!94694) (not d!25085) (not b!95127) b_and!5829 (not b!94803) (not b!95216) (not b!94982) (not b!94938) (not b!95004) (not d!25175) (not b!94723) (not b!94672) (not d!25209) (not b!95092) (not b!95248) (not b!95228) (not d!24877) (not b!94790) (not bm!9493) (not b!94791) (not b!94703) (not d!24859) (not b_next!2389) (not b!94895) (not d!25073) (not b!94887) (not b!95394) (not d!25057) (not b!95325) (not b!95037) (not b!95085) (not b!94940) (not b!94817) (not d!24879) (not d!24959) (not b!94729) (not d!24899) (not d!25193) (not d!24999) (not b!94658) b_and!5831 (not b!95010) (not b!94670) (not b!94951) (not bm!9549) (not b!94727) (not b_lambda!4165) (not b!95361) (not b!95131) (not b!94753) (not b!94866) (not d!25023) (not d!25067) (not b!95118) (not b!95346) (not b!95420) (not d!24831) (not d!25167) (not b!95136) (not b!95308) (not d!24903) (not b!95456) (not b!95018) (not b!94702) (not d!24969) (not bm!9577) (not b!95302) (not d!24787) (not b!94749) (not d!24891) (not d!24981) (not b!94650) (not b!94695) (not b!95257) (not bm!9558) (not d!24851) (not d!24835) (not b!94955) (not b!95411) (not b_lambda!4209) (not b!94675) (not b!95139) (not d!25217) (not b!94741) (not b!95278) (not b!95021) (not b!95315) (not bm!9521) (not b!95445) (not b!94924) (not b!95206) (not b!95168) (not b!95479) (not bm!9499) (not d!24861) (not b!94775) (not b!95415) (not d!25127) (not b!94898) (not b!94937) (not b!95218) (not d!25001) (not d!25147) (not b!94725) (not b!95344) (not b!95064) (not d!25199) (not d!24837) (not d!25219) (not b!95297) (not d!25007) (not d!24995) (not d!25043) (not b!94794) (not b!94909) (not b!94942) (not b!95465) (not b!95468) (not b!95207) (not b!94639) (not bm!9489) (not b!95181) (not b!94751) (not bm!9531) (not d!25119) (not d!25189) (not b!94774) (not b!95238) (not b!94891) (not d!24905) (not b!94641) (not d!24923) (not d!25205) (not bm!9525) (not b!95091) (not b!95051) tp_is_empty!2611 (not d!25235) (not b!94653) (not b!95055) (not d!25245) (not b!95358) (not b!94975) (not b!95011) (not b!94736) (not b!94923) (not d!25103) (not d!25047) (not b!95052) (not b!94878) (not bm!9579) (not b!94746) (not b!94716) (not b!95402) (not b!94835) (not b!94845) (not d!25099) (not d!24829) (not b!94918) (not d!25145) (not bm!9557) (not bm!9529) (not b!95458) (not d!24875) (not b!95475) (not b!94950) (not d!24779) (not d!25011) (not d!25179) (not b!94933) (not bm!9543) (not b!95128) (not d!24839) (not b!95019) (not b!95355) (not b!94966) (not b!94731) (not d!25163) (not b!94714) (not b!94748) (not d!24935) (not b!94900) (not bm!9522) (not b!94874) (not d!25075) (not b!95259) (not b!95405) (not d!25025) (not b!94958) (not b!95438) (not d!24785) (not d!24985) (not b!95241) (not b!94782) (not bm!9562) (not b!94755) (not b!95340) (not bm!9561))
(check-sat b_and!5829 b_and!5831 (not b_next!2389) (not b_next!2391))
