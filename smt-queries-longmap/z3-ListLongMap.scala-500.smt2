; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11352 () Bool)

(assert start!11352)

(declare-fun b!93841 () Bool)

(declare-fun b_free!2389 () Bool)

(declare-fun b_next!2389 () Bool)

(assert (=> b!93841 (= b_free!2389 (not b_next!2389))))

(declare-fun tp!9433 () Bool)

(declare-fun b_and!5717 () Bool)

(assert (=> b!93841 (= tp!9433 b_and!5717)))

(declare-fun b!93842 () Bool)

(declare-fun b_free!2391 () Bool)

(declare-fun b_next!2391 () Bool)

(assert (=> b!93842 (= b_free!2391 (not b_next!2391))))

(declare-fun tp!9434 () Bool)

(declare-fun b_and!5719 () Bool)

(assert (=> b!93842 (= tp!9434 b_and!5719)))

(declare-fun b!93831 () Bool)

(declare-fun res!47563 () Bool)

(declare-fun e!61268 () Bool)

(assert (=> b!93831 (=> (not res!47563) (not e!61268))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!3129 0))(
  ( (V!3130 (val!1350 Int)) )
))
(declare-datatypes ((array!4177 0))(
  ( (array!4178 (arr!1984 (Array (_ BitVec 32) (_ BitVec 64))) (size!2233 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!962 0))(
  ( (ValueCellFull!962 (v!2753 V!3129)) (EmptyCell!962) )
))
(declare-datatypes ((array!4179 0))(
  ( (array!4180 (arr!1985 (Array (_ BitVec 32) ValueCell!962)) (size!2234 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!832 0))(
  ( (LongMapFixedSize!833 (defaultEntry!2435 Int) (mask!6509 (_ BitVec 32)) (extraKeys!2264 (_ BitVec 32)) (zeroValue!2322 V!3129) (minValue!2322 V!3129) (_size!465 (_ BitVec 32)) (_keys!4116 array!4177) (_values!2418 array!4179) (_vacant!465 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!624 0))(
  ( (Cell!625 (v!2754 LongMapFixedSize!832)) )
))
(declare-datatypes ((LongMap!624 0))(
  ( (LongMap!625 (underlying!323 Cell!624)) )
))
(declare-fun thiss!992 () LongMap!624)

(assert (=> b!93831 (= res!47563 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!93832 () Bool)

(declare-datatypes ((Unit!2800 0))(
  ( (Unit!2801) )
))
(declare-fun e!61265 () Unit!2800)

(declare-fun Unit!2802 () Unit!2800)

(assert (=> b!93832 (= e!61265 Unit!2802)))

(declare-fun lt!46462 () Unit!2800)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!90 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2800)

(assert (=> b!93832 (= lt!46462 (lemmaListMapContainsThenArrayContainsFrom!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4177 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!93832 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!46459 () Unit!2800)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4177 (_ BitVec 32) (_ BitVec 32)) Unit!2800)

(assert (=> b!93832 (= lt!46459 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1575 0))(
  ( (Nil!1572) (Cons!1571 (h!2163 (_ BitVec 64)) (t!5468 List!1575)) )
))
(declare-fun arrayNoDuplicates!0 (array!4177 (_ BitVec 32) List!1575) Bool)

(assert (=> b!93832 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) from!355 Nil!1572)))

(declare-fun lt!46463 () Unit!2800)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4177 (_ BitVec 32) (_ BitVec 64) List!1575) Unit!2800)

(assert (=> b!93832 (= lt!46463 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572)))))

(assert (=> b!93832 false))

(declare-fun mapIsEmpty!3669 () Bool)

(declare-fun mapRes!3670 () Bool)

(assert (=> mapIsEmpty!3669 mapRes!3670))

(declare-fun b!93833 () Bool)

(declare-fun e!61262 () Bool)

(declare-fun tp_is_empty!2611 () Bool)

(assert (=> b!93833 (= e!61262 tp_is_empty!2611)))

(declare-fun b!93834 () Bool)

(declare-fun e!61274 () Bool)

(assert (=> b!93834 (= e!61274 tp_is_empty!2611)))

(declare-fun b!93835 () Bool)

(declare-fun e!61269 () Bool)

(declare-fun e!61263 () Bool)

(assert (=> b!93835 (= e!61269 e!61263)))

(declare-fun res!47565 () Bool)

(assert (=> b!93835 (=> (not res!47565) (not e!61263))))

(declare-datatypes ((tuple2!2302 0))(
  ( (tuple2!2303 (_1!1162 Bool) (_2!1162 LongMapFixedSize!832)) )
))
(declare-fun lt!46461 () tuple2!2302)

(assert (=> b!93835 (= res!47565 (and (_1!1162 lt!46461) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!46457 () Unit!2800)

(assert (=> b!93835 (= lt!46457 e!61265)))

(declare-fun c!15624 () Bool)

(declare-datatypes ((tuple2!2304 0))(
  ( (tuple2!2305 (_1!1163 (_ BitVec 64)) (_2!1163 V!3129)) )
))
(declare-datatypes ((List!1576 0))(
  ( (Nil!1573) (Cons!1572 (h!2164 tuple2!2304) (t!5469 List!1576)) )
))
(declare-datatypes ((ListLongMap!1501 0))(
  ( (ListLongMap!1502 (toList!766 List!1576)) )
))
(declare-fun lt!46460 () ListLongMap!1501)

(declare-fun contains!786 (ListLongMap!1501 (_ BitVec 64)) Bool)

(assert (=> b!93835 (= c!15624 (contains!786 lt!46460 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun newMap!16 () LongMapFixedSize!832)

(declare-fun update!141 (LongMapFixedSize!832 (_ BitVec 64) V!3129) tuple2!2302)

(declare-fun get!1267 (ValueCell!962 V!3129) V!3129)

(declare-fun dynLambda!364 (Int (_ BitVec 64)) V!3129)

(assert (=> b!93835 (= lt!46461 (update!141 newMap!16 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!93836 () Bool)

(declare-fun e!61271 () Bool)

(declare-fun e!61273 () Bool)

(assert (=> b!93836 (= e!61271 e!61273)))

(declare-fun b!93837 () Bool)

(declare-fun res!47567 () Bool)

(assert (=> b!93837 (=> (not res!47567) (not e!61268))))

(assert (=> b!93837 (= res!47567 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6509 newMap!16)) (_size!465 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!93838 () Bool)

(declare-fun e!61264 () Bool)

(declare-fun e!61270 () Bool)

(declare-fun mapRes!3669 () Bool)

(assert (=> b!93838 (= e!61264 (and e!61270 mapRes!3669))))

(declare-fun condMapEmpty!3670 () Bool)

(declare-fun mapDefault!3669 () ValueCell!962)

(assert (=> b!93838 (= condMapEmpty!3670 (= (arr!1985 (_values!2418 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3669)))))

(declare-fun b!93840 () Bool)

(declare-fun Unit!2803 () Unit!2800)

(assert (=> b!93840 (= e!61265 Unit!2803)))

(declare-fun mapIsEmpty!3670 () Bool)

(assert (=> mapIsEmpty!3670 mapRes!3669))

(declare-fun e!61266 () Bool)

(declare-fun e!61275 () Bool)

(declare-fun array_inv!1243 (array!4177) Bool)

(declare-fun array_inv!1244 (array!4179) Bool)

(assert (=> b!93841 (= e!61275 (and tp!9433 tp_is_empty!2611 (array_inv!1243 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (array_inv!1244 (_values!2418 (v!2754 (underlying!323 thiss!992)))) e!61266))))

(declare-fun mapNonEmpty!3669 () Bool)

(declare-fun tp!9435 () Bool)

(declare-fun e!61260 () Bool)

(assert (=> mapNonEmpty!3669 (= mapRes!3670 (and tp!9435 e!61260))))

(declare-fun mapRest!3670 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapValue!3670 () ValueCell!962)

(declare-fun mapKey!3669 () (_ BitVec 32))

(assert (=> mapNonEmpty!3669 (= (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (store mapRest!3670 mapKey!3669 mapValue!3670))))

(declare-fun e!61261 () Bool)

(assert (=> b!93842 (= e!61261 (and tp!9434 tp_is_empty!2611 (array_inv!1243 (_keys!4116 newMap!16)) (array_inv!1244 (_values!2418 newMap!16)) e!61264))))

(declare-fun b!93843 () Bool)

(assert (=> b!93843 (= e!61263 (not (= (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6509 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!93844 () Bool)

(assert (=> b!93844 (= e!61268 e!61269)))

(declare-fun res!47566 () Bool)

(assert (=> b!93844 (=> (not res!47566) (not e!61269))))

(declare-fun lt!46458 () ListLongMap!1501)

(assert (=> b!93844 (= res!47566 (and (= lt!46458 lt!46460) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1232 (LongMapFixedSize!832) ListLongMap!1501)

(assert (=> b!93844 (= lt!46460 (map!1232 newMap!16))))

(declare-fun getCurrentListMap!448 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) ListLongMap!1501)

(assert (=> b!93844 (= lt!46458 (getCurrentListMap!448 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun mapNonEmpty!3670 () Bool)

(declare-fun tp!9436 () Bool)

(assert (=> mapNonEmpty!3670 (= mapRes!3669 (and tp!9436 e!61274))))

(declare-fun mapRest!3669 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapValue!3669 () ValueCell!962)

(declare-fun mapKey!3670 () (_ BitVec 32))

(assert (=> mapNonEmpty!3670 (= (arr!1985 (_values!2418 newMap!16)) (store mapRest!3669 mapKey!3670 mapValue!3669))))

(declare-fun b!93845 () Bool)

(assert (=> b!93845 (= e!61260 tp_is_empty!2611)))

(declare-fun b!93846 () Bool)

(declare-fun res!47562 () Bool)

(assert (=> b!93846 (=> (not res!47562) (not e!61268))))

(declare-fun valid!381 (LongMapFixedSize!832) Bool)

(assert (=> b!93846 (= res!47562 (valid!381 newMap!16))))

(declare-fun b!93847 () Bool)

(assert (=> b!93847 (= e!61266 (and e!61262 mapRes!3670))))

(declare-fun condMapEmpty!3669 () Bool)

(declare-fun mapDefault!3670 () ValueCell!962)

(assert (=> b!93847 (= condMapEmpty!3669 (= (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3670)))))

(declare-fun b!93848 () Bool)

(declare-fun res!47561 () Bool)

(assert (=> b!93848 (=> (not res!47561) (not e!61263))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!93848 (= res!47561 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!93849 () Bool)

(assert (=> b!93849 (= e!61273 e!61275)))

(declare-fun res!47564 () Bool)

(assert (=> start!11352 (=> (not res!47564) (not e!61268))))

(declare-fun valid!382 (LongMap!624) Bool)

(assert (=> start!11352 (= res!47564 (valid!382 thiss!992))))

(assert (=> start!11352 e!61268))

(assert (=> start!11352 e!61271))

(assert (=> start!11352 true))

(assert (=> start!11352 e!61261))

(declare-fun b!93839 () Bool)

(assert (=> b!93839 (= e!61270 tp_is_empty!2611)))

(assert (= (and start!11352 res!47564) b!93831))

(assert (= (and b!93831 res!47563) b!93846))

(assert (= (and b!93846 res!47562) b!93837))

(assert (= (and b!93837 res!47567) b!93844))

(assert (= (and b!93844 res!47566) b!93835))

(assert (= (and b!93835 c!15624) b!93832))

(assert (= (and b!93835 (not c!15624)) b!93840))

(assert (= (and b!93835 res!47565) b!93848))

(assert (= (and b!93848 res!47561) b!93843))

(assert (= (and b!93847 condMapEmpty!3669) mapIsEmpty!3669))

(assert (= (and b!93847 (not condMapEmpty!3669)) mapNonEmpty!3669))

(get-info :version)

(assert (= (and mapNonEmpty!3669 ((_ is ValueCellFull!962) mapValue!3670)) b!93845))

(assert (= (and b!93847 ((_ is ValueCellFull!962) mapDefault!3670)) b!93833))

(assert (= b!93841 b!93847))

(assert (= b!93849 b!93841))

(assert (= b!93836 b!93849))

(assert (= start!11352 b!93836))

(assert (= (and b!93838 condMapEmpty!3670) mapIsEmpty!3670))

(assert (= (and b!93838 (not condMapEmpty!3670)) mapNonEmpty!3670))

(assert (= (and mapNonEmpty!3670 ((_ is ValueCellFull!962) mapValue!3669)) b!93834))

(assert (= (and b!93838 ((_ is ValueCellFull!962) mapDefault!3669)) b!93839))

(assert (= b!93842 b!93838))

(assert (= start!11352 b!93842))

(declare-fun b_lambda!4131 () Bool)

(assert (=> (not b_lambda!4131) (not b!93835)))

(declare-fun t!5465 () Bool)

(declare-fun tb!1861 () Bool)

(assert (=> (and b!93841 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) t!5465) tb!1861))

(declare-fun result!3177 () Bool)

(assert (=> tb!1861 (= result!3177 tp_is_empty!2611)))

(assert (=> b!93835 t!5465))

(declare-fun b_and!5721 () Bool)

(assert (= b_and!5717 (and (=> t!5465 result!3177) b_and!5721)))

(declare-fun tb!1863 () Bool)

(declare-fun t!5467 () Bool)

(assert (=> (and b!93842 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) t!5467) tb!1863))

(declare-fun result!3181 () Bool)

(assert (= result!3181 result!3177))

(assert (=> b!93835 t!5467))

(declare-fun b_and!5723 () Bool)

(assert (= b_and!5719 (and (=> t!5467 result!3181) b_and!5723)))

(declare-fun m!100969 () Bool)

(assert (=> mapNonEmpty!3670 m!100969))

(declare-fun m!100971 () Bool)

(assert (=> b!93835 m!100971))

(declare-fun m!100973 () Bool)

(assert (=> b!93835 m!100973))

(declare-fun m!100975 () Bool)

(assert (=> b!93835 m!100975))

(declare-fun m!100977 () Bool)

(assert (=> b!93835 m!100977))

(assert (=> b!93835 m!100973))

(assert (=> b!93835 m!100977))

(declare-fun m!100979 () Bool)

(assert (=> b!93835 m!100979))

(assert (=> b!93835 m!100977))

(assert (=> b!93835 m!100975))

(declare-fun m!100981 () Bool)

(assert (=> b!93835 m!100981))

(assert (=> b!93835 m!100971))

(declare-fun m!100983 () Bool)

(assert (=> mapNonEmpty!3669 m!100983))

(declare-fun m!100985 () Bool)

(assert (=> start!11352 m!100985))

(assert (=> b!93844 m!100977))

(declare-fun m!100987 () Bool)

(assert (=> b!93844 m!100987))

(declare-fun m!100989 () Bool)

(assert (=> b!93844 m!100989))

(declare-fun m!100991 () Bool)

(assert (=> b!93848 m!100991))

(declare-fun m!100993 () Bool)

(assert (=> b!93846 m!100993))

(declare-fun m!100995 () Bool)

(assert (=> b!93842 m!100995))

(declare-fun m!100997 () Bool)

(assert (=> b!93842 m!100997))

(declare-fun m!100999 () Bool)

(assert (=> b!93832 m!100999))

(declare-fun m!101001 () Bool)

(assert (=> b!93832 m!101001))

(assert (=> b!93832 m!100977))

(declare-fun m!101003 () Bool)

(assert (=> b!93832 m!101003))

(assert (=> b!93832 m!100977))

(assert (=> b!93832 m!100977))

(declare-fun m!101005 () Bool)

(assert (=> b!93832 m!101005))

(assert (=> b!93832 m!100977))

(declare-fun m!101007 () Bool)

(assert (=> b!93832 m!101007))

(declare-fun m!101009 () Bool)

(assert (=> b!93841 m!101009))

(declare-fun m!101011 () Bool)

(assert (=> b!93841 m!101011))

(check-sat (not b!93832) (not start!11352) (not b_next!2389) (not mapNonEmpty!3670) (not b!93848) b_and!5721 (not b!93846) tp_is_empty!2611 (not b_next!2391) (not mapNonEmpty!3669) (not b!93844) (not b!93841) b_and!5723 (not b_lambda!4131) (not b!93842) (not b!93835))
(check-sat b_and!5721 b_and!5723 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun b_lambda!4137 () Bool)

(assert (= b_lambda!4131 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4137)))

(check-sat (not b_lambda!4137) (not b!93832) (not start!11352) (not b_next!2389) b_and!5723 (not mapNonEmpty!3670) (not b!93848) b_and!5721 (not b!93846) tp_is_empty!2611 (not b_next!2391) (not mapNonEmpty!3669) (not b!93844) (not b!93841) (not b!93842) (not b!93835))
(check-sat b_and!5721 b_and!5723 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun d!24515 () Bool)

(assert (=> d!24515 (= (map!1232 newMap!16) (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun bs!3856 () Bool)

(assert (= bs!3856 d!24515))

(declare-fun m!101101 () Bool)

(assert (=> bs!3856 m!101101))

(assert (=> b!93844 d!24515))

(declare-fun b!94012 () Bool)

(declare-fun e!61405 () Unit!2800)

(declare-fun Unit!2810 () Unit!2800)

(assert (=> b!94012 (= e!61405 Unit!2810)))

(declare-fun b!94013 () Bool)

(declare-fun e!61410 () ListLongMap!1501)

(declare-fun call!9365 () ListLongMap!1501)

(assert (=> b!94013 (= e!61410 call!9365)))

(declare-fun b!94014 () Bool)

(declare-fun e!61399 () ListLongMap!1501)

(declare-fun call!9370 () ListLongMap!1501)

(assert (=> b!94014 (= e!61399 call!9370)))

(declare-fun b!94015 () Bool)

(declare-fun e!61407 () Bool)

(declare-fun call!9368 () Bool)

(assert (=> b!94015 (= e!61407 (not call!9368))))

(declare-fun bm!9362 () Bool)

(declare-fun lt!46571 () ListLongMap!1501)

(assert (=> bm!9362 (= call!9368 (contains!786 lt!46571 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94016 () Bool)

(assert (=> b!94016 (= e!61399 call!9365)))

(declare-fun bm!9363 () Bool)

(declare-fun call!9369 () ListLongMap!1501)

(assert (=> bm!9363 (= call!9365 call!9369)))

(declare-fun bm!9364 () Bool)

(declare-fun c!15648 () Bool)

(declare-fun call!9366 () ListLongMap!1501)

(declare-fun c!15647 () Bool)

(declare-fun call!9367 () ListLongMap!1501)

(declare-fun +!126 (ListLongMap!1501 tuple2!2304) ListLongMap!1501)

(assert (=> bm!9364 (= call!9369 (+!126 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun bm!9365 () Bool)

(assert (=> bm!9365 (= call!9370 call!9366)))

(declare-fun b!94018 () Bool)

(declare-fun c!15645 () Bool)

(assert (=> b!94018 (= c!15645 (and (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94018 (= e!61410 e!61399)))

(declare-fun b!94019 () Bool)

(declare-fun e!61398 () ListLongMap!1501)

(assert (=> b!94019 (= e!61398 e!61410)))

(assert (=> b!94019 (= c!15647 (and (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94020 () Bool)

(declare-fun e!61402 () Bool)

(declare-fun e!61409 () Bool)

(assert (=> b!94020 (= e!61402 e!61409)))

(declare-fun c!15646 () Bool)

(assert (=> b!94020 (= c!15646 (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94021 () Bool)

(assert (=> b!94021 (= e!61398 (+!126 call!9369 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun bm!9366 () Bool)

(assert (=> bm!9366 (= call!9366 call!9367)))

(declare-fun b!94022 () Bool)

(declare-fun e!61408 () Bool)

(declare-fun apply!90 (ListLongMap!1501 (_ BitVec 64)) V!3129)

(assert (=> b!94022 (= e!61408 (= (apply!90 lt!46571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94022 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> b!94022 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94023 () Bool)

(declare-fun e!61406 () Bool)

(assert (=> b!94023 (= e!61406 (= (apply!90 lt!46571 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94024 () Bool)

(declare-fun res!47628 () Bool)

(assert (=> b!94024 (=> (not res!47628) (not e!61402))))

(assert (=> b!94024 (= res!47628 e!61407)))

(declare-fun c!15643 () Bool)

(assert (=> b!94024 (= c!15643 (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94025 () Bool)

(declare-fun res!47633 () Bool)

(assert (=> b!94025 (=> (not res!47633) (not e!61402))))

(declare-fun e!61404 () Bool)

(assert (=> b!94025 (= res!47633 e!61404)))

(declare-fun res!47629 () Bool)

(assert (=> b!94025 (=> res!47629 e!61404)))

(declare-fun e!61401 () Bool)

(assert (=> b!94025 (= res!47629 (not e!61401))))

(declare-fun res!47635 () Bool)

(assert (=> b!94025 (=> (not res!47635) (not e!61401))))

(assert (=> b!94025 (= res!47635 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun bm!9367 () Bool)

(declare-fun call!9371 () Bool)

(assert (=> bm!9367 (= call!9371 (contains!786 lt!46571 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94026 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!94026 (= e!61401 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94027 () Bool)

(assert (=> b!94027 (= e!61404 e!61408)))

(declare-fun res!47630 () Bool)

(assert (=> b!94027 (=> (not res!47630) (not e!61408))))

(assert (=> b!94027 (= res!47630 (contains!786 lt!46571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94027 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94017 () Bool)

(declare-fun lt!46560 () Unit!2800)

(assert (=> b!94017 (= e!61405 lt!46560)))

(declare-fun lt!46552 () ListLongMap!1501)

(declare-fun getCurrentListMapNoExtraKeys!90 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) ListLongMap!1501)

(assert (=> b!94017 (= lt!46552 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun lt!46569 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46569 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46563 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46563 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46565 () Unit!2800)

(declare-fun addStillContains!66 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> b!94017 (= lt!46565 (addStillContains!66 lt!46552 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46563))))

(assert (=> b!94017 (contains!786 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46563)))

(declare-fun lt!46568 () Unit!2800)

(assert (=> b!94017 (= lt!46568 lt!46565)))

(declare-fun lt!46553 () ListLongMap!1501)

(assert (=> b!94017 (= lt!46553 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun lt!46557 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46554 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46554 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46558 () Unit!2800)

(declare-fun addApplyDifferent!66 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> b!94017 (= lt!46558 (addApplyDifferent!66 lt!46553 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46554))))

(assert (=> b!94017 (= (apply!90 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46554) (apply!90 lt!46553 lt!46554))))

(declare-fun lt!46562 () Unit!2800)

(assert (=> b!94017 (= lt!46562 lt!46558)))

(declare-fun lt!46550 () ListLongMap!1501)

(assert (=> b!94017 (= lt!46550 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun lt!46555 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46555 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46551 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46551 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46559 () Unit!2800)

(assert (=> b!94017 (= lt!46559 (addApplyDifferent!66 lt!46550 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46551))))

(assert (=> b!94017 (= (apply!90 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46551) (apply!90 lt!46550 lt!46551))))

(declare-fun lt!46567 () Unit!2800)

(assert (=> b!94017 (= lt!46567 lt!46559)))

(declare-fun lt!46561 () ListLongMap!1501)

(assert (=> b!94017 (= lt!46561 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun lt!46570 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46570 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46566 () (_ BitVec 64))

(assert (=> b!94017 (= lt!46566 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94017 (= lt!46560 (addApplyDifferent!66 lt!46561 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46566))))

(assert (=> b!94017 (= (apply!90 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46566) (apply!90 lt!46561 lt!46566))))

(declare-fun d!24517 () Bool)

(assert (=> d!24517 e!61402))

(declare-fun res!47636 () Bool)

(assert (=> d!24517 (=> (not res!47636) (not e!61402))))

(assert (=> d!24517 (= res!47636 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun lt!46564 () ListLongMap!1501)

(assert (=> d!24517 (= lt!46571 lt!46564)))

(declare-fun lt!46556 () Unit!2800)

(assert (=> d!24517 (= lt!46556 e!61405)))

(declare-fun c!15644 () Bool)

(declare-fun e!61400 () Bool)

(assert (=> d!24517 (= c!15644 e!61400)))

(declare-fun res!47634 () Bool)

(assert (=> d!24517 (=> (not res!47634) (not e!61400))))

(assert (=> d!24517 (= res!47634 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24517 (= lt!46564 e!61398)))

(assert (=> d!24517 (= c!15648 (and (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24517 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992))))))

(assert (=> d!24517 (= (getCurrentListMap!448 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) lt!46571)))

(declare-fun b!94028 () Bool)

(declare-fun e!61403 () Bool)

(assert (=> b!94028 (= e!61403 (= (apply!90 lt!46571 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94029 () Bool)

(assert (=> b!94029 (= e!61400 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94030 () Bool)

(assert (=> b!94030 (= e!61407 e!61403)))

(declare-fun res!47632 () Bool)

(assert (=> b!94030 (= res!47632 call!9368)))

(assert (=> b!94030 (=> (not res!47632) (not e!61403))))

(declare-fun b!94031 () Bool)

(assert (=> b!94031 (= e!61409 e!61406)))

(declare-fun res!47631 () Bool)

(assert (=> b!94031 (= res!47631 call!9371)))

(assert (=> b!94031 (=> (not res!47631) (not e!61406))))

(declare-fun bm!9368 () Bool)

(assert (=> bm!9368 (= call!9367 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94032 () Bool)

(assert (=> b!94032 (= e!61409 (not call!9371))))

(assert (= (and d!24517 c!15648) b!94021))

(assert (= (and d!24517 (not c!15648)) b!94019))

(assert (= (and b!94019 c!15647) b!94013))

(assert (= (and b!94019 (not c!15647)) b!94018))

(assert (= (and b!94018 c!15645) b!94016))

(assert (= (and b!94018 (not c!15645)) b!94014))

(assert (= (or b!94016 b!94014) bm!9365))

(assert (= (or b!94013 bm!9365) bm!9366))

(assert (= (or b!94013 b!94016) bm!9363))

(assert (= (or b!94021 bm!9366) bm!9368))

(assert (= (or b!94021 bm!9363) bm!9364))

(assert (= (and d!24517 res!47634) b!94029))

(assert (= (and d!24517 c!15644) b!94017))

(assert (= (and d!24517 (not c!15644)) b!94012))

(assert (= (and d!24517 res!47636) b!94025))

(assert (= (and b!94025 res!47635) b!94026))

(assert (= (and b!94025 (not res!47629)) b!94027))

(assert (= (and b!94027 res!47630) b!94022))

(assert (= (and b!94025 res!47633) b!94024))

(assert (= (and b!94024 c!15643) b!94030))

(assert (= (and b!94024 (not c!15643)) b!94015))

(assert (= (and b!94030 res!47632) b!94028))

(assert (= (or b!94030 b!94015) bm!9362))

(assert (= (and b!94024 res!47628) b!94020))

(assert (= (and b!94020 c!15646) b!94031))

(assert (= (and b!94020 (not c!15646)) b!94032))

(assert (= (and b!94031 res!47631) b!94023))

(assert (= (or b!94031 b!94032) bm!9367))

(declare-fun b_lambda!4139 () Bool)

(assert (=> (not b_lambda!4139) (not b!94022)))

(assert (=> b!94022 t!5465))

(declare-fun b_and!5741 () Bool)

(assert (= b_and!5721 (and (=> t!5465 result!3177) b_and!5741)))

(assert (=> b!94022 t!5467))

(declare-fun b_and!5743 () Bool)

(assert (= b_and!5723 (and (=> t!5467 result!3181) b_and!5743)))

(declare-fun m!101103 () Bool)

(assert (=> b!94021 m!101103))

(declare-fun m!101105 () Bool)

(assert (=> b!94026 m!101105))

(assert (=> b!94026 m!101105))

(declare-fun m!101107 () Bool)

(assert (=> b!94026 m!101107))

(declare-fun m!101109 () Bool)

(assert (=> b!94017 m!101109))

(declare-fun m!101111 () Bool)

(assert (=> b!94017 m!101111))

(declare-fun m!101113 () Bool)

(assert (=> b!94017 m!101113))

(declare-fun m!101115 () Bool)

(assert (=> b!94017 m!101115))

(declare-fun m!101117 () Bool)

(assert (=> b!94017 m!101117))

(assert (=> b!94017 m!101109))

(declare-fun m!101119 () Bool)

(assert (=> b!94017 m!101119))

(declare-fun m!101121 () Bool)

(assert (=> b!94017 m!101121))

(assert (=> b!94017 m!101105))

(assert (=> b!94017 m!101121))

(declare-fun m!101123 () Bool)

(assert (=> b!94017 m!101123))

(declare-fun m!101125 () Bool)

(assert (=> b!94017 m!101125))

(declare-fun m!101127 () Bool)

(assert (=> b!94017 m!101127))

(declare-fun m!101129 () Bool)

(assert (=> b!94017 m!101129))

(declare-fun m!101131 () Bool)

(assert (=> b!94017 m!101131))

(declare-fun m!101133 () Bool)

(assert (=> b!94017 m!101133))

(declare-fun m!101135 () Bool)

(assert (=> b!94017 m!101135))

(assert (=> b!94017 m!101115))

(declare-fun m!101137 () Bool)

(assert (=> b!94017 m!101137))

(assert (=> b!94017 m!101119))

(declare-fun m!101139 () Bool)

(assert (=> b!94017 m!101139))

(assert (=> b!94022 m!101105))

(declare-fun m!101141 () Bool)

(assert (=> b!94022 m!101141))

(assert (=> b!94022 m!100973))

(declare-fun m!101143 () Bool)

(assert (=> b!94022 m!101143))

(assert (=> b!94022 m!100973))

(declare-fun m!101145 () Bool)

(assert (=> b!94022 m!101145))

(assert (=> b!94022 m!101105))

(assert (=> b!94022 m!101143))

(declare-fun m!101147 () Bool)

(assert (=> bm!9364 m!101147))

(declare-fun m!101149 () Bool)

(assert (=> bm!9367 m!101149))

(assert (=> b!94027 m!101105))

(assert (=> b!94027 m!101105))

(declare-fun m!101151 () Bool)

(assert (=> b!94027 m!101151))

(assert (=> b!94029 m!101105))

(assert (=> b!94029 m!101105))

(assert (=> b!94029 m!101107))

(declare-fun m!101153 () Bool)

(assert (=> b!94023 m!101153))

(declare-fun m!101155 () Bool)

(assert (=> b!94028 m!101155))

(assert (=> d!24517 m!100991))

(assert (=> bm!9368 m!101127))

(declare-fun m!101157 () Bool)

(assert (=> bm!9362 m!101157))

(assert (=> b!93844 d!24517))

(declare-fun d!24519 () Bool)

(assert (=> d!24519 (not (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46574 () Unit!2800)

(declare-fun choose!68 (array!4177 (_ BitVec 32) (_ BitVec 64) List!1575) Unit!2800)

(assert (=> d!24519 (= lt!46574 (choose!68 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572)))))

(assert (=> d!24519 (bvslt (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24519 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572)) lt!46574)))

(declare-fun bs!3857 () Bool)

(assert (= bs!3857 d!24519))

(assert (=> bs!3857 m!100977))

(assert (=> bs!3857 m!101005))

(assert (=> bs!3857 m!100977))

(declare-fun m!101159 () Bool)

(assert (=> bs!3857 m!101159))

(assert (=> b!93832 d!24519))

(declare-fun d!24521 () Bool)

(assert (=> d!24521 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) from!355 Nil!1572)))

(declare-fun lt!46577 () Unit!2800)

(declare-fun choose!39 (array!4177 (_ BitVec 32) (_ BitVec 32)) Unit!2800)

(assert (=> d!24521 (= lt!46577 (choose!39 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!24521 (bvslt (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24521 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 from!355) lt!46577)))

(declare-fun bs!3858 () Bool)

(assert (= bs!3858 d!24521))

(assert (=> bs!3858 m!101001))

(declare-fun m!101161 () Bool)

(assert (=> bs!3858 m!101161))

(assert (=> b!93832 d!24521))

(declare-fun d!24523 () Bool)

(declare-fun res!47641 () Bool)

(declare-fun e!61415 () Bool)

(assert (=> d!24523 (=> res!47641 e!61415)))

(assert (=> d!24523 (= res!47641 (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24523 (= (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!61415)))

(declare-fun b!94037 () Bool)

(declare-fun e!61416 () Bool)

(assert (=> b!94037 (= e!61415 e!61416)))

(declare-fun res!47642 () Bool)

(assert (=> b!94037 (=> (not res!47642) (not e!61416))))

(assert (=> b!94037 (= res!47642 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94038 () Bool)

(assert (=> b!94038 (= e!61416 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!24523 (not res!47641)) b!94037))

(assert (= (and b!94037 res!47642) b!94038))

(assert (=> d!24523 m!101105))

(assert (=> b!94038 m!100977))

(declare-fun m!101163 () Bool)

(assert (=> b!94038 m!101163))

(assert (=> b!93832 d!24523))

(declare-fun d!24525 () Bool)

(declare-fun e!61419 () Bool)

(assert (=> d!24525 e!61419))

(declare-fun c!15651 () Bool)

(assert (=> d!24525 (= c!15651 (and (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!46580 () Unit!2800)

(declare-fun choose!566 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2800)

(assert (=> d!24525 (= lt!46580 (choose!566 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(assert (=> d!24525 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992))))))

(assert (=> d!24525 (= (lemmaListMapContainsThenArrayContainsFrom!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) lt!46580)))

(declare-fun b!94043 () Bool)

(assert (=> b!94043 (= e!61419 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94044 () Bool)

(assert (=> b!94044 (= e!61419 (ite (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24525 c!15651) b!94043))

(assert (= (and d!24525 (not c!15651)) b!94044))

(assert (=> d!24525 m!100977))

(declare-fun m!101165 () Bool)

(assert (=> d!24525 m!101165))

(assert (=> d!24525 m!100991))

(assert (=> b!94043 m!100977))

(assert (=> b!94043 m!101005))

(assert (=> b!93832 d!24525))

(declare-fun b!94055 () Bool)

(declare-fun e!61431 () Bool)

(declare-fun e!61429 () Bool)

(assert (=> b!94055 (= e!61431 e!61429)))

(declare-fun c!15654 () Bool)

(assert (=> b!94055 (= c!15654 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun bm!9371 () Bool)

(declare-fun call!9374 () Bool)

(assert (=> bm!9371 (= call!9374 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)))))

(declare-fun b!94056 () Bool)

(assert (=> b!94056 (= e!61429 call!9374)))

(declare-fun d!24527 () Bool)

(declare-fun res!47650 () Bool)

(declare-fun e!61430 () Bool)

(assert (=> d!24527 (=> res!47650 e!61430)))

(assert (=> d!24527 (= res!47650 (bvsge from!355 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24527 (= (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) from!355 Nil!1572) e!61430)))

(declare-fun b!94057 () Bool)

(declare-fun e!61428 () Bool)

(declare-fun contains!789 (List!1575 (_ BitVec 64)) Bool)

(assert (=> b!94057 (= e!61428 (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94058 () Bool)

(assert (=> b!94058 (= e!61429 call!9374)))

(declare-fun b!94059 () Bool)

(assert (=> b!94059 (= e!61430 e!61431)))

(declare-fun res!47649 () Bool)

(assert (=> b!94059 (=> (not res!47649) (not e!61431))))

(assert (=> b!94059 (= res!47649 (not e!61428))))

(declare-fun res!47651 () Bool)

(assert (=> b!94059 (=> (not res!47651) (not e!61428))))

(assert (=> b!94059 (= res!47651 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24527 (not res!47650)) b!94059))

(assert (= (and b!94059 res!47651) b!94057))

(assert (= (and b!94059 res!47649) b!94055))

(assert (= (and b!94055 c!15654) b!94058))

(assert (= (and b!94055 (not c!15654)) b!94056))

(assert (= (or b!94058 b!94056) bm!9371))

(assert (=> b!94055 m!100977))

(assert (=> b!94055 m!100977))

(declare-fun m!101167 () Bool)

(assert (=> b!94055 m!101167))

(assert (=> bm!9371 m!100977))

(declare-fun m!101169 () Bool)

(assert (=> bm!9371 m!101169))

(assert (=> b!94057 m!100977))

(assert (=> b!94057 m!100977))

(declare-fun m!101171 () Bool)

(assert (=> b!94057 m!101171))

(assert (=> b!94059 m!100977))

(assert (=> b!94059 m!100977))

(assert (=> b!94059 m!101167))

(assert (=> b!93832 d!24527))

(declare-fun d!24529 () Bool)

(declare-fun e!61436 () Bool)

(assert (=> d!24529 e!61436))

(declare-fun res!47654 () Bool)

(assert (=> d!24529 (=> res!47654 e!61436)))

(declare-fun lt!46591 () Bool)

(assert (=> d!24529 (= res!47654 (not lt!46591))))

(declare-fun lt!46589 () Bool)

(assert (=> d!24529 (= lt!46591 lt!46589)))

(declare-fun lt!46590 () Unit!2800)

(declare-fun e!61437 () Unit!2800)

(assert (=> d!24529 (= lt!46590 e!61437)))

(declare-fun c!15657 () Bool)

(assert (=> d!24529 (= c!15657 lt!46589)))

(declare-fun containsKey!150 (List!1576 (_ BitVec 64)) Bool)

(assert (=> d!24529 (= lt!46589 (containsKey!150 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24529 (= (contains!786 lt!46460 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!46591)))

(declare-fun b!94066 () Bool)

(declare-fun lt!46592 () Unit!2800)

(assert (=> b!94066 (= e!61437 lt!46592)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!99 (List!1576 (_ BitVec 64)) Unit!2800)

(assert (=> b!94066 (= lt!46592 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-datatypes ((Option!152 0))(
  ( (Some!151 (v!2760 V!3129)) (None!150) )
))
(declare-fun isDefined!100 (Option!152) Bool)

(declare-fun getValueByKey!146 (List!1576 (_ BitVec 64)) Option!152)

(assert (=> b!94066 (isDefined!100 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94067 () Bool)

(declare-fun Unit!2811 () Unit!2800)

(assert (=> b!94067 (= e!61437 Unit!2811)))

(declare-fun b!94068 () Bool)

(assert (=> b!94068 (= e!61436 (isDefined!100 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (= (and d!24529 c!15657) b!94066))

(assert (= (and d!24529 (not c!15657)) b!94067))

(assert (= (and d!24529 (not res!47654)) b!94068))

(assert (=> d!24529 m!100977))

(declare-fun m!101173 () Bool)

(assert (=> d!24529 m!101173))

(assert (=> b!94066 m!100977))

(declare-fun m!101175 () Bool)

(assert (=> b!94066 m!101175))

(assert (=> b!94066 m!100977))

(declare-fun m!101177 () Bool)

(assert (=> b!94066 m!101177))

(assert (=> b!94066 m!101177))

(declare-fun m!101179 () Bool)

(assert (=> b!94066 m!101179))

(assert (=> b!94068 m!100977))

(assert (=> b!94068 m!101177))

(assert (=> b!94068 m!101177))

(assert (=> b!94068 m!101179))

(assert (=> b!93835 d!24529))

(declare-fun bm!9420 () Bool)

(declare-fun call!9445 () ListLongMap!1501)

(declare-fun call!9443 () ListLongMap!1501)

(assert (=> bm!9420 (= call!9445 call!9443)))

(declare-fun call!9441 () Bool)

(declare-fun c!15685 () Bool)

(declare-fun c!15693 () Bool)

(declare-datatypes ((SeekEntryResult!254 0))(
  ( (MissingZero!254 (index!3157 (_ BitVec 32))) (Found!254 (index!3158 (_ BitVec 32))) (Intermediate!254 (undefined!1066 Bool) (index!3159 (_ BitVec 32)) (x!12657 (_ BitVec 32))) (Undefined!254) (MissingVacant!254 (index!3160 (_ BitVec 32))) )
))
(declare-fun lt!46668 () SeekEntryResult!254)

(declare-fun lt!46662 () SeekEntryResult!254)

(declare-fun c!15690 () Bool)

(declare-fun bm!9421 () Bool)

(declare-fun c!15692 () Bool)

(declare-fun c!15691 () Bool)

(declare-fun lt!46648 () SeekEntryResult!254)

(declare-fun lt!46660 () SeekEntryResult!254)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9421 (= call!9441 (inRange!0 (ite c!15685 (ite c!15691 (index!3158 lt!46660) (ite c!15692 (index!3157 lt!46648) (index!3160 lt!46648))) (ite c!15693 (index!3158 lt!46668) (ite c!15690 (index!3157 lt!46662) (index!3160 lt!46662)))) (mask!6509 newMap!16)))))

(declare-fun b!94149 () Bool)

(declare-fun e!61499 () Bool)

(declare-fun e!61490 () Bool)

(assert (=> b!94149 (= e!61499 e!61490)))

(declare-fun call!9429 () ListLongMap!1501)

(declare-fun res!47692 () Bool)

(assert (=> b!94149 (= res!47692 (contains!786 call!9429 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94149 (=> (not res!47692) (not e!61490))))

(declare-fun call!9442 () Unit!2800)

(declare-fun bm!9422 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2800)

(assert (=> bm!9422 (= call!9442 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94150 () Bool)

(declare-fun e!61488 () tuple2!2302)

(declare-fun e!61481 () tuple2!2302)

(assert (=> b!94150 (= e!61488 e!61481)))

(declare-fun c!15686 () Bool)

(declare-fun lt!46666 () SeekEntryResult!254)

(assert (=> b!94150 (= c!15686 ((_ is MissingZero!254) lt!46666))))

(declare-fun b!94151 () Bool)

(declare-fun e!61480 () Bool)

(declare-fun call!9432 () Bool)

(assert (=> b!94151 (= e!61480 (not call!9432))))

(declare-fun b!94152 () Bool)

(declare-fun lt!46661 () tuple2!2302)

(assert (=> b!94152 (= e!61488 (tuple2!2303 (_1!1162 lt!46661) (_2!1162 lt!46661)))))

(declare-fun call!9435 () tuple2!2302)

(assert (=> b!94152 (= lt!46661 call!9435)))

(declare-fun b!94153 () Bool)

(declare-fun lt!46670 () Unit!2800)

(declare-fun lt!46650 () Unit!2800)

(assert (=> b!94153 (= lt!46670 lt!46650)))

(declare-fun call!9427 () ListLongMap!1501)

(assert (=> b!94153 (= call!9427 call!9445)))

(declare-fun lt!46653 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!39 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2800)

(assert (=> b!94153 (= lt!46650 (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46653 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94153 (= lt!46653 (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!61489 () tuple2!2302)

(assert (=> b!94153 (= e!61489 (tuple2!2303 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6509 newMap!16) (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (_size!465 newMap!16) (_keys!4116 newMap!16) (_values!2418 newMap!16) (_vacant!465 newMap!16))))))

(declare-fun b!94154 () Bool)

(declare-fun c!15695 () Bool)

(assert (=> b!94154 (= c!15695 ((_ is MissingVacant!254) lt!46648))))

(declare-fun e!61495 () Bool)

(declare-fun e!61485 () Bool)

(assert (=> b!94154 (= e!61495 e!61485)))

(declare-fun bm!9423 () Bool)

(declare-fun call!9424 () ListLongMap!1501)

(declare-fun call!9437 () ListLongMap!1501)

(assert (=> bm!9423 (= call!9424 call!9437)))

(declare-fun b!94155 () Bool)

(declare-fun lt!46652 () tuple2!2302)

(assert (=> b!94155 (= lt!46652 call!9435)))

(assert (=> b!94155 (= e!61481 (tuple2!2303 (_1!1162 lt!46652) (_2!1162 lt!46652)))))

(declare-fun b!94156 () Bool)

(declare-fun res!47687 () Bool)

(assert (=> b!94156 (=> (not res!47687) (not e!61480))))

(declare-fun call!9433 () Bool)

(assert (=> b!94156 (= res!47687 call!9433)))

(declare-fun e!61494 () Bool)

(assert (=> b!94156 (= e!61494 e!61480)))

(declare-fun bm!9424 () Bool)

(declare-fun call!9434 () Bool)

(assert (=> bm!9424 (= call!9432 call!9434)))

(declare-fun bm!9425 () Bool)

(declare-fun call!9426 () SeekEntryResult!254)

(declare-fun call!9446 () SeekEntryResult!254)

(assert (=> bm!9425 (= call!9426 call!9446)))

(declare-fun b!94157 () Bool)

(declare-fun e!61491 () ListLongMap!1501)

(assert (=> b!94157 (= e!61491 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94158 () Bool)

(declare-fun e!61492 () Unit!2800)

(declare-fun Unit!2812 () Unit!2800)

(assert (=> b!94158 (= e!61492 Unit!2812)))

(declare-fun lt!46658 () Unit!2800)

(assert (=> b!94158 (= lt!46658 call!9442)))

(assert (=> b!94158 (= lt!46662 call!9426)))

(assert (=> b!94158 (= c!15690 ((_ is MissingZero!254) lt!46662))))

(assert (=> b!94158 e!61494))

(declare-fun lt!46665 () Unit!2800)

(assert (=> b!94158 (= lt!46665 lt!46658)))

(assert (=> b!94158 false))

(declare-fun c!15684 () Bool)

(declare-fun bm!9426 () Bool)

(declare-fun lt!46647 () array!4179)

(assert (=> bm!9426 (= call!9437 (getCurrentListMap!448 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94159 () Bool)

(declare-fun e!61483 () tuple2!2302)

(assert (=> b!94159 (= e!61483 e!61489)))

(declare-fun c!15687 () Bool)

(assert (=> b!94159 (= c!15687 (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9427 () Bool)

(assert (=> bm!9427 (= call!9434 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94160 () Bool)

(declare-fun res!47684 () Bool)

(declare-fun e!61487 () Bool)

(assert (=> b!94160 (=> (not res!47684) (not e!61487))))

(declare-fun call!9425 () Bool)

(assert (=> b!94160 (= res!47684 call!9425)))

(assert (=> b!94160 (= e!61495 e!61487)))

(declare-fun b!94161 () Bool)

(declare-fun res!47696 () Bool)

(declare-fun call!9440 () Bool)

(assert (=> b!94161 (= res!47696 call!9440)))

(declare-fun e!61500 () Bool)

(assert (=> b!94161 (=> (not res!47696) (not e!61500))))

(declare-fun b!94162 () Bool)

(declare-fun e!61493 () Unit!2800)

(declare-fun lt!46672 () Unit!2800)

(assert (=> b!94162 (= e!61493 lt!46672)))

(assert (=> b!94162 (= lt!46672 call!9442)))

(declare-fun call!9428 () SeekEntryResult!254)

(assert (=> b!94162 (= lt!46648 call!9428)))

(assert (=> b!94162 (= c!15692 ((_ is MissingZero!254) lt!46648))))

(assert (=> b!94162 e!61495))

(declare-fun lt!46667 () (_ BitVec 32))

(declare-fun bm!9428 () Bool)

(assert (=> bm!9428 (= call!9443 (getCurrentListMap!448 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun c!15694 () Bool)

(declare-fun bm!9429 () Bool)

(declare-fun updateHelperNewKey!39 (LongMapFixedSize!832 (_ BitVec 64) V!3129 (_ BitVec 32)) tuple2!2302)

(assert (=> bm!9429 (= call!9435 (updateHelperNewKey!39 newMap!16 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(declare-fun b!94163 () Bool)

(declare-fun e!61498 () Bool)

(assert (=> b!94163 (= e!61485 e!61498)))

(declare-fun res!47689 () Bool)

(assert (=> b!94163 (= res!47689 call!9425)))

(assert (=> b!94163 (=> (not res!47689) (not e!61498))))

(declare-fun b!94164 () Bool)

(assert (=> b!94164 (= e!61500 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46668)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94165 () Bool)

(declare-fun c!15696 () Bool)

(assert (=> b!94165 (= c!15696 ((_ is MissingVacant!254) lt!46662))))

(declare-fun e!61486 () Bool)

(assert (=> b!94165 (= e!61494 e!61486)))

(declare-fun b!94166 () Bool)

(declare-fun res!47685 () Bool)

(assert (=> b!94166 (= res!47685 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!46648)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94166 (=> (not res!47685) (not e!61498))))

(declare-fun b!94167 () Bool)

(declare-fun e!61497 () tuple2!2302)

(assert (=> b!94167 (= e!61483 e!61497)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4177 (_ BitVec 32)) SeekEntryResult!254)

(assert (=> b!94167 (= lt!46666 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (=> b!94167 (= c!15685 ((_ is Undefined!254) lt!46666))))

(declare-fun b!94168 () Bool)

(declare-fun lt!46649 () Unit!2800)

(assert (=> b!94168 (= lt!46649 e!61493)))

(declare-fun call!9444 () Bool)

(assert (=> b!94168 (= c!15691 call!9444)))

(assert (=> b!94168 (= e!61497 (tuple2!2303 false newMap!16))))

(declare-fun b!94169 () Bool)

(declare-fun lt!46663 () Unit!2800)

(assert (=> b!94169 (= e!61492 lt!46663)))

(declare-fun call!9439 () Unit!2800)

(assert (=> b!94169 (= lt!46663 call!9439)))

(assert (=> b!94169 (= lt!46668 call!9426)))

(declare-fun res!47683 () Bool)

(assert (=> b!94169 (= res!47683 ((_ is Found!254) lt!46668))))

(assert (=> b!94169 (=> (not res!47683) (not e!61500))))

(assert (=> b!94169 e!61500))

(declare-fun bm!9430 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2800)

(assert (=> bm!9430 (= call!9439 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun call!9436 () ListLongMap!1501)

(declare-fun b!94170 () Bool)

(assert (=> b!94170 (= e!61490 (= call!9429 (+!126 call!9436 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9431 () Bool)

(assert (=> bm!9431 (= call!9446 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun b!94171 () Bool)

(assert (=> b!94171 (= e!61486 ((_ is Undefined!254) lt!46662))))

(declare-fun b!94172 () Bool)

(declare-fun lt!46673 () Unit!2800)

(declare-fun lt!46654 () Unit!2800)

(assert (=> b!94172 (= lt!46673 lt!46654)))

(assert (=> b!94172 call!9444))

(declare-fun lemmaValidKeyInArrayIsInListMap!98 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) Unit!2800)

(assert (=> b!94172 (= lt!46654 (lemmaValidKeyInArrayIsInListMap!98 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94172 (= lt!46647 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))))

(declare-fun lt!46664 () Unit!2800)

(declare-fun lt!46657 () Unit!2800)

(assert (=> b!94172 (= lt!46664 lt!46657)))

(declare-fun call!9430 () ListLongMap!1501)

(assert (=> b!94172 (= call!9430 call!9443)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2800)

(assert (=> b!94172 (= lt!46657 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46651 () Unit!2800)

(assert (=> b!94172 (= lt!46651 e!61492)))

(assert (=> b!94172 (= c!15693 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94172 (= e!61481 (tuple2!2303 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (_size!465 newMap!16) (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (_vacant!465 newMap!16))))))

(declare-fun b!94173 () Bool)

(declare-fun call!9431 () Bool)

(assert (=> b!94173 (= e!61498 (not call!9431))))

(declare-fun bm!9432 () Bool)

(assert (=> bm!9432 (= call!9427 call!9430)))

(declare-fun b!94174 () Bool)

(assert (=> b!94174 (= e!61499 (= call!9429 call!9436))))

(declare-fun d!24531 () Bool)

(declare-fun e!61482 () Bool)

(assert (=> d!24531 e!61482))

(declare-fun res!47688 () Bool)

(assert (=> d!24531 (=> (not res!47688) (not e!61482))))

(declare-fun lt!46671 () tuple2!2302)

(assert (=> d!24531 (= res!47688 (valid!381 (_2!1162 lt!46671)))))

(assert (=> d!24531 (= lt!46671 e!61483)))

(assert (=> d!24531 (= c!15684 (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvneg (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!24531 (valid!381 newMap!16)))

(assert (=> d!24531 (= (update!141 newMap!16 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!46671)))

(declare-fun b!94175 () Bool)

(declare-fun e!61484 () Bool)

(assert (=> b!94175 (= e!61486 e!61484)))

(declare-fun res!47690 () Bool)

(assert (=> b!94175 (= res!47690 call!9433)))

(assert (=> b!94175 (=> (not res!47690) (not e!61484))))

(declare-fun bm!9433 () Bool)

(assert (=> bm!9433 (= call!9431 call!9434)))

(declare-fun b!94176 () Bool)

(declare-fun res!47693 () Bool)

(declare-fun call!9438 () Bool)

(assert (=> b!94176 (= res!47693 call!9438)))

(declare-fun e!61496 () Bool)

(assert (=> b!94176 (=> (not res!47693) (not e!61496))))

(declare-fun bm!9434 () Bool)

(declare-fun call!9423 () ListLongMap!1501)

(assert (=> bm!9434 (= call!9423 call!9437)))

(declare-fun b!94177 () Bool)

(assert (=> b!94177 (= e!61496 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46660)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94178 () Bool)

(declare-fun Unit!2813 () Unit!2800)

(assert (=> b!94178 (= e!61493 Unit!2813)))

(declare-fun lt!46655 () Unit!2800)

(assert (=> b!94178 (= lt!46655 call!9439)))

(assert (=> b!94178 (= lt!46660 call!9428)))

(declare-fun res!47691 () Bool)

(assert (=> b!94178 (= res!47691 ((_ is Found!254) lt!46660))))

(assert (=> b!94178 (=> (not res!47691) (not e!61496))))

(assert (=> b!94178 e!61496))

(declare-fun lt!46659 () Unit!2800)

(assert (=> b!94178 (= lt!46659 lt!46655)))

(assert (=> b!94178 false))

(declare-fun bm!9435 () Bool)

(assert (=> bm!9435 (= call!9436 (map!1232 newMap!16))))

(declare-fun bm!9436 () Bool)

(assert (=> bm!9436 (= call!9430 (+!126 e!61491 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!15688 () Bool)

(assert (=> bm!9436 (= c!15688 c!15684)))

(declare-fun b!94179 () Bool)

(declare-fun lt!46656 () Unit!2800)

(declare-fun lt!46669 () Unit!2800)

(assert (=> b!94179 (= lt!46656 lt!46669)))

(assert (=> b!94179 (= call!9427 call!9445)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2800)

(assert (=> b!94179 (= lt!46669 (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94179 (= lt!46667 (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!94179 (= e!61489 (tuple2!2303 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6509 newMap!16) (bvor (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!465 newMap!16) (_keys!4116 newMap!16) (_values!2418 newMap!16) (_vacant!465 newMap!16))))))

(declare-fun b!94180 () Bool)

(declare-fun res!47695 () Bool)

(assert (=> b!94180 (=> (not res!47695) (not e!61487))))

(assert (=> b!94180 (= res!47695 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!46648)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94181 () Bool)

(assert (=> b!94181 (= e!61487 (not call!9431))))

(declare-fun b!94182 () Bool)

(assert (=> b!94182 (= e!61491 call!9423)))

(declare-fun bm!9437 () Bool)

(assert (=> bm!9437 (= call!9438 call!9441)))

(declare-fun b!94183 () Bool)

(assert (=> b!94183 (= c!15694 ((_ is MissingVacant!254) lt!46666))))

(assert (=> b!94183 (= e!61497 e!61488)))

(declare-fun bm!9438 () Bool)

(assert (=> bm!9438 (= call!9425 call!9438)))

(declare-fun bm!9439 () Bool)

(assert (=> bm!9439 (= call!9429 (map!1232 (_2!1162 lt!46671)))))

(declare-fun bm!9440 () Bool)

(assert (=> bm!9440 (= call!9444 (contains!786 call!9424 (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(declare-fun b!94184 () Bool)

(declare-fun res!47686 () Bool)

(assert (=> b!94184 (= res!47686 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!46662)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94184 (=> (not res!47686) (not e!61484))))

(declare-fun bm!9441 () Bool)

(assert (=> bm!9441 (= call!9428 call!9446)))

(declare-fun b!94185 () Bool)

(assert (=> b!94185 (= e!61485 ((_ is Undefined!254) lt!46648))))

(declare-fun bm!9442 () Bool)

(assert (=> bm!9442 (= call!9440 call!9441)))

(declare-fun b!94186 () Bool)

(assert (=> b!94186 (= e!61482 e!61499)))

(declare-fun c!15689 () Bool)

(assert (=> b!94186 (= c!15689 (_1!1162 lt!46671))))

(declare-fun b!94187 () Bool)

(assert (=> b!94187 (= e!61484 (not call!9432))))

(declare-fun bm!9443 () Bool)

(assert (=> bm!9443 (= call!9433 call!9440)))

(declare-fun b!94188 () Bool)

(declare-fun res!47694 () Bool)

(assert (=> b!94188 (=> (not res!47694) (not e!61480))))

(assert (=> b!94188 (= res!47694 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!46662)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!24531 c!15684) b!94159))

(assert (= (and d!24531 (not c!15684)) b!94167))

(assert (= (and b!94159 c!15687) b!94153))

(assert (= (and b!94159 (not c!15687)) b!94179))

(assert (= (or b!94153 b!94179) bm!9420))

(assert (= (or b!94153 b!94179) bm!9434))

(assert (= (or b!94153 b!94179) bm!9432))

(assert (= (and b!94167 c!15685) b!94168))

(assert (= (and b!94167 (not c!15685)) b!94183))

(assert (= (and b!94168 c!15691) b!94178))

(assert (= (and b!94168 (not c!15691)) b!94162))

(assert (= (and b!94178 res!47691) b!94176))

(assert (= (and b!94176 res!47693) b!94177))

(assert (= (and b!94162 c!15692) b!94160))

(assert (= (and b!94162 (not c!15692)) b!94154))

(assert (= (and b!94160 res!47684) b!94180))

(assert (= (and b!94180 res!47695) b!94181))

(assert (= (and b!94154 c!15695) b!94163))

(assert (= (and b!94154 (not c!15695)) b!94185))

(assert (= (and b!94163 res!47689) b!94166))

(assert (= (and b!94166 res!47685) b!94173))

(assert (= (or b!94160 b!94163) bm!9438))

(assert (= (or b!94181 b!94173) bm!9433))

(assert (= (or b!94176 bm!9438) bm!9437))

(assert (= (or b!94178 b!94162) bm!9441))

(assert (= (and b!94183 c!15694) b!94152))

(assert (= (and b!94183 (not c!15694)) b!94150))

(assert (= (and b!94150 c!15686) b!94155))

(assert (= (and b!94150 (not c!15686)) b!94172))

(assert (= (and b!94172 c!15693) b!94169))

(assert (= (and b!94172 (not c!15693)) b!94158))

(assert (= (and b!94169 res!47683) b!94161))

(assert (= (and b!94161 res!47696) b!94164))

(assert (= (and b!94158 c!15690) b!94156))

(assert (= (and b!94158 (not c!15690)) b!94165))

(assert (= (and b!94156 res!47687) b!94188))

(assert (= (and b!94188 res!47694) b!94151))

(assert (= (and b!94165 c!15696) b!94175))

(assert (= (and b!94165 (not c!15696)) b!94171))

(assert (= (and b!94175 res!47690) b!94184))

(assert (= (and b!94184 res!47686) b!94187))

(assert (= (or b!94156 b!94175) bm!9443))

(assert (= (or b!94151 b!94187) bm!9424))

(assert (= (or b!94161 bm!9443) bm!9442))

(assert (= (or b!94169 b!94158) bm!9425))

(assert (= (or b!94152 b!94155) bm!9429))

(assert (= (or b!94168 b!94172) bm!9423))

(assert (= (or b!94162 b!94158) bm!9422))

(assert (= (or bm!9433 bm!9424) bm!9427))

(assert (= (or bm!9441 bm!9425) bm!9431))

(assert (= (or b!94178 b!94169) bm!9430))

(assert (= (or bm!9437 bm!9442) bm!9421))

(assert (= (or b!94168 b!94172) bm!9440))

(assert (= (or bm!9434 bm!9423) bm!9426))

(assert (= (or bm!9420 b!94172) bm!9428))

(assert (= (or bm!9432 b!94172) bm!9436))

(assert (= (and bm!9436 c!15688) b!94182))

(assert (= (and bm!9436 (not c!15688)) b!94157))

(assert (= (and d!24531 res!47688) b!94186))

(assert (= (and b!94186 c!15689) b!94149))

(assert (= (and b!94186 (not c!15689)) b!94174))

(assert (= (and b!94149 res!47692) b!94170))

(assert (= (or b!94170 b!94174) bm!9435))

(assert (= (or b!94149 b!94170 b!94174) bm!9439))

(declare-fun m!101181 () Bool)

(assert (=> b!94188 m!101181))

(declare-fun m!101183 () Bool)

(assert (=> bm!9439 m!101183))

(declare-fun m!101185 () Bool)

(assert (=> b!94184 m!101185))

(declare-fun m!101187 () Bool)

(assert (=> bm!9436 m!101187))

(declare-fun m!101189 () Bool)

(assert (=> b!94170 m!101189))

(assert (=> bm!9435 m!100987))

(assert (=> b!94149 m!100977))

(declare-fun m!101191 () Bool)

(assert (=> b!94149 m!101191))

(declare-fun m!101193 () Bool)

(assert (=> bm!9421 m!101193))

(assert (=> b!94153 m!100975))

(declare-fun m!101195 () Bool)

(assert (=> b!94153 m!101195))

(declare-fun m!101197 () Bool)

(assert (=> b!94166 m!101197))

(assert (=> bm!9422 m!100977))

(declare-fun m!101199 () Bool)

(assert (=> bm!9422 m!101199))

(declare-fun m!101201 () Bool)

(assert (=> bm!9440 m!101201))

(declare-fun m!101203 () Bool)

(assert (=> bm!9440 m!101203))

(declare-fun m!101205 () Bool)

(assert (=> b!94177 m!101205))

(assert (=> b!94172 m!101101))

(assert (=> b!94172 m!100977))

(declare-fun m!101207 () Bool)

(assert (=> b!94172 m!101207))

(assert (=> b!94172 m!101101))

(assert (=> b!94172 m!100977))

(assert (=> b!94172 m!100975))

(declare-fun m!101209 () Bool)

(assert (=> b!94172 m!101209))

(declare-fun m!101211 () Bool)

(assert (=> b!94172 m!101211))

(declare-fun m!101213 () Bool)

(assert (=> b!94172 m!101213))

(assert (=> b!94179 m!100975))

(declare-fun m!101215 () Bool)

(assert (=> b!94179 m!101215))

(assert (=> bm!9430 m!100977))

(declare-fun m!101217 () Bool)

(assert (=> bm!9430 m!101217))

(assert (=> bm!9427 m!100977))

(declare-fun m!101219 () Bool)

(assert (=> bm!9427 m!101219))

(declare-fun m!101221 () Bool)

(assert (=> b!94164 m!101221))

(declare-fun m!101223 () Bool)

(assert (=> b!94180 m!101223))

(declare-fun m!101225 () Bool)

(assert (=> bm!9426 m!101225))

(assert (=> bm!9428 m!101211))

(declare-fun m!101227 () Bool)

(assert (=> bm!9428 m!101227))

(declare-fun m!101229 () Bool)

(assert (=> d!24531 m!101229))

(assert (=> d!24531 m!100993))

(assert (=> b!94157 m!101101))

(assert (=> bm!9429 m!100977))

(assert (=> bm!9429 m!100975))

(declare-fun m!101231 () Bool)

(assert (=> bm!9429 m!101231))

(assert (=> bm!9431 m!100977))

(declare-fun m!101233 () Bool)

(assert (=> bm!9431 m!101233))

(assert (=> b!94167 m!100977))

(assert (=> b!94167 m!101233))

(assert (=> b!93835 d!24531))

(declare-fun d!24533 () Bool)

(declare-fun c!15699 () Bool)

(assert (=> d!24533 (= c!15699 ((_ is ValueCellFull!962) (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!61503 () V!3129)

(assert (=> d!24533 (= (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61503)))

(declare-fun b!94193 () Bool)

(declare-fun get!1270 (ValueCell!962 V!3129) V!3129)

(assert (=> b!94193 (= e!61503 (get!1270 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94194 () Bool)

(declare-fun get!1271 (ValueCell!962 V!3129) V!3129)

(assert (=> b!94194 (= e!61503 (get!1271 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24533 c!15699) b!94193))

(assert (= (and d!24533 (not c!15699)) b!94194))

(assert (=> b!94193 m!100971))

(assert (=> b!94193 m!100973))

(declare-fun m!101235 () Bool)

(assert (=> b!94193 m!101235))

(assert (=> b!94194 m!100971))

(assert (=> b!94194 m!100973))

(declare-fun m!101237 () Bool)

(assert (=> b!94194 m!101237))

(assert (=> b!93835 d!24533))

(declare-fun d!24535 () Bool)

(assert (=> d!24535 (= (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992)))) (and (or (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000001111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000011111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000001111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000011111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000001111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000011111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000001111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000011111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000001111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000011111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000001111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000011111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000001111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000011111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000001111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000011111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000111111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00001111111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00011111111111111111111111111111) (= (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!93848 d!24535))

(declare-fun d!24537 () Bool)

(declare-fun res!47703 () Bool)

(declare-fun e!61506 () Bool)

(assert (=> d!24537 (=> (not res!47703) (not e!61506))))

(declare-fun simpleValid!66 (LongMapFixedSize!832) Bool)

(assert (=> d!24537 (= res!47703 (simpleValid!66 newMap!16))))

(assert (=> d!24537 (= (valid!381 newMap!16) e!61506)))

(declare-fun b!94201 () Bool)

(declare-fun res!47704 () Bool)

(assert (=> b!94201 (=> (not res!47704) (not e!61506))))

(declare-fun arrayCountValidKeys!0 (array!4177 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94201 (= res!47704 (= (arrayCountValidKeys!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (_size!465 newMap!16)))))

(declare-fun b!94202 () Bool)

(declare-fun res!47705 () Bool)

(assert (=> b!94202 (=> (not res!47705) (not e!61506))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4177 (_ BitVec 32)) Bool)

(assert (=> b!94202 (= res!47705 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun b!94203 () Bool)

(assert (=> b!94203 (= e!61506 (arrayNoDuplicates!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 Nil!1572))))

(assert (= (and d!24537 res!47703) b!94201))

(assert (= (and b!94201 res!47704) b!94202))

(assert (= (and b!94202 res!47705) b!94203))

(declare-fun m!101239 () Bool)

(assert (=> d!24537 m!101239))

(declare-fun m!101241 () Bool)

(assert (=> b!94201 m!101241))

(declare-fun m!101243 () Bool)

(assert (=> b!94202 m!101243))

(declare-fun m!101245 () Bool)

(assert (=> b!94203 m!101245))

(assert (=> b!93846 d!24537))

(declare-fun d!24539 () Bool)

(assert (=> d!24539 (= (array_inv!1243 (_keys!4116 newMap!16)) (bvsge (size!2233 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93842 d!24539))

(declare-fun d!24541 () Bool)

(assert (=> d!24541 (= (array_inv!1244 (_values!2418 newMap!16)) (bvsge (size!2234 (_values!2418 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!93842 d!24541))

(declare-fun d!24543 () Bool)

(assert (=> d!24543 (= (array_inv!1243 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvsge (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93841 d!24543))

(declare-fun d!24545 () Bool)

(assert (=> d!24545 (= (array_inv!1244 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvsge (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!93841 d!24545))

(declare-fun d!24547 () Bool)

(assert (=> d!24547 (= (valid!382 thiss!992) (valid!381 (v!2754 (underlying!323 thiss!992))))))

(declare-fun bs!3859 () Bool)

(assert (= bs!3859 d!24547))

(declare-fun m!101247 () Bool)

(assert (=> bs!3859 m!101247))

(assert (=> start!11352 d!24547))

(declare-fun b!94211 () Bool)

(declare-fun e!61512 () Bool)

(assert (=> b!94211 (= e!61512 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3685 () Bool)

(declare-fun mapRes!3685 () Bool)

(declare-fun tp!9463 () Bool)

(declare-fun e!61511 () Bool)

(assert (=> mapNonEmpty!3685 (= mapRes!3685 (and tp!9463 e!61511))))

(declare-fun mapKey!3685 () (_ BitVec 32))

(declare-fun mapRest!3685 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapValue!3685 () ValueCell!962)

(assert (=> mapNonEmpty!3685 (= mapRest!3669 (store mapRest!3685 mapKey!3685 mapValue!3685))))

(declare-fun condMapEmpty!3685 () Bool)

(declare-fun mapDefault!3685 () ValueCell!962)

(assert (=> mapNonEmpty!3670 (= condMapEmpty!3685 (= mapRest!3669 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3685)))))

(assert (=> mapNonEmpty!3670 (= tp!9436 (and e!61512 mapRes!3685))))

(declare-fun mapIsEmpty!3685 () Bool)

(assert (=> mapIsEmpty!3685 mapRes!3685))

(declare-fun b!94210 () Bool)

(assert (=> b!94210 (= e!61511 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3670 condMapEmpty!3685) mapIsEmpty!3685))

(assert (= (and mapNonEmpty!3670 (not condMapEmpty!3685)) mapNonEmpty!3685))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!962) mapValue!3685)) b!94210))

(assert (= (and mapNonEmpty!3670 ((_ is ValueCellFull!962) mapDefault!3685)) b!94211))

(declare-fun m!101249 () Bool)

(assert (=> mapNonEmpty!3685 m!101249))

(declare-fun b!94213 () Bool)

(declare-fun e!61514 () Bool)

(assert (=> b!94213 (= e!61514 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3686 () Bool)

(declare-fun mapRes!3686 () Bool)

(declare-fun tp!9464 () Bool)

(declare-fun e!61513 () Bool)

(assert (=> mapNonEmpty!3686 (= mapRes!3686 (and tp!9464 e!61513))))

(declare-fun mapValue!3686 () ValueCell!962)

(declare-fun mapRest!3686 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3686 () (_ BitVec 32))

(assert (=> mapNonEmpty!3686 (= mapRest!3670 (store mapRest!3686 mapKey!3686 mapValue!3686))))

(declare-fun condMapEmpty!3686 () Bool)

(declare-fun mapDefault!3686 () ValueCell!962)

(assert (=> mapNonEmpty!3669 (= condMapEmpty!3686 (= mapRest!3670 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3686)))))

(assert (=> mapNonEmpty!3669 (= tp!9435 (and e!61514 mapRes!3686))))

(declare-fun mapIsEmpty!3686 () Bool)

(assert (=> mapIsEmpty!3686 mapRes!3686))

(declare-fun b!94212 () Bool)

(assert (=> b!94212 (= e!61513 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3669 condMapEmpty!3686) mapIsEmpty!3686))

(assert (= (and mapNonEmpty!3669 (not condMapEmpty!3686)) mapNonEmpty!3686))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!962) mapValue!3686)) b!94212))

(assert (= (and mapNonEmpty!3669 ((_ is ValueCellFull!962) mapDefault!3686)) b!94213))

(declare-fun m!101251 () Bool)

(assert (=> mapNonEmpty!3686 m!101251))

(declare-fun b_lambda!4141 () Bool)

(assert (= b_lambda!4139 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4141)))

(check-sat (not bm!9368) (not b!94038) (not d!24515) (not bm!9421) (not b!94157) (not b!94194) (not b_lambda!4137) (not b!94029) (not b!94057) (not d!24529) (not bm!9435) (not d!24531) (not b_next!2391) (not b!94068) (not b!94066) (not b!94023) (not b!94021) (not b!94017) (not mapNonEmpty!3686) (not bm!9439) (not b!94043) (not bm!9367) (not b!94202) (not b_next!2389) (not b!94055) (not b!94153) (not b!94027) (not bm!9364) (not b!94170) (not bm!9362) (not bm!9436) (not bm!9440) (not mapNonEmpty!3685) (not b!94026) (not b!94172) (not b!94203) (not d!24521) (not b!94179) (not bm!9422) (not bm!9428) (not d!24519) (not bm!9427) (not b!94201) b_and!5743 (not b!94193) (not bm!9431) (not d!24547) tp_is_empty!2611 b_and!5741 (not b!94167) (not b!94022) (not b!94149) (not b_lambda!4141) (not bm!9371) (not bm!9430) (not bm!9426) (not b!94059) (not d!24537) (not d!24517) (not d!24525) (not bm!9429) (not b!94028))
(check-sat b_and!5741 b_and!5743 (not b_next!2389) (not b_next!2391))
(get-model)

(declare-fun d!24549 () Bool)

(declare-fun e!61517 () Bool)

(assert (=> d!24549 e!61517))

(declare-fun res!47711 () Bool)

(assert (=> d!24549 (=> (not res!47711) (not e!61517))))

(declare-fun lt!46678 () SeekEntryResult!254)

(assert (=> d!24549 (= res!47711 ((_ is Found!254) lt!46678))))

(assert (=> d!24549 (= lt!46678 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun lt!46679 () Unit!2800)

(declare-fun choose!567 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2800)

(assert (=> d!24549 (= lt!46679 (choose!567 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24549 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24549 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) lt!46679)))

(declare-fun b!94218 () Bool)

(declare-fun res!47710 () Bool)

(assert (=> b!94218 (=> (not res!47710) (not e!61517))))

(assert (=> b!94218 (= res!47710 (inRange!0 (index!3158 lt!46678) (mask!6509 newMap!16)))))

(declare-fun b!94219 () Bool)

(assert (=> b!94219 (= e!61517 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46678)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94219 (and (bvsge (index!3158 lt!46678) #b00000000000000000000000000000000) (bvslt (index!3158 lt!46678) (size!2233 (_keys!4116 newMap!16))))))

(assert (= (and d!24549 res!47711) b!94218))

(assert (= (and b!94218 res!47710) b!94219))

(assert (=> d!24549 m!100977))

(assert (=> d!24549 m!101233))

(assert (=> d!24549 m!100977))

(declare-fun m!101253 () Bool)

(assert (=> d!24549 m!101253))

(declare-fun m!101255 () Bool)

(assert (=> d!24549 m!101255))

(declare-fun m!101257 () Bool)

(assert (=> b!94218 m!101257))

(declare-fun m!101259 () Bool)

(assert (=> b!94219 m!101259))

(assert (=> bm!9430 d!24549))

(declare-fun d!24551 () Bool)

(declare-fun get!1272 (Option!152) V!3129)

(assert (=> d!24551 (= (apply!90 lt!46571 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3860 () Bool)

(assert (= bs!3860 d!24551))

(declare-fun m!101261 () Bool)

(assert (=> bs!3860 m!101261))

(assert (=> bs!3860 m!101261))

(declare-fun m!101263 () Bool)

(assert (=> bs!3860 m!101263))

(assert (=> b!94023 d!24551))

(declare-fun b!94232 () Bool)

(declare-fun e!61524 () SeekEntryResult!254)

(declare-fun lt!46687 () SeekEntryResult!254)

(assert (=> b!94232 (= e!61524 (MissingZero!254 (index!3159 lt!46687)))))

(declare-fun b!94233 () Bool)

(declare-fun e!61526 () SeekEntryResult!254)

(declare-fun e!61525 () SeekEntryResult!254)

(assert (=> b!94233 (= e!61526 e!61525)))

(declare-fun lt!46688 () (_ BitVec 64))

(assert (=> b!94233 (= lt!46688 (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!46687)))))

(declare-fun c!15706 () Bool)

(assert (=> b!94233 (= c!15706 (= lt!46688 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94235 () Bool)

(assert (=> b!94235 (= e!61526 Undefined!254)))

(declare-fun b!94236 () Bool)

(declare-fun c!15707 () Bool)

(assert (=> b!94236 (= c!15707 (= lt!46688 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94236 (= e!61525 e!61524)))

(declare-fun b!94237 () Bool)

(assert (=> b!94237 (= e!61525 (Found!254 (index!3159 lt!46687)))))

(declare-fun lt!46686 () SeekEntryResult!254)

(declare-fun d!24553 () Bool)

(assert (=> d!24553 (and (or ((_ is Undefined!254) lt!46686) (not ((_ is Found!254) lt!46686)) (and (bvsge (index!3158 lt!46686) #b00000000000000000000000000000000) (bvslt (index!3158 lt!46686) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!46686) ((_ is Found!254) lt!46686) (not ((_ is MissingZero!254) lt!46686)) (and (bvsge (index!3157 lt!46686) #b00000000000000000000000000000000) (bvslt (index!3157 lt!46686) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!46686) ((_ is Found!254) lt!46686) ((_ is MissingZero!254) lt!46686) (not ((_ is MissingVacant!254) lt!46686)) (and (bvsge (index!3160 lt!46686) #b00000000000000000000000000000000) (bvslt (index!3160 lt!46686) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!46686) (ite ((_ is Found!254) lt!46686) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46686)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite ((_ is MissingZero!254) lt!46686) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!46686)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!254) lt!46686) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!46686)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24553 (= lt!46686 e!61526)))

(declare-fun c!15708 () Bool)

(assert (=> d!24553 (= c!15708 (and ((_ is Intermediate!254) lt!46687) (undefined!1066 lt!46687)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4177 (_ BitVec 32)) SeekEntryResult!254)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!24553 (= lt!46687 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (=> d!24553 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24553 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)) lt!46686)))

(declare-fun b!94234 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4177 (_ BitVec 32)) SeekEntryResult!254)

(assert (=> b!94234 (= e!61524 (seekKeyOrZeroReturnVacant!0 (x!12657 lt!46687) (index!3159 lt!46687) (index!3159 lt!46687) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (= (and d!24553 c!15708) b!94235))

(assert (= (and d!24553 (not c!15708)) b!94233))

(assert (= (and b!94233 c!15706) b!94237))

(assert (= (and b!94233 (not c!15706)) b!94236))

(assert (= (and b!94236 c!15707) b!94232))

(assert (= (and b!94236 (not c!15707)) b!94234))

(declare-fun m!101265 () Bool)

(assert (=> b!94233 m!101265))

(declare-fun m!101267 () Bool)

(assert (=> d!24553 m!101267))

(assert (=> d!24553 m!101255))

(declare-fun m!101269 () Bool)

(assert (=> d!24553 m!101269))

(assert (=> d!24553 m!100977))

(declare-fun m!101271 () Bool)

(assert (=> d!24553 m!101271))

(declare-fun m!101273 () Bool)

(assert (=> d!24553 m!101273))

(declare-fun m!101275 () Bool)

(assert (=> d!24553 m!101275))

(assert (=> d!24553 m!100977))

(assert (=> d!24553 m!101269))

(assert (=> b!94234 m!100977))

(declare-fun m!101277 () Bool)

(assert (=> b!94234 m!101277))

(assert (=> bm!9431 d!24553))

(declare-fun d!24555 () Bool)

(assert (=> d!24555 (= (map!1232 (_2!1162 lt!46671)) (getCurrentListMap!448 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun bs!3861 () Bool)

(assert (= bs!3861 d!24555))

(declare-fun m!101279 () Bool)

(assert (=> bs!3861 m!101279))

(assert (=> bm!9439 d!24555))

(declare-fun d!24557 () Bool)

(assert (=> d!24557 (= (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94026 d!24557))

(assert (=> d!24517 d!24535))

(declare-fun d!24559 () Bool)

(declare-fun e!61529 () Bool)

(assert (=> d!24559 e!61529))

(declare-fun res!47716 () Bool)

(assert (=> d!24559 (=> (not res!47716) (not e!61529))))

(declare-fun lt!46698 () ListLongMap!1501)

(assert (=> d!24559 (= res!47716 (contains!786 lt!46698 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!46700 () List!1576)

(assert (=> d!24559 (= lt!46698 (ListLongMap!1502 lt!46700))))

(declare-fun lt!46697 () Unit!2800)

(declare-fun lt!46699 () Unit!2800)

(assert (=> d!24559 (= lt!46697 lt!46699)))

(assert (=> d!24559 (= (getValueByKey!146 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!151 (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!65 (List!1576 (_ BitVec 64) V!3129) Unit!2800)

(assert (=> d!24559 (= lt!46699 (lemmaContainsTupThenGetReturnValue!65 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun insertStrictlySorted!68 (List!1576 (_ BitVec 64) V!3129) List!1576)

(assert (=> d!24559 (= lt!46700 (insertStrictlySorted!68 (toList!766 e!61491) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24559 (= (+!126 e!61491 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!46698)))

(declare-fun b!94242 () Bool)

(declare-fun res!47717 () Bool)

(assert (=> b!94242 (=> (not res!47717) (not e!61529))))

(assert (=> b!94242 (= res!47717 (= (getValueByKey!146 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!151 (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94243 () Bool)

(declare-fun contains!790 (List!1576 tuple2!2304) Bool)

(assert (=> b!94243 (= e!61529 (contains!790 (toList!766 lt!46698) (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!24559 res!47716) b!94242))

(assert (= (and b!94242 res!47717) b!94243))

(declare-fun m!101281 () Bool)

(assert (=> d!24559 m!101281))

(declare-fun m!101283 () Bool)

(assert (=> d!24559 m!101283))

(declare-fun m!101285 () Bool)

(assert (=> d!24559 m!101285))

(declare-fun m!101287 () Bool)

(assert (=> d!24559 m!101287))

(declare-fun m!101289 () Bool)

(assert (=> b!94242 m!101289))

(declare-fun m!101291 () Bool)

(assert (=> b!94243 m!101291))

(assert (=> bm!9436 d!24559))

(declare-fun d!24561 () Bool)

(assert (=> d!24561 (isDefined!100 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun lt!46703 () Unit!2800)

(declare-fun choose!568 (List!1576 (_ BitVec 64)) Unit!2800)

(assert (=> d!24561 (= lt!46703 (choose!568 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!61532 () Bool)

(assert (=> d!24561 e!61532))

(declare-fun res!47720 () Bool)

(assert (=> d!24561 (=> (not res!47720) (not e!61532))))

(declare-fun isStrictlySorted!297 (List!1576) Bool)

(assert (=> d!24561 (= res!47720 (isStrictlySorted!297 (toList!766 lt!46460)))))

(assert (=> d!24561 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!46703)))

(declare-fun b!94246 () Bool)

(assert (=> b!94246 (= e!61532 (containsKey!150 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24561 res!47720) b!94246))

(assert (=> d!24561 m!100977))

(assert (=> d!24561 m!101177))

(assert (=> d!24561 m!101177))

(assert (=> d!24561 m!101179))

(assert (=> d!24561 m!100977))

(declare-fun m!101293 () Bool)

(assert (=> d!24561 m!101293))

(declare-fun m!101295 () Bool)

(assert (=> d!24561 m!101295))

(assert (=> b!94246 m!100977))

(assert (=> b!94246 m!101173))

(assert (=> b!94066 d!24561))

(declare-fun d!24563 () Bool)

(declare-fun isEmpty!354 (Option!152) Bool)

(assert (=> d!24563 (= (isDefined!100 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) (not (isEmpty!354 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun bs!3862 () Bool)

(assert (= bs!3862 d!24563))

(assert (=> bs!3862 m!101177))

(declare-fun m!101297 () Bool)

(assert (=> bs!3862 m!101297))

(assert (=> b!94066 d!24563))

(declare-fun b!94255 () Bool)

(declare-fun e!61537 () Option!152)

(assert (=> b!94255 (= e!61537 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46460)))))))

(declare-fun e!61538 () Option!152)

(declare-fun b!94257 () Bool)

(assert (=> b!94257 (= e!61538 (getValueByKey!146 (t!5469 (toList!766 lt!46460)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94256 () Bool)

(assert (=> b!94256 (= e!61537 e!61538)))

(declare-fun c!15714 () Bool)

(assert (=> b!94256 (= c!15714 (and ((_ is Cons!1572) (toList!766 lt!46460)) (not (= (_1!1163 (h!2164 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun b!94258 () Bool)

(assert (=> b!94258 (= e!61538 None!150)))

(declare-fun d!24565 () Bool)

(declare-fun c!15713 () Bool)

(assert (=> d!24565 (= c!15713 (and ((_ is Cons!1572) (toList!766 lt!46460)) (= (_1!1163 (h!2164 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!24565 (= (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!61537)))

(assert (= (and d!24565 c!15713) b!94255))

(assert (= (and d!24565 (not c!15713)) b!94256))

(assert (= (and b!94256 c!15714) b!94257))

(assert (= (and b!94256 (not c!15714)) b!94258))

(assert (=> b!94257 m!100977))

(declare-fun m!101299 () Bool)

(assert (=> b!94257 m!101299))

(assert (=> b!94066 d!24565))

(declare-fun b!94259 () Bool)

(declare-fun e!61546 () Unit!2800)

(declare-fun Unit!2814 () Unit!2800)

(assert (=> b!94259 (= e!61546 Unit!2814)))

(declare-fun b!94260 () Bool)

(declare-fun e!61551 () ListLongMap!1501)

(declare-fun call!9447 () ListLongMap!1501)

(assert (=> b!94260 (= e!61551 call!9447)))

(declare-fun b!94261 () Bool)

(declare-fun e!61540 () ListLongMap!1501)

(declare-fun call!9452 () ListLongMap!1501)

(assert (=> b!94261 (= e!61540 call!9452)))

(declare-fun b!94262 () Bool)

(declare-fun e!61548 () Bool)

(declare-fun call!9450 () Bool)

(assert (=> b!94262 (= e!61548 (not call!9450))))

(declare-fun bm!9444 () Bool)

(declare-fun lt!46725 () ListLongMap!1501)

(assert (=> bm!9444 (= call!9450 (contains!786 lt!46725 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94263 () Bool)

(assert (=> b!94263 (= e!61540 call!9447)))

(declare-fun bm!9445 () Bool)

(declare-fun call!9451 () ListLongMap!1501)

(assert (=> bm!9445 (= call!9447 call!9451)))

(declare-fun c!15719 () Bool)

(declare-fun call!9449 () ListLongMap!1501)

(declare-fun c!15720 () Bool)

(declare-fun call!9448 () ListLongMap!1501)

(declare-fun bm!9446 () Bool)

(assert (=> bm!9446 (= call!9451 (+!126 (ite c!15720 call!9449 (ite c!15719 call!9448 call!9452)) (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9447 () Bool)

(assert (=> bm!9447 (= call!9452 call!9448)))

(declare-fun b!94265 () Bool)

(declare-fun c!15717 () Bool)

(assert (=> b!94265 (= c!15717 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94265 (= e!61551 e!61540)))

(declare-fun b!94266 () Bool)

(declare-fun e!61539 () ListLongMap!1501)

(assert (=> b!94266 (= e!61539 e!61551)))

(assert (=> b!94266 (= c!15719 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94267 () Bool)

(declare-fun e!61543 () Bool)

(declare-fun e!61550 () Bool)

(assert (=> b!94267 (= e!61543 e!61550)))

(declare-fun c!15718 () Bool)

(assert (=> b!94267 (= c!15718 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94268 () Bool)

(assert (=> b!94268 (= e!61539 (+!126 call!9451 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9448 () Bool)

(assert (=> bm!9448 (= call!9448 call!9449)))

(declare-fun b!94269 () Bool)

(declare-fun e!61549 () Bool)

(assert (=> b!94269 (= e!61549 (= (apply!90 lt!46725 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94269 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (_values!2418 newMap!16))))))

(assert (=> b!94269 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94270 () Bool)

(declare-fun e!61547 () Bool)

(assert (=> b!94270 (= e!61547 (= (apply!90 lt!46725 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!94271 () Bool)

(declare-fun res!47721 () Bool)

(assert (=> b!94271 (=> (not res!47721) (not e!61543))))

(assert (=> b!94271 (= res!47721 e!61548)))

(declare-fun c!15715 () Bool)

(assert (=> b!94271 (= c!15715 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94272 () Bool)

(declare-fun res!47726 () Bool)

(assert (=> b!94272 (=> (not res!47726) (not e!61543))))

(declare-fun e!61545 () Bool)

(assert (=> b!94272 (= res!47726 e!61545)))

(declare-fun res!47722 () Bool)

(assert (=> b!94272 (=> res!47722 e!61545)))

(declare-fun e!61542 () Bool)

(assert (=> b!94272 (= res!47722 (not e!61542))))

(declare-fun res!47728 () Bool)

(assert (=> b!94272 (=> (not res!47728) (not e!61542))))

(assert (=> b!94272 (= res!47728 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9449 () Bool)

(declare-fun call!9453 () Bool)

(assert (=> bm!9449 (= call!9453 (contains!786 lt!46725 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94273 () Bool)

(assert (=> b!94273 (= e!61542 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94274 () Bool)

(assert (=> b!94274 (= e!61545 e!61549)))

(declare-fun res!47723 () Bool)

(assert (=> b!94274 (=> (not res!47723) (not e!61549))))

(assert (=> b!94274 (= res!47723 (contains!786 lt!46725 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94274 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94264 () Bool)

(declare-fun lt!46714 () Unit!2800)

(assert (=> b!94264 (= e!61546 lt!46714)))

(declare-fun lt!46706 () ListLongMap!1501)

(assert (=> b!94264 (= lt!46706 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46723 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46723 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46717 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46717 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46719 () Unit!2800)

(assert (=> b!94264 (= lt!46719 (addStillContains!66 lt!46706 lt!46723 (zeroValue!2322 newMap!16) lt!46717))))

(assert (=> b!94264 (contains!786 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) lt!46717)))

(declare-fun lt!46722 () Unit!2800)

(assert (=> b!94264 (= lt!46722 lt!46719)))

(declare-fun lt!46707 () ListLongMap!1501)

(assert (=> b!94264 (= lt!46707 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46711 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46711 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46708 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46708 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46712 () Unit!2800)

(assert (=> b!94264 (= lt!46712 (addApplyDifferent!66 lt!46707 lt!46711 (minValue!2322 newMap!16) lt!46708))))

(assert (=> b!94264 (= (apply!90 (+!126 lt!46707 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) lt!46708) (apply!90 lt!46707 lt!46708))))

(declare-fun lt!46716 () Unit!2800)

(assert (=> b!94264 (= lt!46716 lt!46712)))

(declare-fun lt!46704 () ListLongMap!1501)

(assert (=> b!94264 (= lt!46704 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46709 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46709 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46705 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46705 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46713 () Unit!2800)

(assert (=> b!94264 (= lt!46713 (addApplyDifferent!66 lt!46704 lt!46709 (zeroValue!2322 newMap!16) lt!46705))))

(assert (=> b!94264 (= (apply!90 (+!126 lt!46704 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) lt!46705) (apply!90 lt!46704 lt!46705))))

(declare-fun lt!46721 () Unit!2800)

(assert (=> b!94264 (= lt!46721 lt!46713)))

(declare-fun lt!46715 () ListLongMap!1501)

(assert (=> b!94264 (= lt!46715 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46724 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46724 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46720 () (_ BitVec 64))

(assert (=> b!94264 (= lt!46720 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94264 (= lt!46714 (addApplyDifferent!66 lt!46715 lt!46724 (minValue!2322 newMap!16) lt!46720))))

(assert (=> b!94264 (= (apply!90 (+!126 lt!46715 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) lt!46720) (apply!90 lt!46715 lt!46720))))

(declare-fun d!24567 () Bool)

(assert (=> d!24567 e!61543))

(declare-fun res!47729 () Bool)

(assert (=> d!24567 (=> (not res!47729) (not e!61543))))

(assert (=> d!24567 (= res!47729 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!46718 () ListLongMap!1501)

(assert (=> d!24567 (= lt!46725 lt!46718)))

(declare-fun lt!46710 () Unit!2800)

(assert (=> d!24567 (= lt!46710 e!61546)))

(declare-fun c!15716 () Bool)

(declare-fun e!61541 () Bool)

(assert (=> d!24567 (= c!15716 e!61541)))

(declare-fun res!47727 () Bool)

(assert (=> d!24567 (=> (not res!47727) (not e!61541))))

(assert (=> d!24567 (= res!47727 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24567 (= lt!46718 e!61539)))

(assert (=> d!24567 (= c!15720 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24567 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24567 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!46725)))

(declare-fun b!94275 () Bool)

(declare-fun e!61544 () Bool)

(assert (=> b!94275 (= e!61544 (= (apply!90 lt!46725 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!94276 () Bool)

(assert (=> b!94276 (= e!61541 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94277 () Bool)

(assert (=> b!94277 (= e!61548 e!61544)))

(declare-fun res!47725 () Bool)

(assert (=> b!94277 (= res!47725 call!9450)))

(assert (=> b!94277 (=> (not res!47725) (not e!61544))))

(declare-fun b!94278 () Bool)

(assert (=> b!94278 (= e!61550 e!61547)))

(declare-fun res!47724 () Bool)

(assert (=> b!94278 (= res!47724 call!9453)))

(assert (=> b!94278 (=> (not res!47724) (not e!61547))))

(declare-fun bm!9450 () Bool)

(assert (=> bm!9450 (= call!9449 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94279 () Bool)

(assert (=> b!94279 (= e!61550 (not call!9453))))

(assert (= (and d!24567 c!15720) b!94268))

(assert (= (and d!24567 (not c!15720)) b!94266))

(assert (= (and b!94266 c!15719) b!94260))

(assert (= (and b!94266 (not c!15719)) b!94265))

(assert (= (and b!94265 c!15717) b!94263))

(assert (= (and b!94265 (not c!15717)) b!94261))

(assert (= (or b!94263 b!94261) bm!9447))

(assert (= (or b!94260 bm!9447) bm!9448))

(assert (= (or b!94260 b!94263) bm!9445))

(assert (= (or b!94268 bm!9448) bm!9450))

(assert (= (or b!94268 bm!9445) bm!9446))

(assert (= (and d!24567 res!47727) b!94276))

(assert (= (and d!24567 c!15716) b!94264))

(assert (= (and d!24567 (not c!15716)) b!94259))

(assert (= (and d!24567 res!47729) b!94272))

(assert (= (and b!94272 res!47728) b!94273))

(assert (= (and b!94272 (not res!47722)) b!94274))

(assert (= (and b!94274 res!47723) b!94269))

(assert (= (and b!94272 res!47726) b!94271))

(assert (= (and b!94271 c!15715) b!94277))

(assert (= (and b!94271 (not c!15715)) b!94262))

(assert (= (and b!94277 res!47725) b!94275))

(assert (= (or b!94277 b!94262) bm!9444))

(assert (= (and b!94271 res!47721) b!94267))

(assert (= (and b!94267 c!15718) b!94278))

(assert (= (and b!94267 (not c!15718)) b!94279))

(assert (= (and b!94278 res!47724) b!94270))

(assert (= (or b!94278 b!94279) bm!9449))

(declare-fun b_lambda!4143 () Bool)

(assert (=> (not b_lambda!4143) (not b!94269)))

(declare-fun t!5482 () Bool)

(declare-fun tb!1873 () Bool)

(assert (=> (and b!93841 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16)) t!5482) tb!1873))

(declare-fun result!3197 () Bool)

(assert (=> tb!1873 (= result!3197 tp_is_empty!2611)))

(assert (=> b!94269 t!5482))

(declare-fun b_and!5745 () Bool)

(assert (= b_and!5741 (and (=> t!5482 result!3197) b_and!5745)))

(declare-fun t!5484 () Bool)

(declare-fun tb!1875 () Bool)

(assert (=> (and b!93842 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 newMap!16)) t!5484) tb!1875))

(declare-fun result!3199 () Bool)

(assert (= result!3199 result!3197))

(assert (=> b!94269 t!5484))

(declare-fun b_and!5747 () Bool)

(assert (= b_and!5743 (and (=> t!5484 result!3199) b_and!5747)))

(declare-fun m!101301 () Bool)

(assert (=> b!94268 m!101301))

(declare-fun m!101303 () Bool)

(assert (=> b!94273 m!101303))

(assert (=> b!94273 m!101303))

(declare-fun m!101305 () Bool)

(assert (=> b!94273 m!101305))

(declare-fun m!101307 () Bool)

(assert (=> b!94264 m!101307))

(declare-fun m!101309 () Bool)

(assert (=> b!94264 m!101309))

(declare-fun m!101311 () Bool)

(assert (=> b!94264 m!101311))

(declare-fun m!101313 () Bool)

(assert (=> b!94264 m!101313))

(declare-fun m!101315 () Bool)

(assert (=> b!94264 m!101315))

(assert (=> b!94264 m!101307))

(declare-fun m!101317 () Bool)

(assert (=> b!94264 m!101317))

(declare-fun m!101319 () Bool)

(assert (=> b!94264 m!101319))

(assert (=> b!94264 m!101303))

(assert (=> b!94264 m!101319))

(declare-fun m!101321 () Bool)

(assert (=> b!94264 m!101321))

(declare-fun m!101323 () Bool)

(assert (=> b!94264 m!101323))

(declare-fun m!101325 () Bool)

(assert (=> b!94264 m!101325))

(declare-fun m!101327 () Bool)

(assert (=> b!94264 m!101327))

(declare-fun m!101329 () Bool)

(assert (=> b!94264 m!101329))

(declare-fun m!101331 () Bool)

(assert (=> b!94264 m!101331))

(declare-fun m!101333 () Bool)

(assert (=> b!94264 m!101333))

(assert (=> b!94264 m!101313))

(declare-fun m!101335 () Bool)

(assert (=> b!94264 m!101335))

(assert (=> b!94264 m!101317))

(declare-fun m!101337 () Bool)

(assert (=> b!94264 m!101337))

(assert (=> b!94269 m!101303))

(declare-fun m!101339 () Bool)

(assert (=> b!94269 m!101339))

(declare-fun m!101341 () Bool)

(assert (=> b!94269 m!101341))

(declare-fun m!101343 () Bool)

(assert (=> b!94269 m!101343))

(assert (=> b!94269 m!101341))

(declare-fun m!101345 () Bool)

(assert (=> b!94269 m!101345))

(assert (=> b!94269 m!101303))

(assert (=> b!94269 m!101343))

(declare-fun m!101347 () Bool)

(assert (=> bm!9446 m!101347))

(declare-fun m!101349 () Bool)

(assert (=> bm!9449 m!101349))

(assert (=> b!94274 m!101303))

(assert (=> b!94274 m!101303))

(declare-fun m!101351 () Bool)

(assert (=> b!94274 m!101351))

(assert (=> b!94276 m!101303))

(assert (=> b!94276 m!101303))

(assert (=> b!94276 m!101305))

(declare-fun m!101353 () Bool)

(assert (=> b!94270 m!101353))

(declare-fun m!101355 () Bool)

(assert (=> b!94275 m!101355))

(assert (=> d!24567 m!101255))

(assert (=> bm!9450 m!101325))

(declare-fun m!101357 () Bool)

(assert (=> bm!9444 m!101357))

(assert (=> d!24515 d!24567))

(assert (=> b!94068 d!24563))

(assert (=> b!94068 d!24565))

(declare-fun d!24569 () Bool)

(assert (=> d!24569 (= (get!1270 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2753 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94193 d!24569))

(declare-fun d!24571 () Bool)

(assert (=> d!24571 (= (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (and (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94055 d!24571))

(declare-fun b!94288 () Bool)

(declare-fun e!61556 () (_ BitVec 32))

(declare-fun call!9456 () (_ BitVec 32))

(assert (=> b!94288 (= e!61556 call!9456)))

(declare-fun b!94289 () Bool)

(assert (=> b!94289 (= e!61556 (bvadd #b00000000000000000000000000000001 call!9456))))

(declare-fun b!94290 () Bool)

(declare-fun e!61557 () (_ BitVec 32))

(assert (=> b!94290 (= e!61557 e!61556)))

(declare-fun c!15725 () Bool)

(assert (=> b!94290 (= c!15725 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9453 () Bool)

(assert (=> bm!9453 (= call!9456 (arrayCountValidKeys!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun d!24573 () Bool)

(declare-fun lt!46728 () (_ BitVec 32))

(assert (=> d!24573 (and (bvsge lt!46728 #b00000000000000000000000000000000) (bvsle lt!46728 (bvsub (size!2233 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24573 (= lt!46728 e!61557)))

(declare-fun c!15726 () Bool)

(assert (=> d!24573 (= c!15726 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24573 (and (bvsle #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2233 (_keys!4116 newMap!16)) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24573 (= (arrayCountValidKeys!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) lt!46728)))

(declare-fun b!94291 () Bool)

(assert (=> b!94291 (= e!61557 #b00000000000000000000000000000000)))

(assert (= (and d!24573 c!15726) b!94291))

(assert (= (and d!24573 (not c!15726)) b!94290))

(assert (= (and b!94290 c!15725) b!94289))

(assert (= (and b!94290 (not c!15725)) b!94288))

(assert (= (or b!94289 b!94288) bm!9453))

(assert (=> b!94290 m!101303))

(assert (=> b!94290 m!101303))

(assert (=> b!94290 m!101305))

(declare-fun m!101359 () Bool)

(assert (=> bm!9453 m!101359))

(assert (=> b!94201 d!24573))

(declare-fun b!94292 () Bool)

(declare-fun e!61561 () Bool)

(declare-fun e!61559 () Bool)

(assert (=> b!94292 (= e!61561 e!61559)))

(declare-fun c!15727 () Bool)

(assert (=> b!94292 (= c!15727 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9454 () Bool)

(declare-fun call!9457 () Bool)

(assert (=> bm!9454 (= call!9457 (arrayNoDuplicates!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15727 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) Nil!1572) Nil!1572)))))

(declare-fun b!94293 () Bool)

(assert (=> b!94293 (= e!61559 call!9457)))

(declare-fun d!24575 () Bool)

(declare-fun res!47731 () Bool)

(declare-fun e!61560 () Bool)

(assert (=> d!24575 (=> res!47731 e!61560)))

(assert (=> d!24575 (= res!47731 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24575 (= (arrayNoDuplicates!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 Nil!1572) e!61560)))

(declare-fun b!94294 () Bool)

(declare-fun e!61558 () Bool)

(assert (=> b!94294 (= e!61558 (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94295 () Bool)

(assert (=> b!94295 (= e!61559 call!9457)))

(declare-fun b!94296 () Bool)

(assert (=> b!94296 (= e!61560 e!61561)))

(declare-fun res!47730 () Bool)

(assert (=> b!94296 (=> (not res!47730) (not e!61561))))

(assert (=> b!94296 (= res!47730 (not e!61558))))

(declare-fun res!47732 () Bool)

(assert (=> b!94296 (=> (not res!47732) (not e!61558))))

(assert (=> b!94296 (= res!47732 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24575 (not res!47731)) b!94296))

(assert (= (and b!94296 res!47732) b!94294))

(assert (= (and b!94296 res!47730) b!94292))

(assert (= (and b!94292 c!15727) b!94295))

(assert (= (and b!94292 (not c!15727)) b!94293))

(assert (= (or b!94295 b!94293) bm!9454))

(assert (=> b!94292 m!101303))

(assert (=> b!94292 m!101303))

(assert (=> b!94292 m!101305))

(assert (=> bm!9454 m!101303))

(declare-fun m!101361 () Bool)

(assert (=> bm!9454 m!101361))

(assert (=> b!94294 m!101303))

(assert (=> b!94294 m!101303))

(declare-fun m!101363 () Bool)

(assert (=> b!94294 m!101363))

(assert (=> b!94296 m!101303))

(assert (=> b!94296 m!101303))

(assert (=> b!94296 m!101305))

(assert (=> b!94203 d!24575))

(declare-fun d!24577 () Bool)

(declare-fun e!61562 () Bool)

(assert (=> d!24577 e!61562))

(declare-fun res!47733 () Bool)

(assert (=> d!24577 (=> res!47733 e!61562)))

(declare-fun lt!46731 () Bool)

(assert (=> d!24577 (= res!47733 (not lt!46731))))

(declare-fun lt!46729 () Bool)

(assert (=> d!24577 (= lt!46731 lt!46729)))

(declare-fun lt!46730 () Unit!2800)

(declare-fun e!61563 () Unit!2800)

(assert (=> d!24577 (= lt!46730 e!61563)))

(declare-fun c!15728 () Bool)

(assert (=> d!24577 (= c!15728 lt!46729)))

(assert (=> d!24577 (= lt!46729 (containsKey!150 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24577 (= (contains!786 call!9429 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!46731)))

(declare-fun b!94297 () Bool)

(declare-fun lt!46732 () Unit!2800)

(assert (=> b!94297 (= e!61563 lt!46732)))

(assert (=> b!94297 (= lt!46732 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94297 (isDefined!100 (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94298 () Bool)

(declare-fun Unit!2815 () Unit!2800)

(assert (=> b!94298 (= e!61563 Unit!2815)))

(declare-fun b!94299 () Bool)

(assert (=> b!94299 (= e!61562 (isDefined!100 (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (= (and d!24577 c!15728) b!94297))

(assert (= (and d!24577 (not c!15728)) b!94298))

(assert (= (and d!24577 (not res!47733)) b!94299))

(assert (=> d!24577 m!100977))

(declare-fun m!101365 () Bool)

(assert (=> d!24577 m!101365))

(assert (=> b!94297 m!100977))

(declare-fun m!101367 () Bool)

(assert (=> b!94297 m!101367))

(assert (=> b!94297 m!100977))

(declare-fun m!101369 () Bool)

(assert (=> b!94297 m!101369))

(assert (=> b!94297 m!101369))

(declare-fun m!101371 () Bool)

(assert (=> b!94297 m!101371))

(assert (=> b!94299 m!100977))

(assert (=> b!94299 m!101369))

(assert (=> b!94299 m!101369))

(assert (=> b!94299 m!101371))

(assert (=> b!94149 d!24577))

(declare-fun b!94334 () Bool)

(declare-fun e!61583 () Bool)

(declare-fun lt!46804 () SeekEntryResult!254)

(assert (=> b!94334 (= e!61583 ((_ is Undefined!254) lt!46804))))

(declare-fun lt!46798 () SeekEntryResult!254)

(declare-fun e!61584 () Bool)

(declare-fun b!94335 () Bool)

(assert (=> b!94335 (= e!61584 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46798)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94336 () Bool)

(declare-fun e!61580 () Unit!2800)

(declare-fun Unit!2816 () Unit!2800)

(assert (=> b!94336 (= e!61580 Unit!2816)))

(declare-fun b!94337 () Bool)

(declare-fun res!47759 () Bool)

(declare-fun e!61585 () Bool)

(assert (=> b!94337 (=> (not res!47759) (not e!61585))))

(declare-fun lt!46805 () tuple2!2302)

(assert (=> b!94337 (= res!47759 (contains!786 (map!1232 (_2!1162 lt!46805)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94338 () Bool)

(declare-fun res!47760 () Bool)

(assert (=> b!94338 (=> (not res!47760) (not e!61585))))

(assert (=> b!94338 (= res!47760 (valid!381 (_2!1162 lt!46805)))))

(declare-fun b!94339 () Bool)

(declare-fun res!47758 () Bool)

(assert (=> b!94339 (= res!47758 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!46804)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61581 () Bool)

(assert (=> b!94339 (=> (not res!47758) (not e!61581))))

(declare-fun c!15737 () Bool)

(declare-fun call!9466 () Bool)

(declare-fun c!15739 () Bool)

(declare-fun bm!9464 () Bool)

(assert (=> bm!9464 (= call!9466 (inRange!0 (ite c!15739 (index!3158 lt!46798) (ite c!15737 (index!3157 lt!46804) (index!3160 lt!46804))) (mask!6509 newMap!16)))))

(declare-fun b!94340 () Bool)

(declare-fun res!47752 () Bool)

(declare-fun e!61587 () Bool)

(assert (=> b!94340 (=> (not res!47752) (not e!61587))))

(assert (=> b!94340 (= res!47752 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!46804)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94341 () Bool)

(assert (=> b!94341 (= e!61583 e!61581)))

(declare-fun res!47754 () Bool)

(declare-fun call!9469 () Bool)

(assert (=> b!94341 (= res!47754 call!9469)))

(assert (=> b!94341 (=> (not res!47754) (not e!61581))))

(declare-fun bm!9465 () Bool)

(declare-fun call!9467 () Bool)

(assert (=> bm!9465 (= call!9467 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!24579 () Bool)

(assert (=> d!24579 e!61585))

(declare-fun res!47757 () Bool)

(assert (=> d!24579 (=> (not res!47757) (not e!61585))))

(assert (=> d!24579 (= res!47757 (_1!1162 lt!46805))))

(assert (=> d!24579 (= lt!46805 (tuple2!2303 true (LongMapFixedSize!833 (defaultEntry!2435 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd (_size!465 newMap!16) #b00000000000000000000000000000001) (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (_vacant!465 newMap!16))))))

(declare-fun lt!46813 () Unit!2800)

(declare-fun lt!46797 () Unit!2800)

(assert (=> d!24579 (= lt!46813 lt!46797)))

(declare-fun lt!46806 () array!4179)

(declare-fun lt!46814 () array!4177)

(assert (=> d!24579 (contains!786 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(assert (=> d!24579 (= lt!46797 (lemmaValidKeyInArrayIsInListMap!98 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24579 (= lt!46806 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))))

(assert (=> d!24579 (= lt!46814 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun lt!46800 () Unit!2800)

(declare-fun lt!46801 () Unit!2800)

(assert (=> d!24579 (= lt!46800 lt!46801)))

(declare-fun lt!46802 () array!4177)

(assert (=> d!24579 (= (arrayCountValidKeys!0 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4177 (_ BitVec 32)) Unit!2800)

(assert (=> d!24579 (= lt!46801 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(assert (=> d!24579 (= lt!46802 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun lt!46819 () Unit!2800)

(declare-fun lt!46822 () Unit!2800)

(assert (=> d!24579 (= lt!46819 lt!46822)))

(declare-fun lt!46817 () array!4177)

(assert (=> d!24579 (arrayContainsKey!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4177 (_ BitVec 64) (_ BitVec 32)) Unit!2800)

(assert (=> d!24579 (= lt!46822 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(assert (=> d!24579 (= lt!46817 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun lt!46809 () Unit!2800)

(declare-fun lt!46799 () Unit!2800)

(assert (=> d!24579 (= lt!46809 lt!46799)))

(assert (=> d!24579 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!23 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2800)

(assert (=> d!24579 (= lt!46799 (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46795 () Unit!2800)

(declare-fun lt!46808 () Unit!2800)

(assert (=> d!24579 (= lt!46795 lt!46808)))

(assert (=> d!24579 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (mask!6509 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4177 (_ BitVec 32) (_ BitVec 32)) Unit!2800)

(assert (=> d!24579 (= lt!46808 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (mask!6509 newMap!16)))))

(declare-fun lt!46816 () Unit!2800)

(declare-fun lt!46803 () Unit!2800)

(assert (=> d!24579 (= lt!46816 lt!46803)))

(assert (=> d!24579 (= (arrayCountValidKeys!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4177 (_ BitVec 32) (_ BitVec 64)) Unit!2800)

(assert (=> d!24579 (= lt!46803 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun lt!46812 () Unit!2800)

(declare-fun lt!46811 () Unit!2800)

(assert (=> d!24579 (= lt!46812 lt!46811)))

(declare-fun lt!46796 () (_ BitVec 32))

(declare-fun lt!46810 () List!1575)

(assert (=> d!24579 (arrayNoDuplicates!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) lt!46796 lt!46810)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4177 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1575) Unit!2800)

(assert (=> d!24579 (= lt!46811 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) lt!46796 lt!46810))))

(assert (=> d!24579 (= lt!46810 Nil!1572)))

(assert (=> d!24579 (= lt!46796 #b00000000000000000000000000000000)))

(declare-fun lt!46820 () Unit!2800)

(assert (=> d!24579 (= lt!46820 e!61580)))

(declare-fun c!15740 () Bool)

(assert (=> d!24579 (= c!15740 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!46815 () Unit!2800)

(declare-fun e!61586 () Unit!2800)

(assert (=> d!24579 (= lt!46815 e!61586)))

(assert (=> d!24579 (= c!15739 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24579 (valid!381 newMap!16)))

(assert (=> d!24579 (= (updateHelperNewKey!39 newMap!16 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))) lt!46805)))

(declare-fun bm!9463 () Bool)

(assert (=> bm!9463 (= call!9469 call!9466)))

(declare-fun b!94342 () Bool)

(assert (=> b!94342 (= e!61581 (not call!9467))))

(declare-fun b!94343 () Bool)

(declare-fun lt!46821 () Unit!2800)

(assert (=> b!94343 (= e!61586 lt!46821)))

(assert (=> b!94343 (= lt!46821 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(declare-fun call!9468 () SeekEntryResult!254)

(assert (=> b!94343 (= lt!46804 call!9468)))

(assert (=> b!94343 (= c!15737 ((_ is MissingZero!254) lt!46804))))

(declare-fun e!61582 () Bool)

(assert (=> b!94343 e!61582))

(declare-fun b!94344 () Bool)

(assert (=> b!94344 (= e!61587 (not call!9467))))

(declare-fun b!94345 () Bool)

(assert (=> b!94345 (= e!61585 (= (map!1232 (_2!1162 lt!46805)) (+!126 (map!1232 newMap!16) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94346 () Bool)

(declare-fun res!47753 () Bool)

(assert (=> b!94346 (= res!47753 call!9466)))

(assert (=> b!94346 (=> (not res!47753) (not e!61584))))

(declare-fun b!94347 () Bool)

(declare-fun res!47755 () Bool)

(assert (=> b!94347 (=> (not res!47755) (not e!61587))))

(assert (=> b!94347 (= res!47755 call!9469)))

(assert (=> b!94347 (= e!61582 e!61587)))

(declare-fun b!94348 () Bool)

(declare-fun Unit!2817 () Unit!2800)

(assert (=> b!94348 (= e!61586 Unit!2817)))

(declare-fun lt!46794 () Unit!2800)

(assert (=> b!94348 (= lt!46794 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> b!94348 (= lt!46798 call!9468)))

(declare-fun res!47756 () Bool)

(assert (=> b!94348 (= res!47756 ((_ is Found!254) lt!46798))))

(assert (=> b!94348 (=> (not res!47756) (not e!61584))))

(assert (=> b!94348 e!61584))

(declare-fun lt!46807 () Unit!2800)

(assert (=> b!94348 (= lt!46807 lt!46794)))

(assert (=> b!94348 false))

(declare-fun b!94349 () Bool)

(declare-fun c!15738 () Bool)

(assert (=> b!94349 (= c!15738 ((_ is MissingVacant!254) lt!46804))))

(assert (=> b!94349 (= e!61582 e!61583)))

(declare-fun bm!9466 () Bool)

(assert (=> bm!9466 (= call!9468 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun b!94350 () Bool)

(declare-fun Unit!2818 () Unit!2800)

(assert (=> b!94350 (= e!61580 Unit!2818)))

(declare-fun lt!46793 () Unit!2800)

(declare-fun lemmaArrayContainsKeyThenInListMap!23 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2800)

(assert (=> b!94350 (= lt!46793 (lemmaArrayContainsKeyThenInListMap!23 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> b!94350 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))

(declare-fun lt!46818 () Unit!2800)

(assert (=> b!94350 (= lt!46818 lt!46793)))

(assert (=> b!94350 false))

(assert (= (and d!24579 c!15739) b!94348))

(assert (= (and d!24579 (not c!15739)) b!94343))

(assert (= (and b!94348 res!47756) b!94346))

(assert (= (and b!94346 res!47753) b!94335))

(assert (= (and b!94343 c!15737) b!94347))

(assert (= (and b!94343 (not c!15737)) b!94349))

(assert (= (and b!94347 res!47755) b!94340))

(assert (= (and b!94340 res!47752) b!94344))

(assert (= (and b!94349 c!15738) b!94341))

(assert (= (and b!94349 (not c!15738)) b!94334))

(assert (= (and b!94341 res!47754) b!94339))

(assert (= (and b!94339 res!47758) b!94342))

(assert (= (or b!94347 b!94341) bm!9463))

(assert (= (or b!94344 b!94342) bm!9465))

(assert (= (or b!94346 bm!9463) bm!9464))

(assert (= (or b!94348 b!94343) bm!9466))

(assert (= (and d!24579 c!15740) b!94350))

(assert (= (and d!24579 (not c!15740)) b!94336))

(assert (= (and d!24579 res!47757) b!94338))

(assert (= (and b!94338 res!47760) b!94337))

(assert (= (and b!94337 res!47759) b!94345))

(declare-fun m!101373 () Bool)

(assert (=> b!94340 m!101373))

(assert (=> b!94350 m!100977))

(declare-fun m!101375 () Bool)

(assert (=> b!94350 m!101375))

(assert (=> b!94350 m!101101))

(assert (=> b!94350 m!101101))

(assert (=> b!94350 m!100977))

(assert (=> b!94350 m!101207))

(assert (=> d!24579 m!100977))

(declare-fun m!101377 () Bool)

(assert (=> d!24579 m!101377))

(declare-fun m!101379 () Bool)

(assert (=> d!24579 m!101379))

(declare-fun m!101381 () Bool)

(assert (=> d!24579 m!101381))

(assert (=> d!24579 m!101101))

(declare-fun m!101383 () Bool)

(assert (=> d!24579 m!101383))

(assert (=> d!24579 m!101101))

(assert (=> d!24579 m!100977))

(assert (=> d!24579 m!101207))

(declare-fun m!101385 () Bool)

(assert (=> d!24579 m!101385))

(assert (=> d!24579 m!100993))

(assert (=> d!24579 m!100977))

(declare-fun m!101387 () Bool)

(assert (=> d!24579 m!101387))

(assert (=> d!24579 m!101241))

(declare-fun m!101389 () Bool)

(assert (=> d!24579 m!101389))

(declare-fun m!101391 () Bool)

(assert (=> d!24579 m!101391))

(declare-fun m!101393 () Bool)

(assert (=> d!24579 m!101393))

(declare-fun m!101395 () Bool)

(assert (=> d!24579 m!101395))

(assert (=> d!24579 m!100977))

(declare-fun m!101397 () Bool)

(assert (=> d!24579 m!101397))

(declare-fun m!101399 () Bool)

(assert (=> d!24579 m!101399))

(assert (=> d!24579 m!101101))

(declare-fun m!101401 () Bool)

(assert (=> d!24579 m!101401))

(assert (=> d!24579 m!100977))

(assert (=> d!24579 m!101219))

(assert (=> d!24579 m!101391))

(assert (=> d!24579 m!100977))

(declare-fun m!101403 () Bool)

(assert (=> d!24579 m!101403))

(declare-fun m!101405 () Bool)

(assert (=> d!24579 m!101405))

(assert (=> d!24579 m!100977))

(declare-fun m!101407 () Bool)

(assert (=> d!24579 m!101407))

(declare-fun m!101409 () Bool)

(assert (=> d!24579 m!101409))

(assert (=> d!24579 m!100977))

(assert (=> d!24579 m!100975))

(declare-fun m!101411 () Bool)

(assert (=> d!24579 m!101411))

(declare-fun m!101413 () Bool)

(assert (=> d!24579 m!101413))

(assert (=> d!24579 m!101389))

(declare-fun m!101415 () Bool)

(assert (=> b!94337 m!101415))

(assert (=> b!94337 m!101415))

(assert (=> b!94337 m!100977))

(declare-fun m!101417 () Bool)

(assert (=> b!94337 m!101417))

(declare-fun m!101419 () Bool)

(assert (=> b!94338 m!101419))

(declare-fun m!101421 () Bool)

(assert (=> bm!9464 m!101421))

(assert (=> bm!9466 m!100977))

(assert (=> bm!9466 m!101233))

(assert (=> b!94343 m!100977))

(assert (=> b!94343 m!101199))

(declare-fun m!101423 () Bool)

(assert (=> b!94339 m!101423))

(assert (=> b!94348 m!100977))

(assert (=> b!94348 m!101217))

(assert (=> b!94345 m!101415))

(assert (=> b!94345 m!100987))

(assert (=> b!94345 m!100987))

(declare-fun m!101425 () Bool)

(assert (=> b!94345 m!101425))

(assert (=> bm!9465 m!100977))

(assert (=> bm!9465 m!101219))

(declare-fun m!101427 () Bool)

(assert (=> b!94335 m!101427))

(assert (=> bm!9429 d!24579))

(declare-fun d!24581 () Bool)

(declare-fun e!61588 () Bool)

(assert (=> d!24581 e!61588))

(declare-fun res!47761 () Bool)

(assert (=> d!24581 (=> (not res!47761) (not e!61588))))

(declare-fun lt!46824 () ListLongMap!1501)

(assert (=> d!24581 (= res!47761 (contains!786 lt!46824 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun lt!46826 () List!1576)

(assert (=> d!24581 (= lt!46824 (ListLongMap!1502 lt!46826))))

(declare-fun lt!46823 () Unit!2800)

(declare-fun lt!46825 () Unit!2800)

(assert (=> d!24581 (= lt!46823 lt!46825)))

(assert (=> d!24581 (= (getValueByKey!146 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (Some!151 (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24581 (= lt!46825 (lemmaContainsTupThenGetReturnValue!65 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24581 (= lt!46826 (insertStrictlySorted!68 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24581 (= (+!126 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46824)))

(declare-fun b!94351 () Bool)

(declare-fun res!47762 () Bool)

(assert (=> b!94351 (=> (not res!47762) (not e!61588))))

(assert (=> b!94351 (= res!47762 (= (getValueByKey!146 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (Some!151 (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94352 () Bool)

(assert (=> b!94352 (= e!61588 (contains!790 (toList!766 lt!46824) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (= (and d!24581 res!47761) b!94351))

(assert (= (and b!94351 res!47762) b!94352))

(declare-fun m!101429 () Bool)

(assert (=> d!24581 m!101429))

(declare-fun m!101431 () Bool)

(assert (=> d!24581 m!101431))

(declare-fun m!101433 () Bool)

(assert (=> d!24581 m!101433))

(declare-fun m!101435 () Bool)

(assert (=> d!24581 m!101435))

(declare-fun m!101437 () Bool)

(assert (=> b!94351 m!101437))

(declare-fun m!101439 () Bool)

(assert (=> b!94352 m!101439))

(assert (=> bm!9364 d!24581))

(assert (=> b!94043 d!24523))

(declare-fun d!24583 () Bool)

(declare-fun e!61589 () Bool)

(assert (=> d!24583 e!61589))

(declare-fun res!47763 () Bool)

(assert (=> d!24583 (=> res!47763 e!61589)))

(declare-fun lt!46829 () Bool)

(assert (=> d!24583 (= res!47763 (not lt!46829))))

(declare-fun lt!46827 () Bool)

(assert (=> d!24583 (= lt!46829 lt!46827)))

(declare-fun lt!46828 () Unit!2800)

(declare-fun e!61590 () Unit!2800)

(assert (=> d!24583 (= lt!46828 e!61590)))

(declare-fun c!15741 () Bool)

(assert (=> d!24583 (= c!15741 lt!46827)))

(assert (=> d!24583 (= lt!46827 (containsKey!150 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24583 (= (contains!786 lt!46571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!46829)))

(declare-fun b!94353 () Bool)

(declare-fun lt!46830 () Unit!2800)

(assert (=> b!94353 (= e!61590 lt!46830)))

(assert (=> b!94353 (= lt!46830 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94353 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94354 () Bool)

(declare-fun Unit!2819 () Unit!2800)

(assert (=> b!94354 (= e!61590 Unit!2819)))

(declare-fun b!94355 () Bool)

(assert (=> b!94355 (= e!61589 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24583 c!15741) b!94353))

(assert (= (and d!24583 (not c!15741)) b!94354))

(assert (= (and d!24583 (not res!47763)) b!94355))

(assert (=> d!24583 m!101105))

(declare-fun m!101441 () Bool)

(assert (=> d!24583 m!101441))

(assert (=> b!94353 m!101105))

(declare-fun m!101443 () Bool)

(assert (=> b!94353 m!101443))

(assert (=> b!94353 m!101105))

(declare-fun m!101445 () Bool)

(assert (=> b!94353 m!101445))

(assert (=> b!94353 m!101445))

(declare-fun m!101447 () Bool)

(assert (=> b!94353 m!101447))

(assert (=> b!94355 m!101105))

(assert (=> b!94355 m!101445))

(assert (=> b!94355 m!101445))

(assert (=> b!94355 m!101447))

(assert (=> b!94027 d!24583))

(declare-fun d!24585 () Bool)

(declare-fun e!61591 () Bool)

(assert (=> d!24585 e!61591))

(declare-fun res!47764 () Bool)

(assert (=> d!24585 (=> res!47764 e!61591)))

(declare-fun lt!46833 () Bool)

(assert (=> d!24585 (= res!47764 (not lt!46833))))

(declare-fun lt!46831 () Bool)

(assert (=> d!24585 (= lt!46833 lt!46831)))

(declare-fun lt!46832 () Unit!2800)

(declare-fun e!61592 () Unit!2800)

(assert (=> d!24585 (= lt!46832 e!61592)))

(declare-fun c!15742 () Bool)

(assert (=> d!24585 (= c!15742 lt!46831)))

(assert (=> d!24585 (= lt!46831 (containsKey!150 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24585 (= (contains!786 lt!46571 #b0000000000000000000000000000000000000000000000000000000000000000) lt!46833)))

(declare-fun b!94356 () Bool)

(declare-fun lt!46834 () Unit!2800)

(assert (=> b!94356 (= e!61592 lt!46834)))

(assert (=> b!94356 (= lt!46834 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94356 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94357 () Bool)

(declare-fun Unit!2820 () Unit!2800)

(assert (=> b!94357 (= e!61592 Unit!2820)))

(declare-fun b!94358 () Bool)

(assert (=> b!94358 (= e!61591 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24585 c!15742) b!94356))

(assert (= (and d!24585 (not c!15742)) b!94357))

(assert (= (and d!24585 (not res!47764)) b!94358))

(declare-fun m!101449 () Bool)

(assert (=> d!24585 m!101449))

(declare-fun m!101451 () Bool)

(assert (=> b!94356 m!101451))

(declare-fun m!101453 () Bool)

(assert (=> b!94356 m!101453))

(assert (=> b!94356 m!101453))

(declare-fun m!101455 () Bool)

(assert (=> b!94356 m!101455))

(assert (=> b!94358 m!101453))

(assert (=> b!94358 m!101453))

(assert (=> b!94358 m!101455))

(assert (=> bm!9362 d!24585))

(assert (=> b!94029 d!24557))

(declare-fun d!24587 () Bool)

(declare-fun e!61595 () Bool)

(assert (=> d!24587 e!61595))

(declare-fun c!15745 () Bool)

(assert (=> d!24587 (= c!15745 (and (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!24587 true))

(declare-fun _$29!120 () Unit!2800)

(assert (=> d!24587 (= (choose!566 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) _$29!120)))

(declare-fun b!94363 () Bool)

(assert (=> b!94363 (= e!61595 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94364 () Bool)

(assert (=> b!94364 (= e!61595 (ite (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24587 c!15745) b!94363))

(assert (= (and d!24587 (not c!15745)) b!94364))

(assert (=> b!94363 m!100977))

(assert (=> b!94363 m!101005))

(assert (=> d!24525 d!24587))

(assert (=> d!24525 d!24535))

(declare-fun d!24589 () Bool)

(assert (=> d!24589 (= (apply!90 lt!46571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1272 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3863 () Bool)

(assert (= bs!3863 d!24589))

(assert (=> bs!3863 m!101105))

(assert (=> bs!3863 m!101445))

(assert (=> bs!3863 m!101445))

(declare-fun m!101457 () Bool)

(assert (=> bs!3863 m!101457))

(assert (=> b!94022 d!24589))

(declare-fun d!24591 () Bool)

(declare-fun c!15746 () Bool)

(assert (=> d!24591 (= c!15746 ((_ is ValueCellFull!962) (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61596 () V!3129)

(assert (=> d!24591 (= (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61596)))

(declare-fun b!94365 () Bool)

(assert (=> b!94365 (= e!61596 (get!1270 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94366 () Bool)

(assert (=> b!94366 (= e!61596 (get!1271 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24591 c!15746) b!94365))

(assert (= (and d!24591 (not c!15746)) b!94366))

(assert (=> b!94365 m!101143))

(assert (=> b!94365 m!100973))

(declare-fun m!101459 () Bool)

(assert (=> b!94365 m!101459))

(assert (=> b!94366 m!101143))

(assert (=> b!94366 m!100973))

(declare-fun m!101461 () Bool)

(assert (=> b!94366 m!101461))

(assert (=> b!94022 d!24591))

(declare-fun d!24593 () Bool)

(declare-fun e!61597 () Bool)

(assert (=> d!24593 e!61597))

(declare-fun res!47765 () Bool)

(assert (=> d!24593 (=> res!47765 e!61597)))

(declare-fun lt!46837 () Bool)

(assert (=> d!24593 (= res!47765 (not lt!46837))))

(declare-fun lt!46835 () Bool)

(assert (=> d!24593 (= lt!46837 lt!46835)))

(declare-fun lt!46836 () Unit!2800)

(declare-fun e!61598 () Unit!2800)

(assert (=> d!24593 (= lt!46836 e!61598)))

(declare-fun c!15747 () Bool)

(assert (=> d!24593 (= c!15747 lt!46835)))

(assert (=> d!24593 (= lt!46835 (containsKey!150 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24593 (= (contains!786 lt!46571 #b1000000000000000000000000000000000000000000000000000000000000000) lt!46837)))

(declare-fun b!94367 () Bool)

(declare-fun lt!46838 () Unit!2800)

(assert (=> b!94367 (= e!61598 lt!46838)))

(assert (=> b!94367 (= lt!46838 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94367 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94368 () Bool)

(declare-fun Unit!2821 () Unit!2800)

(assert (=> b!94368 (= e!61598 Unit!2821)))

(declare-fun b!94369 () Bool)

(assert (=> b!94369 (= e!61597 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24593 c!15747) b!94367))

(assert (= (and d!24593 (not c!15747)) b!94368))

(assert (= (and d!24593 (not res!47765)) b!94369))

(declare-fun m!101463 () Bool)

(assert (=> d!24593 m!101463))

(declare-fun m!101465 () Bool)

(assert (=> b!94367 m!101465))

(assert (=> b!94367 m!101261))

(assert (=> b!94367 m!101261))

(declare-fun m!101467 () Bool)

(assert (=> b!94367 m!101467))

(assert (=> b!94369 m!101261))

(assert (=> b!94369 m!101261))

(assert (=> b!94369 m!101467))

(assert (=> bm!9367 d!24593))

(declare-fun d!24595 () Bool)

(declare-fun res!47770 () Bool)

(declare-fun e!61603 () Bool)

(assert (=> d!24595 (=> res!47770 e!61603)))

(assert (=> d!24595 (= res!47770 (and ((_ is Cons!1572) (toList!766 lt!46460)) (= (_1!1163 (h!2164 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!24595 (= (containsKey!150 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!61603)))

(declare-fun b!94374 () Bool)

(declare-fun e!61604 () Bool)

(assert (=> b!94374 (= e!61603 e!61604)))

(declare-fun res!47771 () Bool)

(assert (=> b!94374 (=> (not res!47771) (not e!61604))))

(assert (=> b!94374 (= res!47771 (and (or (not ((_ is Cons!1572) (toList!766 lt!46460))) (bvsle (_1!1163 (h!2164 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) ((_ is Cons!1572) (toList!766 lt!46460)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(declare-fun b!94375 () Bool)

(assert (=> b!94375 (= e!61604 (containsKey!150 (t!5469 (toList!766 lt!46460)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24595 (not res!47770)) b!94374))

(assert (= (and b!94374 res!47771) b!94375))

(assert (=> b!94375 m!100977))

(declare-fun m!101469 () Bool)

(assert (=> b!94375 m!101469))

(assert (=> d!24529 d!24595))

(assert (=> d!24521 d!24527))

(declare-fun d!24597 () Bool)

(assert (=> d!24597 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) from!355 Nil!1572)))

(assert (=> d!24597 true))

(declare-fun _$71!126 () Unit!2800)

(assert (=> d!24597 (= (choose!39 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!126)))

(declare-fun bs!3864 () Bool)

(assert (= bs!3864 d!24597))

(assert (=> bs!3864 m!101001))

(assert (=> d!24521 d!24597))

(declare-fun d!24599 () Bool)

(declare-fun e!61605 () Bool)

(assert (=> d!24599 e!61605))

(declare-fun res!47772 () Bool)

(assert (=> d!24599 (=> (not res!47772) (not e!61605))))

(declare-fun lt!46840 () ListLongMap!1501)

(assert (=> d!24599 (= res!47772 (contains!786 lt!46840 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!46842 () List!1576)

(assert (=> d!24599 (= lt!46840 (ListLongMap!1502 lt!46842))))

(declare-fun lt!46839 () Unit!2800)

(declare-fun lt!46841 () Unit!2800)

(assert (=> d!24599 (= lt!46839 lt!46841)))

(assert (=> d!24599 (= (getValueByKey!146 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24599 (= lt!46841 (lemmaContainsTupThenGetReturnValue!65 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24599 (= lt!46842 (insertStrictlySorted!68 (toList!766 call!9436) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24599 (= (+!126 call!9436 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!46840)))

(declare-fun b!94376 () Bool)

(declare-fun res!47773 () Bool)

(assert (=> b!94376 (=> (not res!47773) (not e!61605))))

(assert (=> b!94376 (= res!47773 (= (getValueByKey!146 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94377 () Bool)

(assert (=> b!94377 (= e!61605 (contains!790 (toList!766 lt!46840) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24599 res!47772) b!94376))

(assert (= (and b!94376 res!47773) b!94377))

(declare-fun m!101471 () Bool)

(assert (=> d!24599 m!101471))

(declare-fun m!101473 () Bool)

(assert (=> d!24599 m!101473))

(declare-fun m!101475 () Bool)

(assert (=> d!24599 m!101475))

(declare-fun m!101477 () Bool)

(assert (=> d!24599 m!101477))

(declare-fun m!101479 () Bool)

(assert (=> b!94376 m!101479))

(declare-fun m!101481 () Bool)

(assert (=> b!94377 m!101481))

(assert (=> b!94170 d!24599))

(declare-fun d!24601 () Bool)

(declare-fun e!61606 () Bool)

(assert (=> d!24601 e!61606))

(declare-fun res!47774 () Bool)

(assert (=> d!24601 (=> res!47774 e!61606)))

(declare-fun lt!46845 () Bool)

(assert (=> d!24601 (= res!47774 (not lt!46845))))

(declare-fun lt!46843 () Bool)

(assert (=> d!24601 (= lt!46845 lt!46843)))

(declare-fun lt!46844 () Unit!2800)

(declare-fun e!61607 () Unit!2800)

(assert (=> d!24601 (= lt!46844 e!61607)))

(declare-fun c!15748 () Bool)

(assert (=> d!24601 (= c!15748 lt!46843)))

(assert (=> d!24601 (= lt!46843 (containsKey!150 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(assert (=> d!24601 (= (contains!786 call!9424 (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))) lt!46845)))

(declare-fun b!94378 () Bool)

(declare-fun lt!46846 () Unit!2800)

(assert (=> b!94378 (= e!61607 lt!46846)))

(assert (=> b!94378 (= lt!46846 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(assert (=> b!94378 (isDefined!100 (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(declare-fun b!94379 () Bool)

(declare-fun Unit!2822 () Unit!2800)

(assert (=> b!94379 (= e!61607 Unit!2822)))

(declare-fun b!94380 () Bool)

(assert (=> b!94380 (= e!61606 (isDefined!100 (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))))

(assert (= (and d!24601 c!15748) b!94378))

(assert (= (and d!24601 (not c!15748)) b!94379))

(assert (= (and d!24601 (not res!47774)) b!94380))

(declare-fun m!101483 () Bool)

(assert (=> d!24601 m!101483))

(declare-fun m!101485 () Bool)

(assert (=> b!94378 m!101485))

(declare-fun m!101487 () Bool)

(assert (=> b!94378 m!101487))

(assert (=> b!94378 m!101487))

(declare-fun m!101489 () Bool)

(assert (=> b!94378 m!101489))

(assert (=> b!94380 m!101487))

(assert (=> b!94380 m!101487))

(assert (=> b!94380 m!101489))

(assert (=> bm!9440 d!24601))

(assert (=> b!94059 d!24571))

(declare-fun b!94397 () Bool)

(declare-fun e!61617 () Bool)

(declare-fun e!61618 () Bool)

(assert (=> b!94397 (= e!61617 e!61618)))

(declare-fun res!47783 () Bool)

(declare-fun call!9475 () Bool)

(assert (=> b!94397 (= res!47783 call!9475)))

(assert (=> b!94397 (=> (not res!47783) (not e!61618))))

(declare-fun b!94398 () Bool)

(declare-fun res!47786 () Bool)

(declare-fun e!61616 () Bool)

(assert (=> b!94398 (=> (not res!47786) (not e!61616))))

(assert (=> b!94398 (= res!47786 call!9475)))

(declare-fun e!61619 () Bool)

(assert (=> b!94398 (= e!61619 e!61616)))

(declare-fun b!94399 () Bool)

(declare-fun res!47785 () Bool)

(assert (=> b!94399 (=> (not res!47785) (not e!61616))))

(declare-fun lt!46852 () SeekEntryResult!254)

(assert (=> b!94399 (= res!47785 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!46852)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94399 (and (bvsge (index!3160 lt!46852) #b00000000000000000000000000000000) (bvslt (index!3160 lt!46852) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94400 () Bool)

(declare-fun call!9474 () Bool)

(assert (=> b!94400 (= e!61618 (not call!9474))))

(declare-fun b!94401 () Bool)

(assert (=> b!94401 (= e!61617 e!61619)))

(declare-fun c!15754 () Bool)

(assert (=> b!94401 (= c!15754 ((_ is MissingVacant!254) lt!46852))))

(declare-fun b!94402 () Bool)

(assert (=> b!94402 (= e!61616 (not call!9474))))

(declare-fun d!24603 () Bool)

(assert (=> d!24603 e!61617))

(declare-fun c!15753 () Bool)

(assert (=> d!24603 (= c!15753 ((_ is MissingZero!254) lt!46852))))

(assert (=> d!24603 (= lt!46852 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun lt!46851 () Unit!2800)

(declare-fun choose!569 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) Int) Unit!2800)

(assert (=> d!24603 (= lt!46851 (choose!569 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24603 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24603 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) lt!46851)))

(declare-fun bm!9471 () Bool)

(assert (=> bm!9471 (= call!9475 (inRange!0 (ite c!15753 (index!3157 lt!46852) (index!3160 lt!46852)) (mask!6509 newMap!16)))))

(declare-fun bm!9472 () Bool)

(assert (=> bm!9472 (= call!9474 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94403 () Bool)

(assert (=> b!94403 (and (bvsge (index!3157 lt!46852) #b00000000000000000000000000000000) (bvslt (index!3157 lt!46852) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!47784 () Bool)

(assert (=> b!94403 (= res!47784 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!46852)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94403 (=> (not res!47784) (not e!61618))))

(declare-fun b!94404 () Bool)

(assert (=> b!94404 (= e!61619 ((_ is Undefined!254) lt!46852))))

(assert (= (and d!24603 c!15753) b!94397))

(assert (= (and d!24603 (not c!15753)) b!94401))

(assert (= (and b!94397 res!47783) b!94403))

(assert (= (and b!94403 res!47784) b!94400))

(assert (= (and b!94401 c!15754) b!94398))

(assert (= (and b!94401 (not c!15754)) b!94404))

(assert (= (and b!94398 res!47786) b!94399))

(assert (= (and b!94399 res!47785) b!94402))

(assert (= (or b!94397 b!94398) bm!9471))

(assert (= (or b!94400 b!94402) bm!9472))

(assert (=> d!24603 m!100977))

(assert (=> d!24603 m!101233))

(assert (=> d!24603 m!100977))

(declare-fun m!101491 () Bool)

(assert (=> d!24603 m!101491))

(assert (=> d!24603 m!101255))

(declare-fun m!101493 () Bool)

(assert (=> b!94403 m!101493))

(assert (=> bm!9472 m!100977))

(assert (=> bm!9472 m!101219))

(declare-fun m!101495 () Bool)

(assert (=> bm!9471 m!101495))

(declare-fun m!101497 () Bool)

(assert (=> b!94399 m!101497))

(assert (=> bm!9422 d!24603))

(declare-fun d!24605 () Bool)

(declare-fun lt!46855 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!97 (List!1575) (InoxSet (_ BitVec 64)))

(assert (=> d!24605 (= lt!46855 (select (content!97 Nil!1572) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!61624 () Bool)

(assert (=> d!24605 (= lt!46855 e!61624)))

(declare-fun res!47791 () Bool)

(assert (=> d!24605 (=> (not res!47791) (not e!61624))))

(assert (=> d!24605 (= res!47791 ((_ is Cons!1571) Nil!1572))))

(assert (=> d!24605 (= (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!46855)))

(declare-fun b!94409 () Bool)

(declare-fun e!61625 () Bool)

(assert (=> b!94409 (= e!61624 e!61625)))

(declare-fun res!47792 () Bool)

(assert (=> b!94409 (=> res!47792 e!61625)))

(assert (=> b!94409 (= res!47792 (= (h!2163 Nil!1572) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94410 () Bool)

(assert (=> b!94410 (= e!61625 (contains!789 (t!5468 Nil!1572) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24605 res!47791) b!94409))

(assert (= (and b!94409 (not res!47792)) b!94410))

(declare-fun m!101499 () Bool)

(assert (=> d!24605 m!101499))

(assert (=> d!24605 m!100977))

(declare-fun m!101501 () Bool)

(assert (=> d!24605 m!101501))

(assert (=> b!94410 m!100977))

(declare-fun m!101503 () Bool)

(assert (=> b!94410 m!101503))

(assert (=> b!94057 d!24605))

(declare-fun d!24607 () Bool)

(assert (=> d!24607 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46858 () Unit!2800)

(declare-fun choose!570 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2800)

(assert (=> d!24607 (= lt!46858 (choose!570 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24607 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24607 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!46858)))

(declare-fun bs!3865 () Bool)

(assert (= bs!3865 d!24607))

(assert (=> bs!3865 m!100975))

(declare-fun m!101505 () Bool)

(assert (=> bs!3865 m!101505))

(assert (=> bs!3865 m!101255))

(assert (=> bs!3865 m!101101))

(declare-fun m!101507 () Bool)

(assert (=> bs!3865 m!101507))

(assert (=> bs!3865 m!101101))

(assert (=> bs!3865 m!100975))

(declare-fun m!101509 () Bool)

(assert (=> bs!3865 m!101509))

(assert (=> b!94179 d!24607))

(declare-fun d!24609 () Bool)

(declare-fun res!47793 () Bool)

(declare-fun e!61626 () Bool)

(assert (=> d!24609 (=> res!47793 e!61626)))

(assert (=> d!24609 (= res!47793 (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24609 (= (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!61626)))

(declare-fun b!94411 () Bool)

(declare-fun e!61627 () Bool)

(assert (=> b!94411 (= e!61626 e!61627)))

(declare-fun res!47794 () Bool)

(assert (=> b!94411 (=> (not res!47794) (not e!61627))))

(assert (=> b!94411 (= res!47794 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94412 () Bool)

(assert (=> b!94412 (= e!61627 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24609 (not res!47793)) b!94411))

(assert (= (and b!94411 res!47794) b!94412))

(declare-fun m!101511 () Bool)

(assert (=> d!24609 m!101511))

(assert (=> b!94412 m!100977))

(declare-fun m!101513 () Bool)

(assert (=> b!94412 m!101513))

(assert (=> b!94038 d!24609))

(declare-fun d!24611 () Bool)

(declare-fun e!61628 () Bool)

(assert (=> d!24611 e!61628))

(declare-fun res!47795 () Bool)

(assert (=> d!24611 (=> (not res!47795) (not e!61628))))

(declare-fun lt!46860 () ListLongMap!1501)

(assert (=> d!24611 (= res!47795 (contains!786 lt!46860 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!46862 () List!1576)

(assert (=> d!24611 (= lt!46860 (ListLongMap!1502 lt!46862))))

(declare-fun lt!46859 () Unit!2800)

(declare-fun lt!46861 () Unit!2800)

(assert (=> d!24611 (= lt!46859 lt!46861)))

(assert (=> d!24611 (= (getValueByKey!146 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24611 (= lt!46861 (lemmaContainsTupThenGetReturnValue!65 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24611 (= lt!46862 (insertStrictlySorted!68 (toList!766 call!9369) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24611 (= (+!126 call!9369 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46860)))

(declare-fun b!94413 () Bool)

(declare-fun res!47796 () Bool)

(assert (=> b!94413 (=> (not res!47796) (not e!61628))))

(assert (=> b!94413 (= res!47796 (= (getValueByKey!146 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94414 () Bool)

(assert (=> b!94414 (= e!61628 (contains!790 (toList!766 lt!46860) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24611 res!47795) b!94413))

(assert (= (and b!94413 res!47796) b!94414))

(declare-fun m!101515 () Bool)

(assert (=> d!24611 m!101515))

(declare-fun m!101517 () Bool)

(assert (=> d!24611 m!101517))

(declare-fun m!101519 () Bool)

(assert (=> d!24611 m!101519))

(declare-fun m!101521 () Bool)

(assert (=> d!24611 m!101521))

(declare-fun m!101523 () Bool)

(assert (=> b!94413 m!101523))

(declare-fun m!101525 () Bool)

(assert (=> b!94414 m!101525))

(assert (=> b!94021 d!24611))

(declare-fun d!24613 () Bool)

(assert (=> d!24613 (= (get!1271 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94194 d!24613))

(declare-fun d!24615 () Bool)

(assert (=> d!24615 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46865 () Unit!2800)

(declare-fun choose!571 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 V!3129 Int) Unit!2800)

(assert (=> d!24615 (= lt!46865 (choose!571 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46653 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24615 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24615 (= (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46653 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)) lt!46865)))

(declare-fun bs!3866 () Bool)

(assert (= bs!3866 d!24615))

(assert (=> bs!3866 m!100975))

(declare-fun m!101527 () Bool)

(assert (=> bs!3866 m!101527))

(assert (=> bs!3866 m!101101))

(assert (=> bs!3866 m!101101))

(declare-fun m!101529 () Bool)

(assert (=> bs!3866 m!101529))

(assert (=> bs!3866 m!101255))

(assert (=> bs!3866 m!100975))

(declare-fun m!101531 () Bool)

(assert (=> bs!3866 m!101531))

(assert (=> b!94153 d!24615))

(assert (=> b!94167 d!24553))

(assert (=> d!24519 d!24523))

(declare-fun d!24617 () Bool)

(assert (=> d!24617 (not (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!24617 true))

(declare-fun _$68!85 () Unit!2800)

(assert (=> d!24617 (= (choose!68 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572)) _$68!85)))

(declare-fun bs!3867 () Bool)

(assert (= bs!3867 d!24617))

(assert (=> bs!3867 m!100977))

(assert (=> bs!3867 m!101005))

(assert (=> d!24519 d!24617))

(declare-fun b!94423 () Bool)

(declare-fun e!61637 () Bool)

(declare-fun e!61635 () Bool)

(assert (=> b!94423 (= e!61637 e!61635)))

(declare-fun c!15757 () Bool)

(assert (=> b!94423 (= c!15757 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94424 () Bool)

(declare-fun e!61636 () Bool)

(assert (=> b!94424 (= e!61635 e!61636)))

(declare-fun lt!46872 () (_ BitVec 64))

(assert (=> b!94424 (= lt!46872 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46873 () Unit!2800)

(assert (=> b!94424 (= lt!46873 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000))))

(assert (=> b!94424 (arrayContainsKey!0 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000)))

(declare-fun lt!46874 () Unit!2800)

(assert (=> b!94424 (= lt!46874 lt!46873)))

(declare-fun res!47801 () Bool)

(assert (=> b!94424 (= res!47801 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (_keys!4116 newMap!16) (mask!6509 newMap!16)) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!94424 (=> (not res!47801) (not e!61636))))

(declare-fun b!94425 () Bool)

(declare-fun call!9478 () Bool)

(assert (=> b!94425 (= e!61636 call!9478)))

(declare-fun b!94426 () Bool)

(assert (=> b!94426 (= e!61635 call!9478)))

(declare-fun d!24619 () Bool)

(declare-fun res!47802 () Bool)

(assert (=> d!24619 (=> res!47802 e!61637)))

(assert (=> d!24619 (= res!47802 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24619 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 newMap!16) (mask!6509 newMap!16)) e!61637)))

(declare-fun bm!9475 () Bool)

(assert (=> bm!9475 (= call!9478 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (= (and d!24619 (not res!47802)) b!94423))

(assert (= (and b!94423 c!15757) b!94424))

(assert (= (and b!94423 (not c!15757)) b!94426))

(assert (= (and b!94424 res!47801) b!94425))

(assert (= (or b!94425 b!94426) bm!9475))

(assert (=> b!94423 m!101303))

(assert (=> b!94423 m!101303))

(assert (=> b!94423 m!101305))

(assert (=> b!94424 m!101303))

(declare-fun m!101533 () Bool)

(assert (=> b!94424 m!101533))

(declare-fun m!101535 () Bool)

(assert (=> b!94424 m!101535))

(assert (=> b!94424 m!101303))

(declare-fun m!101537 () Bool)

(assert (=> b!94424 m!101537))

(declare-fun m!101539 () Bool)

(assert (=> bm!9475 m!101539))

(assert (=> b!94202 d!24619))

(declare-fun b!94451 () Bool)

(declare-fun e!61657 () Bool)

(declare-fun e!61656 () Bool)

(assert (=> b!94451 (= e!61657 e!61656)))

(assert (=> b!94451 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun lt!46894 () ListLongMap!1501)

(declare-fun res!47813 () Bool)

(assert (=> b!94451 (= res!47813 (contains!786 lt!46894 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94451 (=> (not res!47813) (not e!61656))))

(declare-fun b!94452 () Bool)

(declare-fun e!61652 () Bool)

(assert (=> b!94452 (= e!61652 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94452 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!94453 () Bool)

(declare-fun res!47811 () Bool)

(declare-fun e!61654 () Bool)

(assert (=> b!94453 (=> (not res!47811) (not e!61654))))

(assert (=> b!94453 (= res!47811 (not (contains!786 lt!46894 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94454 () Bool)

(declare-fun lt!46893 () Unit!2800)

(declare-fun lt!46891 () Unit!2800)

(assert (=> b!94454 (= lt!46893 lt!46891)))

(declare-fun lt!46892 () ListLongMap!1501)

(declare-fun lt!46890 () (_ BitVec 64))

(declare-fun lt!46895 () V!3129)

(declare-fun lt!46889 () (_ BitVec 64))

(assert (=> b!94454 (not (contains!786 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895)) lt!46889))))

(declare-fun addStillNotContains!39 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> b!94454 (= lt!46891 (addStillNotContains!39 lt!46892 lt!46890 lt!46895 lt!46889))))

(assert (=> b!94454 (= lt!46889 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94454 (= lt!46895 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94454 (= lt!46890 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!9481 () ListLongMap!1501)

(assert (=> b!94454 (= lt!46892 call!9481)))

(declare-fun e!61658 () ListLongMap!1501)

(assert (=> b!94454 (= e!61658 (+!126 call!9481 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94455 () Bool)

(declare-fun e!61653 () ListLongMap!1501)

(assert (=> b!94455 (= e!61653 (ListLongMap!1502 Nil!1573))))

(declare-fun d!24621 () Bool)

(assert (=> d!24621 e!61654))

(declare-fun res!47814 () Bool)

(assert (=> d!24621 (=> (not res!47814) (not e!61654))))

(assert (=> d!24621 (= res!47814 (not (contains!786 lt!46894 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24621 (= lt!46894 e!61653)))

(declare-fun c!15767 () Bool)

(assert (=> d!24621 (= c!15767 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24621 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992))))))

(assert (=> d!24621 (= (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) lt!46894)))

(declare-fun b!94456 () Bool)

(assert (=> b!94456 (= e!61653 e!61658)))

(declare-fun c!15769 () Bool)

(assert (=> b!94456 (= c!15769 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94457 () Bool)

(assert (=> b!94457 (= e!61654 e!61657)))

(declare-fun c!15766 () Bool)

(assert (=> b!94457 (= c!15766 e!61652)))

(declare-fun res!47812 () Bool)

(assert (=> b!94457 (=> (not res!47812) (not e!61652))))

(assert (=> b!94457 (= res!47812 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94458 () Bool)

(declare-fun e!61655 () Bool)

(assert (=> b!94458 (= e!61655 (= lt!46894 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94459 () Bool)

(declare-fun isEmpty!355 (ListLongMap!1501) Bool)

(assert (=> b!94459 (= e!61655 (isEmpty!355 lt!46894))))

(declare-fun b!94460 () Bool)

(assert (=> b!94460 (= e!61657 e!61655)))

(declare-fun c!15768 () Bool)

(assert (=> b!94460 (= c!15768 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun bm!9478 () Bool)

(assert (=> bm!9478 (= call!9481 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94461 () Bool)

(assert (=> b!94461 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> b!94461 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> b!94461 (= e!61656 (= (apply!90 lt!46894 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94462 () Bool)

(assert (=> b!94462 (= e!61658 call!9481)))

(assert (= (and d!24621 c!15767) b!94455))

(assert (= (and d!24621 (not c!15767)) b!94456))

(assert (= (and b!94456 c!15769) b!94454))

(assert (= (and b!94456 (not c!15769)) b!94462))

(assert (= (or b!94454 b!94462) bm!9478))

(assert (= (and d!24621 res!47814) b!94453))

(assert (= (and b!94453 res!47811) b!94457))

(assert (= (and b!94457 res!47812) b!94452))

(assert (= (and b!94457 c!15766) b!94451))

(assert (= (and b!94457 (not c!15766)) b!94460))

(assert (= (and b!94451 res!47813) b!94461))

(assert (= (and b!94460 c!15768) b!94458))

(assert (= (and b!94460 (not c!15768)) b!94459))

(declare-fun b_lambda!4145 () Bool)

(assert (=> (not b_lambda!4145) (not b!94454)))

(assert (=> b!94454 t!5465))

(declare-fun b_and!5749 () Bool)

(assert (= b_and!5745 (and (=> t!5465 result!3177) b_and!5749)))

(assert (=> b!94454 t!5467))

(declare-fun b_and!5751 () Bool)

(assert (= b_and!5747 (and (=> t!5467 result!3181) b_and!5751)))

(declare-fun b_lambda!4147 () Bool)

(assert (=> (not b_lambda!4147) (not b!94461)))

(assert (=> b!94461 t!5465))

(declare-fun b_and!5753 () Bool)

(assert (= b_and!5749 (and (=> t!5465 result!3177) b_and!5753)))

(assert (=> b!94461 t!5467))

(declare-fun b_and!5755 () Bool)

(assert (= b_and!5751 (and (=> t!5467 result!3181) b_and!5755)))

(declare-fun m!101541 () Bool)

(assert (=> b!94454 m!101541))

(declare-fun m!101543 () Bool)

(assert (=> b!94454 m!101543))

(assert (=> b!94454 m!100973))

(declare-fun m!101545 () Bool)

(assert (=> b!94454 m!101545))

(assert (=> b!94454 m!101143))

(assert (=> b!94454 m!100973))

(assert (=> b!94454 m!101145))

(assert (=> b!94454 m!101541))

(declare-fun m!101547 () Bool)

(assert (=> b!94454 m!101547))

(assert (=> b!94454 m!101105))

(assert (=> b!94454 m!101143))

(assert (=> b!94451 m!101105))

(assert (=> b!94451 m!101105))

(declare-fun m!101549 () Bool)

(assert (=> b!94451 m!101549))

(assert (=> b!94452 m!101105))

(assert (=> b!94452 m!101105))

(assert (=> b!94452 m!101107))

(assert (=> b!94461 m!101105))

(declare-fun m!101551 () Bool)

(assert (=> b!94461 m!101551))

(assert (=> b!94461 m!100973))

(assert (=> b!94461 m!101143))

(assert (=> b!94461 m!100973))

(assert (=> b!94461 m!101145))

(assert (=> b!94461 m!101105))

(assert (=> b!94461 m!101143))

(declare-fun m!101553 () Bool)

(assert (=> b!94458 m!101553))

(assert (=> bm!9478 m!101553))

(declare-fun m!101555 () Bool)

(assert (=> b!94453 m!101555))

(declare-fun m!101557 () Bool)

(assert (=> d!24621 m!101557))

(assert (=> d!24621 m!100991))

(assert (=> b!94456 m!101105))

(assert (=> b!94456 m!101105))

(assert (=> b!94456 m!101107))

(declare-fun m!101559 () Bool)

(assert (=> b!94459 m!101559))

(assert (=> bm!9368 d!24621))

(declare-fun d!24623 () Bool)

(assert (=> d!24623 (= (inRange!0 (ite c!15685 (ite c!15691 (index!3158 lt!46660) (ite c!15692 (index!3157 lt!46648) (index!3160 lt!46648))) (ite c!15693 (index!3158 lt!46668) (ite c!15690 (index!3157 lt!46662) (index!3160 lt!46662)))) (mask!6509 newMap!16)) (and (bvsge (ite c!15685 (ite c!15691 (index!3158 lt!46660) (ite c!15692 (index!3157 lt!46648) (index!3160 lt!46648))) (ite c!15693 (index!3158 lt!46668) (ite c!15690 (index!3157 lt!46662) (index!3160 lt!46662)))) #b00000000000000000000000000000000) (bvslt (ite c!15685 (ite c!15691 (index!3158 lt!46660) (ite c!15692 (index!3157 lt!46648) (index!3160 lt!46648))) (ite c!15693 (index!3158 lt!46668) (ite c!15690 (index!3157 lt!46662) (index!3160 lt!46662)))) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9421 d!24623))

(declare-fun b!94463 () Bool)

(declare-fun e!61666 () Unit!2800)

(declare-fun Unit!2823 () Unit!2800)

(assert (=> b!94463 (= e!61666 Unit!2823)))

(declare-fun b!94464 () Bool)

(declare-fun e!61671 () ListLongMap!1501)

(declare-fun call!9482 () ListLongMap!1501)

(assert (=> b!94464 (= e!61671 call!9482)))

(declare-fun b!94465 () Bool)

(declare-fun e!61660 () ListLongMap!1501)

(declare-fun call!9487 () ListLongMap!1501)

(assert (=> b!94465 (= e!61660 call!9487)))

(declare-fun b!94466 () Bool)

(declare-fun e!61668 () Bool)

(declare-fun call!9485 () Bool)

(assert (=> b!94466 (= e!61668 (not call!9485))))

(declare-fun bm!9479 () Bool)

(declare-fun lt!46917 () ListLongMap!1501)

(assert (=> bm!9479 (= call!9485 (contains!786 lt!46917 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94467 () Bool)

(assert (=> b!94467 (= e!61660 call!9482)))

(declare-fun bm!9480 () Bool)

(declare-fun call!9486 () ListLongMap!1501)

(assert (=> bm!9480 (= call!9482 call!9486)))

(declare-fun bm!9481 () Bool)

(declare-fun call!9484 () ListLongMap!1501)

(declare-fun c!15774 () Bool)

(declare-fun call!9483 () ListLongMap!1501)

(declare-fun c!15775 () Bool)

(assert (=> bm!9481 (= call!9486 (+!126 (ite c!15775 call!9484 (ite c!15774 call!9483 call!9487)) (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun bm!9482 () Bool)

(assert (=> bm!9482 (= call!9487 call!9483)))

(declare-fun b!94469 () Bool)

(declare-fun c!15772 () Bool)

(assert (=> b!94469 (= c!15772 (and (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94469 (= e!61671 e!61660)))

(declare-fun b!94470 () Bool)

(declare-fun e!61659 () ListLongMap!1501)

(assert (=> b!94470 (= e!61659 e!61671)))

(assert (=> b!94470 (= c!15774 (and (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94471 () Bool)

(declare-fun e!61663 () Bool)

(declare-fun e!61670 () Bool)

(assert (=> b!94471 (= e!61663 e!61670)))

(declare-fun c!15773 () Bool)

(assert (=> b!94471 (= c!15773 (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94472 () Bool)

(assert (=> b!94472 (= e!61659 (+!126 call!9486 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(declare-fun bm!9483 () Bool)

(assert (=> bm!9483 (= call!9483 call!9484)))

(declare-fun e!61669 () Bool)

(declare-fun b!94473 () Bool)

(assert (=> b!94473 (= e!61669 (= (apply!90 lt!46917 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))))))))

(assert (=> b!94473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94474 () Bool)

(declare-fun e!61667 () Bool)

(assert (=> b!94474 (= e!61667 (= (apply!90 lt!46917 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))

(declare-fun b!94475 () Bool)

(declare-fun res!47815 () Bool)

(assert (=> b!94475 (=> (not res!47815) (not e!61663))))

(assert (=> b!94475 (= res!47815 e!61668)))

(declare-fun c!15770 () Bool)

(assert (=> b!94475 (= c!15770 (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94476 () Bool)

(declare-fun res!47820 () Bool)

(assert (=> b!94476 (=> (not res!47820) (not e!61663))))

(declare-fun e!61665 () Bool)

(assert (=> b!94476 (= res!47820 e!61665)))

(declare-fun res!47816 () Bool)

(assert (=> b!94476 (=> res!47816 e!61665)))

(declare-fun e!61662 () Bool)

(assert (=> b!94476 (= res!47816 (not e!61662))))

(declare-fun res!47822 () Bool)

(assert (=> b!94476 (=> (not res!47822) (not e!61662))))

(assert (=> b!94476 (= res!47822 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9484 () Bool)

(declare-fun call!9488 () Bool)

(assert (=> bm!9484 (= call!9488 (contains!786 lt!46917 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94477 () Bool)

(assert (=> b!94477 (= e!61662 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94478 () Bool)

(assert (=> b!94478 (= e!61665 e!61669)))

(declare-fun res!47817 () Bool)

(assert (=> b!94478 (=> (not res!47817) (not e!61669))))

(assert (=> b!94478 (= res!47817 (contains!786 lt!46917 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94478 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94468 () Bool)

(declare-fun lt!46906 () Unit!2800)

(assert (=> b!94468 (= e!61666 lt!46906)))

(declare-fun lt!46898 () ListLongMap!1501)

(assert (=> b!94468 (= lt!46898 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46915 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46915 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46909 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46909 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46911 () Unit!2800)

(assert (=> b!94468 (= lt!46911 (addStillContains!66 lt!46898 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46909))))

(assert (=> b!94468 (contains!786 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46909)))

(declare-fun lt!46914 () Unit!2800)

(assert (=> b!94468 (= lt!46914 lt!46911)))

(declare-fun lt!46899 () ListLongMap!1501)

(assert (=> b!94468 (= lt!46899 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46903 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46903 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46900 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46900 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46904 () Unit!2800)

(assert (=> b!94468 (= lt!46904 (addApplyDifferent!66 lt!46899 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46900))))

(assert (=> b!94468 (= (apply!90 (+!126 lt!46899 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46900) (apply!90 lt!46899 lt!46900))))

(declare-fun lt!46908 () Unit!2800)

(assert (=> b!94468 (= lt!46908 lt!46904)))

(declare-fun lt!46896 () ListLongMap!1501)

(assert (=> b!94468 (= lt!46896 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46901 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46901 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46897 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46897 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46905 () Unit!2800)

(assert (=> b!94468 (= lt!46905 (addApplyDifferent!66 lt!46896 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46897))))

(assert (=> b!94468 (= (apply!90 (+!126 lt!46896 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46897) (apply!90 lt!46896 lt!46897))))

(declare-fun lt!46913 () Unit!2800)

(assert (=> b!94468 (= lt!46913 lt!46905)))

(declare-fun lt!46907 () ListLongMap!1501)

(assert (=> b!94468 (= lt!46907 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46916 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46916 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46912 () (_ BitVec 64))

(assert (=> b!94468 (= lt!46912 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94468 (= lt!46906 (addApplyDifferent!66 lt!46907 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912))))

(assert (=> b!94468 (= (apply!90 (+!126 lt!46907 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (apply!90 lt!46907 lt!46912))))

(declare-fun d!24625 () Bool)

(assert (=> d!24625 e!61663))

(declare-fun res!47823 () Bool)

(assert (=> d!24625 (=> (not res!47823) (not e!61663))))

(assert (=> d!24625 (= res!47823 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!46910 () ListLongMap!1501)

(assert (=> d!24625 (= lt!46917 lt!46910)))

(declare-fun lt!46902 () Unit!2800)

(assert (=> d!24625 (= lt!46902 e!61666)))

(declare-fun c!15771 () Bool)

(declare-fun e!61661 () Bool)

(assert (=> d!24625 (= c!15771 e!61661)))

(declare-fun res!47821 () Bool)

(assert (=> d!24625 (=> (not res!47821) (not e!61661))))

(assert (=> d!24625 (= res!47821 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24625 (= lt!46910 e!61659)))

(assert (=> d!24625 (= c!15775 (and (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24625 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24625 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!46917)))

(declare-fun b!94479 () Bool)

(declare-fun e!61664 () Bool)

(assert (=> b!94479 (= e!61664 (= (apply!90 lt!46917 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))

(declare-fun b!94480 () Bool)

(assert (=> b!94480 (= e!61661 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94481 () Bool)

(assert (=> b!94481 (= e!61668 e!61664)))

(declare-fun res!47819 () Bool)

(assert (=> b!94481 (= res!47819 call!9485)))

(assert (=> b!94481 (=> (not res!47819) (not e!61664))))

(declare-fun b!94482 () Bool)

(assert (=> b!94482 (= e!61670 e!61667)))

(declare-fun res!47818 () Bool)

(assert (=> b!94482 (= res!47818 call!9488)))

(assert (=> b!94482 (=> (not res!47818) (not e!61667))))

(declare-fun bm!9485 () Bool)

(assert (=> bm!9485 (= call!9484 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94483 () Bool)

(assert (=> b!94483 (= e!61670 (not call!9488))))

(assert (= (and d!24625 c!15775) b!94472))

(assert (= (and d!24625 (not c!15775)) b!94470))

(assert (= (and b!94470 c!15774) b!94464))

(assert (= (and b!94470 (not c!15774)) b!94469))

(assert (= (and b!94469 c!15772) b!94467))

(assert (= (and b!94469 (not c!15772)) b!94465))

(assert (= (or b!94467 b!94465) bm!9482))

(assert (= (or b!94464 bm!9482) bm!9483))

(assert (= (or b!94464 b!94467) bm!9480))

(assert (= (or b!94472 bm!9483) bm!9485))

(assert (= (or b!94472 bm!9480) bm!9481))

(assert (= (and d!24625 res!47821) b!94480))

(assert (= (and d!24625 c!15771) b!94468))

(assert (= (and d!24625 (not c!15771)) b!94463))

(assert (= (and d!24625 res!47823) b!94476))

(assert (= (and b!94476 res!47822) b!94477))

(assert (= (and b!94476 (not res!47816)) b!94478))

(assert (= (and b!94478 res!47817) b!94473))

(assert (= (and b!94476 res!47820) b!94475))

(assert (= (and b!94475 c!15770) b!94481))

(assert (= (and b!94475 (not c!15770)) b!94466))

(assert (= (and b!94481 res!47819) b!94479))

(assert (= (or b!94481 b!94466) bm!9479))

(assert (= (and b!94475 res!47815) b!94471))

(assert (= (and b!94471 c!15773) b!94482))

(assert (= (and b!94471 (not c!15773)) b!94483))

(assert (= (and b!94482 res!47818) b!94474))

(assert (= (or b!94482 b!94483) bm!9484))

(declare-fun b_lambda!4149 () Bool)

(assert (=> (not b_lambda!4149) (not b!94473)))

(assert (=> b!94473 t!5482))

(declare-fun b_and!5757 () Bool)

(assert (= b_and!5753 (and (=> t!5482 result!3197) b_and!5757)))

(assert (=> b!94473 t!5484))

(declare-fun b_and!5759 () Bool)

(assert (= b_and!5755 (and (=> t!5484 result!3199) b_and!5759)))

(declare-fun m!101561 () Bool)

(assert (=> b!94472 m!101561))

(assert (=> b!94477 m!101303))

(assert (=> b!94477 m!101303))

(assert (=> b!94477 m!101305))

(declare-fun m!101563 () Bool)

(assert (=> b!94468 m!101563))

(declare-fun m!101565 () Bool)

(assert (=> b!94468 m!101565))

(declare-fun m!101567 () Bool)

(assert (=> b!94468 m!101567))

(declare-fun m!101569 () Bool)

(assert (=> b!94468 m!101569))

(declare-fun m!101571 () Bool)

(assert (=> b!94468 m!101571))

(assert (=> b!94468 m!101563))

(declare-fun m!101573 () Bool)

(assert (=> b!94468 m!101573))

(declare-fun m!101575 () Bool)

(assert (=> b!94468 m!101575))

(assert (=> b!94468 m!101303))

(assert (=> b!94468 m!101575))

(declare-fun m!101577 () Bool)

(assert (=> b!94468 m!101577))

(declare-fun m!101579 () Bool)

(assert (=> b!94468 m!101579))

(declare-fun m!101581 () Bool)

(assert (=> b!94468 m!101581))

(declare-fun m!101583 () Bool)

(assert (=> b!94468 m!101583))

(declare-fun m!101585 () Bool)

(assert (=> b!94468 m!101585))

(declare-fun m!101587 () Bool)

(assert (=> b!94468 m!101587))

(declare-fun m!101589 () Bool)

(assert (=> b!94468 m!101589))

(assert (=> b!94468 m!101569))

(declare-fun m!101591 () Bool)

(assert (=> b!94468 m!101591))

(assert (=> b!94468 m!101573))

(declare-fun m!101593 () Bool)

(assert (=> b!94468 m!101593))

(assert (=> b!94473 m!101303))

(declare-fun m!101595 () Bool)

(assert (=> b!94473 m!101595))

(assert (=> b!94473 m!101341))

(declare-fun m!101597 () Bool)

(assert (=> b!94473 m!101597))

(assert (=> b!94473 m!101341))

(declare-fun m!101599 () Bool)

(assert (=> b!94473 m!101599))

(assert (=> b!94473 m!101303))

(assert (=> b!94473 m!101597))

(declare-fun m!101601 () Bool)

(assert (=> bm!9481 m!101601))

(declare-fun m!101603 () Bool)

(assert (=> bm!9484 m!101603))

(assert (=> b!94478 m!101303))

(assert (=> b!94478 m!101303))

(declare-fun m!101605 () Bool)

(assert (=> b!94478 m!101605))

(assert (=> b!94480 m!101303))

(assert (=> b!94480 m!101303))

(assert (=> b!94480 m!101305))

(declare-fun m!101607 () Bool)

(assert (=> b!94474 m!101607))

(declare-fun m!101609 () Bool)

(assert (=> b!94479 m!101609))

(assert (=> d!24625 m!101255))

(assert (=> bm!9485 m!101581))

(declare-fun m!101611 () Bool)

(assert (=> bm!9479 m!101611))

(assert (=> bm!9428 d!24625))

(declare-fun d!24627 () Bool)

(assert (=> d!24627 (= (apply!90 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46566) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46566)))))

(declare-fun bs!3868 () Bool)

(assert (= bs!3868 d!24627))

(declare-fun m!101613 () Bool)

(assert (=> bs!3868 m!101613))

(assert (=> bs!3868 m!101613))

(declare-fun m!101615 () Bool)

(assert (=> bs!3868 m!101615))

(assert (=> b!94017 d!24627))

(declare-fun d!24629 () Bool)

(assert (=> d!24629 (contains!786 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46563)))

(declare-fun lt!46920 () Unit!2800)

(declare-fun choose!572 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> d!24629 (= lt!46920 (choose!572 lt!46552 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46563))))

(assert (=> d!24629 (contains!786 lt!46552 lt!46563)))

(assert (=> d!24629 (= (addStillContains!66 lt!46552 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46563) lt!46920)))

(declare-fun bs!3869 () Bool)

(assert (= bs!3869 d!24629))

(assert (=> bs!3869 m!101115))

(assert (=> bs!3869 m!101115))

(assert (=> bs!3869 m!101117))

(declare-fun m!101617 () Bool)

(assert (=> bs!3869 m!101617))

(declare-fun m!101619 () Bool)

(assert (=> bs!3869 m!101619))

(assert (=> b!94017 d!24629))

(declare-fun d!24631 () Bool)

(assert (=> d!24631 (= (apply!90 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46551) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46551)))))

(declare-fun bs!3870 () Bool)

(assert (= bs!3870 d!24631))

(declare-fun m!101621 () Bool)

(assert (=> bs!3870 m!101621))

(assert (=> bs!3870 m!101621))

(declare-fun m!101623 () Bool)

(assert (=> bs!3870 m!101623))

(assert (=> b!94017 d!24631))

(declare-fun d!24633 () Bool)

(assert (=> d!24633 (= (apply!90 lt!46553 lt!46554) (get!1272 (getValueByKey!146 (toList!766 lt!46553) lt!46554)))))

(declare-fun bs!3871 () Bool)

(assert (= bs!3871 d!24633))

(declare-fun m!101625 () Bool)

(assert (=> bs!3871 m!101625))

(assert (=> bs!3871 m!101625))

(declare-fun m!101627 () Bool)

(assert (=> bs!3871 m!101627))

(assert (=> b!94017 d!24633))

(declare-fun d!24635 () Bool)

(declare-fun e!61672 () Bool)

(assert (=> d!24635 e!61672))

(declare-fun res!47824 () Bool)

(assert (=> d!24635 (=> (not res!47824) (not e!61672))))

(declare-fun lt!46922 () ListLongMap!1501)

(assert (=> d!24635 (= res!47824 (contains!786 lt!46922 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!46924 () List!1576)

(assert (=> d!24635 (= lt!46922 (ListLongMap!1502 lt!46924))))

(declare-fun lt!46921 () Unit!2800)

(declare-fun lt!46923 () Unit!2800)

(assert (=> d!24635 (= lt!46921 lt!46923)))

(assert (=> d!24635 (= (getValueByKey!146 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24635 (= lt!46923 (lemmaContainsTupThenGetReturnValue!65 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24635 (= lt!46924 (insertStrictlySorted!68 (toList!766 lt!46550) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24635 (= (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46922)))

(declare-fun b!94485 () Bool)

(declare-fun res!47825 () Bool)

(assert (=> b!94485 (=> (not res!47825) (not e!61672))))

(assert (=> b!94485 (= res!47825 (= (getValueByKey!146 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94486 () Bool)

(assert (=> b!94486 (= e!61672 (contains!790 (toList!766 lt!46922) (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24635 res!47824) b!94485))

(assert (= (and b!94485 res!47825) b!94486))

(declare-fun m!101629 () Bool)

(assert (=> d!24635 m!101629))

(declare-fun m!101631 () Bool)

(assert (=> d!24635 m!101631))

(declare-fun m!101633 () Bool)

(assert (=> d!24635 m!101633))

(declare-fun m!101635 () Bool)

(assert (=> d!24635 m!101635))

(declare-fun m!101637 () Bool)

(assert (=> b!94485 m!101637))

(declare-fun m!101639 () Bool)

(assert (=> b!94486 m!101639))

(assert (=> b!94017 d!24635))

(declare-fun d!24637 () Bool)

(declare-fun e!61673 () Bool)

(assert (=> d!24637 e!61673))

(declare-fun res!47826 () Bool)

(assert (=> d!24637 (=> (not res!47826) (not e!61673))))

(declare-fun lt!46926 () ListLongMap!1501)

(assert (=> d!24637 (= res!47826 (contains!786 lt!46926 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!46928 () List!1576)

(assert (=> d!24637 (= lt!46926 (ListLongMap!1502 lt!46928))))

(declare-fun lt!46925 () Unit!2800)

(declare-fun lt!46927 () Unit!2800)

(assert (=> d!24637 (= lt!46925 lt!46927)))

(assert (=> d!24637 (= (getValueByKey!146 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24637 (= lt!46927 (lemmaContainsTupThenGetReturnValue!65 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24637 (= lt!46928 (insertStrictlySorted!68 (toList!766 lt!46561) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24637 (= (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46926)))

(declare-fun b!94487 () Bool)

(declare-fun res!47827 () Bool)

(assert (=> b!94487 (=> (not res!47827) (not e!61673))))

(assert (=> b!94487 (= res!47827 (= (getValueByKey!146 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94488 () Bool)

(assert (=> b!94488 (= e!61673 (contains!790 (toList!766 lt!46926) (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24637 res!47826) b!94487))

(assert (= (and b!94487 res!47827) b!94488))

(declare-fun m!101641 () Bool)

(assert (=> d!24637 m!101641))

(declare-fun m!101643 () Bool)

(assert (=> d!24637 m!101643))

(declare-fun m!101645 () Bool)

(assert (=> d!24637 m!101645))

(declare-fun m!101647 () Bool)

(assert (=> d!24637 m!101647))

(declare-fun m!101649 () Bool)

(assert (=> b!94487 m!101649))

(declare-fun m!101651 () Bool)

(assert (=> b!94488 m!101651))

(assert (=> b!94017 d!24637))

(declare-fun d!24639 () Bool)

(assert (=> d!24639 (= (apply!90 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46551) (apply!90 lt!46550 lt!46551))))

(declare-fun lt!46931 () Unit!2800)

(declare-fun choose!573 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> d!24639 (= lt!46931 (choose!573 lt!46550 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46551))))

(declare-fun e!61676 () Bool)

(assert (=> d!24639 e!61676))

(declare-fun res!47830 () Bool)

(assert (=> d!24639 (=> (not res!47830) (not e!61676))))

(assert (=> d!24639 (= res!47830 (contains!786 lt!46550 lt!46551))))

(assert (=> d!24639 (= (addApplyDifferent!66 lt!46550 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46551) lt!46931)))

(declare-fun b!94492 () Bool)

(assert (=> b!94492 (= e!61676 (not (= lt!46551 lt!46555)))))

(assert (= (and d!24639 res!47830) b!94492))

(declare-fun m!101653 () Bool)

(assert (=> d!24639 m!101653))

(assert (=> d!24639 m!101119))

(assert (=> d!24639 m!101139))

(assert (=> d!24639 m!101119))

(declare-fun m!101655 () Bool)

(assert (=> d!24639 m!101655))

(assert (=> d!24639 m!101135))

(assert (=> b!94017 d!24639))

(declare-fun d!24641 () Bool)

(declare-fun e!61677 () Bool)

(assert (=> d!24641 e!61677))

(declare-fun res!47831 () Bool)

(assert (=> d!24641 (=> (not res!47831) (not e!61677))))

(declare-fun lt!46933 () ListLongMap!1501)

(assert (=> d!24641 (= res!47831 (contains!786 lt!46933 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!46935 () List!1576)

(assert (=> d!24641 (= lt!46933 (ListLongMap!1502 lt!46935))))

(declare-fun lt!46932 () Unit!2800)

(declare-fun lt!46934 () Unit!2800)

(assert (=> d!24641 (= lt!46932 lt!46934)))

(assert (=> d!24641 (= (getValueByKey!146 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24641 (= lt!46934 (lemmaContainsTupThenGetReturnValue!65 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24641 (= lt!46935 (insertStrictlySorted!68 (toList!766 lt!46553) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24641 (= (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46933)))

(declare-fun b!94493 () Bool)

(declare-fun res!47832 () Bool)

(assert (=> b!94493 (=> (not res!47832) (not e!61677))))

(assert (=> b!94493 (= res!47832 (= (getValueByKey!146 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94494 () Bool)

(assert (=> b!94494 (= e!61677 (contains!790 (toList!766 lt!46933) (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24641 res!47831) b!94493))

(assert (= (and b!94493 res!47832) b!94494))

(declare-fun m!101657 () Bool)

(assert (=> d!24641 m!101657))

(declare-fun m!101659 () Bool)

(assert (=> d!24641 m!101659))

(declare-fun m!101661 () Bool)

(assert (=> d!24641 m!101661))

(declare-fun m!101663 () Bool)

(assert (=> d!24641 m!101663))

(declare-fun m!101665 () Bool)

(assert (=> b!94493 m!101665))

(declare-fun m!101667 () Bool)

(assert (=> b!94494 m!101667))

(assert (=> b!94017 d!24641))

(assert (=> b!94017 d!24621))

(declare-fun d!24643 () Bool)

(assert (=> d!24643 (= (apply!90 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46566) (apply!90 lt!46561 lt!46566))))

(declare-fun lt!46936 () Unit!2800)

(assert (=> d!24643 (= lt!46936 (choose!573 lt!46561 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46566))))

(declare-fun e!61678 () Bool)

(assert (=> d!24643 e!61678))

(declare-fun res!47833 () Bool)

(assert (=> d!24643 (=> (not res!47833) (not e!61678))))

(assert (=> d!24643 (= res!47833 (contains!786 lt!46561 lt!46566))))

(assert (=> d!24643 (= (addApplyDifferent!66 lt!46561 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46566) lt!46936)))

(declare-fun b!94495 () Bool)

(assert (=> b!94495 (= e!61678 (not (= lt!46566 lt!46570)))))

(assert (= (and d!24643 res!47833) b!94495))

(declare-fun m!101669 () Bool)

(assert (=> d!24643 m!101669))

(assert (=> d!24643 m!101109))

(assert (=> d!24643 m!101111))

(assert (=> d!24643 m!101109))

(declare-fun m!101671 () Bool)

(assert (=> d!24643 m!101671))

(assert (=> d!24643 m!101113))

(assert (=> b!94017 d!24643))

(declare-fun d!24645 () Bool)

(declare-fun e!61679 () Bool)

(assert (=> d!24645 e!61679))

(declare-fun res!47834 () Bool)

(assert (=> d!24645 (=> (not res!47834) (not e!61679))))

(declare-fun lt!46938 () ListLongMap!1501)

(assert (=> d!24645 (= res!47834 (contains!786 lt!46938 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!46940 () List!1576)

(assert (=> d!24645 (= lt!46938 (ListLongMap!1502 lt!46940))))

(declare-fun lt!46937 () Unit!2800)

(declare-fun lt!46939 () Unit!2800)

(assert (=> d!24645 (= lt!46937 lt!46939)))

(assert (=> d!24645 (= (getValueByKey!146 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24645 (= lt!46939 (lemmaContainsTupThenGetReturnValue!65 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24645 (= lt!46940 (insertStrictlySorted!68 (toList!766 lt!46552) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24645 (= (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46938)))

(declare-fun b!94496 () Bool)

(declare-fun res!47835 () Bool)

(assert (=> b!94496 (=> (not res!47835) (not e!61679))))

(assert (=> b!94496 (= res!47835 (= (getValueByKey!146 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94497 () Bool)

(assert (=> b!94497 (= e!61679 (contains!790 (toList!766 lt!46938) (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24645 res!47834) b!94496))

(assert (= (and b!94496 res!47835) b!94497))

(declare-fun m!101673 () Bool)

(assert (=> d!24645 m!101673))

(declare-fun m!101675 () Bool)

(assert (=> d!24645 m!101675))

(declare-fun m!101677 () Bool)

(assert (=> d!24645 m!101677))

(declare-fun m!101679 () Bool)

(assert (=> d!24645 m!101679))

(declare-fun m!101681 () Bool)

(assert (=> b!94496 m!101681))

(declare-fun m!101683 () Bool)

(assert (=> b!94497 m!101683))

(assert (=> b!94017 d!24645))

(declare-fun d!24647 () Bool)

(assert (=> d!24647 (= (apply!90 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46554) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46554)))))

(declare-fun bs!3872 () Bool)

(assert (= bs!3872 d!24647))

(declare-fun m!101685 () Bool)

(assert (=> bs!3872 m!101685))

(assert (=> bs!3872 m!101685))

(declare-fun m!101687 () Bool)

(assert (=> bs!3872 m!101687))

(assert (=> b!94017 d!24647))

(declare-fun d!24649 () Bool)

(declare-fun e!61680 () Bool)

(assert (=> d!24649 e!61680))

(declare-fun res!47836 () Bool)

(assert (=> d!24649 (=> res!47836 e!61680)))

(declare-fun lt!46943 () Bool)

(assert (=> d!24649 (= res!47836 (not lt!46943))))

(declare-fun lt!46941 () Bool)

(assert (=> d!24649 (= lt!46943 lt!46941)))

(declare-fun lt!46942 () Unit!2800)

(declare-fun e!61681 () Unit!2800)

(assert (=> d!24649 (= lt!46942 e!61681)))

(declare-fun c!15776 () Bool)

(assert (=> d!24649 (= c!15776 lt!46941)))

(assert (=> d!24649 (= lt!46941 (containsKey!150 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(assert (=> d!24649 (= (contains!786 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46563) lt!46943)))

(declare-fun b!94498 () Bool)

(declare-fun lt!46944 () Unit!2800)

(assert (=> b!94498 (= e!61681 lt!46944)))

(assert (=> b!94498 (= lt!46944 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(assert (=> b!94498 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(declare-fun b!94499 () Bool)

(declare-fun Unit!2824 () Unit!2800)

(assert (=> b!94499 (= e!61681 Unit!2824)))

(declare-fun b!94500 () Bool)

(assert (=> b!94500 (= e!61680 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563)))))

(assert (= (and d!24649 c!15776) b!94498))

(assert (= (and d!24649 (not c!15776)) b!94499))

(assert (= (and d!24649 (not res!47836)) b!94500))

(declare-fun m!101689 () Bool)

(assert (=> d!24649 m!101689))

(declare-fun m!101691 () Bool)

(assert (=> b!94498 m!101691))

(declare-fun m!101693 () Bool)

(assert (=> b!94498 m!101693))

(assert (=> b!94498 m!101693))

(declare-fun m!101695 () Bool)

(assert (=> b!94498 m!101695))

(assert (=> b!94500 m!101693))

(assert (=> b!94500 m!101693))

(assert (=> b!94500 m!101695))

(assert (=> b!94017 d!24649))

(declare-fun d!24651 () Bool)

(assert (=> d!24651 (= (apply!90 lt!46561 lt!46566) (get!1272 (getValueByKey!146 (toList!766 lt!46561) lt!46566)))))

(declare-fun bs!3873 () Bool)

(assert (= bs!3873 d!24651))

(declare-fun m!101697 () Bool)

(assert (=> bs!3873 m!101697))

(assert (=> bs!3873 m!101697))

(declare-fun m!101699 () Bool)

(assert (=> bs!3873 m!101699))

(assert (=> b!94017 d!24651))

(declare-fun d!24653 () Bool)

(assert (=> d!24653 (= (apply!90 lt!46550 lt!46551) (get!1272 (getValueByKey!146 (toList!766 lt!46550) lt!46551)))))

(declare-fun bs!3874 () Bool)

(assert (= bs!3874 d!24653))

(declare-fun m!101701 () Bool)

(assert (=> bs!3874 m!101701))

(assert (=> bs!3874 m!101701))

(declare-fun m!101703 () Bool)

(assert (=> bs!3874 m!101703))

(assert (=> b!94017 d!24653))

(declare-fun d!24655 () Bool)

(assert (=> d!24655 (= (apply!90 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46554) (apply!90 lt!46553 lt!46554))))

(declare-fun lt!46945 () Unit!2800)

(assert (=> d!24655 (= lt!46945 (choose!573 lt!46553 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46554))))

(declare-fun e!61682 () Bool)

(assert (=> d!24655 e!61682))

(declare-fun res!47837 () Bool)

(assert (=> d!24655 (=> (not res!47837) (not e!61682))))

(assert (=> d!24655 (= res!47837 (contains!786 lt!46553 lt!46554))))

(assert (=> d!24655 (= (addApplyDifferent!66 lt!46553 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46554) lt!46945)))

(declare-fun b!94501 () Bool)

(assert (=> b!94501 (= e!61682 (not (= lt!46554 lt!46557)))))

(assert (= (and d!24655 res!47837) b!94501))

(declare-fun m!101705 () Bool)

(assert (=> d!24655 m!101705))

(assert (=> d!24655 m!101121))

(assert (=> d!24655 m!101123))

(assert (=> d!24655 m!101121))

(declare-fun m!101707 () Bool)

(assert (=> d!24655 m!101707))

(assert (=> d!24655 m!101131))

(assert (=> b!94017 d!24655))

(assert (=> bm!9435 d!24515))

(declare-fun d!24657 () Bool)

(declare-fun res!47838 () Bool)

(declare-fun e!61683 () Bool)

(assert (=> d!24657 (=> (not res!47838) (not e!61683))))

(assert (=> d!24657 (= res!47838 (simpleValid!66 (v!2754 (underlying!323 thiss!992))))))

(assert (=> d!24657 (= (valid!381 (v!2754 (underlying!323 thiss!992))) e!61683)))

(declare-fun b!94502 () Bool)

(declare-fun res!47839 () Bool)

(assert (=> b!94502 (=> (not res!47839) (not e!61683))))

(assert (=> b!94502 (= res!47839 (= (arrayCountValidKeys!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))) (_size!465 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94503 () Bool)

(declare-fun res!47840 () Bool)

(assert (=> b!94503 (=> (not res!47840) (not e!61683))))

(assert (=> b!94503 (= res!47840 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94504 () Bool)

(assert (=> b!94504 (= e!61683 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 Nil!1572))))

(assert (= (and d!24657 res!47838) b!94502))

(assert (= (and b!94502 res!47839) b!94503))

(assert (= (and b!94503 res!47840) b!94504))

(declare-fun m!101709 () Bool)

(assert (=> d!24657 m!101709))

(declare-fun m!101711 () Bool)

(assert (=> b!94502 m!101711))

(declare-fun m!101713 () Bool)

(assert (=> b!94503 m!101713))

(declare-fun m!101715 () Bool)

(assert (=> b!94504 m!101715))

(assert (=> d!24547 d!24657))

(declare-fun b!94505 () Bool)

(declare-fun e!61687 () Bool)

(declare-fun e!61685 () Bool)

(assert (=> b!94505 (= e!61687 e!61685)))

(declare-fun c!15777 () Bool)

(assert (=> b!94505 (= c!15777 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun call!9489 () Bool)

(declare-fun bm!9486 () Bool)

(assert (=> bm!9486 (= call!9489 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15777 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572))))))

(declare-fun b!94506 () Bool)

(assert (=> b!94506 (= e!61685 call!9489)))

(declare-fun d!24659 () Bool)

(declare-fun res!47842 () Bool)

(declare-fun e!61686 () Bool)

(assert (=> d!24659 (=> res!47842 e!61686)))

(assert (=> d!24659 (= res!47842 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24659 (= (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) e!61686)))

(declare-fun b!94507 () Bool)

(declare-fun e!61684 () Bool)

(assert (=> b!94507 (= e!61684 (contains!789 (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94508 () Bool)

(assert (=> b!94508 (= e!61685 call!9489)))

(declare-fun b!94509 () Bool)

(assert (=> b!94509 (= e!61686 e!61687)))

(declare-fun res!47841 () Bool)

(assert (=> b!94509 (=> (not res!47841) (not e!61687))))

(assert (=> b!94509 (= res!47841 (not e!61684))))

(declare-fun res!47843 () Bool)

(assert (=> b!94509 (=> (not res!47843) (not e!61684))))

(assert (=> b!94509 (= res!47843 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!24659 (not res!47842)) b!94509))

(assert (= (and b!94509 res!47843) b!94507))

(assert (= (and b!94509 res!47841) b!94505))

(assert (= (and b!94505 c!15777) b!94508))

(assert (= (and b!94505 (not c!15777)) b!94506))

(assert (= (or b!94508 b!94506) bm!9486))

(declare-fun m!101717 () Bool)

(assert (=> b!94505 m!101717))

(assert (=> b!94505 m!101717))

(declare-fun m!101719 () Bool)

(assert (=> b!94505 m!101719))

(assert (=> bm!9486 m!101717))

(declare-fun m!101721 () Bool)

(assert (=> bm!9486 m!101721))

(assert (=> b!94507 m!101717))

(assert (=> b!94507 m!101717))

(declare-fun m!101723 () Bool)

(assert (=> b!94507 m!101723))

(assert (=> b!94509 m!101717))

(assert (=> b!94509 m!101717))

(assert (=> b!94509 m!101719))

(assert (=> bm!9371 d!24659))

(declare-fun d!24661 () Bool)

(assert (=> d!24661 (= (apply!90 lt!46571 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3875 () Bool)

(assert (= bs!3875 d!24661))

(assert (=> bs!3875 m!101453))

(assert (=> bs!3875 m!101453))

(declare-fun m!101725 () Bool)

(assert (=> bs!3875 m!101725))

(assert (=> b!94028 d!24661))

(assert (=> b!94157 d!24567))

(declare-fun d!24663 () Bool)

(declare-fun e!61690 () Bool)

(assert (=> d!24663 e!61690))

(declare-fun res!47846 () Bool)

(assert (=> d!24663 (=> (not res!47846) (not e!61690))))

(assert (=> d!24663 (= res!47846 (and (bvsge (index!3158 lt!46666) #b00000000000000000000000000000000) (bvslt (index!3158 lt!46666) (size!2233 (_keys!4116 newMap!16)))))))

(declare-fun lt!46948 () Unit!2800)

(declare-fun choose!574 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) Int) Unit!2800)

(assert (=> d!24663 (= lt!46948 (choose!574 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24663 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24663 (= (lemmaValidKeyInArrayIsInListMap!98 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (defaultEntry!2435 newMap!16)) lt!46948)))

(declare-fun b!94512 () Bool)

(assert (=> b!94512 (= e!61690 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))

(assert (= (and d!24663 res!47846) b!94512))

(declare-fun m!101727 () Bool)

(assert (=> d!24663 m!101727))

(assert (=> d!24663 m!101255))

(declare-fun m!101729 () Bool)

(assert (=> b!94512 m!101729))

(assert (=> b!94512 m!101201))

(assert (=> b!94512 m!101729))

(assert (=> b!94512 m!101201))

(declare-fun m!101731 () Bool)

(assert (=> b!94512 m!101731))

(assert (=> b!94172 d!24663))

(declare-fun d!24665 () Bool)

(declare-fun e!61693 () Bool)

(assert (=> d!24665 e!61693))

(declare-fun res!47849 () Bool)

(assert (=> d!24665 (=> (not res!47849) (not e!61693))))

(assert (=> d!24665 (= res!47849 (and (bvsge (index!3158 lt!46666) #b00000000000000000000000000000000) (bvslt (index!3158 lt!46666) (size!2234 (_values!2418 newMap!16)))))))

(declare-fun lt!46951 () Unit!2800)

(declare-fun choose!575 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2800)

(assert (=> d!24665 (= lt!46951 (choose!575 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!24665 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24665 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!46951)))

(declare-fun b!94515 () Bool)

(assert (=> b!94515 (= e!61693 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))))

(assert (= (and d!24665 res!47849) b!94515))

(assert (=> d!24665 m!100977))

(assert (=> d!24665 m!100975))

(declare-fun m!101733 () Bool)

(assert (=> d!24665 m!101733))

(assert (=> d!24665 m!101255))

(assert (=> b!94515 m!101101))

(assert (=> b!94515 m!101101))

(assert (=> b!94515 m!101383))

(assert (=> b!94515 m!101211))

(declare-fun m!101735 () Bool)

(assert (=> b!94515 m!101735))

(assert (=> b!94172 d!24665))

(declare-fun d!24667 () Bool)

(declare-fun e!61694 () Bool)

(assert (=> d!24667 e!61694))

(declare-fun res!47850 () Bool)

(assert (=> d!24667 (=> res!47850 e!61694)))

(declare-fun lt!46954 () Bool)

(assert (=> d!24667 (= res!47850 (not lt!46954))))

(declare-fun lt!46952 () Bool)

(assert (=> d!24667 (= lt!46954 lt!46952)))

(declare-fun lt!46953 () Unit!2800)

(declare-fun e!61695 () Unit!2800)

(assert (=> d!24667 (= lt!46953 e!61695)))

(declare-fun c!15778 () Bool)

(assert (=> d!24667 (= c!15778 lt!46952)))

(assert (=> d!24667 (= lt!46952 (containsKey!150 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24667 (= (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!46954)))

(declare-fun b!94516 () Bool)

(declare-fun lt!46955 () Unit!2800)

(assert (=> b!94516 (= e!61695 lt!46955)))

(assert (=> b!94516 (= lt!46955 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!94516 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94517 () Bool)

(declare-fun Unit!2825 () Unit!2800)

(assert (=> b!94517 (= e!61695 Unit!2825)))

(declare-fun b!94518 () Bool)

(assert (=> b!94518 (= e!61694 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (= (and d!24667 c!15778) b!94516))

(assert (= (and d!24667 (not c!15778)) b!94517))

(assert (= (and d!24667 (not res!47850)) b!94518))

(assert (=> d!24667 m!100977))

(declare-fun m!101737 () Bool)

(assert (=> d!24667 m!101737))

(assert (=> b!94516 m!100977))

(declare-fun m!101739 () Bool)

(assert (=> b!94516 m!101739))

(assert (=> b!94516 m!100977))

(declare-fun m!101741 () Bool)

(assert (=> b!94516 m!101741))

(assert (=> b!94516 m!101741))

(declare-fun m!101743 () Bool)

(assert (=> b!94516 m!101743))

(assert (=> b!94518 m!100977))

(assert (=> b!94518 m!101741))

(assert (=> b!94518 m!101741))

(assert (=> b!94518 m!101743))

(assert (=> b!94172 d!24667))

(assert (=> b!94172 d!24567))

(declare-fun b!94519 () Bool)

(declare-fun e!61703 () Unit!2800)

(declare-fun Unit!2826 () Unit!2800)

(assert (=> b!94519 (= e!61703 Unit!2826)))

(declare-fun b!94520 () Bool)

(declare-fun e!61708 () ListLongMap!1501)

(declare-fun call!9490 () ListLongMap!1501)

(assert (=> b!94520 (= e!61708 call!9490)))

(declare-fun b!94521 () Bool)

(declare-fun e!61697 () ListLongMap!1501)

(declare-fun call!9495 () ListLongMap!1501)

(assert (=> b!94521 (= e!61697 call!9495)))

(declare-fun b!94522 () Bool)

(declare-fun e!61705 () Bool)

(declare-fun call!9493 () Bool)

(assert (=> b!94522 (= e!61705 (not call!9493))))

(declare-fun bm!9487 () Bool)

(declare-fun lt!46977 () ListLongMap!1501)

(assert (=> bm!9487 (= call!9493 (contains!786 lt!46977 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94523 () Bool)

(assert (=> b!94523 (= e!61697 call!9490)))

(declare-fun bm!9488 () Bool)

(declare-fun call!9494 () ListLongMap!1501)

(assert (=> bm!9488 (= call!9490 call!9494)))

(declare-fun call!9492 () ListLongMap!1501)

(declare-fun c!15784 () Bool)

(declare-fun call!9491 () ListLongMap!1501)

(declare-fun bm!9489 () Bool)

(declare-fun c!15783 () Bool)

(assert (=> bm!9489 (= call!9494 (+!126 (ite c!15784 call!9492 (ite c!15783 call!9491 call!9495)) (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9490 () Bool)

(assert (=> bm!9490 (= call!9495 call!9491)))

(declare-fun b!94525 () Bool)

(declare-fun c!15781 () Bool)

(assert (=> b!94525 (= c!15781 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94525 (= e!61708 e!61697)))

(declare-fun b!94526 () Bool)

(declare-fun e!61696 () ListLongMap!1501)

(assert (=> b!94526 (= e!61696 e!61708)))

(assert (=> b!94526 (= c!15783 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94527 () Bool)

(declare-fun e!61700 () Bool)

(declare-fun e!61707 () Bool)

(assert (=> b!94527 (= e!61700 e!61707)))

(declare-fun c!15782 () Bool)

(assert (=> b!94527 (= c!15782 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94528 () Bool)

(assert (=> b!94528 (= e!61696 (+!126 call!9494 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9491 () Bool)

(assert (=> bm!9491 (= call!9491 call!9492)))

(declare-fun e!61706 () Bool)

(declare-fun b!94529 () Bool)

(assert (=> b!94529 (= e!61706 (= (apply!90 lt!46977 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94529 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647))))))

(assert (=> b!94529 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94530 () Bool)

(declare-fun e!61704 () Bool)

(assert (=> b!94530 (= e!61704 (= (apply!90 lt!46977 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!94531 () Bool)

(declare-fun res!47851 () Bool)

(assert (=> b!94531 (=> (not res!47851) (not e!61700))))

(assert (=> b!94531 (= res!47851 e!61705)))

(declare-fun c!15779 () Bool)

(assert (=> b!94531 (= c!15779 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94532 () Bool)

(declare-fun res!47856 () Bool)

(assert (=> b!94532 (=> (not res!47856) (not e!61700))))

(declare-fun e!61702 () Bool)

(assert (=> b!94532 (= res!47856 e!61702)))

(declare-fun res!47852 () Bool)

(assert (=> b!94532 (=> res!47852 e!61702)))

(declare-fun e!61699 () Bool)

(assert (=> b!94532 (= res!47852 (not e!61699))))

(declare-fun res!47858 () Bool)

(assert (=> b!94532 (=> (not res!47858) (not e!61699))))

(assert (=> b!94532 (= res!47858 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9492 () Bool)

(declare-fun call!9496 () Bool)

(assert (=> bm!9492 (= call!9496 (contains!786 lt!46977 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94533 () Bool)

(assert (=> b!94533 (= e!61699 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94534 () Bool)

(assert (=> b!94534 (= e!61702 e!61706)))

(declare-fun res!47853 () Bool)

(assert (=> b!94534 (=> (not res!47853) (not e!61706))))

(assert (=> b!94534 (= res!47853 (contains!786 lt!46977 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94534 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94524 () Bool)

(declare-fun lt!46966 () Unit!2800)

(assert (=> b!94524 (= e!61703 lt!46966)))

(declare-fun lt!46958 () ListLongMap!1501)

(assert (=> b!94524 (= lt!46958 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46975 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46975 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46969 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46969 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46971 () Unit!2800)

(assert (=> b!94524 (= lt!46971 (addStillContains!66 lt!46958 lt!46975 (zeroValue!2322 newMap!16) lt!46969))))

(assert (=> b!94524 (contains!786 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) lt!46969)))

(declare-fun lt!46974 () Unit!2800)

(assert (=> b!94524 (= lt!46974 lt!46971)))

(declare-fun lt!46959 () ListLongMap!1501)

(assert (=> b!94524 (= lt!46959 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46963 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46963 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46960 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46960 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46964 () Unit!2800)

(assert (=> b!94524 (= lt!46964 (addApplyDifferent!66 lt!46959 lt!46963 (minValue!2322 newMap!16) lt!46960))))

(assert (=> b!94524 (= (apply!90 (+!126 lt!46959 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) lt!46960) (apply!90 lt!46959 lt!46960))))

(declare-fun lt!46968 () Unit!2800)

(assert (=> b!94524 (= lt!46968 lt!46964)))

(declare-fun lt!46956 () ListLongMap!1501)

(assert (=> b!94524 (= lt!46956 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46961 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46961 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46957 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46957 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46965 () Unit!2800)

(assert (=> b!94524 (= lt!46965 (addApplyDifferent!66 lt!46956 lt!46961 (zeroValue!2322 newMap!16) lt!46957))))

(assert (=> b!94524 (= (apply!90 (+!126 lt!46956 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) lt!46957) (apply!90 lt!46956 lt!46957))))

(declare-fun lt!46973 () Unit!2800)

(assert (=> b!94524 (= lt!46973 lt!46965)))

(declare-fun lt!46967 () ListLongMap!1501)

(assert (=> b!94524 (= lt!46967 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!46976 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46976 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46972 () (_ BitVec 64))

(assert (=> b!94524 (= lt!46972 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94524 (= lt!46966 (addApplyDifferent!66 lt!46967 lt!46976 (minValue!2322 newMap!16) lt!46972))))

(assert (=> b!94524 (= (apply!90 (+!126 lt!46967 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) lt!46972) (apply!90 lt!46967 lt!46972))))

(declare-fun d!24669 () Bool)

(assert (=> d!24669 e!61700))

(declare-fun res!47859 () Bool)

(assert (=> d!24669 (=> (not res!47859) (not e!61700))))

(assert (=> d!24669 (= res!47859 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!46970 () ListLongMap!1501)

(assert (=> d!24669 (= lt!46977 lt!46970)))

(declare-fun lt!46962 () Unit!2800)

(assert (=> d!24669 (= lt!46962 e!61703)))

(declare-fun c!15780 () Bool)

(declare-fun e!61698 () Bool)

(assert (=> d!24669 (= c!15780 e!61698)))

(declare-fun res!47857 () Bool)

(assert (=> d!24669 (=> (not res!47857) (not e!61698))))

(assert (=> d!24669 (= res!47857 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24669 (= lt!46970 e!61696)))

(assert (=> d!24669 (= c!15784 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24669 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24669 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!46977)))

(declare-fun b!94535 () Bool)

(declare-fun e!61701 () Bool)

(assert (=> b!94535 (= e!61701 (= (apply!90 lt!46977 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!94536 () Bool)

(assert (=> b!94536 (= e!61698 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94537 () Bool)

(assert (=> b!94537 (= e!61705 e!61701)))

(declare-fun res!47855 () Bool)

(assert (=> b!94537 (= res!47855 call!9493)))

(assert (=> b!94537 (=> (not res!47855) (not e!61701))))

(declare-fun b!94538 () Bool)

(assert (=> b!94538 (= e!61707 e!61704)))

(declare-fun res!47854 () Bool)

(assert (=> b!94538 (= res!47854 call!9496)))

(assert (=> b!94538 (=> (not res!47854) (not e!61704))))

(declare-fun bm!9493 () Bool)

(assert (=> bm!9493 (= call!9492 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94539 () Bool)

(assert (=> b!94539 (= e!61707 (not call!9496))))

(assert (= (and d!24669 c!15784) b!94528))

(assert (= (and d!24669 (not c!15784)) b!94526))

(assert (= (and b!94526 c!15783) b!94520))

(assert (= (and b!94526 (not c!15783)) b!94525))

(assert (= (and b!94525 c!15781) b!94523))

(assert (= (and b!94525 (not c!15781)) b!94521))

(assert (= (or b!94523 b!94521) bm!9490))

(assert (= (or b!94520 bm!9490) bm!9491))

(assert (= (or b!94520 b!94523) bm!9488))

(assert (= (or b!94528 bm!9491) bm!9493))

(assert (= (or b!94528 bm!9488) bm!9489))

(assert (= (and d!24669 res!47857) b!94536))

(assert (= (and d!24669 c!15780) b!94524))

(assert (= (and d!24669 (not c!15780)) b!94519))

(assert (= (and d!24669 res!47859) b!94532))

(assert (= (and b!94532 res!47858) b!94533))

(assert (= (and b!94532 (not res!47852)) b!94534))

(assert (= (and b!94534 res!47853) b!94529))

(assert (= (and b!94532 res!47856) b!94531))

(assert (= (and b!94531 c!15779) b!94537))

(assert (= (and b!94531 (not c!15779)) b!94522))

(assert (= (and b!94537 res!47855) b!94535))

(assert (= (or b!94537 b!94522) bm!9487))

(assert (= (and b!94531 res!47851) b!94527))

(assert (= (and b!94527 c!15782) b!94538))

(assert (= (and b!94527 (not c!15782)) b!94539))

(assert (= (and b!94538 res!47854) b!94530))

(assert (= (or b!94538 b!94539) bm!9492))

(declare-fun b_lambda!4151 () Bool)

(assert (=> (not b_lambda!4151) (not b!94529)))

(assert (=> b!94529 t!5482))

(declare-fun b_and!5761 () Bool)

(assert (= b_and!5757 (and (=> t!5482 result!3197) b_and!5761)))

(assert (=> b!94529 t!5484))

(declare-fun b_and!5763 () Bool)

(assert (= b_and!5759 (and (=> t!5484 result!3199) b_and!5763)))

(declare-fun m!101745 () Bool)

(assert (=> b!94528 m!101745))

(assert (=> b!94533 m!101303))

(assert (=> b!94533 m!101303))

(assert (=> b!94533 m!101305))

(declare-fun m!101747 () Bool)

(assert (=> b!94524 m!101747))

(declare-fun m!101749 () Bool)

(assert (=> b!94524 m!101749))

(declare-fun m!101751 () Bool)

(assert (=> b!94524 m!101751))

(declare-fun m!101753 () Bool)

(assert (=> b!94524 m!101753))

(declare-fun m!101755 () Bool)

(assert (=> b!94524 m!101755))

(assert (=> b!94524 m!101747))

(declare-fun m!101757 () Bool)

(assert (=> b!94524 m!101757))

(declare-fun m!101759 () Bool)

(assert (=> b!94524 m!101759))

(assert (=> b!94524 m!101303))

(assert (=> b!94524 m!101759))

(declare-fun m!101761 () Bool)

(assert (=> b!94524 m!101761))

(declare-fun m!101763 () Bool)

(assert (=> b!94524 m!101763))

(declare-fun m!101765 () Bool)

(assert (=> b!94524 m!101765))

(declare-fun m!101767 () Bool)

(assert (=> b!94524 m!101767))

(declare-fun m!101769 () Bool)

(assert (=> b!94524 m!101769))

(declare-fun m!101771 () Bool)

(assert (=> b!94524 m!101771))

(declare-fun m!101773 () Bool)

(assert (=> b!94524 m!101773))

(assert (=> b!94524 m!101753))

(declare-fun m!101775 () Bool)

(assert (=> b!94524 m!101775))

(assert (=> b!94524 m!101757))

(declare-fun m!101777 () Bool)

(assert (=> b!94524 m!101777))

(assert (=> b!94529 m!101303))

(declare-fun m!101779 () Bool)

(assert (=> b!94529 m!101779))

(assert (=> b!94529 m!101341))

(declare-fun m!101781 () Bool)

(assert (=> b!94529 m!101781))

(assert (=> b!94529 m!101341))

(declare-fun m!101783 () Bool)

(assert (=> b!94529 m!101783))

(assert (=> b!94529 m!101303))

(assert (=> b!94529 m!101781))

(declare-fun m!101785 () Bool)

(assert (=> bm!9489 m!101785))

(declare-fun m!101787 () Bool)

(assert (=> bm!9492 m!101787))

(assert (=> b!94534 m!101303))

(assert (=> b!94534 m!101303))

(declare-fun m!101789 () Bool)

(assert (=> b!94534 m!101789))

(assert (=> b!94536 m!101303))

(assert (=> b!94536 m!101303))

(assert (=> b!94536 m!101305))

(declare-fun m!101791 () Bool)

(assert (=> b!94530 m!101791))

(declare-fun m!101793 () Bool)

(assert (=> b!94535 m!101793))

(assert (=> d!24669 m!101255))

(assert (=> bm!9493 m!101765))

(declare-fun m!101795 () Bool)

(assert (=> bm!9487 m!101795))

(assert (=> bm!9426 d!24669))

(declare-fun b!94549 () Bool)

(declare-fun res!47869 () Bool)

(declare-fun e!61711 () Bool)

(assert (=> b!94549 (=> (not res!47869) (not e!61711))))

(declare-fun size!2239 (LongMapFixedSize!832) (_ BitVec 32))

(assert (=> b!94549 (= res!47869 (bvsge (size!2239 newMap!16) (_size!465 newMap!16)))))

(declare-fun b!94551 () Bool)

(assert (=> b!94551 (= e!61711 (and (bvsge (extraKeys!2264 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!465 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!94548 () Bool)

(declare-fun res!47868 () Bool)

(assert (=> b!94548 (=> (not res!47868) (not e!61711))))

(assert (=> b!94548 (= res!47868 (and (= (size!2234 (_values!2418 newMap!16)) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001)) (= (size!2233 (_keys!4116 newMap!16)) (size!2234 (_values!2418 newMap!16))) (bvsge (_size!465 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!465 newMap!16) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!94550 () Bool)

(declare-fun res!47871 () Bool)

(assert (=> b!94550 (=> (not res!47871) (not e!61711))))

(assert (=> b!94550 (= res!47871 (= (size!2239 newMap!16) (bvadd (_size!465 newMap!16) (bvsdiv (bvadd (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!24671 () Bool)

(declare-fun res!47870 () Bool)

(assert (=> d!24671 (=> (not res!47870) (not e!61711))))

(assert (=> d!24671 (= res!47870 (validMask!0 (mask!6509 newMap!16)))))

(assert (=> d!24671 (= (simpleValid!66 newMap!16) e!61711)))

(assert (= (and d!24671 res!47870) b!94548))

(assert (= (and b!94548 res!47868) b!94549))

(assert (= (and b!94549 res!47869) b!94550))

(assert (= (and b!94550 res!47871) b!94551))

(declare-fun m!101797 () Bool)

(assert (=> b!94549 m!101797))

(assert (=> b!94550 m!101797))

(assert (=> d!24671 m!101255))

(assert (=> d!24537 d!24671))

(declare-fun d!24673 () Bool)

(declare-fun res!47872 () Bool)

(declare-fun e!61712 () Bool)

(assert (=> d!24673 (=> res!47872 e!61712)))

(assert (=> d!24673 (= res!47872 (= (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24673 (= (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61712)))

(declare-fun b!94552 () Bool)

(declare-fun e!61713 () Bool)

(assert (=> b!94552 (= e!61712 e!61713)))

(declare-fun res!47873 () Bool)

(assert (=> b!94552 (=> (not res!47873) (not e!61713))))

(assert (=> b!94552 (= res!47873 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94553 () Bool)

(assert (=> b!94553 (= e!61713 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24673 (not res!47872)) b!94552))

(assert (= (and b!94552 res!47873) b!94553))

(assert (=> d!24673 m!101303))

(assert (=> b!94553 m!100977))

(declare-fun m!101799 () Bool)

(assert (=> b!94553 m!101799))

(assert (=> bm!9427 d!24673))

(declare-fun d!24675 () Bool)

(declare-fun res!47874 () Bool)

(declare-fun e!61714 () Bool)

(assert (=> d!24675 (=> (not res!47874) (not e!61714))))

(assert (=> d!24675 (= res!47874 (simpleValid!66 (_2!1162 lt!46671)))))

(assert (=> d!24675 (= (valid!381 (_2!1162 lt!46671)) e!61714)))

(declare-fun b!94554 () Bool)

(declare-fun res!47875 () Bool)

(assert (=> b!94554 (=> (not res!47875) (not e!61714))))

(assert (=> b!94554 (= res!47875 (= (arrayCountValidKeys!0 (_keys!4116 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))) (_size!465 (_2!1162 lt!46671))))))

(declare-fun b!94555 () Bool)

(declare-fun res!47876 () Bool)

(assert (=> b!94555 (=> (not res!47876) (not e!61714))))

(assert (=> b!94555 (= res!47876 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671))))))

(declare-fun b!94556 () Bool)

(assert (=> b!94556 (= e!61714 (arrayNoDuplicates!0 (_keys!4116 (_2!1162 lt!46671)) #b00000000000000000000000000000000 Nil!1572))))

(assert (= (and d!24675 res!47874) b!94554))

(assert (= (and b!94554 res!47875) b!94555))

(assert (= (and b!94555 res!47876) b!94556))

(declare-fun m!101801 () Bool)

(assert (=> d!24675 m!101801))

(declare-fun m!101803 () Bool)

(assert (=> b!94554 m!101803))

(declare-fun m!101805 () Bool)

(assert (=> b!94555 m!101805))

(declare-fun m!101807 () Bool)

(assert (=> b!94556 m!101807))

(assert (=> d!24531 d!24675))

(assert (=> d!24531 d!24537))

(declare-fun b!94558 () Bool)

(declare-fun e!61716 () Bool)

(assert (=> b!94558 (= e!61716 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3687 () Bool)

(declare-fun mapRes!3687 () Bool)

(declare-fun tp!9465 () Bool)

(declare-fun e!61715 () Bool)

(assert (=> mapNonEmpty!3687 (= mapRes!3687 (and tp!9465 e!61715))))

(declare-fun mapRest!3687 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3687 () (_ BitVec 32))

(declare-fun mapValue!3687 () ValueCell!962)

(assert (=> mapNonEmpty!3687 (= mapRest!3685 (store mapRest!3687 mapKey!3687 mapValue!3687))))

(declare-fun condMapEmpty!3687 () Bool)

(declare-fun mapDefault!3687 () ValueCell!962)

(assert (=> mapNonEmpty!3685 (= condMapEmpty!3687 (= mapRest!3685 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3687)))))

(assert (=> mapNonEmpty!3685 (= tp!9463 (and e!61716 mapRes!3687))))

(declare-fun mapIsEmpty!3687 () Bool)

(assert (=> mapIsEmpty!3687 mapRes!3687))

(declare-fun b!94557 () Bool)

(assert (=> b!94557 (= e!61715 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3685 condMapEmpty!3687) mapIsEmpty!3687))

(assert (= (and mapNonEmpty!3685 (not condMapEmpty!3687)) mapNonEmpty!3687))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!962) mapValue!3687)) b!94557))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!962) mapDefault!3687)) b!94558))

(declare-fun m!101809 () Bool)

(assert (=> mapNonEmpty!3687 m!101809))

(declare-fun b!94560 () Bool)

(declare-fun e!61718 () Bool)

(assert (=> b!94560 (= e!61718 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3688 () Bool)

(declare-fun mapRes!3688 () Bool)

(declare-fun tp!9466 () Bool)

(declare-fun e!61717 () Bool)

(assert (=> mapNonEmpty!3688 (= mapRes!3688 (and tp!9466 e!61717))))

(declare-fun mapRest!3688 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3688 () (_ BitVec 32))

(declare-fun mapValue!3688 () ValueCell!962)

(assert (=> mapNonEmpty!3688 (= mapRest!3686 (store mapRest!3688 mapKey!3688 mapValue!3688))))

(declare-fun condMapEmpty!3688 () Bool)

(declare-fun mapDefault!3688 () ValueCell!962)

(assert (=> mapNonEmpty!3686 (= condMapEmpty!3688 (= mapRest!3686 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3688)))))

(assert (=> mapNonEmpty!3686 (= tp!9464 (and e!61718 mapRes!3688))))

(declare-fun mapIsEmpty!3688 () Bool)

(assert (=> mapIsEmpty!3688 mapRes!3688))

(declare-fun b!94559 () Bool)

(assert (=> b!94559 (= e!61717 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3686 condMapEmpty!3688) mapIsEmpty!3688))

(assert (= (and mapNonEmpty!3686 (not condMapEmpty!3688)) mapNonEmpty!3688))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!962) mapValue!3688)) b!94559))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!962) mapDefault!3688)) b!94560))

(declare-fun m!101811 () Bool)

(assert (=> mapNonEmpty!3688 m!101811))

(declare-fun b_lambda!4153 () Bool)

(assert (= b_lambda!4149 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4153)))

(declare-fun b_lambda!4155 () Bool)

(assert (= b_lambda!4147 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4155)))

(declare-fun b_lambda!4157 () Bool)

(assert (= b_lambda!4145 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4157)))

(declare-fun b_lambda!4159 () Bool)

(assert (= b_lambda!4151 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4159)))

(declare-fun b_lambda!4161 () Bool)

(assert (= b_lambda!4143 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4161)))

(check-sat (not mapNonEmpty!3687) (not b_lambda!4137) (not b!94512) (not b!94246) (not d!24603) (not b!94363) (not b!94355) (not d!24651) (not b!94507) b_and!5763 (not bm!9479) (not b_lambda!4153) (not b!94502) (not d!24647) (not b!94458) (not b!94518) (not d!24669) (not b!94529) (not d!24597) (not bm!9486) (not bm!9475) (not d!24645) (not d!24637) (not b!94292) (not b!94414) (not bm!9493) (not b!94459) (not b!94534) (not b!94480) (not b!94234) (not b!94274) (not b!94515) (not b!94472) (not b_next!2391) (not b!94294) (not b!94536) (not bm!9481) (not b!94454) (not b_lambda!4155) (not b!94366) (not b!94375) (not b!94337) (not b!94488) (not d!24605) (not bm!9444) (not b!94505) (not b!94376) (not b_lambda!4161) (not d!24641) (not b!94487) (not d!24667) (not b!94296) (not b!94351) (not d!24559) (not bm!9478) (not b!94412) (not b!94270) (not d!24653) (not d!24629) (not bm!9485) (not d!24615) (not d!24655) (not b!94504) (not b!94553) (not d!24577) (not d!24643) (not bm!9492) (not b!94276) (not b!94549) (not b!94556) (not b!94498) (not b!94378) (not d!24611) (not b!94367) (not b!94533) (not mapNonEmpty!3688) (not d!24635) (not b_next!2389) (not b!94468) (not b!94530) (not b!94497) (not d!24665) (not d!24593) (not b!94353) (not d!24581) (not d!24621) (not b!94343) (not b!94485) (not b!94477) (not bm!9449) (not bm!9472) (not d!24599) (not d!24657) (not b!94345) (not b!94503) (not b!94264) (not b!94290) (not b!94486) (not bm!9484) (not d!24625) (not b!94275) (not bm!9487) (not d!24549) (not d!24601) (not b!94299) (not b!94461) (not b!94268) (not b!94338) (not b!94554) (not b!94269) (not d!24583) (not d!24663) (not d!24627) (not b_lambda!4159) (not b!94423) (not b!94297) (not b!94493) (not b!94410) (not b!94452) (not d!24563) (not b!94528) (not b!94555) (not d!24589) (not b!94242) (not d!24675) (not b!94257) (not d!24553) (not d!24551) (not b!94273) (not b!94369) (not d!24639) (not d!24607) (not d!24671) (not b!94509) (not b!94516) (not b!94451) (not b!94380) (not b!94365) (not bm!9464) (not b!94496) (not b_lambda!4157) (not d!24633) (not b!94479) (not b!94377) (not b!94456) (not b!94352) (not d!24661) b_and!5761 (not b!94494) (not b!94535) (not d!24567) (not d!24631) (not d!24585) (not bm!9465) (not d!24561) tp_is_empty!2611 (not bm!9471) (not b!94424) (not bm!9446) (not b!94473) (not b!94350) (not b!94453) (not b!94218) (not d!24617) (not d!24555) (not b!94413) (not d!24579) (not d!24649) (not bm!9454) (not b!94478) (not b_lambda!4141) (not bm!9466) (not b!94474) (not b!94500) (not bm!9489) (not b!94550) (not bm!9450) (not b!94358) (not bm!9453) (not b!94356) (not b!94348) (not b!94524) (not b!94243))
(check-sat b_and!5761 b_and!5763 (not b_next!2389) (not b_next!2391))
(get-model)

(assert (=> bm!9465 d!24673))

(declare-fun d!24677 () Bool)

(assert (=> d!24677 (= (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94292 d!24677))

(declare-fun d!24679 () Bool)

(assert (=> d!24679 (= (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563)) (not (isEmpty!354 (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))))

(declare-fun bs!3876 () Bool)

(assert (= bs!3876 d!24679))

(assert (=> bs!3876 m!101693))

(declare-fun m!101813 () Bool)

(assert (=> bs!3876 m!101813))

(assert (=> b!94500 d!24679))

(declare-fun b!94561 () Bool)

(declare-fun e!61719 () Option!152)

(assert (=> b!94561 (= e!61719 (Some!151 (_2!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun e!61720 () Option!152)

(declare-fun b!94563 () Bool)

(assert (=> b!94563 (= e!61720 (getValueByKey!146 (t!5469 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!46563))))

(declare-fun b!94562 () Bool)

(assert (=> b!94562 (= e!61719 e!61720)))

(declare-fun c!15786 () Bool)

(assert (=> b!94562 (= c!15786 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (not (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46563))))))

(declare-fun b!94564 () Bool)

(assert (=> b!94564 (= e!61720 None!150)))

(declare-fun c!15785 () Bool)

(declare-fun d!24681 () Bool)

(assert (=> d!24681 (= c!15785 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46563)))))

(assert (=> d!24681 (= (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563) e!61719)))

(assert (= (and d!24681 c!15785) b!94561))

(assert (= (and d!24681 (not c!15785)) b!94562))

(assert (= (and b!94562 c!15786) b!94563))

(assert (= (and b!94562 (not c!15786)) b!94564))

(declare-fun m!101815 () Bool)

(assert (=> b!94563 m!101815))

(assert (=> b!94500 d!24681))

(declare-fun b!94565 () Bool)

(declare-fun e!61728 () Unit!2800)

(declare-fun Unit!2827 () Unit!2800)

(assert (=> b!94565 (= e!61728 Unit!2827)))

(declare-fun b!94566 () Bool)

(declare-fun e!61733 () ListLongMap!1501)

(declare-fun call!9497 () ListLongMap!1501)

(assert (=> b!94566 (= e!61733 call!9497)))

(declare-fun b!94567 () Bool)

(declare-fun e!61722 () ListLongMap!1501)

(declare-fun call!9502 () ListLongMap!1501)

(assert (=> b!94567 (= e!61722 call!9502)))

(declare-fun b!94568 () Bool)

(declare-fun e!61730 () Bool)

(declare-fun call!9500 () Bool)

(assert (=> b!94568 (= e!61730 (not call!9500))))

(declare-fun bm!9494 () Bool)

(declare-fun lt!46999 () ListLongMap!1501)

(assert (=> bm!9494 (= call!9500 (contains!786 lt!46999 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94569 () Bool)

(assert (=> b!94569 (= e!61722 call!9497)))

(declare-fun bm!9495 () Bool)

(declare-fun call!9501 () ListLongMap!1501)

(assert (=> bm!9495 (= call!9497 call!9501)))

(declare-fun c!15792 () Bool)

(declare-fun bm!9496 () Bool)

(declare-fun c!15791 () Bool)

(declare-fun call!9498 () ListLongMap!1501)

(declare-fun call!9499 () ListLongMap!1501)

(assert (=> bm!9496 (= call!9501 (+!126 (ite c!15792 call!9499 (ite c!15791 call!9498 call!9502)) (ite (or c!15792 c!15791) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (_2!1162 lt!46671))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (_2!1162 lt!46671))))))))

(declare-fun bm!9497 () Bool)

(assert (=> bm!9497 (= call!9502 call!9498)))

(declare-fun b!94571 () Bool)

(declare-fun c!15789 () Bool)

(assert (=> b!94571 (= c!15789 (and (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94571 (= e!61733 e!61722)))

(declare-fun b!94572 () Bool)

(declare-fun e!61721 () ListLongMap!1501)

(assert (=> b!94572 (= e!61721 e!61733)))

(assert (=> b!94572 (= c!15791 (and (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94573 () Bool)

(declare-fun e!61725 () Bool)

(declare-fun e!61732 () Bool)

(assert (=> b!94573 (= e!61725 e!61732)))

(declare-fun c!15790 () Bool)

(assert (=> b!94573 (= c!15790 (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94574 () Bool)

(assert (=> b!94574 (= e!61721 (+!126 call!9501 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (_2!1162 lt!46671)))))))

(declare-fun bm!9498 () Bool)

(assert (=> bm!9498 (= call!9498 call!9499)))

(declare-fun b!94575 () Bool)

(declare-fun e!61731 () Bool)

(assert (=> b!94575 (= e!61731 (= (apply!90 lt!46999 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (_values!2418 (_2!1162 lt!46671))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 (_2!1162 lt!46671)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94575 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (_values!2418 (_2!1162 lt!46671)))))))

(assert (=> b!94575 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(declare-fun b!94576 () Bool)

(declare-fun e!61729 () Bool)

(assert (=> b!94576 (= e!61729 (= (apply!90 lt!46999 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 (_2!1162 lt!46671))))))

(declare-fun b!94577 () Bool)

(declare-fun res!47877 () Bool)

(assert (=> b!94577 (=> (not res!47877) (not e!61725))))

(assert (=> b!94577 (= res!47877 e!61730)))

(declare-fun c!15787 () Bool)

(assert (=> b!94577 (= c!15787 (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94578 () Bool)

(declare-fun res!47882 () Bool)

(assert (=> b!94578 (=> (not res!47882) (not e!61725))))

(declare-fun e!61727 () Bool)

(assert (=> b!94578 (= res!47882 e!61727)))

(declare-fun res!47878 () Bool)

(assert (=> b!94578 (=> res!47878 e!61727)))

(declare-fun e!61724 () Bool)

(assert (=> b!94578 (= res!47878 (not e!61724))))

(declare-fun res!47884 () Bool)

(assert (=> b!94578 (=> (not res!47884) (not e!61724))))

(assert (=> b!94578 (= res!47884 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(declare-fun bm!9499 () Bool)

(declare-fun call!9503 () Bool)

(assert (=> bm!9499 (= call!9503 (contains!786 lt!46999 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94579 () Bool)

(assert (=> b!94579 (= e!61724 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun b!94580 () Bool)

(assert (=> b!94580 (= e!61727 e!61731)))

(declare-fun res!47879 () Bool)

(assert (=> b!94580 (=> (not res!47879) (not e!61731))))

(assert (=> b!94580 (= res!47879 (contains!786 lt!46999 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(assert (=> b!94580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(declare-fun b!94570 () Bool)

(declare-fun lt!46988 () Unit!2800)

(assert (=> b!94570 (= e!61728 lt!46988)))

(declare-fun lt!46980 () ListLongMap!1501)

(assert (=> b!94570 (= lt!46980 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun lt!46997 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46997 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46991 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46991 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000))))

(declare-fun lt!46993 () Unit!2800)

(assert (=> b!94570 (= lt!46993 (addStillContains!66 lt!46980 lt!46997 (zeroValue!2322 (_2!1162 lt!46671)) lt!46991))))

(assert (=> b!94570 (contains!786 (+!126 lt!46980 (tuple2!2305 lt!46997 (zeroValue!2322 (_2!1162 lt!46671)))) lt!46991)))

(declare-fun lt!46996 () Unit!2800)

(assert (=> b!94570 (= lt!46996 lt!46993)))

(declare-fun lt!46981 () ListLongMap!1501)

(assert (=> b!94570 (= lt!46981 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun lt!46985 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46985 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46982 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46982 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000))))

(declare-fun lt!46986 () Unit!2800)

(assert (=> b!94570 (= lt!46986 (addApplyDifferent!66 lt!46981 lt!46985 (minValue!2322 (_2!1162 lt!46671)) lt!46982))))

(assert (=> b!94570 (= (apply!90 (+!126 lt!46981 (tuple2!2305 lt!46985 (minValue!2322 (_2!1162 lt!46671)))) lt!46982) (apply!90 lt!46981 lt!46982))))

(declare-fun lt!46990 () Unit!2800)

(assert (=> b!94570 (= lt!46990 lt!46986)))

(declare-fun lt!46978 () ListLongMap!1501)

(assert (=> b!94570 (= lt!46978 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun lt!46983 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46983 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46979 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46979 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000))))

(declare-fun lt!46987 () Unit!2800)

(assert (=> b!94570 (= lt!46987 (addApplyDifferent!66 lt!46978 lt!46983 (zeroValue!2322 (_2!1162 lt!46671)) lt!46979))))

(assert (=> b!94570 (= (apply!90 (+!126 lt!46978 (tuple2!2305 lt!46983 (zeroValue!2322 (_2!1162 lt!46671)))) lt!46979) (apply!90 lt!46978 lt!46979))))

(declare-fun lt!46995 () Unit!2800)

(assert (=> b!94570 (= lt!46995 lt!46987)))

(declare-fun lt!46989 () ListLongMap!1501)

(assert (=> b!94570 (= lt!46989 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun lt!46998 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46998 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46994 () (_ BitVec 64))

(assert (=> b!94570 (= lt!46994 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000))))

(assert (=> b!94570 (= lt!46988 (addApplyDifferent!66 lt!46989 lt!46998 (minValue!2322 (_2!1162 lt!46671)) lt!46994))))

(assert (=> b!94570 (= (apply!90 (+!126 lt!46989 (tuple2!2305 lt!46998 (minValue!2322 (_2!1162 lt!46671)))) lt!46994) (apply!90 lt!46989 lt!46994))))

(declare-fun d!24683 () Bool)

(assert (=> d!24683 e!61725))

(declare-fun res!47885 () Bool)

(assert (=> d!24683 (=> (not res!47885) (not e!61725))))

(assert (=> d!24683 (= res!47885 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))))

(declare-fun lt!46992 () ListLongMap!1501)

(assert (=> d!24683 (= lt!46999 lt!46992)))

(declare-fun lt!46984 () Unit!2800)

(assert (=> d!24683 (= lt!46984 e!61728)))

(declare-fun c!15788 () Bool)

(declare-fun e!61723 () Bool)

(assert (=> d!24683 (= c!15788 e!61723)))

(declare-fun res!47883 () Bool)

(assert (=> d!24683 (=> (not res!47883) (not e!61723))))

(assert (=> d!24683 (= res!47883 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(assert (=> d!24683 (= lt!46992 e!61721)))

(assert (=> d!24683 (= c!15792 (and (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24683 (validMask!0 (mask!6509 (_2!1162 lt!46671)))))

(assert (=> d!24683 (= (getCurrentListMap!448 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))) lt!46999)))

(declare-fun b!94581 () Bool)

(declare-fun e!61726 () Bool)

(assert (=> b!94581 (= e!61726 (= (apply!90 lt!46999 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 (_2!1162 lt!46671))))))

(declare-fun b!94582 () Bool)

(assert (=> b!94582 (= e!61723 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun b!94583 () Bool)

(assert (=> b!94583 (= e!61730 e!61726)))

(declare-fun res!47881 () Bool)

(assert (=> b!94583 (= res!47881 call!9500)))

(assert (=> b!94583 (=> (not res!47881) (not e!61726))))

(declare-fun b!94584 () Bool)

(assert (=> b!94584 (= e!61732 e!61729)))

(declare-fun res!47880 () Bool)

(assert (=> b!94584 (= res!47880 call!9503)))

(assert (=> b!94584 (=> (not res!47880) (not e!61729))))

(declare-fun bm!9500 () Bool)

(assert (=> bm!9500 (= call!9499 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (_2!1162 lt!46671)) (_values!2418 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671)) (extraKeys!2264 (_2!1162 lt!46671)) (zeroValue!2322 (_2!1162 lt!46671)) (minValue!2322 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46671))))))

(declare-fun b!94585 () Bool)

(assert (=> b!94585 (= e!61732 (not call!9503))))

(assert (= (and d!24683 c!15792) b!94574))

(assert (= (and d!24683 (not c!15792)) b!94572))

(assert (= (and b!94572 c!15791) b!94566))

(assert (= (and b!94572 (not c!15791)) b!94571))

(assert (= (and b!94571 c!15789) b!94569))

(assert (= (and b!94571 (not c!15789)) b!94567))

(assert (= (or b!94569 b!94567) bm!9497))

(assert (= (or b!94566 bm!9497) bm!9498))

(assert (= (or b!94566 b!94569) bm!9495))

(assert (= (or b!94574 bm!9498) bm!9500))

(assert (= (or b!94574 bm!9495) bm!9496))

(assert (= (and d!24683 res!47883) b!94582))

(assert (= (and d!24683 c!15788) b!94570))

(assert (= (and d!24683 (not c!15788)) b!94565))

(assert (= (and d!24683 res!47885) b!94578))

(assert (= (and b!94578 res!47884) b!94579))

(assert (= (and b!94578 (not res!47878)) b!94580))

(assert (= (and b!94580 res!47879) b!94575))

(assert (= (and b!94578 res!47882) b!94577))

(assert (= (and b!94577 c!15787) b!94583))

(assert (= (and b!94577 (not c!15787)) b!94568))

(assert (= (and b!94583 res!47881) b!94581))

(assert (= (or b!94583 b!94568) bm!9494))

(assert (= (and b!94577 res!47877) b!94573))

(assert (= (and b!94573 c!15790) b!94584))

(assert (= (and b!94573 (not c!15790)) b!94585))

(assert (= (and b!94584 res!47880) b!94576))

(assert (= (or b!94584 b!94585) bm!9499))

(declare-fun b_lambda!4163 () Bool)

(assert (=> (not b_lambda!4163) (not b!94575)))

(declare-fun tb!1877 () Bool)

(declare-fun t!5486 () Bool)

(assert (=> (and b!93841 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 (_2!1162 lt!46671))) t!5486) tb!1877))

(declare-fun result!3201 () Bool)

(assert (=> tb!1877 (= result!3201 tp_is_empty!2611)))

(assert (=> b!94575 t!5486))

(declare-fun b_and!5765 () Bool)

(assert (= b_and!5761 (and (=> t!5486 result!3201) b_and!5765)))

(declare-fun t!5488 () Bool)

(declare-fun tb!1879 () Bool)

(assert (=> (and b!93842 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (_2!1162 lt!46671))) t!5488) tb!1879))

(declare-fun result!3203 () Bool)

(assert (= result!3203 result!3201))

(assert (=> b!94575 t!5488))

(declare-fun b_and!5767 () Bool)

(assert (= b_and!5763 (and (=> t!5488 result!3203) b_and!5767)))

(declare-fun m!101817 () Bool)

(assert (=> b!94574 m!101817))

(declare-fun m!101819 () Bool)

(assert (=> b!94579 m!101819))

(assert (=> b!94579 m!101819))

(declare-fun m!101821 () Bool)

(assert (=> b!94579 m!101821))

(declare-fun m!101823 () Bool)

(assert (=> b!94570 m!101823))

(declare-fun m!101825 () Bool)

(assert (=> b!94570 m!101825))

(declare-fun m!101827 () Bool)

(assert (=> b!94570 m!101827))

(declare-fun m!101829 () Bool)

(assert (=> b!94570 m!101829))

(declare-fun m!101831 () Bool)

(assert (=> b!94570 m!101831))

(assert (=> b!94570 m!101823))

(declare-fun m!101833 () Bool)

(assert (=> b!94570 m!101833))

(declare-fun m!101835 () Bool)

(assert (=> b!94570 m!101835))

(assert (=> b!94570 m!101819))

(assert (=> b!94570 m!101835))

(declare-fun m!101837 () Bool)

(assert (=> b!94570 m!101837))

(declare-fun m!101839 () Bool)

(assert (=> b!94570 m!101839))

(declare-fun m!101841 () Bool)

(assert (=> b!94570 m!101841))

(declare-fun m!101843 () Bool)

(assert (=> b!94570 m!101843))

(declare-fun m!101845 () Bool)

(assert (=> b!94570 m!101845))

(declare-fun m!101847 () Bool)

(assert (=> b!94570 m!101847))

(declare-fun m!101849 () Bool)

(assert (=> b!94570 m!101849))

(assert (=> b!94570 m!101829))

(declare-fun m!101851 () Bool)

(assert (=> b!94570 m!101851))

(assert (=> b!94570 m!101833))

(declare-fun m!101853 () Bool)

(assert (=> b!94570 m!101853))

(assert (=> b!94575 m!101819))

(declare-fun m!101855 () Bool)

(assert (=> b!94575 m!101855))

(declare-fun m!101857 () Bool)

(assert (=> b!94575 m!101857))

(declare-fun m!101859 () Bool)

(assert (=> b!94575 m!101859))

(assert (=> b!94575 m!101857))

(declare-fun m!101861 () Bool)

(assert (=> b!94575 m!101861))

(assert (=> b!94575 m!101819))

(assert (=> b!94575 m!101859))

(declare-fun m!101863 () Bool)

(assert (=> bm!9496 m!101863))

(declare-fun m!101865 () Bool)

(assert (=> bm!9499 m!101865))

(assert (=> b!94580 m!101819))

(assert (=> b!94580 m!101819))

(declare-fun m!101867 () Bool)

(assert (=> b!94580 m!101867))

(assert (=> b!94582 m!101819))

(assert (=> b!94582 m!101819))

(assert (=> b!94582 m!101821))

(declare-fun m!101869 () Bool)

(assert (=> b!94576 m!101869))

(declare-fun m!101871 () Bool)

(assert (=> b!94581 m!101871))

(declare-fun m!101873 () Bool)

(assert (=> d!24683 m!101873))

(assert (=> bm!9500 m!101841))

(declare-fun m!101875 () Bool)

(assert (=> bm!9494 m!101875))

(assert (=> d!24555 d!24683))

(declare-fun d!24685 () Bool)

(assert (=> d!24685 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun lt!47000 () Unit!2800)

(assert (=> d!24685 (= lt!47000 (choose!568 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!61734 () Bool)

(assert (=> d!24685 e!61734))

(declare-fun res!47886 () Bool)

(assert (=> d!24685 (=> (not res!47886) (not e!61734))))

(assert (=> d!24685 (= res!47886 (isStrictlySorted!297 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))))

(assert (=> d!24685 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!47000)))

(declare-fun b!94586 () Bool)

(assert (=> b!94586 (= e!61734 (containsKey!150 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24685 res!47886) b!94586))

(assert (=> d!24685 m!100977))

(assert (=> d!24685 m!101741))

(assert (=> d!24685 m!101741))

(assert (=> d!24685 m!101743))

(assert (=> d!24685 m!100977))

(declare-fun m!101877 () Bool)

(assert (=> d!24685 m!101877))

(declare-fun m!101879 () Bool)

(assert (=> d!24685 m!101879))

(assert (=> b!94586 m!100977))

(assert (=> b!94586 m!101737))

(assert (=> b!94516 d!24685))

(declare-fun d!24687 () Bool)

(assert (=> d!24687 (= (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) (not (isEmpty!354 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun bs!3877 () Bool)

(assert (= bs!3877 d!24687))

(assert (=> bs!3877 m!101741))

(declare-fun m!101881 () Bool)

(assert (=> bs!3877 m!101881))

(assert (=> b!94516 d!24687))

(declare-fun b!94587 () Bool)

(declare-fun e!61735 () Option!152)

(assert (=> b!94587 (= e!61735 (Some!151 (_2!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))))))

(declare-fun e!61736 () Option!152)

(declare-fun b!94589 () Bool)

(assert (=> b!94589 (= e!61736 (getValueByKey!146 (t!5469 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94588 () Bool)

(assert (=> b!94588 (= e!61735 e!61736)))

(declare-fun c!15794 () Bool)

(assert (=> b!94588 (= c!15794 (and ((_ is Cons!1572) (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (not (= (_1!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun b!94590 () Bool)

(assert (=> b!94590 (= e!61736 None!150)))

(declare-fun c!15793 () Bool)

(declare-fun d!24689 () Bool)

(assert (=> d!24689 (= c!15793 (and ((_ is Cons!1572) (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (= (_1!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!24689 (= (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!61735)))

(assert (= (and d!24689 c!15793) b!94587))

(assert (= (and d!24689 (not c!15793)) b!94588))

(assert (= (and b!94588 c!15794) b!94589))

(assert (= (and b!94588 (not c!15794)) b!94590))

(assert (=> b!94589 m!100977))

(declare-fun m!101883 () Bool)

(assert (=> b!94589 m!101883))

(assert (=> b!94516 d!24689))

(declare-fun d!24691 () Bool)

(assert (=> d!24691 (= (map!1232 (_2!1162 lt!46805)) (getCurrentListMap!448 (_keys!4116 (_2!1162 lt!46805)) (_values!2418 (_2!1162 lt!46805)) (mask!6509 (_2!1162 lt!46805)) (extraKeys!2264 (_2!1162 lt!46805)) (zeroValue!2322 (_2!1162 lt!46805)) (minValue!2322 (_2!1162 lt!46805)) #b00000000000000000000000000000000 (defaultEntry!2435 (_2!1162 lt!46805))))))

(declare-fun bs!3878 () Bool)

(assert (= bs!3878 d!24691))

(declare-fun m!101885 () Bool)

(assert (=> bs!3878 m!101885))

(assert (=> b!94345 d!24691))

(declare-fun d!24693 () Bool)

(declare-fun e!61737 () Bool)

(assert (=> d!24693 e!61737))

(declare-fun res!47887 () Bool)

(assert (=> d!24693 (=> (not res!47887) (not e!61737))))

(declare-fun lt!47002 () ListLongMap!1501)

(assert (=> d!24693 (= res!47887 (contains!786 lt!47002 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47004 () List!1576)

(assert (=> d!24693 (= lt!47002 (ListLongMap!1502 lt!47004))))

(declare-fun lt!47001 () Unit!2800)

(declare-fun lt!47003 () Unit!2800)

(assert (=> d!24693 (= lt!47001 lt!47003)))

(assert (=> d!24693 (= (getValueByKey!146 lt!47004 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24693 (= lt!47003 (lemmaContainsTupThenGetReturnValue!65 lt!47004 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24693 (= lt!47004 (insertStrictlySorted!68 (toList!766 (map!1232 newMap!16)) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24693 (= (+!126 (map!1232 newMap!16) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47002)))

(declare-fun b!94591 () Bool)

(declare-fun res!47888 () Bool)

(assert (=> b!94591 (=> (not res!47888) (not e!61737))))

(assert (=> b!94591 (= res!47888 (= (getValueByKey!146 (toList!766 lt!47002) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94592 () Bool)

(assert (=> b!94592 (= e!61737 (contains!790 (toList!766 lt!47002) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24693 res!47887) b!94591))

(assert (= (and b!94591 res!47888) b!94592))

(declare-fun m!101887 () Bool)

(assert (=> d!24693 m!101887))

(declare-fun m!101889 () Bool)

(assert (=> d!24693 m!101889))

(declare-fun m!101891 () Bool)

(assert (=> d!24693 m!101891))

(declare-fun m!101893 () Bool)

(assert (=> d!24693 m!101893))

(declare-fun m!101895 () Bool)

(assert (=> b!94591 m!101895))

(declare-fun m!101897 () Bool)

(assert (=> b!94592 m!101897))

(assert (=> b!94345 d!24693))

(assert (=> b!94345 d!24515))

(declare-fun d!24695 () Bool)

(assert (=> d!24695 (= (apply!90 lt!46917 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46917) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3879 () Bool)

(assert (= bs!3879 d!24695))

(declare-fun m!101899 () Bool)

(assert (=> bs!3879 m!101899))

(assert (=> bs!3879 m!101899))

(declare-fun m!101901 () Bool)

(assert (=> bs!3879 m!101901))

(assert (=> b!94474 d!24695))

(declare-fun b!94593 () Bool)

(declare-fun e!61738 () (_ BitVec 32))

(declare-fun call!9504 () (_ BitVec 32))

(assert (=> b!94593 (= e!61738 call!9504)))

(declare-fun b!94594 () Bool)

(assert (=> b!94594 (= e!61738 (bvadd #b00000000000000000000000000000001 call!9504))))

(declare-fun b!94595 () Bool)

(declare-fun e!61739 () (_ BitVec 32))

(assert (=> b!94595 (= e!61739 e!61738)))

(declare-fun c!15795 () Bool)

(assert (=> b!94595 (= c!15795 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun bm!9501 () Bool)

(assert (=> bm!9501 (= call!9504 (arrayCountValidKeys!0 (_keys!4116 (_2!1162 lt!46671)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(declare-fun d!24697 () Bool)

(declare-fun lt!47005 () (_ BitVec 32))

(assert (=> d!24697 (and (bvsge lt!47005 #b00000000000000000000000000000000) (bvsle lt!47005 (bvsub (size!2233 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(assert (=> d!24697 (= lt!47005 e!61739)))

(declare-fun c!15796 () Bool)

(assert (=> d!24697 (= c!15796 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(assert (=> d!24697 (and (bvsle #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2233 (_keys!4116 (_2!1162 lt!46671))) (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(assert (=> d!24697 (= (arrayCountValidKeys!0 (_keys!4116 (_2!1162 lt!46671)) #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))) lt!47005)))

(declare-fun b!94596 () Bool)

(assert (=> b!94596 (= e!61739 #b00000000000000000000000000000000)))

(assert (= (and d!24697 c!15796) b!94596))

(assert (= (and d!24697 (not c!15796)) b!94595))

(assert (= (and b!94595 c!15795) b!94594))

(assert (= (and b!94595 (not c!15795)) b!94593))

(assert (= (or b!94594 b!94593) bm!9501))

(assert (=> b!94595 m!101819))

(assert (=> b!94595 m!101819))

(assert (=> b!94595 m!101821))

(declare-fun m!101903 () Bool)

(assert (=> bm!9501 m!101903))

(assert (=> b!94554 d!24697))

(declare-fun d!24699 () Bool)

(assert (=> d!24699 (= (size!2239 newMap!16) (bvadd (_size!465 newMap!16) (bvsdiv (bvadd (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!94549 d!24699))

(declare-fun d!24701 () Bool)

(assert (=> d!24701 (= (get!1272 (getValueByKey!146 (toList!766 lt!46550) lt!46551)) (v!2760 (getValueByKey!146 (toList!766 lt!46550) lt!46551)))))

(assert (=> d!24653 d!24701))

(declare-fun b!94597 () Bool)

(declare-fun e!61740 () Option!152)

(assert (=> b!94597 (= e!61740 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46550)))))))

(declare-fun b!94599 () Bool)

(declare-fun e!61741 () Option!152)

(assert (=> b!94599 (= e!61741 (getValueByKey!146 (t!5469 (toList!766 lt!46550)) lt!46551))))

(declare-fun b!94598 () Bool)

(assert (=> b!94598 (= e!61740 e!61741)))

(declare-fun c!15798 () Bool)

(assert (=> b!94598 (= c!15798 (and ((_ is Cons!1572) (toList!766 lt!46550)) (not (= (_1!1163 (h!2164 (toList!766 lt!46550))) lt!46551))))))

(declare-fun b!94600 () Bool)

(assert (=> b!94600 (= e!61741 None!150)))

(declare-fun d!24703 () Bool)

(declare-fun c!15797 () Bool)

(assert (=> d!24703 (= c!15797 (and ((_ is Cons!1572) (toList!766 lt!46550)) (= (_1!1163 (h!2164 (toList!766 lt!46550))) lt!46551)))))

(assert (=> d!24703 (= (getValueByKey!146 (toList!766 lt!46550) lt!46551) e!61740)))

(assert (= (and d!24703 c!15797) b!94597))

(assert (= (and d!24703 (not c!15797)) b!94598))

(assert (= (and b!94598 c!15798) b!94599))

(assert (= (and b!94598 (not c!15798)) b!94600))

(declare-fun m!101905 () Bool)

(assert (=> b!94599 m!101905))

(assert (=> d!24653 d!24703))

(declare-fun b!94601 () Bool)

(declare-fun e!61744 () Bool)

(declare-fun e!61742 () Bool)

(assert (=> b!94601 (= e!61744 e!61742)))

(declare-fun c!15799 () Bool)

(assert (=> b!94601 (= c!15799 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!94602 () Bool)

(declare-fun e!61743 () Bool)

(assert (=> b!94602 (= e!61742 e!61743)))

(declare-fun lt!47006 () (_ BitVec 64))

(assert (=> b!94602 (= lt!47006 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!47007 () Unit!2800)

(assert (=> b!94602 (= lt!47007 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4116 newMap!16) lt!47006 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!94602 (arrayContainsKey!0 (_keys!4116 newMap!16) lt!47006 #b00000000000000000000000000000000)))

(declare-fun lt!47008 () Unit!2800)

(assert (=> b!94602 (= lt!47008 lt!47007)))

(declare-fun res!47889 () Bool)

(assert (=> b!94602 (= res!47889 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4116 newMap!16) (mask!6509 newMap!16)) (Found!254 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!94602 (=> (not res!47889) (not e!61743))))

(declare-fun b!94603 () Bool)

(declare-fun call!9505 () Bool)

(assert (=> b!94603 (= e!61743 call!9505)))

(declare-fun b!94604 () Bool)

(assert (=> b!94604 (= e!61742 call!9505)))

(declare-fun d!24705 () Bool)

(declare-fun res!47890 () Bool)

(assert (=> d!24705 (=> res!47890 e!61744)))

(assert (=> d!24705 (= res!47890 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24705 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4116 newMap!16) (mask!6509 newMap!16)) e!61744)))

(declare-fun bm!9502 () Bool)

(assert (=> bm!9502 (= call!9505 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (= (and d!24705 (not res!47890)) b!94601))

(assert (= (and b!94601 c!15799) b!94602))

(assert (= (and b!94601 (not c!15799)) b!94604))

(assert (= (and b!94602 res!47889) b!94603))

(assert (= (or b!94603 b!94604) bm!9502))

(declare-fun m!101907 () Bool)

(assert (=> b!94601 m!101907))

(assert (=> b!94601 m!101907))

(declare-fun m!101909 () Bool)

(assert (=> b!94601 m!101909))

(assert (=> b!94602 m!101907))

(declare-fun m!101911 () Bool)

(assert (=> b!94602 m!101911))

(declare-fun m!101913 () Bool)

(assert (=> b!94602 m!101913))

(assert (=> b!94602 m!101907))

(declare-fun m!101915 () Bool)

(assert (=> b!94602 m!101915))

(declare-fun m!101917 () Bool)

(assert (=> bm!9502 m!101917))

(assert (=> bm!9475 d!24705))

(declare-fun d!24707 () Bool)

(declare-fun e!61745 () Bool)

(assert (=> d!24707 e!61745))

(declare-fun res!47891 () Bool)

(assert (=> d!24707 (=> (not res!47891) (not e!61745))))

(declare-fun lt!47010 () ListLongMap!1501)

(assert (=> d!24707 (= res!47891 (contains!786 lt!47010 (_1!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun lt!47012 () List!1576)

(assert (=> d!24707 (= lt!47010 (ListLongMap!1502 lt!47012))))

(declare-fun lt!47009 () Unit!2800)

(declare-fun lt!47011 () Unit!2800)

(assert (=> d!24707 (= lt!47009 lt!47011)))

(assert (=> d!24707 (= (getValueByKey!146 lt!47012 (_1!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))) (Some!151 (_2!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!24707 (= lt!47011 (lemmaContainsTupThenGetReturnValue!65 lt!47012 (_1!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (_2!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!24707 (= lt!47012 (insertStrictlySorted!68 (toList!766 (ite c!15775 call!9484 (ite c!15774 call!9483 call!9487))) (_1!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (_2!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(assert (=> d!24707 (= (+!126 (ite c!15775 call!9484 (ite c!15774 call!9483 call!9487)) (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!47010)))

(declare-fun b!94605 () Bool)

(declare-fun res!47892 () Bool)

(assert (=> b!94605 (=> (not res!47892) (not e!61745))))

(assert (=> b!94605 (= res!47892 (= (getValueByKey!146 (toList!766 lt!47010) (_1!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))) (Some!151 (_2!1163 (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))))

(declare-fun b!94606 () Bool)

(assert (=> b!94606 (= e!61745 (contains!790 (toList!766 lt!47010) (ite (or c!15775 c!15774) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (= (and d!24707 res!47891) b!94605))

(assert (= (and b!94605 res!47892) b!94606))

(declare-fun m!101919 () Bool)

(assert (=> d!24707 m!101919))

(declare-fun m!101921 () Bool)

(assert (=> d!24707 m!101921))

(declare-fun m!101923 () Bool)

(assert (=> d!24707 m!101923))

(declare-fun m!101925 () Bool)

(assert (=> d!24707 m!101925))

(declare-fun m!101927 () Bool)

(assert (=> b!94605 m!101927))

(declare-fun m!101929 () Bool)

(assert (=> b!94606 m!101929))

(assert (=> bm!9481 d!24707))

(declare-fun d!24709 () Bool)

(declare-fun lt!47015 () Bool)

(declare-fun content!98 (List!1576) (InoxSet tuple2!2304))

(assert (=> d!24709 (= lt!47015 (select (content!98 (toList!766 lt!46860)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!61750 () Bool)

(assert (=> d!24709 (= lt!47015 e!61750)))

(declare-fun res!47898 () Bool)

(assert (=> d!24709 (=> (not res!47898) (not e!61750))))

(assert (=> d!24709 (= res!47898 ((_ is Cons!1572) (toList!766 lt!46860)))))

(assert (=> d!24709 (= (contains!790 (toList!766 lt!46860) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!47015)))

(declare-fun b!94611 () Bool)

(declare-fun e!61751 () Bool)

(assert (=> b!94611 (= e!61750 e!61751)))

(declare-fun res!47897 () Bool)

(assert (=> b!94611 (=> res!47897 e!61751)))

(assert (=> b!94611 (= res!47897 (= (h!2164 (toList!766 lt!46860)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94612 () Bool)

(assert (=> b!94612 (= e!61751 (contains!790 (t!5469 (toList!766 lt!46860)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24709 res!47898) b!94611))

(assert (= (and b!94611 (not res!47897)) b!94612))

(declare-fun m!101931 () Bool)

(assert (=> d!24709 m!101931))

(declare-fun m!101933 () Bool)

(assert (=> d!24709 m!101933))

(declare-fun m!101935 () Bool)

(assert (=> b!94612 m!101935))

(assert (=> b!94414 d!24709))

(declare-fun d!24711 () Bool)

(assert (=> d!24711 (= (get!1272 (getValueByKey!146 (toList!766 lt!46553) lt!46554)) (v!2760 (getValueByKey!146 (toList!766 lt!46553) lt!46554)))))

(assert (=> d!24633 d!24711))

(declare-fun b!94613 () Bool)

(declare-fun e!61752 () Option!152)

(assert (=> b!94613 (= e!61752 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46553)))))))

(declare-fun b!94615 () Bool)

(declare-fun e!61753 () Option!152)

(assert (=> b!94615 (= e!61753 (getValueByKey!146 (t!5469 (toList!766 lt!46553)) lt!46554))))

(declare-fun b!94614 () Bool)

(assert (=> b!94614 (= e!61752 e!61753)))

(declare-fun c!15801 () Bool)

(assert (=> b!94614 (= c!15801 (and ((_ is Cons!1572) (toList!766 lt!46553)) (not (= (_1!1163 (h!2164 (toList!766 lt!46553))) lt!46554))))))

(declare-fun b!94616 () Bool)

(assert (=> b!94616 (= e!61753 None!150)))

(declare-fun d!24713 () Bool)

(declare-fun c!15800 () Bool)

(assert (=> d!24713 (= c!15800 (and ((_ is Cons!1572) (toList!766 lt!46553)) (= (_1!1163 (h!2164 (toList!766 lt!46553))) lt!46554)))))

(assert (=> d!24713 (= (getValueByKey!146 (toList!766 lt!46553) lt!46554) e!61752)))

(assert (= (and d!24713 c!15800) b!94613))

(assert (= (and d!24713 (not c!15800)) b!94614))

(assert (= (and b!94614 c!15801) b!94615))

(assert (= (and b!94614 (not c!15801)) b!94616))

(declare-fun m!101937 () Bool)

(assert (=> b!94615 m!101937))

(assert (=> d!24633 d!24713))

(assert (=> b!94456 d!24557))

(declare-fun b!94617 () Bool)

(declare-fun e!61754 () Option!152)

(assert (=> b!94617 (= e!61754 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46824)))))))

(declare-fun e!61755 () Option!152)

(declare-fun b!94619 () Bool)

(assert (=> b!94619 (= e!61755 (getValueByKey!146 (t!5469 (toList!766 lt!46824)) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94618 () Bool)

(assert (=> b!94618 (= e!61754 e!61755)))

(declare-fun c!15803 () Bool)

(assert (=> b!94618 (= c!15803 (and ((_ is Cons!1572) (toList!766 lt!46824)) (not (= (_1!1163 (h!2164 (toList!766 lt!46824))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun b!94620 () Bool)

(assert (=> b!94620 (= e!61755 None!150)))

(declare-fun d!24715 () Bool)

(declare-fun c!15802 () Bool)

(assert (=> d!24715 (= c!15802 (and ((_ is Cons!1572) (toList!766 lt!46824)) (= (_1!1163 (h!2164 (toList!766 lt!46824))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (=> d!24715 (= (getValueByKey!146 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) e!61754)))

(assert (= (and d!24715 c!15802) b!94617))

(assert (= (and d!24715 (not c!15802)) b!94618))

(assert (= (and b!94618 c!15803) b!94619))

(assert (= (and b!94618 (not c!15803)) b!94620))

(declare-fun m!101939 () Bool)

(assert (=> b!94619 m!101939))

(assert (=> b!94351 d!24715))

(declare-fun d!24717 () Bool)

(assert (=> d!24717 (= (get!1272 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2760 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24661 d!24717))

(declare-fun b!94621 () Bool)

(declare-fun e!61756 () Option!152)

(assert (=> b!94621 (= e!61756 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46571)))))))

(declare-fun b!94623 () Bool)

(declare-fun e!61757 () Option!152)

(assert (=> b!94623 (= e!61757 (getValueByKey!146 (t!5469 (toList!766 lt!46571)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94622 () Bool)

(assert (=> b!94622 (= e!61756 e!61757)))

(declare-fun c!15805 () Bool)

(assert (=> b!94622 (= c!15805 (and ((_ is Cons!1572) (toList!766 lt!46571)) (not (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94624 () Bool)

(assert (=> b!94624 (= e!61757 None!150)))

(declare-fun d!24719 () Bool)

(declare-fun c!15804 () Bool)

(assert (=> d!24719 (= c!15804 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24719 (= (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000) e!61756)))

(assert (= (and d!24719 c!15804) b!94621))

(assert (= (and d!24719 (not c!15804)) b!94622))

(assert (= (and b!94622 c!15805) b!94623))

(assert (= (and b!94622 (not c!15805)) b!94624))

(declare-fun m!101941 () Bool)

(assert (=> b!94623 m!101941))

(assert (=> d!24661 d!24719))

(declare-fun b!94626 () Bool)

(declare-fun res!47900 () Bool)

(declare-fun e!61758 () Bool)

(assert (=> b!94626 (=> (not res!47900) (not e!61758))))

(assert (=> b!94626 (= res!47900 (bvsge (size!2239 (v!2754 (underlying!323 thiss!992))) (_size!465 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94628 () Bool)

(assert (=> b!94628 (= e!61758 (and (bvsge (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!465 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!94625 () Bool)

(declare-fun res!47899 () Bool)

(assert (=> b!94625 (=> (not res!47899) (not e!61758))))

(assert (=> b!94625 (= res!47899 (and (= (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001)) (= (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992))))) (bvsge (_size!465 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!465 (v!2754 (underlying!323 thiss!992))) (bvadd (mask!6509 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!94627 () Bool)

(declare-fun res!47902 () Bool)

(assert (=> b!94627 (=> (not res!47902) (not e!61758))))

(assert (=> b!94627 (= res!47902 (= (size!2239 (v!2754 (underlying!323 thiss!992))) (bvadd (_size!465 (v!2754 (underlying!323 thiss!992))) (bvsdiv (bvadd (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!24721 () Bool)

(declare-fun res!47901 () Bool)

(assert (=> d!24721 (=> (not res!47901) (not e!61758))))

(assert (=> d!24721 (= res!47901 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992)))))))

(assert (=> d!24721 (= (simpleValid!66 (v!2754 (underlying!323 thiss!992))) e!61758)))

(assert (= (and d!24721 res!47901) b!94625))

(assert (= (and b!94625 res!47899) b!94626))

(assert (= (and b!94626 res!47900) b!94627))

(assert (= (and b!94627 res!47902) b!94628))

(declare-fun m!101943 () Bool)

(assert (=> b!94626 m!101943))

(assert (=> b!94627 m!101943))

(assert (=> d!24721 m!100991))

(assert (=> d!24657 d!24721))

(assert (=> b!94423 d!24677))

(declare-fun d!24723 () Bool)

(declare-fun e!61759 () Bool)

(assert (=> d!24723 e!61759))

(declare-fun res!47903 () Bool)

(assert (=> d!24723 (=> res!47903 e!61759)))

(declare-fun lt!47018 () Bool)

(assert (=> d!24723 (= res!47903 (not lt!47018))))

(declare-fun lt!47016 () Bool)

(assert (=> d!24723 (= lt!47018 lt!47016)))

(declare-fun lt!47017 () Unit!2800)

(declare-fun e!61760 () Unit!2800)

(assert (=> d!24723 (= lt!47017 e!61760)))

(declare-fun c!15806 () Bool)

(assert (=> d!24723 (= c!15806 lt!47016)))

(assert (=> d!24723 (= lt!47016 (containsKey!150 (toList!766 lt!46917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24723 (= (contains!786 lt!46917 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47018)))

(declare-fun b!94629 () Bool)

(declare-fun lt!47019 () Unit!2800)

(assert (=> b!94629 (= e!61760 lt!47019)))

(assert (=> b!94629 (= lt!47019 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94629 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94630 () Bool)

(declare-fun Unit!2828 () Unit!2800)

(assert (=> b!94630 (= e!61760 Unit!2828)))

(declare-fun b!94631 () Bool)

(assert (=> b!94631 (= e!61759 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24723 c!15806) b!94629))

(assert (= (and d!24723 (not c!15806)) b!94630))

(assert (= (and d!24723 (not res!47903)) b!94631))

(declare-fun m!101945 () Bool)

(assert (=> d!24723 m!101945))

(declare-fun m!101947 () Bool)

(assert (=> b!94629 m!101947))

(declare-fun m!101949 () Bool)

(assert (=> b!94629 m!101949))

(assert (=> b!94629 m!101949))

(declare-fun m!101951 () Bool)

(assert (=> b!94629 m!101951))

(assert (=> b!94631 m!101949))

(assert (=> b!94631 m!101949))

(assert (=> b!94631 m!101951))

(assert (=> bm!9479 d!24723))

(declare-fun d!24725 () Bool)

(assert (=> d!24725 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47020 () Unit!2800)

(assert (=> d!24725 (= lt!47020 (choose!568 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61761 () Bool)

(assert (=> d!24725 e!61761))

(declare-fun res!47904 () Bool)

(assert (=> d!24725 (=> (not res!47904) (not e!61761))))

(assert (=> d!24725 (= res!47904 (isStrictlySorted!297 (toList!766 lt!46571)))))

(assert (=> d!24725 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000) lt!47020)))

(declare-fun b!94632 () Bool)

(assert (=> b!94632 (= e!61761 (containsKey!150 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!24725 res!47904) b!94632))

(assert (=> d!24725 m!101261))

(assert (=> d!24725 m!101261))

(assert (=> d!24725 m!101467))

(declare-fun m!101953 () Bool)

(assert (=> d!24725 m!101953))

(declare-fun m!101955 () Bool)

(assert (=> d!24725 m!101955))

(assert (=> b!94632 m!101463))

(assert (=> b!94367 d!24725))

(declare-fun d!24727 () Bool)

(assert (=> d!24727 (= (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!354 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3880 () Bool)

(assert (= bs!3880 d!24727))

(assert (=> bs!3880 m!101261))

(declare-fun m!101957 () Bool)

(assert (=> bs!3880 m!101957))

(assert (=> b!94367 d!24727))

(declare-fun b!94633 () Bool)

(declare-fun e!61762 () Option!152)

(assert (=> b!94633 (= e!61762 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46571)))))))

(declare-fun b!94635 () Bool)

(declare-fun e!61763 () Option!152)

(assert (=> b!94635 (= e!61763 (getValueByKey!146 (t!5469 (toList!766 lt!46571)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94634 () Bool)

(assert (=> b!94634 (= e!61762 e!61763)))

(declare-fun c!15808 () Bool)

(assert (=> b!94634 (= c!15808 (and ((_ is Cons!1572) (toList!766 lt!46571)) (not (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94636 () Bool)

(assert (=> b!94636 (= e!61763 None!150)))

(declare-fun d!24729 () Bool)

(declare-fun c!15807 () Bool)

(assert (=> d!24729 (= c!15807 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24729 (= (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000) e!61762)))

(assert (= (and d!24729 c!15807) b!94633))

(assert (= (and d!24729 (not c!15807)) b!94634))

(assert (= (and b!94634 c!15808) b!94635))

(assert (= (and b!94634 (not c!15808)) b!94636))

(declare-fun m!101959 () Bool)

(assert (=> b!94635 m!101959))

(assert (=> b!94367 d!24729))

(declare-fun b!94637 () Bool)

(declare-fun e!61764 () Option!152)

(assert (=> b!94637 (= e!61764 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46926)))))))

(declare-fun b!94639 () Bool)

(declare-fun e!61765 () Option!152)

(assert (=> b!94639 (= e!61765 (getValueByKey!146 (t!5469 (toList!766 lt!46926)) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94638 () Bool)

(assert (=> b!94638 (= e!61764 e!61765)))

(declare-fun c!15810 () Bool)

(assert (=> b!94638 (= c!15810 (and ((_ is Cons!1572) (toList!766 lt!46926)) (not (= (_1!1163 (h!2164 (toList!766 lt!46926))) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94640 () Bool)

(assert (=> b!94640 (= e!61765 None!150)))

(declare-fun c!15809 () Bool)

(declare-fun d!24731 () Bool)

(assert (=> d!24731 (= c!15809 (and ((_ is Cons!1572) (toList!766 lt!46926)) (= (_1!1163 (h!2164 (toList!766 lt!46926))) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24731 (= (getValueByKey!146 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61764)))

(assert (= (and d!24731 c!15809) b!94637))

(assert (= (and d!24731 (not c!15809)) b!94638))

(assert (= (and b!94638 c!15810) b!94639))

(assert (= (and b!94638 (not c!15810)) b!94640))

(declare-fun m!101961 () Bool)

(assert (=> b!94639 m!101961))

(assert (=> b!94487 d!24731))

(assert (=> d!24561 d!24563))

(assert (=> d!24561 d!24565))

(declare-fun d!24733 () Bool)

(assert (=> d!24733 (isDefined!100 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24733 true))

(declare-fun _$12!338 () Unit!2800)

(assert (=> d!24733 (= (choose!568 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) _$12!338)))

(declare-fun bs!3881 () Bool)

(assert (= bs!3881 d!24733))

(assert (=> bs!3881 m!100977))

(assert (=> bs!3881 m!101177))

(assert (=> bs!3881 m!101177))

(assert (=> bs!3881 m!101179))

(assert (=> d!24561 d!24733))

(declare-fun d!24735 () Bool)

(declare-fun res!47909 () Bool)

(declare-fun e!61770 () Bool)

(assert (=> d!24735 (=> res!47909 e!61770)))

(assert (=> d!24735 (= res!47909 (or ((_ is Nil!1573) (toList!766 lt!46460)) ((_ is Nil!1573) (t!5469 (toList!766 lt!46460)))))))

(assert (=> d!24735 (= (isStrictlySorted!297 (toList!766 lt!46460)) e!61770)))

(declare-fun b!94645 () Bool)

(declare-fun e!61771 () Bool)

(assert (=> b!94645 (= e!61770 e!61771)))

(declare-fun res!47910 () Bool)

(assert (=> b!94645 (=> (not res!47910) (not e!61771))))

(assert (=> b!94645 (= res!47910 (bvslt (_1!1163 (h!2164 (toList!766 lt!46460))) (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460))))))))

(declare-fun b!94646 () Bool)

(assert (=> b!94646 (= e!61771 (isStrictlySorted!297 (t!5469 (toList!766 lt!46460))))))

(assert (= (and d!24735 (not res!47909)) b!94645))

(assert (= (and b!94645 res!47910) b!94646))

(declare-fun m!101963 () Bool)

(assert (=> b!94646 m!101963))

(assert (=> d!24561 d!24735))

(assert (=> b!94296 d!24677))

(declare-fun b!94647 () Bool)

(declare-fun e!61772 () Option!152)

(assert (=> b!94647 (= e!61772 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46840)))))))

(declare-fun b!94649 () Bool)

(declare-fun e!61773 () Option!152)

(assert (=> b!94649 (= e!61773 (getValueByKey!146 (t!5469 (toList!766 lt!46840)) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94648 () Bool)

(assert (=> b!94648 (= e!61772 e!61773)))

(declare-fun c!15812 () Bool)

(assert (=> b!94648 (= c!15812 (and ((_ is Cons!1572) (toList!766 lt!46840)) (not (= (_1!1163 (h!2164 (toList!766 lt!46840))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94650 () Bool)

(assert (=> b!94650 (= e!61773 None!150)))

(declare-fun c!15811 () Bool)

(declare-fun d!24737 () Bool)

(assert (=> d!24737 (= c!15811 (and ((_ is Cons!1572) (toList!766 lt!46840)) (= (_1!1163 (h!2164 (toList!766 lt!46840))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24737 (= (getValueByKey!146 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!61772)))

(assert (= (and d!24737 c!15811) b!94647))

(assert (= (and d!24737 (not c!15811)) b!94648))

(assert (= (and b!94648 c!15812) b!94649))

(assert (= (and b!94648 (not c!15812)) b!94650))

(declare-fun m!101965 () Bool)

(assert (=> b!94649 m!101965))

(assert (=> b!94376 d!24737))

(assert (=> b!94290 d!24677))

(declare-fun d!24739 () Bool)

(declare-fun e!61774 () Bool)

(assert (=> d!24739 e!61774))

(declare-fun res!47911 () Bool)

(assert (=> d!24739 (=> res!47911 e!61774)))

(declare-fun lt!47023 () Bool)

(assert (=> d!24739 (= res!47911 (not lt!47023))))

(declare-fun lt!47021 () Bool)

(assert (=> d!24739 (= lt!47023 lt!47021)))

(declare-fun lt!47022 () Unit!2800)

(declare-fun e!61775 () Unit!2800)

(assert (=> d!24739 (= lt!47022 e!61775)))

(declare-fun c!15813 () Bool)

(assert (=> d!24739 (= c!15813 lt!47021)))

(assert (=> d!24739 (= lt!47021 (containsKey!150 (toList!766 lt!46977) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24739 (= (contains!786 lt!46977 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47023)))

(declare-fun b!94651 () Bool)

(declare-fun lt!47024 () Unit!2800)

(assert (=> b!94651 (= e!61775 lt!47024)))

(assert (=> b!94651 (= lt!47024 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46977) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94651 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94652 () Bool)

(declare-fun Unit!2829 () Unit!2800)

(assert (=> b!94652 (= e!61775 Unit!2829)))

(declare-fun b!94653 () Bool)

(assert (=> b!94653 (= e!61774 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24739 c!15813) b!94651))

(assert (= (and d!24739 (not c!15813)) b!94652))

(assert (= (and d!24739 (not res!47911)) b!94653))

(declare-fun m!101967 () Bool)

(assert (=> d!24739 m!101967))

(declare-fun m!101969 () Bool)

(assert (=> b!94651 m!101969))

(declare-fun m!101971 () Bool)

(assert (=> b!94651 m!101971))

(assert (=> b!94651 m!101971))

(declare-fun m!101973 () Bool)

(assert (=> b!94651 m!101973))

(assert (=> b!94653 m!101971))

(assert (=> b!94653 m!101971))

(assert (=> b!94653 m!101973))

(assert (=> bm!9492 d!24739))

(assert (=> b!94452 d!24557))

(declare-fun d!24741 () Bool)

(declare-fun e!61776 () Bool)

(assert (=> d!24741 e!61776))

(declare-fun res!47912 () Bool)

(assert (=> d!24741 (=> res!47912 e!61776)))

(declare-fun lt!47027 () Bool)

(assert (=> d!24741 (= res!47912 (not lt!47027))))

(declare-fun lt!47025 () Bool)

(assert (=> d!24741 (= lt!47027 lt!47025)))

(declare-fun lt!47026 () Unit!2800)

(declare-fun e!61777 () Unit!2800)

(assert (=> d!24741 (= lt!47026 e!61777)))

(declare-fun c!15814 () Bool)

(assert (=> d!24741 (= c!15814 lt!47025)))

(assert (=> d!24741 (= lt!47025 (containsKey!150 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24741 (= (contains!786 lt!46926 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47027)))

(declare-fun b!94654 () Bool)

(declare-fun lt!47028 () Unit!2800)

(assert (=> b!94654 (= e!61777 lt!47028)))

(assert (=> b!94654 (= lt!47028 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> b!94654 (isDefined!100 (getValueByKey!146 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94655 () Bool)

(declare-fun Unit!2830 () Unit!2800)

(assert (=> b!94655 (= e!61777 Unit!2830)))

(declare-fun b!94656 () Bool)

(assert (=> b!94656 (= e!61776 (isDefined!100 (getValueByKey!146 (toList!766 lt!46926) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24741 c!15814) b!94654))

(assert (= (and d!24741 (not c!15814)) b!94655))

(assert (= (and d!24741 (not res!47912)) b!94656))

(declare-fun m!101975 () Bool)

(assert (=> d!24741 m!101975))

(declare-fun m!101977 () Bool)

(assert (=> b!94654 m!101977))

(assert (=> b!94654 m!101649))

(assert (=> b!94654 m!101649))

(declare-fun m!101979 () Bool)

(assert (=> b!94654 m!101979))

(assert (=> b!94656 m!101649))

(assert (=> b!94656 m!101649))

(assert (=> b!94656 m!101979))

(assert (=> d!24637 d!24741))

(declare-fun b!94657 () Bool)

(declare-fun e!61778 () Option!152)

(assert (=> b!94657 (= e!61778 (Some!151 (_2!1163 (h!2164 lt!46928))))))

(declare-fun b!94659 () Bool)

(declare-fun e!61779 () Option!152)

(assert (=> b!94659 (= e!61779 (getValueByKey!146 (t!5469 lt!46928) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94658 () Bool)

(assert (=> b!94658 (= e!61778 e!61779)))

(declare-fun c!15816 () Bool)

(assert (=> b!94658 (= c!15816 (and ((_ is Cons!1572) lt!46928) (not (= (_1!1163 (h!2164 lt!46928)) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94660 () Bool)

(assert (=> b!94660 (= e!61779 None!150)))

(declare-fun c!15815 () Bool)

(declare-fun d!24743 () Bool)

(assert (=> d!24743 (= c!15815 (and ((_ is Cons!1572) lt!46928) (= (_1!1163 (h!2164 lt!46928)) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24743 (= (getValueByKey!146 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61778)))

(assert (= (and d!24743 c!15815) b!94657))

(assert (= (and d!24743 (not c!15815)) b!94658))

(assert (= (and b!94658 c!15816) b!94659))

(assert (= (and b!94658 (not c!15816)) b!94660))

(declare-fun m!101981 () Bool)

(assert (=> b!94659 m!101981))

(assert (=> d!24637 d!24743))

(declare-fun d!24745 () Bool)

(assert (=> d!24745 (= (getValueByKey!146 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!47031 () Unit!2800)

(declare-fun choose!576 (List!1576 (_ BitVec 64) V!3129) Unit!2800)

(assert (=> d!24745 (= lt!47031 (choose!576 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!61782 () Bool)

(assert (=> d!24745 e!61782))

(declare-fun res!47917 () Bool)

(assert (=> d!24745 (=> (not res!47917) (not e!61782))))

(assert (=> d!24745 (= res!47917 (isStrictlySorted!297 lt!46928))))

(assert (=> d!24745 (= (lemmaContainsTupThenGetReturnValue!65 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47031)))

(declare-fun b!94665 () Bool)

(declare-fun res!47918 () Bool)

(assert (=> b!94665 (=> (not res!47918) (not e!61782))))

(assert (=> b!94665 (= res!47918 (containsKey!150 lt!46928 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94666 () Bool)

(assert (=> b!94666 (= e!61782 (contains!790 lt!46928 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24745 res!47917) b!94665))

(assert (= (and b!94665 res!47918) b!94666))

(assert (=> d!24745 m!101643))

(declare-fun m!101983 () Bool)

(assert (=> d!24745 m!101983))

(declare-fun m!101985 () Bool)

(assert (=> d!24745 m!101985))

(declare-fun m!101987 () Bool)

(assert (=> b!94665 m!101987))

(declare-fun m!101989 () Bool)

(assert (=> b!94666 m!101989))

(assert (=> d!24637 d!24745))

(declare-fun bm!9509 () Bool)

(declare-fun call!9513 () List!1576)

(declare-fun call!9514 () List!1576)

(assert (=> bm!9509 (= call!9513 call!9514)))

(declare-fun bm!9510 () Bool)

(declare-fun call!9512 () List!1576)

(assert (=> bm!9510 (= call!9514 call!9512)))

(declare-fun b!94687 () Bool)

(declare-fun e!61795 () List!1576)

(assert (=> b!94687 (= e!61795 call!9512)))

(declare-fun bm!9511 () Bool)

(declare-fun e!61796 () List!1576)

(declare-fun c!15825 () Bool)

(declare-fun $colon$colon!75 (List!1576 tuple2!2304) List!1576)

(assert (=> bm!9511 (= call!9512 ($colon$colon!75 e!61796 (ite c!15825 (h!2164 (toList!766 lt!46561)) (tuple2!2305 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun c!15827 () Bool)

(assert (=> bm!9511 (= c!15827 c!15825)))

(declare-fun b!94688 () Bool)

(declare-fun e!61797 () List!1576)

(assert (=> b!94688 (= e!61795 e!61797)))

(declare-fun c!15826 () Bool)

(assert (=> b!94688 (= c!15826 (and ((_ is Cons!1572) (toList!766 lt!46561)) (= (_1!1163 (h!2164 (toList!766 lt!46561))) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94689 () Bool)

(assert (=> b!94689 (= e!61797 call!9514)))

(declare-fun lt!47034 () List!1576)

(declare-fun b!94690 () Bool)

(declare-fun e!61793 () Bool)

(assert (=> b!94690 (= e!61793 (contains!790 lt!47034 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94691 () Bool)

(declare-fun e!61794 () List!1576)

(assert (=> b!94691 (= e!61794 call!9513)))

(declare-fun b!94692 () Bool)

(assert (=> b!94692 (= e!61794 call!9513)))

(declare-fun b!94693 () Bool)

(declare-fun res!47924 () Bool)

(assert (=> b!94693 (=> (not res!47924) (not e!61793))))

(assert (=> b!94693 (= res!47924 (containsKey!150 lt!47034 (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94695 () Bool)

(declare-fun c!15828 () Bool)

(assert (=> b!94695 (= e!61796 (ite c!15826 (t!5469 (toList!766 lt!46561)) (ite c!15828 (Cons!1572 (h!2164 (toList!766 lt!46561)) (t!5469 (toList!766 lt!46561))) Nil!1573)))))

(declare-fun b!94696 () Bool)

(assert (=> b!94696 (= e!61796 (insertStrictlySorted!68 (t!5469 (toList!766 lt!46561)) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun d!24747 () Bool)

(assert (=> d!24747 e!61793))

(declare-fun res!47923 () Bool)

(assert (=> d!24747 (=> (not res!47923) (not e!61793))))

(assert (=> d!24747 (= res!47923 (isStrictlySorted!297 lt!47034))))

(assert (=> d!24747 (= lt!47034 e!61795)))

(assert (=> d!24747 (= c!15825 (and ((_ is Cons!1572) (toList!766 lt!46561)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46561))) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24747 (isStrictlySorted!297 (toList!766 lt!46561))))

(assert (=> d!24747 (= (insertStrictlySorted!68 (toList!766 lt!46561) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47034)))

(declare-fun b!94694 () Bool)

(assert (=> b!94694 (= c!15828 (and ((_ is Cons!1572) (toList!766 lt!46561)) (bvsgt (_1!1163 (h!2164 (toList!766 lt!46561))) (_1!1163 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!94694 (= e!61797 e!61794)))

(assert (= (and d!24747 c!15825) b!94687))

(assert (= (and d!24747 (not c!15825)) b!94688))

(assert (= (and b!94688 c!15826) b!94689))

(assert (= (and b!94688 (not c!15826)) b!94694))

(assert (= (and b!94694 c!15828) b!94691))

(assert (= (and b!94694 (not c!15828)) b!94692))

(assert (= (or b!94691 b!94692) bm!9509))

(assert (= (or b!94689 bm!9509) bm!9510))

(assert (= (or b!94687 bm!9510) bm!9511))

(assert (= (and bm!9511 c!15827) b!94696))

(assert (= (and bm!9511 (not c!15827)) b!94695))

(assert (= (and d!24747 res!47923) b!94693))

(assert (= (and b!94693 res!47924) b!94690))

(declare-fun m!101991 () Bool)

(assert (=> b!94696 m!101991))

(declare-fun m!101993 () Bool)

(assert (=> b!94693 m!101993))

(declare-fun m!101995 () Bool)

(assert (=> d!24747 m!101995))

(declare-fun m!101997 () Bool)

(assert (=> d!24747 m!101997))

(declare-fun m!101999 () Bool)

(assert (=> b!94690 m!101999))

(declare-fun m!102001 () Bool)

(assert (=> bm!9511 m!102001))

(assert (=> d!24637 d!24747))

(assert (=> b!94276 d!24677))

(assert (=> bm!9466 d!24553))

(declare-fun d!24749 () Bool)

(declare-fun e!61798 () Bool)

(assert (=> d!24749 e!61798))

(declare-fun res!47925 () Bool)

(assert (=> d!24749 (=> res!47925 e!61798)))

(declare-fun lt!47037 () Bool)

(assert (=> d!24749 (= res!47925 (not lt!47037))))

(declare-fun lt!47035 () Bool)

(assert (=> d!24749 (= lt!47037 lt!47035)))

(declare-fun lt!47036 () Unit!2800)

(declare-fun e!61799 () Unit!2800)

(assert (=> d!24749 (= lt!47036 e!61799)))

(declare-fun c!15829 () Bool)

(assert (=> d!24749 (= c!15829 lt!47035)))

(assert (=> d!24749 (= lt!47035 (containsKey!150 (toList!766 lt!46917) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!24749 (= (contains!786 lt!46917 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) lt!47037)))

(declare-fun b!94697 () Bool)

(declare-fun lt!47038 () Unit!2800)

(assert (=> b!94697 (= e!61799 lt!47038)))

(assert (=> b!94697 (= lt!47038 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46917) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94697 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94698 () Bool)

(declare-fun Unit!2831 () Unit!2800)

(assert (=> b!94698 (= e!61799 Unit!2831)))

(declare-fun b!94699 () Bool)

(assert (=> b!94699 (= e!61798 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!24749 c!15829) b!94697))

(assert (= (and d!24749 (not c!15829)) b!94698))

(assert (= (and d!24749 (not res!47925)) b!94699))

(assert (=> d!24749 m!101303))

(declare-fun m!102003 () Bool)

(assert (=> d!24749 m!102003))

(assert (=> b!94697 m!101303))

(declare-fun m!102005 () Bool)

(assert (=> b!94697 m!102005))

(assert (=> b!94697 m!101303))

(declare-fun m!102007 () Bool)

(assert (=> b!94697 m!102007))

(assert (=> b!94697 m!102007))

(declare-fun m!102009 () Bool)

(assert (=> b!94697 m!102009))

(assert (=> b!94699 m!101303))

(assert (=> b!94699 m!102007))

(assert (=> b!94699 m!102007))

(assert (=> b!94699 m!102009))

(assert (=> b!94478 d!24749))

(declare-fun b!94700 () Bool)

(declare-fun e!61800 () Option!152)

(assert (=> b!94700 (= e!61800 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46938)))))))

(declare-fun e!61801 () Option!152)

(declare-fun b!94702 () Bool)

(assert (=> b!94702 (= e!61801 (getValueByKey!146 (t!5469 (toList!766 lt!46938)) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94701 () Bool)

(assert (=> b!94701 (= e!61800 e!61801)))

(declare-fun c!15831 () Bool)

(assert (=> b!94701 (= c!15831 (and ((_ is Cons!1572) (toList!766 lt!46938)) (not (= (_1!1163 (h!2164 (toList!766 lt!46938))) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94703 () Bool)

(assert (=> b!94703 (= e!61801 None!150)))

(declare-fun d!24751 () Bool)

(declare-fun c!15830 () Bool)

(assert (=> d!24751 (= c!15830 (and ((_ is Cons!1572) (toList!766 lt!46938)) (= (_1!1163 (h!2164 (toList!766 lt!46938))) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24751 (= (getValueByKey!146 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61800)))

(assert (= (and d!24751 c!15830) b!94700))

(assert (= (and d!24751 (not c!15830)) b!94701))

(assert (= (and b!94701 c!15831) b!94702))

(assert (= (and b!94701 (not c!15831)) b!94703))

(declare-fun m!102011 () Bool)

(assert (=> b!94702 m!102011))

(assert (=> b!94496 d!24751))

(assert (=> d!24549 d!24553))

(declare-fun d!24753 () Bool)

(declare-fun e!61804 () Bool)

(assert (=> d!24753 e!61804))

(declare-fun res!47930 () Bool)

(assert (=> d!24753 (=> (not res!47930) (not e!61804))))

(declare-fun lt!47041 () SeekEntryResult!254)

(assert (=> d!24753 (= res!47930 ((_ is Found!254) lt!47041))))

(assert (=> d!24753 (= lt!47041 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (=> d!24753 true))

(declare-fun _$33!75 () Unit!2800)

(assert (=> d!24753 (= (choose!567 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) _$33!75)))

(declare-fun b!94708 () Bool)

(declare-fun res!47931 () Bool)

(assert (=> b!94708 (=> (not res!47931) (not e!61804))))

(assert (=> b!94708 (= res!47931 (inRange!0 (index!3158 lt!47041) (mask!6509 newMap!16)))))

(declare-fun b!94709 () Bool)

(assert (=> b!94709 (= e!61804 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!47041)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!24753 res!47930) b!94708))

(assert (= (and b!94708 res!47931) b!94709))

(assert (=> d!24753 m!100977))

(assert (=> d!24753 m!101233))

(declare-fun m!102013 () Bool)

(assert (=> b!94708 m!102013))

(declare-fun m!102015 () Bool)

(assert (=> b!94709 m!102015))

(assert (=> d!24549 d!24753))

(declare-fun d!24755 () Bool)

(assert (=> d!24755 (= (validMask!0 (mask!6509 newMap!16)) (and (or (= (mask!6509 newMap!16) #b00000000000000000000000000000111) (= (mask!6509 newMap!16) #b00000000000000000000000000001111) (= (mask!6509 newMap!16) #b00000000000000000000000000011111) (= (mask!6509 newMap!16) #b00000000000000000000000000111111) (= (mask!6509 newMap!16) #b00000000000000000000000001111111) (= (mask!6509 newMap!16) #b00000000000000000000000011111111) (= (mask!6509 newMap!16) #b00000000000000000000000111111111) (= (mask!6509 newMap!16) #b00000000000000000000001111111111) (= (mask!6509 newMap!16) #b00000000000000000000011111111111) (= (mask!6509 newMap!16) #b00000000000000000000111111111111) (= (mask!6509 newMap!16) #b00000000000000000001111111111111) (= (mask!6509 newMap!16) #b00000000000000000011111111111111) (= (mask!6509 newMap!16) #b00000000000000000111111111111111) (= (mask!6509 newMap!16) #b00000000000000001111111111111111) (= (mask!6509 newMap!16) #b00000000000000011111111111111111) (= (mask!6509 newMap!16) #b00000000000000111111111111111111) (= (mask!6509 newMap!16) #b00000000000001111111111111111111) (= (mask!6509 newMap!16) #b00000000000011111111111111111111) (= (mask!6509 newMap!16) #b00000000000111111111111111111111) (= (mask!6509 newMap!16) #b00000000001111111111111111111111) (= (mask!6509 newMap!16) #b00000000011111111111111111111111) (= (mask!6509 newMap!16) #b00000000111111111111111111111111) (= (mask!6509 newMap!16) #b00000001111111111111111111111111) (= (mask!6509 newMap!16) #b00000011111111111111111111111111) (= (mask!6509 newMap!16) #b00000111111111111111111111111111) (= (mask!6509 newMap!16) #b00001111111111111111111111111111) (= (mask!6509 newMap!16) #b00011111111111111111111111111111) (= (mask!6509 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6509 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!24549 d!24755))

(assert (=> b!94536 d!24677))

(declare-fun d!24757 () Bool)

(assert (=> d!24757 (= (apply!90 lt!46725 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (getValueByKey!146 (toList!766 lt!46725) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3882 () Bool)

(assert (= bs!3882 d!24757))

(assert (=> bs!3882 m!101303))

(declare-fun m!102017 () Bool)

(assert (=> bs!3882 m!102017))

(assert (=> bs!3882 m!102017))

(declare-fun m!102019 () Bool)

(assert (=> bs!3882 m!102019))

(assert (=> b!94269 d!24757))

(declare-fun d!24759 () Bool)

(declare-fun c!15832 () Bool)

(assert (=> d!24759 (= c!15832 ((_ is ValueCellFull!962) (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!61805 () V!3129)

(assert (=> d!24759 (= (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61805)))

(declare-fun b!94710 () Bool)

(assert (=> b!94710 (= e!61805 (get!1270 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94711 () Bool)

(assert (=> b!94711 (= e!61805 (get!1271 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24759 c!15832) b!94710))

(assert (= (and d!24759 (not c!15832)) b!94711))

(assert (=> b!94710 m!101343))

(assert (=> b!94710 m!101341))

(declare-fun m!102021 () Bool)

(assert (=> b!94710 m!102021))

(assert (=> b!94711 m!101343))

(assert (=> b!94711 m!101341))

(declare-fun m!102023 () Bool)

(assert (=> b!94711 m!102023))

(assert (=> b!94269 d!24759))

(declare-fun lt!47042 () Bool)

(declare-fun d!24761 () Bool)

(assert (=> d!24761 (= lt!47042 (select (content!97 (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!61806 () Bool)

(assert (=> d!24761 (= lt!47042 e!61806)))

(declare-fun res!47932 () Bool)

(assert (=> d!24761 (=> (not res!47932) (not e!61806))))

(assert (=> d!24761 (= res!47932 ((_ is Cons!1571) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)))))

(assert (=> d!24761 (= (contains!789 (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!47042)))

(declare-fun b!94712 () Bool)

(declare-fun e!61807 () Bool)

(assert (=> b!94712 (= e!61806 e!61807)))

(declare-fun res!47933 () Bool)

(assert (=> b!94712 (=> res!47933 e!61807)))

(assert (=> b!94712 (= res!47933 (= (h!2163 (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94713 () Bool)

(assert (=> b!94713 (= e!61807 (contains!789 (t!5468 (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!24761 res!47932) b!94712))

(assert (= (and b!94712 (not res!47933)) b!94713))

(declare-fun m!102025 () Bool)

(assert (=> d!24761 m!102025))

(assert (=> d!24761 m!101717))

(declare-fun m!102027 () Bool)

(assert (=> d!24761 m!102027))

(assert (=> b!94713 m!101717))

(declare-fun m!102029 () Bool)

(assert (=> b!94713 m!102029))

(assert (=> b!94507 d!24761))

(declare-fun b!94714 () Bool)

(declare-fun e!61811 () Bool)

(declare-fun e!61809 () Bool)

(assert (=> b!94714 (= e!61811 e!61809)))

(declare-fun c!15833 () Bool)

(assert (=> b!94714 (= c!15833 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9512 () Bool)

(declare-fun call!9515 () Bool)

(assert (=> bm!9512 (= call!9515 (arrayNoDuplicates!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15833 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!15727 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) Nil!1572) Nil!1572)) (ite c!15727 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) Nil!1572) Nil!1572))))))

(declare-fun b!94715 () Bool)

(assert (=> b!94715 (= e!61809 call!9515)))

(declare-fun d!24763 () Bool)

(declare-fun res!47935 () Bool)

(declare-fun e!61810 () Bool)

(assert (=> d!24763 (=> res!47935 e!61810)))

(assert (=> d!24763 (= res!47935 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24763 (= (arrayNoDuplicates!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15727 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) Nil!1572) Nil!1572)) e!61810)))

(declare-fun b!94716 () Bool)

(declare-fun e!61808 () Bool)

(assert (=> b!94716 (= e!61808 (contains!789 (ite c!15727 (Cons!1571 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) Nil!1572) Nil!1572) (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!94717 () Bool)

(assert (=> b!94717 (= e!61809 call!9515)))

(declare-fun b!94718 () Bool)

(assert (=> b!94718 (= e!61810 e!61811)))

(declare-fun res!47934 () Bool)

(assert (=> b!94718 (=> (not res!47934) (not e!61811))))

(assert (=> b!94718 (= res!47934 (not e!61808))))

(declare-fun res!47936 () Bool)

(assert (=> b!94718 (=> (not res!47936) (not e!61808))))

(assert (=> b!94718 (= res!47936 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!24763 (not res!47935)) b!94718))

(assert (= (and b!94718 res!47936) b!94716))

(assert (= (and b!94718 res!47934) b!94714))

(assert (= (and b!94714 c!15833) b!94717))

(assert (= (and b!94714 (not c!15833)) b!94715))

(assert (= (or b!94717 b!94715) bm!9512))

(assert (=> b!94714 m!101907))

(assert (=> b!94714 m!101907))

(assert (=> b!94714 m!101909))

(assert (=> bm!9512 m!101907))

(declare-fun m!102031 () Bool)

(assert (=> bm!9512 m!102031))

(assert (=> b!94716 m!101907))

(assert (=> b!94716 m!101907))

(declare-fun m!102033 () Bool)

(assert (=> b!94716 m!102033))

(assert (=> b!94718 m!101907))

(assert (=> b!94718 m!101907))

(assert (=> b!94718 m!101909))

(assert (=> bm!9454 d!24763))

(declare-fun d!24765 () Bool)

(declare-fun e!61812 () Bool)

(assert (=> d!24765 e!61812))

(declare-fun res!47937 () Bool)

(assert (=> d!24765 (=> (not res!47937) (not e!61812))))

(declare-fun lt!47044 () ListLongMap!1501)

(assert (=> d!24765 (= res!47937 (contains!786 lt!47044 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47046 () List!1576)

(assert (=> d!24765 (= lt!47044 (ListLongMap!1502 lt!47046))))

(declare-fun lt!47043 () Unit!2800)

(declare-fun lt!47045 () Unit!2800)

(assert (=> d!24765 (= lt!47043 lt!47045)))

(assert (=> d!24765 (= (getValueByKey!146 lt!47046 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24765 (= lt!47045 (lemmaContainsTupThenGetReturnValue!65 lt!47046 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24765 (= lt!47046 (insertStrictlySorted!68 (toList!766 call!9486) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!24765 (= (+!126 call!9486 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47044)))

(declare-fun b!94719 () Bool)

(declare-fun res!47938 () Bool)

(assert (=> b!94719 (=> (not res!47938) (not e!61812))))

(assert (=> b!94719 (= res!47938 (= (getValueByKey!146 (toList!766 lt!47044) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!94720 () Bool)

(assert (=> b!94720 (= e!61812 (contains!790 (toList!766 lt!47044) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!24765 res!47937) b!94719))

(assert (= (and b!94719 res!47938) b!94720))

(declare-fun m!102035 () Bool)

(assert (=> d!24765 m!102035))

(declare-fun m!102037 () Bool)

(assert (=> d!24765 m!102037))

(declare-fun m!102039 () Bool)

(assert (=> d!24765 m!102039))

(declare-fun m!102041 () Bool)

(assert (=> d!24765 m!102041))

(declare-fun m!102043 () Bool)

(assert (=> b!94719 m!102043))

(declare-fun m!102045 () Bool)

(assert (=> b!94720 m!102045))

(assert (=> b!94472 d!24765))

(declare-fun d!24767 () Bool)

(declare-fun e!61813 () Bool)

(assert (=> d!24767 e!61813))

(declare-fun res!47939 () Bool)

(assert (=> d!24767 (=> res!47939 e!61813)))

(declare-fun lt!47049 () Bool)

(assert (=> d!24767 (= res!47939 (not lt!47049))))

(declare-fun lt!47047 () Bool)

(assert (=> d!24767 (= lt!47049 lt!47047)))

(declare-fun lt!47048 () Unit!2800)

(declare-fun e!61814 () Unit!2800)

(assert (=> d!24767 (= lt!47048 e!61814)))

(declare-fun c!15834 () Bool)

(assert (=> d!24767 (= c!15834 lt!47047)))

(assert (=> d!24767 (= lt!47047 (containsKey!150 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24767 (= (contains!786 lt!46938 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47049)))

(declare-fun b!94721 () Bool)

(declare-fun lt!47050 () Unit!2800)

(assert (=> b!94721 (= e!61814 lt!47050)))

(assert (=> b!94721 (= lt!47050 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> b!94721 (isDefined!100 (getValueByKey!146 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94722 () Bool)

(declare-fun Unit!2832 () Unit!2800)

(assert (=> b!94722 (= e!61814 Unit!2832)))

(declare-fun b!94723 () Bool)

(assert (=> b!94723 (= e!61813 (isDefined!100 (getValueByKey!146 (toList!766 lt!46938) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24767 c!15834) b!94721))

(assert (= (and d!24767 (not c!15834)) b!94722))

(assert (= (and d!24767 (not res!47939)) b!94723))

(declare-fun m!102047 () Bool)

(assert (=> d!24767 m!102047))

(declare-fun m!102049 () Bool)

(assert (=> b!94721 m!102049))

(assert (=> b!94721 m!101681))

(assert (=> b!94721 m!101681))

(declare-fun m!102051 () Bool)

(assert (=> b!94721 m!102051))

(assert (=> b!94723 m!101681))

(assert (=> b!94723 m!101681))

(assert (=> b!94723 m!102051))

(assert (=> d!24645 d!24767))

(declare-fun b!94724 () Bool)

(declare-fun e!61815 () Option!152)

(assert (=> b!94724 (= e!61815 (Some!151 (_2!1163 (h!2164 lt!46940))))))

(declare-fun e!61816 () Option!152)

(declare-fun b!94726 () Bool)

(assert (=> b!94726 (= e!61816 (getValueByKey!146 (t!5469 lt!46940) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94725 () Bool)

(assert (=> b!94725 (= e!61815 e!61816)))

(declare-fun c!15836 () Bool)

(assert (=> b!94725 (= c!15836 (and ((_ is Cons!1572) lt!46940) (not (= (_1!1163 (h!2164 lt!46940)) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94727 () Bool)

(assert (=> b!94727 (= e!61816 None!150)))

(declare-fun c!15835 () Bool)

(declare-fun d!24769 () Bool)

(assert (=> d!24769 (= c!15835 (and ((_ is Cons!1572) lt!46940) (= (_1!1163 (h!2164 lt!46940)) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24769 (= (getValueByKey!146 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61815)))

(assert (= (and d!24769 c!15835) b!94724))

(assert (= (and d!24769 (not c!15835)) b!94725))

(assert (= (and b!94725 c!15836) b!94726))

(assert (= (and b!94725 (not c!15836)) b!94727))

(declare-fun m!102053 () Bool)

(assert (=> b!94726 m!102053))

(assert (=> d!24645 d!24769))

(declare-fun d!24771 () Bool)

(assert (=> d!24771 (= (getValueByKey!146 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!47051 () Unit!2800)

(assert (=> d!24771 (= lt!47051 (choose!576 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!61817 () Bool)

(assert (=> d!24771 e!61817))

(declare-fun res!47940 () Bool)

(assert (=> d!24771 (=> (not res!47940) (not e!61817))))

(assert (=> d!24771 (= res!47940 (isStrictlySorted!297 lt!46940))))

(assert (=> d!24771 (= (lemmaContainsTupThenGetReturnValue!65 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47051)))

(declare-fun b!94728 () Bool)

(declare-fun res!47941 () Bool)

(assert (=> b!94728 (=> (not res!47941) (not e!61817))))

(assert (=> b!94728 (= res!47941 (containsKey!150 lt!46940 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94729 () Bool)

(assert (=> b!94729 (= e!61817 (contains!790 lt!46940 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24771 res!47940) b!94728))

(assert (= (and b!94728 res!47941) b!94729))

(assert (=> d!24771 m!101675))

(declare-fun m!102055 () Bool)

(assert (=> d!24771 m!102055))

(declare-fun m!102057 () Bool)

(assert (=> d!24771 m!102057))

(declare-fun m!102059 () Bool)

(assert (=> b!94728 m!102059))

(declare-fun m!102061 () Bool)

(assert (=> b!94729 m!102061))

(assert (=> d!24645 d!24771))

(declare-fun bm!9513 () Bool)

(declare-fun call!9517 () List!1576)

(declare-fun call!9518 () List!1576)

(assert (=> bm!9513 (= call!9517 call!9518)))

(declare-fun bm!9514 () Bool)

(declare-fun call!9516 () List!1576)

(assert (=> bm!9514 (= call!9518 call!9516)))

(declare-fun b!94730 () Bool)

(declare-fun e!61820 () List!1576)

(assert (=> b!94730 (= e!61820 call!9516)))

(declare-fun c!15837 () Bool)

(declare-fun e!61821 () List!1576)

(declare-fun bm!9515 () Bool)

(assert (=> bm!9515 (= call!9516 ($colon$colon!75 e!61821 (ite c!15837 (h!2164 (toList!766 lt!46552)) (tuple2!2305 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun c!15839 () Bool)

(assert (=> bm!9515 (= c!15839 c!15837)))

(declare-fun b!94731 () Bool)

(declare-fun e!61822 () List!1576)

(assert (=> b!94731 (= e!61820 e!61822)))

(declare-fun c!15838 () Bool)

(assert (=> b!94731 (= c!15838 (and ((_ is Cons!1572) (toList!766 lt!46552)) (= (_1!1163 (h!2164 (toList!766 lt!46552))) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94732 () Bool)

(assert (=> b!94732 (= e!61822 call!9518)))

(declare-fun lt!47052 () List!1576)

(declare-fun e!61818 () Bool)

(declare-fun b!94733 () Bool)

(assert (=> b!94733 (= e!61818 (contains!790 lt!47052 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94734 () Bool)

(declare-fun e!61819 () List!1576)

(assert (=> b!94734 (= e!61819 call!9517)))

(declare-fun b!94735 () Bool)

(assert (=> b!94735 (= e!61819 call!9517)))

(declare-fun b!94736 () Bool)

(declare-fun res!47943 () Bool)

(assert (=> b!94736 (=> (not res!47943) (not e!61818))))

(assert (=> b!94736 (= res!47943 (containsKey!150 lt!47052 (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94738 () Bool)

(declare-fun c!15840 () Bool)

(assert (=> b!94738 (= e!61821 (ite c!15838 (t!5469 (toList!766 lt!46552)) (ite c!15840 (Cons!1572 (h!2164 (toList!766 lt!46552)) (t!5469 (toList!766 lt!46552))) Nil!1573)))))

(declare-fun b!94739 () Bool)

(assert (=> b!94739 (= e!61821 (insertStrictlySorted!68 (t!5469 (toList!766 lt!46552)) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun d!24773 () Bool)

(assert (=> d!24773 e!61818))

(declare-fun res!47942 () Bool)

(assert (=> d!24773 (=> (not res!47942) (not e!61818))))

(assert (=> d!24773 (= res!47942 (isStrictlySorted!297 lt!47052))))

(assert (=> d!24773 (= lt!47052 e!61820)))

(assert (=> d!24773 (= c!15837 (and ((_ is Cons!1572) (toList!766 lt!46552)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46552))) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24773 (isStrictlySorted!297 (toList!766 lt!46552))))

(assert (=> d!24773 (= (insertStrictlySorted!68 (toList!766 lt!46552) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47052)))

(declare-fun b!94737 () Bool)

(assert (=> b!94737 (= c!15840 (and ((_ is Cons!1572) (toList!766 lt!46552)) (bvsgt (_1!1163 (h!2164 (toList!766 lt!46552))) (_1!1163 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!94737 (= e!61822 e!61819)))

(assert (= (and d!24773 c!15837) b!94730))

(assert (= (and d!24773 (not c!15837)) b!94731))

(assert (= (and b!94731 c!15838) b!94732))

(assert (= (and b!94731 (not c!15838)) b!94737))

(assert (= (and b!94737 c!15840) b!94734))

(assert (= (and b!94737 (not c!15840)) b!94735))

(assert (= (or b!94734 b!94735) bm!9513))

(assert (= (or b!94732 bm!9513) bm!9514))

(assert (= (or b!94730 bm!9514) bm!9515))

(assert (= (and bm!9515 c!15839) b!94739))

(assert (= (and bm!9515 (not c!15839)) b!94738))

(assert (= (and d!24773 res!47942) b!94736))

(assert (= (and b!94736 res!47943) b!94733))

(declare-fun m!102063 () Bool)

(assert (=> b!94739 m!102063))

(declare-fun m!102065 () Bool)

(assert (=> b!94736 m!102065))

(declare-fun m!102067 () Bool)

(assert (=> d!24773 m!102067))

(declare-fun m!102069 () Bool)

(assert (=> d!24773 m!102069))

(declare-fun m!102071 () Bool)

(assert (=> b!94733 m!102071))

(declare-fun m!102073 () Bool)

(assert (=> bm!9515 m!102073))

(assert (=> d!24645 d!24773))

(declare-fun d!24775 () Bool)

(assert (=> d!24775 (= (isDefined!100 (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) (not (isEmpty!354 (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun bs!3883 () Bool)

(assert (= bs!3883 d!24775))

(assert (=> bs!3883 m!101369))

(declare-fun m!102075 () Bool)

(assert (=> bs!3883 m!102075))

(assert (=> b!94299 d!24775))

(declare-fun b!94740 () Bool)

(declare-fun e!61823 () Option!152)

(assert (=> b!94740 (= e!61823 (Some!151 (_2!1163 (h!2164 (toList!766 call!9429)))))))

(declare-fun b!94742 () Bool)

(declare-fun e!61824 () Option!152)

(assert (=> b!94742 (= e!61824 (getValueByKey!146 (t!5469 (toList!766 call!9429)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94741 () Bool)

(assert (=> b!94741 (= e!61823 e!61824)))

(declare-fun c!15842 () Bool)

(assert (=> b!94741 (= c!15842 (and ((_ is Cons!1572) (toList!766 call!9429)) (not (= (_1!1163 (h!2164 (toList!766 call!9429))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun b!94743 () Bool)

(assert (=> b!94743 (= e!61824 None!150)))

(declare-fun d!24777 () Bool)

(declare-fun c!15841 () Bool)

(assert (=> d!24777 (= c!15841 (and ((_ is Cons!1572) (toList!766 call!9429)) (= (_1!1163 (h!2164 (toList!766 call!9429))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!24777 (= (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!61823)))

(assert (= (and d!24777 c!15841) b!94740))

(assert (= (and d!24777 (not c!15841)) b!94741))

(assert (= (and b!94741 c!15842) b!94742))

(assert (= (and b!94741 (not c!15842)) b!94743))

(assert (=> b!94742 m!100977))

(declare-fun m!102077 () Bool)

(assert (=> b!94742 m!102077))

(assert (=> b!94299 d!24777))

(declare-fun d!24779 () Bool)

(assert (=> d!24779 (= (apply!90 lt!46977 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (getValueByKey!146 (toList!766 lt!46977) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3884 () Bool)

(assert (= bs!3884 d!24779))

(assert (=> bs!3884 m!101303))

(declare-fun m!102079 () Bool)

(assert (=> bs!3884 m!102079))

(assert (=> bs!3884 m!102079))

(declare-fun m!102081 () Bool)

(assert (=> bs!3884 m!102081))

(assert (=> b!94529 d!24779))

(declare-fun c!15843 () Bool)

(declare-fun d!24781 () Bool)

(assert (=> d!24781 (= c!15843 ((_ is ValueCellFull!962) (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000)))))

(declare-fun e!61825 () V!3129)

(assert (=> d!24781 (= (get!1267 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61825)))

(declare-fun b!94744 () Bool)

(assert (=> b!94744 (= e!61825 (get!1270 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94745 () Bool)

(assert (=> b!94745 (= e!61825 (get!1271 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24781 c!15843) b!94744))

(assert (= (and d!24781 (not c!15843)) b!94745))

(assert (=> b!94744 m!101781))

(assert (=> b!94744 m!101341))

(declare-fun m!102083 () Bool)

(assert (=> b!94744 m!102083))

(assert (=> b!94745 m!101781))

(assert (=> b!94745 m!101341))

(declare-fun m!102085 () Bool)

(assert (=> b!94745 m!102085))

(assert (=> b!94529 d!24781))

(declare-fun d!24783 () Bool)

(declare-fun e!61826 () Bool)

(assert (=> d!24783 e!61826))

(declare-fun res!47944 () Bool)

(assert (=> d!24783 (=> res!47944 e!61826)))

(declare-fun lt!47055 () Bool)

(assert (=> d!24783 (= res!47944 (not lt!47055))))

(declare-fun lt!47053 () Bool)

(assert (=> d!24783 (= lt!47055 lt!47053)))

(declare-fun lt!47054 () Unit!2800)

(declare-fun e!61827 () Unit!2800)

(assert (=> d!24783 (= lt!47054 e!61827)))

(declare-fun c!15844 () Bool)

(assert (=> d!24783 (= c!15844 lt!47053)))

(assert (=> d!24783 (= lt!47053 (containsKey!150 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24783 (= (contains!786 lt!46824 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!47055)))

(declare-fun b!94746 () Bool)

(declare-fun lt!47056 () Unit!2800)

(assert (=> b!94746 (= e!61827 lt!47056)))

(assert (=> b!94746 (= lt!47056 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!94746 (isDefined!100 (getValueByKey!146 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94747 () Bool)

(declare-fun Unit!2833 () Unit!2800)

(assert (=> b!94747 (= e!61827 Unit!2833)))

(declare-fun b!94748 () Bool)

(assert (=> b!94748 (= e!61826 (isDefined!100 (getValueByKey!146 (toList!766 lt!46824) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (= (and d!24783 c!15844) b!94746))

(assert (= (and d!24783 (not c!15844)) b!94747))

(assert (= (and d!24783 (not res!47944)) b!94748))

(declare-fun m!102087 () Bool)

(assert (=> d!24783 m!102087))

(declare-fun m!102089 () Bool)

(assert (=> b!94746 m!102089))

(assert (=> b!94746 m!101437))

(assert (=> b!94746 m!101437))

(declare-fun m!102091 () Bool)

(assert (=> b!94746 m!102091))

(assert (=> b!94748 m!101437))

(assert (=> b!94748 m!101437))

(assert (=> b!94748 m!102091))

(assert (=> d!24581 d!24783))

(declare-fun b!94749 () Bool)

(declare-fun e!61828 () Option!152)

(assert (=> b!94749 (= e!61828 (Some!151 (_2!1163 (h!2164 lt!46826))))))

(declare-fun b!94751 () Bool)

(declare-fun e!61829 () Option!152)

(assert (=> b!94751 (= e!61829 (getValueByKey!146 (t!5469 lt!46826) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94750 () Bool)

(assert (=> b!94750 (= e!61828 e!61829)))

(declare-fun c!15846 () Bool)

(assert (=> b!94750 (= c!15846 (and ((_ is Cons!1572) lt!46826) (not (= (_1!1163 (h!2164 lt!46826)) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun b!94752 () Bool)

(assert (=> b!94752 (= e!61829 None!150)))

(declare-fun d!24785 () Bool)

(declare-fun c!15845 () Bool)

(assert (=> d!24785 (= c!15845 (and ((_ is Cons!1572) lt!46826) (= (_1!1163 (h!2164 lt!46826)) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (=> d!24785 (= (getValueByKey!146 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) e!61828)))

(assert (= (and d!24785 c!15845) b!94749))

(assert (= (and d!24785 (not c!15845)) b!94750))

(assert (= (and b!94750 c!15846) b!94751))

(assert (= (and b!94750 (not c!15846)) b!94752))

(declare-fun m!102093 () Bool)

(assert (=> b!94751 m!102093))

(assert (=> d!24581 d!24785))

(declare-fun d!24787 () Bool)

(assert (=> d!24787 (= (getValueByKey!146 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (Some!151 (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun lt!47057 () Unit!2800)

(assert (=> d!24787 (= lt!47057 (choose!576 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun e!61830 () Bool)

(assert (=> d!24787 e!61830))

(declare-fun res!47945 () Bool)

(assert (=> d!24787 (=> (not res!47945) (not e!61830))))

(assert (=> d!24787 (= res!47945 (isStrictlySorted!297 lt!46826))))

(assert (=> d!24787 (= (lemmaContainsTupThenGetReturnValue!65 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!47057)))

(declare-fun b!94753 () Bool)

(declare-fun res!47946 () Bool)

(assert (=> b!94753 (=> (not res!47946) (not e!61830))))

(assert (=> b!94753 (= res!47946 (containsKey!150 lt!46826 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94754 () Bool)

(assert (=> b!94754 (= e!61830 (contains!790 lt!46826 (tuple2!2305 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (= (and d!24787 res!47945) b!94753))

(assert (= (and b!94753 res!47946) b!94754))

(assert (=> d!24787 m!101431))

(declare-fun m!102095 () Bool)

(assert (=> d!24787 m!102095))

(declare-fun m!102097 () Bool)

(assert (=> d!24787 m!102097))

(declare-fun m!102099 () Bool)

(assert (=> b!94753 m!102099))

(declare-fun m!102101 () Bool)

(assert (=> b!94754 m!102101))

(assert (=> d!24581 d!24787))

(declare-fun bm!9516 () Bool)

(declare-fun call!9520 () List!1576)

(declare-fun call!9521 () List!1576)

(assert (=> bm!9516 (= call!9520 call!9521)))

(declare-fun bm!9517 () Bool)

(declare-fun call!9519 () List!1576)

(assert (=> bm!9517 (= call!9521 call!9519)))

(declare-fun b!94755 () Bool)

(declare-fun e!61833 () List!1576)

(assert (=> b!94755 (= e!61833 call!9519)))

(declare-fun e!61834 () List!1576)

(declare-fun c!15847 () Bool)

(declare-fun bm!9518 () Bool)

(assert (=> bm!9518 (= call!9519 ($colon$colon!75 e!61834 (ite c!15847 (h!2164 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (tuple2!2305 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun c!15849 () Bool)

(assert (=> bm!9518 (= c!15849 c!15847)))

(declare-fun b!94756 () Bool)

(declare-fun e!61835 () List!1576)

(assert (=> b!94756 (= e!61833 e!61835)))

(declare-fun c!15848 () Bool)

(assert (=> b!94756 (= c!15848 (and ((_ is Cons!1572) (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (= (_1!1163 (h!2164 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94757 () Bool)

(assert (=> b!94757 (= e!61835 call!9521)))

(declare-fun b!94758 () Bool)

(declare-fun lt!47058 () List!1576)

(declare-fun e!61831 () Bool)

(assert (=> b!94758 (= e!61831 (contains!790 lt!47058 (tuple2!2305 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94759 () Bool)

(declare-fun e!61832 () List!1576)

(assert (=> b!94759 (= e!61832 call!9520)))

(declare-fun b!94760 () Bool)

(assert (=> b!94760 (= e!61832 call!9520)))

(declare-fun b!94761 () Bool)

(declare-fun res!47948 () Bool)

(assert (=> b!94761 (=> (not res!47948) (not e!61831))))

(assert (=> b!94761 (= res!47948 (containsKey!150 lt!47058 (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94763 () Bool)

(declare-fun c!15850 () Bool)

(assert (=> b!94763 (= e!61834 (ite c!15848 (t!5469 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (ite c!15850 (Cons!1572 (h!2164 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (t!5469 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))))) Nil!1573)))))

(declare-fun b!94764 () Bool)

(assert (=> b!94764 (= e!61834 (insertStrictlySorted!68 (t!5469 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun d!24789 () Bool)

(assert (=> d!24789 e!61831))

(declare-fun res!47947 () Bool)

(assert (=> d!24789 (=> (not res!47947) (not e!61831))))

(assert (=> d!24789 (= res!47947 (isStrictlySorted!297 lt!47058))))

(assert (=> d!24789 (= lt!47058 e!61833)))

(assert (=> d!24789 (= c!15847 (and ((_ is Cons!1572) (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (bvslt (_1!1163 (h!2164 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (=> d!24789 (isStrictlySorted!297 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))))))

(assert (=> d!24789 (= (insertStrictlySorted!68 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (_2!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!47058)))

(declare-fun b!94762 () Bool)

(assert (=> b!94762 (= c!15850 (and ((_ is Cons!1572) (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370)))) (bvsgt (_1!1163 (h!2164 (toList!766 (ite c!15648 call!9367 (ite c!15647 call!9366 call!9370))))) (_1!1163 (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(assert (=> b!94762 (= e!61835 e!61832)))

(assert (= (and d!24789 c!15847) b!94755))

(assert (= (and d!24789 (not c!15847)) b!94756))

(assert (= (and b!94756 c!15848) b!94757))

(assert (= (and b!94756 (not c!15848)) b!94762))

(assert (= (and b!94762 c!15850) b!94759))

(assert (= (and b!94762 (not c!15850)) b!94760))

(assert (= (or b!94759 b!94760) bm!9516))

(assert (= (or b!94757 bm!9516) bm!9517))

(assert (= (or b!94755 bm!9517) bm!9518))

(assert (= (and bm!9518 c!15849) b!94764))

(assert (= (and bm!9518 (not c!15849)) b!94763))

(assert (= (and d!24789 res!47947) b!94761))

(assert (= (and b!94761 res!47948) b!94758))

(declare-fun m!102103 () Bool)

(assert (=> b!94764 m!102103))

(declare-fun m!102105 () Bool)

(assert (=> b!94761 m!102105))

(declare-fun m!102107 () Bool)

(assert (=> d!24789 m!102107))

(declare-fun m!102109 () Bool)

(assert (=> d!24789 m!102109))

(declare-fun m!102111 () Bool)

(assert (=> b!94758 m!102111))

(declare-fun m!102113 () Bool)

(assert (=> bm!9518 m!102113))

(assert (=> d!24581 d!24789))

(declare-fun d!24791 () Bool)

(declare-fun e!61836 () Bool)

(assert (=> d!24791 e!61836))

(declare-fun res!47949 () Bool)

(assert (=> d!24791 (=> res!47949 e!61836)))

(declare-fun lt!47061 () Bool)

(assert (=> d!24791 (= res!47949 (not lt!47061))))

(declare-fun lt!47059 () Bool)

(assert (=> d!24791 (= lt!47061 lt!47059)))

(declare-fun lt!47060 () Unit!2800)

(declare-fun e!61837 () Unit!2800)

(assert (=> d!24791 (= lt!47060 e!61837)))

(declare-fun c!15851 () Bool)

(assert (=> d!24791 (= c!15851 lt!47059)))

(assert (=> d!24791 (= lt!47059 (containsKey!150 (toList!766 lt!46725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24791 (= (contains!786 lt!46725 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47061)))

(declare-fun b!94765 () Bool)

(declare-fun lt!47062 () Unit!2800)

(assert (=> b!94765 (= e!61837 lt!47062)))

(assert (=> b!94765 (= lt!47062 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94765 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94766 () Bool)

(declare-fun Unit!2834 () Unit!2800)

(assert (=> b!94766 (= e!61837 Unit!2834)))

(declare-fun b!94767 () Bool)

(assert (=> b!94767 (= e!61836 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24791 c!15851) b!94765))

(assert (= (and d!24791 (not c!15851)) b!94766))

(assert (= (and d!24791 (not res!47949)) b!94767))

(declare-fun m!102115 () Bool)

(assert (=> d!24791 m!102115))

(declare-fun m!102117 () Bool)

(assert (=> b!94765 m!102117))

(declare-fun m!102119 () Bool)

(assert (=> b!94765 m!102119))

(assert (=> b!94765 m!102119))

(declare-fun m!102121 () Bool)

(assert (=> b!94765 m!102121))

(assert (=> b!94767 m!102119))

(assert (=> b!94767 m!102119))

(assert (=> b!94767 m!102121))

(assert (=> bm!9449 d!24791))

(declare-fun b!94768 () Bool)

(declare-fun e!61843 () Bool)

(declare-fun e!61842 () Bool)

(assert (=> b!94768 (= e!61843 e!61842)))

(assert (=> b!94768 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun res!47952 () Bool)

(declare-fun lt!47068 () ListLongMap!1501)

(assert (=> b!94768 (= res!47952 (contains!786 lt!47068 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!94768 (=> (not res!47952) (not e!61842))))

(declare-fun b!94769 () Bool)

(declare-fun e!61838 () Bool)

(assert (=> b!94769 (= e!61838 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!94769 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!94770 () Bool)

(declare-fun res!47950 () Bool)

(declare-fun e!61840 () Bool)

(assert (=> b!94770 (=> (not res!47950) (not e!61840))))

(assert (=> b!94770 (= res!47950 (not (contains!786 lt!47068 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94771 () Bool)

(declare-fun lt!47067 () Unit!2800)

(declare-fun lt!47065 () Unit!2800)

(assert (=> b!94771 (= lt!47067 lt!47065)))

(declare-fun lt!47069 () V!3129)

(declare-fun lt!47063 () (_ BitVec 64))

(declare-fun lt!47064 () (_ BitVec 64))

(declare-fun lt!47066 () ListLongMap!1501)

(assert (=> b!94771 (not (contains!786 (+!126 lt!47066 (tuple2!2305 lt!47064 lt!47069)) lt!47063))))

(assert (=> b!94771 (= lt!47065 (addStillNotContains!39 lt!47066 lt!47064 lt!47069 lt!47063))))

(assert (=> b!94771 (= lt!47063 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94771 (= lt!47069 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94771 (= lt!47064 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!9522 () ListLongMap!1501)

(assert (=> b!94771 (= lt!47066 call!9522)))

(declare-fun e!61844 () ListLongMap!1501)

(assert (=> b!94771 (= e!61844 (+!126 call!9522 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94772 () Bool)

(declare-fun e!61839 () ListLongMap!1501)

(assert (=> b!94772 (= e!61839 (ListLongMap!1502 Nil!1573))))

(declare-fun d!24793 () Bool)

(assert (=> d!24793 e!61840))

(declare-fun res!47953 () Bool)

(assert (=> d!24793 (=> (not res!47953) (not e!61840))))

(assert (=> d!24793 (= res!47953 (not (contains!786 lt!47068 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24793 (= lt!47068 e!61839)))

(declare-fun c!15853 () Bool)

(assert (=> d!24793 (= c!15853 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24793 (validMask!0 (mask!6509 (v!2754 (underlying!323 thiss!992))))))

(assert (=> d!24793 (= (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))) lt!47068)))

(declare-fun b!94773 () Bool)

(assert (=> b!94773 (= e!61839 e!61844)))

(declare-fun c!15855 () Bool)

(assert (=> b!94773 (= c!15855 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94774 () Bool)

(assert (=> b!94774 (= e!61840 e!61843)))

(declare-fun c!15852 () Bool)

(assert (=> b!94774 (= c!15852 e!61838)))

(declare-fun res!47951 () Bool)

(assert (=> b!94774 (=> (not res!47951) (not e!61838))))

(assert (=> b!94774 (= res!47951 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!61841 () Bool)

(declare-fun b!94775 () Bool)

(assert (=> b!94775 (= e!61841 (= lt!47068 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94776 () Bool)

(assert (=> b!94776 (= e!61841 (isEmpty!355 lt!47068))))

(declare-fun b!94777 () Bool)

(assert (=> b!94777 (= e!61843 e!61841)))

(declare-fun c!15854 () Bool)

(assert (=> b!94777 (= c!15854 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun bm!9519 () Bool)

(assert (=> bm!9519 (= call!9522 (getCurrentListMapNoExtraKeys!90 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (_values!2418 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992))) (extraKeys!2264 (v!2754 (underlying!323 thiss!992))) (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) (minValue!2322 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992)))))))

(declare-fun b!94778 () Bool)

(assert (=> b!94778 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> b!94778 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2234 (_values!2418 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> b!94778 (= e!61842 (= (apply!90 lt!47068 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94779 () Bool)

(assert (=> b!94779 (= e!61844 call!9522)))

(assert (= (and d!24793 c!15853) b!94772))

(assert (= (and d!24793 (not c!15853)) b!94773))

(assert (= (and b!94773 c!15855) b!94771))

(assert (= (and b!94773 (not c!15855)) b!94779))

(assert (= (or b!94771 b!94779) bm!9519))

(assert (= (and d!24793 res!47953) b!94770))

(assert (= (and b!94770 res!47950) b!94774))

(assert (= (and b!94774 res!47951) b!94769))

(assert (= (and b!94774 c!15852) b!94768))

(assert (= (and b!94774 (not c!15852)) b!94777))

(assert (= (and b!94768 res!47952) b!94778))

(assert (= (and b!94777 c!15854) b!94775))

(assert (= (and b!94777 (not c!15854)) b!94776))

(declare-fun b_lambda!4165 () Bool)

(assert (=> (not b_lambda!4165) (not b!94771)))

(assert (=> b!94771 t!5465))

(declare-fun b_and!5769 () Bool)

(assert (= b_and!5765 (and (=> t!5465 result!3177) b_and!5769)))

(assert (=> b!94771 t!5467))

(declare-fun b_and!5771 () Bool)

(assert (= b_and!5767 (and (=> t!5467 result!3181) b_and!5771)))

(declare-fun b_lambda!4167 () Bool)

(assert (=> (not b_lambda!4167) (not b!94778)))

(assert (=> b!94778 t!5465))

(declare-fun b_and!5773 () Bool)

(assert (= b_and!5769 (and (=> t!5465 result!3177) b_and!5773)))

(assert (=> b!94778 t!5467))

(declare-fun b_and!5775 () Bool)

(assert (= b_and!5771 (and (=> t!5467 result!3181) b_and!5775)))

(declare-fun m!102123 () Bool)

(assert (=> b!94771 m!102123))

(declare-fun m!102125 () Bool)

(assert (=> b!94771 m!102125))

(assert (=> b!94771 m!100973))

(declare-fun m!102127 () Bool)

(assert (=> b!94771 m!102127))

(declare-fun m!102129 () Bool)

(assert (=> b!94771 m!102129))

(assert (=> b!94771 m!100973))

(declare-fun m!102131 () Bool)

(assert (=> b!94771 m!102131))

(assert (=> b!94771 m!102123))

(declare-fun m!102133 () Bool)

(assert (=> b!94771 m!102133))

(assert (=> b!94771 m!101511))

(assert (=> b!94771 m!102129))

(assert (=> b!94768 m!101511))

(assert (=> b!94768 m!101511))

(declare-fun m!102135 () Bool)

(assert (=> b!94768 m!102135))

(assert (=> b!94769 m!101511))

(assert (=> b!94769 m!101511))

(declare-fun m!102137 () Bool)

(assert (=> b!94769 m!102137))

(assert (=> b!94778 m!101511))

(declare-fun m!102139 () Bool)

(assert (=> b!94778 m!102139))

(assert (=> b!94778 m!100973))

(assert (=> b!94778 m!102129))

(assert (=> b!94778 m!100973))

(assert (=> b!94778 m!102131))

(assert (=> b!94778 m!101511))

(assert (=> b!94778 m!102129))

(declare-fun m!102141 () Bool)

(assert (=> b!94775 m!102141))

(assert (=> bm!9519 m!102141))

(declare-fun m!102143 () Bool)

(assert (=> b!94770 m!102143))

(declare-fun m!102145 () Bool)

(assert (=> d!24793 m!102145))

(assert (=> d!24793 m!100991))

(assert (=> b!94773 m!101511))

(assert (=> b!94773 m!101511))

(assert (=> b!94773 m!102137))

(declare-fun m!102147 () Bool)

(assert (=> b!94776 m!102147))

(assert (=> bm!9478 d!24793))

(assert (=> d!24625 d!24755))

(declare-fun d!24795 () Bool)

(declare-fun lt!47070 () Bool)

(assert (=> d!24795 (= lt!47070 (select (content!98 (toList!766 lt!46926)) (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!61845 () Bool)

(assert (=> d!24795 (= lt!47070 e!61845)))

(declare-fun res!47955 () Bool)

(assert (=> d!24795 (=> (not res!47955) (not e!61845))))

(assert (=> d!24795 (= res!47955 ((_ is Cons!1572) (toList!766 lt!46926)))))

(assert (=> d!24795 (= (contains!790 (toList!766 lt!46926) (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!47070)))

(declare-fun b!94780 () Bool)

(declare-fun e!61846 () Bool)

(assert (=> b!94780 (= e!61845 e!61846)))

(declare-fun res!47954 () Bool)

(assert (=> b!94780 (=> res!47954 e!61846)))

(assert (=> b!94780 (= res!47954 (= (h!2164 (toList!766 lt!46926)) (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94781 () Bool)

(assert (=> b!94781 (= e!61846 (contains!790 (t!5469 (toList!766 lt!46926)) (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24795 res!47955) b!94780))

(assert (= (and b!94780 (not res!47954)) b!94781))

(declare-fun m!102149 () Bool)

(assert (=> d!24795 m!102149))

(declare-fun m!102151 () Bool)

(assert (=> d!24795 m!102151))

(declare-fun m!102153 () Bool)

(assert (=> b!94781 m!102153))

(assert (=> b!94488 d!24795))

(assert (=> b!94550 d!24699))

(declare-fun d!24797 () Bool)

(assert (=> d!24797 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))

(assert (=> d!24797 true))

(declare-fun _$16!111 () Unit!2800)

(assert (=> d!24797 (= (choose!574 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (defaultEntry!2435 newMap!16)) _$16!111)))

(declare-fun bs!3885 () Bool)

(assert (= bs!3885 d!24797))

(assert (=> bs!3885 m!101729))

(assert (=> bs!3885 m!101201))

(assert (=> bs!3885 m!101729))

(assert (=> bs!3885 m!101201))

(assert (=> bs!3885 m!101731))

(assert (=> d!24663 d!24797))

(assert (=> d!24663 d!24755))

(declare-fun d!24799 () Bool)

(assert (=> d!24799 (= (inRange!0 (index!3158 lt!46678) (mask!6509 newMap!16)) (and (bvsge (index!3158 lt!46678) #b00000000000000000000000000000000) (bvslt (index!3158 lt!46678) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!94218 d!24799))

(declare-fun b!94782 () Bool)

(declare-fun e!61849 () Bool)

(declare-fun e!61847 () Bool)

(assert (=> b!94782 (= e!61849 e!61847)))

(declare-fun c!15856 () Bool)

(assert (=> b!94782 (= c!15856 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun b!94783 () Bool)

(declare-fun e!61848 () Bool)

(assert (=> b!94783 (= e!61847 e!61848)))

(declare-fun lt!47071 () (_ BitVec 64))

(assert (=> b!94783 (= lt!47071 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000))))

(declare-fun lt!47072 () Unit!2800)

(assert (=> b!94783 (= lt!47072 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4116 (_2!1162 lt!46671)) lt!47071 #b00000000000000000000000000000000))))

(assert (=> b!94783 (arrayContainsKey!0 (_keys!4116 (_2!1162 lt!46671)) lt!47071 #b00000000000000000000000000000000)))

(declare-fun lt!47073 () Unit!2800)

(assert (=> b!94783 (= lt!47073 lt!47072)))

(declare-fun res!47956 () Bool)

(assert (=> b!94783 (= res!47956 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000) (_keys!4116 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671))) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!94783 (=> (not res!47956) (not e!61848))))

(declare-fun b!94784 () Bool)

(declare-fun call!9523 () Bool)

(assert (=> b!94784 (= e!61848 call!9523)))

(declare-fun b!94785 () Bool)

(assert (=> b!94785 (= e!61847 call!9523)))

(declare-fun d!24801 () Bool)

(declare-fun res!47957 () Bool)

(assert (=> d!24801 (=> res!47957 e!61849)))

(assert (=> d!24801 (= res!47957 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(assert (=> d!24801 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671))) e!61849)))

(declare-fun bm!9520 () Bool)

(assert (=> bm!9520 (= call!9523 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4116 (_2!1162 lt!46671)) (mask!6509 (_2!1162 lt!46671))))))

(assert (= (and d!24801 (not res!47957)) b!94782))

(assert (= (and b!94782 c!15856) b!94783))

(assert (= (and b!94782 (not c!15856)) b!94785))

(assert (= (and b!94783 res!47956) b!94784))

(assert (= (or b!94784 b!94785) bm!9520))

(assert (=> b!94782 m!101819))

(assert (=> b!94782 m!101819))

(assert (=> b!94782 m!101821))

(assert (=> b!94783 m!101819))

(declare-fun m!102155 () Bool)

(assert (=> b!94783 m!102155))

(declare-fun m!102157 () Bool)

(assert (=> b!94783 m!102157))

(assert (=> b!94783 m!101819))

(declare-fun m!102159 () Bool)

(assert (=> b!94783 m!102159))

(declare-fun m!102161 () Bool)

(assert (=> bm!9520 m!102161))

(assert (=> b!94555 d!24801))

(declare-fun d!24803 () Bool)

(assert (=> d!24803 (= (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!354 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3886 () Bool)

(assert (= bs!3886 d!24803))

(assert (=> bs!3886 m!101453))

(declare-fun m!102163 () Bool)

(assert (=> bs!3886 m!102163))

(assert (=> b!94358 d!24803))

(assert (=> b!94358 d!24719))

(declare-fun b!94786 () Bool)

(declare-fun e!61850 () (_ BitVec 32))

(declare-fun call!9524 () (_ BitVec 32))

(assert (=> b!94786 (= e!61850 call!9524)))

(declare-fun b!94787 () Bool)

(assert (=> b!94787 (= e!61850 (bvadd #b00000000000000000000000000000001 call!9524))))

(declare-fun b!94788 () Bool)

(declare-fun e!61851 () (_ BitVec 32))

(assert (=> b!94788 (= e!61851 e!61850)))

(declare-fun c!15857 () Bool)

(assert (=> b!94788 (= c!15857 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9521 () Bool)

(assert (=> bm!9521 (= call!9524 (arrayCountValidKeys!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun d!24805 () Bool)

(declare-fun lt!47074 () (_ BitVec 32))

(assert (=> d!24805 (and (bvsge lt!47074 #b00000000000000000000000000000000) (bvsle lt!47074 (bvsub (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!24805 (= lt!47074 e!61851)))

(declare-fun c!15858 () Bool)

(assert (=> d!24805 (= c!15858 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24805 (and (bvsle #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24805 (= (arrayCountValidKeys!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))) lt!47074)))

(declare-fun b!94789 () Bool)

(assert (=> b!94789 (= e!61851 #b00000000000000000000000000000000)))

(assert (= (and d!24805 c!15858) b!94789))

(assert (= (and d!24805 (not c!15858)) b!94788))

(assert (= (and b!94788 c!15857) b!94787))

(assert (= (and b!94788 (not c!15857)) b!94786))

(assert (= (or b!94787 b!94786) bm!9521))

(declare-fun m!102165 () Bool)

(assert (=> b!94788 m!102165))

(assert (=> b!94788 m!102165))

(declare-fun m!102167 () Bool)

(assert (=> b!94788 m!102167))

(declare-fun m!102169 () Bool)

(assert (=> bm!9521 m!102169))

(assert (=> b!94502 d!24805))

(declare-fun d!24807 () Bool)

(assert (=> d!24807 (= (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!354 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3887 () Bool)

(assert (= bs!3887 d!24807))

(assert (=> bs!3887 m!101445))

(declare-fun m!102171 () Bool)

(assert (=> bs!3887 m!102171))

(assert (=> b!94355 d!24807))

(declare-fun b!94790 () Bool)

(declare-fun e!61852 () Option!152)

(assert (=> b!94790 (= e!61852 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46571)))))))

(declare-fun b!94792 () Bool)

(declare-fun e!61853 () Option!152)

(assert (=> b!94792 (= e!61853 (getValueByKey!146 (t!5469 (toList!766 lt!46571)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94791 () Bool)

(assert (=> b!94791 (= e!61852 e!61853)))

(declare-fun c!15860 () Bool)

(assert (=> b!94791 (= c!15860 (and ((_ is Cons!1572) (toList!766 lt!46571)) (not (= (_1!1163 (h!2164 (toList!766 lt!46571))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!94793 () Bool)

(assert (=> b!94793 (= e!61853 None!150)))

(declare-fun c!15859 () Bool)

(declare-fun d!24809 () Bool)

(assert (=> d!24809 (= c!15859 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24809 (= (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61852)))

(assert (= (and d!24809 c!15859) b!94790))

(assert (= (and d!24809 (not c!15859)) b!94791))

(assert (= (and b!94791 c!15860) b!94792))

(assert (= (and b!94791 (not c!15860)) b!94793))

(assert (=> b!94792 m!101105))

(declare-fun m!102173 () Bool)

(assert (=> b!94792 m!102173))

(assert (=> b!94355 d!24809))

(declare-fun d!24811 () Bool)

(assert (=> d!24811 (= (inRange!0 (ite c!15739 (index!3158 lt!46798) (ite c!15737 (index!3157 lt!46804) (index!3160 lt!46804))) (mask!6509 newMap!16)) (and (bvsge (ite c!15739 (index!3158 lt!46798) (ite c!15737 (index!3157 lt!46804) (index!3160 lt!46804))) #b00000000000000000000000000000000) (bvslt (ite c!15739 (index!3158 lt!46798) (ite c!15737 (index!3157 lt!46804) (index!3160 lt!46804))) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9464 d!24811))

(assert (=> d!24617 d!24523))

(declare-fun d!24813 () Bool)

(declare-fun e!61854 () Bool)

(assert (=> d!24813 e!61854))

(declare-fun res!47958 () Bool)

(assert (=> d!24813 (=> res!47958 e!61854)))

(declare-fun lt!47077 () Bool)

(assert (=> d!24813 (= res!47958 (not lt!47077))))

(declare-fun lt!47075 () Bool)

(assert (=> d!24813 (= lt!47077 lt!47075)))

(declare-fun lt!47076 () Unit!2800)

(declare-fun e!61855 () Unit!2800)

(assert (=> d!24813 (= lt!47076 e!61855)))

(declare-fun c!15861 () Bool)

(assert (=> d!24813 (= c!15861 lt!47075)))

(assert (=> d!24813 (= lt!47075 (containsKey!150 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24813 (= (contains!786 lt!46840 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47077)))

(declare-fun b!94794 () Bool)

(declare-fun lt!47078 () Unit!2800)

(assert (=> b!94794 (= e!61855 lt!47078)))

(assert (=> b!94794 (= lt!47078 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!94794 (isDefined!100 (getValueByKey!146 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94795 () Bool)

(declare-fun Unit!2835 () Unit!2800)

(assert (=> b!94795 (= e!61855 Unit!2835)))

(declare-fun b!94796 () Bool)

(assert (=> b!94796 (= e!61854 (isDefined!100 (getValueByKey!146 (toList!766 lt!46840) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!24813 c!15861) b!94794))

(assert (= (and d!24813 (not c!15861)) b!94795))

(assert (= (and d!24813 (not res!47958)) b!94796))

(declare-fun m!102175 () Bool)

(assert (=> d!24813 m!102175))

(declare-fun m!102177 () Bool)

(assert (=> b!94794 m!102177))

(assert (=> b!94794 m!101479))

(assert (=> b!94794 m!101479))

(declare-fun m!102179 () Bool)

(assert (=> b!94794 m!102179))

(assert (=> b!94796 m!101479))

(assert (=> b!94796 m!101479))

(assert (=> b!94796 m!102179))

(assert (=> d!24599 d!24813))

(declare-fun b!94797 () Bool)

(declare-fun e!61856 () Option!152)

(assert (=> b!94797 (= e!61856 (Some!151 (_2!1163 (h!2164 lt!46842))))))

(declare-fun e!61857 () Option!152)

(declare-fun b!94799 () Bool)

(assert (=> b!94799 (= e!61857 (getValueByKey!146 (t!5469 lt!46842) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94798 () Bool)

(assert (=> b!94798 (= e!61856 e!61857)))

(declare-fun c!15863 () Bool)

(assert (=> b!94798 (= c!15863 (and ((_ is Cons!1572) lt!46842) (not (= (_1!1163 (h!2164 lt!46842)) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94800 () Bool)

(assert (=> b!94800 (= e!61857 None!150)))

(declare-fun d!24815 () Bool)

(declare-fun c!15862 () Bool)

(assert (=> d!24815 (= c!15862 (and ((_ is Cons!1572) lt!46842) (= (_1!1163 (h!2164 lt!46842)) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24815 (= (getValueByKey!146 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!61856)))

(assert (= (and d!24815 c!15862) b!94797))

(assert (= (and d!24815 (not c!15862)) b!94798))

(assert (= (and b!94798 c!15863) b!94799))

(assert (= (and b!94798 (not c!15863)) b!94800))

(declare-fun m!102181 () Bool)

(assert (=> b!94799 m!102181))

(assert (=> d!24599 d!24815))

(declare-fun d!24817 () Bool)

(assert (=> d!24817 (= (getValueByKey!146 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47079 () Unit!2800)

(assert (=> d!24817 (= lt!47079 (choose!576 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!61858 () Bool)

(assert (=> d!24817 e!61858))

(declare-fun res!47959 () Bool)

(assert (=> d!24817 (=> (not res!47959) (not e!61858))))

(assert (=> d!24817 (= res!47959 (isStrictlySorted!297 lt!46842))))

(assert (=> d!24817 (= (lemmaContainsTupThenGetReturnValue!65 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47079)))

(declare-fun b!94801 () Bool)

(declare-fun res!47960 () Bool)

(assert (=> b!94801 (=> (not res!47960) (not e!61858))))

(assert (=> b!94801 (= res!47960 (containsKey!150 lt!46842 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94802 () Bool)

(assert (=> b!94802 (= e!61858 (contains!790 lt!46842 (tuple2!2305 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!24817 res!47959) b!94801))

(assert (= (and b!94801 res!47960) b!94802))

(assert (=> d!24817 m!101473))

(declare-fun m!102183 () Bool)

(assert (=> d!24817 m!102183))

(declare-fun m!102185 () Bool)

(assert (=> d!24817 m!102185))

(declare-fun m!102187 () Bool)

(assert (=> b!94801 m!102187))

(declare-fun m!102189 () Bool)

(assert (=> b!94802 m!102189))

(assert (=> d!24599 d!24817))

(declare-fun bm!9522 () Bool)

(declare-fun call!9526 () List!1576)

(declare-fun call!9527 () List!1576)

(assert (=> bm!9522 (= call!9526 call!9527)))

(declare-fun bm!9523 () Bool)

(declare-fun call!9525 () List!1576)

(assert (=> bm!9523 (= call!9527 call!9525)))

(declare-fun b!94803 () Bool)

(declare-fun e!61861 () List!1576)

(assert (=> b!94803 (= e!61861 call!9525)))

(declare-fun bm!9524 () Bool)

(declare-fun e!61862 () List!1576)

(declare-fun c!15864 () Bool)

(assert (=> bm!9524 (= call!9525 ($colon$colon!75 e!61862 (ite c!15864 (h!2164 (toList!766 call!9436)) (tuple2!2305 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!15866 () Bool)

(assert (=> bm!9524 (= c!15866 c!15864)))

(declare-fun b!94804 () Bool)

(declare-fun e!61863 () List!1576)

(assert (=> b!94804 (= e!61861 e!61863)))

(declare-fun c!15865 () Bool)

(assert (=> b!94804 (= c!15865 (and ((_ is Cons!1572) (toList!766 call!9436)) (= (_1!1163 (h!2164 (toList!766 call!9436))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94805 () Bool)

(assert (=> b!94805 (= e!61863 call!9527)))

(declare-fun b!94806 () Bool)

(declare-fun lt!47080 () List!1576)

(declare-fun e!61859 () Bool)

(assert (=> b!94806 (= e!61859 (contains!790 lt!47080 (tuple2!2305 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94807 () Bool)

(declare-fun e!61860 () List!1576)

(assert (=> b!94807 (= e!61860 call!9526)))

(declare-fun b!94808 () Bool)

(assert (=> b!94808 (= e!61860 call!9526)))

(declare-fun b!94809 () Bool)

(declare-fun res!47962 () Bool)

(assert (=> b!94809 (=> (not res!47962) (not e!61859))))

(assert (=> b!94809 (= res!47962 (containsKey!150 lt!47080 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!15867 () Bool)

(declare-fun b!94811 () Bool)

(assert (=> b!94811 (= e!61862 (ite c!15865 (t!5469 (toList!766 call!9436)) (ite c!15867 (Cons!1572 (h!2164 (toList!766 call!9436)) (t!5469 (toList!766 call!9436))) Nil!1573)))))

(declare-fun b!94812 () Bool)

(assert (=> b!94812 (= e!61862 (insertStrictlySorted!68 (t!5469 (toList!766 call!9436)) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!24819 () Bool)

(assert (=> d!24819 e!61859))

(declare-fun res!47961 () Bool)

(assert (=> d!24819 (=> (not res!47961) (not e!61859))))

(assert (=> d!24819 (= res!47961 (isStrictlySorted!297 lt!47080))))

(assert (=> d!24819 (= lt!47080 e!61861)))

(assert (=> d!24819 (= c!15864 (and ((_ is Cons!1572) (toList!766 call!9436)) (bvslt (_1!1163 (h!2164 (toList!766 call!9436))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24819 (isStrictlySorted!297 (toList!766 call!9436))))

(assert (=> d!24819 (= (insertStrictlySorted!68 (toList!766 call!9436) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47080)))

(declare-fun b!94810 () Bool)

(assert (=> b!94810 (= c!15867 (and ((_ is Cons!1572) (toList!766 call!9436)) (bvsgt (_1!1163 (h!2164 (toList!766 call!9436))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!94810 (= e!61863 e!61860)))

(assert (= (and d!24819 c!15864) b!94803))

(assert (= (and d!24819 (not c!15864)) b!94804))

(assert (= (and b!94804 c!15865) b!94805))

(assert (= (and b!94804 (not c!15865)) b!94810))

(assert (= (and b!94810 c!15867) b!94807))

(assert (= (and b!94810 (not c!15867)) b!94808))

(assert (= (or b!94807 b!94808) bm!9522))

(assert (= (or b!94805 bm!9522) bm!9523))

(assert (= (or b!94803 bm!9523) bm!9524))

(assert (= (and bm!9524 c!15866) b!94812))

(assert (= (and bm!9524 (not c!15866)) b!94811))

(assert (= (and d!24819 res!47961) b!94809))

(assert (= (and b!94809 res!47962) b!94806))

(declare-fun m!102191 () Bool)

(assert (=> b!94812 m!102191))

(declare-fun m!102193 () Bool)

(assert (=> b!94809 m!102193))

(declare-fun m!102195 () Bool)

(assert (=> d!24819 m!102195))

(declare-fun m!102197 () Bool)

(assert (=> d!24819 m!102197))

(declare-fun m!102199 () Bool)

(assert (=> b!94806 m!102199))

(declare-fun m!102201 () Bool)

(assert (=> bm!9524 m!102201))

(assert (=> d!24599 d!24819))

(declare-fun d!24821 () Bool)

(assert (=> d!24821 (= (get!1270 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2753 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94365 d!24821))

(declare-fun b!94813 () Bool)

(declare-fun e!61864 () Option!152)

(assert (=> b!94813 (= e!61864 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46933)))))))

(declare-fun e!61865 () Option!152)

(declare-fun b!94815 () Bool)

(assert (=> b!94815 (= e!61865 (getValueByKey!146 (t!5469 (toList!766 lt!46933)) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94814 () Bool)

(assert (=> b!94814 (= e!61864 e!61865)))

(declare-fun c!15869 () Bool)

(assert (=> b!94814 (= c!15869 (and ((_ is Cons!1572) (toList!766 lt!46933)) (not (= (_1!1163 (h!2164 (toList!766 lt!46933))) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94816 () Bool)

(assert (=> b!94816 (= e!61865 None!150)))

(declare-fun c!15868 () Bool)

(declare-fun d!24823 () Bool)

(assert (=> d!24823 (= c!15868 (and ((_ is Cons!1572) (toList!766 lt!46933)) (= (_1!1163 (h!2164 (toList!766 lt!46933))) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24823 (= (getValueByKey!146 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61864)))

(assert (= (and d!24823 c!15868) b!94813))

(assert (= (and d!24823 (not c!15868)) b!94814))

(assert (= (and b!94814 c!15869) b!94815))

(assert (= (and b!94814 (not c!15869)) b!94816))

(declare-fun m!102203 () Bool)

(assert (=> b!94815 m!102203))

(assert (=> b!94493 d!24823))

(declare-fun d!24825 () Bool)

(declare-fun res!47963 () Bool)

(declare-fun e!61866 () Bool)

(assert (=> d!24825 (=> res!47963 e!61866)))

(assert (=> d!24825 (= res!47963 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46563)))))

(assert (=> d!24825 (= (containsKey!150 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563) e!61866)))

(declare-fun b!94817 () Bool)

(declare-fun e!61867 () Bool)

(assert (=> b!94817 (= e!61866 e!61867)))

(declare-fun res!47964 () Bool)

(assert (=> b!94817 (=> (not res!47964) (not e!61867))))

(assert (=> b!94817 (= res!47964 (and (or (not ((_ is Cons!1572) (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) (bvsle (_1!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46563)) ((_ is Cons!1572) (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (bvslt (_1!1163 (h!2164 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46563)))))

(declare-fun b!94818 () Bool)

(assert (=> b!94818 (= e!61867 (containsKey!150 (t!5469 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!46563))))

(assert (= (and d!24825 (not res!47963)) b!94817))

(assert (= (and b!94817 res!47964) b!94818))

(declare-fun m!102205 () Bool)

(assert (=> b!94818 m!102205))

(assert (=> d!24649 d!24825))

(declare-fun d!24827 () Bool)

(assert (=> d!24827 (= (get!1272 (getValueByKey!146 (toList!766 lt!46561) lt!46566)) (v!2760 (getValueByKey!146 (toList!766 lt!46561) lt!46566)))))

(assert (=> d!24651 d!24827))

(declare-fun b!94819 () Bool)

(declare-fun e!61868 () Option!152)

(assert (=> b!94819 (= e!61868 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46561)))))))

(declare-fun b!94821 () Bool)

(declare-fun e!61869 () Option!152)

(assert (=> b!94821 (= e!61869 (getValueByKey!146 (t!5469 (toList!766 lt!46561)) lt!46566))))

(declare-fun b!94820 () Bool)

(assert (=> b!94820 (= e!61868 e!61869)))

(declare-fun c!15871 () Bool)

(assert (=> b!94820 (= c!15871 (and ((_ is Cons!1572) (toList!766 lt!46561)) (not (= (_1!1163 (h!2164 (toList!766 lt!46561))) lt!46566))))))

(declare-fun b!94822 () Bool)

(assert (=> b!94822 (= e!61869 None!150)))

(declare-fun d!24829 () Bool)

(declare-fun c!15870 () Bool)

(assert (=> d!24829 (= c!15870 (and ((_ is Cons!1572) (toList!766 lt!46561)) (= (_1!1163 (h!2164 (toList!766 lt!46561))) lt!46566)))))

(assert (=> d!24829 (= (getValueByKey!146 (toList!766 lt!46561) lt!46566) e!61868)))

(assert (= (and d!24829 c!15870) b!94819))

(assert (= (and d!24829 (not c!15870)) b!94820))

(assert (= (and b!94820 c!15871) b!94821))

(assert (= (and b!94820 (not c!15871)) b!94822))

(declare-fun m!102207 () Bool)

(assert (=> b!94821 m!102207))

(assert (=> d!24651 d!24829))

(declare-fun d!24831 () Bool)

(assert (=> d!24831 (= (apply!90 lt!46917 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46917) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3888 () Bool)

(assert (= bs!3888 d!24831))

(assert (=> bs!3888 m!101949))

(assert (=> bs!3888 m!101949))

(declare-fun m!102209 () Bool)

(assert (=> bs!3888 m!102209))

(assert (=> b!94479 d!24831))

(declare-fun d!24833 () Bool)

(assert (=> d!24833 (= (isDefined!100 (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))) (not (isEmpty!354 (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))))

(declare-fun bs!3889 () Bool)

(assert (= bs!3889 d!24833))

(assert (=> bs!3889 m!101487))

(declare-fun m!102211 () Bool)

(assert (=> bs!3889 m!102211))

(assert (=> b!94380 d!24833))

(declare-fun b!94823 () Bool)

(declare-fun e!61870 () Option!152)

(assert (=> b!94823 (= e!61870 (Some!151 (_2!1163 (h!2164 (toList!766 call!9424)))))))

(declare-fun b!94825 () Bool)

(declare-fun e!61871 () Option!152)

(assert (=> b!94825 (= e!61871 (getValueByKey!146 (t!5469 (toList!766 call!9424)) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(declare-fun b!94824 () Bool)

(assert (=> b!94824 (= e!61870 e!61871)))

(declare-fun c!15873 () Bool)

(assert (=> b!94824 (= c!15873 (and ((_ is Cons!1572) (toList!766 call!9424)) (not (= (_1!1163 (h!2164 (toList!766 call!9424))) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))))

(declare-fun b!94826 () Bool)

(assert (=> b!94826 (= e!61871 None!150)))

(declare-fun c!15872 () Bool)

(declare-fun d!24835 () Bool)

(assert (=> d!24835 (= c!15872 (and ((_ is Cons!1572) (toList!766 call!9424)) (= (_1!1163 (h!2164 (toList!766 call!9424))) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))))

(assert (=> d!24835 (= (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))) e!61870)))

(assert (= (and d!24835 c!15872) b!94823))

(assert (= (and d!24835 (not c!15872)) b!94824))

(assert (= (and b!94824 c!15873) b!94825))

(assert (= (and b!94824 (not c!15873)) b!94826))

(declare-fun m!102213 () Bool)

(assert (=> b!94825 m!102213))

(assert (=> b!94380 d!24835))

(declare-fun d!24837 () Bool)

(assert (=> d!24837 (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))

(declare-fun lt!47083 () Unit!2800)

(declare-fun choose!577 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 64) (_ BitVec 32) Int) Unit!2800)

(assert (=> d!24837 (= lt!47083 (choose!577 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!24837 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24837 (= (lemmaArrayContainsKeyThenInListMap!23 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47083)))

(declare-fun bs!3890 () Bool)

(assert (= bs!3890 d!24837))

(assert (=> bs!3890 m!101101))

(assert (=> bs!3890 m!101101))

(assert (=> bs!3890 m!100977))

(assert (=> bs!3890 m!101207))

(assert (=> bs!3890 m!100977))

(declare-fun m!102215 () Bool)

(assert (=> bs!3890 m!102215))

(assert (=> bs!3890 m!101255))

(assert (=> b!94350 d!24837))

(assert (=> b!94350 d!24667))

(assert (=> b!94350 d!24567))

(declare-fun lt!47084 () Bool)

(declare-fun d!24839 () Bool)

(assert (=> d!24839 (= lt!47084 (select (content!98 (toList!766 lt!46938)) (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!61872 () Bool)

(assert (=> d!24839 (= lt!47084 e!61872)))

(declare-fun res!47966 () Bool)

(assert (=> d!24839 (=> (not res!47966) (not e!61872))))

(assert (=> d!24839 (= res!47966 ((_ is Cons!1572) (toList!766 lt!46938)))))

(assert (=> d!24839 (= (contains!790 (toList!766 lt!46938) (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!47084)))

(declare-fun b!94827 () Bool)

(declare-fun e!61873 () Bool)

(assert (=> b!94827 (= e!61872 e!61873)))

(declare-fun res!47965 () Bool)

(assert (=> b!94827 (=> res!47965 e!61873)))

(assert (=> b!94827 (= res!47965 (= (h!2164 (toList!766 lt!46938)) (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94828 () Bool)

(assert (=> b!94828 (= e!61873 (contains!790 (t!5469 (toList!766 lt!46938)) (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24839 res!47966) b!94827))

(assert (= (and b!94827 (not res!47965)) b!94828))

(declare-fun m!102217 () Bool)

(assert (=> d!24839 m!102217))

(declare-fun m!102219 () Bool)

(assert (=> d!24839 m!102219))

(declare-fun m!102221 () Bool)

(assert (=> b!94828 m!102221))

(assert (=> b!94497 d!24839))

(declare-fun d!24841 () Bool)

(assert (=> d!24841 (= (get!1272 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2760 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24589 d!24841))

(assert (=> d!24589 d!24809))

(declare-fun d!24843 () Bool)

(declare-fun e!61874 () Bool)

(assert (=> d!24843 e!61874))

(declare-fun res!47967 () Bool)

(assert (=> d!24843 (=> res!47967 e!61874)))

(declare-fun lt!47087 () Bool)

(assert (=> d!24843 (= res!47967 (not lt!47087))))

(declare-fun lt!47085 () Bool)

(assert (=> d!24843 (= lt!47087 lt!47085)))

(declare-fun lt!47086 () Unit!2800)

(declare-fun e!61875 () Unit!2800)

(assert (=> d!24843 (= lt!47086 e!61875)))

(declare-fun c!15874 () Bool)

(assert (=> d!24843 (= c!15874 lt!47085)))

(assert (=> d!24843 (= lt!47085 (containsKey!150 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!24843 (= (contains!786 lt!46933 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47087)))

(declare-fun b!94829 () Bool)

(declare-fun lt!47088 () Unit!2800)

(assert (=> b!94829 (= e!61875 lt!47088)))

(assert (=> b!94829 (= lt!47088 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> b!94829 (isDefined!100 (getValueByKey!146 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94830 () Bool)

(declare-fun Unit!2836 () Unit!2800)

(assert (=> b!94830 (= e!61875 Unit!2836)))

(declare-fun b!94831 () Bool)

(assert (=> b!94831 (= e!61874 (isDefined!100 (getValueByKey!146 (toList!766 lt!46933) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24843 c!15874) b!94829))

(assert (= (and d!24843 (not c!15874)) b!94830))

(assert (= (and d!24843 (not res!47967)) b!94831))

(declare-fun m!102223 () Bool)

(assert (=> d!24843 m!102223))

(declare-fun m!102225 () Bool)

(assert (=> b!94829 m!102225))

(assert (=> b!94829 m!101665))

(assert (=> b!94829 m!101665))

(declare-fun m!102227 () Bool)

(assert (=> b!94829 m!102227))

(assert (=> b!94831 m!101665))

(assert (=> b!94831 m!101665))

(assert (=> b!94831 m!102227))

(assert (=> d!24641 d!24843))

(declare-fun b!94832 () Bool)

(declare-fun e!61876 () Option!152)

(assert (=> b!94832 (= e!61876 (Some!151 (_2!1163 (h!2164 lt!46935))))))

(declare-fun b!94834 () Bool)

(declare-fun e!61877 () Option!152)

(assert (=> b!94834 (= e!61877 (getValueByKey!146 (t!5469 lt!46935) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94833 () Bool)

(assert (=> b!94833 (= e!61876 e!61877)))

(declare-fun c!15876 () Bool)

(assert (=> b!94833 (= c!15876 (and ((_ is Cons!1572) lt!46935) (not (= (_1!1163 (h!2164 lt!46935)) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!94835 () Bool)

(assert (=> b!94835 (= e!61877 None!150)))

(declare-fun d!24845 () Bool)

(declare-fun c!15875 () Bool)

(assert (=> d!24845 (= c!15875 (and ((_ is Cons!1572) lt!46935) (= (_1!1163 (h!2164 lt!46935)) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24845 (= (getValueByKey!146 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!61876)))

(assert (= (and d!24845 c!15875) b!94832))

(assert (= (and d!24845 (not c!15875)) b!94833))

(assert (= (and b!94833 c!15876) b!94834))

(assert (= (and b!94833 (not c!15876)) b!94835))

(declare-fun m!102229 () Bool)

(assert (=> b!94834 m!102229))

(assert (=> d!24641 d!24845))

(declare-fun d!24847 () Bool)

(assert (=> d!24847 (= (getValueByKey!146 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!47089 () Unit!2800)

(assert (=> d!24847 (= lt!47089 (choose!576 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!61878 () Bool)

(assert (=> d!24847 e!61878))

(declare-fun res!47968 () Bool)

(assert (=> d!24847 (=> (not res!47968) (not e!61878))))

(assert (=> d!24847 (= res!47968 (isStrictlySorted!297 lt!46935))))

(assert (=> d!24847 (= (lemmaContainsTupThenGetReturnValue!65 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47089)))

(declare-fun b!94836 () Bool)

(declare-fun res!47969 () Bool)

(assert (=> b!94836 (=> (not res!47969) (not e!61878))))

(assert (=> b!94836 (= res!47969 (containsKey!150 lt!46935 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94837 () Bool)

(assert (=> b!94837 (= e!61878 (contains!790 lt!46935 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!24847 res!47968) b!94836))

(assert (= (and b!94836 res!47969) b!94837))

(assert (=> d!24847 m!101659))

(declare-fun m!102231 () Bool)

(assert (=> d!24847 m!102231))

(declare-fun m!102233 () Bool)

(assert (=> d!24847 m!102233))

(declare-fun m!102235 () Bool)

(assert (=> b!94836 m!102235))

(declare-fun m!102237 () Bool)

(assert (=> b!94837 m!102237))

(assert (=> d!24641 d!24847))

(declare-fun bm!9525 () Bool)

(declare-fun call!9529 () List!1576)

(declare-fun call!9530 () List!1576)

(assert (=> bm!9525 (= call!9529 call!9530)))

(declare-fun bm!9526 () Bool)

(declare-fun call!9528 () List!1576)

(assert (=> bm!9526 (= call!9530 call!9528)))

(declare-fun b!94838 () Bool)

(declare-fun e!61881 () List!1576)

(assert (=> b!94838 (= e!61881 call!9528)))

(declare-fun e!61882 () List!1576)

(declare-fun bm!9527 () Bool)

(declare-fun c!15877 () Bool)

(assert (=> bm!9527 (= call!9528 ($colon$colon!75 e!61882 (ite c!15877 (h!2164 (toList!766 lt!46553)) (tuple2!2305 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun c!15879 () Bool)

(assert (=> bm!9527 (= c!15879 c!15877)))

(declare-fun b!94839 () Bool)

(declare-fun e!61883 () List!1576)

(assert (=> b!94839 (= e!61881 e!61883)))

(declare-fun c!15878 () Bool)

(assert (=> b!94839 (= c!15878 (and ((_ is Cons!1572) (toList!766 lt!46553)) (= (_1!1163 (h!2164 (toList!766 lt!46553))) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94840 () Bool)

(assert (=> b!94840 (= e!61883 call!9530)))

(declare-fun lt!47090 () List!1576)

(declare-fun b!94841 () Bool)

(declare-fun e!61879 () Bool)

(assert (=> b!94841 (= e!61879 (contains!790 lt!47090 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!94842 () Bool)

(declare-fun e!61880 () List!1576)

(assert (=> b!94842 (= e!61880 call!9529)))

(declare-fun b!94843 () Bool)

(assert (=> b!94843 (= e!61880 call!9529)))

(declare-fun b!94844 () Bool)

(declare-fun res!47971 () Bool)

(assert (=> b!94844 (=> (not res!47971) (not e!61879))))

(assert (=> b!94844 (= res!47971 (containsKey!150 lt!47090 (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun c!15880 () Bool)

(declare-fun b!94846 () Bool)

(assert (=> b!94846 (= e!61882 (ite c!15878 (t!5469 (toList!766 lt!46553)) (ite c!15880 (Cons!1572 (h!2164 (toList!766 lt!46553)) (t!5469 (toList!766 lt!46553))) Nil!1573)))))

(declare-fun b!94847 () Bool)

(assert (=> b!94847 (= e!61882 (insertStrictlySorted!68 (t!5469 (toList!766 lt!46553)) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun d!24849 () Bool)

(assert (=> d!24849 e!61879))

(declare-fun res!47970 () Bool)

(assert (=> d!24849 (=> (not res!47970) (not e!61879))))

(assert (=> d!24849 (= res!47970 (isStrictlySorted!297 lt!47090))))

(assert (=> d!24849 (= lt!47090 e!61881)))

(assert (=> d!24849 (= c!15877 (and ((_ is Cons!1572) (toList!766 lt!46553)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46553))) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24849 (isStrictlySorted!297 (toList!766 lt!46553))))

(assert (=> d!24849 (= (insertStrictlySorted!68 (toList!766 lt!46553) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47090)))

(declare-fun b!94845 () Bool)

(assert (=> b!94845 (= c!15880 (and ((_ is Cons!1572) (toList!766 lt!46553)) (bvsgt (_1!1163 (h!2164 (toList!766 lt!46553))) (_1!1163 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!94845 (= e!61883 e!61880)))

(assert (= (and d!24849 c!15877) b!94838))

(assert (= (and d!24849 (not c!15877)) b!94839))

(assert (= (and b!94839 c!15878) b!94840))

(assert (= (and b!94839 (not c!15878)) b!94845))

(assert (= (and b!94845 c!15880) b!94842))

(assert (= (and b!94845 (not c!15880)) b!94843))

(assert (= (or b!94842 b!94843) bm!9525))

(assert (= (or b!94840 bm!9525) bm!9526))

(assert (= (or b!94838 bm!9526) bm!9527))

(assert (= (and bm!9527 c!15879) b!94847))

(assert (= (and bm!9527 (not c!15879)) b!94846))

(assert (= (and d!24849 res!47970) b!94844))

(assert (= (and b!94844 res!47971) b!94841))

(declare-fun m!102239 () Bool)

(assert (=> b!94847 m!102239))

(declare-fun m!102241 () Bool)

(assert (=> b!94844 m!102241))

(declare-fun m!102243 () Bool)

(assert (=> d!24849 m!102243))

(declare-fun m!102245 () Bool)

(assert (=> d!24849 m!102245))

(declare-fun m!102247 () Bool)

(assert (=> b!94841 m!102247))

(declare-fun m!102249 () Bool)

(assert (=> bm!9527 m!102249))

(assert (=> d!24641 d!24849))

(declare-fun d!24851 () Bool)

(declare-fun e!61884 () Bool)

(assert (=> d!24851 e!61884))

(declare-fun res!47972 () Bool)

(assert (=> d!24851 (=> res!47972 e!61884)))

(declare-fun lt!47093 () Bool)

(assert (=> d!24851 (= res!47972 (not lt!47093))))

(declare-fun lt!47091 () Bool)

(assert (=> d!24851 (= lt!47093 lt!47091)))

(declare-fun lt!47092 () Unit!2800)

(declare-fun e!61885 () Unit!2800)

(assert (=> d!24851 (= lt!47092 e!61885)))

(declare-fun c!15881 () Bool)

(assert (=> d!24851 (= c!15881 lt!47091)))

(assert (=> d!24851 (= lt!47091 (containsKey!150 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24851 (= (contains!786 lt!46698 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47093)))

(declare-fun b!94848 () Bool)

(declare-fun lt!47094 () Unit!2800)

(assert (=> b!94848 (= e!61885 lt!47094)))

(assert (=> b!94848 (= lt!47094 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!94848 (isDefined!100 (getValueByKey!146 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94849 () Bool)

(declare-fun Unit!2837 () Unit!2800)

(assert (=> b!94849 (= e!61885 Unit!2837)))

(declare-fun b!94850 () Bool)

(assert (=> b!94850 (= e!61884 (isDefined!100 (getValueByKey!146 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!24851 c!15881) b!94848))

(assert (= (and d!24851 (not c!15881)) b!94849))

(assert (= (and d!24851 (not res!47972)) b!94850))

(declare-fun m!102251 () Bool)

(assert (=> d!24851 m!102251))

(declare-fun m!102253 () Bool)

(assert (=> b!94848 m!102253))

(assert (=> b!94848 m!101289))

(assert (=> b!94848 m!101289))

(declare-fun m!102255 () Bool)

(assert (=> b!94848 m!102255))

(assert (=> b!94850 m!101289))

(assert (=> b!94850 m!101289))

(assert (=> b!94850 m!102255))

(assert (=> d!24559 d!24851))

(declare-fun b!94851 () Bool)

(declare-fun e!61886 () Option!152)

(assert (=> b!94851 (= e!61886 (Some!151 (_2!1163 (h!2164 lt!46700))))))

(declare-fun b!94853 () Bool)

(declare-fun e!61887 () Option!152)

(assert (=> b!94853 (= e!61887 (getValueByKey!146 (t!5469 lt!46700) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94852 () Bool)

(assert (=> b!94852 (= e!61886 e!61887)))

(declare-fun c!15883 () Bool)

(assert (=> b!94852 (= c!15883 (and ((_ is Cons!1572) lt!46700) (not (= (_1!1163 (h!2164 lt!46700)) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!94854 () Bool)

(assert (=> b!94854 (= e!61887 None!150)))

(declare-fun c!15882 () Bool)

(declare-fun d!24853 () Bool)

(assert (=> d!24853 (= c!15882 (and ((_ is Cons!1572) lt!46700) (= (_1!1163 (h!2164 lt!46700)) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!24853 (= (getValueByKey!146 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!61886)))

(assert (= (and d!24853 c!15882) b!94851))

(assert (= (and d!24853 (not c!15882)) b!94852))

(assert (= (and b!94852 c!15883) b!94853))

(assert (= (and b!94852 (not c!15883)) b!94854))

(declare-fun m!102257 () Bool)

(assert (=> b!94853 m!102257))

(assert (=> d!24559 d!24853))

(declare-fun d!24855 () Bool)

(assert (=> d!24855 (= (getValueByKey!146 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!151 (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47095 () Unit!2800)

(assert (=> d!24855 (= lt!47095 (choose!576 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!61888 () Bool)

(assert (=> d!24855 e!61888))

(declare-fun res!47973 () Bool)

(assert (=> d!24855 (=> (not res!47973) (not e!61888))))

(assert (=> d!24855 (= res!47973 (isStrictlySorted!297 lt!46700))))

(assert (=> d!24855 (= (lemmaContainsTupThenGetReturnValue!65 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47095)))

(declare-fun b!94855 () Bool)

(declare-fun res!47974 () Bool)

(assert (=> b!94855 (=> (not res!47974) (not e!61888))))

(assert (=> b!94855 (= res!47974 (containsKey!150 lt!46700 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94856 () Bool)

(assert (=> b!94856 (= e!61888 (contains!790 lt!46700 (tuple2!2305 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!24855 res!47973) b!94855))

(assert (= (and b!94855 res!47974) b!94856))

(assert (=> d!24855 m!101283))

(declare-fun m!102259 () Bool)

(assert (=> d!24855 m!102259))

(declare-fun m!102261 () Bool)

(assert (=> d!24855 m!102261))

(declare-fun m!102263 () Bool)

(assert (=> b!94855 m!102263))

(declare-fun m!102265 () Bool)

(assert (=> b!94856 m!102265))

(assert (=> d!24559 d!24855))

(declare-fun bm!9528 () Bool)

(declare-fun call!9532 () List!1576)

(declare-fun call!9533 () List!1576)

(assert (=> bm!9528 (= call!9532 call!9533)))

(declare-fun bm!9529 () Bool)

(declare-fun call!9531 () List!1576)

(assert (=> bm!9529 (= call!9533 call!9531)))

(declare-fun b!94857 () Bool)

(declare-fun e!61891 () List!1576)

(assert (=> b!94857 (= e!61891 call!9531)))

(declare-fun c!15884 () Bool)

(declare-fun e!61892 () List!1576)

(declare-fun bm!9530 () Bool)

(assert (=> bm!9530 (= call!9531 ($colon$colon!75 e!61892 (ite c!15884 (h!2164 (toList!766 e!61491)) (tuple2!2305 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!15886 () Bool)

(assert (=> bm!9530 (= c!15886 c!15884)))

(declare-fun b!94858 () Bool)

(declare-fun e!61893 () List!1576)

(assert (=> b!94858 (= e!61891 e!61893)))

(declare-fun c!15885 () Bool)

(assert (=> b!94858 (= c!15885 (and ((_ is Cons!1572) (toList!766 e!61491)) (= (_1!1163 (h!2164 (toList!766 e!61491))) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94859 () Bool)

(assert (=> b!94859 (= e!61893 call!9533)))

(declare-fun lt!47096 () List!1576)

(declare-fun b!94860 () Bool)

(declare-fun e!61889 () Bool)

(assert (=> b!94860 (= e!61889 (contains!790 lt!47096 (tuple2!2305 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94861 () Bool)

(declare-fun e!61890 () List!1576)

(assert (=> b!94861 (= e!61890 call!9532)))

(declare-fun b!94862 () Bool)

(assert (=> b!94862 (= e!61890 call!9532)))

(declare-fun b!94863 () Bool)

(declare-fun res!47976 () Bool)

(assert (=> b!94863 (=> (not res!47976) (not e!61889))))

(assert (=> b!94863 (= res!47976 (containsKey!150 lt!47096 (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!15887 () Bool)

(declare-fun b!94865 () Bool)

(assert (=> b!94865 (= e!61892 (ite c!15885 (t!5469 (toList!766 e!61491)) (ite c!15887 (Cons!1572 (h!2164 (toList!766 e!61491)) (t!5469 (toList!766 e!61491))) Nil!1573)))))

(declare-fun b!94866 () Bool)

(assert (=> b!94866 (= e!61892 (insertStrictlySorted!68 (t!5469 (toList!766 e!61491)) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!24857 () Bool)

(assert (=> d!24857 e!61889))

(declare-fun res!47975 () Bool)

(assert (=> d!24857 (=> (not res!47975) (not e!61889))))

(assert (=> d!24857 (= res!47975 (isStrictlySorted!297 lt!47096))))

(assert (=> d!24857 (= lt!47096 e!61891)))

(assert (=> d!24857 (= c!15884 (and ((_ is Cons!1572) (toList!766 e!61491)) (bvslt (_1!1163 (h!2164 (toList!766 e!61491))) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!24857 (isStrictlySorted!297 (toList!766 e!61491))))

(assert (=> d!24857 (= (insertStrictlySorted!68 (toList!766 e!61491) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47096)))

(declare-fun b!94864 () Bool)

(assert (=> b!94864 (= c!15887 (and ((_ is Cons!1572) (toList!766 e!61491)) (bvsgt (_1!1163 (h!2164 (toList!766 e!61491))) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!94864 (= e!61893 e!61890)))

(assert (= (and d!24857 c!15884) b!94857))

(assert (= (and d!24857 (not c!15884)) b!94858))

(assert (= (and b!94858 c!15885) b!94859))

(assert (= (and b!94858 (not c!15885)) b!94864))

(assert (= (and b!94864 c!15887) b!94861))

(assert (= (and b!94864 (not c!15887)) b!94862))

(assert (= (or b!94861 b!94862) bm!9528))

(assert (= (or b!94859 bm!9528) bm!9529))

(assert (= (or b!94857 bm!9529) bm!9530))

(assert (= (and bm!9530 c!15886) b!94866))

(assert (= (and bm!9530 (not c!15886)) b!94865))

(assert (= (and d!24857 res!47975) b!94863))

(assert (= (and b!94863 res!47976) b!94860))

(declare-fun m!102267 () Bool)

(assert (=> b!94866 m!102267))

(declare-fun m!102269 () Bool)

(assert (=> b!94863 m!102269))

(declare-fun m!102271 () Bool)

(assert (=> d!24857 m!102271))

(declare-fun m!102273 () Bool)

(assert (=> d!24857 m!102273))

(declare-fun m!102275 () Bool)

(assert (=> b!94860 m!102275))

(declare-fun m!102277 () Bool)

(assert (=> bm!9530 m!102277))

(assert (=> d!24559 d!24857))

(declare-fun lt!47097 () Bool)

(declare-fun d!24859 () Bool)

(assert (=> d!24859 (= lt!47097 (select (content!98 (toList!766 lt!46824)) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!61894 () Bool)

(assert (=> d!24859 (= lt!47097 e!61894)))

(declare-fun res!47978 () Bool)

(assert (=> d!24859 (=> (not res!47978) (not e!61894))))

(assert (=> d!24859 (= res!47978 ((_ is Cons!1572) (toList!766 lt!46824)))))

(assert (=> d!24859 (= (contains!790 (toList!766 lt!46824) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47097)))

(declare-fun b!94867 () Bool)

(declare-fun e!61895 () Bool)

(assert (=> b!94867 (= e!61894 e!61895)))

(declare-fun res!47977 () Bool)

(assert (=> b!94867 (=> res!47977 e!61895)))

(assert (=> b!94867 (= res!47977 (= (h!2164 (toList!766 lt!46824)) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!94868 () Bool)

(assert (=> b!94868 (= e!61895 (contains!790 (t!5469 (toList!766 lt!46824)) (ite (or c!15648 c!15647) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (= (and d!24859 res!47978) b!94867))

(assert (= (and b!94867 (not res!47977)) b!94868))

(declare-fun m!102279 () Bool)

(assert (=> d!24859 m!102279))

(declare-fun m!102281 () Bool)

(assert (=> d!24859 m!102281))

(declare-fun m!102283 () Bool)

(assert (=> b!94868 m!102283))

(assert (=> b!94352 d!24859))

(declare-fun d!24861 () Bool)

(assert (=> d!24861 (= (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46551)) (v!2760 (getValueByKey!146 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46551)))))

(assert (=> d!24631 d!24861))

(declare-fun b!94869 () Bool)

(declare-fun e!61896 () Option!152)

(assert (=> b!94869 (= e!61896 (Some!151 (_2!1163 (h!2164 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun b!94871 () Bool)

(declare-fun e!61897 () Option!152)

(assert (=> b!94871 (= e!61897 (getValueByKey!146 (t!5469 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!46551))))

(declare-fun b!94870 () Bool)

(assert (=> b!94870 (= e!61896 e!61897)))

(declare-fun c!15889 () Bool)

(assert (=> b!94870 (= c!15889 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (not (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46551))))))

(declare-fun b!94872 () Bool)

(assert (=> b!94872 (= e!61897 None!150)))

(declare-fun d!24863 () Bool)

(declare-fun c!15888 () Bool)

(assert (=> d!24863 (= c!15888 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))) (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46551)))))

(assert (=> d!24863 (= (getValueByKey!146 (toList!766 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46551) e!61896)))

(assert (= (and d!24863 c!15888) b!94869))

(assert (= (and d!24863 (not c!15888)) b!94870))

(assert (= (and b!94870 c!15889) b!94871))

(assert (= (and b!94870 (not c!15889)) b!94872))

(declare-fun m!102285 () Bool)

(assert (=> b!94871 m!102285))

(assert (=> d!24631 d!24863))

(declare-fun d!24865 () Bool)

(assert (=> d!24865 (= (apply!90 (+!126 lt!46704 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) lt!46705) (apply!90 lt!46704 lt!46705))))

(declare-fun lt!47098 () Unit!2800)

(assert (=> d!24865 (= lt!47098 (choose!573 lt!46704 lt!46709 (zeroValue!2322 newMap!16) lt!46705))))

(declare-fun e!61898 () Bool)

(assert (=> d!24865 e!61898))

(declare-fun res!47979 () Bool)

(assert (=> d!24865 (=> (not res!47979) (not e!61898))))

(assert (=> d!24865 (= res!47979 (contains!786 lt!46704 lt!46705))))

(assert (=> d!24865 (= (addApplyDifferent!66 lt!46704 lt!46709 (zeroValue!2322 newMap!16) lt!46705) lt!47098)))

(declare-fun b!94873 () Bool)

(assert (=> b!94873 (= e!61898 (not (= lt!46705 lt!46709)))))

(assert (= (and d!24865 res!47979) b!94873))

(declare-fun m!102287 () Bool)

(assert (=> d!24865 m!102287))

(assert (=> d!24865 m!101317))

(assert (=> d!24865 m!101337))

(assert (=> d!24865 m!101317))

(declare-fun m!102289 () Bool)

(assert (=> d!24865 m!102289))

(assert (=> d!24865 m!101333))

(assert (=> b!94264 d!24865))

(declare-fun d!24867 () Bool)

(assert (=> d!24867 (= (apply!90 (+!126 lt!46707 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) lt!46708) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46707 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))) lt!46708)))))

(declare-fun bs!3891 () Bool)

(assert (= bs!3891 d!24867))

(declare-fun m!102291 () Bool)

(assert (=> bs!3891 m!102291))

(assert (=> bs!3891 m!102291))

(declare-fun m!102293 () Bool)

(assert (=> bs!3891 m!102293))

(assert (=> b!94264 d!24867))

(declare-fun d!24869 () Bool)

(declare-fun e!61899 () Bool)

(assert (=> d!24869 e!61899))

(declare-fun res!47980 () Bool)

(assert (=> d!24869 (=> (not res!47980) (not e!61899))))

(declare-fun lt!47100 () ListLongMap!1501)

(assert (=> d!24869 (= res!47980 (contains!786 lt!47100 (_1!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47102 () List!1576)

(assert (=> d!24869 (= lt!47100 (ListLongMap!1502 lt!47102))))

(declare-fun lt!47099 () Unit!2800)

(declare-fun lt!47101 () Unit!2800)

(assert (=> d!24869 (= lt!47099 lt!47101)))

(assert (=> d!24869 (= (getValueByKey!146 lt!47102 (_1!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24869 (= lt!47101 (lemmaContainsTupThenGetReturnValue!65 lt!47102 (_1!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24869 (= lt!47102 (insertStrictlySorted!68 (toList!766 lt!46704) (_1!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24869 (= (+!126 lt!46704 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) lt!47100)))

(declare-fun b!94874 () Bool)

(declare-fun res!47981 () Bool)

(assert (=> b!94874 (=> (not res!47981) (not e!61899))))

(assert (=> b!94874 (= res!47981 (= (getValueByKey!146 (toList!766 lt!47100) (_1!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94875 () Bool)

(assert (=> b!94875 (= e!61899 (contains!790 (toList!766 lt!47100) (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24869 res!47980) b!94874))

(assert (= (and b!94874 res!47981) b!94875))

(declare-fun m!102295 () Bool)

(assert (=> d!24869 m!102295))

(declare-fun m!102297 () Bool)

(assert (=> d!24869 m!102297))

(declare-fun m!102299 () Bool)

(assert (=> d!24869 m!102299))

(declare-fun m!102301 () Bool)

(assert (=> d!24869 m!102301))

(declare-fun m!102303 () Bool)

(assert (=> b!94874 m!102303))

(declare-fun m!102305 () Bool)

(assert (=> b!94875 m!102305))

(assert (=> b!94264 d!24869))

(declare-fun d!24871 () Bool)

(assert (=> d!24871 (= (apply!90 lt!46715 lt!46720) (get!1272 (getValueByKey!146 (toList!766 lt!46715) lt!46720)))))

(declare-fun bs!3892 () Bool)

(assert (= bs!3892 d!24871))

(declare-fun m!102307 () Bool)

(assert (=> bs!3892 m!102307))

(assert (=> bs!3892 m!102307))

(declare-fun m!102309 () Bool)

(assert (=> bs!3892 m!102309))

(assert (=> b!94264 d!24871))

(declare-fun d!24873 () Bool)

(assert (=> d!24873 (= (apply!90 (+!126 lt!46704 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16))) lt!46705) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46704 (tuple2!2305 lt!46709 (zeroValue!2322 newMap!16)))) lt!46705)))))

(declare-fun bs!3893 () Bool)

(assert (= bs!3893 d!24873))

(declare-fun m!102311 () Bool)

(assert (=> bs!3893 m!102311))

(assert (=> bs!3893 m!102311))

(declare-fun m!102313 () Bool)

(assert (=> bs!3893 m!102313))

(assert (=> b!94264 d!24873))

(declare-fun d!24875 () Bool)

(declare-fun e!61900 () Bool)

(assert (=> d!24875 e!61900))

(declare-fun res!47982 () Bool)

(assert (=> d!24875 (=> (not res!47982) (not e!61900))))

(declare-fun lt!47104 () ListLongMap!1501)

(assert (=> d!24875 (= res!47982 (contains!786 lt!47104 (_1!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))))))

(declare-fun lt!47106 () List!1576)

(assert (=> d!24875 (= lt!47104 (ListLongMap!1502 lt!47106))))

(declare-fun lt!47103 () Unit!2800)

(declare-fun lt!47105 () Unit!2800)

(assert (=> d!24875 (= lt!47103 lt!47105)))

(assert (=> d!24875 (= (getValueByKey!146 lt!47106 (_1!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))))))

(assert (=> d!24875 (= lt!47105 (lemmaContainsTupThenGetReturnValue!65 lt!47106 (_1!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))))))

(assert (=> d!24875 (= lt!47106 (insertStrictlySorted!68 (toList!766 lt!46715) (_1!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))))))

(assert (=> d!24875 (= (+!126 lt!46715 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) lt!47104)))

(declare-fun b!94876 () Bool)

(declare-fun res!47983 () Bool)

(assert (=> b!94876 (=> (not res!47983) (not e!61900))))

(assert (=> b!94876 (= res!47983 (= (getValueByKey!146 (toList!766 lt!47104) (_1!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))))))))

(declare-fun b!94877 () Bool)

(assert (=> b!94877 (= e!61900 (contains!790 (toList!766 lt!47104) (tuple2!2305 lt!46724 (minValue!2322 newMap!16))))))

(assert (= (and d!24875 res!47982) b!94876))

(assert (= (and b!94876 res!47983) b!94877))

(declare-fun m!102315 () Bool)

(assert (=> d!24875 m!102315))

(declare-fun m!102317 () Bool)

(assert (=> d!24875 m!102317))

(declare-fun m!102319 () Bool)

(assert (=> d!24875 m!102319))

(declare-fun m!102321 () Bool)

(assert (=> d!24875 m!102321))

(declare-fun m!102323 () Bool)

(assert (=> b!94876 m!102323))

(declare-fun m!102325 () Bool)

(assert (=> b!94877 m!102325))

(assert (=> b!94264 d!24875))

(declare-fun d!24877 () Bool)

(declare-fun e!61901 () Bool)

(assert (=> d!24877 e!61901))

(declare-fun res!47984 () Bool)

(assert (=> d!24877 (=> res!47984 e!61901)))

(declare-fun lt!47109 () Bool)

(assert (=> d!24877 (= res!47984 (not lt!47109))))

(declare-fun lt!47107 () Bool)

(assert (=> d!24877 (= lt!47109 lt!47107)))

(declare-fun lt!47108 () Unit!2800)

(declare-fun e!61902 () Unit!2800)

(assert (=> d!24877 (= lt!47108 e!61902)))

(declare-fun c!15890 () Bool)

(assert (=> d!24877 (= c!15890 lt!47107)))

(assert (=> d!24877 (= lt!47107 (containsKey!150 (toList!766 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) lt!46717))))

(assert (=> d!24877 (= (contains!786 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) lt!46717) lt!47109)))

(declare-fun b!94878 () Bool)

(declare-fun lt!47110 () Unit!2800)

(assert (=> b!94878 (= e!61902 lt!47110)))

(assert (=> b!94878 (= lt!47110 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) lt!46717))))

(assert (=> b!94878 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) lt!46717))))

(declare-fun b!94879 () Bool)

(declare-fun Unit!2838 () Unit!2800)

(assert (=> b!94879 (= e!61902 Unit!2838)))

(declare-fun b!94880 () Bool)

(assert (=> b!94880 (= e!61901 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) lt!46717)))))

(assert (= (and d!24877 c!15890) b!94878))

(assert (= (and d!24877 (not c!15890)) b!94879))

(assert (= (and d!24877 (not res!47984)) b!94880))

(declare-fun m!102327 () Bool)

(assert (=> d!24877 m!102327))

(declare-fun m!102329 () Bool)

(assert (=> b!94878 m!102329))

(declare-fun m!102331 () Bool)

(assert (=> b!94878 m!102331))

(assert (=> b!94878 m!102331))

(declare-fun m!102333 () Bool)

(assert (=> b!94878 m!102333))

(assert (=> b!94880 m!102331))

(assert (=> b!94880 m!102331))

(assert (=> b!94880 m!102333))

(assert (=> b!94264 d!24877))

(declare-fun b!94881 () Bool)

(declare-fun e!61908 () Bool)

(declare-fun e!61907 () Bool)

(assert (=> b!94881 (= e!61908 e!61907)))

(assert (=> b!94881 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!47987 () Bool)

(declare-fun lt!47116 () ListLongMap!1501)

(assert (=> b!94881 (= res!47987 (contains!786 lt!47116 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94881 (=> (not res!47987) (not e!61907))))

(declare-fun b!94882 () Bool)

(declare-fun e!61903 () Bool)

(assert (=> b!94882 (= e!61903 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94882 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94883 () Bool)

(declare-fun res!47985 () Bool)

(declare-fun e!61905 () Bool)

(assert (=> b!94883 (=> (not res!47985) (not e!61905))))

(assert (=> b!94883 (= res!47985 (not (contains!786 lt!47116 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94884 () Bool)

(declare-fun lt!47115 () Unit!2800)

(declare-fun lt!47113 () Unit!2800)

(assert (=> b!94884 (= lt!47115 lt!47113)))

(declare-fun lt!47112 () (_ BitVec 64))

(declare-fun lt!47117 () V!3129)

(declare-fun lt!47111 () (_ BitVec 64))

(declare-fun lt!47114 () ListLongMap!1501)

(assert (=> b!94884 (not (contains!786 (+!126 lt!47114 (tuple2!2305 lt!47112 lt!47117)) lt!47111))))

(assert (=> b!94884 (= lt!47113 (addStillNotContains!39 lt!47114 lt!47112 lt!47117 lt!47111))))

(assert (=> b!94884 (= lt!47111 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94884 (= lt!47117 (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94884 (= lt!47112 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9534 () ListLongMap!1501)

(assert (=> b!94884 (= lt!47114 call!9534)))

(declare-fun e!61909 () ListLongMap!1501)

(assert (=> b!94884 (= e!61909 (+!126 call!9534 (tuple2!2305 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94885 () Bool)

(declare-fun e!61904 () ListLongMap!1501)

(assert (=> b!94885 (= e!61904 (ListLongMap!1502 Nil!1573))))

(declare-fun d!24879 () Bool)

(assert (=> d!24879 e!61905))

(declare-fun res!47988 () Bool)

(assert (=> d!24879 (=> (not res!47988) (not e!61905))))

(assert (=> d!24879 (= res!47988 (not (contains!786 lt!47116 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24879 (= lt!47116 e!61904)))

(declare-fun c!15892 () Bool)

(assert (=> d!24879 (= c!15892 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24879 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24879 (= (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47116)))

(declare-fun b!94886 () Bool)

(assert (=> b!94886 (= e!61904 e!61909)))

(declare-fun c!15894 () Bool)

(assert (=> b!94886 (= c!15894 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94887 () Bool)

(assert (=> b!94887 (= e!61905 e!61908)))

(declare-fun c!15891 () Bool)

(assert (=> b!94887 (= c!15891 e!61903)))

(declare-fun res!47986 () Bool)

(assert (=> b!94887 (=> (not res!47986) (not e!61903))))

(assert (=> b!94887 (= res!47986 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94888 () Bool)

(declare-fun e!61906 () Bool)

(assert (=> b!94888 (= e!61906 (= lt!47116 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!94889 () Bool)

(assert (=> b!94889 (= e!61906 (isEmpty!355 lt!47116))))

(declare-fun b!94890 () Bool)

(assert (=> b!94890 (= e!61908 e!61906)))

(declare-fun c!15893 () Bool)

(assert (=> b!94890 (= c!15893 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9531 () Bool)

(assert (=> bm!9531 (= call!9534 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94891 () Bool)

(assert (=> b!94891 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> b!94891 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (_values!2418 newMap!16))))))

(assert (=> b!94891 (= e!61907 (= (apply!90 lt!47116 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94892 () Bool)

(assert (=> b!94892 (= e!61909 call!9534)))

(assert (= (and d!24879 c!15892) b!94885))

(assert (= (and d!24879 (not c!15892)) b!94886))

(assert (= (and b!94886 c!15894) b!94884))

(assert (= (and b!94886 (not c!15894)) b!94892))

(assert (= (or b!94884 b!94892) bm!9531))

(assert (= (and d!24879 res!47988) b!94883))

(assert (= (and b!94883 res!47985) b!94887))

(assert (= (and b!94887 res!47986) b!94882))

(assert (= (and b!94887 c!15891) b!94881))

(assert (= (and b!94887 (not c!15891)) b!94890))

(assert (= (and b!94881 res!47987) b!94891))

(assert (= (and b!94890 c!15893) b!94888))

(assert (= (and b!94890 (not c!15893)) b!94889))

(declare-fun b_lambda!4169 () Bool)

(assert (=> (not b_lambda!4169) (not b!94884)))

(assert (=> b!94884 t!5482))

(declare-fun b_and!5777 () Bool)

(assert (= b_and!5773 (and (=> t!5482 result!3197) b_and!5777)))

(assert (=> b!94884 t!5484))

(declare-fun b_and!5779 () Bool)

(assert (= b_and!5775 (and (=> t!5484 result!3199) b_and!5779)))

(declare-fun b_lambda!4171 () Bool)

(assert (=> (not b_lambda!4171) (not b!94891)))

(assert (=> b!94891 t!5482))

(declare-fun b_and!5781 () Bool)

(assert (= b_and!5777 (and (=> t!5482 result!3197) b_and!5781)))

(assert (=> b!94891 t!5484))

(declare-fun b_and!5783 () Bool)

(assert (= b_and!5779 (and (=> t!5484 result!3199) b_and!5783)))

(declare-fun m!102335 () Bool)

(assert (=> b!94884 m!102335))

(declare-fun m!102337 () Bool)

(assert (=> b!94884 m!102337))

(assert (=> b!94884 m!101341))

(declare-fun m!102339 () Bool)

(assert (=> b!94884 m!102339))

(assert (=> b!94884 m!101343))

(assert (=> b!94884 m!101341))

(assert (=> b!94884 m!101345))

(assert (=> b!94884 m!102335))

(declare-fun m!102341 () Bool)

(assert (=> b!94884 m!102341))

(assert (=> b!94884 m!101303))

(assert (=> b!94884 m!101343))

(assert (=> b!94881 m!101303))

(assert (=> b!94881 m!101303))

(declare-fun m!102343 () Bool)

(assert (=> b!94881 m!102343))

(assert (=> b!94882 m!101303))

(assert (=> b!94882 m!101303))

(assert (=> b!94882 m!101305))

(assert (=> b!94891 m!101303))

(declare-fun m!102345 () Bool)

(assert (=> b!94891 m!102345))

(assert (=> b!94891 m!101341))

(assert (=> b!94891 m!101343))

(assert (=> b!94891 m!101341))

(assert (=> b!94891 m!101345))

(assert (=> b!94891 m!101303))

(assert (=> b!94891 m!101343))

(declare-fun m!102347 () Bool)

(assert (=> b!94888 m!102347))

(assert (=> bm!9531 m!102347))

(declare-fun m!102349 () Bool)

(assert (=> b!94883 m!102349))

(declare-fun m!102351 () Bool)

(assert (=> d!24879 m!102351))

(assert (=> d!24879 m!101255))

(assert (=> b!94886 m!101303))

(assert (=> b!94886 m!101303))

(assert (=> b!94886 m!101305))

(declare-fun m!102353 () Bool)

(assert (=> b!94889 m!102353))

(assert (=> b!94264 d!24879))

(declare-fun d!24881 () Bool)

(assert (=> d!24881 (= (apply!90 (+!126 lt!46707 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) lt!46708) (apply!90 lt!46707 lt!46708))))

(declare-fun lt!47118 () Unit!2800)

(assert (=> d!24881 (= lt!47118 (choose!573 lt!46707 lt!46711 (minValue!2322 newMap!16) lt!46708))))

(declare-fun e!61910 () Bool)

(assert (=> d!24881 e!61910))

(declare-fun res!47989 () Bool)

(assert (=> d!24881 (=> (not res!47989) (not e!61910))))

(assert (=> d!24881 (= res!47989 (contains!786 lt!46707 lt!46708))))

(assert (=> d!24881 (= (addApplyDifferent!66 lt!46707 lt!46711 (minValue!2322 newMap!16) lt!46708) lt!47118)))

(declare-fun b!94893 () Bool)

(assert (=> b!94893 (= e!61910 (not (= lt!46708 lt!46711)))))

(assert (= (and d!24881 res!47989) b!94893))

(declare-fun m!102355 () Bool)

(assert (=> d!24881 m!102355))

(assert (=> d!24881 m!101319))

(assert (=> d!24881 m!101321))

(assert (=> d!24881 m!101319))

(declare-fun m!102357 () Bool)

(assert (=> d!24881 m!102357))

(assert (=> d!24881 m!101329))

(assert (=> b!94264 d!24881))

(declare-fun d!24883 () Bool)

(assert (=> d!24883 (= (apply!90 lt!46707 lt!46708) (get!1272 (getValueByKey!146 (toList!766 lt!46707) lt!46708)))))

(declare-fun bs!3894 () Bool)

(assert (= bs!3894 d!24883))

(declare-fun m!102359 () Bool)

(assert (=> bs!3894 m!102359))

(assert (=> bs!3894 m!102359))

(declare-fun m!102361 () Bool)

(assert (=> bs!3894 m!102361))

(assert (=> b!94264 d!24883))

(declare-fun d!24885 () Bool)

(assert (=> d!24885 (contains!786 (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) lt!46717)))

(declare-fun lt!47119 () Unit!2800)

(assert (=> d!24885 (= lt!47119 (choose!572 lt!46706 lt!46723 (zeroValue!2322 newMap!16) lt!46717))))

(assert (=> d!24885 (contains!786 lt!46706 lt!46717)))

(assert (=> d!24885 (= (addStillContains!66 lt!46706 lt!46723 (zeroValue!2322 newMap!16) lt!46717) lt!47119)))

(declare-fun bs!3895 () Bool)

(assert (= bs!3895 d!24885))

(assert (=> bs!3895 m!101313))

(assert (=> bs!3895 m!101313))

(assert (=> bs!3895 m!101315))

(declare-fun m!102363 () Bool)

(assert (=> bs!3895 m!102363))

(declare-fun m!102365 () Bool)

(assert (=> bs!3895 m!102365))

(assert (=> b!94264 d!24885))

(declare-fun d!24887 () Bool)

(assert (=> d!24887 (= (apply!90 lt!46704 lt!46705) (get!1272 (getValueByKey!146 (toList!766 lt!46704) lt!46705)))))

(declare-fun bs!3896 () Bool)

(assert (= bs!3896 d!24887))

(declare-fun m!102367 () Bool)

(assert (=> bs!3896 m!102367))

(assert (=> bs!3896 m!102367))

(declare-fun m!102369 () Bool)

(assert (=> bs!3896 m!102369))

(assert (=> b!94264 d!24887))

(declare-fun d!24889 () Bool)

(assert (=> d!24889 (= (apply!90 (+!126 lt!46715 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) lt!46720) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46715 (tuple2!2305 lt!46724 (minValue!2322 newMap!16)))) lt!46720)))))

(declare-fun bs!3897 () Bool)

(assert (= bs!3897 d!24889))

(declare-fun m!102371 () Bool)

(assert (=> bs!3897 m!102371))

(assert (=> bs!3897 m!102371))

(declare-fun m!102373 () Bool)

(assert (=> bs!3897 m!102373))

(assert (=> b!94264 d!24889))

(declare-fun d!24891 () Bool)

(declare-fun e!61911 () Bool)

(assert (=> d!24891 e!61911))

(declare-fun res!47990 () Bool)

(assert (=> d!24891 (=> (not res!47990) (not e!61911))))

(declare-fun lt!47121 () ListLongMap!1501)

(assert (=> d!24891 (= res!47990 (contains!786 lt!47121 (_1!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47123 () List!1576)

(assert (=> d!24891 (= lt!47121 (ListLongMap!1502 lt!47123))))

(declare-fun lt!47120 () Unit!2800)

(declare-fun lt!47122 () Unit!2800)

(assert (=> d!24891 (= lt!47120 lt!47122)))

(assert (=> d!24891 (= (getValueByKey!146 lt!47123 (_1!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24891 (= lt!47122 (lemmaContainsTupThenGetReturnValue!65 lt!47123 (_1!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24891 (= lt!47123 (insertStrictlySorted!68 (toList!766 lt!46706) (_1!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24891 (= (+!126 lt!46706 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))) lt!47121)))

(declare-fun b!94894 () Bool)

(declare-fun res!47991 () Bool)

(assert (=> b!94894 (=> (not res!47991) (not e!61911))))

(assert (=> b!94894 (= res!47991 (= (getValueByKey!146 (toList!766 lt!47121) (_1!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94895 () Bool)

(assert (=> b!94895 (= e!61911 (contains!790 (toList!766 lt!47121) (tuple2!2305 lt!46723 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24891 res!47990) b!94894))

(assert (= (and b!94894 res!47991) b!94895))

(declare-fun m!102375 () Bool)

(assert (=> d!24891 m!102375))

(declare-fun m!102377 () Bool)

(assert (=> d!24891 m!102377))

(declare-fun m!102379 () Bool)

(assert (=> d!24891 m!102379))

(declare-fun m!102381 () Bool)

(assert (=> d!24891 m!102381))

(declare-fun m!102383 () Bool)

(assert (=> b!94894 m!102383))

(declare-fun m!102385 () Bool)

(assert (=> b!94895 m!102385))

(assert (=> b!94264 d!24891))

(declare-fun d!24893 () Bool)

(declare-fun e!61912 () Bool)

(assert (=> d!24893 e!61912))

(declare-fun res!47992 () Bool)

(assert (=> d!24893 (=> (not res!47992) (not e!61912))))

(declare-fun lt!47125 () ListLongMap!1501)

(assert (=> d!24893 (= res!47992 (contains!786 lt!47125 (_1!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))))))

(declare-fun lt!47127 () List!1576)

(assert (=> d!24893 (= lt!47125 (ListLongMap!1502 lt!47127))))

(declare-fun lt!47124 () Unit!2800)

(declare-fun lt!47126 () Unit!2800)

(assert (=> d!24893 (= lt!47124 lt!47126)))

(assert (=> d!24893 (= (getValueByKey!146 lt!47127 (_1!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))))))

(assert (=> d!24893 (= lt!47126 (lemmaContainsTupThenGetReturnValue!65 lt!47127 (_1!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))))))

(assert (=> d!24893 (= lt!47127 (insertStrictlySorted!68 (toList!766 lt!46707) (_1!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))))))

(assert (=> d!24893 (= (+!126 lt!46707 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))) lt!47125)))

(declare-fun b!94896 () Bool)

(declare-fun res!47993 () Bool)

(assert (=> b!94896 (=> (not res!47993) (not e!61912))))

(assert (=> b!94896 (= res!47993 (= (getValueByKey!146 (toList!766 lt!47125) (_1!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46711 (minValue!2322 newMap!16))))))))

(declare-fun b!94897 () Bool)

(assert (=> b!94897 (= e!61912 (contains!790 (toList!766 lt!47125) (tuple2!2305 lt!46711 (minValue!2322 newMap!16))))))

(assert (= (and d!24893 res!47992) b!94896))

(assert (= (and b!94896 res!47993) b!94897))

(declare-fun m!102387 () Bool)

(assert (=> d!24893 m!102387))

(declare-fun m!102389 () Bool)

(assert (=> d!24893 m!102389))

(declare-fun m!102391 () Bool)

(assert (=> d!24893 m!102391))

(declare-fun m!102393 () Bool)

(assert (=> d!24893 m!102393))

(declare-fun m!102395 () Bool)

(assert (=> b!94896 m!102395))

(declare-fun m!102397 () Bool)

(assert (=> b!94897 m!102397))

(assert (=> b!94264 d!24893))

(declare-fun d!24895 () Bool)

(assert (=> d!24895 (= (apply!90 (+!126 lt!46715 (tuple2!2305 lt!46724 (minValue!2322 newMap!16))) lt!46720) (apply!90 lt!46715 lt!46720))))

(declare-fun lt!47128 () Unit!2800)

(assert (=> d!24895 (= lt!47128 (choose!573 lt!46715 lt!46724 (minValue!2322 newMap!16) lt!46720))))

(declare-fun e!61913 () Bool)

(assert (=> d!24895 e!61913))

(declare-fun res!47994 () Bool)

(assert (=> d!24895 (=> (not res!47994) (not e!61913))))

(assert (=> d!24895 (= res!47994 (contains!786 lt!46715 lt!46720))))

(assert (=> d!24895 (= (addApplyDifferent!66 lt!46715 lt!46724 (minValue!2322 newMap!16) lt!46720) lt!47128)))

(declare-fun b!94898 () Bool)

(assert (=> b!94898 (= e!61913 (not (= lt!46720 lt!46724)))))

(assert (= (and d!24895 res!47994) b!94898))

(declare-fun m!102399 () Bool)

(assert (=> d!24895 m!102399))

(assert (=> d!24895 m!101307))

(assert (=> d!24895 m!101309))

(assert (=> d!24895 m!101307))

(declare-fun m!102401 () Bool)

(assert (=> d!24895 m!102401))

(assert (=> d!24895 m!101311))

(assert (=> b!94264 d!24895))

(declare-fun d!24897 () Bool)

(assert (=> d!24897 (= (isEmpty!354 (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) (not ((_ is Some!151) (getValueByKey!146 (toList!766 lt!46460) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(assert (=> d!24563 d!24897))

(declare-fun b!94899 () Bool)

(declare-fun e!61919 () Bool)

(declare-fun e!61918 () Bool)

(assert (=> b!94899 (= e!61919 e!61918)))

(assert (=> b!94899 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!47997 () Bool)

(declare-fun lt!47134 () ListLongMap!1501)

(assert (=> b!94899 (= res!47997 (contains!786 lt!47134 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94899 (=> (not res!47997) (not e!61918))))

(declare-fun b!94900 () Bool)

(declare-fun e!61914 () Bool)

(assert (=> b!94900 (= e!61914 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94900 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94901 () Bool)

(declare-fun res!47995 () Bool)

(declare-fun e!61916 () Bool)

(assert (=> b!94901 (=> (not res!47995) (not e!61916))))

(assert (=> b!94901 (= res!47995 (not (contains!786 lt!47134 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94902 () Bool)

(declare-fun lt!47133 () Unit!2800)

(declare-fun lt!47131 () Unit!2800)

(assert (=> b!94902 (= lt!47133 lt!47131)))

(declare-fun lt!47129 () (_ BitVec 64))

(declare-fun lt!47132 () ListLongMap!1501)

(declare-fun lt!47130 () (_ BitVec 64))

(declare-fun lt!47135 () V!3129)

(assert (=> b!94902 (not (contains!786 (+!126 lt!47132 (tuple2!2305 lt!47130 lt!47135)) lt!47129))))

(assert (=> b!94902 (= lt!47131 (addStillNotContains!39 lt!47132 lt!47130 lt!47135 lt!47129))))

(assert (=> b!94902 (= lt!47129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94902 (= lt!47135 (get!1267 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94902 (= lt!47130 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9535 () ListLongMap!1501)

(assert (=> b!94902 (= lt!47132 call!9535)))

(declare-fun e!61920 () ListLongMap!1501)

(assert (=> b!94902 (= e!61920 (+!126 call!9535 (tuple2!2305 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (get!1267 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94903 () Bool)

(declare-fun e!61915 () ListLongMap!1501)

(assert (=> b!94903 (= e!61915 (ListLongMap!1502 Nil!1573))))

(declare-fun d!24899 () Bool)

(assert (=> d!24899 e!61916))

(declare-fun res!47998 () Bool)

(assert (=> d!24899 (=> (not res!47998) (not e!61916))))

(assert (=> d!24899 (= res!47998 (not (contains!786 lt!47134 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24899 (= lt!47134 e!61915)))

(declare-fun c!15896 () Bool)

(assert (=> d!24899 (= c!15896 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24899 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24899 (= (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47134)))

(declare-fun b!94904 () Bool)

(assert (=> b!94904 (= e!61915 e!61920)))

(declare-fun c!15898 () Bool)

(assert (=> b!94904 (= c!15898 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94905 () Bool)

(assert (=> b!94905 (= e!61916 e!61919)))

(declare-fun c!15895 () Bool)

(assert (=> b!94905 (= c!15895 e!61914)))

(declare-fun res!47996 () Bool)

(assert (=> b!94905 (=> (not res!47996) (not e!61914))))

(assert (=> b!94905 (= res!47996 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94906 () Bool)

(declare-fun e!61917 () Bool)

(assert (=> b!94906 (= e!61917 (= lt!47134 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!94907 () Bool)

(assert (=> b!94907 (= e!61917 (isEmpty!355 lt!47134))))

(declare-fun b!94908 () Bool)

(assert (=> b!94908 (= e!61919 e!61917)))

(declare-fun c!15897 () Bool)

(assert (=> b!94908 (= c!15897 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9532 () Bool)

(assert (=> bm!9532 (= call!9535 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) (mask!6509 newMap!16) (ite c!15684 (ite c!15687 lt!46653 lt!46667) (extraKeys!2264 newMap!16)) (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94909 () Bool)

(assert (=> b!94909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> b!94909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))))))))

(assert (=> b!94909 (= e!61918 (= (apply!90 lt!47134 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94910 () Bool)

(assert (=> b!94910 (= e!61920 call!9535)))

(assert (= (and d!24899 c!15896) b!94903))

(assert (= (and d!24899 (not c!15896)) b!94904))

(assert (= (and b!94904 c!15898) b!94902))

(assert (= (and b!94904 (not c!15898)) b!94910))

(assert (= (or b!94902 b!94910) bm!9532))

(assert (= (and d!24899 res!47998) b!94901))

(assert (= (and b!94901 res!47995) b!94905))

(assert (= (and b!94905 res!47996) b!94900))

(assert (= (and b!94905 c!15895) b!94899))

(assert (= (and b!94905 (not c!15895)) b!94908))

(assert (= (and b!94899 res!47997) b!94909))

(assert (= (and b!94908 c!15897) b!94906))

(assert (= (and b!94908 (not c!15897)) b!94907))

(declare-fun b_lambda!4173 () Bool)

(assert (=> (not b_lambda!4173) (not b!94902)))

(assert (=> b!94902 t!5482))

(declare-fun b_and!5785 () Bool)

(assert (= b_and!5781 (and (=> t!5482 result!3197) b_and!5785)))

(assert (=> b!94902 t!5484))

(declare-fun b_and!5787 () Bool)

(assert (= b_and!5783 (and (=> t!5484 result!3199) b_and!5787)))

(declare-fun b_lambda!4175 () Bool)

(assert (=> (not b_lambda!4175) (not b!94909)))

(assert (=> b!94909 t!5482))

(declare-fun b_and!5789 () Bool)

(assert (= b_and!5785 (and (=> t!5482 result!3197) b_and!5789)))

(assert (=> b!94909 t!5484))

(declare-fun b_and!5791 () Bool)

(assert (= b_and!5787 (and (=> t!5484 result!3199) b_and!5791)))

(declare-fun m!102403 () Bool)

(assert (=> b!94902 m!102403))

(declare-fun m!102405 () Bool)

(assert (=> b!94902 m!102405))

(assert (=> b!94902 m!101341))

(declare-fun m!102407 () Bool)

(assert (=> b!94902 m!102407))

(assert (=> b!94902 m!101597))

(assert (=> b!94902 m!101341))

(assert (=> b!94902 m!101599))

(assert (=> b!94902 m!102403))

(declare-fun m!102409 () Bool)

(assert (=> b!94902 m!102409))

(assert (=> b!94902 m!101303))

(assert (=> b!94902 m!101597))

(assert (=> b!94899 m!101303))

(assert (=> b!94899 m!101303))

(declare-fun m!102411 () Bool)

(assert (=> b!94899 m!102411))

(assert (=> b!94900 m!101303))

(assert (=> b!94900 m!101303))

(assert (=> b!94900 m!101305))

(assert (=> b!94909 m!101303))

(declare-fun m!102413 () Bool)

(assert (=> b!94909 m!102413))

(assert (=> b!94909 m!101341))

(assert (=> b!94909 m!101597))

(assert (=> b!94909 m!101341))

(assert (=> b!94909 m!101599))

(assert (=> b!94909 m!101303))

(assert (=> b!94909 m!101597))

(declare-fun m!102415 () Bool)

(assert (=> b!94906 m!102415))

(assert (=> bm!9532 m!102415))

(declare-fun m!102417 () Bool)

(assert (=> b!94901 m!102417))

(declare-fun m!102419 () Bool)

(assert (=> d!24899 m!102419))

(assert (=> d!24899 m!101255))

(assert (=> b!94904 m!101303))

(assert (=> b!94904 m!101303))

(assert (=> b!94904 m!101305))

(declare-fun m!102421 () Bool)

(assert (=> b!94907 m!102421))

(assert (=> bm!9485 d!24899))

(declare-fun d!24901 () Bool)

(assert (=> d!24901 (arrayContainsKey!0 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000)))

(declare-fun lt!47138 () Unit!2800)

(declare-fun choose!13 (array!4177 (_ BitVec 64) (_ BitVec 32)) Unit!2800)

(assert (=> d!24901 (= lt!47138 (choose!13 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000))))

(assert (=> d!24901 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!24901 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000) lt!47138)))

(declare-fun bs!3898 () Bool)

(assert (= bs!3898 d!24901))

(assert (=> bs!3898 m!101535))

(declare-fun m!102423 () Bool)

(assert (=> bs!3898 m!102423))

(assert (=> b!94424 d!24901))

(declare-fun d!24903 () Bool)

(declare-fun res!47999 () Bool)

(declare-fun e!61921 () Bool)

(assert (=> d!24903 (=> res!47999 e!61921)))

(assert (=> d!24903 (= res!47999 (= (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) lt!46872))))

(assert (=> d!24903 (= (arrayContainsKey!0 (_keys!4116 newMap!16) lt!46872 #b00000000000000000000000000000000) e!61921)))

(declare-fun b!94911 () Bool)

(declare-fun e!61922 () Bool)

(assert (=> b!94911 (= e!61921 e!61922)))

(declare-fun res!48000 () Bool)

(assert (=> b!94911 (=> (not res!48000) (not e!61922))))

(assert (=> b!94911 (= res!48000 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94912 () Bool)

(assert (=> b!94912 (= e!61922 (arrayContainsKey!0 (_keys!4116 newMap!16) lt!46872 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24903 (not res!47999)) b!94911))

(assert (= (and b!94911 res!48000) b!94912))

(assert (=> d!24903 m!101303))

(declare-fun m!102425 () Bool)

(assert (=> b!94912 m!102425))

(assert (=> b!94424 d!24903))

(declare-fun b!94913 () Bool)

(declare-fun e!61923 () SeekEntryResult!254)

(declare-fun lt!47140 () SeekEntryResult!254)

(assert (=> b!94913 (= e!61923 (MissingZero!254 (index!3159 lt!47140)))))

(declare-fun b!94914 () Bool)

(declare-fun e!61925 () SeekEntryResult!254)

(declare-fun e!61924 () SeekEntryResult!254)

(assert (=> b!94914 (= e!61925 e!61924)))

(declare-fun lt!47141 () (_ BitVec 64))

(assert (=> b!94914 (= lt!47141 (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!47140)))))

(declare-fun c!15899 () Bool)

(assert (=> b!94914 (= c!15899 (= lt!47141 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94916 () Bool)

(assert (=> b!94916 (= e!61925 Undefined!254)))

(declare-fun b!94917 () Bool)

(declare-fun c!15900 () Bool)

(assert (=> b!94917 (= c!15900 (= lt!47141 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94917 (= e!61924 e!61923)))

(declare-fun b!94918 () Bool)

(assert (=> b!94918 (= e!61924 (Found!254 (index!3159 lt!47140)))))

(declare-fun d!24905 () Bool)

(declare-fun lt!47139 () SeekEntryResult!254)

(assert (=> d!24905 (and (or ((_ is Undefined!254) lt!47139) (not ((_ is Found!254) lt!47139)) (and (bvsge (index!3158 lt!47139) #b00000000000000000000000000000000) (bvslt (index!3158 lt!47139) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!47139) ((_ is Found!254) lt!47139) (not ((_ is MissingZero!254) lt!47139)) (and (bvsge (index!3157 lt!47139) #b00000000000000000000000000000000) (bvslt (index!3157 lt!47139) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!47139) ((_ is Found!254) lt!47139) ((_ is MissingZero!254) lt!47139) (not ((_ is MissingVacant!254) lt!47139)) (and (bvsge (index!3160 lt!47139) #b00000000000000000000000000000000) (bvslt (index!3160 lt!47139) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!47139) (ite ((_ is Found!254) lt!47139) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!47139)) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!254) lt!47139) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!47139)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!254) lt!47139) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!47139)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24905 (= lt!47139 e!61925)))

(declare-fun c!15901 () Bool)

(assert (=> d!24905 (= c!15901 (and ((_ is Intermediate!254) lt!47140) (undefined!1066 lt!47140)))))

(assert (=> d!24905 (= lt!47140 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (mask!6509 newMap!16)) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (=> d!24905 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24905 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (_keys!4116 newMap!16) (mask!6509 newMap!16)) lt!47139)))

(declare-fun b!94915 () Bool)

(assert (=> b!94915 (= e!61923 (seekKeyOrZeroReturnVacant!0 (x!12657 lt!47140) (index!3159 lt!47140) (index!3159 lt!47140) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (= (and d!24905 c!15901) b!94916))

(assert (= (and d!24905 (not c!15901)) b!94914))

(assert (= (and b!94914 c!15899) b!94918))

(assert (= (and b!94914 (not c!15899)) b!94917))

(assert (= (and b!94917 c!15900) b!94913))

(assert (= (and b!94917 (not c!15900)) b!94915))

(declare-fun m!102427 () Bool)

(assert (=> b!94914 m!102427))

(declare-fun m!102429 () Bool)

(assert (=> d!24905 m!102429))

(assert (=> d!24905 m!101255))

(declare-fun m!102431 () Bool)

(assert (=> d!24905 m!102431))

(assert (=> d!24905 m!101303))

(declare-fun m!102433 () Bool)

(assert (=> d!24905 m!102433))

(declare-fun m!102435 () Bool)

(assert (=> d!24905 m!102435))

(declare-fun m!102437 () Bool)

(assert (=> d!24905 m!102437))

(assert (=> d!24905 m!101303))

(assert (=> d!24905 m!102431))

(assert (=> b!94915 m!101303))

(declare-fun m!102439 () Bool)

(assert (=> b!94915 m!102439))

(assert (=> b!94424 d!24905))

(declare-fun d!24907 () Bool)

(declare-fun e!61926 () Bool)

(assert (=> d!24907 e!61926))

(declare-fun res!48001 () Bool)

(assert (=> d!24907 (=> res!48001 e!61926)))

(declare-fun lt!47144 () Bool)

(assert (=> d!24907 (= res!48001 (not lt!47144))))

(declare-fun lt!47142 () Bool)

(assert (=> d!24907 (= lt!47144 lt!47142)))

(declare-fun lt!47143 () Unit!2800)

(declare-fun e!61927 () Unit!2800)

(assert (=> d!24907 (= lt!47143 e!61927)))

(declare-fun c!15902 () Bool)

(assert (=> d!24907 (= c!15902 lt!47142)))

(assert (=> d!24907 (= lt!47142 (containsKey!150 (toList!766 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) lt!46969))))

(assert (=> d!24907 (= (contains!786 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) lt!46969) lt!47144)))

(declare-fun b!94919 () Bool)

(declare-fun lt!47145 () Unit!2800)

(assert (=> b!94919 (= e!61927 lt!47145)))

(assert (=> b!94919 (= lt!47145 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) lt!46969))))

(assert (=> b!94919 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) lt!46969))))

(declare-fun b!94920 () Bool)

(declare-fun Unit!2839 () Unit!2800)

(assert (=> b!94920 (= e!61927 Unit!2839)))

(declare-fun b!94921 () Bool)

(assert (=> b!94921 (= e!61926 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) lt!46969)))))

(assert (= (and d!24907 c!15902) b!94919))

(assert (= (and d!24907 (not c!15902)) b!94920))

(assert (= (and d!24907 (not res!48001)) b!94921))

(declare-fun m!102441 () Bool)

(assert (=> d!24907 m!102441))

(declare-fun m!102443 () Bool)

(assert (=> b!94919 m!102443))

(declare-fun m!102445 () Bool)

(assert (=> b!94919 m!102445))

(assert (=> b!94919 m!102445))

(declare-fun m!102447 () Bool)

(assert (=> b!94919 m!102447))

(assert (=> b!94921 m!102445))

(assert (=> b!94921 m!102445))

(assert (=> b!94921 m!102447))

(assert (=> b!94524 d!24907))

(declare-fun d!24909 () Bool)

(assert (=> d!24909 (= (apply!90 (+!126 lt!46959 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) lt!46960) (apply!90 lt!46959 lt!46960))))

(declare-fun lt!47146 () Unit!2800)

(assert (=> d!24909 (= lt!47146 (choose!573 lt!46959 lt!46963 (minValue!2322 newMap!16) lt!46960))))

(declare-fun e!61928 () Bool)

(assert (=> d!24909 e!61928))

(declare-fun res!48002 () Bool)

(assert (=> d!24909 (=> (not res!48002) (not e!61928))))

(assert (=> d!24909 (= res!48002 (contains!786 lt!46959 lt!46960))))

(assert (=> d!24909 (= (addApplyDifferent!66 lt!46959 lt!46963 (minValue!2322 newMap!16) lt!46960) lt!47146)))

(declare-fun b!94922 () Bool)

(assert (=> b!94922 (= e!61928 (not (= lt!46960 lt!46963)))))

(assert (= (and d!24909 res!48002) b!94922))

(declare-fun m!102449 () Bool)

(assert (=> d!24909 m!102449))

(assert (=> d!24909 m!101759))

(assert (=> d!24909 m!101761))

(assert (=> d!24909 m!101759))

(declare-fun m!102451 () Bool)

(assert (=> d!24909 m!102451))

(assert (=> d!24909 m!101769))

(assert (=> b!94524 d!24909))

(declare-fun d!24911 () Bool)

(assert (=> d!24911 (= (apply!90 (+!126 lt!46959 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) lt!46960) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46959 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))) lt!46960)))))

(declare-fun bs!3899 () Bool)

(assert (= bs!3899 d!24911))

(declare-fun m!102453 () Bool)

(assert (=> bs!3899 m!102453))

(assert (=> bs!3899 m!102453))

(declare-fun m!102455 () Bool)

(assert (=> bs!3899 m!102455))

(assert (=> b!94524 d!24911))

(declare-fun d!24913 () Bool)

(assert (=> d!24913 (= (apply!90 (+!126 lt!46956 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) lt!46957) (apply!90 lt!46956 lt!46957))))

(declare-fun lt!47147 () Unit!2800)

(assert (=> d!24913 (= lt!47147 (choose!573 lt!46956 lt!46961 (zeroValue!2322 newMap!16) lt!46957))))

(declare-fun e!61929 () Bool)

(assert (=> d!24913 e!61929))

(declare-fun res!48003 () Bool)

(assert (=> d!24913 (=> (not res!48003) (not e!61929))))

(assert (=> d!24913 (= res!48003 (contains!786 lt!46956 lt!46957))))

(assert (=> d!24913 (= (addApplyDifferent!66 lt!46956 lt!46961 (zeroValue!2322 newMap!16) lt!46957) lt!47147)))

(declare-fun b!94923 () Bool)

(assert (=> b!94923 (= e!61929 (not (= lt!46957 lt!46961)))))

(assert (= (and d!24913 res!48003) b!94923))

(declare-fun m!102457 () Bool)

(assert (=> d!24913 m!102457))

(assert (=> d!24913 m!101757))

(assert (=> d!24913 m!101777))

(assert (=> d!24913 m!101757))

(declare-fun m!102459 () Bool)

(assert (=> d!24913 m!102459))

(assert (=> d!24913 m!101773))

(assert (=> b!94524 d!24913))

(declare-fun d!24915 () Bool)

(assert (=> d!24915 (= (apply!90 (+!126 lt!46967 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) lt!46972) (apply!90 lt!46967 lt!46972))))

(declare-fun lt!47148 () Unit!2800)

(assert (=> d!24915 (= lt!47148 (choose!573 lt!46967 lt!46976 (minValue!2322 newMap!16) lt!46972))))

(declare-fun e!61930 () Bool)

(assert (=> d!24915 e!61930))

(declare-fun res!48004 () Bool)

(assert (=> d!24915 (=> (not res!48004) (not e!61930))))

(assert (=> d!24915 (= res!48004 (contains!786 lt!46967 lt!46972))))

(assert (=> d!24915 (= (addApplyDifferent!66 lt!46967 lt!46976 (minValue!2322 newMap!16) lt!46972) lt!47148)))

(declare-fun b!94924 () Bool)

(assert (=> b!94924 (= e!61930 (not (= lt!46972 lt!46976)))))

(assert (= (and d!24915 res!48004) b!94924))

(declare-fun m!102461 () Bool)

(assert (=> d!24915 m!102461))

(assert (=> d!24915 m!101747))

(assert (=> d!24915 m!101749))

(assert (=> d!24915 m!101747))

(declare-fun m!102463 () Bool)

(assert (=> d!24915 m!102463))

(assert (=> d!24915 m!101751))

(assert (=> b!94524 d!24915))

(declare-fun d!24917 () Bool)

(assert (=> d!24917 (= (apply!90 (+!126 lt!46956 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) lt!46957) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46956 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))) lt!46957)))))

(declare-fun bs!3900 () Bool)

(assert (= bs!3900 d!24917))

(declare-fun m!102465 () Bool)

(assert (=> bs!3900 m!102465))

(assert (=> bs!3900 m!102465))

(declare-fun m!102467 () Bool)

(assert (=> bs!3900 m!102467))

(assert (=> b!94524 d!24917))

(declare-fun d!24919 () Bool)

(declare-fun e!61931 () Bool)

(assert (=> d!24919 e!61931))

(declare-fun res!48005 () Bool)

(assert (=> d!24919 (=> (not res!48005) (not e!61931))))

(declare-fun lt!47150 () ListLongMap!1501)

(assert (=> d!24919 (= res!48005 (contains!786 lt!47150 (_1!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))))))

(declare-fun lt!47152 () List!1576)

(assert (=> d!24919 (= lt!47150 (ListLongMap!1502 lt!47152))))

(declare-fun lt!47149 () Unit!2800)

(declare-fun lt!47151 () Unit!2800)

(assert (=> d!24919 (= lt!47149 lt!47151)))

(assert (=> d!24919 (= (getValueByKey!146 lt!47152 (_1!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))))))

(assert (=> d!24919 (= lt!47151 (lemmaContainsTupThenGetReturnValue!65 lt!47152 (_1!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))))))

(assert (=> d!24919 (= lt!47152 (insertStrictlySorted!68 (toList!766 lt!46967) (_1!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))))))

(assert (=> d!24919 (= (+!126 lt!46967 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) lt!47150)))

(declare-fun b!94925 () Bool)

(declare-fun res!48006 () Bool)

(assert (=> b!94925 (=> (not res!48006) (not e!61931))))

(assert (=> b!94925 (= res!48006 (= (getValueByKey!146 (toList!766 lt!47150) (_1!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))))))))

(declare-fun b!94926 () Bool)

(assert (=> b!94926 (= e!61931 (contains!790 (toList!766 lt!47150) (tuple2!2305 lt!46976 (minValue!2322 newMap!16))))))

(assert (= (and d!24919 res!48005) b!94925))

(assert (= (and b!94925 res!48006) b!94926))

(declare-fun m!102469 () Bool)

(assert (=> d!24919 m!102469))

(declare-fun m!102471 () Bool)

(assert (=> d!24919 m!102471))

(declare-fun m!102473 () Bool)

(assert (=> d!24919 m!102473))

(declare-fun m!102475 () Bool)

(assert (=> d!24919 m!102475))

(declare-fun m!102477 () Bool)

(assert (=> b!94925 m!102477))

(declare-fun m!102479 () Bool)

(assert (=> b!94926 m!102479))

(assert (=> b!94524 d!24919))

(declare-fun d!24921 () Bool)

(assert (=> d!24921 (= (apply!90 lt!46959 lt!46960) (get!1272 (getValueByKey!146 (toList!766 lt!46959) lt!46960)))))

(declare-fun bs!3901 () Bool)

(assert (= bs!3901 d!24921))

(declare-fun m!102481 () Bool)

(assert (=> bs!3901 m!102481))

(assert (=> bs!3901 m!102481))

(declare-fun m!102483 () Bool)

(assert (=> bs!3901 m!102483))

(assert (=> b!94524 d!24921))

(declare-fun d!24923 () Bool)

(assert (=> d!24923 (= (apply!90 lt!46967 lt!46972) (get!1272 (getValueByKey!146 (toList!766 lt!46967) lt!46972)))))

(declare-fun bs!3902 () Bool)

(assert (= bs!3902 d!24923))

(declare-fun m!102485 () Bool)

(assert (=> bs!3902 m!102485))

(assert (=> bs!3902 m!102485))

(declare-fun m!102487 () Bool)

(assert (=> bs!3902 m!102487))

(assert (=> b!94524 d!24923))

(declare-fun d!24925 () Bool)

(declare-fun e!61932 () Bool)

(assert (=> d!24925 e!61932))

(declare-fun res!48007 () Bool)

(assert (=> d!24925 (=> (not res!48007) (not e!61932))))

(declare-fun lt!47154 () ListLongMap!1501)

(assert (=> d!24925 (= res!48007 (contains!786 lt!47154 (_1!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47156 () List!1576)

(assert (=> d!24925 (= lt!47154 (ListLongMap!1502 lt!47156))))

(declare-fun lt!47153 () Unit!2800)

(declare-fun lt!47155 () Unit!2800)

(assert (=> d!24925 (= lt!47153 lt!47155)))

(assert (=> d!24925 (= (getValueByKey!146 lt!47156 (_1!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24925 (= lt!47155 (lemmaContainsTupThenGetReturnValue!65 lt!47156 (_1!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24925 (= lt!47156 (insertStrictlySorted!68 (toList!766 lt!46958) (_1!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24925 (= (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) lt!47154)))

(declare-fun b!94927 () Bool)

(declare-fun res!48008 () Bool)

(assert (=> b!94927 (=> (not res!48008) (not e!61932))))

(assert (=> b!94927 (= res!48008 (= (getValueByKey!146 (toList!766 lt!47154) (_1!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94928 () Bool)

(assert (=> b!94928 (= e!61932 (contains!790 (toList!766 lt!47154) (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24925 res!48007) b!94927))

(assert (= (and b!94927 res!48008) b!94928))

(declare-fun m!102489 () Bool)

(assert (=> d!24925 m!102489))

(declare-fun m!102491 () Bool)

(assert (=> d!24925 m!102491))

(declare-fun m!102493 () Bool)

(assert (=> d!24925 m!102493))

(declare-fun m!102495 () Bool)

(assert (=> d!24925 m!102495))

(declare-fun m!102497 () Bool)

(assert (=> b!94927 m!102497))

(declare-fun m!102499 () Bool)

(assert (=> b!94928 m!102499))

(assert (=> b!94524 d!24925))

(declare-fun d!24927 () Bool)

(declare-fun e!61933 () Bool)

(assert (=> d!24927 e!61933))

(declare-fun res!48009 () Bool)

(assert (=> d!24927 (=> (not res!48009) (not e!61933))))

(declare-fun lt!47158 () ListLongMap!1501)

(assert (=> d!24927 (= res!48009 (contains!786 lt!47158 (_1!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))))))

(declare-fun lt!47160 () List!1576)

(assert (=> d!24927 (= lt!47158 (ListLongMap!1502 lt!47160))))

(declare-fun lt!47157 () Unit!2800)

(declare-fun lt!47159 () Unit!2800)

(assert (=> d!24927 (= lt!47157 lt!47159)))

(assert (=> d!24927 (= (getValueByKey!146 lt!47160 (_1!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))))))

(assert (=> d!24927 (= lt!47159 (lemmaContainsTupThenGetReturnValue!65 lt!47160 (_1!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))))))

(assert (=> d!24927 (= lt!47160 (insertStrictlySorted!68 (toList!766 lt!46959) (_1!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))))))

(assert (=> d!24927 (= (+!126 lt!46959 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))) lt!47158)))

(declare-fun b!94929 () Bool)

(declare-fun res!48010 () Bool)

(assert (=> b!94929 (=> (not res!48010) (not e!61933))))

(assert (=> b!94929 (= res!48010 (= (getValueByKey!146 (toList!766 lt!47158) (_1!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46963 (minValue!2322 newMap!16))))))))

(declare-fun b!94930 () Bool)

(assert (=> b!94930 (= e!61933 (contains!790 (toList!766 lt!47158) (tuple2!2305 lt!46963 (minValue!2322 newMap!16))))))

(assert (= (and d!24927 res!48009) b!94929))

(assert (= (and b!94929 res!48010) b!94930))

(declare-fun m!102501 () Bool)

(assert (=> d!24927 m!102501))

(declare-fun m!102503 () Bool)

(assert (=> d!24927 m!102503))

(declare-fun m!102505 () Bool)

(assert (=> d!24927 m!102505))

(declare-fun m!102507 () Bool)

(assert (=> d!24927 m!102507))

(declare-fun m!102509 () Bool)

(assert (=> b!94929 m!102509))

(declare-fun m!102511 () Bool)

(assert (=> b!94930 m!102511))

(assert (=> b!94524 d!24927))

(declare-fun b!94931 () Bool)

(declare-fun e!61939 () Bool)

(declare-fun e!61938 () Bool)

(assert (=> b!94931 (= e!61939 e!61938)))

(assert (=> b!94931 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!48013 () Bool)

(declare-fun lt!47166 () ListLongMap!1501)

(assert (=> b!94931 (= res!48013 (contains!786 lt!47166 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94931 (=> (not res!48013) (not e!61938))))

(declare-fun b!94932 () Bool)

(declare-fun e!61934 () Bool)

(assert (=> b!94932 (= e!61934 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94932 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!94933 () Bool)

(declare-fun res!48011 () Bool)

(declare-fun e!61936 () Bool)

(assert (=> b!94933 (=> (not res!48011) (not e!61936))))

(assert (=> b!94933 (= res!48011 (not (contains!786 lt!47166 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94934 () Bool)

(declare-fun lt!47165 () Unit!2800)

(declare-fun lt!47163 () Unit!2800)

(assert (=> b!94934 (= lt!47165 lt!47163)))

(declare-fun lt!47162 () (_ BitVec 64))

(declare-fun lt!47167 () V!3129)

(declare-fun lt!47164 () ListLongMap!1501)

(declare-fun lt!47161 () (_ BitVec 64))

(assert (=> b!94934 (not (contains!786 (+!126 lt!47164 (tuple2!2305 lt!47162 lt!47167)) lt!47161))))

(assert (=> b!94934 (= lt!47163 (addStillNotContains!39 lt!47164 lt!47162 lt!47167 lt!47161))))

(assert (=> b!94934 (= lt!47161 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94934 (= lt!47167 (get!1267 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94934 (= lt!47162 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!9536 () ListLongMap!1501)

(assert (=> b!94934 (= lt!47164 call!9536)))

(declare-fun e!61940 () ListLongMap!1501)

(assert (=> b!94934 (= e!61940 (+!126 call!9536 (tuple2!2305 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000) (get!1267 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94935 () Bool)

(declare-fun e!61935 () ListLongMap!1501)

(assert (=> b!94935 (= e!61935 (ListLongMap!1502 Nil!1573))))

(declare-fun d!24929 () Bool)

(assert (=> d!24929 e!61936))

(declare-fun res!48014 () Bool)

(assert (=> d!24929 (=> (not res!48014) (not e!61936))))

(assert (=> d!24929 (= res!48014 (not (contains!786 lt!47166 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24929 (= lt!47166 e!61935)))

(declare-fun c!15904 () Bool)

(assert (=> d!24929 (= c!15904 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24929 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24929 (= (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47166)))

(declare-fun b!94936 () Bool)

(assert (=> b!94936 (= e!61935 e!61940)))

(declare-fun c!15906 () Bool)

(assert (=> b!94936 (= c!15906 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94937 () Bool)

(assert (=> b!94937 (= e!61936 e!61939)))

(declare-fun c!15903 () Bool)

(assert (=> b!94937 (= c!15903 e!61934)))

(declare-fun res!48012 () Bool)

(assert (=> b!94937 (=> (not res!48012) (not e!61934))))

(assert (=> b!94937 (= res!48012 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun e!61937 () Bool)

(declare-fun b!94938 () Bool)

(assert (=> b!94938 (= e!61937 (= lt!47166 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16))))))

(declare-fun b!94939 () Bool)

(assert (=> b!94939 (= e!61937 (isEmpty!355 lt!47166))))

(declare-fun b!94940 () Bool)

(assert (=> b!94940 (= e!61939 e!61937)))

(declare-fun c!15905 () Bool)

(assert (=> b!94940 (= c!15905 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9533 () Bool)

(assert (=> bm!9533 (= call!9536 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2435 newMap!16)))))

(declare-fun b!94941 () Bool)

(assert (=> b!94941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> b!94941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647))))))

(assert (=> b!94941 (= e!61938 (= (apply!90 lt!47166 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (ite (or c!15684 c!15685) (_values!2418 newMap!16) lt!46647)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94942 () Bool)

(assert (=> b!94942 (= e!61940 call!9536)))

(assert (= (and d!24929 c!15904) b!94935))

(assert (= (and d!24929 (not c!15904)) b!94936))

(assert (= (and b!94936 c!15906) b!94934))

(assert (= (and b!94936 (not c!15906)) b!94942))

(assert (= (or b!94934 b!94942) bm!9533))

(assert (= (and d!24929 res!48014) b!94933))

(assert (= (and b!94933 res!48011) b!94937))

(assert (= (and b!94937 res!48012) b!94932))

(assert (= (and b!94937 c!15903) b!94931))

(assert (= (and b!94937 (not c!15903)) b!94940))

(assert (= (and b!94931 res!48013) b!94941))

(assert (= (and b!94940 c!15905) b!94938))

(assert (= (and b!94940 (not c!15905)) b!94939))

(declare-fun b_lambda!4177 () Bool)

(assert (=> (not b_lambda!4177) (not b!94934)))

(assert (=> b!94934 t!5482))

(declare-fun b_and!5793 () Bool)

(assert (= b_and!5789 (and (=> t!5482 result!3197) b_and!5793)))

(assert (=> b!94934 t!5484))

(declare-fun b_and!5795 () Bool)

(assert (= b_and!5791 (and (=> t!5484 result!3199) b_and!5795)))

(declare-fun b_lambda!4179 () Bool)

(assert (=> (not b_lambda!4179) (not b!94941)))

(assert (=> b!94941 t!5482))

(declare-fun b_and!5797 () Bool)

(assert (= b_and!5793 (and (=> t!5482 result!3197) b_and!5797)))

(assert (=> b!94941 t!5484))

(declare-fun b_and!5799 () Bool)

(assert (= b_and!5795 (and (=> t!5484 result!3199) b_and!5799)))

(declare-fun m!102513 () Bool)

(assert (=> b!94934 m!102513))

(declare-fun m!102515 () Bool)

(assert (=> b!94934 m!102515))

(assert (=> b!94934 m!101341))

(declare-fun m!102517 () Bool)

(assert (=> b!94934 m!102517))

(assert (=> b!94934 m!101781))

(assert (=> b!94934 m!101341))

(assert (=> b!94934 m!101783))

(assert (=> b!94934 m!102513))

(declare-fun m!102519 () Bool)

(assert (=> b!94934 m!102519))

(assert (=> b!94934 m!101303))

(assert (=> b!94934 m!101781))

(assert (=> b!94931 m!101303))

(assert (=> b!94931 m!101303))

(declare-fun m!102521 () Bool)

(assert (=> b!94931 m!102521))

(assert (=> b!94932 m!101303))

(assert (=> b!94932 m!101303))

(assert (=> b!94932 m!101305))

(assert (=> b!94941 m!101303))

(declare-fun m!102523 () Bool)

(assert (=> b!94941 m!102523))

(assert (=> b!94941 m!101341))

(assert (=> b!94941 m!101781))

(assert (=> b!94941 m!101341))

(assert (=> b!94941 m!101783))

(assert (=> b!94941 m!101303))

(assert (=> b!94941 m!101781))

(declare-fun m!102525 () Bool)

(assert (=> b!94938 m!102525))

(assert (=> bm!9533 m!102525))

(declare-fun m!102527 () Bool)

(assert (=> b!94933 m!102527))

(declare-fun m!102529 () Bool)

(assert (=> d!24929 m!102529))

(assert (=> d!24929 m!101255))

(assert (=> b!94936 m!101303))

(assert (=> b!94936 m!101303))

(assert (=> b!94936 m!101305))

(declare-fun m!102531 () Bool)

(assert (=> b!94939 m!102531))

(assert (=> b!94524 d!24929))

(declare-fun d!24931 () Bool)

(assert (=> d!24931 (= (apply!90 (+!126 lt!46967 (tuple2!2305 lt!46976 (minValue!2322 newMap!16))) lt!46972) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46967 (tuple2!2305 lt!46976 (minValue!2322 newMap!16)))) lt!46972)))))

(declare-fun bs!3903 () Bool)

(assert (= bs!3903 d!24931))

(declare-fun m!102533 () Bool)

(assert (=> bs!3903 m!102533))

(assert (=> bs!3903 m!102533))

(declare-fun m!102535 () Bool)

(assert (=> bs!3903 m!102535))

(assert (=> b!94524 d!24931))

(declare-fun d!24933 () Bool)

(assert (=> d!24933 (= (apply!90 lt!46956 lt!46957) (get!1272 (getValueByKey!146 (toList!766 lt!46956) lt!46957)))))

(declare-fun bs!3904 () Bool)

(assert (= bs!3904 d!24933))

(declare-fun m!102537 () Bool)

(assert (=> bs!3904 m!102537))

(assert (=> bs!3904 m!102537))

(declare-fun m!102539 () Bool)

(assert (=> bs!3904 m!102539))

(assert (=> b!94524 d!24933))

(declare-fun d!24935 () Bool)

(assert (=> d!24935 (contains!786 (+!126 lt!46958 (tuple2!2305 lt!46975 (zeroValue!2322 newMap!16))) lt!46969)))

(declare-fun lt!47168 () Unit!2800)

(assert (=> d!24935 (= lt!47168 (choose!572 lt!46958 lt!46975 (zeroValue!2322 newMap!16) lt!46969))))

(assert (=> d!24935 (contains!786 lt!46958 lt!46969)))

(assert (=> d!24935 (= (addStillContains!66 lt!46958 lt!46975 (zeroValue!2322 newMap!16) lt!46969) lt!47168)))

(declare-fun bs!3905 () Bool)

(assert (= bs!3905 d!24935))

(assert (=> bs!3905 m!101753))

(assert (=> bs!3905 m!101753))

(assert (=> bs!3905 m!101755))

(declare-fun m!102541 () Bool)

(assert (=> bs!3905 m!102541))

(declare-fun m!102543 () Bool)

(assert (=> bs!3905 m!102543))

(assert (=> b!94524 d!24935))

(declare-fun d!24937 () Bool)

(declare-fun e!61941 () Bool)

(assert (=> d!24937 e!61941))

(declare-fun res!48015 () Bool)

(assert (=> d!24937 (=> (not res!48015) (not e!61941))))

(declare-fun lt!47170 () ListLongMap!1501)

(assert (=> d!24937 (= res!48015 (contains!786 lt!47170 (_1!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))))))

(declare-fun lt!47172 () List!1576)

(assert (=> d!24937 (= lt!47170 (ListLongMap!1502 lt!47172))))

(declare-fun lt!47169 () Unit!2800)

(declare-fun lt!47171 () Unit!2800)

(assert (=> d!24937 (= lt!47169 lt!47171)))

(assert (=> d!24937 (= (getValueByKey!146 lt!47172 (_1!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24937 (= lt!47171 (lemmaContainsTupThenGetReturnValue!65 lt!47172 (_1!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24937 (= lt!47172 (insertStrictlySorted!68 (toList!766 lt!46956) (_1!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) (_2!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))))))

(assert (=> d!24937 (= (+!126 lt!46956 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))) lt!47170)))

(declare-fun b!94943 () Bool)

(declare-fun res!48016 () Bool)

(assert (=> b!94943 (=> (not res!48016) (not e!61941))))

(assert (=> b!94943 (= res!48016 (= (getValueByKey!146 (toList!766 lt!47170) (_1!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))))))))

(declare-fun b!94944 () Bool)

(assert (=> b!94944 (= e!61941 (contains!790 (toList!766 lt!47170) (tuple2!2305 lt!46961 (zeroValue!2322 newMap!16))))))

(assert (= (and d!24937 res!48015) b!94943))

(assert (= (and b!94943 res!48016) b!94944))

(declare-fun m!102545 () Bool)

(assert (=> d!24937 m!102545))

(declare-fun m!102547 () Bool)

(assert (=> d!24937 m!102547))

(declare-fun m!102549 () Bool)

(assert (=> d!24937 m!102549))

(declare-fun m!102551 () Bool)

(assert (=> d!24937 m!102551))

(declare-fun m!102553 () Bool)

(assert (=> b!94943 m!102553))

(declare-fun m!102555 () Bool)

(assert (=> b!94944 m!102555))

(assert (=> b!94524 d!24937))

(declare-fun d!24939 () Bool)

(declare-fun e!61942 () Bool)

(assert (=> d!24939 e!61942))

(declare-fun res!48017 () Bool)

(assert (=> d!24939 (=> res!48017 e!61942)))

(declare-fun lt!47175 () Bool)

(assert (=> d!24939 (= res!48017 (not lt!47175))))

(declare-fun lt!47173 () Bool)

(assert (=> d!24939 (= lt!47175 lt!47173)))

(declare-fun lt!47174 () Unit!2800)

(declare-fun e!61943 () Unit!2800)

(assert (=> d!24939 (= lt!47174 e!61943)))

(declare-fun c!15907 () Bool)

(assert (=> d!24939 (= c!15907 lt!47173)))

(assert (=> d!24939 (= lt!47173 (containsKey!150 (toList!766 lt!46894) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24939 (= (contains!786 lt!46894 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47175)))

(declare-fun b!94945 () Bool)

(declare-fun lt!47176 () Unit!2800)

(assert (=> b!94945 (= e!61943 lt!47176)))

(assert (=> b!94945 (= lt!47176 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46894) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94945 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94946 () Bool)

(declare-fun Unit!2840 () Unit!2800)

(assert (=> b!94946 (= e!61943 Unit!2840)))

(declare-fun b!94947 () Bool)

(assert (=> b!94947 (= e!61942 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24939 c!15907) b!94945))

(assert (= (and d!24939 (not c!15907)) b!94946))

(assert (= (and d!24939 (not res!48017)) b!94947))

(declare-fun m!102557 () Bool)

(assert (=> d!24939 m!102557))

(declare-fun m!102559 () Bool)

(assert (=> b!94945 m!102559))

(declare-fun m!102561 () Bool)

(assert (=> b!94945 m!102561))

(assert (=> b!94945 m!102561))

(declare-fun m!102563 () Bool)

(assert (=> b!94945 m!102563))

(assert (=> b!94947 m!102561))

(assert (=> b!94947 m!102561))

(assert (=> b!94947 m!102563))

(assert (=> d!24621 d!24939))

(assert (=> d!24621 d!24535))

(assert (=> b!94273 d!24677))

(declare-fun lt!47177 () Bool)

(declare-fun d!24941 () Bool)

(assert (=> d!24941 (= lt!47177 (select (content!98 (toList!766 lt!46840)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!61944 () Bool)

(assert (=> d!24941 (= lt!47177 e!61944)))

(declare-fun res!48019 () Bool)

(assert (=> d!24941 (=> (not res!48019) (not e!61944))))

(assert (=> d!24941 (= res!48019 ((_ is Cons!1572) (toList!766 lt!46840)))))

(assert (=> d!24941 (= (contains!790 (toList!766 lt!46840) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47177)))

(declare-fun b!94948 () Bool)

(declare-fun e!61945 () Bool)

(assert (=> b!94948 (= e!61944 e!61945)))

(declare-fun res!48018 () Bool)

(assert (=> b!94948 (=> res!48018 e!61945)))

(assert (=> b!94948 (= res!48018 (= (h!2164 (toList!766 lt!46840)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94949 () Bool)

(assert (=> b!94949 (= e!61945 (contains!790 (t!5469 (toList!766 lt!46840)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24941 res!48019) b!94948))

(assert (= (and b!94948 (not res!48018)) b!94949))

(declare-fun m!102565 () Bool)

(assert (=> d!24941 m!102565))

(declare-fun m!102567 () Bool)

(assert (=> d!24941 m!102567))

(declare-fun m!102569 () Bool)

(assert (=> b!94949 m!102569))

(assert (=> b!94377 d!24941))

(declare-fun b!94950 () Bool)

(declare-fun e!61946 () (_ BitVec 32))

(declare-fun call!9537 () (_ BitVec 32))

(assert (=> b!94950 (= e!61946 call!9537)))

(declare-fun b!94951 () Bool)

(assert (=> b!94951 (= e!61946 (bvadd #b00000000000000000000000000000001 call!9537))))

(declare-fun b!94952 () Bool)

(declare-fun e!61947 () (_ BitVec 32))

(assert (=> b!94952 (= e!61947 e!61946)))

(declare-fun c!15908 () Bool)

(assert (=> b!94952 (= c!15908 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9534 () Bool)

(assert (=> bm!9534 (= call!9537 (arrayCountValidKeys!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun d!24943 () Bool)

(declare-fun lt!47178 () (_ BitVec 32))

(assert (=> d!24943 (and (bvsge lt!47178 #b00000000000000000000000000000000) (bvsle lt!47178 (bvsub (size!2233 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!24943 (= lt!47178 e!61947)))

(declare-fun c!15909 () Bool)

(assert (=> d!24943 (= c!15909 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24943 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2233 (_keys!4116 newMap!16)) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24943 (= (arrayCountValidKeys!0 (_keys!4116 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))) lt!47178)))

(declare-fun b!94953 () Bool)

(assert (=> b!94953 (= e!61947 #b00000000000000000000000000000000)))

(assert (= (and d!24943 c!15909) b!94953))

(assert (= (and d!24943 (not c!15909)) b!94952))

(assert (= (and b!94952 c!15908) b!94951))

(assert (= (and b!94952 (not c!15908)) b!94950))

(assert (= (or b!94951 b!94950) bm!9534))

(assert (=> b!94952 m!101907))

(assert (=> b!94952 m!101907))

(assert (=> b!94952 m!101909))

(declare-fun m!102571 () Bool)

(assert (=> bm!9534 m!102571))

(assert (=> bm!9453 d!24943))

(assert (=> b!94533 d!24677))

(declare-fun d!24945 () Bool)

(declare-fun e!61948 () Bool)

(assert (=> d!24945 e!61948))

(declare-fun res!48020 () Bool)

(assert (=> d!24945 (=> res!48020 e!61948)))

(declare-fun lt!47181 () Bool)

(assert (=> d!24945 (= res!48020 (not lt!47181))))

(declare-fun lt!47179 () Bool)

(assert (=> d!24945 (= lt!47181 lt!47179)))

(declare-fun lt!47180 () Unit!2800)

(declare-fun e!61949 () Unit!2800)

(assert (=> d!24945 (= lt!47180 e!61949)))

(declare-fun c!15910 () Bool)

(assert (=> d!24945 (= c!15910 lt!47179)))

(assert (=> d!24945 (= lt!47179 (containsKey!150 (toList!766 lt!46894) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24945 (= (contains!786 lt!46894 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47181)))

(declare-fun b!94954 () Bool)

(declare-fun lt!47182 () Unit!2800)

(assert (=> b!94954 (= e!61949 lt!47182)))

(assert (=> b!94954 (= lt!47182 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46894) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94954 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94955 () Bool)

(declare-fun Unit!2841 () Unit!2800)

(assert (=> b!94955 (= e!61949 Unit!2841)))

(declare-fun b!94956 () Bool)

(assert (=> b!94956 (= e!61948 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24945 c!15910) b!94954))

(assert (= (and d!24945 (not c!15910)) b!94955))

(assert (= (and d!24945 (not res!48020)) b!94956))

(declare-fun m!102573 () Bool)

(assert (=> d!24945 m!102573))

(declare-fun m!102575 () Bool)

(assert (=> b!94954 m!102575))

(declare-fun m!102577 () Bool)

(assert (=> b!94954 m!102577))

(assert (=> b!94954 m!102577))

(declare-fun m!102579 () Bool)

(assert (=> b!94954 m!102579))

(assert (=> b!94956 m!102577))

(assert (=> b!94956 m!102577))

(assert (=> b!94956 m!102579))

(assert (=> b!94453 d!24945))

(declare-fun d!24947 () Bool)

(declare-fun e!61950 () Bool)

(assert (=> d!24947 e!61950))

(declare-fun res!48021 () Bool)

(assert (=> d!24947 (=> (not res!48021) (not e!61950))))

(declare-fun lt!47184 () ListLongMap!1501)

(assert (=> d!24947 (= res!48021 (contains!786 lt!47184 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47186 () List!1576)

(assert (=> d!24947 (= lt!47184 (ListLongMap!1502 lt!47186))))

(declare-fun lt!47183 () Unit!2800)

(declare-fun lt!47185 () Unit!2800)

(assert (=> d!24947 (= lt!47183 lt!47185)))

(assert (=> d!24947 (= (getValueByKey!146 lt!47186 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24947 (= lt!47185 (lemmaContainsTupThenGetReturnValue!65 lt!47186 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24947 (= lt!47186 (insertStrictlySorted!68 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24947 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47184)))

(declare-fun b!94957 () Bool)

(declare-fun res!48022 () Bool)

(assert (=> b!94957 (=> (not res!48022) (not e!61950))))

(assert (=> b!94957 (= res!48022 (= (getValueByKey!146 (toList!766 lt!47184) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94958 () Bool)

(assert (=> b!94958 (= e!61950 (contains!790 (toList!766 lt!47184) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24947 res!48021) b!94957))

(assert (= (and b!94957 res!48022) b!94958))

(declare-fun m!102581 () Bool)

(assert (=> d!24947 m!102581))

(declare-fun m!102583 () Bool)

(assert (=> d!24947 m!102583))

(declare-fun m!102585 () Bool)

(assert (=> d!24947 m!102585))

(declare-fun m!102587 () Bool)

(assert (=> d!24947 m!102587))

(declare-fun m!102589 () Bool)

(assert (=> b!94957 m!102589))

(declare-fun m!102591 () Bool)

(assert (=> b!94958 m!102591))

(assert (=> b!94515 d!24947))

(assert (=> b!94515 d!24567))

(declare-fun b!94959 () Bool)

(declare-fun e!61958 () Unit!2800)

(declare-fun Unit!2842 () Unit!2800)

(assert (=> b!94959 (= e!61958 Unit!2842)))

(declare-fun b!94960 () Bool)

(declare-fun e!61963 () ListLongMap!1501)

(declare-fun call!9538 () ListLongMap!1501)

(assert (=> b!94960 (= e!61963 call!9538)))

(declare-fun b!94961 () Bool)

(declare-fun e!61952 () ListLongMap!1501)

(declare-fun call!9543 () ListLongMap!1501)

(assert (=> b!94961 (= e!61952 call!9543)))

(declare-fun b!94962 () Bool)

(declare-fun e!61960 () Bool)

(declare-fun call!9541 () Bool)

(assert (=> b!94962 (= e!61960 (not call!9541))))

(declare-fun bm!9535 () Bool)

(declare-fun lt!47208 () ListLongMap!1501)

(assert (=> bm!9535 (= call!9541 (contains!786 lt!47208 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94963 () Bool)

(assert (=> b!94963 (= e!61952 call!9538)))

(declare-fun bm!9536 () Bool)

(declare-fun call!9542 () ListLongMap!1501)

(assert (=> bm!9536 (= call!9538 call!9542)))

(declare-fun c!15915 () Bool)

(declare-fun bm!9537 () Bool)

(declare-fun call!9539 () ListLongMap!1501)

(declare-fun call!9540 () ListLongMap!1501)

(declare-fun c!15916 () Bool)

(assert (=> bm!9537 (= call!9542 (+!126 (ite c!15916 call!9540 (ite c!15915 call!9539 call!9543)) (ite (or c!15916 c!15915) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9538 () Bool)

(assert (=> bm!9538 (= call!9543 call!9539)))

(declare-fun b!94965 () Bool)

(declare-fun c!15913 () Bool)

(assert (=> b!94965 (= c!15913 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94965 (= e!61963 e!61952)))

(declare-fun b!94966 () Bool)

(declare-fun e!61951 () ListLongMap!1501)

(assert (=> b!94966 (= e!61951 e!61963)))

(assert (=> b!94966 (= c!15915 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94967 () Bool)

(declare-fun e!61955 () Bool)

(declare-fun e!61962 () Bool)

(assert (=> b!94967 (= e!61955 e!61962)))

(declare-fun c!15914 () Bool)

(assert (=> b!94967 (= c!15914 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94968 () Bool)

(assert (=> b!94968 (= e!61951 (+!126 call!9542 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9539 () Bool)

(assert (=> bm!9539 (= call!9539 call!9540)))

(declare-fun e!61961 () Bool)

(declare-fun b!94969 () Bool)

(assert (=> b!94969 (= e!61961 (= (apply!90 lt!47208 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94969 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))))))

(assert (=> b!94969 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94970 () Bool)

(declare-fun e!61959 () Bool)

(assert (=> b!94970 (= e!61959 (= (apply!90 lt!47208 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!94971 () Bool)

(declare-fun res!48023 () Bool)

(assert (=> b!94971 (=> (not res!48023) (not e!61955))))

(assert (=> b!94971 (= res!48023 e!61960)))

(declare-fun c!15911 () Bool)

(assert (=> b!94971 (= c!15911 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!94972 () Bool)

(declare-fun res!48028 () Bool)

(assert (=> b!94972 (=> (not res!48028) (not e!61955))))

(declare-fun e!61957 () Bool)

(assert (=> b!94972 (= res!48028 e!61957)))

(declare-fun res!48024 () Bool)

(assert (=> b!94972 (=> res!48024 e!61957)))

(declare-fun e!61954 () Bool)

(assert (=> b!94972 (= res!48024 (not e!61954))))

(declare-fun res!48030 () Bool)

(assert (=> b!94972 (=> (not res!48030) (not e!61954))))

(assert (=> b!94972 (= res!48030 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9540 () Bool)

(declare-fun call!9544 () Bool)

(assert (=> bm!9540 (= call!9544 (contains!786 lt!47208 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94973 () Bool)

(assert (=> b!94973 (= e!61954 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94974 () Bool)

(assert (=> b!94974 (= e!61957 e!61961)))

(declare-fun res!48025 () Bool)

(assert (=> b!94974 (=> (not res!48025) (not e!61961))))

(assert (=> b!94974 (= res!48025 (contains!786 lt!47208 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94974 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!94964 () Bool)

(declare-fun lt!47197 () Unit!2800)

(assert (=> b!94964 (= e!61958 lt!47197)))

(declare-fun lt!47189 () ListLongMap!1501)

(assert (=> b!94964 (= lt!47189 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47206 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47206 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47200 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47200 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47202 () Unit!2800)

(assert (=> b!94964 (= lt!47202 (addStillContains!66 lt!47189 lt!47206 (zeroValue!2322 newMap!16) lt!47200))))

(assert (=> b!94964 (contains!786 (+!126 lt!47189 (tuple2!2305 lt!47206 (zeroValue!2322 newMap!16))) lt!47200)))

(declare-fun lt!47205 () Unit!2800)

(assert (=> b!94964 (= lt!47205 lt!47202)))

(declare-fun lt!47190 () ListLongMap!1501)

(assert (=> b!94964 (= lt!47190 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47194 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47194 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47191 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47191 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47195 () Unit!2800)

(assert (=> b!94964 (= lt!47195 (addApplyDifferent!66 lt!47190 lt!47194 (minValue!2322 newMap!16) lt!47191))))

(assert (=> b!94964 (= (apply!90 (+!126 lt!47190 (tuple2!2305 lt!47194 (minValue!2322 newMap!16))) lt!47191) (apply!90 lt!47190 lt!47191))))

(declare-fun lt!47199 () Unit!2800)

(assert (=> b!94964 (= lt!47199 lt!47195)))

(declare-fun lt!47187 () ListLongMap!1501)

(assert (=> b!94964 (= lt!47187 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47192 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47188 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47188 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47196 () Unit!2800)

(assert (=> b!94964 (= lt!47196 (addApplyDifferent!66 lt!47187 lt!47192 (zeroValue!2322 newMap!16) lt!47188))))

(assert (=> b!94964 (= (apply!90 (+!126 lt!47187 (tuple2!2305 lt!47192 (zeroValue!2322 newMap!16))) lt!47188) (apply!90 lt!47187 lt!47188))))

(declare-fun lt!47204 () Unit!2800)

(assert (=> b!94964 (= lt!47204 lt!47196)))

(declare-fun lt!47198 () ListLongMap!1501)

(assert (=> b!94964 (= lt!47198 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47207 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47207 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47203 () (_ BitVec 64))

(assert (=> b!94964 (= lt!47203 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94964 (= lt!47197 (addApplyDifferent!66 lt!47198 lt!47207 (minValue!2322 newMap!16) lt!47203))))

(assert (=> b!94964 (= (apply!90 (+!126 lt!47198 (tuple2!2305 lt!47207 (minValue!2322 newMap!16))) lt!47203) (apply!90 lt!47198 lt!47203))))

(declare-fun d!24949 () Bool)

(assert (=> d!24949 e!61955))

(declare-fun res!48031 () Bool)

(assert (=> d!24949 (=> (not res!48031) (not e!61955))))

(assert (=> d!24949 (= res!48031 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!47201 () ListLongMap!1501)

(assert (=> d!24949 (= lt!47208 lt!47201)))

(declare-fun lt!47193 () Unit!2800)

(assert (=> d!24949 (= lt!47193 e!61958)))

(declare-fun c!15912 () Bool)

(declare-fun e!61953 () Bool)

(assert (=> d!24949 (= c!15912 e!61953)))

(declare-fun res!48029 () Bool)

(assert (=> d!24949 (=> (not res!48029) (not e!61953))))

(assert (=> d!24949 (= res!48029 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24949 (= lt!47201 e!61951)))

(assert (=> d!24949 (= c!15916 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24949 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24949 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47208)))

(declare-fun b!94975 () Bool)

(declare-fun e!61956 () Bool)

(assert (=> b!94975 (= e!61956 (= (apply!90 lt!47208 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!94976 () Bool)

(assert (=> b!94976 (= e!61953 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94977 () Bool)

(assert (=> b!94977 (= e!61960 e!61956)))

(declare-fun res!48027 () Bool)

(assert (=> b!94977 (= res!48027 call!9541)))

(assert (=> b!94977 (=> (not res!48027) (not e!61956))))

(declare-fun b!94978 () Bool)

(assert (=> b!94978 (= e!61962 e!61959)))

(declare-fun res!48026 () Bool)

(assert (=> b!94978 (= res!48026 call!9544)))

(assert (=> b!94978 (=> (not res!48026) (not e!61959))))

(declare-fun bm!9541 () Bool)

(assert (=> bm!9541 (= call!9540 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!94979 () Bool)

(assert (=> b!94979 (= e!61962 (not call!9544))))

(assert (= (and d!24949 c!15916) b!94968))

(assert (= (and d!24949 (not c!15916)) b!94966))

(assert (= (and b!94966 c!15915) b!94960))

(assert (= (and b!94966 (not c!15915)) b!94965))

(assert (= (and b!94965 c!15913) b!94963))

(assert (= (and b!94965 (not c!15913)) b!94961))

(assert (= (or b!94963 b!94961) bm!9538))

(assert (= (or b!94960 bm!9538) bm!9539))

(assert (= (or b!94960 b!94963) bm!9536))

(assert (= (or b!94968 bm!9539) bm!9541))

(assert (= (or b!94968 bm!9536) bm!9537))

(assert (= (and d!24949 res!48029) b!94976))

(assert (= (and d!24949 c!15912) b!94964))

(assert (= (and d!24949 (not c!15912)) b!94959))

(assert (= (and d!24949 res!48031) b!94972))

(assert (= (and b!94972 res!48030) b!94973))

(assert (= (and b!94972 (not res!48024)) b!94974))

(assert (= (and b!94974 res!48025) b!94969))

(assert (= (and b!94972 res!48028) b!94971))

(assert (= (and b!94971 c!15911) b!94977))

(assert (= (and b!94971 (not c!15911)) b!94962))

(assert (= (and b!94977 res!48027) b!94975))

(assert (= (or b!94977 b!94962) bm!9535))

(assert (= (and b!94971 res!48023) b!94967))

(assert (= (and b!94967 c!15914) b!94978))

(assert (= (and b!94967 (not c!15914)) b!94979))

(assert (= (and b!94978 res!48026) b!94970))

(assert (= (or b!94978 b!94979) bm!9540))

(declare-fun b_lambda!4181 () Bool)

(assert (=> (not b_lambda!4181) (not b!94969)))

(assert (=> b!94969 t!5482))

(declare-fun b_and!5801 () Bool)

(assert (= b_and!5797 (and (=> t!5482 result!3197) b_and!5801)))

(assert (=> b!94969 t!5484))

(declare-fun b_and!5803 () Bool)

(assert (= b_and!5799 (and (=> t!5484 result!3199) b_and!5803)))

(declare-fun m!102593 () Bool)

(assert (=> b!94968 m!102593))

(assert (=> b!94973 m!101303))

(assert (=> b!94973 m!101303))

(assert (=> b!94973 m!101305))

(declare-fun m!102595 () Bool)

(assert (=> b!94964 m!102595))

(declare-fun m!102597 () Bool)

(assert (=> b!94964 m!102597))

(declare-fun m!102599 () Bool)

(assert (=> b!94964 m!102599))

(declare-fun m!102601 () Bool)

(assert (=> b!94964 m!102601))

(declare-fun m!102603 () Bool)

(assert (=> b!94964 m!102603))

(assert (=> b!94964 m!102595))

(declare-fun m!102605 () Bool)

(assert (=> b!94964 m!102605))

(declare-fun m!102607 () Bool)

(assert (=> b!94964 m!102607))

(assert (=> b!94964 m!101303))

(assert (=> b!94964 m!102607))

(declare-fun m!102609 () Bool)

(assert (=> b!94964 m!102609))

(declare-fun m!102611 () Bool)

(assert (=> b!94964 m!102611))

(declare-fun m!102613 () Bool)

(assert (=> b!94964 m!102613))

(declare-fun m!102615 () Bool)

(assert (=> b!94964 m!102615))

(declare-fun m!102617 () Bool)

(assert (=> b!94964 m!102617))

(declare-fun m!102619 () Bool)

(assert (=> b!94964 m!102619))

(declare-fun m!102621 () Bool)

(assert (=> b!94964 m!102621))

(assert (=> b!94964 m!102601))

(declare-fun m!102623 () Bool)

(assert (=> b!94964 m!102623))

(assert (=> b!94964 m!102605))

(declare-fun m!102625 () Bool)

(assert (=> b!94964 m!102625))

(assert (=> b!94969 m!101303))

(declare-fun m!102627 () Bool)

(assert (=> b!94969 m!102627))

(assert (=> b!94969 m!101341))

(declare-fun m!102629 () Bool)

(assert (=> b!94969 m!102629))

(assert (=> b!94969 m!101341))

(declare-fun m!102631 () Bool)

(assert (=> b!94969 m!102631))

(assert (=> b!94969 m!101303))

(assert (=> b!94969 m!102629))

(declare-fun m!102633 () Bool)

(assert (=> bm!9537 m!102633))

(declare-fun m!102635 () Bool)

(assert (=> bm!9540 m!102635))

(assert (=> b!94974 m!101303))

(assert (=> b!94974 m!101303))

(declare-fun m!102637 () Bool)

(assert (=> b!94974 m!102637))

(assert (=> b!94976 m!101303))

(assert (=> b!94976 m!101303))

(assert (=> b!94976 m!101305))

(declare-fun m!102639 () Bool)

(assert (=> b!94970 m!102639))

(declare-fun m!102641 () Bool)

(assert (=> b!94975 m!102641))

(assert (=> d!24949 m!101255))

(assert (=> bm!9541 m!102613))

(declare-fun m!102643 () Bool)

(assert (=> bm!9535 m!102643))

(assert (=> b!94515 d!24949))

(assert (=> d!24671 d!24755))

(declare-fun d!24951 () Bool)

(assert (=> d!24951 (= (get!1271 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94366 d!24951))

(declare-fun d!24953 () Bool)

(assert (=> d!24953 (= (apply!90 lt!46725 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3906 () Bool)

(assert (= bs!3906 d!24953))

(assert (=> bs!3906 m!102119))

(assert (=> bs!3906 m!102119))

(declare-fun m!102645 () Bool)

(assert (=> bs!3906 m!102645))

(assert (=> b!94270 d!24953))

(declare-fun d!24955 () Bool)

(assert (=> d!24955 (= (apply!90 lt!46977 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46977) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3907 () Bool)

(assert (= bs!3907 d!24955))

(assert (=> bs!3907 m!101971))

(assert (=> bs!3907 m!101971))

(declare-fun m!102647 () Bool)

(assert (=> bs!3907 m!102647))

(assert (=> b!94530 d!24955))

(assert (=> b!94343 d!24603))

(assert (=> b!94518 d!24687))

(assert (=> b!94518 d!24689))

(declare-fun b!94992 () Bool)

(declare-fun e!61971 () SeekEntryResult!254)

(assert (=> b!94992 (= e!61971 (Found!254 (index!3159 lt!46687)))))

(declare-fun b!94993 () Bool)

(declare-fun e!61972 () SeekEntryResult!254)

(assert (=> b!94993 (= e!61972 e!61971)))

(declare-fun lt!47214 () (_ BitVec 64))

(declare-fun c!15925 () Bool)

(assert (=> b!94993 (= c!15925 (= lt!47214 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!94994 () Bool)

(declare-fun c!15923 () Bool)

(assert (=> b!94994 (= c!15923 (= lt!47214 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61970 () SeekEntryResult!254)

(assert (=> b!94994 (= e!61971 e!61970)))

(declare-fun b!94995 () Bool)

(assert (=> b!94995 (= e!61972 Undefined!254)))

(declare-fun b!94996 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94996 (= e!61970 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12657 lt!46687) #b00000000000000000000000000000001) (nextIndex!0 (index!3159 lt!46687) (x!12657 lt!46687) (mask!6509 newMap!16)) (index!3159 lt!46687) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun lt!47213 () SeekEntryResult!254)

(declare-fun d!24957 () Bool)

(assert (=> d!24957 (and (or ((_ is Undefined!254) lt!47213) (not ((_ is Found!254) lt!47213)) (and (bvsge (index!3158 lt!47213) #b00000000000000000000000000000000) (bvslt (index!3158 lt!47213) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!47213) ((_ is Found!254) lt!47213) (not ((_ is MissingVacant!254) lt!47213)) (not (= (index!3160 lt!47213) (index!3159 lt!46687))) (and (bvsge (index!3160 lt!47213) #b00000000000000000000000000000000) (bvslt (index!3160 lt!47213) (size!2233 (_keys!4116 newMap!16))))) (or ((_ is Undefined!254) lt!47213) (ite ((_ is Found!254) lt!47213) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!47213)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (and ((_ is MissingVacant!254) lt!47213) (= (index!3160 lt!47213) (index!3159 lt!46687)) (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!47213)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!24957 (= lt!47213 e!61972)))

(declare-fun c!15924 () Bool)

(assert (=> d!24957 (= c!15924 (bvsge (x!12657 lt!46687) #b01111111111111111111111111111110))))

(assert (=> d!24957 (= lt!47214 (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!46687)))))

(assert (=> d!24957 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24957 (= (seekKeyOrZeroReturnVacant!0 (x!12657 lt!46687) (index!3159 lt!46687) (index!3159 lt!46687) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)) lt!47213)))

(declare-fun b!94997 () Bool)

(assert (=> b!94997 (= e!61970 (MissingVacant!254 (index!3159 lt!46687)))))

(assert (= (and d!24957 c!15924) b!94995))

(assert (= (and d!24957 (not c!15924)) b!94993))

(assert (= (and b!94993 c!15925) b!94992))

(assert (= (and b!94993 (not c!15925)) b!94994))

(assert (= (and b!94994 c!15923) b!94997))

(assert (= (and b!94994 (not c!15923)) b!94996))

(declare-fun m!102649 () Bool)

(assert (=> b!94996 m!102649))

(assert (=> b!94996 m!102649))

(assert (=> b!94996 m!100977))

(declare-fun m!102651 () Bool)

(assert (=> b!94996 m!102651))

(declare-fun m!102653 () Bool)

(assert (=> d!24957 m!102653))

(declare-fun m!102655 () Bool)

(assert (=> d!24957 m!102655))

(assert (=> d!24957 m!101265))

(assert (=> d!24957 m!101255))

(assert (=> b!94234 d!24957))

(declare-fun d!24959 () Bool)

(assert (=> d!24959 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!24959 true))

(declare-fun _$5!95 () Unit!2800)

(assert (=> d!24959 (= (choose!575 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (index!3158 lt!46666) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) _$5!95)))

(declare-fun bs!3908 () Bool)

(assert (= bs!3908 d!24959))

(assert (=> bs!3908 m!101101))

(assert (=> bs!3908 m!101101))

(assert (=> bs!3908 m!101383))

(assert (=> bs!3908 m!101211))

(assert (=> bs!3908 m!101735))

(assert (=> d!24665 d!24959))

(assert (=> d!24665 d!24755))

(declare-fun d!24961 () Bool)

(declare-fun res!48032 () Bool)

(declare-fun e!61973 () Bool)

(assert (=> d!24961 (=> res!48032 e!61973)))

(assert (=> d!24961 (= res!48032 (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24961 (= (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!61973)))

(declare-fun b!94998 () Bool)

(declare-fun e!61974 () Bool)

(assert (=> b!94998 (= e!61973 e!61974)))

(declare-fun res!48033 () Bool)

(assert (=> b!94998 (=> (not res!48033) (not e!61974))))

(assert (=> b!94998 (= res!48033 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!94999 () Bool)

(assert (=> b!94999 (= e!61974 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24961 (not res!48032)) b!94998))

(assert (= (and b!94998 res!48033) b!94999))

(declare-fun m!102657 () Bool)

(assert (=> d!24961 m!102657))

(assert (=> b!94999 m!100977))

(declare-fun m!102659 () Bool)

(assert (=> b!94999 m!102659))

(assert (=> b!94412 d!24961))

(declare-fun d!24963 () Bool)

(declare-fun e!61975 () Bool)

(assert (=> d!24963 e!61975))

(declare-fun res!48034 () Bool)

(assert (=> d!24963 (=> (not res!48034) (not e!61975))))

(declare-fun lt!47216 () ListLongMap!1501)

(assert (=> d!24963 (= res!48034 (contains!786 lt!47216 (_1!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun lt!47218 () List!1576)

(assert (=> d!24963 (= lt!47216 (ListLongMap!1502 lt!47218))))

(declare-fun lt!47215 () Unit!2800)

(declare-fun lt!47217 () Unit!2800)

(assert (=> d!24963 (= lt!47215 lt!47217)))

(assert (=> d!24963 (= (getValueByKey!146 lt!47218 (_1!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24963 (= lt!47217 (lemmaContainsTupThenGetReturnValue!65 lt!47218 (_1!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24963 (= lt!47218 (insertStrictlySorted!68 (toList!766 (ite c!15784 call!9492 (ite c!15783 call!9491 call!9495))) (_1!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!24963 (= (+!126 (ite c!15784 call!9492 (ite c!15783 call!9491 call!9495)) (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) lt!47216)))

(declare-fun b!95000 () Bool)

(declare-fun res!48035 () Bool)

(assert (=> b!95000 (=> (not res!48035) (not e!61975))))

(assert (=> b!95000 (= res!48035 (= (getValueByKey!146 (toList!766 lt!47216) (_1!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))))

(declare-fun b!95001 () Bool)

(assert (=> b!95001 (= e!61975 (contains!790 (toList!766 lt!47216) (ite (or c!15784 c!15783) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (= (and d!24963 res!48034) b!95000))

(assert (= (and b!95000 res!48035) b!95001))

(declare-fun m!102661 () Bool)

(assert (=> d!24963 m!102661))

(declare-fun m!102663 () Bool)

(assert (=> d!24963 m!102663))

(declare-fun m!102665 () Bool)

(assert (=> d!24963 m!102665))

(declare-fun m!102667 () Bool)

(assert (=> d!24963 m!102667))

(declare-fun m!102669 () Bool)

(assert (=> b!95000 m!102669))

(declare-fun m!102671 () Bool)

(assert (=> b!95001 m!102671))

(assert (=> bm!9489 d!24963))

(declare-fun d!24965 () Bool)

(declare-fun e!61976 () Bool)

(assert (=> d!24965 e!61976))

(declare-fun res!48036 () Bool)

(assert (=> d!24965 (=> res!48036 e!61976)))

(declare-fun lt!47221 () Bool)

(assert (=> d!24965 (= res!48036 (not lt!47221))))

(declare-fun lt!47219 () Bool)

(assert (=> d!24965 (= lt!47221 lt!47219)))

(declare-fun lt!47220 () Unit!2800)

(declare-fun e!61977 () Unit!2800)

(assert (=> d!24965 (= lt!47220 e!61977)))

(declare-fun c!15926 () Bool)

(assert (=> d!24965 (= c!15926 lt!47219)))

(assert (=> d!24965 (= lt!47219 (containsKey!150 (toList!766 (map!1232 (_2!1162 lt!46805))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!24965 (= (contains!786 (map!1232 (_2!1162 lt!46805)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!47221)))

(declare-fun b!95002 () Bool)

(declare-fun lt!47222 () Unit!2800)

(assert (=> b!95002 (= e!61977 lt!47222)))

(assert (=> b!95002 (= lt!47222 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (map!1232 (_2!1162 lt!46805))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!95002 (isDefined!100 (getValueByKey!146 (toList!766 (map!1232 (_2!1162 lt!46805))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!95003 () Bool)

(declare-fun Unit!2843 () Unit!2800)

(assert (=> b!95003 (= e!61977 Unit!2843)))

(declare-fun b!95004 () Bool)

(assert (=> b!95004 (= e!61976 (isDefined!100 (getValueByKey!146 (toList!766 (map!1232 (_2!1162 lt!46805))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (= (and d!24965 c!15926) b!95002))

(assert (= (and d!24965 (not c!15926)) b!95003))

(assert (= (and d!24965 (not res!48036)) b!95004))

(assert (=> d!24965 m!100977))

(declare-fun m!102673 () Bool)

(assert (=> d!24965 m!102673))

(assert (=> b!95002 m!100977))

(declare-fun m!102675 () Bool)

(assert (=> b!95002 m!102675))

(assert (=> b!95002 m!100977))

(declare-fun m!102677 () Bool)

(assert (=> b!95002 m!102677))

(assert (=> b!95002 m!102677))

(declare-fun m!102679 () Bool)

(assert (=> b!95002 m!102679))

(assert (=> b!95004 m!100977))

(assert (=> b!95004 m!102677))

(assert (=> b!95004 m!102677))

(assert (=> b!95004 m!102679))

(assert (=> b!94337 d!24965))

(assert (=> b!94337 d!24691))

(declare-fun d!24967 () Bool)

(assert (=> d!24967 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!24967 true))

(declare-fun _$8!79 () Unit!2800)

(assert (=> d!24967 (= (choose!570 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) _$8!79)))

(declare-fun bs!3909 () Bool)

(assert (= bs!3909 d!24967))

(assert (=> bs!3909 m!101101))

(assert (=> bs!3909 m!101101))

(assert (=> bs!3909 m!101507))

(assert (=> bs!3909 m!100975))

(assert (=> bs!3909 m!101505))

(assert (=> d!24607 d!24967))

(declare-fun d!24969 () Bool)

(declare-fun e!61978 () Bool)

(assert (=> d!24969 e!61978))

(declare-fun res!48037 () Bool)

(assert (=> d!24969 (=> (not res!48037) (not e!61978))))

(declare-fun lt!47224 () ListLongMap!1501)

(assert (=> d!24969 (= res!48037 (contains!786 lt!47224 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47226 () List!1576)

(assert (=> d!24969 (= lt!47224 (ListLongMap!1502 lt!47226))))

(declare-fun lt!47223 () Unit!2800)

(declare-fun lt!47225 () Unit!2800)

(assert (=> d!24969 (= lt!47223 lt!47225)))

(assert (=> d!24969 (= (getValueByKey!146 lt!47226 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24969 (= lt!47225 (lemmaContainsTupThenGetReturnValue!65 lt!47226 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24969 (= lt!47226 (insertStrictlySorted!68 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24969 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47224)))

(declare-fun b!95005 () Bool)

(declare-fun res!48038 () Bool)

(assert (=> b!95005 (=> (not res!48038) (not e!61978))))

(assert (=> b!95005 (= res!48038 (= (getValueByKey!146 (toList!766 lt!47224) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95006 () Bool)

(assert (=> b!95006 (= e!61978 (contains!790 (toList!766 lt!47224) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24969 res!48037) b!95005))

(assert (= (and b!95005 res!48038) b!95006))

(declare-fun m!102681 () Bool)

(assert (=> d!24969 m!102681))

(declare-fun m!102683 () Bool)

(assert (=> d!24969 m!102683))

(declare-fun m!102685 () Bool)

(assert (=> d!24969 m!102685))

(declare-fun m!102687 () Bool)

(assert (=> d!24969 m!102687))

(declare-fun m!102689 () Bool)

(assert (=> b!95005 m!102689))

(declare-fun m!102691 () Bool)

(assert (=> b!95006 m!102691))

(assert (=> d!24607 d!24969))

(declare-fun b!95007 () Bool)

(declare-fun e!61986 () Unit!2800)

(declare-fun Unit!2844 () Unit!2800)

(assert (=> b!95007 (= e!61986 Unit!2844)))

(declare-fun b!95008 () Bool)

(declare-fun e!61991 () ListLongMap!1501)

(declare-fun call!9545 () ListLongMap!1501)

(assert (=> b!95008 (= e!61991 call!9545)))

(declare-fun b!95009 () Bool)

(declare-fun e!61980 () ListLongMap!1501)

(declare-fun call!9550 () ListLongMap!1501)

(assert (=> b!95009 (= e!61980 call!9550)))

(declare-fun b!95010 () Bool)

(declare-fun e!61988 () Bool)

(declare-fun call!9548 () Bool)

(assert (=> b!95010 (= e!61988 (not call!9548))))

(declare-fun bm!9542 () Bool)

(declare-fun lt!47248 () ListLongMap!1501)

(assert (=> bm!9542 (= call!9548 (contains!786 lt!47248 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95011 () Bool)

(assert (=> b!95011 (= e!61980 call!9545)))

(declare-fun bm!9543 () Bool)

(declare-fun call!9549 () ListLongMap!1501)

(assert (=> bm!9543 (= call!9545 call!9549)))

(declare-fun c!15931 () Bool)

(declare-fun call!9546 () ListLongMap!1501)

(declare-fun call!9547 () ListLongMap!1501)

(declare-fun c!15932 () Bool)

(declare-fun bm!9544 () Bool)

(assert (=> bm!9544 (= call!9549 (+!126 (ite c!15932 call!9547 (ite c!15931 call!9546 call!9550)) (ite (or c!15932 c!15931) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9545 () Bool)

(assert (=> bm!9545 (= call!9550 call!9546)))

(declare-fun b!95013 () Bool)

(declare-fun c!15929 () Bool)

(assert (=> b!95013 (= c!15929 (and (not (= (bvand lt!46667 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46667 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95013 (= e!61991 e!61980)))

(declare-fun b!95014 () Bool)

(declare-fun e!61979 () ListLongMap!1501)

(assert (=> b!95014 (= e!61979 e!61991)))

(assert (=> b!95014 (= c!15931 (and (not (= (bvand lt!46667 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46667 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95015 () Bool)

(declare-fun e!61983 () Bool)

(declare-fun e!61990 () Bool)

(assert (=> b!95015 (= e!61983 e!61990)))

(declare-fun c!15930 () Bool)

(assert (=> b!95015 (= c!15930 (not (= (bvand lt!46667 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95016 () Bool)

(assert (=> b!95016 (= e!61979 (+!126 call!9549 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!9546 () Bool)

(assert (=> bm!9546 (= call!9546 call!9547)))

(declare-fun b!95017 () Bool)

(declare-fun e!61989 () Bool)

(assert (=> b!95017 (= e!61989 (= (apply!90 lt!47248 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (_values!2418 newMap!16))))))

(assert (=> b!95017 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95018 () Bool)

(declare-fun e!61987 () Bool)

(assert (=> b!95018 (= e!61987 (= (apply!90 lt!47248 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95019 () Bool)

(declare-fun res!48039 () Bool)

(assert (=> b!95019 (=> (not res!48039) (not e!61983))))

(assert (=> b!95019 (= res!48039 e!61988)))

(declare-fun c!15927 () Bool)

(assert (=> b!95019 (= c!15927 (not (= (bvand lt!46667 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95020 () Bool)

(declare-fun res!48044 () Bool)

(assert (=> b!95020 (=> (not res!48044) (not e!61983))))

(declare-fun e!61985 () Bool)

(assert (=> b!95020 (= res!48044 e!61985)))

(declare-fun res!48040 () Bool)

(assert (=> b!95020 (=> res!48040 e!61985)))

(declare-fun e!61982 () Bool)

(assert (=> b!95020 (= res!48040 (not e!61982))))

(declare-fun res!48046 () Bool)

(assert (=> b!95020 (=> (not res!48046) (not e!61982))))

(assert (=> b!95020 (= res!48046 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9547 () Bool)

(declare-fun call!9551 () Bool)

(assert (=> bm!9547 (= call!9551 (contains!786 lt!47248 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95021 () Bool)

(assert (=> b!95021 (= e!61982 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95022 () Bool)

(assert (=> b!95022 (= e!61985 e!61989)))

(declare-fun res!48041 () Bool)

(assert (=> b!95022 (=> (not res!48041) (not e!61989))))

(assert (=> b!95022 (= res!48041 (contains!786 lt!47248 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95022 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95012 () Bool)

(declare-fun lt!47237 () Unit!2800)

(assert (=> b!95012 (= e!61986 lt!47237)))

(declare-fun lt!47229 () ListLongMap!1501)

(assert (=> b!95012 (= lt!47229 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47246 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47246 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47240 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47240 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47242 () Unit!2800)

(assert (=> b!95012 (= lt!47242 (addStillContains!66 lt!47229 lt!47246 (zeroValue!2322 newMap!16) lt!47240))))

(assert (=> b!95012 (contains!786 (+!126 lt!47229 (tuple2!2305 lt!47246 (zeroValue!2322 newMap!16))) lt!47240)))

(declare-fun lt!47245 () Unit!2800)

(assert (=> b!95012 (= lt!47245 lt!47242)))

(declare-fun lt!47230 () ListLongMap!1501)

(assert (=> b!95012 (= lt!47230 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47234 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47234 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47231 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47231 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47235 () Unit!2800)

(assert (=> b!95012 (= lt!47235 (addApplyDifferent!66 lt!47230 lt!47234 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47231))))

(assert (=> b!95012 (= (apply!90 (+!126 lt!47230 (tuple2!2305 lt!47234 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47231) (apply!90 lt!47230 lt!47231))))

(declare-fun lt!47239 () Unit!2800)

(assert (=> b!95012 (= lt!47239 lt!47235)))

(declare-fun lt!47227 () ListLongMap!1501)

(assert (=> b!95012 (= lt!47227 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47232 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47232 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47228 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47228 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47236 () Unit!2800)

(assert (=> b!95012 (= lt!47236 (addApplyDifferent!66 lt!47227 lt!47232 (zeroValue!2322 newMap!16) lt!47228))))

(assert (=> b!95012 (= (apply!90 (+!126 lt!47227 (tuple2!2305 lt!47232 (zeroValue!2322 newMap!16))) lt!47228) (apply!90 lt!47227 lt!47228))))

(declare-fun lt!47244 () Unit!2800)

(assert (=> b!95012 (= lt!47244 lt!47236)))

(declare-fun lt!47238 () ListLongMap!1501)

(assert (=> b!95012 (= lt!47238 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47247 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47247 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47243 () (_ BitVec 64))

(assert (=> b!95012 (= lt!47243 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95012 (= lt!47237 (addApplyDifferent!66 lt!47238 lt!47247 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47243))))

(assert (=> b!95012 (= (apply!90 (+!126 lt!47238 (tuple2!2305 lt!47247 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47243) (apply!90 lt!47238 lt!47243))))

(declare-fun d!24971 () Bool)

(assert (=> d!24971 e!61983))

(declare-fun res!48047 () Bool)

(assert (=> d!24971 (=> (not res!48047) (not e!61983))))

(assert (=> d!24971 (= res!48047 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!47241 () ListLongMap!1501)

(assert (=> d!24971 (= lt!47248 lt!47241)))

(declare-fun lt!47233 () Unit!2800)

(assert (=> d!24971 (= lt!47233 e!61986)))

(declare-fun c!15928 () Bool)

(declare-fun e!61981 () Bool)

(assert (=> d!24971 (= c!15928 e!61981)))

(declare-fun res!48045 () Bool)

(assert (=> d!24971 (=> (not res!48045) (not e!61981))))

(assert (=> d!24971 (= res!48045 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24971 (= lt!47241 e!61979)))

(assert (=> d!24971 (= c!15932 (and (not (= (bvand lt!46667 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46667 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24971 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24971 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47248)))

(declare-fun b!95023 () Bool)

(declare-fun e!61984 () Bool)

(assert (=> b!95023 (= e!61984 (= (apply!90 lt!47248 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!95024 () Bool)

(assert (=> b!95024 (= e!61981 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95025 () Bool)

(assert (=> b!95025 (= e!61988 e!61984)))

(declare-fun res!48043 () Bool)

(assert (=> b!95025 (= res!48043 call!9548)))

(assert (=> b!95025 (=> (not res!48043) (not e!61984))))

(declare-fun b!95026 () Bool)

(assert (=> b!95026 (= e!61990 e!61987)))

(declare-fun res!48042 () Bool)

(assert (=> b!95026 (= res!48042 call!9551)))

(assert (=> b!95026 (=> (not res!48042) (not e!61987))))

(declare-fun bm!9548 () Bool)

(assert (=> bm!9548 (= call!9547 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46667 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95027 () Bool)

(assert (=> b!95027 (= e!61990 (not call!9551))))

(assert (= (and d!24971 c!15932) b!95016))

(assert (= (and d!24971 (not c!15932)) b!95014))

(assert (= (and b!95014 c!15931) b!95008))

(assert (= (and b!95014 (not c!15931)) b!95013))

(assert (= (and b!95013 c!15929) b!95011))

(assert (= (and b!95013 (not c!15929)) b!95009))

(assert (= (or b!95011 b!95009) bm!9545))

(assert (= (or b!95008 bm!9545) bm!9546))

(assert (= (or b!95008 b!95011) bm!9543))

(assert (= (or b!95016 bm!9546) bm!9548))

(assert (= (or b!95016 bm!9543) bm!9544))

(assert (= (and d!24971 res!48045) b!95024))

(assert (= (and d!24971 c!15928) b!95012))

(assert (= (and d!24971 (not c!15928)) b!95007))

(assert (= (and d!24971 res!48047) b!95020))

(assert (= (and b!95020 res!48046) b!95021))

(assert (= (and b!95020 (not res!48040)) b!95022))

(assert (= (and b!95022 res!48041) b!95017))

(assert (= (and b!95020 res!48044) b!95019))

(assert (= (and b!95019 c!15927) b!95025))

(assert (= (and b!95019 (not c!15927)) b!95010))

(assert (= (and b!95025 res!48043) b!95023))

(assert (= (or b!95025 b!95010) bm!9542))

(assert (= (and b!95019 res!48039) b!95015))

(assert (= (and b!95015 c!15930) b!95026))

(assert (= (and b!95015 (not c!15930)) b!95027))

(assert (= (and b!95026 res!48042) b!95018))

(assert (= (or b!95026 b!95027) bm!9547))

(declare-fun b_lambda!4183 () Bool)

(assert (=> (not b_lambda!4183) (not b!95017)))

(assert (=> b!95017 t!5482))

(declare-fun b_and!5805 () Bool)

(assert (= b_and!5801 (and (=> t!5482 result!3197) b_and!5805)))

(assert (=> b!95017 t!5484))

(declare-fun b_and!5807 () Bool)

(assert (= b_and!5803 (and (=> t!5484 result!3199) b_and!5807)))

(declare-fun m!102693 () Bool)

(assert (=> b!95016 m!102693))

(assert (=> b!95021 m!101303))

(assert (=> b!95021 m!101303))

(assert (=> b!95021 m!101305))

(declare-fun m!102695 () Bool)

(assert (=> b!95012 m!102695))

(declare-fun m!102697 () Bool)

(assert (=> b!95012 m!102697))

(declare-fun m!102699 () Bool)

(assert (=> b!95012 m!102699))

(declare-fun m!102701 () Bool)

(assert (=> b!95012 m!102701))

(declare-fun m!102703 () Bool)

(assert (=> b!95012 m!102703))

(assert (=> b!95012 m!102695))

(declare-fun m!102705 () Bool)

(assert (=> b!95012 m!102705))

(declare-fun m!102707 () Bool)

(assert (=> b!95012 m!102707))

(assert (=> b!95012 m!101303))

(assert (=> b!95012 m!102707))

(declare-fun m!102709 () Bool)

(assert (=> b!95012 m!102709))

(assert (=> b!95012 m!100975))

(declare-fun m!102711 () Bool)

(assert (=> b!95012 m!102711))

(assert (=> b!95012 m!100975))

(declare-fun m!102713 () Bool)

(assert (=> b!95012 m!102713))

(declare-fun m!102715 () Bool)

(assert (=> b!95012 m!102715))

(declare-fun m!102717 () Bool)

(assert (=> b!95012 m!102717))

(assert (=> b!95012 m!100975))

(declare-fun m!102719 () Bool)

(assert (=> b!95012 m!102719))

(declare-fun m!102721 () Bool)

(assert (=> b!95012 m!102721))

(assert (=> b!95012 m!102701))

(declare-fun m!102723 () Bool)

(assert (=> b!95012 m!102723))

(assert (=> b!95012 m!102705))

(declare-fun m!102725 () Bool)

(assert (=> b!95012 m!102725))

(assert (=> b!95017 m!101303))

(declare-fun m!102727 () Bool)

(assert (=> b!95017 m!102727))

(assert (=> b!95017 m!101341))

(assert (=> b!95017 m!101343))

(assert (=> b!95017 m!101341))

(assert (=> b!95017 m!101345))

(assert (=> b!95017 m!101303))

(assert (=> b!95017 m!101343))

(declare-fun m!102729 () Bool)

(assert (=> bm!9544 m!102729))

(declare-fun m!102731 () Bool)

(assert (=> bm!9547 m!102731))

(assert (=> b!95022 m!101303))

(assert (=> b!95022 m!101303))

(declare-fun m!102733 () Bool)

(assert (=> b!95022 m!102733))

(assert (=> b!95024 m!101303))

(assert (=> b!95024 m!101303))

(assert (=> b!95024 m!101305))

(declare-fun m!102735 () Bool)

(assert (=> b!95018 m!102735))

(declare-fun m!102737 () Bool)

(assert (=> b!95023 m!102737))

(assert (=> d!24971 m!101255))

(assert (=> bm!9548 m!100975))

(assert (=> bm!9548 m!102713))

(declare-fun m!102739 () Bool)

(assert (=> bm!9542 m!102739))

(assert (=> d!24607 d!24971))

(assert (=> d!24607 d!24567))

(assert (=> d!24607 d!24755))

(assert (=> b!94369 d!24727))

(assert (=> b!94369 d!24729))

(declare-fun b!95028 () Bool)

(declare-fun e!61995 () Bool)

(declare-fun e!61993 () Bool)

(assert (=> b!95028 (= e!61995 e!61993)))

(declare-fun c!15933 () Bool)

(assert (=> b!95028 (= c!15933 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun bm!9549 () Bool)

(declare-fun call!9552 () Bool)

(assert (=> bm!9549 (= call!9552 (arrayNoDuplicates!0 (_keys!4116 (_2!1162 lt!46671)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15933 (Cons!1571 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000) Nil!1572) Nil!1572)))))

(declare-fun b!95029 () Bool)

(assert (=> b!95029 (= e!61993 call!9552)))

(declare-fun d!24973 () Bool)

(declare-fun res!48049 () Bool)

(declare-fun e!61994 () Bool)

(assert (=> d!24973 (=> res!48049 e!61994)))

(assert (=> d!24973 (= res!48049 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46671)))))))

(assert (=> d!24973 (= (arrayNoDuplicates!0 (_keys!4116 (_2!1162 lt!46671)) #b00000000000000000000000000000000 Nil!1572) e!61994)))

(declare-fun b!95030 () Bool)

(declare-fun e!61992 () Bool)

(assert (=> b!95030 (= e!61992 (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(declare-fun b!95031 () Bool)

(assert (=> b!95031 (= e!61993 call!9552)))

(declare-fun b!95032 () Bool)

(assert (=> b!95032 (= e!61994 e!61995)))

(declare-fun res!48048 () Bool)

(assert (=> b!95032 (=> (not res!48048) (not e!61995))))

(assert (=> b!95032 (= res!48048 (not e!61992))))

(declare-fun res!48050 () Bool)

(assert (=> b!95032 (=> (not res!48050) (not e!61992))))

(assert (=> b!95032 (= res!48050 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (_2!1162 lt!46671))) #b00000000000000000000000000000000)))))

(assert (= (and d!24973 (not res!48049)) b!95032))

(assert (= (and b!95032 res!48050) b!95030))

(assert (= (and b!95032 res!48048) b!95028))

(assert (= (and b!95028 c!15933) b!95031))

(assert (= (and b!95028 (not c!15933)) b!95029))

(assert (= (or b!95031 b!95029) bm!9549))

(assert (=> b!95028 m!101819))

(assert (=> b!95028 m!101819))

(assert (=> b!95028 m!101821))

(assert (=> bm!9549 m!101819))

(declare-fun m!102741 () Bool)

(assert (=> bm!9549 m!102741))

(assert (=> b!95030 m!101819))

(assert (=> b!95030 m!101819))

(declare-fun m!102743 () Bool)

(assert (=> b!95030 m!102743))

(assert (=> b!95032 m!101819))

(assert (=> b!95032 m!101819))

(assert (=> b!95032 m!101821))

(assert (=> b!94556 d!24973))

(declare-fun d!24975 () Bool)

(declare-fun e!61996 () Bool)

(assert (=> d!24975 e!61996))

(declare-fun res!48051 () Bool)

(assert (=> d!24975 (=> res!48051 e!61996)))

(declare-fun lt!47251 () Bool)

(assert (=> d!24975 (= res!48051 (not lt!47251))))

(declare-fun lt!47249 () Bool)

(assert (=> d!24975 (= lt!47251 lt!47249)))

(declare-fun lt!47250 () Unit!2800)

(declare-fun e!61997 () Unit!2800)

(assert (=> d!24975 (= lt!47250 e!61997)))

(declare-fun c!15934 () Bool)

(assert (=> d!24975 (= c!15934 lt!47249)))

(assert (=> d!24975 (= lt!47249 (containsKey!150 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))

(assert (=> d!24975 (= (contains!786 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))) lt!47251)))

(declare-fun b!95033 () Bool)

(declare-fun lt!47252 () Unit!2800)

(assert (=> b!95033 (= e!61997 lt!47252)))

(assert (=> b!95033 (= lt!47252 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))

(assert (=> b!95033 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))

(declare-fun b!95034 () Bool)

(declare-fun Unit!2845 () Unit!2800)

(assert (=> b!95034 (= e!61997 Unit!2845)))

(declare-fun b!95035 () Bool)

(assert (=> b!95035 (= e!61996 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(assert (= (and d!24975 c!15934) b!95033))

(assert (= (and d!24975 (not c!15934)) b!95034))

(assert (= (and d!24975 (not res!48051)) b!95035))

(assert (=> d!24975 m!101201))

(declare-fun m!102745 () Bool)

(assert (=> d!24975 m!102745))

(assert (=> b!95033 m!101201))

(declare-fun m!102747 () Bool)

(assert (=> b!95033 m!102747))

(assert (=> b!95033 m!101201))

(declare-fun m!102749 () Bool)

(assert (=> b!95033 m!102749))

(assert (=> b!95033 m!102749))

(declare-fun m!102751 () Bool)

(assert (=> b!95033 m!102751))

(assert (=> b!95035 m!101201))

(assert (=> b!95035 m!102749))

(assert (=> b!95035 m!102749))

(assert (=> b!95035 m!102751))

(assert (=> b!94512 d!24975))

(declare-fun b!95036 () Bool)

(declare-fun e!62005 () Unit!2800)

(declare-fun Unit!2846 () Unit!2800)

(assert (=> b!95036 (= e!62005 Unit!2846)))

(declare-fun b!95037 () Bool)

(declare-fun e!62010 () ListLongMap!1501)

(declare-fun call!9553 () ListLongMap!1501)

(assert (=> b!95037 (= e!62010 call!9553)))

(declare-fun b!95038 () Bool)

(declare-fun e!61999 () ListLongMap!1501)

(declare-fun call!9558 () ListLongMap!1501)

(assert (=> b!95038 (= e!61999 call!9558)))

(declare-fun b!95039 () Bool)

(declare-fun e!62007 () Bool)

(declare-fun call!9556 () Bool)

(assert (=> b!95039 (= e!62007 (not call!9556))))

(declare-fun bm!9550 () Bool)

(declare-fun lt!47274 () ListLongMap!1501)

(assert (=> bm!9550 (= call!9556 (contains!786 lt!47274 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95040 () Bool)

(assert (=> b!95040 (= e!61999 call!9553)))

(declare-fun bm!9551 () Bool)

(declare-fun call!9557 () ListLongMap!1501)

(assert (=> bm!9551 (= call!9553 call!9557)))

(declare-fun bm!9552 () Bool)

(declare-fun call!9554 () ListLongMap!1501)

(declare-fun c!15939 () Bool)

(declare-fun call!9555 () ListLongMap!1501)

(declare-fun c!15940 () Bool)

(assert (=> bm!9552 (= call!9557 (+!126 (ite c!15940 call!9555 (ite c!15939 call!9554 call!9558)) (ite (or c!15940 c!15939) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9553 () Bool)

(assert (=> bm!9553 (= call!9558 call!9554)))

(declare-fun b!95042 () Bool)

(declare-fun c!15937 () Bool)

(assert (=> b!95042 (= c!15937 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95042 (= e!62010 e!61999)))

(declare-fun b!95043 () Bool)

(declare-fun e!61998 () ListLongMap!1501)

(assert (=> b!95043 (= e!61998 e!62010)))

(assert (=> b!95043 (= c!15939 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95044 () Bool)

(declare-fun e!62002 () Bool)

(declare-fun e!62009 () Bool)

(assert (=> b!95044 (= e!62002 e!62009)))

(declare-fun c!15938 () Bool)

(assert (=> b!95044 (= c!15938 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95045 () Bool)

(assert (=> b!95045 (= e!61998 (+!126 call!9557 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9554 () Bool)

(assert (=> bm!9554 (= call!9554 call!9555)))

(declare-fun e!62008 () Bool)

(declare-fun b!95046 () Bool)

(assert (=> b!95046 (= e!62008 (= (apply!90 lt!47274 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 lt!46647) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 lt!46647)))))

(assert (=> b!95046 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95047 () Bool)

(declare-fun e!62006 () Bool)

(assert (=> b!95047 (= e!62006 (= (apply!90 lt!47274 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!95048 () Bool)

(declare-fun res!48052 () Bool)

(assert (=> b!95048 (=> (not res!48052) (not e!62002))))

(assert (=> b!95048 (= res!48052 e!62007)))

(declare-fun c!15935 () Bool)

(assert (=> b!95048 (= c!15935 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95049 () Bool)

(declare-fun res!48057 () Bool)

(assert (=> b!95049 (=> (not res!48057) (not e!62002))))

(declare-fun e!62004 () Bool)

(assert (=> b!95049 (= res!48057 e!62004)))

(declare-fun res!48053 () Bool)

(assert (=> b!95049 (=> res!48053 e!62004)))

(declare-fun e!62001 () Bool)

(assert (=> b!95049 (= res!48053 (not e!62001))))

(declare-fun res!48059 () Bool)

(assert (=> b!95049 (=> (not res!48059) (not e!62001))))

(assert (=> b!95049 (= res!48059 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9555 () Bool)

(declare-fun call!9559 () Bool)

(assert (=> bm!9555 (= call!9559 (contains!786 lt!47274 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95050 () Bool)

(assert (=> b!95050 (= e!62001 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95051 () Bool)

(assert (=> b!95051 (= e!62004 e!62008)))

(declare-fun res!48054 () Bool)

(assert (=> b!95051 (=> (not res!48054) (not e!62008))))

(assert (=> b!95051 (= res!48054 (contains!786 lt!47274 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95051 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95041 () Bool)

(declare-fun lt!47263 () Unit!2800)

(assert (=> b!95041 (= e!62005 lt!47263)))

(declare-fun lt!47255 () ListLongMap!1501)

(assert (=> b!95041 (= lt!47255 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47272 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47272 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47266 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47266 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47268 () Unit!2800)

(assert (=> b!95041 (= lt!47268 (addStillContains!66 lt!47255 lt!47272 (zeroValue!2322 newMap!16) lt!47266))))

(assert (=> b!95041 (contains!786 (+!126 lt!47255 (tuple2!2305 lt!47272 (zeroValue!2322 newMap!16))) lt!47266)))

(declare-fun lt!47271 () Unit!2800)

(assert (=> b!95041 (= lt!47271 lt!47268)))

(declare-fun lt!47256 () ListLongMap!1501)

(assert (=> b!95041 (= lt!47256 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47260 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47260 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47257 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47257 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47261 () Unit!2800)

(assert (=> b!95041 (= lt!47261 (addApplyDifferent!66 lt!47256 lt!47260 (minValue!2322 newMap!16) lt!47257))))

(assert (=> b!95041 (= (apply!90 (+!126 lt!47256 (tuple2!2305 lt!47260 (minValue!2322 newMap!16))) lt!47257) (apply!90 lt!47256 lt!47257))))

(declare-fun lt!47265 () Unit!2800)

(assert (=> b!95041 (= lt!47265 lt!47261)))

(declare-fun lt!47253 () ListLongMap!1501)

(assert (=> b!95041 (= lt!47253 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47258 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47258 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47254 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47254 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47262 () Unit!2800)

(assert (=> b!95041 (= lt!47262 (addApplyDifferent!66 lt!47253 lt!47258 (zeroValue!2322 newMap!16) lt!47254))))

(assert (=> b!95041 (= (apply!90 (+!126 lt!47253 (tuple2!2305 lt!47258 (zeroValue!2322 newMap!16))) lt!47254) (apply!90 lt!47253 lt!47254))))

(declare-fun lt!47270 () Unit!2800)

(assert (=> b!95041 (= lt!47270 lt!47262)))

(declare-fun lt!47264 () ListLongMap!1501)

(assert (=> b!95041 (= lt!47264 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47273 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47273 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47269 () (_ BitVec 64))

(assert (=> b!95041 (= lt!47269 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95041 (= lt!47263 (addApplyDifferent!66 lt!47264 lt!47273 (minValue!2322 newMap!16) lt!47269))))

(assert (=> b!95041 (= (apply!90 (+!126 lt!47264 (tuple2!2305 lt!47273 (minValue!2322 newMap!16))) lt!47269) (apply!90 lt!47264 lt!47269))))

(declare-fun d!24977 () Bool)

(assert (=> d!24977 e!62002))

(declare-fun res!48060 () Bool)

(assert (=> d!24977 (=> (not res!48060) (not e!62002))))

(assert (=> d!24977 (= res!48060 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!47267 () ListLongMap!1501)

(assert (=> d!24977 (= lt!47274 lt!47267)))

(declare-fun lt!47259 () Unit!2800)

(assert (=> d!24977 (= lt!47259 e!62005)))

(declare-fun c!15936 () Bool)

(declare-fun e!62000 () Bool)

(assert (=> d!24977 (= c!15936 e!62000)))

(declare-fun res!48058 () Bool)

(assert (=> d!24977 (=> (not res!48058) (not e!62000))))

(assert (=> d!24977 (= res!48058 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24977 (= lt!47267 e!61998)))

(assert (=> d!24977 (= c!15940 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24977 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24977 (= (getCurrentListMap!448 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47274)))

(declare-fun b!95052 () Bool)

(declare-fun e!62003 () Bool)

(assert (=> b!95052 (= e!62003 (= (apply!90 lt!47274 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!95053 () Bool)

(assert (=> b!95053 (= e!62000 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95054 () Bool)

(assert (=> b!95054 (= e!62007 e!62003)))

(declare-fun res!48056 () Bool)

(assert (=> b!95054 (= res!48056 call!9556)))

(assert (=> b!95054 (=> (not res!48056) (not e!62003))))

(declare-fun b!95055 () Bool)

(assert (=> b!95055 (= e!62009 e!62006)))

(declare-fun res!48055 () Bool)

(assert (=> b!95055 (= res!48055 call!9559)))

(assert (=> b!95055 (=> (not res!48055) (not e!62006))))

(declare-fun bm!9556 () Bool)

(assert (=> bm!9556 (= call!9555 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) lt!46647 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95056 () Bool)

(assert (=> b!95056 (= e!62009 (not call!9559))))

(assert (= (and d!24977 c!15940) b!95045))

(assert (= (and d!24977 (not c!15940)) b!95043))

(assert (= (and b!95043 c!15939) b!95037))

(assert (= (and b!95043 (not c!15939)) b!95042))

(assert (= (and b!95042 c!15937) b!95040))

(assert (= (and b!95042 (not c!15937)) b!95038))

(assert (= (or b!95040 b!95038) bm!9553))

(assert (= (or b!95037 bm!9553) bm!9554))

(assert (= (or b!95037 b!95040) bm!9551))

(assert (= (or b!95045 bm!9554) bm!9556))

(assert (= (or b!95045 bm!9551) bm!9552))

(assert (= (and d!24977 res!48058) b!95053))

(assert (= (and d!24977 c!15936) b!95041))

(assert (= (and d!24977 (not c!15936)) b!95036))

(assert (= (and d!24977 res!48060) b!95049))

(assert (= (and b!95049 res!48059) b!95050))

(assert (= (and b!95049 (not res!48053)) b!95051))

(assert (= (and b!95051 res!48054) b!95046))

(assert (= (and b!95049 res!48057) b!95048))

(assert (= (and b!95048 c!15935) b!95054))

(assert (= (and b!95048 (not c!15935)) b!95039))

(assert (= (and b!95054 res!48056) b!95052))

(assert (= (or b!95054 b!95039) bm!9550))

(assert (= (and b!95048 res!48052) b!95044))

(assert (= (and b!95044 c!15938) b!95055))

(assert (= (and b!95044 (not c!15938)) b!95056))

(assert (= (and b!95055 res!48055) b!95047))

(assert (= (or b!95055 b!95056) bm!9555))

(declare-fun b_lambda!4185 () Bool)

(assert (=> (not b_lambda!4185) (not b!95046)))

(assert (=> b!95046 t!5482))

(declare-fun b_and!5809 () Bool)

(assert (= b_and!5805 (and (=> t!5482 result!3197) b_and!5809)))

(assert (=> b!95046 t!5484))

(declare-fun b_and!5811 () Bool)

(assert (= b_and!5807 (and (=> t!5484 result!3199) b_and!5811)))

(declare-fun m!102753 () Bool)

(assert (=> b!95045 m!102753))

(assert (=> b!95050 m!101303))

(assert (=> b!95050 m!101303))

(assert (=> b!95050 m!101305))

(declare-fun m!102755 () Bool)

(assert (=> b!95041 m!102755))

(declare-fun m!102757 () Bool)

(assert (=> b!95041 m!102757))

(declare-fun m!102759 () Bool)

(assert (=> b!95041 m!102759))

(declare-fun m!102761 () Bool)

(assert (=> b!95041 m!102761))

(declare-fun m!102763 () Bool)

(assert (=> b!95041 m!102763))

(assert (=> b!95041 m!102755))

(declare-fun m!102765 () Bool)

(assert (=> b!95041 m!102765))

(declare-fun m!102767 () Bool)

(assert (=> b!95041 m!102767))

(assert (=> b!95041 m!101303))

(assert (=> b!95041 m!102767))

(declare-fun m!102769 () Bool)

(assert (=> b!95041 m!102769))

(declare-fun m!102771 () Bool)

(assert (=> b!95041 m!102771))

(declare-fun m!102773 () Bool)

(assert (=> b!95041 m!102773))

(declare-fun m!102775 () Bool)

(assert (=> b!95041 m!102775))

(declare-fun m!102777 () Bool)

(assert (=> b!95041 m!102777))

(declare-fun m!102779 () Bool)

(assert (=> b!95041 m!102779))

(declare-fun m!102781 () Bool)

(assert (=> b!95041 m!102781))

(assert (=> b!95041 m!102761))

(declare-fun m!102783 () Bool)

(assert (=> b!95041 m!102783))

(assert (=> b!95041 m!102765))

(declare-fun m!102785 () Bool)

(assert (=> b!95041 m!102785))

(assert (=> b!95046 m!101303))

(declare-fun m!102787 () Bool)

(assert (=> b!95046 m!102787))

(assert (=> b!95046 m!101341))

(declare-fun m!102789 () Bool)

(assert (=> b!95046 m!102789))

(assert (=> b!95046 m!101341))

(declare-fun m!102791 () Bool)

(assert (=> b!95046 m!102791))

(assert (=> b!95046 m!101303))

(assert (=> b!95046 m!102789))

(declare-fun m!102793 () Bool)

(assert (=> bm!9552 m!102793))

(declare-fun m!102795 () Bool)

(assert (=> bm!9555 m!102795))

(assert (=> b!95051 m!101303))

(assert (=> b!95051 m!101303))

(declare-fun m!102797 () Bool)

(assert (=> b!95051 m!102797))

(assert (=> b!95053 m!101303))

(assert (=> b!95053 m!101303))

(assert (=> b!95053 m!101305))

(declare-fun m!102799 () Bool)

(assert (=> b!95047 m!102799))

(declare-fun m!102801 () Bool)

(assert (=> b!95052 m!102801))

(assert (=> d!24977 m!101255))

(assert (=> bm!9556 m!102773))

(declare-fun m!102803 () Bool)

(assert (=> bm!9550 m!102803))

(assert (=> b!94512 d!24977))

(declare-fun d!24979 () Bool)

(assert (=> d!24979 (= (apply!90 lt!46894 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1272 (getValueByKey!146 (toList!766 lt!46894) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3910 () Bool)

(assert (= bs!3910 d!24979))

(assert (=> bs!3910 m!101105))

(declare-fun m!102805 () Bool)

(assert (=> bs!3910 m!102805))

(assert (=> bs!3910 m!102805))

(declare-fun m!102807 () Bool)

(assert (=> bs!3910 m!102807))

(assert (=> b!94461 d!24979))

(assert (=> b!94461 d!24591))

(declare-fun d!24981 () Bool)

(assert (=> d!24981 (= (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94505 d!24981))

(assert (=> d!24629 d!24649))

(assert (=> d!24629 d!24645))

(declare-fun d!24983 () Bool)

(assert (=> d!24983 (contains!786 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46563)))

(assert (=> d!24983 true))

(declare-fun _$35!333 () Unit!2800)

(assert (=> d!24983 (= (choose!572 lt!46552 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46563) _$35!333)))

(declare-fun bs!3911 () Bool)

(assert (= bs!3911 d!24983))

(assert (=> bs!3911 m!101115))

(assert (=> bs!3911 m!101115))

(assert (=> bs!3911 m!101117))

(assert (=> d!24629 d!24983))

(declare-fun d!24985 () Bool)

(declare-fun e!62011 () Bool)

(assert (=> d!24985 e!62011))

(declare-fun res!48061 () Bool)

(assert (=> d!24985 (=> res!48061 e!62011)))

(declare-fun lt!47277 () Bool)

(assert (=> d!24985 (= res!48061 (not lt!47277))))

(declare-fun lt!47275 () Bool)

(assert (=> d!24985 (= lt!47277 lt!47275)))

(declare-fun lt!47276 () Unit!2800)

(declare-fun e!62012 () Unit!2800)

(assert (=> d!24985 (= lt!47276 e!62012)))

(declare-fun c!15941 () Bool)

(assert (=> d!24985 (= c!15941 lt!47275)))

(assert (=> d!24985 (= lt!47275 (containsKey!150 (toList!766 lt!46552) lt!46563))))

(assert (=> d!24985 (= (contains!786 lt!46552 lt!46563) lt!47277)))

(declare-fun b!95058 () Bool)

(declare-fun lt!47278 () Unit!2800)

(assert (=> b!95058 (= e!62012 lt!47278)))

(assert (=> b!95058 (= lt!47278 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46552) lt!46563))))

(assert (=> b!95058 (isDefined!100 (getValueByKey!146 (toList!766 lt!46552) lt!46563))))

(declare-fun b!95059 () Bool)

(declare-fun Unit!2847 () Unit!2800)

(assert (=> b!95059 (= e!62012 Unit!2847)))

(declare-fun b!95060 () Bool)

(assert (=> b!95060 (= e!62011 (isDefined!100 (getValueByKey!146 (toList!766 lt!46552) lt!46563)))))

(assert (= (and d!24985 c!15941) b!95058))

(assert (= (and d!24985 (not c!15941)) b!95059))

(assert (= (and d!24985 (not res!48061)) b!95060))

(declare-fun m!102809 () Bool)

(assert (=> d!24985 m!102809))

(declare-fun m!102811 () Bool)

(assert (=> b!95058 m!102811))

(declare-fun m!102813 () Bool)

(assert (=> b!95058 m!102813))

(assert (=> b!95058 m!102813))

(declare-fun m!102815 () Bool)

(assert (=> b!95058 m!102815))

(assert (=> b!95060 m!102813))

(assert (=> b!95060 m!102813))

(assert (=> b!95060 m!102815))

(assert (=> d!24629 d!24985))

(declare-fun b!95079 () Bool)

(declare-fun lt!47284 () SeekEntryResult!254)

(assert (=> b!95079 (and (bvsge (index!3159 lt!47284) #b00000000000000000000000000000000) (bvslt (index!3159 lt!47284) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!48069 () Bool)

(assert (=> b!95079 (= res!48069 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!47284)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62026 () Bool)

(assert (=> b!95079 (=> res!48069 e!62026)))

(declare-fun b!95080 () Bool)

(assert (=> b!95080 (and (bvsge (index!3159 lt!47284) #b00000000000000000000000000000000) (bvslt (index!3159 lt!47284) (size!2233 (_keys!4116 newMap!16))))))

(assert (=> b!95080 (= e!62026 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!47284)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95081 () Bool)

(declare-fun e!62023 () Bool)

(declare-fun e!62024 () Bool)

(assert (=> b!95081 (= e!62023 e!62024)))

(declare-fun res!48070 () Bool)

(assert (=> b!95081 (= res!48070 (and ((_ is Intermediate!254) lt!47284) (not (undefined!1066 lt!47284)) (bvslt (x!12657 lt!47284) #b01111111111111111111111111111110) (bvsge (x!12657 lt!47284) #b00000000000000000000000000000000) (bvsge (x!12657 lt!47284) #b00000000000000000000000000000000)))))

(assert (=> b!95081 (=> (not res!48070) (not e!62024))))

(declare-fun d!24987 () Bool)

(assert (=> d!24987 e!62023))

(declare-fun c!15948 () Bool)

(assert (=> d!24987 (= c!15948 (and ((_ is Intermediate!254) lt!47284) (undefined!1066 lt!47284)))))

(declare-fun e!62027 () SeekEntryResult!254)

(assert (=> d!24987 (= lt!47284 e!62027)))

(declare-fun c!15949 () Bool)

(assert (=> d!24987 (= c!15949 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!47283 () (_ BitVec 64))

(assert (=> d!24987 (= lt!47283 (select (arr!1984 (_keys!4116 newMap!16)) (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16))))))

(assert (=> d!24987 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!24987 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)) lt!47284)))

(declare-fun b!95082 () Bool)

(assert (=> b!95082 (and (bvsge (index!3159 lt!47284) #b00000000000000000000000000000000) (bvslt (index!3159 lt!47284) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun res!48068 () Bool)

(assert (=> b!95082 (= res!48068 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3159 lt!47284)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> b!95082 (=> res!48068 e!62026)))

(assert (=> b!95082 (= e!62024 e!62026)))

(declare-fun b!95083 () Bool)

(assert (=> b!95083 (= e!62023 (bvsge (x!12657 lt!47284) #b01111111111111111111111111111110))))

(declare-fun b!95084 () Bool)

(declare-fun e!62025 () SeekEntryResult!254)

(assert (=> b!95084 (= e!62025 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) #b00000000000000000000000000000000 (mask!6509 newMap!16)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(declare-fun b!95085 () Bool)

(assert (=> b!95085 (= e!62027 (Intermediate!254 true (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!95086 () Bool)

(assert (=> b!95086 (= e!62027 e!62025)))

(declare-fun c!15950 () Bool)

(assert (=> b!95086 (= c!15950 (or (= lt!47283 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (= (bvadd lt!47283 lt!47283) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95087 () Bool)

(assert (=> b!95087 (= e!62025 (Intermediate!254 false (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!24987 c!15949) b!95085))

(assert (= (and d!24987 (not c!15949)) b!95086))

(assert (= (and b!95086 c!15950) b!95087))

(assert (= (and b!95086 (not c!15950)) b!95084))

(assert (= (and d!24987 c!15948) b!95083))

(assert (= (and d!24987 (not c!15948)) b!95081))

(assert (= (and b!95081 res!48070) b!95082))

(assert (= (and b!95082 (not res!48068)) b!95079))

(assert (= (and b!95079 (not res!48069)) b!95080))

(declare-fun m!102817 () Bool)

(assert (=> b!95079 m!102817))

(assert (=> b!95084 m!101269))

(declare-fun m!102819 () Bool)

(assert (=> b!95084 m!102819))

(assert (=> b!95084 m!102819))

(assert (=> b!95084 m!100977))

(declare-fun m!102821 () Bool)

(assert (=> b!95084 m!102821))

(assert (=> d!24987 m!101269))

(declare-fun m!102823 () Bool)

(assert (=> d!24987 m!102823))

(assert (=> d!24987 m!101255))

(assert (=> b!95080 m!102817))

(assert (=> b!95082 m!102817))

(assert (=> d!24553 d!24987))

(declare-fun d!24989 () Bool)

(declare-fun lt!47290 () (_ BitVec 32))

(declare-fun lt!47289 () (_ BitVec 32))

(assert (=> d!24989 (= lt!47290 (bvmul (bvxor lt!47289 (bvlshr lt!47289 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!24989 (= lt!47289 ((_ extract 31 0) (bvand (bvxor (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvlshr (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!24989 (and (bvsge (mask!6509 newMap!16) #b00000000000000000000000000000000) (let ((res!48071 (let ((h!2168 ((_ extract 31 0) (bvand (bvxor (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvlshr (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12761 (bvmul (bvxor h!2168 (bvlshr h!2168 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12761 (bvlshr x!12761 #b00000000000000000000000000001101)) (mask!6509 newMap!16)))))) (and (bvslt res!48071 (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48071 #b00000000000000000000000000000000))))))

(assert (=> d!24989 (= (toIndex!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (mask!6509 newMap!16)) (bvand (bvxor lt!47290 (bvlshr lt!47290 #b00000000000000000000000000001101)) (mask!6509 newMap!16)))))

(assert (=> d!24553 d!24989))

(assert (=> d!24553 d!24755))

(declare-fun b!95088 () Bool)

(declare-fun e!62030 () Bool)

(declare-fun e!62028 () Bool)

(assert (=> b!95088 (= e!62030 e!62028)))

(declare-fun c!15951 () Bool)

(assert (=> b!95088 (= c!15951 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95089 () Bool)

(declare-fun e!62029 () Bool)

(assert (=> b!95089 (= e!62028 e!62029)))

(declare-fun lt!47291 () (_ BitVec 64))

(assert (=> b!95089 (= lt!47291 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!47292 () Unit!2800)

(assert (=> b!95089 (= lt!47292 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) lt!47291 #b00000000000000000000000000000000))))

(assert (=> b!95089 (arrayContainsKey!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) lt!47291 #b00000000000000000000000000000000)))

(declare-fun lt!47293 () Unit!2800)

(assert (=> b!95089 (= lt!47293 lt!47292)))

(declare-fun res!48072 () Bool)

(assert (=> b!95089 (= res!48072 (= (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000) (_keys!4116 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992)))) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!95089 (=> (not res!48072) (not e!62029))))

(declare-fun b!95090 () Bool)

(declare-fun call!9560 () Bool)

(assert (=> b!95090 (= e!62029 call!9560)))

(declare-fun b!95091 () Bool)

(assert (=> b!95091 (= e!62028 call!9560)))

(declare-fun d!24991 () Bool)

(declare-fun res!48073 () Bool)

(assert (=> d!24991 (=> res!48073 e!62030)))

(assert (=> d!24991 (= res!48073 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!24991 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992)))) e!62030)))

(declare-fun bm!9557 () Bool)

(assert (=> bm!9557 (= call!9560 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4116 (v!2754 (underlying!323 thiss!992))) (mask!6509 (v!2754 (underlying!323 thiss!992)))))))

(assert (= (and d!24991 (not res!48073)) b!95088))

(assert (= (and b!95088 c!15951) b!95089))

(assert (= (and b!95088 (not c!15951)) b!95091))

(assert (= (and b!95089 res!48072) b!95090))

(assert (= (or b!95090 b!95091) bm!9557))

(assert (=> b!95088 m!102165))

(assert (=> b!95088 m!102165))

(assert (=> b!95088 m!102167))

(assert (=> b!95089 m!102165))

(declare-fun m!102825 () Bool)

(assert (=> b!95089 m!102825))

(declare-fun m!102827 () Bool)

(assert (=> b!95089 m!102827))

(assert (=> b!95089 m!102165))

(declare-fun m!102829 () Bool)

(assert (=> b!95089 m!102829))

(declare-fun m!102831 () Bool)

(assert (=> bm!9557 m!102831))

(assert (=> b!94503 d!24991))

(declare-fun b!95092 () Bool)

(declare-fun e!62031 () Option!152)

(assert (=> b!95092 (= e!62031 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46698)))))))

(declare-fun b!95094 () Bool)

(declare-fun e!62032 () Option!152)

(assert (=> b!95094 (= e!62032 (getValueByKey!146 (t!5469 (toList!766 lt!46698)) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95093 () Bool)

(assert (=> b!95093 (= e!62031 e!62032)))

(declare-fun c!15953 () Bool)

(assert (=> b!95093 (= c!15953 (and ((_ is Cons!1572) (toList!766 lt!46698)) (not (= (_1!1163 (h!2164 (toList!766 lt!46698))) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!95095 () Bool)

(assert (=> b!95095 (= e!62032 None!150)))

(declare-fun c!15952 () Bool)

(declare-fun d!24993 () Bool)

(assert (=> d!24993 (= c!15952 (and ((_ is Cons!1572) (toList!766 lt!46698)) (= (_1!1163 (h!2164 (toList!766 lt!46698))) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!24993 (= (getValueByKey!146 (toList!766 lt!46698) (_1!1163 (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62031)))

(assert (= (and d!24993 c!15952) b!95092))

(assert (= (and d!24993 (not c!15952)) b!95093))

(assert (= (and b!95093 c!15953) b!95094))

(assert (= (and b!95093 (not c!15953)) b!95095))

(declare-fun m!102833 () Bool)

(assert (=> b!95094 m!102833))

(assert (=> b!94242 d!24993))

(declare-fun d!24995 () Bool)

(assert (=> d!24995 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(declare-fun lt!47294 () Unit!2800)

(assert (=> d!24995 (= lt!47294 (choose!568 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(declare-fun e!62033 () Bool)

(assert (=> d!24995 e!62033))

(declare-fun res!48074 () Bool)

(assert (=> d!24995 (=> (not res!48074) (not e!62033))))

(assert (=> d!24995 (= res!48074 (isStrictlySorted!297 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!24995 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563) lt!47294)))

(declare-fun b!95096 () Bool)

(assert (=> b!95096 (= e!62033 (containsKey!150 (toList!766 (+!126 lt!46552 (tuple2!2305 lt!46569 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46563))))

(assert (= (and d!24995 res!48074) b!95096))

(assert (=> d!24995 m!101693))

(assert (=> d!24995 m!101693))

(assert (=> d!24995 m!101695))

(declare-fun m!102835 () Bool)

(assert (=> d!24995 m!102835))

(declare-fun m!102837 () Bool)

(assert (=> d!24995 m!102837))

(assert (=> b!95096 m!101689))

(assert (=> b!94498 d!24995))

(assert (=> b!94498 d!24679))

(assert (=> b!94498 d!24681))

(declare-fun d!24997 () Bool)

(declare-fun lt!47295 () Bool)

(assert (=> d!24997 (= lt!47295 (select (content!98 (toList!766 lt!46933)) (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!62034 () Bool)

(assert (=> d!24997 (= lt!47295 e!62034)))

(declare-fun res!48076 () Bool)

(assert (=> d!24997 (=> (not res!48076) (not e!62034))))

(assert (=> d!24997 (= res!48076 ((_ is Cons!1572) (toList!766 lt!46933)))))

(assert (=> d!24997 (= (contains!790 (toList!766 lt!46933) (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!47295)))

(declare-fun b!95097 () Bool)

(declare-fun e!62035 () Bool)

(assert (=> b!95097 (= e!62034 e!62035)))

(declare-fun res!48075 () Bool)

(assert (=> b!95097 (=> res!48075 e!62035)))

(assert (=> b!95097 (= res!48075 (= (h!2164 (toList!766 lt!46933)) (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!95098 () Bool)

(assert (=> b!95098 (= e!62035 (contains!790 (t!5469 (toList!766 lt!46933)) (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!24997 res!48076) b!95097))

(assert (= (and b!95097 (not res!48075)) b!95098))

(declare-fun m!102839 () Bool)

(assert (=> d!24997 m!102839))

(declare-fun m!102841 () Bool)

(assert (=> d!24997 m!102841))

(declare-fun m!102843 () Bool)

(assert (=> b!95098 m!102843))

(assert (=> b!94494 d!24997))

(assert (=> d!24579 d!24947))

(declare-fun b!95099 () Bool)

(declare-fun e!62036 () (_ BitVec 32))

(declare-fun call!9561 () (_ BitVec 32))

(assert (=> b!95099 (= e!62036 call!9561)))

(declare-fun b!95100 () Bool)

(assert (=> b!95100 (= e!62036 (bvadd #b00000000000000000000000000000001 call!9561))))

(declare-fun b!95101 () Bool)

(declare-fun e!62037 () (_ BitVec 32))

(assert (=> b!95101 (= e!62037 e!62036)))

(declare-fun c!15954 () Bool)

(assert (=> b!95101 (= c!15954 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9558 () Bool)

(assert (=> bm!9558 (= call!9561 (arrayCountValidKeys!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun d!24999 () Bool)

(declare-fun lt!47296 () (_ BitVec 32))

(assert (=> d!24999 (and (bvsge lt!47296 #b00000000000000000000000000000000) (bvsle lt!47296 (bvsub (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!24999 (= lt!47296 e!62037)))

(declare-fun c!15955 () Bool)

(assert (=> d!24999 (= c!15955 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!24999 (and (bvsle #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2233 (_keys!4116 newMap!16)) (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(assert (=> d!24999 (= (arrayCountValidKeys!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) lt!47296)))

(declare-fun b!95102 () Bool)

(assert (=> b!95102 (= e!62037 #b00000000000000000000000000000000)))

(assert (= (and d!24999 c!15955) b!95102))

(assert (= (and d!24999 (not c!15955)) b!95101))

(assert (= (and b!95101 c!15954) b!95100))

(assert (= (and b!95101 (not c!15954)) b!95099))

(assert (= (or b!95100 b!95099) bm!9558))

(declare-fun m!102845 () Bool)

(assert (=> b!95101 m!102845))

(assert (=> b!95101 m!102845))

(declare-fun m!102847 () Bool)

(assert (=> b!95101 m!102847))

(declare-fun m!102849 () Bool)

(assert (=> bm!9558 m!102849))

(assert (=> d!24579 d!24999))

(declare-fun b!95103 () Bool)

(declare-fun e!62040 () Bool)

(declare-fun e!62038 () Bool)

(assert (=> b!95103 (= e!62040 e!62038)))

(declare-fun c!15956 () Bool)

(assert (=> b!95103 (= c!15956 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95104 () Bool)

(declare-fun e!62039 () Bool)

(assert (=> b!95104 (= e!62038 e!62039)))

(declare-fun lt!47297 () (_ BitVec 64))

(assert (=> b!95104 (= lt!47297 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47298 () Unit!2800)

(assert (=> b!95104 (= lt!47298 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) lt!47297 #b00000000000000000000000000000000))))

(assert (=> b!95104 (arrayContainsKey!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) lt!47297 #b00000000000000000000000000000000)))

(declare-fun lt!47299 () Unit!2800)

(assert (=> b!95104 (= lt!47299 lt!47298)))

(declare-fun res!48077 () Bool)

(assert (=> b!95104 (= res!48077 (= (seekEntryOrOpen!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000) (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (mask!6509 newMap!16)) (Found!254 #b00000000000000000000000000000000)))))

(assert (=> b!95104 (=> (not res!48077) (not e!62039))))

(declare-fun b!95105 () Bool)

(declare-fun call!9562 () Bool)

(assert (=> b!95105 (= e!62039 call!9562)))

(declare-fun b!95106 () Bool)

(assert (=> b!95106 (= e!62038 call!9562)))

(declare-fun d!25001 () Bool)

(declare-fun res!48078 () Bool)

(assert (=> d!25001 (=> res!48078 e!62040)))

(assert (=> d!25001 (= res!48078 (bvsge #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(assert (=> d!25001 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (mask!6509 newMap!16)) e!62040)))

(declare-fun bm!9559 () Bool)

(assert (=> bm!9559 (= call!9562 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (mask!6509 newMap!16)))))

(assert (= (and d!25001 (not res!48078)) b!95103))

(assert (= (and b!95103 c!15956) b!95104))

(assert (= (and b!95103 (not c!15956)) b!95106))

(assert (= (and b!95104 res!48077) b!95105))

(assert (= (or b!95105 b!95106) bm!9559))

(assert (=> b!95103 m!102845))

(assert (=> b!95103 m!102845))

(assert (=> b!95103 m!102847))

(assert (=> b!95104 m!102845))

(declare-fun m!102851 () Bool)

(assert (=> b!95104 m!102851))

(declare-fun m!102853 () Bool)

(assert (=> b!95104 m!102853))

(assert (=> b!95104 m!102845))

(declare-fun m!102855 () Bool)

(assert (=> b!95104 m!102855))

(declare-fun m!102857 () Bool)

(assert (=> bm!9559 m!102857))

(assert (=> d!24579 d!25001))

(declare-fun d!25003 () Bool)

(declare-fun e!62043 () Bool)

(assert (=> d!25003 e!62043))

(declare-fun res!48081 () Bool)

(assert (=> d!25003 (=> (not res!48081) (not e!62043))))

(assert (=> d!25003 (= res!48081 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 (_keys!4116 newMap!16)))))))

(declare-fun lt!47302 () Unit!2800)

(declare-fun choose!41 (array!4177 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1575) Unit!2800)

(assert (=> d!25003 (= lt!47302 (choose!41 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) lt!46796 lt!46810))))

(assert (=> d!25003 (bvslt (size!2233 (_keys!4116 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!25003 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) lt!46796 lt!46810) lt!47302)))

(declare-fun b!95109 () Bool)

(assert (=> b!95109 (= e!62043 (arrayNoDuplicates!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) lt!46796 lt!46810))))

(assert (= (and d!25003 res!48081) b!95109))

(assert (=> d!25003 m!100977))

(declare-fun m!102859 () Bool)

(assert (=> d!25003 m!102859))

(assert (=> b!95109 m!101405))

(assert (=> b!95109 m!101399))

(assert (=> d!24579 d!25003))

(declare-fun b!95110 () Bool)

(declare-fun e!62047 () Bool)

(declare-fun e!62045 () Bool)

(assert (=> b!95110 (= e!62047 e!62045)))

(declare-fun c!15957 () Bool)

(assert (=> b!95110 (= c!15957 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) lt!46796)))))

(declare-fun bm!9560 () Bool)

(declare-fun call!9563 () Bool)

(assert (=> bm!9560 (= call!9563 (arrayNoDuplicates!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (bvadd lt!46796 #b00000000000000000000000000000001) (ite c!15957 (Cons!1571 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) lt!46796) lt!46810) lt!46810)))))

(declare-fun b!95111 () Bool)

(assert (=> b!95111 (= e!62045 call!9563)))

(declare-fun d!25005 () Bool)

(declare-fun res!48083 () Bool)

(declare-fun e!62046 () Bool)

(assert (=> d!25005 (=> res!48083 e!62046)))

(assert (=> d!25005 (= res!48083 (bvsge lt!46796 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(assert (=> d!25005 (= (arrayNoDuplicates!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) lt!46796 lt!46810) e!62046)))

(declare-fun b!95112 () Bool)

(declare-fun e!62044 () Bool)

(assert (=> b!95112 (= e!62044 (contains!789 lt!46810 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) lt!46796)))))

(declare-fun b!95113 () Bool)

(assert (=> b!95113 (= e!62045 call!9563)))

(declare-fun b!95114 () Bool)

(assert (=> b!95114 (= e!62046 e!62047)))

(declare-fun res!48082 () Bool)

(assert (=> b!95114 (=> (not res!48082) (not e!62047))))

(assert (=> b!95114 (= res!48082 (not e!62044))))

(declare-fun res!48084 () Bool)

(assert (=> b!95114 (=> (not res!48084) (not e!62044))))

(assert (=> b!95114 (= res!48084 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) lt!46796)))))

(assert (= (and d!25005 (not res!48083)) b!95114))

(assert (= (and b!95114 res!48084) b!95112))

(assert (= (and b!95114 res!48082) b!95110))

(assert (= (and b!95110 c!15957) b!95113))

(assert (= (and b!95110 (not c!15957)) b!95111))

(assert (= (or b!95113 b!95111) bm!9560))

(declare-fun m!102861 () Bool)

(assert (=> b!95110 m!102861))

(assert (=> b!95110 m!102861))

(declare-fun m!102863 () Bool)

(assert (=> b!95110 m!102863))

(assert (=> bm!9560 m!102861))

(declare-fun m!102865 () Bool)

(assert (=> bm!9560 m!102865))

(assert (=> b!95112 m!102861))

(assert (=> b!95112 m!102861))

(declare-fun m!102867 () Bool)

(assert (=> b!95112 m!102867))

(assert (=> b!95114 m!102861))

(assert (=> b!95114 m!102861))

(assert (=> b!95114 m!102863))

(assert (=> d!24579 d!25005))

(declare-fun d!25007 () Bool)

(assert (=> d!25007 (arrayContainsKey!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!47303 () Unit!2800)

(assert (=> d!25007 (= lt!47303 (choose!13 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(assert (=> d!25007 (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000)))

(assert (=> d!25007 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))) lt!47303)))

(declare-fun bs!3912 () Bool)

(assert (= bs!3912 d!25007))

(assert (=> bs!3912 m!100977))

(assert (=> bs!3912 m!101407))

(assert (=> bs!3912 m!100977))

(declare-fun m!102869 () Bool)

(assert (=> bs!3912 m!102869))

(assert (=> d!24579 d!25007))

(assert (=> d!24579 d!24667))

(assert (=> d!24579 d!24567))

(declare-fun b!95115 () Bool)

(declare-fun e!62055 () Unit!2800)

(declare-fun Unit!2848 () Unit!2800)

(assert (=> b!95115 (= e!62055 Unit!2848)))

(declare-fun b!95116 () Bool)

(declare-fun e!62060 () ListLongMap!1501)

(declare-fun call!9564 () ListLongMap!1501)

(assert (=> b!95116 (= e!62060 call!9564)))

(declare-fun b!95117 () Bool)

(declare-fun e!62049 () ListLongMap!1501)

(declare-fun call!9569 () ListLongMap!1501)

(assert (=> b!95117 (= e!62049 call!9569)))

(declare-fun b!95118 () Bool)

(declare-fun e!62057 () Bool)

(declare-fun call!9567 () Bool)

(assert (=> b!95118 (= e!62057 (not call!9567))))

(declare-fun bm!9561 () Bool)

(declare-fun lt!47325 () ListLongMap!1501)

(assert (=> bm!9561 (= call!9567 (contains!786 lt!47325 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95119 () Bool)

(assert (=> b!95119 (= e!62049 call!9564)))

(declare-fun bm!9562 () Bool)

(declare-fun call!9568 () ListLongMap!1501)

(assert (=> bm!9562 (= call!9564 call!9568)))

(declare-fun bm!9563 () Bool)

(declare-fun c!15962 () Bool)

(declare-fun call!9566 () ListLongMap!1501)

(declare-fun call!9565 () ListLongMap!1501)

(declare-fun c!15963 () Bool)

(assert (=> bm!9563 (= call!9568 (+!126 (ite c!15963 call!9566 (ite c!15962 call!9565 call!9569)) (ite (or c!15963 c!15962) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9564 () Bool)

(assert (=> bm!9564 (= call!9569 call!9565)))

(declare-fun b!95121 () Bool)

(declare-fun c!15960 () Bool)

(assert (=> b!95121 (= c!15960 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95121 (= e!62060 e!62049)))

(declare-fun b!95122 () Bool)

(declare-fun e!62048 () ListLongMap!1501)

(assert (=> b!95122 (= e!62048 e!62060)))

(assert (=> b!95122 (= c!15962 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95123 () Bool)

(declare-fun e!62052 () Bool)

(declare-fun e!62059 () Bool)

(assert (=> b!95123 (= e!62052 e!62059)))

(declare-fun c!15961 () Bool)

(assert (=> b!95123 (= c!15961 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95124 () Bool)

(assert (=> b!95124 (= e!62048 (+!126 call!9568 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9565 () Bool)

(assert (=> bm!9565 (= call!9565 call!9566)))

(declare-fun b!95125 () Bool)

(declare-fun e!62058 () Bool)

(assert (=> b!95125 (= e!62058 (= (apply!90 lt!47325 (select (arr!1984 lt!46814) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 lt!46806) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95125 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 lt!46806)))))

(assert (=> b!95125 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 lt!46814)))))

(declare-fun b!95126 () Bool)

(declare-fun e!62056 () Bool)

(assert (=> b!95126 (= e!62056 (= (apply!90 lt!47325 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!95127 () Bool)

(declare-fun res!48085 () Bool)

(assert (=> b!95127 (=> (not res!48085) (not e!62052))))

(assert (=> b!95127 (= res!48085 e!62057)))

(declare-fun c!15958 () Bool)

(assert (=> b!95127 (= c!15958 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95128 () Bool)

(declare-fun res!48090 () Bool)

(assert (=> b!95128 (=> (not res!48090) (not e!62052))))

(declare-fun e!62054 () Bool)

(assert (=> b!95128 (= res!48090 e!62054)))

(declare-fun res!48086 () Bool)

(assert (=> b!95128 (=> res!48086 e!62054)))

(declare-fun e!62051 () Bool)

(assert (=> b!95128 (= res!48086 (not e!62051))))

(declare-fun res!48092 () Bool)

(assert (=> b!95128 (=> (not res!48092) (not e!62051))))

(assert (=> b!95128 (= res!48092 (bvslt #b00000000000000000000000000000000 (size!2233 lt!46814)))))

(declare-fun bm!9566 () Bool)

(declare-fun call!9570 () Bool)

(assert (=> bm!9566 (= call!9570 (contains!786 lt!47325 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95129 () Bool)

(assert (=> b!95129 (= e!62051 (validKeyInArray!0 (select (arr!1984 lt!46814) #b00000000000000000000000000000000)))))

(declare-fun b!95130 () Bool)

(assert (=> b!95130 (= e!62054 e!62058)))

(declare-fun res!48087 () Bool)

(assert (=> b!95130 (=> (not res!48087) (not e!62058))))

(assert (=> b!95130 (= res!48087 (contains!786 lt!47325 (select (arr!1984 lt!46814) #b00000000000000000000000000000000)))))

(assert (=> b!95130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 lt!46814)))))

(declare-fun b!95120 () Bool)

(declare-fun lt!47314 () Unit!2800)

(assert (=> b!95120 (= e!62055 lt!47314)))

(declare-fun lt!47306 () ListLongMap!1501)

(assert (=> b!95120 (= lt!47306 (getCurrentListMapNoExtraKeys!90 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47323 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47323 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47317 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47317 (select (arr!1984 lt!46814) #b00000000000000000000000000000000))))

(declare-fun lt!47319 () Unit!2800)

(assert (=> b!95120 (= lt!47319 (addStillContains!66 lt!47306 lt!47323 (zeroValue!2322 newMap!16) lt!47317))))

(assert (=> b!95120 (contains!786 (+!126 lt!47306 (tuple2!2305 lt!47323 (zeroValue!2322 newMap!16))) lt!47317)))

(declare-fun lt!47322 () Unit!2800)

(assert (=> b!95120 (= lt!47322 lt!47319)))

(declare-fun lt!47307 () ListLongMap!1501)

(assert (=> b!95120 (= lt!47307 (getCurrentListMapNoExtraKeys!90 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47311 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47311 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47308 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47308 (select (arr!1984 lt!46814) #b00000000000000000000000000000000))))

(declare-fun lt!47312 () Unit!2800)

(assert (=> b!95120 (= lt!47312 (addApplyDifferent!66 lt!47307 lt!47311 (minValue!2322 newMap!16) lt!47308))))

(assert (=> b!95120 (= (apply!90 (+!126 lt!47307 (tuple2!2305 lt!47311 (minValue!2322 newMap!16))) lt!47308) (apply!90 lt!47307 lt!47308))))

(declare-fun lt!47316 () Unit!2800)

(assert (=> b!95120 (= lt!47316 lt!47312)))

(declare-fun lt!47304 () ListLongMap!1501)

(assert (=> b!95120 (= lt!47304 (getCurrentListMapNoExtraKeys!90 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47309 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47309 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47305 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47305 (select (arr!1984 lt!46814) #b00000000000000000000000000000000))))

(declare-fun lt!47313 () Unit!2800)

(assert (=> b!95120 (= lt!47313 (addApplyDifferent!66 lt!47304 lt!47309 (zeroValue!2322 newMap!16) lt!47305))))

(assert (=> b!95120 (= (apply!90 (+!126 lt!47304 (tuple2!2305 lt!47309 (zeroValue!2322 newMap!16))) lt!47305) (apply!90 lt!47304 lt!47305))))

(declare-fun lt!47321 () Unit!2800)

(assert (=> b!95120 (= lt!47321 lt!47313)))

(declare-fun lt!47315 () ListLongMap!1501)

(assert (=> b!95120 (= lt!47315 (getCurrentListMapNoExtraKeys!90 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47324 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47324 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47320 () (_ BitVec 64))

(assert (=> b!95120 (= lt!47320 (select (arr!1984 lt!46814) #b00000000000000000000000000000000))))

(assert (=> b!95120 (= lt!47314 (addApplyDifferent!66 lt!47315 lt!47324 (minValue!2322 newMap!16) lt!47320))))

(assert (=> b!95120 (= (apply!90 (+!126 lt!47315 (tuple2!2305 lt!47324 (minValue!2322 newMap!16))) lt!47320) (apply!90 lt!47315 lt!47320))))

(declare-fun d!25009 () Bool)

(assert (=> d!25009 e!62052))

(declare-fun res!48093 () Bool)

(assert (=> d!25009 (=> (not res!48093) (not e!62052))))

(assert (=> d!25009 (= res!48093 (or (bvsge #b00000000000000000000000000000000 (size!2233 lt!46814)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 lt!46814)))))))

(declare-fun lt!47318 () ListLongMap!1501)

(assert (=> d!25009 (= lt!47325 lt!47318)))

(declare-fun lt!47310 () Unit!2800)

(assert (=> d!25009 (= lt!47310 e!62055)))

(declare-fun c!15959 () Bool)

(declare-fun e!62050 () Bool)

(assert (=> d!25009 (= c!15959 e!62050)))

(declare-fun res!48091 () Bool)

(assert (=> d!25009 (=> (not res!48091) (not e!62050))))

(assert (=> d!25009 (= res!48091 (bvslt #b00000000000000000000000000000000 (size!2233 lt!46814)))))

(assert (=> d!25009 (= lt!47318 e!62048)))

(assert (=> d!25009 (= c!15963 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25009 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25009 (= (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47325)))

(declare-fun b!95131 () Bool)

(declare-fun e!62053 () Bool)

(assert (=> b!95131 (= e!62053 (= (apply!90 lt!47325 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!95132 () Bool)

(assert (=> b!95132 (= e!62050 (validKeyInArray!0 (select (arr!1984 lt!46814) #b00000000000000000000000000000000)))))

(declare-fun b!95133 () Bool)

(assert (=> b!95133 (= e!62057 e!62053)))

(declare-fun res!48089 () Bool)

(assert (=> b!95133 (= res!48089 call!9567)))

(assert (=> b!95133 (=> (not res!48089) (not e!62053))))

(declare-fun b!95134 () Bool)

(assert (=> b!95134 (= e!62059 e!62056)))

(declare-fun res!48088 () Bool)

(assert (=> b!95134 (= res!48088 call!9570)))

(assert (=> b!95134 (=> (not res!48088) (not e!62056))))

(declare-fun bm!9567 () Bool)

(assert (=> bm!9567 (= call!9566 (getCurrentListMapNoExtraKeys!90 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95135 () Bool)

(assert (=> b!95135 (= e!62059 (not call!9570))))

(assert (= (and d!25009 c!15963) b!95124))

(assert (= (and d!25009 (not c!15963)) b!95122))

(assert (= (and b!95122 c!15962) b!95116))

(assert (= (and b!95122 (not c!15962)) b!95121))

(assert (= (and b!95121 c!15960) b!95119))

(assert (= (and b!95121 (not c!15960)) b!95117))

(assert (= (or b!95119 b!95117) bm!9564))

(assert (= (or b!95116 bm!9564) bm!9565))

(assert (= (or b!95116 b!95119) bm!9562))

(assert (= (or b!95124 bm!9565) bm!9567))

(assert (= (or b!95124 bm!9562) bm!9563))

(assert (= (and d!25009 res!48091) b!95132))

(assert (= (and d!25009 c!15959) b!95120))

(assert (= (and d!25009 (not c!15959)) b!95115))

(assert (= (and d!25009 res!48093) b!95128))

(assert (= (and b!95128 res!48092) b!95129))

(assert (= (and b!95128 (not res!48086)) b!95130))

(assert (= (and b!95130 res!48087) b!95125))

(assert (= (and b!95128 res!48090) b!95127))

(assert (= (and b!95127 c!15958) b!95133))

(assert (= (and b!95127 (not c!15958)) b!95118))

(assert (= (and b!95133 res!48089) b!95131))

(assert (= (or b!95133 b!95118) bm!9561))

(assert (= (and b!95127 res!48085) b!95123))

(assert (= (and b!95123 c!15961) b!95134))

(assert (= (and b!95123 (not c!15961)) b!95135))

(assert (= (and b!95134 res!48088) b!95126))

(assert (= (or b!95134 b!95135) bm!9566))

(declare-fun b_lambda!4187 () Bool)

(assert (=> (not b_lambda!4187) (not b!95125)))

(assert (=> b!95125 t!5482))

(declare-fun b_and!5813 () Bool)

(assert (= b_and!5809 (and (=> t!5482 result!3197) b_and!5813)))

(assert (=> b!95125 t!5484))

(declare-fun b_and!5815 () Bool)

(assert (= b_and!5811 (and (=> t!5484 result!3199) b_and!5815)))

(declare-fun m!102871 () Bool)

(assert (=> b!95124 m!102871))

(declare-fun m!102873 () Bool)

(assert (=> b!95129 m!102873))

(assert (=> b!95129 m!102873))

(declare-fun m!102875 () Bool)

(assert (=> b!95129 m!102875))

(declare-fun m!102877 () Bool)

(assert (=> b!95120 m!102877))

(declare-fun m!102879 () Bool)

(assert (=> b!95120 m!102879))

(declare-fun m!102881 () Bool)

(assert (=> b!95120 m!102881))

(declare-fun m!102883 () Bool)

(assert (=> b!95120 m!102883))

(declare-fun m!102885 () Bool)

(assert (=> b!95120 m!102885))

(assert (=> b!95120 m!102877))

(declare-fun m!102887 () Bool)

(assert (=> b!95120 m!102887))

(declare-fun m!102889 () Bool)

(assert (=> b!95120 m!102889))

(assert (=> b!95120 m!102873))

(assert (=> b!95120 m!102889))

(declare-fun m!102891 () Bool)

(assert (=> b!95120 m!102891))

(declare-fun m!102893 () Bool)

(assert (=> b!95120 m!102893))

(declare-fun m!102895 () Bool)

(assert (=> b!95120 m!102895))

(declare-fun m!102897 () Bool)

(assert (=> b!95120 m!102897))

(declare-fun m!102899 () Bool)

(assert (=> b!95120 m!102899))

(declare-fun m!102901 () Bool)

(assert (=> b!95120 m!102901))

(declare-fun m!102903 () Bool)

(assert (=> b!95120 m!102903))

(assert (=> b!95120 m!102883))

(declare-fun m!102905 () Bool)

(assert (=> b!95120 m!102905))

(assert (=> b!95120 m!102887))

(declare-fun m!102907 () Bool)

(assert (=> b!95120 m!102907))

(assert (=> b!95125 m!102873))

(declare-fun m!102909 () Bool)

(assert (=> b!95125 m!102909))

(assert (=> b!95125 m!101341))

(declare-fun m!102911 () Bool)

(assert (=> b!95125 m!102911))

(assert (=> b!95125 m!101341))

(declare-fun m!102913 () Bool)

(assert (=> b!95125 m!102913))

(assert (=> b!95125 m!102873))

(assert (=> b!95125 m!102911))

(declare-fun m!102915 () Bool)

(assert (=> bm!9563 m!102915))

(declare-fun m!102917 () Bool)

(assert (=> bm!9566 m!102917))

(assert (=> b!95130 m!102873))

(assert (=> b!95130 m!102873))

(declare-fun m!102919 () Bool)

(assert (=> b!95130 m!102919))

(assert (=> b!95132 m!102873))

(assert (=> b!95132 m!102873))

(assert (=> b!95132 m!102875))

(declare-fun m!102921 () Bool)

(assert (=> b!95126 m!102921))

(declare-fun m!102923 () Bool)

(assert (=> b!95131 m!102923))

(assert (=> d!25009 m!101255))

(assert (=> bm!9567 m!102895))

(declare-fun m!102925 () Bool)

(assert (=> bm!9561 m!102925))

(assert (=> d!24579 d!25009))

(assert (=> d!24579 d!24673))

(declare-fun b!95136 () Bool)

(declare-fun e!62061 () (_ BitVec 32))

(declare-fun call!9571 () (_ BitVec 32))

(assert (=> b!95136 (= e!62061 call!9571)))

(declare-fun b!95137 () Bool)

(assert (=> b!95137 (= e!62061 (bvadd #b00000000000000000000000000000001 call!9571))))

(declare-fun b!95138 () Bool)

(declare-fun e!62062 () (_ BitVec 32))

(assert (=> b!95138 (= e!62062 e!62061)))

(declare-fun c!15964 () Bool)

(assert (=> b!95138 (= c!15964 (validKeyInArray!0 (select (arr!1984 lt!46802) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(declare-fun bm!9568 () Bool)

(assert (=> bm!9568 (= call!9571 (arrayCountValidKeys!0 lt!46802 (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)))))

(declare-fun d!25011 () Bool)

(declare-fun lt!47326 () (_ BitVec 32))

(assert (=> d!25011 (and (bvsge lt!47326 #b00000000000000000000000000000000) (bvsle lt!47326 (bvsub (size!2233 lt!46802) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(assert (=> d!25011 (= lt!47326 e!62062)))

(declare-fun c!15965 () Bool)

(assert (=> d!25011 (= c!15965 (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)))))

(assert (=> d!25011 (and (bvsle (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)) (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001) (size!2233 lt!46802)))))

(assert (=> d!25011 (= (arrayCountValidKeys!0 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)) lt!47326)))

(declare-fun b!95139 () Bool)

(assert (=> b!95139 (= e!62062 #b00000000000000000000000000000000)))

(assert (= (and d!25011 c!15965) b!95139))

(assert (= (and d!25011 (not c!15965)) b!95138))

(assert (= (and b!95138 c!15964) b!95137))

(assert (= (and b!95138 (not c!15964)) b!95136))

(assert (= (or b!95137 b!95136) bm!9568))

(declare-fun m!102927 () Bool)

(assert (=> b!95138 m!102927))

(assert (=> b!95138 m!102927))

(declare-fun m!102929 () Bool)

(assert (=> b!95138 m!102929))

(declare-fun m!102931 () Bool)

(assert (=> bm!9568 m!102931))

(assert (=> d!24579 d!25011))

(declare-fun b!95140 () Bool)

(declare-fun e!62070 () Unit!2800)

(declare-fun Unit!2849 () Unit!2800)

(assert (=> b!95140 (= e!62070 Unit!2849)))

(declare-fun b!95141 () Bool)

(declare-fun e!62075 () ListLongMap!1501)

(declare-fun call!9572 () ListLongMap!1501)

(assert (=> b!95141 (= e!62075 call!9572)))

(declare-fun b!95142 () Bool)

(declare-fun e!62064 () ListLongMap!1501)

(declare-fun call!9577 () ListLongMap!1501)

(assert (=> b!95142 (= e!62064 call!9577)))

(declare-fun b!95143 () Bool)

(declare-fun e!62072 () Bool)

(declare-fun call!9575 () Bool)

(assert (=> b!95143 (= e!62072 (not call!9575))))

(declare-fun bm!9569 () Bool)

(declare-fun lt!47348 () ListLongMap!1501)

(assert (=> bm!9569 (= call!9575 (contains!786 lt!47348 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95144 () Bool)

(assert (=> b!95144 (= e!62064 call!9572)))

(declare-fun bm!9570 () Bool)

(declare-fun call!9576 () ListLongMap!1501)

(assert (=> bm!9570 (= call!9572 call!9576)))

(declare-fun call!9573 () ListLongMap!1501)

(declare-fun call!9574 () ListLongMap!1501)

(declare-fun c!15971 () Bool)

(declare-fun c!15970 () Bool)

(declare-fun bm!9571 () Bool)

(assert (=> bm!9571 (= call!9576 (+!126 (ite c!15971 call!9574 (ite c!15970 call!9573 call!9577)) (ite (or c!15971 c!15970) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9572 () Bool)

(assert (=> bm!9572 (= call!9577 call!9573)))

(declare-fun b!95146 () Bool)

(declare-fun c!15968 () Bool)

(assert (=> b!95146 (= c!15968 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95146 (= e!62075 e!62064)))

(declare-fun b!95147 () Bool)

(declare-fun e!62063 () ListLongMap!1501)

(assert (=> b!95147 (= e!62063 e!62075)))

(assert (=> b!95147 (= c!15970 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95148 () Bool)

(declare-fun e!62067 () Bool)

(declare-fun e!62074 () Bool)

(assert (=> b!95148 (= e!62067 e!62074)))

(declare-fun c!15969 () Bool)

(assert (=> b!95148 (= c!15969 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95149 () Bool)

(assert (=> b!95149 (= e!62063 (+!126 call!9576 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9573 () Bool)

(assert (=> bm!9573 (= call!9573 call!9574)))

(declare-fun e!62073 () Bool)

(declare-fun b!95150 () Bool)

(assert (=> b!95150 (= e!62073 (= (apply!90 lt!47348 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95150 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))))))

(assert (=> b!95150 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun b!95151 () Bool)

(declare-fun e!62071 () Bool)

(assert (=> b!95151 (= e!62071 (= (apply!90 lt!47348 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!95152 () Bool)

(declare-fun res!48094 () Bool)

(assert (=> b!95152 (=> (not res!48094) (not e!62067))))

(assert (=> b!95152 (= res!48094 e!62072)))

(declare-fun c!15966 () Bool)

(assert (=> b!95152 (= c!15966 (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95153 () Bool)

(declare-fun res!48099 () Bool)

(assert (=> b!95153 (=> (not res!48099) (not e!62067))))

(declare-fun e!62069 () Bool)

(assert (=> b!95153 (= res!48099 e!62069)))

(declare-fun res!48095 () Bool)

(assert (=> b!95153 (=> res!48095 e!62069)))

(declare-fun e!62066 () Bool)

(assert (=> b!95153 (= res!48095 (not e!62066))))

(declare-fun res!48101 () Bool)

(assert (=> b!95153 (=> (not res!48101) (not e!62066))))

(assert (=> b!95153 (= res!48101 (bvslt #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun bm!9574 () Bool)

(declare-fun call!9578 () Bool)

(assert (=> bm!9574 (= call!9578 (contains!786 lt!47348 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95154 () Bool)

(assert (=> b!95154 (= e!62066 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95155 () Bool)

(assert (=> b!95155 (= e!62069 e!62073)))

(declare-fun res!48096 () Bool)

(assert (=> b!95155 (=> (not res!48096) (not e!62073))))

(assert (=> b!95155 (= res!48096 (contains!786 lt!47348 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!95155 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun b!95145 () Bool)

(declare-fun lt!47337 () Unit!2800)

(assert (=> b!95145 (= e!62070 lt!47337)))

(declare-fun lt!47329 () ListLongMap!1501)

(assert (=> b!95145 (= lt!47329 (getCurrentListMapNoExtraKeys!90 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47346 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47346 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47340 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47340 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47342 () Unit!2800)

(assert (=> b!95145 (= lt!47342 (addStillContains!66 lt!47329 lt!47346 (zeroValue!2322 newMap!16) lt!47340))))

(assert (=> b!95145 (contains!786 (+!126 lt!47329 (tuple2!2305 lt!47346 (zeroValue!2322 newMap!16))) lt!47340)))

(declare-fun lt!47345 () Unit!2800)

(assert (=> b!95145 (= lt!47345 lt!47342)))

(declare-fun lt!47330 () ListLongMap!1501)

(assert (=> b!95145 (= lt!47330 (getCurrentListMapNoExtraKeys!90 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47334 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47334 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47331 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47331 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47335 () Unit!2800)

(assert (=> b!95145 (= lt!47335 (addApplyDifferent!66 lt!47330 lt!47334 (minValue!2322 newMap!16) lt!47331))))

(assert (=> b!95145 (= (apply!90 (+!126 lt!47330 (tuple2!2305 lt!47334 (minValue!2322 newMap!16))) lt!47331) (apply!90 lt!47330 lt!47331))))

(declare-fun lt!47339 () Unit!2800)

(assert (=> b!95145 (= lt!47339 lt!47335)))

(declare-fun lt!47327 () ListLongMap!1501)

(assert (=> b!95145 (= lt!47327 (getCurrentListMapNoExtraKeys!90 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47332 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47332 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47328 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47328 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47336 () Unit!2800)

(assert (=> b!95145 (= lt!47336 (addApplyDifferent!66 lt!47327 lt!47332 (zeroValue!2322 newMap!16) lt!47328))))

(assert (=> b!95145 (= (apply!90 (+!126 lt!47327 (tuple2!2305 lt!47332 (zeroValue!2322 newMap!16))) lt!47328) (apply!90 lt!47327 lt!47328))))

(declare-fun lt!47344 () Unit!2800)

(assert (=> b!95145 (= lt!47344 lt!47336)))

(declare-fun lt!47338 () ListLongMap!1501)

(assert (=> b!95145 (= lt!47338 (getCurrentListMapNoExtraKeys!90 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47347 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47347 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47343 () (_ BitVec 64))

(assert (=> b!95145 (= lt!47343 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!95145 (= lt!47337 (addApplyDifferent!66 lt!47338 lt!47347 (minValue!2322 newMap!16) lt!47343))))

(assert (=> b!95145 (= (apply!90 (+!126 lt!47338 (tuple2!2305 lt!47347 (minValue!2322 newMap!16))) lt!47343) (apply!90 lt!47338 lt!47343))))

(declare-fun d!25013 () Bool)

(assert (=> d!25013 e!62067))

(declare-fun res!48102 () Bool)

(assert (=> d!25013 (=> (not res!48102) (not e!62067))))

(assert (=> d!25013 (= res!48102 (or (bvsge #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))))

(declare-fun lt!47341 () ListLongMap!1501)

(assert (=> d!25013 (= lt!47348 lt!47341)))

(declare-fun lt!47333 () Unit!2800)

(assert (=> d!25013 (= lt!47333 e!62070)))

(declare-fun c!15967 () Bool)

(declare-fun e!62065 () Bool)

(assert (=> d!25013 (= c!15967 e!62065)))

(declare-fun res!48100 () Bool)

(assert (=> d!25013 (=> (not res!48100) (not e!62065))))

(assert (=> d!25013 (= res!48100 (bvslt #b00000000000000000000000000000000 (size!2233 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))))))))

(assert (=> d!25013 (= lt!47341 e!62063)))

(assert (=> d!25013 (= c!15971 (and (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2264 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25013 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25013 (= (getCurrentListMap!448 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47348)))

(declare-fun b!95156 () Bool)

(declare-fun e!62068 () Bool)

(assert (=> b!95156 (= e!62068 (= (apply!90 lt!47348 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2322 newMap!16)))))

(declare-fun b!95157 () Bool)

(assert (=> b!95157 (= e!62065 (validKeyInArray!0 (select (arr!1984 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!95158 () Bool)

(assert (=> b!95158 (= e!62072 e!62068)))

(declare-fun res!48098 () Bool)

(assert (=> b!95158 (= res!48098 call!9575)))

(assert (=> b!95158 (=> (not res!48098) (not e!62068))))

(declare-fun b!95159 () Bool)

(assert (=> b!95159 (= e!62074 e!62071)))

(declare-fun res!48097 () Bool)

(assert (=> b!95159 (= res!48097 call!9578)))

(assert (=> b!95159 (=> (not res!48097) (not e!62071))))

(declare-fun bm!9575 () Bool)

(assert (=> bm!9575 (= call!9574 (getCurrentListMapNoExtraKeys!90 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95160 () Bool)

(assert (=> b!95160 (= e!62074 (not call!9578))))

(assert (= (and d!25013 c!15971) b!95149))

(assert (= (and d!25013 (not c!15971)) b!95147))

(assert (= (and b!95147 c!15970) b!95141))

(assert (= (and b!95147 (not c!15970)) b!95146))

(assert (= (and b!95146 c!15968) b!95144))

(assert (= (and b!95146 (not c!15968)) b!95142))

(assert (= (or b!95144 b!95142) bm!9572))

(assert (= (or b!95141 bm!9572) bm!9573))

(assert (= (or b!95141 b!95144) bm!9570))

(assert (= (or b!95149 bm!9573) bm!9575))

(assert (= (or b!95149 bm!9570) bm!9571))

(assert (= (and d!25013 res!48100) b!95157))

(assert (= (and d!25013 c!15967) b!95145))

(assert (= (and d!25013 (not c!15967)) b!95140))

(assert (= (and d!25013 res!48102) b!95153))

(assert (= (and b!95153 res!48101) b!95154))

(assert (= (and b!95153 (not res!48095)) b!95155))

(assert (= (and b!95155 res!48096) b!95150))

(assert (= (and b!95153 res!48099) b!95152))

(assert (= (and b!95152 c!15966) b!95158))

(assert (= (and b!95152 (not c!15966)) b!95143))

(assert (= (and b!95158 res!48098) b!95156))

(assert (= (or b!95158 b!95143) bm!9569))

(assert (= (and b!95152 res!48094) b!95148))

(assert (= (and b!95148 c!15969) b!95159))

(assert (= (and b!95148 (not c!15969)) b!95160))

(assert (= (and b!95159 res!48097) b!95151))

(assert (= (or b!95159 b!95160) bm!9574))

(declare-fun b_lambda!4189 () Bool)

(assert (=> (not b_lambda!4189) (not b!95150)))

(assert (=> b!95150 t!5482))

(declare-fun b_and!5817 () Bool)

(assert (= b_and!5813 (and (=> t!5482 result!3197) b_and!5817)))

(assert (=> b!95150 t!5484))

(declare-fun b_and!5819 () Bool)

(assert (= b_and!5815 (and (=> t!5484 result!3199) b_and!5819)))

(declare-fun m!102933 () Bool)

(assert (=> b!95149 m!102933))

(assert (=> b!95154 m!102845))

(assert (=> b!95154 m!102845))

(assert (=> b!95154 m!102847))

(declare-fun m!102935 () Bool)

(assert (=> b!95145 m!102935))

(declare-fun m!102937 () Bool)

(assert (=> b!95145 m!102937))

(declare-fun m!102939 () Bool)

(assert (=> b!95145 m!102939))

(declare-fun m!102941 () Bool)

(assert (=> b!95145 m!102941))

(declare-fun m!102943 () Bool)

(assert (=> b!95145 m!102943))

(assert (=> b!95145 m!102935))

(declare-fun m!102945 () Bool)

(assert (=> b!95145 m!102945))

(declare-fun m!102947 () Bool)

(assert (=> b!95145 m!102947))

(assert (=> b!95145 m!102845))

(assert (=> b!95145 m!102947))

(declare-fun m!102949 () Bool)

(assert (=> b!95145 m!102949))

(declare-fun m!102951 () Bool)

(assert (=> b!95145 m!102951))

(declare-fun m!102953 () Bool)

(assert (=> b!95145 m!102953))

(declare-fun m!102955 () Bool)

(assert (=> b!95145 m!102955))

(declare-fun m!102957 () Bool)

(assert (=> b!95145 m!102957))

(declare-fun m!102959 () Bool)

(assert (=> b!95145 m!102959))

(declare-fun m!102961 () Bool)

(assert (=> b!95145 m!102961))

(assert (=> b!95145 m!102941))

(declare-fun m!102963 () Bool)

(assert (=> b!95145 m!102963))

(assert (=> b!95145 m!102945))

(declare-fun m!102965 () Bool)

(assert (=> b!95145 m!102965))

(assert (=> b!95150 m!102845))

(declare-fun m!102967 () Bool)

(assert (=> b!95150 m!102967))

(assert (=> b!95150 m!101341))

(declare-fun m!102969 () Bool)

(assert (=> b!95150 m!102969))

(assert (=> b!95150 m!101341))

(declare-fun m!102971 () Bool)

(assert (=> b!95150 m!102971))

(assert (=> b!95150 m!102845))

(assert (=> b!95150 m!102969))

(declare-fun m!102973 () Bool)

(assert (=> bm!9571 m!102973))

(declare-fun m!102975 () Bool)

(assert (=> bm!9574 m!102975))

(assert (=> b!95155 m!102845))

(assert (=> b!95155 m!102845))

(declare-fun m!102977 () Bool)

(assert (=> b!95155 m!102977))

(assert (=> b!95157 m!102845))

(assert (=> b!95157 m!102845))

(assert (=> b!95157 m!102847))

(declare-fun m!102979 () Bool)

(assert (=> b!95151 m!102979))

(declare-fun m!102981 () Bool)

(assert (=> b!95156 m!102981))

(assert (=> d!25013 m!101255))

(assert (=> bm!9575 m!102953))

(declare-fun m!102983 () Bool)

(assert (=> bm!9569 m!102983))

(assert (=> d!24579 d!25013))

(declare-fun d!25015 () Bool)

(declare-fun e!62078 () Bool)

(assert (=> d!25015 e!62078))

(declare-fun res!48105 () Bool)

(assert (=> d!25015 (=> (not res!48105) (not e!62078))))

(assert (=> d!25015 (= res!48105 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 (_keys!4116 newMap!16)))))))

(declare-fun lt!47351 () Unit!2800)

(declare-fun choose!102 ((_ BitVec 64) array!4177 (_ BitVec 32) (_ BitVec 32)) Unit!2800)

(assert (=> d!25015 (= lt!47351 (choose!102 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (mask!6509 newMap!16)))))

(assert (=> d!25015 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25015 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (mask!6509 newMap!16)) lt!47351)))

(declare-fun b!95163 () Bool)

(assert (=> b!95163 (= e!62078 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (mask!6509 newMap!16)))))

(assert (= (and d!25015 res!48105) b!95163))

(assert (=> d!25015 m!100977))

(declare-fun m!102985 () Bool)

(assert (=> d!25015 m!102985))

(assert (=> d!25015 m!101255))

(assert (=> b!95163 m!101405))

(assert (=> b!95163 m!101379))

(assert (=> d!24579 d!25015))

(declare-fun d!25017 () Bool)

(declare-fun e!62083 () Bool)

(assert (=> d!25017 e!62083))

(declare-fun res!48117 () Bool)

(assert (=> d!25017 (=> (not res!48117) (not e!62083))))

(assert (=> d!25017 (= res!48117 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 (_keys!4116 newMap!16)))))))

(declare-fun lt!47354 () Unit!2800)

(declare-fun choose!1 (array!4177 (_ BitVec 32) (_ BitVec 64)) Unit!2800)

(assert (=> d!25017 (= lt!47354 (choose!1 (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!62084 () Bool)

(assert (=> d!25017 e!62084))

(declare-fun res!48114 () Bool)

(assert (=> d!25017 (=> (not res!48114) (not e!62084))))

(assert (=> d!25017 (= res!48114 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 (_keys!4116 newMap!16)))))))

(assert (=> d!25017 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4116 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!47354)))

(declare-fun b!95174 () Bool)

(assert (=> b!95174 (= e!62084 (bvslt (size!2233 (_keys!4116 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!95172 () Bool)

(declare-fun res!48116 () Bool)

(assert (=> b!95172 (=> (not res!48116) (not e!62084))))

(assert (=> b!95172 (= res!48116 (not (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))))

(declare-fun b!95175 () Bool)

(assert (=> b!95175 (= e!62083 (= (arrayCountValidKeys!0 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4116 newMap!16) #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!95173 () Bool)

(declare-fun res!48115 () Bool)

(assert (=> b!95173 (=> (not res!48115) (not e!62084))))

(assert (=> b!95173 (= res!48115 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!25017 res!48114) b!95172))

(assert (= (and b!95172 res!48116) b!95173))

(assert (= (and b!95173 res!48115) b!95174))

(assert (= (and d!25017 res!48117) b!95175))

(assert (=> d!25017 m!100977))

(declare-fun m!102987 () Bool)

(assert (=> d!25017 m!102987))

(declare-fun m!102989 () Bool)

(assert (=> b!95172 m!102989))

(assert (=> b!95172 m!102989))

(declare-fun m!102991 () Bool)

(assert (=> b!95172 m!102991))

(assert (=> b!95175 m!101405))

(assert (=> b!95175 m!101413))

(assert (=> b!95175 m!101241))

(assert (=> b!95173 m!100977))

(assert (=> b!95173 m!101167))

(assert (=> d!24579 d!25017))

(declare-fun d!25019 () Bool)

(declare-fun res!48118 () Bool)

(declare-fun e!62085 () Bool)

(assert (=> d!25019 (=> res!48118 e!62085)))

(assert (=> d!25019 (= res!48118 (= (select (arr!1984 lt!46817) #b00000000000000000000000000000000) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!25019 (= (arrayContainsKey!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000) e!62085)))

(declare-fun b!95176 () Bool)

(declare-fun e!62086 () Bool)

(assert (=> b!95176 (= e!62085 e!62086)))

(declare-fun res!48119 () Bool)

(assert (=> b!95176 (=> (not res!48119) (not e!62086))))

(assert (=> b!95176 (= res!48119 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2233 lt!46817)))))

(declare-fun b!95177 () Bool)

(assert (=> b!95177 (= e!62086 (arrayContainsKey!0 lt!46817 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25019 (not res!48118)) b!95176))

(assert (= (and b!95176 res!48119) b!95177))

(declare-fun m!102993 () Bool)

(assert (=> d!25019 m!102993))

(assert (=> b!95177 m!100977))

(declare-fun m!102995 () Bool)

(assert (=> b!95177 m!102995))

(assert (=> d!24579 d!25019))

(assert (=> d!24579 d!24537))

(declare-fun d!25021 () Bool)

(declare-fun e!62089 () Bool)

(assert (=> d!25021 e!62089))

(declare-fun res!48122 () Bool)

(assert (=> d!25021 (=> (not res!48122) (not e!62089))))

(assert (=> d!25021 (= res!48122 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 (_keys!4116 newMap!16))) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2234 (_values!2418 newMap!16)))))))

(declare-fun lt!47357 () Unit!2800)

(declare-fun choose!578 (array!4177 array!4179 (_ BitVec 32) (_ BitVec 32) V!3129 V!3129 (_ BitVec 32) (_ BitVec 64) V!3129 Int) Unit!2800)

(assert (=> d!25021 (= lt!47357 (choose!578 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!25021 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25021 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2435 newMap!16)) lt!47357)))

(declare-fun b!95180 () Bool)

(assert (=> b!95180 (= e!62089 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (array!4178 (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (size!2233 (_keys!4116 newMap!16))) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))))

(assert (= (and d!25021 res!48122) b!95180))

(assert (=> d!25021 m!100977))

(assert (=> d!25021 m!100975))

(declare-fun m!102997 () Bool)

(assert (=> d!25021 m!102997))

(assert (=> d!25021 m!101255))

(assert (=> b!95180 m!101405))

(assert (=> b!95180 m!101101))

(assert (=> b!95180 m!101101))

(assert (=> b!95180 m!101383))

(assert (=> b!95180 m!101401))

(assert (=> b!95180 m!101385))

(assert (=> d!24579 d!25021))

(declare-fun d!25023 () Bool)

(declare-fun e!62090 () Bool)

(assert (=> d!25023 e!62090))

(declare-fun res!48123 () Bool)

(assert (=> d!25023 (=> res!48123 e!62090)))

(declare-fun lt!47360 () Bool)

(assert (=> d!25023 (= res!48123 (not lt!47360))))

(declare-fun lt!47358 () Bool)

(assert (=> d!25023 (= lt!47360 lt!47358)))

(declare-fun lt!47359 () Unit!2800)

(declare-fun e!62091 () Unit!2800)

(assert (=> d!25023 (= lt!47359 e!62091)))

(declare-fun c!15972 () Bool)

(assert (=> d!25023 (= c!15972 lt!47358)))

(assert (=> d!25023 (= lt!47358 (containsKey!150 (toList!766 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(assert (=> d!25023 (= (contains!786 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))) lt!47360)))

(declare-fun b!95181 () Bool)

(declare-fun lt!47361 () Unit!2800)

(assert (=> b!95181 (= e!62091 lt!47361)))

(assert (=> b!95181 (= lt!47361 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(assert (=> b!95181 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(declare-fun b!95182 () Bool)

(declare-fun Unit!2850 () Unit!2800)

(assert (=> b!95182 (= e!62091 Unit!2850)))

(declare-fun b!95183 () Bool)

(assert (=> b!95183 (= e!62090 (isDefined!100 (getValueByKey!146 (toList!766 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (store (arr!1984 (_keys!4116 newMap!16)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))))

(assert (= (and d!25023 c!15972) b!95181))

(assert (= (and d!25023 (not c!15972)) b!95182))

(assert (= (and d!25023 (not res!48123)) b!95183))

(assert (=> d!25023 m!101391))

(declare-fun m!102999 () Bool)

(assert (=> d!25023 m!102999))

(assert (=> b!95181 m!101391))

(declare-fun m!103001 () Bool)

(assert (=> b!95181 m!103001))

(assert (=> b!95181 m!101391))

(declare-fun m!103003 () Bool)

(assert (=> b!95181 m!103003))

(assert (=> b!95181 m!103003))

(declare-fun m!103005 () Bool)

(assert (=> b!95181 m!103005))

(assert (=> b!95183 m!101391))

(assert (=> b!95183 m!103003))

(assert (=> b!95183 m!103003))

(assert (=> b!95183 m!103005))

(assert (=> d!24579 d!25023))

(assert (=> d!24579 d!24573))

(declare-fun d!25025 () Bool)

(declare-fun e!62092 () Bool)

(assert (=> d!25025 e!62092))

(declare-fun res!48124 () Bool)

(assert (=> d!25025 (=> (not res!48124) (not e!62092))))

(assert (=> d!25025 (= res!48124 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 lt!46814))))))

(declare-fun lt!47362 () Unit!2800)

(assert (=> d!25025 (= lt!47362 (choose!574 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (defaultEntry!2435 newMap!16)))))

(assert (=> d!25025 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25025 (= (lemmaValidKeyInArrayIsInListMap!98 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (defaultEntry!2435 newMap!16)) lt!47362)))

(declare-fun b!95184 () Bool)

(assert (=> b!95184 (= e!62092 (contains!786 (getCurrentListMap!448 lt!46814 lt!46806 (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (select (arr!1984 lt!46814) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(assert (= (and d!25025 res!48124) b!95184))

(declare-fun m!103007 () Bool)

(assert (=> d!25025 m!103007))

(assert (=> d!25025 m!101255))

(assert (=> b!95184 m!101389))

(declare-fun m!103009 () Bool)

(assert (=> b!95184 m!103009))

(assert (=> b!95184 m!101389))

(assert (=> b!95184 m!103009))

(declare-fun m!103011 () Bool)

(assert (=> b!95184 m!103011))

(assert (=> d!24579 d!25025))

(declare-fun d!25027 () Bool)

(assert (=> d!25027 (= (arrayCountValidKeys!0 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (bvadd (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!47365 () Unit!2800)

(declare-fun choose!2 (array!4177 (_ BitVec 32)) Unit!2800)

(assert (=> d!25027 (= lt!47365 (choose!2 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))))))

(declare-fun e!62095 () Bool)

(assert (=> d!25027 e!62095))

(declare-fun res!48129 () Bool)

(assert (=> d!25027 (=> (not res!48129) (not e!62095))))

(assert (=> d!25027 (= res!48129 (and (bvsge (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) #b00000000000000000000000000000000) (bvslt (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)) (size!2233 lt!46802))))))

(assert (=> d!25027 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!46802 (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666))) lt!47365)))

(declare-fun b!95189 () Bool)

(declare-fun res!48130 () Bool)

(assert (=> b!95189 (=> (not res!48130) (not e!62095))))

(assert (=> b!95189 (= res!48130 (validKeyInArray!0 (select (arr!1984 lt!46802) (ite c!15694 (index!3160 lt!46666) (index!3157 lt!46666)))))))

(declare-fun b!95190 () Bool)

(assert (=> b!95190 (= e!62095 (bvslt (size!2233 lt!46802) #b01111111111111111111111111111111))))

(assert (= (and d!25027 res!48129) b!95189))

(assert (= (and b!95189 res!48130) b!95190))

(assert (=> d!25027 m!101381))

(declare-fun m!103013 () Bool)

(assert (=> d!25027 m!103013))

(assert (=> b!95189 m!102927))

(assert (=> b!95189 m!102927))

(assert (=> b!95189 m!102929))

(assert (=> d!24579 d!25027))

(assert (=> b!94480 d!24677))

(declare-fun d!25029 () Bool)

(declare-fun e!62096 () Bool)

(assert (=> d!25029 e!62096))

(declare-fun res!48131 () Bool)

(assert (=> d!25029 (=> res!48131 e!62096)))

(declare-fun lt!47368 () Bool)

(assert (=> d!25029 (= res!48131 (not lt!47368))))

(declare-fun lt!47366 () Bool)

(assert (=> d!25029 (= lt!47368 lt!47366)))

(declare-fun lt!47367 () Unit!2800)

(declare-fun e!62097 () Unit!2800)

(assert (=> d!25029 (= lt!47367 e!62097)))

(declare-fun c!15973 () Bool)

(assert (=> d!25029 (= c!15973 lt!47366)))

(assert (=> d!25029 (= lt!47366 (containsKey!150 (toList!766 lt!46725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25029 (= (contains!786 lt!46725 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47368)))

(declare-fun b!95191 () Bool)

(declare-fun lt!47369 () Unit!2800)

(assert (=> b!95191 (= e!62097 lt!47369)))

(assert (=> b!95191 (= lt!47369 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95191 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95192 () Bool)

(declare-fun Unit!2851 () Unit!2800)

(assert (=> b!95192 (= e!62097 Unit!2851)))

(declare-fun b!95193 () Bool)

(assert (=> b!95193 (= e!62096 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25029 c!15973) b!95191))

(assert (= (and d!25029 (not c!15973)) b!95192))

(assert (= (and d!25029 (not res!48131)) b!95193))

(declare-fun m!103015 () Bool)

(assert (=> d!25029 m!103015))

(declare-fun m!103017 () Bool)

(assert (=> b!95191 m!103017))

(declare-fun m!103019 () Bool)

(assert (=> b!95191 m!103019))

(assert (=> b!95191 m!103019))

(declare-fun m!103021 () Bool)

(assert (=> b!95191 m!103021))

(assert (=> b!95193 m!103019))

(assert (=> b!95193 m!103019))

(assert (=> b!95193 m!103021))

(assert (=> bm!9444 d!25029))

(declare-fun d!25031 () Bool)

(declare-fun e!62098 () Bool)

(assert (=> d!25031 e!62098))

(declare-fun res!48132 () Bool)

(assert (=> d!25031 (=> res!48132 e!62098)))

(declare-fun lt!47372 () Bool)

(assert (=> d!25031 (= res!48132 (not lt!47372))))

(declare-fun lt!47370 () Bool)

(assert (=> d!25031 (= lt!47372 lt!47370)))

(declare-fun lt!47371 () Unit!2800)

(declare-fun e!62099 () Unit!2800)

(assert (=> d!25031 (= lt!47371 e!62099)))

(declare-fun c!15974 () Bool)

(assert (=> d!25031 (= c!15974 lt!47370)))

(assert (=> d!25031 (= lt!47370 (containsKey!150 (toList!766 lt!46977) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25031 (= (contains!786 lt!46977 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47372)))

(declare-fun b!95194 () Bool)

(declare-fun lt!47373 () Unit!2800)

(assert (=> b!95194 (= e!62099 lt!47373)))

(assert (=> b!95194 (= lt!47373 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46977) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95194 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95195 () Bool)

(declare-fun Unit!2852 () Unit!2800)

(assert (=> b!95195 (= e!62099 Unit!2852)))

(declare-fun b!95196 () Bool)

(assert (=> b!95196 (= e!62098 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25031 c!15974) b!95194))

(assert (= (and d!25031 (not c!15974)) b!95195))

(assert (= (and d!25031 (not res!48132)) b!95196))

(declare-fun m!103023 () Bool)

(assert (=> d!25031 m!103023))

(declare-fun m!103025 () Bool)

(assert (=> b!95194 m!103025))

(declare-fun m!103027 () Bool)

(assert (=> b!95194 m!103027))

(assert (=> b!95194 m!103027))

(declare-fun m!103029 () Bool)

(assert (=> b!95194 m!103029))

(assert (=> b!95196 m!103027))

(assert (=> b!95196 m!103027))

(assert (=> b!95196 m!103029))

(assert (=> bm!9487 d!25031))

(declare-fun d!25033 () Bool)

(declare-fun res!48133 () Bool)

(declare-fun e!62100 () Bool)

(assert (=> d!25033 (=> res!48133 e!62100)))

(assert (=> d!25033 (= res!48133 (and ((_ is Cons!1572) (toList!766 call!9429)) (= (_1!1163 (h!2164 (toList!766 call!9429))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!25033 (= (containsKey!150 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!62100)))

(declare-fun b!95197 () Bool)

(declare-fun e!62101 () Bool)

(assert (=> b!95197 (= e!62100 e!62101)))

(declare-fun res!48134 () Bool)

(assert (=> b!95197 (=> (not res!48134) (not e!62101))))

(assert (=> b!95197 (= res!48134 (and (or (not ((_ is Cons!1572) (toList!766 call!9429))) (bvsle (_1!1163 (h!2164 (toList!766 call!9429))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) ((_ is Cons!1572) (toList!766 call!9429)) (bvslt (_1!1163 (h!2164 (toList!766 call!9429))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(declare-fun b!95198 () Bool)

(assert (=> b!95198 (= e!62101 (containsKey!150 (t!5469 (toList!766 call!9429)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!25033 (not res!48133)) b!95197))

(assert (= (and b!95197 res!48134) b!95198))

(assert (=> b!95198 m!100977))

(declare-fun m!103031 () Bool)

(assert (=> b!95198 m!103031))

(assert (=> d!24577 d!25033))

(assert (=> b!94458 d!24793))

(declare-fun b!95199 () Bool)

(declare-fun e!62102 () Option!152)

(assert (=> b!95199 (= e!62102 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46922)))))))

(declare-fun e!62103 () Option!152)

(declare-fun b!95201 () Bool)

(assert (=> b!95201 (= e!62103 (getValueByKey!146 (t!5469 (toList!766 lt!46922)) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95200 () Bool)

(assert (=> b!95200 (= e!62102 e!62103)))

(declare-fun c!15976 () Bool)

(assert (=> b!95200 (= c!15976 (and ((_ is Cons!1572) (toList!766 lt!46922)) (not (= (_1!1163 (h!2164 (toList!766 lt!46922))) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!95202 () Bool)

(assert (=> b!95202 (= e!62103 None!150)))

(declare-fun c!15975 () Bool)

(declare-fun d!25035 () Bool)

(assert (=> d!25035 (= c!15975 (and ((_ is Cons!1572) (toList!766 lt!46922)) (= (_1!1163 (h!2164 (toList!766 lt!46922))) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25035 (= (getValueByKey!146 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!62102)))

(assert (= (and d!25035 c!15975) b!95199))

(assert (= (and d!25035 (not c!15975)) b!95200))

(assert (= (and b!95200 c!15976) b!95201))

(assert (= (and b!95200 (not c!15976)) b!95202))

(declare-fun m!103033 () Bool)

(assert (=> b!95201 m!103033))

(assert (=> b!94485 d!25035))

(declare-fun d!25037 () Bool)

(assert (=> d!25037 (= (inRange!0 (ite c!15753 (index!3157 lt!46852) (index!3160 lt!46852)) (mask!6509 newMap!16)) (and (bvsge (ite c!15753 (index!3157 lt!46852) (index!3160 lt!46852)) #b00000000000000000000000000000000) (bvslt (ite c!15753 (index!3157 lt!46852) (index!3160 lt!46852)) (bvadd (mask!6509 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9471 d!25037))

(declare-fun d!25039 () Bool)

(declare-fun e!62104 () Bool)

(assert (=> d!25039 e!62104))

(declare-fun res!48135 () Bool)

(assert (=> d!25039 (=> (not res!48135) (not e!62104))))

(declare-fun lt!47375 () ListLongMap!1501)

(assert (=> d!25039 (= res!48135 (contains!786 lt!47375 (_1!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun lt!47377 () List!1576)

(assert (=> d!25039 (= lt!47375 (ListLongMap!1502 lt!47377))))

(declare-fun lt!47374 () Unit!2800)

(declare-fun lt!47376 () Unit!2800)

(assert (=> d!25039 (= lt!47374 lt!47376)))

(assert (=> d!25039 (= (getValueByKey!146 lt!47377 (_1!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25039 (= lt!47376 (lemmaContainsTupThenGetReturnValue!65 lt!47377 (_1!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25039 (= lt!47377 (insertStrictlySorted!68 (toList!766 (ite c!15720 call!9449 (ite c!15719 call!9448 call!9452))) (_1!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (_2!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(assert (=> d!25039 (= (+!126 (ite c!15720 call!9449 (ite c!15719 call!9448 call!9452)) (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) lt!47375)))

(declare-fun b!95203 () Bool)

(declare-fun res!48136 () Bool)

(assert (=> b!95203 (=> (not res!48136) (not e!62104))))

(assert (=> b!95203 (= res!48136 (= (getValueByKey!146 (toList!766 lt!47375) (_1!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))))

(declare-fun b!95204 () Bool)

(assert (=> b!95204 (= e!62104 (contains!790 (toList!766 lt!47375) (ite (or c!15720 c!15719) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2322 newMap!16)) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (= (and d!25039 res!48135) b!95203))

(assert (= (and b!95203 res!48136) b!95204))

(declare-fun m!103035 () Bool)

(assert (=> d!25039 m!103035))

(declare-fun m!103037 () Bool)

(assert (=> d!25039 m!103037))

(declare-fun m!103039 () Bool)

(assert (=> d!25039 m!103039))

(declare-fun m!103041 () Bool)

(assert (=> d!25039 m!103041))

(declare-fun m!103043 () Bool)

(assert (=> b!95203 m!103043))

(declare-fun m!103045 () Bool)

(assert (=> b!95204 m!103045))

(assert (=> bm!9446 d!25039))

(declare-fun d!25041 () Bool)

(declare-fun e!62105 () Bool)

(assert (=> d!25041 e!62105))

(declare-fun res!48137 () Bool)

(assert (=> d!25041 (=> res!48137 e!62105)))

(declare-fun lt!47380 () Bool)

(assert (=> d!25041 (= res!48137 (not lt!47380))))

(declare-fun lt!47378 () Bool)

(assert (=> d!25041 (= lt!47380 lt!47378)))

(declare-fun lt!47379 () Unit!2800)

(declare-fun e!62106 () Unit!2800)

(assert (=> d!25041 (= lt!47379 e!62106)))

(declare-fun c!15977 () Bool)

(assert (=> d!25041 (= c!15977 lt!47378)))

(assert (=> d!25041 (= lt!47378 (containsKey!150 (toList!766 lt!46725) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25041 (= (contains!786 lt!46725 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) lt!47380)))

(declare-fun b!95205 () Bool)

(declare-fun lt!47381 () Unit!2800)

(assert (=> b!95205 (= e!62106 lt!47381)))

(assert (=> b!95205 (= lt!47381 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46725) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95205 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95206 () Bool)

(declare-fun Unit!2853 () Unit!2800)

(assert (=> b!95206 (= e!62106 Unit!2853)))

(declare-fun b!95207 () Bool)

(assert (=> b!95207 (= e!62105 (isDefined!100 (getValueByKey!146 (toList!766 lt!46725) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25041 c!15977) b!95205))

(assert (= (and d!25041 (not c!15977)) b!95206))

(assert (= (and d!25041 (not res!48137)) b!95207))

(assert (=> d!25041 m!101303))

(declare-fun m!103047 () Bool)

(assert (=> d!25041 m!103047))

(assert (=> b!95205 m!101303))

(declare-fun m!103049 () Bool)

(assert (=> b!95205 m!103049))

(assert (=> b!95205 m!101303))

(assert (=> b!95205 m!102017))

(assert (=> b!95205 m!102017))

(declare-fun m!103051 () Bool)

(assert (=> b!95205 m!103051))

(assert (=> b!95207 m!101303))

(assert (=> b!95207 m!102017))

(assert (=> b!95207 m!102017))

(assert (=> b!95207 m!103051))

(assert (=> b!94274 d!25041))

(declare-fun d!25043 () Bool)

(assert (=> d!25043 (= (content!97 Nil!1572) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!24605 d!25043))

(declare-fun d!25045 () Bool)

(declare-fun res!48138 () Bool)

(declare-fun e!62107 () Bool)

(assert (=> d!25045 (=> res!48138 e!62107)))

(assert (=> d!25045 (= res!48138 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25045 (= (containsKey!150 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000) e!62107)))

(declare-fun b!95208 () Bool)

(declare-fun e!62108 () Bool)

(assert (=> b!95208 (= e!62107 e!62108)))

(declare-fun res!48139 () Bool)

(assert (=> b!95208 (=> (not res!48139) (not e!62108))))

(assert (=> b!95208 (= res!48139 (and (or (not ((_ is Cons!1572) (toList!766 lt!46571))) (bvsle (_1!1163 (h!2164 (toList!766 lt!46571))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1572) (toList!766 lt!46571)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46571))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95209 () Bool)

(assert (=> b!95209 (= e!62108 (containsKey!150 (t!5469 (toList!766 lt!46571)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25045 (not res!48138)) b!95208))

(assert (= (and b!95208 res!48139) b!95209))

(declare-fun m!103053 () Bool)

(assert (=> b!95209 m!103053))

(assert (=> d!24585 d!25045))

(declare-fun d!25047 () Bool)

(declare-fun e!62109 () Bool)

(assert (=> d!25047 e!62109))

(declare-fun res!48140 () Bool)

(assert (=> d!25047 (=> res!48140 e!62109)))

(declare-fun lt!47384 () Bool)

(assert (=> d!25047 (= res!48140 (not lt!47384))))

(declare-fun lt!47382 () Bool)

(assert (=> d!25047 (= lt!47384 lt!47382)))

(declare-fun lt!47383 () Unit!2800)

(declare-fun e!62110 () Unit!2800)

(assert (=> d!25047 (= lt!47383 e!62110)))

(declare-fun c!15978 () Bool)

(assert (=> d!25047 (= c!15978 lt!47382)))

(assert (=> d!25047 (= lt!47382 (containsKey!150 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!25047 (= (contains!786 lt!46922 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47384)))

(declare-fun b!95210 () Bool)

(declare-fun lt!47385 () Unit!2800)

(assert (=> b!95210 (= e!62110 lt!47385)))

(assert (=> b!95210 (= lt!47385 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> b!95210 (isDefined!100 (getValueByKey!146 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95211 () Bool)

(declare-fun Unit!2854 () Unit!2800)

(assert (=> b!95211 (= e!62110 Unit!2854)))

(declare-fun b!95212 () Bool)

(assert (=> b!95212 (= e!62109 (isDefined!100 (getValueByKey!146 (toList!766 lt!46922) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!25047 c!15978) b!95210))

(assert (= (and d!25047 (not c!15978)) b!95211))

(assert (= (and d!25047 (not res!48140)) b!95212))

(declare-fun m!103055 () Bool)

(assert (=> d!25047 m!103055))

(declare-fun m!103057 () Bool)

(assert (=> b!95210 m!103057))

(assert (=> b!95210 m!101637))

(assert (=> b!95210 m!101637))

(declare-fun m!103059 () Bool)

(assert (=> b!95210 m!103059))

(assert (=> b!95212 m!101637))

(assert (=> b!95212 m!101637))

(assert (=> b!95212 m!103059))

(assert (=> d!24635 d!25047))

(declare-fun b!95213 () Bool)

(declare-fun e!62111 () Option!152)

(assert (=> b!95213 (= e!62111 (Some!151 (_2!1163 (h!2164 lt!46924))))))

(declare-fun b!95215 () Bool)

(declare-fun e!62112 () Option!152)

(assert (=> b!95215 (= e!62112 (getValueByKey!146 (t!5469 lt!46924) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95214 () Bool)

(assert (=> b!95214 (= e!62111 e!62112)))

(declare-fun c!15980 () Bool)

(assert (=> b!95214 (= c!15980 (and ((_ is Cons!1572) lt!46924) (not (= (_1!1163 (h!2164 lt!46924)) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!95216 () Bool)

(assert (=> b!95216 (= e!62112 None!150)))

(declare-fun c!15979 () Bool)

(declare-fun d!25049 () Bool)

(assert (=> d!25049 (= c!15979 (and ((_ is Cons!1572) lt!46924) (= (_1!1163 (h!2164 lt!46924)) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25049 (= (getValueByKey!146 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!62111)))

(assert (= (and d!25049 c!15979) b!95213))

(assert (= (and d!25049 (not c!15979)) b!95214))

(assert (= (and b!95214 c!15980) b!95215))

(assert (= (and b!95214 (not c!15980)) b!95216))

(declare-fun m!103061 () Bool)

(assert (=> b!95215 m!103061))

(assert (=> d!24635 d!25049))

(declare-fun d!25051 () Bool)

(assert (=> d!25051 (= (getValueByKey!146 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!47386 () Unit!2800)

(assert (=> d!25051 (= lt!47386 (choose!576 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!62113 () Bool)

(assert (=> d!25051 e!62113))

(declare-fun res!48141 () Bool)

(assert (=> d!25051 (=> (not res!48141) (not e!62113))))

(assert (=> d!25051 (= res!48141 (isStrictlySorted!297 lt!46924))))

(assert (=> d!25051 (= (lemmaContainsTupThenGetReturnValue!65 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47386)))

(declare-fun b!95217 () Bool)

(declare-fun res!48142 () Bool)

(assert (=> b!95217 (=> (not res!48142) (not e!62113))))

(assert (=> b!95217 (= res!48142 (containsKey!150 lt!46924 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95218 () Bool)

(assert (=> b!95218 (= e!62113 (contains!790 lt!46924 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!25051 res!48141) b!95217))

(assert (= (and b!95217 res!48142) b!95218))

(assert (=> d!25051 m!101631))

(declare-fun m!103063 () Bool)

(assert (=> d!25051 m!103063))

(declare-fun m!103065 () Bool)

(assert (=> d!25051 m!103065))

(declare-fun m!103067 () Bool)

(assert (=> b!95217 m!103067))

(declare-fun m!103069 () Bool)

(assert (=> b!95218 m!103069))

(assert (=> d!24635 d!25051))

(declare-fun bm!9576 () Bool)

(declare-fun call!9580 () List!1576)

(declare-fun call!9581 () List!1576)

(assert (=> bm!9576 (= call!9580 call!9581)))

(declare-fun bm!9577 () Bool)

(declare-fun call!9579 () List!1576)

(assert (=> bm!9577 (= call!9581 call!9579)))

(declare-fun b!95219 () Bool)

(declare-fun e!62116 () List!1576)

(assert (=> b!95219 (= e!62116 call!9579)))

(declare-fun c!15981 () Bool)

(declare-fun e!62117 () List!1576)

(declare-fun bm!9578 () Bool)

(assert (=> bm!9578 (= call!9579 ($colon$colon!75 e!62117 (ite c!15981 (h!2164 (toList!766 lt!46550)) (tuple2!2305 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun c!15983 () Bool)

(assert (=> bm!9578 (= c!15983 c!15981)))

(declare-fun b!95220 () Bool)

(declare-fun e!62118 () List!1576)

(assert (=> b!95220 (= e!62116 e!62118)))

(declare-fun c!15982 () Bool)

(assert (=> b!95220 (= c!15982 (and ((_ is Cons!1572) (toList!766 lt!46550)) (= (_1!1163 (h!2164 (toList!766 lt!46550))) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!95221 () Bool)

(assert (=> b!95221 (= e!62118 call!9581)))

(declare-fun b!95222 () Bool)

(declare-fun lt!47387 () List!1576)

(declare-fun e!62114 () Bool)

(assert (=> b!95222 (= e!62114 (contains!790 lt!47387 (tuple2!2305 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!95223 () Bool)

(declare-fun e!62115 () List!1576)

(assert (=> b!95223 (= e!62115 call!9580)))

(declare-fun b!95224 () Bool)

(assert (=> b!95224 (= e!62115 call!9580)))

(declare-fun b!95225 () Bool)

(declare-fun res!48144 () Bool)

(assert (=> b!95225 (=> (not res!48144) (not e!62114))))

(assert (=> b!95225 (= res!48144 (containsKey!150 lt!47387 (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95227 () Bool)

(declare-fun c!15984 () Bool)

(assert (=> b!95227 (= e!62117 (ite c!15982 (t!5469 (toList!766 lt!46550)) (ite c!15984 (Cons!1572 (h!2164 (toList!766 lt!46550)) (t!5469 (toList!766 lt!46550))) Nil!1573)))))

(declare-fun b!95228 () Bool)

(assert (=> b!95228 (= e!62117 (insertStrictlySorted!68 (t!5469 (toList!766 lt!46550)) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun d!25053 () Bool)

(assert (=> d!25053 e!62114))

(declare-fun res!48143 () Bool)

(assert (=> d!25053 (=> (not res!48143) (not e!62114))))

(assert (=> d!25053 (= res!48143 (isStrictlySorted!297 lt!47387))))

(assert (=> d!25053 (= lt!47387 e!62116)))

(assert (=> d!25053 (= c!15981 (and ((_ is Cons!1572) (toList!766 lt!46550)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46550))) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25053 (isStrictlySorted!297 (toList!766 lt!46550))))

(assert (=> d!25053 (= (insertStrictlySorted!68 (toList!766 lt!46550) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47387)))

(declare-fun b!95226 () Bool)

(assert (=> b!95226 (= c!15984 (and ((_ is Cons!1572) (toList!766 lt!46550)) (bvsgt (_1!1163 (h!2164 (toList!766 lt!46550))) (_1!1163 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!95226 (= e!62118 e!62115)))

(assert (= (and d!25053 c!15981) b!95219))

(assert (= (and d!25053 (not c!15981)) b!95220))

(assert (= (and b!95220 c!15982) b!95221))

(assert (= (and b!95220 (not c!15982)) b!95226))

(assert (= (and b!95226 c!15984) b!95223))

(assert (= (and b!95226 (not c!15984)) b!95224))

(assert (= (or b!95223 b!95224) bm!9576))

(assert (= (or b!95221 bm!9576) bm!9577))

(assert (= (or b!95219 bm!9577) bm!9578))

(assert (= (and bm!9578 c!15983) b!95228))

(assert (= (and bm!9578 (not c!15983)) b!95227))

(assert (= (and d!25053 res!48143) b!95225))

(assert (= (and b!95225 res!48144) b!95222))

(declare-fun m!103071 () Bool)

(assert (=> b!95228 m!103071))

(declare-fun m!103073 () Bool)

(assert (=> b!95225 m!103073))

(declare-fun m!103075 () Bool)

(assert (=> d!25053 m!103075))

(declare-fun m!103077 () Bool)

(assert (=> d!25053 m!103077))

(declare-fun m!103079 () Bool)

(assert (=> b!95222 m!103079))

(declare-fun m!103081 () Bool)

(assert (=> bm!9578 m!103081))

(assert (=> d!24635 d!25053))

(declare-fun b!95229 () Bool)

(declare-fun e!62119 () Option!152)

(assert (=> b!95229 (= e!62119 (Some!151 (_2!1163 (h!2164 (t!5469 (toList!766 lt!46460))))))))

(declare-fun e!62120 () Option!152)

(declare-fun b!95231 () Bool)

(assert (=> b!95231 (= e!62120 (getValueByKey!146 (t!5469 (t!5469 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun b!95230 () Bool)

(assert (=> b!95230 (= e!62119 e!62120)))

(declare-fun c!15986 () Bool)

(assert (=> b!95230 (= c!15986 (and ((_ is Cons!1572) (t!5469 (toList!766 lt!46460))) (not (= (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))))

(declare-fun b!95232 () Bool)

(assert (=> b!95232 (= e!62120 None!150)))

(declare-fun d!25055 () Bool)

(declare-fun c!15985 () Bool)

(assert (=> d!25055 (= c!15985 (and ((_ is Cons!1572) (t!5469 (toList!766 lt!46460))) (= (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!25055 (= (getValueByKey!146 (t!5469 (toList!766 lt!46460)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!62119)))

(assert (= (and d!25055 c!15985) b!95229))

(assert (= (and d!25055 (not c!15985)) b!95230))

(assert (= (and b!95230 c!15986) b!95231))

(assert (= (and b!95230 (not c!15986)) b!95232))

(assert (=> b!95231 m!100977))

(declare-fun m!103083 () Bool)

(assert (=> b!95231 m!103083))

(assert (=> b!94257 d!25055))

(declare-fun d!25057 () Bool)

(declare-fun res!48145 () Bool)

(declare-fun e!62121 () Bool)

(assert (=> d!25057 (=> res!48145 e!62121)))

(assert (=> d!25057 (= res!48145 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25057 (= (containsKey!150 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!62121)))

(declare-fun b!95233 () Bool)

(declare-fun e!62122 () Bool)

(assert (=> b!95233 (= e!62121 e!62122)))

(declare-fun res!48146 () Bool)

(assert (=> b!95233 (=> (not res!48146) (not e!62122))))

(assert (=> b!95233 (= res!48146 (and (or (not ((_ is Cons!1572) (toList!766 lt!46571))) (bvsle (_1!1163 (h!2164 (toList!766 lt!46571))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1572) (toList!766 lt!46571)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46571))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!95234 () Bool)

(assert (=> b!95234 (= e!62122 (containsKey!150 (t!5469 (toList!766 lt!46571)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25057 (not res!48145)) b!95233))

(assert (= (and b!95233 res!48146) b!95234))

(assert (=> b!95234 m!101105))

(declare-fun m!103085 () Bool)

(assert (=> b!95234 m!103085))

(assert (=> d!24583 d!25057))

(declare-fun d!25059 () Bool)

(declare-fun e!62123 () Bool)

(assert (=> d!25059 e!62123))

(declare-fun res!48147 () Bool)

(assert (=> d!25059 (=> res!48147 e!62123)))

(declare-fun lt!47390 () Bool)

(assert (=> d!25059 (= res!48147 (not lt!47390))))

(declare-fun lt!47388 () Bool)

(assert (=> d!25059 (= lt!47390 lt!47388)))

(declare-fun lt!47389 () Unit!2800)

(declare-fun e!62124 () Unit!2800)

(assert (=> d!25059 (= lt!47389 e!62124)))

(declare-fun c!15987 () Bool)

(assert (=> d!25059 (= c!15987 lt!47388)))

(assert (=> d!25059 (= lt!47388 (containsKey!150 (toList!766 lt!46917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25059 (= (contains!786 lt!46917 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47390)))

(declare-fun b!95235 () Bool)

(declare-fun lt!47391 () Unit!2800)

(assert (=> b!95235 (= e!62124 lt!47391)))

(assert (=> b!95235 (= lt!47391 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95235 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95236 () Bool)

(declare-fun Unit!2855 () Unit!2800)

(assert (=> b!95236 (= e!62124 Unit!2855)))

(declare-fun b!95237 () Bool)

(assert (=> b!95237 (= e!62123 (isDefined!100 (getValueByKey!146 (toList!766 lt!46917) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25059 c!15987) b!95235))

(assert (= (and d!25059 (not c!15987)) b!95236))

(assert (= (and d!25059 (not res!48147)) b!95237))

(declare-fun m!103087 () Bool)

(assert (=> d!25059 m!103087))

(declare-fun m!103089 () Bool)

(assert (=> b!95235 m!103089))

(assert (=> b!95235 m!101899))

(assert (=> b!95235 m!101899))

(declare-fun m!103091 () Bool)

(assert (=> b!95235 m!103091))

(assert (=> b!95237 m!101899))

(assert (=> b!95237 m!101899))

(assert (=> b!95237 m!103091))

(assert (=> bm!9484 d!25059))

(assert (=> d!24597 d!24527))

(declare-fun d!25061 () Bool)

(declare-fun e!62125 () Bool)

(assert (=> d!25061 e!62125))

(declare-fun res!48148 () Bool)

(assert (=> d!25061 (=> res!48148 e!62125)))

(declare-fun lt!47394 () Bool)

(assert (=> d!25061 (= res!48148 (not lt!47394))))

(declare-fun lt!47392 () Bool)

(assert (=> d!25061 (= lt!47394 lt!47392)))

(declare-fun lt!47393 () Unit!2800)

(declare-fun e!62126 () Unit!2800)

(assert (=> d!25061 (= lt!47393 e!62126)))

(declare-fun c!15988 () Bool)

(assert (=> d!25061 (= c!15988 lt!47392)))

(assert (=> d!25061 (= lt!47392 (containsKey!150 (toList!766 lt!46977) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25061 (= (contains!786 lt!46977 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) lt!47394)))

(declare-fun b!95238 () Bool)

(declare-fun lt!47395 () Unit!2800)

(assert (=> b!95238 (= e!62126 lt!47395)))

(assert (=> b!95238 (= lt!47395 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46977) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95238 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95239 () Bool)

(declare-fun Unit!2856 () Unit!2800)

(assert (=> b!95239 (= e!62126 Unit!2856)))

(declare-fun b!95240 () Bool)

(assert (=> b!95240 (= e!62125 (isDefined!100 (getValueByKey!146 (toList!766 lt!46977) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25061 c!15988) b!95238))

(assert (= (and d!25061 (not c!15988)) b!95239))

(assert (= (and d!25061 (not res!48148)) b!95240))

(assert (=> d!25061 m!101303))

(declare-fun m!103093 () Bool)

(assert (=> d!25061 m!103093))

(assert (=> b!95238 m!101303))

(declare-fun m!103095 () Bool)

(assert (=> b!95238 m!103095))

(assert (=> b!95238 m!101303))

(assert (=> b!95238 m!102079))

(assert (=> b!95238 m!102079))

(declare-fun m!103097 () Bool)

(assert (=> b!95238 m!103097))

(assert (=> b!95240 m!101303))

(assert (=> b!95240 m!102079))

(assert (=> b!95240 m!102079))

(assert (=> b!95240 m!103097))

(assert (=> b!94534 d!25061))

(assert (=> b!94348 d!24549))

(declare-fun d!25063 () Bool)

(assert (not d!25063))

(assert (=> b!94410 d!25063))

(declare-fun d!25065 () Bool)

(declare-fun e!62127 () Bool)

(assert (=> d!25065 e!62127))

(declare-fun res!48149 () Bool)

(assert (=> d!25065 (=> res!48149 e!62127)))

(declare-fun lt!47398 () Bool)

(assert (=> d!25065 (= res!48149 (not lt!47398))))

(declare-fun lt!47396 () Bool)

(assert (=> d!25065 (= lt!47398 lt!47396)))

(declare-fun lt!47397 () Unit!2800)

(declare-fun e!62128 () Unit!2800)

(assert (=> d!25065 (= lt!47397 e!62128)))

(declare-fun c!15989 () Bool)

(assert (=> d!25065 (= c!15989 lt!47396)))

(assert (=> d!25065 (= lt!47396 (containsKey!150 (toList!766 lt!46550) lt!46551))))

(assert (=> d!25065 (= (contains!786 lt!46550 lt!46551) lt!47398)))

(declare-fun b!95241 () Bool)

(declare-fun lt!47399 () Unit!2800)

(assert (=> b!95241 (= e!62128 lt!47399)))

(assert (=> b!95241 (= lt!47399 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46550) lt!46551))))

(assert (=> b!95241 (isDefined!100 (getValueByKey!146 (toList!766 lt!46550) lt!46551))))

(declare-fun b!95242 () Bool)

(declare-fun Unit!2857 () Unit!2800)

(assert (=> b!95242 (= e!62128 Unit!2857)))

(declare-fun b!95243 () Bool)

(assert (=> b!95243 (= e!62127 (isDefined!100 (getValueByKey!146 (toList!766 lt!46550) lt!46551)))))

(assert (= (and d!25065 c!15989) b!95241))

(assert (= (and d!25065 (not c!15989)) b!95242))

(assert (= (and d!25065 (not res!48149)) b!95243))

(declare-fun m!103099 () Bool)

(assert (=> d!25065 m!103099))

(declare-fun m!103101 () Bool)

(assert (=> b!95241 m!103101))

(assert (=> b!95241 m!101701))

(assert (=> b!95241 m!101701))

(declare-fun m!103103 () Bool)

(assert (=> b!95241 m!103103))

(assert (=> b!95243 m!101701))

(assert (=> b!95243 m!101701))

(assert (=> b!95243 m!103103))

(assert (=> d!24639 d!25065))

(assert (=> d!24639 d!24631))

(assert (=> d!24639 d!24635))

(assert (=> d!24639 d!24653))

(declare-fun d!25067 () Bool)

(assert (=> d!25067 (= (apply!90 (+!126 lt!46550 (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46551) (apply!90 lt!46550 lt!46551))))

(assert (=> d!25067 true))

(declare-fun _$34!847 () Unit!2800)

(assert (=> d!25067 (= (choose!573 lt!46550 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46551) _$34!847)))

(declare-fun bs!3913 () Bool)

(assert (= bs!3913 d!25067))

(assert (=> bs!3913 m!101119))

(assert (=> bs!3913 m!101119))

(assert (=> bs!3913 m!101139))

(assert (=> bs!3913 m!101135))

(assert (=> d!24639 d!25067))

(assert (=> b!94454 d!24591))

(declare-fun d!25069 () Bool)

(declare-fun e!62129 () Bool)

(assert (=> d!25069 e!62129))

(declare-fun res!48150 () Bool)

(assert (=> d!25069 (=> res!48150 e!62129)))

(declare-fun lt!47402 () Bool)

(assert (=> d!25069 (= res!48150 (not lt!47402))))

(declare-fun lt!47400 () Bool)

(assert (=> d!25069 (= lt!47402 lt!47400)))

(declare-fun lt!47401 () Unit!2800)

(declare-fun e!62130 () Unit!2800)

(assert (=> d!25069 (= lt!47401 e!62130)))

(declare-fun c!15990 () Bool)

(assert (=> d!25069 (= c!15990 lt!47400)))

(assert (=> d!25069 (= lt!47400 (containsKey!150 (toList!766 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895))) lt!46889))))

(assert (=> d!25069 (= (contains!786 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895)) lt!46889) lt!47402)))

(declare-fun b!95245 () Bool)

(declare-fun lt!47403 () Unit!2800)

(assert (=> b!95245 (= e!62130 lt!47403)))

(assert (=> b!95245 (= lt!47403 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895))) lt!46889))))

(assert (=> b!95245 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895))) lt!46889))))

(declare-fun b!95246 () Bool)

(declare-fun Unit!2858 () Unit!2800)

(assert (=> b!95246 (= e!62130 Unit!2858)))

(declare-fun b!95247 () Bool)

(assert (=> b!95247 (= e!62129 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895))) lt!46889)))))

(assert (= (and d!25069 c!15990) b!95245))

(assert (= (and d!25069 (not c!15990)) b!95246))

(assert (= (and d!25069 (not res!48150)) b!95247))

(declare-fun m!103105 () Bool)

(assert (=> d!25069 m!103105))

(declare-fun m!103107 () Bool)

(assert (=> b!95245 m!103107))

(declare-fun m!103109 () Bool)

(assert (=> b!95245 m!103109))

(assert (=> b!95245 m!103109))

(declare-fun m!103111 () Bool)

(assert (=> b!95245 m!103111))

(assert (=> b!95247 m!103109))

(assert (=> b!95247 m!103109))

(assert (=> b!95247 m!103111))

(assert (=> b!94454 d!25069))

(declare-fun d!25071 () Bool)

(declare-fun e!62131 () Bool)

(assert (=> d!25071 e!62131))

(declare-fun res!48151 () Bool)

(assert (=> d!25071 (=> (not res!48151) (not e!62131))))

(declare-fun lt!47405 () ListLongMap!1501)

(assert (=> d!25071 (= res!48151 (contains!786 lt!47405 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47407 () List!1576)

(assert (=> d!25071 (= lt!47405 (ListLongMap!1502 lt!47407))))

(declare-fun lt!47404 () Unit!2800)

(declare-fun lt!47406 () Unit!2800)

(assert (=> d!25071 (= lt!47404 lt!47406)))

(assert (=> d!25071 (= (getValueByKey!146 lt!47407 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25071 (= lt!47406 (lemmaContainsTupThenGetReturnValue!65 lt!47407 (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25071 (= lt!47407 (insertStrictlySorted!68 (toList!766 call!9481) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25071 (= (+!126 call!9481 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47405)))

(declare-fun b!95248 () Bool)

(declare-fun res!48152 () Bool)

(assert (=> b!95248 (=> (not res!48152) (not e!62131))))

(assert (=> b!95248 (= res!48152 (= (getValueByKey!146 (toList!766 lt!47405) (_1!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95249 () Bool)

(assert (=> b!95249 (= e!62131 (contains!790 (toList!766 lt!47405) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25071 res!48151) b!95248))

(assert (= (and b!95248 res!48152) b!95249))

(declare-fun m!103113 () Bool)

(assert (=> d!25071 m!103113))

(declare-fun m!103115 () Bool)

(assert (=> d!25071 m!103115))

(declare-fun m!103117 () Bool)

(assert (=> d!25071 m!103117))

(declare-fun m!103119 () Bool)

(assert (=> d!25071 m!103119))

(declare-fun m!103121 () Bool)

(assert (=> b!95248 m!103121))

(declare-fun m!103123 () Bool)

(assert (=> b!95249 m!103123))

(assert (=> b!94454 d!25071))

(declare-fun d!25073 () Bool)

(assert (=> d!25073 (not (contains!786 (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895)) lt!46889))))

(declare-fun lt!47410 () Unit!2800)

(declare-fun choose!579 (ListLongMap!1501 (_ BitVec 64) V!3129 (_ BitVec 64)) Unit!2800)

(assert (=> d!25073 (= lt!47410 (choose!579 lt!46892 lt!46890 lt!46895 lt!46889))))

(declare-fun e!62134 () Bool)

(assert (=> d!25073 e!62134))

(declare-fun res!48155 () Bool)

(assert (=> d!25073 (=> (not res!48155) (not e!62134))))

(assert (=> d!25073 (= res!48155 (not (contains!786 lt!46892 lt!46889)))))

(assert (=> d!25073 (= (addStillNotContains!39 lt!46892 lt!46890 lt!46895 lt!46889) lt!47410)))

(declare-fun b!95253 () Bool)

(assert (=> b!95253 (= e!62134 (not (= lt!46890 lt!46889)))))

(assert (= (and d!25073 res!48155) b!95253))

(assert (=> d!25073 m!101541))

(assert (=> d!25073 m!101541))

(assert (=> d!25073 m!101547))

(declare-fun m!103125 () Bool)

(assert (=> d!25073 m!103125))

(declare-fun m!103127 () Bool)

(assert (=> d!25073 m!103127))

(assert (=> b!94454 d!25073))

(declare-fun d!25075 () Bool)

(declare-fun e!62135 () Bool)

(assert (=> d!25075 e!62135))

(declare-fun res!48156 () Bool)

(assert (=> d!25075 (=> (not res!48156) (not e!62135))))

(declare-fun lt!47412 () ListLongMap!1501)

(assert (=> d!25075 (= res!48156 (contains!786 lt!47412 (_1!1163 (tuple2!2305 lt!46890 lt!46895))))))

(declare-fun lt!47414 () List!1576)

(assert (=> d!25075 (= lt!47412 (ListLongMap!1502 lt!47414))))

(declare-fun lt!47411 () Unit!2800)

(declare-fun lt!47413 () Unit!2800)

(assert (=> d!25075 (= lt!47411 lt!47413)))

(assert (=> d!25075 (= (getValueByKey!146 lt!47414 (_1!1163 (tuple2!2305 lt!46890 lt!46895))) (Some!151 (_2!1163 (tuple2!2305 lt!46890 lt!46895))))))

(assert (=> d!25075 (= lt!47413 (lemmaContainsTupThenGetReturnValue!65 lt!47414 (_1!1163 (tuple2!2305 lt!46890 lt!46895)) (_2!1163 (tuple2!2305 lt!46890 lt!46895))))))

(assert (=> d!25075 (= lt!47414 (insertStrictlySorted!68 (toList!766 lt!46892) (_1!1163 (tuple2!2305 lt!46890 lt!46895)) (_2!1163 (tuple2!2305 lt!46890 lt!46895))))))

(assert (=> d!25075 (= (+!126 lt!46892 (tuple2!2305 lt!46890 lt!46895)) lt!47412)))

(declare-fun b!95254 () Bool)

(declare-fun res!48157 () Bool)

(assert (=> b!95254 (=> (not res!48157) (not e!62135))))

(assert (=> b!95254 (= res!48157 (= (getValueByKey!146 (toList!766 lt!47412) (_1!1163 (tuple2!2305 lt!46890 lt!46895))) (Some!151 (_2!1163 (tuple2!2305 lt!46890 lt!46895)))))))

(declare-fun b!95255 () Bool)

(assert (=> b!95255 (= e!62135 (contains!790 (toList!766 lt!47412) (tuple2!2305 lt!46890 lt!46895)))))

(assert (= (and d!25075 res!48156) b!95254))

(assert (= (and b!95254 res!48157) b!95255))

(declare-fun m!103129 () Bool)

(assert (=> d!25075 m!103129))

(declare-fun m!103131 () Bool)

(assert (=> d!25075 m!103131))

(declare-fun m!103133 () Bool)

(assert (=> d!25075 m!103133))

(declare-fun m!103135 () Bool)

(assert (=> d!25075 m!103135))

(declare-fun m!103137 () Bool)

(assert (=> b!95254 m!103137))

(declare-fun m!103139 () Bool)

(assert (=> b!95255 m!103139))

(assert (=> b!94454 d!25075))

(assert (=> b!94363 d!24523))

(declare-fun lt!47415 () Bool)

(declare-fun d!25077 () Bool)

(assert (=> d!25077 (= lt!47415 (select (content!98 (toList!766 lt!46698)) (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62136 () Bool)

(assert (=> d!25077 (= lt!47415 e!62136)))

(declare-fun res!48159 () Bool)

(assert (=> d!25077 (=> (not res!48159) (not e!62136))))

(assert (=> d!25077 (= res!48159 ((_ is Cons!1572) (toList!766 lt!46698)))))

(assert (=> d!25077 (= (contains!790 (toList!766 lt!46698) (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47415)))

(declare-fun b!95256 () Bool)

(declare-fun e!62137 () Bool)

(assert (=> b!95256 (= e!62136 e!62137)))

(declare-fun res!48158 () Bool)

(assert (=> b!95256 (=> res!48158 e!62137)))

(assert (=> b!95256 (= res!48158 (= (h!2164 (toList!766 lt!46698)) (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95257 () Bool)

(assert (=> b!95257 (= e!62137 (contains!790 (t!5469 (toList!766 lt!46698)) (ite c!15684 (ite c!15687 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2305 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25077 res!48159) b!95256))

(assert (= (and b!95256 (not res!48158)) b!95257))

(declare-fun m!103141 () Bool)

(assert (=> d!25077 m!103141))

(declare-fun m!103143 () Bool)

(assert (=> d!25077 m!103143))

(declare-fun m!103145 () Bool)

(assert (=> b!95257 m!103145))

(assert (=> b!94243 d!25077))

(declare-fun d!25079 () Bool)

(declare-fun e!62138 () Bool)

(assert (=> d!25079 e!62138))

(declare-fun res!48160 () Bool)

(assert (=> d!25079 (=> (not res!48160) (not e!62138))))

(declare-fun lt!47417 () ListLongMap!1501)

(assert (=> d!25079 (= res!48160 (contains!786 lt!47417 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun lt!47419 () List!1576)

(assert (=> d!25079 (= lt!47417 (ListLongMap!1502 lt!47419))))

(declare-fun lt!47416 () Unit!2800)

(declare-fun lt!47418 () Unit!2800)

(assert (=> d!25079 (= lt!47416 lt!47418)))

(assert (=> d!25079 (= (getValueByKey!146 lt!47419 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25079 (= lt!47418 (lemmaContainsTupThenGetReturnValue!65 lt!47419 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25079 (= lt!47419 (insertStrictlySorted!68 (toList!766 call!9494) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25079 (= (+!126 call!9494 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) lt!47417)))

(declare-fun b!95258 () Bool)

(declare-fun res!48161 () Bool)

(assert (=> b!95258 (=> (not res!48161) (not e!62138))))

(assert (=> b!95258 (= res!48161 (= (getValueByKey!146 (toList!766 lt!47417) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun b!95259 () Bool)

(assert (=> b!95259 (= e!62138 (contains!790 (toList!766 lt!47417) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(assert (= (and d!25079 res!48160) b!95258))

(assert (= (and b!95258 res!48161) b!95259))

(declare-fun m!103147 () Bool)

(assert (=> d!25079 m!103147))

(declare-fun m!103149 () Bool)

(assert (=> d!25079 m!103149))

(declare-fun m!103151 () Bool)

(assert (=> d!25079 m!103151))

(declare-fun m!103153 () Bool)

(assert (=> d!25079 m!103153))

(declare-fun m!103155 () Bool)

(assert (=> b!95258 m!103155))

(declare-fun m!103157 () Bool)

(assert (=> b!95259 m!103157))

(assert (=> b!94528 d!25079))

(declare-fun d!25081 () Bool)

(declare-fun res!48162 () Bool)

(declare-fun e!62139 () Bool)

(assert (=> d!25081 (=> res!48162 e!62139)))

(assert (=> d!25081 (= res!48162 (and ((_ is Cons!1572) (toList!766 call!9424)) (= (_1!1163 (h!2164 (toList!766 call!9424))) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))))

(assert (=> d!25081 (= (containsKey!150 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))) e!62139)))

(declare-fun b!95260 () Bool)

(declare-fun e!62140 () Bool)

(assert (=> b!95260 (= e!62139 e!62140)))

(declare-fun res!48163 () Bool)

(assert (=> b!95260 (=> (not res!48163) (not e!62140))))

(assert (=> b!95260 (= res!48163 (and (or (not ((_ is Cons!1572) (toList!766 call!9424))) (bvsle (_1!1163 (h!2164 (toList!766 call!9424))) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))) ((_ is Cons!1572) (toList!766 call!9424)) (bvslt (_1!1163 (h!2164 (toList!766 call!9424))) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666))))))))

(declare-fun b!95261 () Bool)

(assert (=> b!95261 (= e!62140 (containsKey!150 (t!5469 (toList!766 call!9424)) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(assert (= (and d!25081 (not res!48162)) b!95260))

(assert (= (and b!95260 res!48163) b!95261))

(declare-fun m!103159 () Bool)

(assert (=> b!95261 m!103159))

(assert (=> d!24601 d!25081))

(assert (=> b!94509 d!24981))

(declare-fun d!25083 () Bool)

(assert (=> d!25083 (= (apply!90 lt!46917 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1272 (getValueByKey!146 (toList!766 lt!46917) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3914 () Bool)

(assert (= bs!3914 d!25083))

(assert (=> bs!3914 m!101303))

(assert (=> bs!3914 m!102007))

(assert (=> bs!3914 m!102007))

(declare-fun m!103161 () Bool)

(assert (=> bs!3914 m!103161))

(assert (=> b!94473 d!25083))

(declare-fun d!25085 () Bool)

(declare-fun c!15991 () Bool)

(assert (=> d!25085 (= c!15991 ((_ is ValueCellFull!962) (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62141 () V!3129)

(assert (=> d!25085 (= (get!1267 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62141)))

(declare-fun b!95262 () Bool)

(assert (=> b!95262 (= e!62141 (get!1270 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95263 () Bool)

(assert (=> b!95263 (= e!62141 (get!1271 (select (arr!1985 (ite c!15684 (_values!2418 newMap!16) (array!4180 (store (arr!1985 (_values!2418 newMap!16)) (index!3158 lt!46666) (ValueCellFull!962 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2234 (_values!2418 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25085 c!15991) b!95262))

(assert (= (and d!25085 (not c!15991)) b!95263))

(assert (=> b!95262 m!101597))

(assert (=> b!95262 m!101341))

(declare-fun m!103163 () Bool)

(assert (=> b!95262 m!103163))

(assert (=> b!95263 m!101597))

(assert (=> b!95263 m!101341))

(declare-fun m!103165 () Bool)

(assert (=> b!95263 m!103165))

(assert (=> b!94473 d!25085))

(declare-fun d!25087 () Bool)

(assert (=> d!25087 (= (apply!90 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46554) (apply!90 lt!46553 lt!46554))))

(assert (=> d!25087 true))

(declare-fun _$34!848 () Unit!2800)

(assert (=> d!25087 (= (choose!573 lt!46553 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46554) _$34!848)))

(declare-fun bs!3915 () Bool)

(assert (= bs!3915 d!25087))

(assert (=> bs!3915 m!101121))

(assert (=> bs!3915 m!101121))

(assert (=> bs!3915 m!101123))

(assert (=> bs!3915 m!101131))

(assert (=> d!24655 d!25087))

(assert (=> d!24655 d!24641))

(assert (=> d!24655 d!24647))

(declare-fun d!25089 () Bool)

(declare-fun e!62142 () Bool)

(assert (=> d!25089 e!62142))

(declare-fun res!48164 () Bool)

(assert (=> d!25089 (=> res!48164 e!62142)))

(declare-fun lt!47422 () Bool)

(assert (=> d!25089 (= res!48164 (not lt!47422))))

(declare-fun lt!47420 () Bool)

(assert (=> d!25089 (= lt!47422 lt!47420)))

(declare-fun lt!47421 () Unit!2800)

(declare-fun e!62143 () Unit!2800)

(assert (=> d!25089 (= lt!47421 e!62143)))

(declare-fun c!15992 () Bool)

(assert (=> d!25089 (= c!15992 lt!47420)))

(assert (=> d!25089 (= lt!47420 (containsKey!150 (toList!766 lt!46553) lt!46554))))

(assert (=> d!25089 (= (contains!786 lt!46553 lt!46554) lt!47422)))

(declare-fun b!95264 () Bool)

(declare-fun lt!47423 () Unit!2800)

(assert (=> b!95264 (= e!62143 lt!47423)))

(assert (=> b!95264 (= lt!47423 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46553) lt!46554))))

(assert (=> b!95264 (isDefined!100 (getValueByKey!146 (toList!766 lt!46553) lt!46554))))

(declare-fun b!95265 () Bool)

(declare-fun Unit!2859 () Unit!2800)

(assert (=> b!95265 (= e!62143 Unit!2859)))

(declare-fun b!95266 () Bool)

(assert (=> b!95266 (= e!62142 (isDefined!100 (getValueByKey!146 (toList!766 lt!46553) lt!46554)))))

(assert (= (and d!25089 c!15992) b!95264))

(assert (= (and d!25089 (not c!15992)) b!95265))

(assert (= (and d!25089 (not res!48164)) b!95266))

(declare-fun m!103167 () Bool)

(assert (=> d!25089 m!103167))

(declare-fun m!103169 () Bool)

(assert (=> b!95264 m!103169))

(assert (=> b!95264 m!101625))

(assert (=> b!95264 m!101625))

(declare-fun m!103171 () Bool)

(assert (=> b!95264 m!103171))

(assert (=> b!95266 m!101625))

(assert (=> b!95266 m!101625))

(assert (=> b!95266 m!103171))

(assert (=> d!24655 d!25089))

(assert (=> d!24655 d!24633))

(declare-fun d!25091 () Bool)

(declare-fun res!48165 () Bool)

(declare-fun e!62144 () Bool)

(assert (=> d!25091 (=> res!48165 e!62144)))

(assert (=> d!25091 (= res!48165 (and ((_ is Cons!1572) (t!5469 (toList!766 lt!46460))) (= (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!25091 (= (containsKey!150 (t!5469 (toList!766 lt!46460)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!62144)))

(declare-fun b!95267 () Bool)

(declare-fun e!62145 () Bool)

(assert (=> b!95267 (= e!62144 e!62145)))

(declare-fun res!48166 () Bool)

(assert (=> b!95267 (=> (not res!48166) (not e!62145))))

(assert (=> b!95267 (= res!48166 (and (or (not ((_ is Cons!1572) (t!5469 (toList!766 lt!46460)))) (bvsle (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) ((_ is Cons!1572) (t!5469 (toList!766 lt!46460))) (bvslt (_1!1163 (h!2164 (t!5469 (toList!766 lt!46460)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(declare-fun b!95268 () Bool)

(assert (=> b!95268 (= e!62145 (containsKey!150 (t!5469 (t!5469 (toList!766 lt!46460))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!25091 (not res!48165)) b!95267))

(assert (= (and b!95267 res!48166) b!95268))

(assert (=> b!95268 m!100977))

(declare-fun m!103173 () Bool)

(assert (=> b!95268 m!103173))

(assert (=> b!94375 d!25091))

(declare-fun d!25093 () Bool)

(assert (=> d!25093 (= (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46554)) (v!2760 (getValueByKey!146 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46554)))))

(assert (=> d!24647 d!25093))

(declare-fun e!62146 () Option!152)

(declare-fun b!95269 () Bool)

(assert (=> b!95269 (= e!62146 (Some!151 (_2!1163 (h!2164 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun b!95271 () Bool)

(declare-fun e!62147 () Option!152)

(assert (=> b!95271 (= e!62147 (getValueByKey!146 (t!5469 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!46554))))

(declare-fun b!95270 () Bool)

(assert (=> b!95270 (= e!62146 e!62147)))

(declare-fun c!15994 () Bool)

(assert (=> b!95270 (= c!15994 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (not (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46554))))))

(declare-fun b!95272 () Bool)

(assert (=> b!95272 (= e!62147 None!150)))

(declare-fun d!25095 () Bool)

(declare-fun c!15993 () Bool)

(assert (=> d!25095 (= c!15993 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46554)))))

(assert (=> d!25095 (= (getValueByKey!146 (toList!766 (+!126 lt!46553 (tuple2!2305 lt!46557 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46554) e!62146)))

(assert (= (and d!25095 c!15993) b!95269))

(assert (= (and d!25095 (not c!15993)) b!95270))

(assert (= (and b!95270 c!15994) b!95271))

(assert (= (and b!95270 (not c!15994)) b!95272))

(declare-fun m!103175 () Bool)

(assert (=> b!95271 m!103175))

(assert (=> d!24647 d!25095))

(declare-fun d!25097 () Bool)

(declare-fun lt!47424 () Bool)

(assert (=> d!25097 (= lt!47424 (select (content!97 Nil!1572) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62148 () Bool)

(assert (=> d!25097 (= lt!47424 e!62148)))

(declare-fun res!48167 () Bool)

(assert (=> d!25097 (=> (not res!48167) (not e!62148))))

(assert (=> d!25097 (= res!48167 ((_ is Cons!1571) Nil!1572))))

(assert (=> d!25097 (= (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) lt!47424)))

(declare-fun b!95273 () Bool)

(declare-fun e!62149 () Bool)

(assert (=> b!95273 (= e!62148 e!62149)))

(declare-fun res!48168 () Bool)

(assert (=> b!95273 (=> res!48168 e!62149)))

(assert (=> b!95273 (= res!48168 (= (h!2163 Nil!1572) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95274 () Bool)

(assert (=> b!95274 (= e!62149 (contains!789 (t!5468 Nil!1572) (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25097 res!48167) b!95273))

(assert (= (and b!95273 (not res!48168)) b!95274))

(assert (=> d!25097 m!101499))

(assert (=> d!25097 m!101303))

(declare-fun m!103177 () Bool)

(assert (=> d!25097 m!103177))

(assert (=> b!95274 m!101303))

(declare-fun m!103179 () Bool)

(assert (=> b!95274 m!103179))

(assert (=> b!94294 d!25097))

(assert (=> b!94468 d!24899))

(declare-fun d!25099 () Bool)

(assert (=> d!25099 (= (apply!90 (+!126 lt!46907 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (apply!90 lt!46907 lt!46912))))

(declare-fun lt!47425 () Unit!2800)

(assert (=> d!25099 (= lt!47425 (choose!573 lt!46907 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912))))

(declare-fun e!62150 () Bool)

(assert (=> d!25099 e!62150))

(declare-fun res!48169 () Bool)

(assert (=> d!25099 (=> (not res!48169) (not e!62150))))

(assert (=> d!25099 (= res!48169 (contains!786 lt!46907 lt!46912))))

(assert (=> d!25099 (= (addApplyDifferent!66 lt!46907 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46912) lt!47425)))

(declare-fun b!95275 () Bool)

(assert (=> b!95275 (= e!62150 (not (= lt!46912 lt!46916)))))

(assert (= (and d!25099 res!48169) b!95275))

(declare-fun m!103181 () Bool)

(assert (=> d!25099 m!103181))

(assert (=> d!25099 m!101563))

(assert (=> d!25099 m!101565))

(assert (=> d!25099 m!101563))

(declare-fun m!103183 () Bool)

(assert (=> d!25099 m!103183))

(assert (=> d!25099 m!101567))

(assert (=> b!94468 d!25099))

(declare-fun d!25101 () Bool)

(declare-fun e!62151 () Bool)

(assert (=> d!25101 e!62151))

(declare-fun res!48170 () Bool)

(assert (=> d!25101 (=> (not res!48170) (not e!62151))))

(declare-fun lt!47427 () ListLongMap!1501)

(assert (=> d!25101 (= res!48170 (contains!786 lt!47427 (_1!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47429 () List!1576)

(assert (=> d!25101 (= lt!47427 (ListLongMap!1502 lt!47429))))

(declare-fun lt!47426 () Unit!2800)

(declare-fun lt!47428 () Unit!2800)

(assert (=> d!25101 (= lt!47426 lt!47428)))

(assert (=> d!25101 (= (getValueByKey!146 lt!47429 (_1!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25101 (= lt!47428 (lemmaContainsTupThenGetReturnValue!65 lt!47429 (_1!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25101 (= lt!47429 (insertStrictlySorted!68 (toList!766 lt!46907) (_1!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25101 (= (+!126 lt!46907 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47427)))

(declare-fun b!95276 () Bool)

(declare-fun res!48171 () Bool)

(assert (=> b!95276 (=> (not res!48171) (not e!62151))))

(assert (=> b!95276 (= res!48171 (= (getValueByKey!146 (toList!766 lt!47427) (_1!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!95277 () Bool)

(assert (=> b!95277 (= e!62151 (contains!790 (toList!766 lt!47427) (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!25101 res!48170) b!95276))

(assert (= (and b!95276 res!48171) b!95277))

(declare-fun m!103185 () Bool)

(assert (=> d!25101 m!103185))

(declare-fun m!103187 () Bool)

(assert (=> d!25101 m!103187))

(declare-fun m!103189 () Bool)

(assert (=> d!25101 m!103189))

(declare-fun m!103191 () Bool)

(assert (=> d!25101 m!103191))

(declare-fun m!103193 () Bool)

(assert (=> b!95276 m!103193))

(declare-fun m!103195 () Bool)

(assert (=> b!95277 m!103195))

(assert (=> b!94468 d!25101))

(declare-fun d!25103 () Bool)

(assert (=> d!25103 (= (apply!90 (+!126 lt!46899 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46900) (apply!90 lt!46899 lt!46900))))

(declare-fun lt!47430 () Unit!2800)

(assert (=> d!25103 (= lt!47430 (choose!573 lt!46899 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46900))))

(declare-fun e!62152 () Bool)

(assert (=> d!25103 e!62152))

(declare-fun res!48172 () Bool)

(assert (=> d!25103 (=> (not res!48172) (not e!62152))))

(assert (=> d!25103 (= res!48172 (contains!786 lt!46899 lt!46900))))

(assert (=> d!25103 (= (addApplyDifferent!66 lt!46899 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)) lt!46900) lt!47430)))

(declare-fun b!95278 () Bool)

(assert (=> b!95278 (= e!62152 (not (= lt!46900 lt!46903)))))

(assert (= (and d!25103 res!48172) b!95278))

(declare-fun m!103197 () Bool)

(assert (=> d!25103 m!103197))

(assert (=> d!25103 m!101575))

(assert (=> d!25103 m!101577))

(assert (=> d!25103 m!101575))

(declare-fun m!103199 () Bool)

(assert (=> d!25103 m!103199))

(assert (=> d!25103 m!101585))

(assert (=> b!94468 d!25103))

(declare-fun d!25105 () Bool)

(assert (=> d!25105 (= (apply!90 (+!126 lt!46896 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46897) (apply!90 lt!46896 lt!46897))))

(declare-fun lt!47431 () Unit!2800)

(assert (=> d!25105 (= lt!47431 (choose!573 lt!46896 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46897))))

(declare-fun e!62153 () Bool)

(assert (=> d!25105 e!62153))

(declare-fun res!48173 () Bool)

(assert (=> d!25105 (=> (not res!48173) (not e!62153))))

(assert (=> d!25105 (= res!48173 (contains!786 lt!46896 lt!46897))))

(assert (=> d!25105 (= (addApplyDifferent!66 lt!46896 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46897) lt!47431)))

(declare-fun b!95279 () Bool)

(assert (=> b!95279 (= e!62153 (not (= lt!46897 lt!46901)))))

(assert (= (and d!25105 res!48173) b!95279))

(declare-fun m!103201 () Bool)

(assert (=> d!25105 m!103201))

(assert (=> d!25105 m!101573))

(assert (=> d!25105 m!101593))

(assert (=> d!25105 m!101573))

(declare-fun m!103203 () Bool)

(assert (=> d!25105 m!103203))

(assert (=> d!25105 m!101589))

(assert (=> b!94468 d!25105))

(declare-fun d!25107 () Bool)

(assert (=> d!25107 (= (apply!90 lt!46896 lt!46897) (get!1272 (getValueByKey!146 (toList!766 lt!46896) lt!46897)))))

(declare-fun bs!3916 () Bool)

(assert (= bs!3916 d!25107))

(declare-fun m!103205 () Bool)

(assert (=> bs!3916 m!103205))

(assert (=> bs!3916 m!103205))

(declare-fun m!103207 () Bool)

(assert (=> bs!3916 m!103207))

(assert (=> b!94468 d!25107))

(declare-fun d!25109 () Bool)

(assert (=> d!25109 (= (apply!90 lt!46899 lt!46900) (get!1272 (getValueByKey!146 (toList!766 lt!46899) lt!46900)))))

(declare-fun bs!3917 () Bool)

(assert (= bs!3917 d!25109))

(declare-fun m!103209 () Bool)

(assert (=> bs!3917 m!103209))

(assert (=> bs!3917 m!103209))

(declare-fun m!103211 () Bool)

(assert (=> bs!3917 m!103211))

(assert (=> b!94468 d!25109))

(declare-fun d!25111 () Bool)

(assert (=> d!25111 (= (apply!90 (+!126 lt!46907 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46912) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46907 (tuple2!2305 lt!46916 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!46912)))))

(declare-fun bs!3918 () Bool)

(assert (= bs!3918 d!25111))

(declare-fun m!103213 () Bool)

(assert (=> bs!3918 m!103213))

(assert (=> bs!3918 m!103213))

(declare-fun m!103215 () Bool)

(assert (=> bs!3918 m!103215))

(assert (=> b!94468 d!25111))

(declare-fun d!25113 () Bool)

(assert (=> d!25113 (= (apply!90 (+!126 lt!46899 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!46900) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46899 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) lt!46900)))))

(declare-fun bs!3919 () Bool)

(assert (= bs!3919 d!25113))

(declare-fun m!103217 () Bool)

(assert (=> bs!3919 m!103217))

(assert (=> bs!3919 m!103217))

(declare-fun m!103219 () Bool)

(assert (=> bs!3919 m!103219))

(assert (=> b!94468 d!25113))

(declare-fun d!25115 () Bool)

(assert (=> d!25115 (= (apply!90 (+!126 lt!46896 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46897) (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46896 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46897)))))

(declare-fun bs!3920 () Bool)

(assert (= bs!3920 d!25115))

(declare-fun m!103221 () Bool)

(assert (=> bs!3920 m!103221))

(assert (=> bs!3920 m!103221))

(declare-fun m!103223 () Bool)

(assert (=> bs!3920 m!103223))

(assert (=> b!94468 d!25115))

(declare-fun d!25117 () Bool)

(assert (=> d!25117 (= (apply!90 lt!46907 lt!46912) (get!1272 (getValueByKey!146 (toList!766 lt!46907) lt!46912)))))

(declare-fun bs!3921 () Bool)

(assert (= bs!3921 d!25117))

(declare-fun m!103225 () Bool)

(assert (=> bs!3921 m!103225))

(assert (=> bs!3921 m!103225))

(declare-fun m!103227 () Bool)

(assert (=> bs!3921 m!103227))

(assert (=> b!94468 d!25117))

(declare-fun d!25119 () Bool)

(declare-fun e!62154 () Bool)

(assert (=> d!25119 e!62154))

(declare-fun res!48174 () Bool)

(assert (=> d!25119 (=> res!48174 e!62154)))

(declare-fun lt!47434 () Bool)

(assert (=> d!25119 (= res!48174 (not lt!47434))))

(declare-fun lt!47432 () Bool)

(assert (=> d!25119 (= lt!47434 lt!47432)))

(declare-fun lt!47433 () Unit!2800)

(declare-fun e!62155 () Unit!2800)

(assert (=> d!25119 (= lt!47433 e!62155)))

(declare-fun c!15995 () Bool)

(assert (=> d!25119 (= c!15995 lt!47432)))

(assert (=> d!25119 (= lt!47432 (containsKey!150 (toList!766 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46909))))

(assert (=> d!25119 (= (contains!786 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46909) lt!47434)))

(declare-fun b!95280 () Bool)

(declare-fun lt!47435 () Unit!2800)

(assert (=> b!95280 (= e!62155 lt!47435)))

(assert (=> b!95280 (= lt!47435 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46909))))

(assert (=> b!95280 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46909))))

(declare-fun b!95281 () Bool)

(declare-fun Unit!2860 () Unit!2800)

(assert (=> b!95281 (= e!62155 Unit!2860)))

(declare-fun b!95282 () Bool)

(assert (=> b!95282 (= e!62154 (isDefined!100 (getValueByKey!146 (toList!766 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) lt!46909)))))

(assert (= (and d!25119 c!15995) b!95280))

(assert (= (and d!25119 (not c!15995)) b!95281))

(assert (= (and d!25119 (not res!48174)) b!95282))

(declare-fun m!103229 () Bool)

(assert (=> d!25119 m!103229))

(declare-fun m!103231 () Bool)

(assert (=> b!95280 m!103231))

(declare-fun m!103233 () Bool)

(assert (=> b!95280 m!103233))

(assert (=> b!95280 m!103233))

(declare-fun m!103235 () Bool)

(assert (=> b!95280 m!103235))

(assert (=> b!95282 m!103233))

(assert (=> b!95282 m!103233))

(assert (=> b!95282 m!103235))

(assert (=> b!94468 d!25119))

(declare-fun d!25121 () Bool)

(assert (=> d!25121 (contains!786 (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!46909)))

(declare-fun lt!47436 () Unit!2800)

(assert (=> d!25121 (= lt!47436 (choose!572 lt!46898 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46909))))

(assert (=> d!25121 (contains!786 lt!46898 lt!46909)))

(assert (=> d!25121 (= (addStillContains!66 lt!46898 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)) lt!46909) lt!47436)))

(declare-fun bs!3922 () Bool)

(assert (= bs!3922 d!25121))

(assert (=> bs!3922 m!101569))

(assert (=> bs!3922 m!101569))

(assert (=> bs!3922 m!101571))

(declare-fun m!103237 () Bool)

(assert (=> bs!3922 m!103237))

(declare-fun m!103239 () Bool)

(assert (=> bs!3922 m!103239))

(assert (=> b!94468 d!25121))

(declare-fun d!25123 () Bool)

(declare-fun e!62156 () Bool)

(assert (=> d!25123 e!62156))

(declare-fun res!48175 () Bool)

(assert (=> d!25123 (=> (not res!48175) (not e!62156))))

(declare-fun lt!47438 () ListLongMap!1501)

(assert (=> d!25123 (= res!48175 (contains!786 lt!47438 (_1!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(declare-fun lt!47440 () List!1576)

(assert (=> d!25123 (= lt!47438 (ListLongMap!1502 lt!47440))))

(declare-fun lt!47437 () Unit!2800)

(declare-fun lt!47439 () Unit!2800)

(assert (=> d!25123 (= lt!47437 lt!47439)))

(assert (=> d!25123 (= (getValueByKey!146 lt!47440 (_1!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25123 (= lt!47439 (lemmaContainsTupThenGetReturnValue!65 lt!47440 (_1!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25123 (= lt!47440 (insertStrictlySorted!68 (toList!766 lt!46899) (_1!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))))))

(assert (=> d!25123 (= (+!126 lt!46899 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))) lt!47438)))

(declare-fun b!95283 () Bool)

(declare-fun res!48176 () Bool)

(assert (=> b!95283 (=> (not res!48176) (not e!62156))))

(assert (=> b!95283 (= res!48176 (= (getValueByKey!146 (toList!766 lt!47438) (_1!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))))

(declare-fun b!95284 () Bool)

(assert (=> b!95284 (= e!62156 (contains!790 (toList!766 lt!47438) (tuple2!2305 lt!46903 (ite c!15684 (ite c!15687 (minValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2322 newMap!16)))))))

(assert (= (and d!25123 res!48175) b!95283))

(assert (= (and b!95283 res!48176) b!95284))

(declare-fun m!103241 () Bool)

(assert (=> d!25123 m!103241))

(declare-fun m!103243 () Bool)

(assert (=> d!25123 m!103243))

(declare-fun m!103245 () Bool)

(assert (=> d!25123 m!103245))

(declare-fun m!103247 () Bool)

(assert (=> d!25123 m!103247))

(declare-fun m!103249 () Bool)

(assert (=> b!95283 m!103249))

(declare-fun m!103251 () Bool)

(assert (=> b!95284 m!103251))

(assert (=> b!94468 d!25123))

(declare-fun d!25125 () Bool)

(declare-fun e!62157 () Bool)

(assert (=> d!25125 e!62157))

(declare-fun res!48177 () Bool)

(assert (=> d!25125 (=> (not res!48177) (not e!62157))))

(declare-fun lt!47442 () ListLongMap!1501)

(assert (=> d!25125 (= res!48177 (contains!786 lt!47442 (_1!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(declare-fun lt!47444 () List!1576)

(assert (=> d!25125 (= lt!47442 (ListLongMap!1502 lt!47444))))

(declare-fun lt!47441 () Unit!2800)

(declare-fun lt!47443 () Unit!2800)

(assert (=> d!25125 (= lt!47441 lt!47443)))

(assert (=> d!25125 (= (getValueByKey!146 lt!47444 (_1!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25125 (= lt!47443 (lemmaContainsTupThenGetReturnValue!65 lt!47444 (_1!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25125 (= lt!47444 (insertStrictlySorted!68 (toList!766 lt!46896) (_1!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25125 (= (+!126 lt!46896 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47442)))

(declare-fun b!95285 () Bool)

(declare-fun res!48178 () Bool)

(assert (=> b!95285 (=> (not res!48178) (not e!62157))))

(assert (=> b!95285 (= res!48178 (= (getValueByKey!146 (toList!766 lt!47442) (_1!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))))

(declare-fun b!95286 () Bool)

(assert (=> b!95286 (= e!62157 (contains!790 (toList!766 lt!47442) (tuple2!2305 lt!46901 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))

(assert (= (and d!25125 res!48177) b!95285))

(assert (= (and b!95285 res!48178) b!95286))

(declare-fun m!103253 () Bool)

(assert (=> d!25125 m!103253))

(declare-fun m!103255 () Bool)

(assert (=> d!25125 m!103255))

(declare-fun m!103257 () Bool)

(assert (=> d!25125 m!103257))

(declare-fun m!103259 () Bool)

(assert (=> d!25125 m!103259))

(declare-fun m!103261 () Bool)

(assert (=> b!95285 m!103261))

(declare-fun m!103263 () Bool)

(assert (=> b!95286 m!103263))

(assert (=> b!94468 d!25125))

(declare-fun d!25127 () Bool)

(declare-fun e!62158 () Bool)

(assert (=> d!25127 e!62158))

(declare-fun res!48179 () Bool)

(assert (=> d!25127 (=> (not res!48179) (not e!62158))))

(declare-fun lt!47446 () ListLongMap!1501)

(assert (=> d!25127 (= res!48179 (contains!786 lt!47446 (_1!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(declare-fun lt!47448 () List!1576)

(assert (=> d!25127 (= lt!47446 (ListLongMap!1502 lt!47448))))

(declare-fun lt!47445 () Unit!2800)

(declare-fun lt!47447 () Unit!2800)

(assert (=> d!25127 (= lt!47445 lt!47447)))

(assert (=> d!25127 (= (getValueByKey!146 lt!47448 (_1!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25127 (= lt!47447 (lemmaContainsTupThenGetReturnValue!65 lt!47448 (_1!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25127 (= lt!47448 (insertStrictlySorted!68 (toList!766 lt!46898) (_1!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) (_2!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))))))

(assert (=> d!25127 (= (+!126 lt!46898 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))) lt!47446)))

(declare-fun b!95287 () Bool)

(declare-fun res!48180 () Bool)

(assert (=> b!95287 (=> (not res!48180) (not e!62158))))

(assert (=> b!95287 (= res!48180 (= (getValueByKey!146 (toList!766 lt!47446) (_1!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16))))) (Some!151 (_2!1163 (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))))

(declare-fun b!95288 () Bool)

(assert (=> b!95288 (= e!62158 (contains!790 (toList!766 lt!47446) (tuple2!2305 lt!46915 (ite (and c!15684 c!15687) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2322 newMap!16)))))))

(assert (= (and d!25127 res!48179) b!95287))

(assert (= (and b!95287 res!48180) b!95288))

(declare-fun m!103265 () Bool)

(assert (=> d!25127 m!103265))

(declare-fun m!103267 () Bool)

(assert (=> d!25127 m!103267))

(declare-fun m!103269 () Bool)

(assert (=> d!25127 m!103269))

(declare-fun m!103271 () Bool)

(assert (=> d!25127 m!103271))

(declare-fun m!103273 () Bool)

(assert (=> b!95287 m!103273))

(declare-fun m!103275 () Bool)

(assert (=> b!95288 m!103275))

(assert (=> b!94468 d!25127))

(declare-fun d!25129 () Bool)

(declare-fun e!62159 () Bool)

(assert (=> d!25129 e!62159))

(declare-fun res!48181 () Bool)

(assert (=> d!25129 (=> (not res!48181) (not e!62159))))

(declare-fun lt!47450 () ListLongMap!1501)

(assert (=> d!25129 (= res!48181 (contains!786 lt!47450 (_1!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47452 () List!1576)

(assert (=> d!25129 (= lt!47450 (ListLongMap!1502 lt!47452))))

(declare-fun lt!47449 () Unit!2800)

(declare-fun lt!47451 () Unit!2800)

(assert (=> d!25129 (= lt!47449 lt!47451)))

(assert (=> d!25129 (= (getValueByKey!146 lt!47452 (_1!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25129 (= lt!47451 (lemmaContainsTupThenGetReturnValue!65 lt!47452 (_1!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25129 (= lt!47452 (insertStrictlySorted!68 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (_1!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25129 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47450)))

(declare-fun b!95289 () Bool)

(declare-fun res!48182 () Bool)

(assert (=> b!95289 (=> (not res!48182) (not e!62159))))

(assert (=> b!95289 (= res!48182 (= (getValueByKey!146 (toList!766 lt!47450) (_1!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!151 (_2!1163 (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95290 () Bool)

(assert (=> b!95290 (= e!62159 (contains!790 (toList!766 lt!47450) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25129 res!48181) b!95289))

(assert (= (and b!95289 res!48182) b!95290))

(declare-fun m!103277 () Bool)

(assert (=> d!25129 m!103277))

(declare-fun m!103279 () Bool)

(assert (=> d!25129 m!103279))

(declare-fun m!103281 () Bool)

(assert (=> d!25129 m!103281))

(declare-fun m!103283 () Bool)

(assert (=> d!25129 m!103283))

(declare-fun m!103285 () Bool)

(assert (=> b!95289 m!103285))

(declare-fun m!103287 () Bool)

(assert (=> b!95290 m!103287))

(assert (=> d!24615 d!25129))

(assert (=> d!24615 d!24567))

(declare-fun d!25131 () Bool)

(assert (=> d!25131 (= (+!126 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(assert (=> d!25131 true))

(declare-fun _$7!77 () Unit!2800)

(assert (=> d!25131 (= (choose!571 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) lt!46653 (zeroValue!2322 newMap!16) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) (defaultEntry!2435 newMap!16)) _$7!77)))

(declare-fun bs!3923 () Bool)

(assert (= bs!3923 d!25131))

(assert (=> bs!3923 m!101101))

(assert (=> bs!3923 m!101101))

(assert (=> bs!3923 m!101529))

(assert (=> bs!3923 m!100975))

(assert (=> bs!3923 m!101527))

(assert (=> d!24615 d!25131))

(assert (=> d!24615 d!24755))

(declare-fun b!95291 () Bool)

(declare-fun e!62167 () Unit!2800)

(declare-fun Unit!2861 () Unit!2800)

(assert (=> b!95291 (= e!62167 Unit!2861)))

(declare-fun b!95292 () Bool)

(declare-fun e!62172 () ListLongMap!1501)

(declare-fun call!9582 () ListLongMap!1501)

(assert (=> b!95292 (= e!62172 call!9582)))

(declare-fun b!95293 () Bool)

(declare-fun e!62161 () ListLongMap!1501)

(declare-fun call!9587 () ListLongMap!1501)

(assert (=> b!95293 (= e!62161 call!9587)))

(declare-fun b!95294 () Bool)

(declare-fun e!62169 () Bool)

(declare-fun call!9585 () Bool)

(assert (=> b!95294 (= e!62169 (not call!9585))))

(declare-fun bm!9579 () Bool)

(declare-fun lt!47474 () ListLongMap!1501)

(assert (=> bm!9579 (= call!9585 (contains!786 lt!47474 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95295 () Bool)

(assert (=> b!95295 (= e!62161 call!9582)))

(declare-fun bm!9580 () Bool)

(declare-fun call!9586 () ListLongMap!1501)

(assert (=> bm!9580 (= call!9582 call!9586)))

(declare-fun call!9583 () ListLongMap!1501)

(declare-fun c!16001 () Bool)

(declare-fun call!9584 () ListLongMap!1501)

(declare-fun bm!9581 () Bool)

(declare-fun c!16000 () Bool)

(assert (=> bm!9581 (= call!9586 (+!126 (ite c!16001 call!9584 (ite c!16000 call!9583 call!9587)) (ite (or c!16001 c!16000) (tuple2!2305 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun bm!9582 () Bool)

(assert (=> bm!9582 (= call!9587 call!9583)))

(declare-fun b!95297 () Bool)

(declare-fun c!15998 () Bool)

(assert (=> b!95297 (= c!15998 (and (not (= (bvand lt!46653 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46653 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95297 (= e!62172 e!62161)))

(declare-fun b!95298 () Bool)

(declare-fun e!62160 () ListLongMap!1501)

(assert (=> b!95298 (= e!62160 e!62172)))

(assert (=> b!95298 (= c!16000 (and (not (= (bvand lt!46653 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46653 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95299 () Bool)

(declare-fun e!62164 () Bool)

(declare-fun e!62171 () Bool)

(assert (=> b!95299 (= e!62164 e!62171)))

(declare-fun c!15999 () Bool)

(assert (=> b!95299 (= c!15999 (not (= (bvand lt!46653 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95300 () Bool)

(assert (=> b!95300 (= e!62160 (+!126 call!9586 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(declare-fun bm!9583 () Bool)

(assert (=> bm!9583 (= call!9583 call!9584)))

(declare-fun b!95301 () Bool)

(declare-fun e!62170 () Bool)

(assert (=> b!95301 (= e!62170 (= (apply!90 lt!47474 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)) (get!1267 (select (arr!1985 (_values!2418 newMap!16)) #b00000000000000000000000000000000) (dynLambda!364 (defaultEntry!2435 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95301 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2234 (_values!2418 newMap!16))))))

(assert (=> b!95301 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95302 () Bool)

(declare-fun e!62168 () Bool)

(assert (=> b!95302 (= e!62168 (= (apply!90 lt!47474 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2322 newMap!16)))))

(declare-fun b!95303 () Bool)

(declare-fun res!48183 () Bool)

(assert (=> b!95303 (=> (not res!48183) (not e!62164))))

(assert (=> b!95303 (= res!48183 e!62169)))

(declare-fun c!15996 () Bool)

(assert (=> b!95303 (= c!15996 (not (= (bvand lt!46653 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95304 () Bool)

(declare-fun res!48188 () Bool)

(assert (=> b!95304 (=> (not res!48188) (not e!62164))))

(declare-fun e!62166 () Bool)

(assert (=> b!95304 (= res!48188 e!62166)))

(declare-fun res!48184 () Bool)

(assert (=> b!95304 (=> res!48184 e!62166)))

(declare-fun e!62163 () Bool)

(assert (=> b!95304 (= res!48184 (not e!62163))))

(declare-fun res!48190 () Bool)

(assert (=> b!95304 (=> (not res!48190) (not e!62163))))

(assert (=> b!95304 (= res!48190 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun bm!9584 () Bool)

(declare-fun call!9588 () Bool)

(assert (=> bm!9584 (= call!9588 (contains!786 lt!47474 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95305 () Bool)

(assert (=> b!95305 (= e!62163 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95306 () Bool)

(assert (=> b!95306 (= e!62166 e!62170)))

(declare-fun res!48185 () Bool)

(assert (=> b!95306 (=> (not res!48185) (not e!62170))))

(assert (=> b!95306 (= res!48185 (contains!786 lt!47474 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95306 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95296 () Bool)

(declare-fun lt!47463 () Unit!2800)

(assert (=> b!95296 (= e!62167 lt!47463)))

(declare-fun lt!47455 () ListLongMap!1501)

(assert (=> b!95296 (= lt!47455 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47472 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47472 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47466 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47466 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47468 () Unit!2800)

(assert (=> b!95296 (= lt!47468 (addStillContains!66 lt!47455 lt!47472 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47466))))

(assert (=> b!95296 (contains!786 (+!126 lt!47455 (tuple2!2305 lt!47472 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47466)))

(declare-fun lt!47471 () Unit!2800)

(assert (=> b!95296 (= lt!47471 lt!47468)))

(declare-fun lt!47456 () ListLongMap!1501)

(assert (=> b!95296 (= lt!47456 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47460 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47460 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47457 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47457 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47461 () Unit!2800)

(assert (=> b!95296 (= lt!47461 (addApplyDifferent!66 lt!47456 lt!47460 (minValue!2322 newMap!16) lt!47457))))

(assert (=> b!95296 (= (apply!90 (+!126 lt!47456 (tuple2!2305 lt!47460 (minValue!2322 newMap!16))) lt!47457) (apply!90 lt!47456 lt!47457))))

(declare-fun lt!47465 () Unit!2800)

(assert (=> b!95296 (= lt!47465 lt!47461)))

(declare-fun lt!47453 () ListLongMap!1501)

(assert (=> b!95296 (= lt!47453 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47458 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47458 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47454 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47454 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47462 () Unit!2800)

(assert (=> b!95296 (= lt!47462 (addApplyDifferent!66 lt!47453 lt!47458 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47454))))

(assert (=> b!95296 (= (apply!90 (+!126 lt!47453 (tuple2!2305 lt!47458 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47454) (apply!90 lt!47453 lt!47454))))

(declare-fun lt!47470 () Unit!2800)

(assert (=> b!95296 (= lt!47470 lt!47462)))

(declare-fun lt!47464 () ListLongMap!1501)

(assert (=> b!95296 (= lt!47464 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun lt!47473 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47473 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47469 () (_ BitVec 64))

(assert (=> b!95296 (= lt!47469 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95296 (= lt!47463 (addApplyDifferent!66 lt!47464 lt!47473 (minValue!2322 newMap!16) lt!47469))))

(assert (=> b!95296 (= (apply!90 (+!126 lt!47464 (tuple2!2305 lt!47473 (minValue!2322 newMap!16))) lt!47469) (apply!90 lt!47464 lt!47469))))

(declare-fun d!25133 () Bool)

(assert (=> d!25133 e!62164))

(declare-fun res!48191 () Bool)

(assert (=> d!25133 (=> (not res!48191) (not e!62164))))

(assert (=> d!25133 (= res!48191 (or (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))))

(declare-fun lt!47467 () ListLongMap!1501)

(assert (=> d!25133 (= lt!47474 lt!47467)))

(declare-fun lt!47459 () Unit!2800)

(assert (=> d!25133 (= lt!47459 e!62167)))

(declare-fun c!15997 () Bool)

(declare-fun e!62162 () Bool)

(assert (=> d!25133 (= c!15997 e!62162)))

(declare-fun res!48189 () Bool)

(assert (=> d!25133 (=> (not res!48189) (not e!62162))))

(assert (=> d!25133 (= res!48189 (bvslt #b00000000000000000000000000000000 (size!2233 (_keys!4116 newMap!16))))))

(assert (=> d!25133 (= lt!47467 e!62160)))

(assert (=> d!25133 (= c!16001 (and (not (= (bvand lt!46653 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46653 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25133 (validMask!0 (mask!6509 newMap!16))))

(assert (=> d!25133 (= (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)) lt!47474)))

(declare-fun b!95307 () Bool)

(declare-fun e!62165 () Bool)

(assert (=> b!95307 (= e!62165 (= (apply!90 lt!47474 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95308 () Bool)

(assert (=> b!95308 (= e!62162 (validKeyInArray!0 (select (arr!1984 (_keys!4116 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95309 () Bool)

(assert (=> b!95309 (= e!62169 e!62165)))

(declare-fun res!48187 () Bool)

(assert (=> b!95309 (= res!48187 call!9585)))

(assert (=> b!95309 (=> (not res!48187) (not e!62165))))

(declare-fun b!95310 () Bool)

(assert (=> b!95310 (= e!62171 e!62168)))

(declare-fun res!48186 () Bool)

(assert (=> b!95310 (= res!48186 call!9588)))

(assert (=> b!95310 (=> (not res!48186) (not e!62168))))

(declare-fun bm!9585 () Bool)

(assert (=> bm!9585 (= call!9584 (getCurrentListMapNoExtraKeys!90 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) lt!46653 (get!1267 (select (arr!1985 (_values!2418 (v!2754 (underlying!323 thiss!992)))) from!355) (dynLambda!364 (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))))

(declare-fun b!95311 () Bool)

(assert (=> b!95311 (= e!62171 (not call!9588))))

(assert (= (and d!25133 c!16001) b!95300))

(assert (= (and d!25133 (not c!16001)) b!95298))

(assert (= (and b!95298 c!16000) b!95292))

(assert (= (and b!95298 (not c!16000)) b!95297))

(assert (= (and b!95297 c!15998) b!95295))

(assert (= (and b!95297 (not c!15998)) b!95293))

(assert (= (or b!95295 b!95293) bm!9582))

(assert (= (or b!95292 bm!9582) bm!9583))

(assert (= (or b!95292 b!95295) bm!9580))

(assert (= (or b!95300 bm!9583) bm!9585))

(assert (= (or b!95300 bm!9580) bm!9581))

(assert (= (and d!25133 res!48189) b!95308))

(assert (= (and d!25133 c!15997) b!95296))

(assert (= (and d!25133 (not c!15997)) b!95291))

(assert (= (and d!25133 res!48191) b!95304))

(assert (= (and b!95304 res!48190) b!95305))

(assert (= (and b!95304 (not res!48184)) b!95306))

(assert (= (and b!95306 res!48185) b!95301))

(assert (= (and b!95304 res!48188) b!95303))

(assert (= (and b!95303 c!15996) b!95309))

(assert (= (and b!95303 (not c!15996)) b!95294))

(assert (= (and b!95309 res!48187) b!95307))

(assert (= (or b!95309 b!95294) bm!9579))

(assert (= (and b!95303 res!48183) b!95299))

(assert (= (and b!95299 c!15999) b!95310))

(assert (= (and b!95299 (not c!15999)) b!95311))

(assert (= (and b!95310 res!48186) b!95302))

(assert (= (or b!95310 b!95311) bm!9584))

(declare-fun b_lambda!4191 () Bool)

(assert (=> (not b_lambda!4191) (not b!95301)))

(assert (=> b!95301 t!5482))

(declare-fun b_and!5821 () Bool)

(assert (= b_and!5817 (and (=> t!5482 result!3197) b_and!5821)))

(assert (=> b!95301 t!5484))

(declare-fun b_and!5823 () Bool)

(assert (= b_and!5819 (and (=> t!5484 result!3199) b_and!5823)))

(declare-fun m!103289 () Bool)

(assert (=> b!95300 m!103289))

(assert (=> b!95305 m!101303))

(assert (=> b!95305 m!101303))

(assert (=> b!95305 m!101305))

(declare-fun m!103291 () Bool)

(assert (=> b!95296 m!103291))

(declare-fun m!103293 () Bool)

(assert (=> b!95296 m!103293))

(declare-fun m!103295 () Bool)

(assert (=> b!95296 m!103295))

(declare-fun m!103297 () Bool)

(assert (=> b!95296 m!103297))

(declare-fun m!103299 () Bool)

(assert (=> b!95296 m!103299))

(assert (=> b!95296 m!103291))

(declare-fun m!103301 () Bool)

(assert (=> b!95296 m!103301))

(declare-fun m!103303 () Bool)

(assert (=> b!95296 m!103303))

(assert (=> b!95296 m!101303))

(assert (=> b!95296 m!103303))

(declare-fun m!103305 () Bool)

(assert (=> b!95296 m!103305))

(declare-fun m!103307 () Bool)

(assert (=> b!95296 m!103307))

(assert (=> b!95296 m!100975))

(declare-fun m!103309 () Bool)

(assert (=> b!95296 m!103309))

(assert (=> b!95296 m!100975))

(declare-fun m!103311 () Bool)

(assert (=> b!95296 m!103311))

(declare-fun m!103313 () Bool)

(assert (=> b!95296 m!103313))

(declare-fun m!103315 () Bool)

(assert (=> b!95296 m!103315))

(declare-fun m!103317 () Bool)

(assert (=> b!95296 m!103317))

(assert (=> b!95296 m!103297))

(assert (=> b!95296 m!100975))

(declare-fun m!103319 () Bool)

(assert (=> b!95296 m!103319))

(assert (=> b!95296 m!103301))

(declare-fun m!103321 () Bool)

(assert (=> b!95296 m!103321))

(assert (=> b!95301 m!101303))

(declare-fun m!103323 () Bool)

(assert (=> b!95301 m!103323))

(assert (=> b!95301 m!101341))

(assert (=> b!95301 m!101343))

(assert (=> b!95301 m!101341))

(assert (=> b!95301 m!101345))

(assert (=> b!95301 m!101303))

(assert (=> b!95301 m!101343))

(declare-fun m!103325 () Bool)

(assert (=> bm!9581 m!103325))

(declare-fun m!103327 () Bool)

(assert (=> bm!9584 m!103327))

(assert (=> b!95306 m!101303))

(assert (=> b!95306 m!101303))

(declare-fun m!103329 () Bool)

(assert (=> b!95306 m!103329))

(assert (=> b!95308 m!101303))

(assert (=> b!95308 m!101303))

(assert (=> b!95308 m!101305))

(declare-fun m!103331 () Bool)

(assert (=> b!95302 m!103331))

(declare-fun m!103333 () Bool)

(assert (=> b!95307 m!103333))

(assert (=> d!25133 m!101255))

(assert (=> bm!9585 m!100975))

(assert (=> bm!9585 m!103309))

(declare-fun m!103335 () Bool)

(assert (=> bm!9579 m!103335))

(assert (=> d!24615 d!25133))

(declare-fun b!95312 () Bool)

(declare-fun e!62173 () Option!152)

(assert (=> b!95312 (= e!62173 (Some!151 (_2!1163 (h!2164 (toList!766 lt!46860)))))))

(declare-fun b!95314 () Bool)

(declare-fun e!62174 () Option!152)

(assert (=> b!95314 (= e!62174 (getValueByKey!146 (t!5469 (toList!766 lt!46860)) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95313 () Bool)

(assert (=> b!95313 (= e!62173 e!62174)))

(declare-fun c!16003 () Bool)

(assert (=> b!95313 (= c!16003 (and ((_ is Cons!1572) (toList!766 lt!46860)) (not (= (_1!1163 (h!2164 (toList!766 lt!46860))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!95315 () Bool)

(assert (=> b!95315 (= e!62174 None!150)))

(declare-fun d!25135 () Bool)

(declare-fun c!16002 () Bool)

(assert (=> d!25135 (= c!16002 (and ((_ is Cons!1572) (toList!766 lt!46860)) (= (_1!1163 (h!2164 (toList!766 lt!46860))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25135 (= (getValueByKey!146 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!62173)))

(assert (= (and d!25135 c!16002) b!95312))

(assert (= (and d!25135 (not c!16002)) b!95313))

(assert (= (and b!95313 c!16003) b!95314))

(assert (= (and b!95313 (not c!16003)) b!95315))

(declare-fun m!103337 () Bool)

(assert (=> b!95314 m!103337))

(assert (=> b!94413 d!25135))

(declare-fun d!25137 () Bool)

(declare-fun res!48192 () Bool)

(declare-fun e!62175 () Bool)

(assert (=> d!25137 (=> (not res!48192) (not e!62175))))

(assert (=> d!25137 (= res!48192 (simpleValid!66 (_2!1162 lt!46805)))))

(assert (=> d!25137 (= (valid!381 (_2!1162 lt!46805)) e!62175)))

(declare-fun b!95316 () Bool)

(declare-fun res!48193 () Bool)

(assert (=> b!95316 (=> (not res!48193) (not e!62175))))

(assert (=> b!95316 (= res!48193 (= (arrayCountValidKeys!0 (_keys!4116 (_2!1162 lt!46805)) #b00000000000000000000000000000000 (size!2233 (_keys!4116 (_2!1162 lt!46805)))) (_size!465 (_2!1162 lt!46805))))))

(declare-fun b!95317 () Bool)

(declare-fun res!48194 () Bool)

(assert (=> b!95317 (=> (not res!48194) (not e!62175))))

(assert (=> b!95317 (= res!48194 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4116 (_2!1162 lt!46805)) (mask!6509 (_2!1162 lt!46805))))))

(declare-fun b!95318 () Bool)

(assert (=> b!95318 (= e!62175 (arrayNoDuplicates!0 (_keys!4116 (_2!1162 lt!46805)) #b00000000000000000000000000000000 Nil!1572))))

(assert (= (and d!25137 res!48192) b!95316))

(assert (= (and b!95316 res!48193) b!95317))

(assert (= (and b!95317 res!48194) b!95318))

(declare-fun m!103339 () Bool)

(assert (=> d!25137 m!103339))

(declare-fun m!103341 () Bool)

(assert (=> b!95316 m!103341))

(declare-fun m!103343 () Bool)

(assert (=> b!95317 m!103343))

(declare-fun m!103345 () Bool)

(assert (=> b!95318 m!103345))

(assert (=> b!94338 d!25137))

(declare-fun d!25139 () Bool)

(declare-fun e!62176 () Bool)

(assert (=> d!25139 e!62176))

(declare-fun res!48195 () Bool)

(assert (=> d!25139 (=> (not res!48195) (not e!62176))))

(declare-fun lt!47476 () ListLongMap!1501)

(assert (=> d!25139 (= res!48195 (contains!786 lt!47476 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(declare-fun lt!47478 () List!1576)

(assert (=> d!25139 (= lt!47476 (ListLongMap!1502 lt!47478))))

(declare-fun lt!47475 () Unit!2800)

(declare-fun lt!47477 () Unit!2800)

(assert (=> d!25139 (= lt!47475 lt!47477)))

(assert (=> d!25139 (= (getValueByKey!146 lt!47478 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25139 (= lt!47477 (lemmaContainsTupThenGetReturnValue!65 lt!47478 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25139 (= lt!47478 (insertStrictlySorted!68 (toList!766 call!9451) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))))))

(assert (=> d!25139 (= (+!126 call!9451 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))) lt!47476)))

(declare-fun b!95319 () Bool)

(declare-fun res!48196 () Bool)

(assert (=> b!95319 (=> (not res!48196) (not e!62176))))

(assert (=> b!95319 (= res!48196 (= (getValueByKey!146 (toList!766 lt!47476) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16)))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))))

(declare-fun b!95320 () Bool)

(assert (=> b!95320 (= e!62176 (contains!790 (toList!766 lt!47476) (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 newMap!16))))))

(assert (= (and d!25139 res!48195) b!95319))

(assert (= (and b!95319 res!48196) b!95320))

(declare-fun m!103347 () Bool)

(assert (=> d!25139 m!103347))

(declare-fun m!103349 () Bool)

(assert (=> d!25139 m!103349))

(declare-fun m!103351 () Bool)

(assert (=> d!25139 m!103351))

(declare-fun m!103353 () Bool)

(assert (=> d!25139 m!103353))

(declare-fun m!103355 () Bool)

(assert (=> b!95319 m!103355))

(declare-fun m!103357 () Bool)

(assert (=> b!95320 m!103357))

(assert (=> b!94268 d!25139))

(declare-fun b!95321 () Bool)

(declare-fun e!62180 () Bool)

(declare-fun e!62178 () Bool)

(assert (=> b!95321 (= e!62180 e!62178)))

(declare-fun c!16004 () Bool)

(assert (=> b!95321 (= c!16004 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9586 () Bool)

(declare-fun call!9589 () Bool)

(assert (=> bm!9586 (= call!9589 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16004 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000) Nil!1572) Nil!1572)))))

(declare-fun b!95322 () Bool)

(assert (=> b!95322 (= e!62178 call!9589)))

(declare-fun d!25141 () Bool)

(declare-fun res!48198 () Bool)

(declare-fun e!62179 () Bool)

(assert (=> d!25141 (=> res!48198 e!62179)))

(assert (=> d!25141 (= res!48198 (bvsge #b00000000000000000000000000000000 (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!25141 (= (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) #b00000000000000000000000000000000 Nil!1572) e!62179)))

(declare-fun b!95323 () Bool)

(declare-fun e!62177 () Bool)

(assert (=> b!95323 (= e!62177 (contains!789 Nil!1572 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95324 () Bool)

(assert (=> b!95324 (= e!62178 call!9589)))

(declare-fun b!95325 () Bool)

(assert (=> b!95325 (= e!62179 e!62180)))

(declare-fun res!48197 () Bool)

(assert (=> b!95325 (=> (not res!48197) (not e!62180))))

(assert (=> b!95325 (= res!48197 (not e!62177))))

(declare-fun res!48199 () Bool)

(assert (=> b!95325 (=> (not res!48199) (not e!62177))))

(assert (=> b!95325 (= res!48199 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!25141 (not res!48198)) b!95325))

(assert (= (and b!95325 res!48199) b!95323))

(assert (= (and b!95325 res!48197) b!95321))

(assert (= (and b!95321 c!16004) b!95324))

(assert (= (and b!95321 (not c!16004)) b!95322))

(assert (= (or b!95324 b!95322) bm!9586))

(assert (=> b!95321 m!102165))

(assert (=> b!95321 m!102165))

(assert (=> b!95321 m!102167))

(assert (=> bm!9586 m!102165))

(declare-fun m!103359 () Bool)

(assert (=> bm!9586 m!103359))

(assert (=> b!95323 m!102165))

(assert (=> b!95323 m!102165))

(declare-fun m!103361 () Bool)

(assert (=> b!95323 m!103361))

(assert (=> b!95325 m!102165))

(assert (=> b!95325 m!102165))

(assert (=> b!95325 m!102167))

(assert (=> b!94504 d!25141))

(assert (=> d!24603 d!24553))

(declare-fun b!95342 () Bool)

(declare-fun e!62192 () Bool)

(declare-fun call!9595 () Bool)

(assert (=> b!95342 (= e!62192 (not call!9595))))

(declare-fun b!95343 () Bool)

(declare-fun res!48210 () Bool)

(assert (=> b!95343 (=> (not res!48210) (not e!62192))))

(declare-fun lt!47481 () SeekEntryResult!254)

(assert (=> b!95343 (= res!48210 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3160 lt!47481)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95344 () Bool)

(declare-fun e!62191 () Bool)

(declare-fun e!62189 () Bool)

(assert (=> b!95344 (= e!62191 e!62189)))

(declare-fun res!48211 () Bool)

(declare-fun call!9594 () Bool)

(assert (=> b!95344 (= res!48211 call!9594)))

(assert (=> b!95344 (=> (not res!48211) (not e!62189))))

(declare-fun b!95345 () Bool)

(declare-fun res!48209 () Bool)

(assert (=> b!95345 (= res!48209 (= (select (arr!1984 (_keys!4116 newMap!16)) (index!3157 lt!47481)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95345 (=> (not res!48209) (not e!62189))))

(declare-fun b!95346 () Bool)

(assert (=> b!95346 (= e!62189 (not call!9595))))

(declare-fun d!25143 () Bool)

(assert (=> d!25143 e!62191))

(declare-fun c!16010 () Bool)

(assert (=> d!25143 (= c!16010 ((_ is MissingZero!254) lt!47481))))

(assert (=> d!25143 (= lt!47481 (seekEntryOrOpen!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (_keys!4116 newMap!16) (mask!6509 newMap!16)))))

(assert (=> d!25143 true))

(declare-fun _$34!851 () Unit!2800)

(assert (=> d!25143 (= (choose!569 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (defaultEntry!2435 newMap!16)) _$34!851)))

(declare-fun bm!9591 () Bool)

(assert (=> bm!9591 (= call!9595 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!9592 () Bool)

(assert (=> bm!9592 (= call!9594 (inRange!0 (ite c!16010 (index!3157 lt!47481) (index!3160 lt!47481)) (mask!6509 newMap!16)))))

(declare-fun b!95347 () Bool)

(declare-fun res!48208 () Bool)

(assert (=> b!95347 (=> (not res!48208) (not e!62192))))

(assert (=> b!95347 (= res!48208 call!9594)))

(declare-fun e!62190 () Bool)

(assert (=> b!95347 (= e!62190 e!62192)))

(declare-fun b!95348 () Bool)

(assert (=> b!95348 (= e!62191 e!62190)))

(declare-fun c!16009 () Bool)

(assert (=> b!95348 (= c!16009 ((_ is MissingVacant!254) lt!47481))))

(declare-fun b!95349 () Bool)

(assert (=> b!95349 (= e!62190 ((_ is Undefined!254) lt!47481))))

(assert (= (and d!25143 c!16010) b!95344))

(assert (= (and d!25143 (not c!16010)) b!95348))

(assert (= (and b!95344 res!48211) b!95345))

(assert (= (and b!95345 res!48209) b!95346))

(assert (= (and b!95348 c!16009) b!95347))

(assert (= (and b!95348 (not c!16009)) b!95349))

(assert (= (and b!95347 res!48208) b!95343))

(assert (= (and b!95343 res!48210) b!95342))

(assert (= (or b!95344 b!95347) bm!9592))

(assert (= (or b!95346 b!95342) bm!9591))

(declare-fun m!103363 () Bool)

(assert (=> b!95343 m!103363))

(declare-fun m!103365 () Bool)

(assert (=> bm!9592 m!103365))

(declare-fun m!103367 () Bool)

(assert (=> b!95345 m!103367))

(assert (=> bm!9591 m!100977))

(assert (=> bm!9591 m!101219))

(assert (=> d!25143 m!100977))

(assert (=> d!25143 m!101233))

(assert (=> d!24603 d!25143))

(assert (=> d!24603 d!24755))

(declare-fun d!25145 () Bool)

(assert (=> d!25145 (isDefined!100 (getValueByKey!146 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun lt!47482 () Unit!2800)

(assert (=> d!25145 (= lt!47482 (choose!568 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(declare-fun e!62193 () Bool)

(assert (=> d!25145 e!62193))

(declare-fun res!48212 () Bool)

(assert (=> d!25145 (=> (not res!48212) (not e!62193))))

(assert (=> d!25145 (= res!48212 (isStrictlySorted!297 (toList!766 call!9429)))))

(assert (=> d!25145 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) lt!47482)))

(declare-fun b!95350 () Bool)

(assert (=> b!95350 (= e!62193 (containsKey!150 (toList!766 call!9429) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!25145 res!48212) b!95350))

(assert (=> d!25145 m!100977))

(assert (=> d!25145 m!101369))

(assert (=> d!25145 m!101369))

(assert (=> d!25145 m!101371))

(assert (=> d!25145 m!100977))

(declare-fun m!103369 () Bool)

(assert (=> d!25145 m!103369))

(declare-fun m!103371 () Bool)

(assert (=> d!25145 m!103371))

(assert (=> b!95350 m!100977))

(assert (=> b!95350 m!101365))

(assert (=> b!94297 d!25145))

(assert (=> b!94297 d!24775))

(assert (=> b!94297 d!24777))

(declare-fun b!95351 () Bool)

(declare-fun e!62197 () Bool)

(declare-fun e!62195 () Bool)

(assert (=> b!95351 (= e!62197 e!62195)))

(declare-fun c!16011 () Bool)

(assert (=> b!95351 (= c!16011 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!9596 () Bool)

(declare-fun bm!9593 () Bool)

(assert (=> bm!9593 (= call!9596 (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16011 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!15777 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572))) (ite c!15777 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)))))))

(declare-fun b!95352 () Bool)

(assert (=> b!95352 (= e!62195 call!9596)))

(declare-fun d!25147 () Bool)

(declare-fun res!48214 () Bool)

(declare-fun e!62196 () Bool)

(assert (=> d!25147 (=> res!48214 e!62196)))

(assert (=> d!25147 (= res!48214 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2233 (_keys!4116 (v!2754 (underlying!323 thiss!992))))))))

(assert (=> d!25147 (= (arrayNoDuplicates!0 (_keys!4116 (v!2754 (underlying!323 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15777 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572))) e!62196)))

(declare-fun b!95353 () Bool)

(declare-fun e!62194 () Bool)

(assert (=> b!95353 (= e!62194 (contains!789 (ite c!15777 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (ite c!15654 (Cons!1571 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) Nil!1572) Nil!1572)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95354 () Bool)

(assert (=> b!95354 (= e!62195 call!9596)))

(declare-fun b!95355 () Bool)

(assert (=> b!95355 (= e!62196 e!62197)))

(declare-fun res!48213 () Bool)

(assert (=> b!95355 (=> (not res!48213) (not e!62197))))

(assert (=> b!95355 (= res!48213 (not e!62194))))

(declare-fun res!48215 () Bool)

(assert (=> b!95355 (=> (not res!48215) (not e!62194))))

(assert (=> b!95355 (= res!48215 (validKeyInArray!0 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!25147 (not res!48214)) b!95355))

(assert (= (and b!95355 res!48215) b!95353))

(assert (= (and b!95355 res!48213) b!95351))

(assert (= (and b!95351 c!16011) b!95354))

(assert (= (and b!95351 (not c!16011)) b!95352))

(assert (= (or b!95354 b!95352) bm!9593))

(declare-fun m!103373 () Bool)

(assert (=> b!95351 m!103373))

(assert (=> b!95351 m!103373))

(declare-fun m!103375 () Bool)

(assert (=> b!95351 m!103375))

(assert (=> bm!9593 m!103373))

(declare-fun m!103377 () Bool)

(assert (=> bm!9593 m!103377))

(assert (=> b!95353 m!103373))

(assert (=> b!95353 m!103373))

(declare-fun m!103379 () Bool)

(assert (=> b!95353 m!103379))

(assert (=> b!95355 m!103373))

(assert (=> b!95355 m!103373))

(assert (=> b!95355 m!103375))

(assert (=> bm!9486 d!25147))

(assert (=> bm!9450 d!24879))

(declare-fun d!25149 () Bool)

(assert (=> d!25149 (= (get!1272 (getValueByKey!146 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46566)) (v!2760 (getValueByKey!146 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46566)))))

(assert (=> d!24627 d!25149))

(declare-fun e!62198 () Option!152)

(declare-fun b!95356 () Bool)

(assert (=> b!95356 (= e!62198 (Some!151 (_2!1163 (h!2164 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))))

(declare-fun e!62199 () Option!152)

(declare-fun b!95358 () Bool)

(assert (=> b!95358 (= e!62199 (getValueByKey!146 (t!5469 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) lt!46566))))

(declare-fun b!95357 () Bool)

(assert (=> b!95357 (= e!62198 e!62199)))

(declare-fun c!16013 () Bool)

(assert (=> b!95357 (= c!16013 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (not (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46566))))))

(declare-fun b!95359 () Bool)

(assert (=> b!95359 (= e!62199 None!150)))

(declare-fun d!25151 () Bool)

(declare-fun c!16012 () Bool)

(assert (=> d!25151 (= c!16012 (and ((_ is Cons!1572) (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))) (= (_1!1163 (h!2164 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))) lt!46566)))))

(assert (=> d!25151 (= (getValueByKey!146 (toList!766 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!46566) e!62198)))

(assert (= (and d!25151 c!16012) b!95356))

(assert (= (and d!25151 (not c!16012)) b!95357))

(assert (= (and b!95357 c!16013) b!95358))

(assert (= (and b!95357 (not c!16013)) b!95359))

(declare-fun m!103381 () Bool)

(assert (=> b!95358 m!103381))

(assert (=> d!24627 d!25151))

(declare-fun b!95361 () Bool)

(declare-fun res!48217 () Bool)

(declare-fun e!62200 () Bool)

(assert (=> b!95361 (=> (not res!48217) (not e!62200))))

(assert (=> b!95361 (= res!48217 (bvsge (size!2239 (_2!1162 lt!46671)) (_size!465 (_2!1162 lt!46671))))))

(declare-fun b!95363 () Bool)

(assert (=> b!95363 (= e!62200 (and (bvsge (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000000) (bvsle (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000011) (bvsge (_vacant!465 (_2!1162 lt!46671)) #b00000000000000000000000000000000)))))

(declare-fun b!95360 () Bool)

(declare-fun res!48216 () Bool)

(assert (=> b!95360 (=> (not res!48216) (not e!62200))))

(assert (=> b!95360 (= res!48216 (and (= (size!2234 (_values!2418 (_2!1162 lt!46671))) (bvadd (mask!6509 (_2!1162 lt!46671)) #b00000000000000000000000000000001)) (= (size!2233 (_keys!4116 (_2!1162 lt!46671))) (size!2234 (_values!2418 (_2!1162 lt!46671)))) (bvsge (_size!465 (_2!1162 lt!46671)) #b00000000000000000000000000000000) (bvsle (_size!465 (_2!1162 lt!46671)) (bvadd (mask!6509 (_2!1162 lt!46671)) #b00000000000000000000000000000001))))))

(declare-fun b!95362 () Bool)

(declare-fun res!48219 () Bool)

(assert (=> b!95362 (=> (not res!48219) (not e!62200))))

(assert (=> b!95362 (= res!48219 (= (size!2239 (_2!1162 lt!46671)) (bvadd (_size!465 (_2!1162 lt!46671)) (bvsdiv (bvadd (extraKeys!2264 (_2!1162 lt!46671)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!25153 () Bool)

(declare-fun res!48218 () Bool)

(assert (=> d!25153 (=> (not res!48218) (not e!62200))))

(assert (=> d!25153 (= res!48218 (validMask!0 (mask!6509 (_2!1162 lt!46671))))))

(assert (=> d!25153 (= (simpleValid!66 (_2!1162 lt!46671)) e!62200)))

(assert (= (and d!25153 res!48218) b!95360))

(assert (= (and b!95360 res!48216) b!95361))

(assert (= (and b!95361 res!48217) b!95362))

(assert (= (and b!95362 res!48219) b!95363))

(declare-fun m!103383 () Bool)

(assert (=> b!95361 m!103383))

(assert (=> b!95362 m!103383))

(assert (=> d!25153 m!101873))

(assert (=> d!24675 d!25153))

(assert (=> d!24567 d!24755))

(assert (=> bm!9493 d!24929))

(assert (=> d!24643 d!24627))

(declare-fun d!25155 () Bool)

(assert (=> d!25155 (= (apply!90 (+!126 lt!46561 (tuple2!2305 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!46566) (apply!90 lt!46561 lt!46566))))

(assert (=> d!25155 true))

(declare-fun _$34!852 () Unit!2800)

(assert (=> d!25155 (= (choose!573 lt!46561 lt!46570 (minValue!2322 (v!2754 (underlying!323 thiss!992))) lt!46566) _$34!852)))

(declare-fun bs!3924 () Bool)

(assert (= bs!3924 d!25155))

(assert (=> bs!3924 m!101109))

(assert (=> bs!3924 m!101109))

(assert (=> bs!3924 m!101111))

(assert (=> bs!3924 m!101113))

(assert (=> d!24643 d!25155))

(assert (=> d!24643 d!24651))

(declare-fun d!25157 () Bool)

(declare-fun e!62201 () Bool)

(assert (=> d!25157 e!62201))

(declare-fun res!48220 () Bool)

(assert (=> d!25157 (=> res!48220 e!62201)))

(declare-fun lt!47485 () Bool)

(assert (=> d!25157 (= res!48220 (not lt!47485))))

(declare-fun lt!47483 () Bool)

(assert (=> d!25157 (= lt!47485 lt!47483)))

(declare-fun lt!47484 () Unit!2800)

(declare-fun e!62202 () Unit!2800)

(assert (=> d!25157 (= lt!47484 e!62202)))

(declare-fun c!16014 () Bool)

(assert (=> d!25157 (= c!16014 lt!47483)))

(assert (=> d!25157 (= lt!47483 (containsKey!150 (toList!766 lt!46561) lt!46566))))

(assert (=> d!25157 (= (contains!786 lt!46561 lt!46566) lt!47485)))

(declare-fun b!95364 () Bool)

(declare-fun lt!47486 () Unit!2800)

(assert (=> b!95364 (= e!62202 lt!47486)))

(assert (=> b!95364 (= lt!47486 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46561) lt!46566))))

(assert (=> b!95364 (isDefined!100 (getValueByKey!146 (toList!766 lt!46561) lt!46566))))

(declare-fun b!95365 () Bool)

(declare-fun Unit!2862 () Unit!2800)

(assert (=> b!95365 (= e!62202 Unit!2862)))

(declare-fun b!95366 () Bool)

(assert (=> b!95366 (= e!62201 (isDefined!100 (getValueByKey!146 (toList!766 lt!46561) lt!46566)))))

(assert (= (and d!25157 c!16014) b!95364))

(assert (= (and d!25157 (not c!16014)) b!95365))

(assert (= (and d!25157 (not res!48220)) b!95366))

(declare-fun m!103385 () Bool)

(assert (=> d!25157 m!103385))

(declare-fun m!103387 () Bool)

(assert (=> b!95364 m!103387))

(assert (=> b!95364 m!101697))

(assert (=> b!95364 m!101697))

(declare-fun m!103389 () Bool)

(assert (=> b!95364 m!103389))

(assert (=> b!95366 m!101697))

(assert (=> b!95366 m!101697))

(assert (=> b!95366 m!103389))

(assert (=> d!24643 d!25157))

(assert (=> d!24643 d!24637))

(assert (=> d!24669 d!24755))

(declare-fun d!25159 () Bool)

(assert (=> d!25159 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47487 () Unit!2800)

(assert (=> d!25159 (= lt!47487 (choose!568 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62203 () Bool)

(assert (=> d!25159 e!62203))

(declare-fun res!48221 () Bool)

(assert (=> d!25159 (=> (not res!48221) (not e!62203))))

(assert (=> d!25159 (= res!48221 (isStrictlySorted!297 (toList!766 lt!46571)))))

(assert (=> d!25159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000) lt!47487)))

(declare-fun b!95367 () Bool)

(assert (=> b!95367 (= e!62203 (containsKey!150 (toList!766 lt!46571) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25159 res!48221) b!95367))

(assert (=> d!25159 m!101453))

(assert (=> d!25159 m!101453))

(assert (=> d!25159 m!101455))

(declare-fun m!103391 () Bool)

(assert (=> d!25159 m!103391))

(assert (=> d!25159 m!101955))

(assert (=> b!95367 m!101449))

(assert (=> b!94356 d!25159))

(assert (=> b!94356 d!24803))

(assert (=> b!94356 d!24719))

(declare-fun d!25161 () Bool)

(declare-fun lt!47488 () Bool)

(assert (=> d!25161 (= lt!47488 (select (content!98 (toList!766 lt!46922)) (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun e!62204 () Bool)

(assert (=> d!25161 (= lt!47488 e!62204)))

(declare-fun res!48223 () Bool)

(assert (=> d!25161 (=> (not res!48223) (not e!62204))))

(assert (=> d!25161 (= res!48223 ((_ is Cons!1572) (toList!766 lt!46922)))))

(assert (=> d!25161 (= (contains!790 (toList!766 lt!46922) (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))) lt!47488)))

(declare-fun b!95368 () Bool)

(declare-fun e!62205 () Bool)

(assert (=> b!95368 (= e!62204 e!62205)))

(declare-fun res!48222 () Bool)

(assert (=> b!95368 (=> res!48222 e!62205)))

(assert (=> b!95368 (= res!48222 (= (h!2164 (toList!766 lt!46922)) (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(declare-fun b!95369 () Bool)

(assert (=> b!95369 (= e!62205 (contains!790 (t!5469 (toList!766 lt!46922)) (tuple2!2305 lt!46555 (zeroValue!2322 (v!2754 (underlying!323 thiss!992))))))))

(assert (= (and d!25161 res!48223) b!95368))

(assert (= (and b!95368 (not res!48222)) b!95369))

(declare-fun m!103393 () Bool)

(assert (=> d!25161 m!103393))

(declare-fun m!103395 () Bool)

(assert (=> d!25161 m!103395))

(declare-fun m!103397 () Bool)

(assert (=> b!95369 m!103397))

(assert (=> b!94486 d!25161))

(assert (=> bm!9472 d!24673))

(declare-fun d!25163 () Bool)

(assert (=> d!25163 (isDefined!100 (getValueByKey!146 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!47489 () Unit!2800)

(assert (=> d!25163 (= lt!47489 (choose!568 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!62206 () Bool)

(assert (=> d!25163 e!62206))

(declare-fun res!48224 () Bool)

(assert (=> d!25163 (=> (not res!48224) (not e!62206))))

(assert (=> d!25163 (= res!48224 (isStrictlySorted!297 (toList!766 lt!46571)))))

(assert (=> d!25163 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47489)))

(declare-fun b!95370 () Bool)

(assert (=> b!95370 (= e!62206 (containsKey!150 (toList!766 lt!46571) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25163 res!48224) b!95370))

(assert (=> d!25163 m!101105))

(assert (=> d!25163 m!101445))

(assert (=> d!25163 m!101445))

(assert (=> d!25163 m!101447))

(assert (=> d!25163 m!101105))

(declare-fun m!103399 () Bool)

(assert (=> d!25163 m!103399))

(assert (=> d!25163 m!101955))

(assert (=> b!95370 m!101105))

(assert (=> b!95370 m!101441))

(assert (=> b!94353 d!25163))

(assert (=> b!94353 d!24807))

(assert (=> b!94353 d!24809))

(declare-fun d!25165 () Bool)

(declare-fun res!48225 () Bool)

(declare-fun e!62207 () Bool)

(assert (=> d!25165 (=> res!48225 e!62207)))

(assert (=> d!25165 (= res!48225 (and ((_ is Cons!1572) (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (= (_1!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(assert (=> d!25165 (= (containsKey!150 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)) e!62207)))

(declare-fun b!95371 () Bool)

(declare-fun e!62208 () Bool)

(assert (=> b!95371 (= e!62207 e!62208)))

(declare-fun res!48226 () Bool)

(assert (=> b!95371 (=> (not res!48226) (not e!62208))))

(assert (=> b!95371 (= res!48226 (and (or (not ((_ is Cons!1572) (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (bvsle (_1!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))) ((_ is Cons!1572) (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (bvslt (_1!1163 (h!2164 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16))))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355))))))

(declare-fun b!95372 () Bool)

(assert (=> b!95372 (= e!62208 (containsKey!150 (t!5469 (toList!766 (getCurrentListMap!448 (_keys!4116 newMap!16) (_values!2418 newMap!16) (mask!6509 newMap!16) (extraKeys!2264 newMap!16) (zeroValue!2322 newMap!16) (minValue!2322 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2435 newMap!16)))) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (= (and d!25165 (not res!48225)) b!95371))

(assert (= (and b!95371 res!48226) b!95372))

(assert (=> b!95372 m!100977))

(declare-fun m!103401 () Bool)

(assert (=> b!95372 m!103401))

(assert (=> d!24667 d!25165))

(declare-fun d!25167 () Bool)

(declare-fun isEmpty!356 (List!1576) Bool)

(assert (=> d!25167 (= (isEmpty!355 lt!46894) (isEmpty!356 (toList!766 lt!46894)))))

(declare-fun bs!3925 () Bool)

(assert (= bs!3925 d!25167))

(declare-fun m!103403 () Bool)

(assert (=> bs!3925 m!103403))

(assert (=> b!94459 d!25167))

(declare-fun d!25169 () Bool)

(declare-fun res!48227 () Bool)

(declare-fun e!62209 () Bool)

(assert (=> d!25169 (=> res!48227 e!62209)))

(assert (=> d!25169 (= res!48227 (and ((_ is Cons!1572) (toList!766 lt!46571)) (= (_1!1163 (h!2164 (toList!766 lt!46571))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25169 (= (containsKey!150 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000) e!62209)))

(declare-fun b!95373 () Bool)

(declare-fun e!62210 () Bool)

(assert (=> b!95373 (= e!62209 e!62210)))

(declare-fun res!48228 () Bool)

(assert (=> b!95373 (=> (not res!48228) (not e!62210))))

(assert (=> b!95373 (= res!48228 (and (or (not ((_ is Cons!1572) (toList!766 lt!46571))) (bvsle (_1!1163 (h!2164 (toList!766 lt!46571))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1572) (toList!766 lt!46571)) (bvslt (_1!1163 (h!2164 (toList!766 lt!46571))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95374 () Bool)

(assert (=> b!95374 (= e!62210 (containsKey!150 (t!5469 (toList!766 lt!46571)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25169 (not res!48227)) b!95373))

(assert (= (and b!95373 res!48228) b!95374))

(declare-fun m!103405 () Bool)

(assert (=> b!95374 m!103405))

(assert (=> d!24593 d!25169))

(declare-fun d!25171 () Bool)

(assert (=> d!25171 (= (get!1272 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2760 (getValueByKey!146 (toList!766 lt!46571) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24551 d!25171))

(assert (=> d!24551 d!24729))

(declare-fun d!25173 () Bool)

(assert (=> d!25173 (= (apply!90 lt!46725 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3926 () Bool)

(assert (= bs!3926 d!25173))

(assert (=> bs!3926 m!103019))

(assert (=> bs!3926 m!103019))

(declare-fun m!103407 () Bool)

(assert (=> bs!3926 m!103407))

(assert (=> b!94275 d!25173))

(declare-fun d!25175 () Bool)

(declare-fun e!62211 () Bool)

(assert (=> d!25175 e!62211))

(declare-fun res!48229 () Bool)

(assert (=> d!25175 (=> res!48229 e!62211)))

(declare-fun lt!47492 () Bool)

(assert (=> d!25175 (= res!48229 (not lt!47492))))

(declare-fun lt!47490 () Bool)

(assert (=> d!25175 (= lt!47492 lt!47490)))

(declare-fun lt!47491 () Unit!2800)

(declare-fun e!62212 () Unit!2800)

(assert (=> d!25175 (= lt!47491 e!62212)))

(declare-fun c!16015 () Bool)

(assert (=> d!25175 (= c!16015 lt!47490)))

(assert (=> d!25175 (= lt!47490 (containsKey!150 (toList!766 lt!46894) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!25175 (= (contains!786 lt!46894 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47492)))

(declare-fun b!95375 () Bool)

(declare-fun lt!47493 () Unit!2800)

(assert (=> b!95375 (= e!62212 lt!47493)))

(assert (=> b!95375 (= lt!47493 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46894) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95375 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95376 () Bool)

(declare-fun Unit!2863 () Unit!2800)

(assert (=> b!95376 (= e!62212 Unit!2863)))

(declare-fun b!95377 () Bool)

(assert (=> b!95377 (= e!62211 (isDefined!100 (getValueByKey!146 (toList!766 lt!46894) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!25175 c!16015) b!95375))

(assert (= (and d!25175 (not c!16015)) b!95376))

(assert (= (and d!25175 (not res!48229)) b!95377))

(assert (=> d!25175 m!101105))

(declare-fun m!103409 () Bool)

(assert (=> d!25175 m!103409))

(assert (=> b!95375 m!101105))

(declare-fun m!103411 () Bool)

(assert (=> b!95375 m!103411))

(assert (=> b!95375 m!101105))

(assert (=> b!95375 m!102805))

(assert (=> b!95375 m!102805))

(declare-fun m!103413 () Bool)

(assert (=> b!95375 m!103413))

(assert (=> b!95377 m!101105))

(assert (=> b!95377 m!102805))

(assert (=> b!95377 m!102805))

(assert (=> b!95377 m!103413))

(assert (=> b!94451 d!25175))

(declare-fun d!25177 () Bool)

(declare-fun res!48230 () Bool)

(declare-fun e!62213 () Bool)

(assert (=> d!25177 (=> res!48230 e!62213)))

(assert (=> d!25177 (= res!48230 (= (select (arr!1984 (_keys!4116 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355)))))

(assert (=> d!25177 (= (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!62213)))

(declare-fun b!95378 () Bool)

(declare-fun e!62214 () Bool)

(assert (=> b!95378 (= e!62213 e!62214)))

(declare-fun res!48231 () Bool)

(assert (=> b!95378 (=> (not res!48231) (not e!62214))))

(assert (=> b!95378 (= res!48231 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2233 (_keys!4116 newMap!16))))))

(declare-fun b!95379 () Bool)

(assert (=> b!95379 (= e!62214 (arrayContainsKey!0 (_keys!4116 newMap!16) (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25177 (not res!48230)) b!95378))

(assert (= (and b!95378 res!48231) b!95379))

(assert (=> d!25177 m!101907))

(assert (=> b!95379 m!100977))

(declare-fun m!103415 () Bool)

(assert (=> b!95379 m!103415))

(assert (=> b!94553 d!25177))

(declare-fun d!25179 () Bool)

(assert (=> d!25179 (isDefined!100 (getValueByKey!146 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(declare-fun lt!47494 () Unit!2800)

(assert (=> d!25179 (= lt!47494 (choose!568 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(declare-fun e!62215 () Bool)

(assert (=> d!25179 e!62215))

(declare-fun res!48232 () Bool)

(assert (=> d!25179 (=> (not res!48232) (not e!62215))))

(assert (=> d!25179 (= res!48232 (isStrictlySorted!297 (toList!766 call!9424)))))

(assert (=> d!25179 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))) lt!47494)))

(declare-fun b!95380 () Bool)

(assert (=> b!95380 (= e!62215 (containsKey!150 (toList!766 call!9424) (ite c!15685 (select (arr!1984 (_keys!4116 (v!2754 (underlying!323 thiss!992)))) from!355) (select (arr!1984 (_keys!4116 newMap!16)) (index!3158 lt!46666)))))))

(assert (= (and d!25179 res!48232) b!95380))

(assert (=> d!25179 m!101487))

(assert (=> d!25179 m!101487))

(assert (=> d!25179 m!101489))

(declare-fun m!103417 () Bool)

(assert (=> d!25179 m!103417))

(declare-fun m!103419 () Bool)

(assert (=> d!25179 m!103419))

(assert (=> b!95380 m!101483))

(assert (=> b!94378 d!25179))

(assert (=> b!94378 d!24833))

(assert (=> b!94378 d!24835))

(declare-fun d!25181 () Bool)

(assert (=> d!25181 (= (apply!90 lt!46977 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1272 (getValueByKey!146 (toList!766 lt!46977) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3927 () Bool)

(assert (= bs!3927 d!25181))

(assert (=> bs!3927 m!103027))

(assert (=> bs!3927 m!103027))

(declare-fun m!103421 () Bool)

(assert (=> bs!3927 m!103421))

(assert (=> b!94535 d!25181))

(assert (=> b!94477 d!24677))

(declare-fun d!25183 () Bool)

(declare-fun e!62216 () Bool)

(assert (=> d!25183 e!62216))

(declare-fun res!48233 () Bool)

(assert (=> d!25183 (=> res!48233 e!62216)))

(declare-fun lt!47497 () Bool)

(assert (=> d!25183 (= res!48233 (not lt!47497))))

(declare-fun lt!47495 () Bool)

(assert (=> d!25183 (= lt!47497 lt!47495)))

(declare-fun lt!47496 () Unit!2800)

(declare-fun e!62217 () Unit!2800)

(assert (=> d!25183 (= lt!47496 e!62217)))

(declare-fun c!16016 () Bool)

(assert (=> d!25183 (= c!16016 lt!47495)))

(assert (=> d!25183 (= lt!47495 (containsKey!150 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> d!25183 (= (contains!786 lt!46860 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47497)))

(declare-fun b!95381 () Bool)

(declare-fun lt!47498 () Unit!2800)

(assert (=> b!95381 (= e!62217 lt!47498)))

(assert (=> b!95381 (= lt!47498 (lemmaContainsKeyImpliesGetValueByKeyDefined!99 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(assert (=> b!95381 (isDefined!100 (getValueByKey!146 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95382 () Bool)

(declare-fun Unit!2864 () Unit!2800)

(assert (=> b!95382 (= e!62217 Unit!2864)))

(declare-fun b!95383 () Bool)

(assert (=> b!95383 (= e!62216 (isDefined!100 (getValueByKey!146 (toList!766 lt!46860) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!25183 c!16016) b!95381))

(assert (= (and d!25183 (not c!16016)) b!95382))

(assert (= (and d!25183 (not res!48233)) b!95383))

(declare-fun m!103423 () Bool)

(assert (=> d!25183 m!103423))

(declare-fun m!103425 () Bool)

(assert (=> b!95381 m!103425))

(assert (=> b!95381 m!101523))

(assert (=> b!95381 m!101523))

(declare-fun m!103427 () Bool)

(assert (=> b!95381 m!103427))

(assert (=> b!95383 m!101523))

(assert (=> b!95383 m!101523))

(assert (=> b!95383 m!103427))

(assert (=> d!24611 d!25183))

(declare-fun b!95384 () Bool)

(declare-fun e!62218 () Option!152)

(assert (=> b!95384 (= e!62218 (Some!151 (_2!1163 (h!2164 lt!46862))))))

(declare-fun b!95386 () Bool)

(declare-fun e!62219 () Option!152)

(assert (=> b!95386 (= e!62219 (getValueByKey!146 (t!5469 lt!46862) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95385 () Bool)

(assert (=> b!95385 (= e!62218 e!62219)))

(declare-fun c!16018 () Bool)

(assert (=> b!95385 (= c!16018 (and ((_ is Cons!1572) lt!46862) (not (= (_1!1163 (h!2164 lt!46862)) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun b!95387 () Bool)

(assert (=> b!95387 (= e!62219 None!150)))

(declare-fun d!25185 () Bool)

(declare-fun c!16017 () Bool)

(assert (=> d!25185 (= c!16017 (and ((_ is Cons!1572) lt!46862) (= (_1!1163 (h!2164 lt!46862)) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25185 (= (getValueByKey!146 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) e!62218)))

(assert (= (and d!25185 c!16017) b!95384))

(assert (= (and d!25185 (not c!16017)) b!95385))

(assert (= (and b!95385 c!16018) b!95386))

(assert (= (and b!95385 (not c!16018)) b!95387))

(declare-fun m!103429 () Bool)

(assert (=> b!95386 m!103429))

(assert (=> d!24611 d!25185))

(declare-fun d!25187 () Bool)

(assert (=> d!25187 (= (getValueByKey!146 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) (Some!151 (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun lt!47499 () Unit!2800)

(assert (=> d!25187 (= lt!47499 (choose!576 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun e!62220 () Bool)

(assert (=> d!25187 e!62220))

(declare-fun res!48234 () Bool)

(assert (=> d!25187 (=> (not res!48234) (not e!62220))))

(assert (=> d!25187 (= res!48234 (isStrictlySorted!297 lt!46862))))

(assert (=> d!25187 (= (lemmaContainsTupThenGetReturnValue!65 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47499)))

(declare-fun b!95388 () Bool)

(declare-fun res!48235 () Bool)

(assert (=> b!95388 (=> (not res!48235) (not e!62220))))

(assert (=> b!95388 (= res!48235 (containsKey!150 lt!46862 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95389 () Bool)

(assert (=> b!95389 (= e!62220 (contains!790 lt!46862 (tuple2!2305 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (= (and d!25187 res!48234) b!95388))

(assert (= (and b!95388 res!48235) b!95389))

(assert (=> d!25187 m!101517))

(declare-fun m!103431 () Bool)

(assert (=> d!25187 m!103431))

(declare-fun m!103433 () Bool)

(assert (=> d!25187 m!103433))

(declare-fun m!103435 () Bool)

(assert (=> b!95388 m!103435))

(declare-fun m!103437 () Bool)

(assert (=> b!95389 m!103437))

(assert (=> d!24611 d!25187))

(declare-fun bm!9594 () Bool)

(declare-fun call!9598 () List!1576)

(declare-fun call!9599 () List!1576)

(assert (=> bm!9594 (= call!9598 call!9599)))

(declare-fun bm!9595 () Bool)

(declare-fun call!9597 () List!1576)

(assert (=> bm!9595 (= call!9599 call!9597)))

(declare-fun b!95390 () Bool)

(declare-fun e!62223 () List!1576)

(assert (=> b!95390 (= e!62223 call!9597)))

(declare-fun bm!9596 () Bool)

(declare-fun c!16019 () Bool)

(declare-fun e!62224 () List!1576)

(assert (=> bm!9596 (= call!9597 ($colon$colon!75 e!62224 (ite c!16019 (h!2164 (toList!766 call!9369)) (tuple2!2305 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))))

(declare-fun c!16021 () Bool)

(assert (=> bm!9596 (= c!16021 c!16019)))

(declare-fun b!95391 () Bool)

(declare-fun e!62225 () List!1576)

(assert (=> b!95391 (= e!62223 e!62225)))

(declare-fun c!16020 () Bool)

(assert (=> b!95391 (= c!16020 (and ((_ is Cons!1572) (toList!766 call!9369)) (= (_1!1163 (h!2164 (toList!766 call!9369))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!95392 () Bool)

(assert (=> b!95392 (= e!62225 call!9599)))

(declare-fun b!95393 () Bool)

(declare-fun e!62221 () Bool)

(declare-fun lt!47500 () List!1576)

(assert (=> b!95393 (= e!62221 (contains!790 lt!47500 (tuple2!2305 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(declare-fun b!95394 () Bool)

(declare-fun e!62222 () List!1576)

(assert (=> b!95394 (= e!62222 call!9598)))

(declare-fun b!95395 () Bool)

(assert (=> b!95395 (= e!62222 call!9598)))

(declare-fun b!95396 () Bool)

(declare-fun res!48237 () Bool)

(assert (=> b!95396 (=> (not res!48237) (not e!62221))))

(assert (=> b!95396 (= res!48237 (containsKey!150 lt!47500 (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun b!95398 () Bool)

(declare-fun c!16022 () Bool)

(assert (=> b!95398 (= e!62224 (ite c!16020 (t!5469 (toList!766 call!9369)) (ite c!16022 (Cons!1572 (h!2164 (toList!766 call!9369)) (t!5469 (toList!766 call!9369))) Nil!1573)))))

(declare-fun b!95399 () Bool)

(assert (=> b!95399 (= e!62224 (insertStrictlySorted!68 (t!5469 (toList!766 call!9369)) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))))))

(declare-fun d!25189 () Bool)

(assert (=> d!25189 e!62221))

(declare-fun res!48236 () Bool)

(assert (=> d!25189 (=> (not res!48236) (not e!62221))))

(assert (=> d!25189 (= res!48236 (isStrictlySorted!297 lt!47500))))

(assert (=> d!25189 (= lt!47500 e!62223)))

(assert (=> d!25189 (= c!16019 (and ((_ is Cons!1572) (toList!766 call!9369)) (bvslt (_1!1163 (h!2164 (toList!766 call!9369))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> d!25189 (isStrictlySorted!297 (toList!766 call!9369))))

(assert (=> d!25189 (= (insertStrictlySorted!68 (toList!766 call!9369) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))) (_2!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992)))))) lt!47500)))

(declare-fun b!95397 () Bool)

(assert (=> b!95397 (= c!16022 (and ((_ is Cons!1572) (toList!766 call!9369)) (bvsgt (_1!1163 (h!2164 (toList!766 call!9369))) (_1!1163 (tuple2!2305 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2322 (v!2754 (underlying!323 thiss!992))))))))))

(assert (=> b!95397 (= e!62225 e!62222)))

(assert (= (and d!25189 c!16019) b!95390))

(assert (= (and d!25189 (not c!16019)) b!95391))

(assert (= (and b!95391 c!16020) b!95392))

(assert (= (and b!95391 (not c!16020)) b!95397))

(assert (= (and b!95397 c!16022) b!95394))

(assert (= (and b!95397 (not c!16022)) b!95395))

(assert (= (or b!95394 b!95395) bm!9594))

(assert (= (or b!95392 bm!9594) bm!9595))

(assert (= (or b!95390 bm!9595) bm!9596))

(assert (= (and bm!9596 c!16021) b!95399))

(assert (= (and bm!9596 (not c!16021)) b!95398))

(assert (= (and d!25189 res!48236) b!95396))

(assert (= (and b!95396 res!48237) b!95393))

(declare-fun m!103439 () Bool)

(assert (=> b!95399 m!103439))

(declare-fun m!103441 () Bool)

(assert (=> b!95396 m!103441))

(declare-fun m!103443 () Bool)

(assert (=> d!25189 m!103443))

(declare-fun m!103445 () Bool)

(assert (=> d!25189 m!103445))

(declare-fun m!103447 () Bool)

(assert (=> b!95393 m!103447))

(declare-fun m!103449 () Bool)

(assert (=> bm!9596 m!103449))

(assert (=> d!24611 d!25189))

(assert (=> b!94246 d!24595))

(declare-fun b!95401 () Bool)

(declare-fun e!62227 () Bool)

(assert (=> b!95401 (= e!62227 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3689 () Bool)

(declare-fun mapRes!3689 () Bool)

(declare-fun tp!9467 () Bool)

(declare-fun e!62226 () Bool)

(assert (=> mapNonEmpty!3689 (= mapRes!3689 (and tp!9467 e!62226))))

(declare-fun mapKey!3689 () (_ BitVec 32))

(declare-fun mapValue!3689 () ValueCell!962)

(declare-fun mapRest!3689 () (Array (_ BitVec 32) ValueCell!962))

(assert (=> mapNonEmpty!3689 (= mapRest!3687 (store mapRest!3689 mapKey!3689 mapValue!3689))))

(declare-fun condMapEmpty!3689 () Bool)

(declare-fun mapDefault!3689 () ValueCell!962)

(assert (=> mapNonEmpty!3687 (= condMapEmpty!3689 (= mapRest!3687 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3689)))))

(assert (=> mapNonEmpty!3687 (= tp!9465 (and e!62227 mapRes!3689))))

(declare-fun mapIsEmpty!3689 () Bool)

(assert (=> mapIsEmpty!3689 mapRes!3689))

(declare-fun b!95400 () Bool)

(assert (=> b!95400 (= e!62226 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3687 condMapEmpty!3689) mapIsEmpty!3689))

(assert (= (and mapNonEmpty!3687 (not condMapEmpty!3689)) mapNonEmpty!3689))

(assert (= (and mapNonEmpty!3689 ((_ is ValueCellFull!962) mapValue!3689)) b!95400))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!962) mapDefault!3689)) b!95401))

(declare-fun m!103451 () Bool)

(assert (=> mapNonEmpty!3689 m!103451))

(declare-fun b!95403 () Bool)

(declare-fun e!62229 () Bool)

(assert (=> b!95403 (= e!62229 tp_is_empty!2611)))

(declare-fun mapNonEmpty!3690 () Bool)

(declare-fun mapRes!3690 () Bool)

(declare-fun tp!9468 () Bool)

(declare-fun e!62228 () Bool)

(assert (=> mapNonEmpty!3690 (= mapRes!3690 (and tp!9468 e!62228))))

(declare-fun mapRest!3690 () (Array (_ BitVec 32) ValueCell!962))

(declare-fun mapKey!3690 () (_ BitVec 32))

(declare-fun mapValue!3690 () ValueCell!962)

(assert (=> mapNonEmpty!3690 (= mapRest!3688 (store mapRest!3690 mapKey!3690 mapValue!3690))))

(declare-fun condMapEmpty!3690 () Bool)

(declare-fun mapDefault!3690 () ValueCell!962)

(assert (=> mapNonEmpty!3688 (= condMapEmpty!3690 (= mapRest!3688 ((as const (Array (_ BitVec 32) ValueCell!962)) mapDefault!3690)))))

(assert (=> mapNonEmpty!3688 (= tp!9466 (and e!62229 mapRes!3690))))

(declare-fun mapIsEmpty!3690 () Bool)

(assert (=> mapIsEmpty!3690 mapRes!3690))

(declare-fun b!95402 () Bool)

(assert (=> b!95402 (= e!62228 tp_is_empty!2611)))

(assert (= (and mapNonEmpty!3688 condMapEmpty!3690) mapIsEmpty!3690))

(assert (= (and mapNonEmpty!3688 (not condMapEmpty!3690)) mapNonEmpty!3690))

(assert (= (and mapNonEmpty!3690 ((_ is ValueCellFull!962) mapValue!3690)) b!95402))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!962) mapDefault!3690)) b!95403))

(declare-fun m!103453 () Bool)

(assert (=> mapNonEmpty!3690 m!103453))

(declare-fun b_lambda!4193 () Bool)

(assert (= b_lambda!4169 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4193)))

(declare-fun b_lambda!4195 () Bool)

(assert (= b_lambda!4181 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4195)))

(declare-fun b_lambda!4197 () Bool)

(assert (= b_lambda!4171 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4197)))

(declare-fun b_lambda!4199 () Bool)

(assert (= b_lambda!4179 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4199)))

(declare-fun b_lambda!4201 () Bool)

(assert (= b_lambda!4189 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4201)))

(declare-fun b_lambda!4203 () Bool)

(assert (= b_lambda!4191 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4203)))

(declare-fun b_lambda!4205 () Bool)

(assert (= b_lambda!4185 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4205)))

(declare-fun b_lambda!4207 () Bool)

(assert (= b_lambda!4187 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4207)))

(declare-fun b_lambda!4209 () Bool)

(assert (= b_lambda!4175 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4209)))

(declare-fun b_lambda!4211 () Bool)

(assert (= b_lambda!4165 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4211)))

(declare-fun b_lambda!4213 () Bool)

(assert (= b_lambda!4183 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4213)))

(declare-fun b_lambda!4215 () Bool)

(assert (= b_lambda!4177 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4215)))

(declare-fun b_lambda!4217 () Bool)

(assert (= b_lambda!4167 (or (and b!93841 b_free!2389) (and b!93842 b_free!2391 (= (defaultEntry!2435 newMap!16) (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))))) b_lambda!4217)))

(declare-fun b_lambda!4219 () Bool)

(assert (= b_lambda!4173 (or (and b!93841 b_free!2389 (= (defaultEntry!2435 (v!2754 (underlying!323 thiss!992))) (defaultEntry!2435 newMap!16))) (and b!93842 b_free!2391) b_lambda!4219)))

(check-sat (not b_lambda!4137) (not b!95317) (not b!94635) (not d!24833) (not d!25173) (not b!94930) (not bm!9569) (not b!95316) (not b!95198) (not b!95120) (not b!94891) (not d!24983) (not d!25131) (not b_lambda!4203) (not b!95047) (not b!95271) (not d!25025) (not d!24773) b_and!5823 (not b!94702) (not b!94665) (not bm!9532) (not mapNonEmpty!3690) (not b!94976) (not bm!9592) (not d!25105) (not b!94894) (not b_lambda!4153) (not bm!9586) (not b!94579) (not b!95308) (not d!24955) (not bm!9555) (not b!94919) (not bm!9534) (not b!94973) (not b!95150) (not b!95004) (not b!94770) (not b!95006) (not b!95157) (not b!95016) (not d!24747) (not b!95035) (not b!94563) (not b!94778) (not b!95193) (not d!25187) (not d!25051) (not b!94906) (not d!24927) (not b!94639) (not d!25073) (not b!95203) (not b_lambda!4201) (not d!25087) (not b!94773) (not b!95205) (not d!24917) (not d!25041) (not bm!9552) (not b!95351) (not d!24723) (not d!24969) (not b!94666) (not bm!9533) (not bm!9593) (not b!94875) (not b!94646) (not b!94860) (not bm!9557) (not d!24693) (not d!24695) (not bm!9521) (not b!95028) (not d!24831) (not b!95396) (not d!24733) (not b!95372) (not b!95212) (not b_next!2391) (not b_lambda!4163) (not b!94654) (not b!94580) (not b!94626) (not b!94581) (not d!24855) (not b!95257) (not b!95022) (not b!95058) (not d!25027) (not b_lambda!4155) (not b!95209) (not b!94601) (not b!94708) (not b!94589) (not b!94970) (not d!24857) (not d!24797) (not b!94586) (not b!95381) (not d!24721) (not d!24839) (not b!95262) (not b!94969) (not bm!9541) (not b!94746) (not b!94836) (not d!24791) (not b!94825) (not d!25175) (not bm!9502) (not b!94964) (not d!24749) (not b!94850) (not d!24883) (not b!94736) (not b!94710) (not d!25145) (not b!94952) (not b!95286) (not b!94721) (not bm!9512) (not b_lambda!4161) (not b!95350) (not b!94831) (not b!94595) (not b!94933) (not d!24975) (not b!95094) (not b_lambda!4199) (not d!24911) (not b!95109) (not b!94818) (not b!95225) (not b!95215) (not b!94944) (not b!94841) (not bm!9527) (not d!25007) (not b!94895) (not d!24933) (not b!94915) (not b!94612) (not bm!9556) (not d!24761) (not d!24901) (not d!24879) (not d!24685) (not b!95268) (not b!94809) (not b!94863) (not b!94848) (not b!94723) (not b!94719) (not b!95240) (not b!94771) (not b!95131) (not b!95184) (not b!95207) (not b!94806) (not d!25183) (not b!95249) (not b_lambda!4197) (not d!24959) (not b!94999) (not b!94945) (not b!95254) (not b!95041) (not b!94884) (not b!95204) (not d!24807) (not d!24787) (not b!94792) (not b!95369) (not b!95237) (not b!94576) (not b!94768) (not b!95217) (not b!95282) (not b!95266) (not b!95017) (not d!24923) (not bm!9531) (not d!25047) (not d!24889) (not bm!9518) (not d!24707) (not b!95374) (not b!95248) (not b!94877) (not d!25159) (not d!25075) (not b!94615) (not b!94775) (not b!94947) (not b!94928) (not b!95177) (not b!95261) (not b!95247) (not b!94599) (not d!25061) (not b!94745) (not d!24741) (not b!95104) (not b!94591) (not b!94974) (not b!94929) (not b!94896) (not b_lambda!4207) (not d!25153) (not d!25123) (not bm!9579) (not b_next!2389) (not b!95189) (not b!94912) (not b_lambda!4211) (not b!95000) (not b!95379) (not bm!9519) (not b!94956) (not b!94796) (not d!24877) (not b!95386) (not d!25067) (not b!94889) (not b!94871) (not d!25101) (not d!25079) (not b!95259) (not d!24921) (not b!94713) (not d!25053) (not b!95060) (not b!95361) (not b!94782) (not d!24915) (not b!94783) (not b!94781) (not b_lambda!4193) (not b!95125) (not b!95353) (not d!25155) (not d!25021) (not bm!9511) (not b!94883) (not d!25003) (not b!94855) (not b!95196) (not bm!9591) (not d!25089) (not b!95370) (not d!24727) (not d!24683) (not b!95138) (not b!94799) (not b!94931) (not b!94776) (not d!24891) (not b!95277) (not b!94690) (not b!94711) (not d!25111) (not b!94748) (not b!94629) (not b!94876) (not b!95096) (not b!94815) (not b!94714) (not d!24935) (not b!95258) (not d!25137) (not d!25069) (not b!94882) (not d!24753) (not b_lambda!4213) (not bm!9596) (not d!24847) (not d!25083) (not d!24929) (not b!95355) (not bm!9585) (not bm!9524) (not bm!9575) (not b!95263) (not d!24771) (not d!24997) (not b!95124) (not b!94623) (not d!24965) (not d!25133) (not b!94751) (not bm!9571) (not d!25127) (not d!24679) (not b_lambda!4215) (not b!94659) (not b!94941) (not d!25017) (not d!24977) (not b!95023) (not b!95021) (not b!94881) (not b!95046) (not b!95173) (not b!95285) (not b!94592) (not b!95051) (not b!95024) (not d!24851) (not b!95001) (not d!24793) (not d!25179) (not b!95145) (not b!95052) (not b!94632) (not b!95264) (not b!95201) (not b!94739) (not b!95228) (not b!95089) (not b!94927) (not b!95155) (not b!94649) (not b!95255) (not d!25181) (not d!24745) (not b!94901) (not bm!9544) (not b!95235) (not b!95129) (not b!94880) (not d!25119) (not d!25023) (not b!94909) (not bm!9496) (not d!24849) (not bm!9494) (not b!94761) (not b!94821) (not d!24939) (not b!94812) (not d!25129) (not b!95380) (not d!25059) (not b!95126) (not bm!9559) (not d!25125) (not d!24899) (not b!95218) (not b!95030) (not d!25015) (not b_lambda!4159) (not d!24947) (not b!94794) (not d!24985) (not d!24967) (not d!25189) (not b!95114) (not b!94943) (not d!24739) (not d!25097) (not b!95296) (not b!95238) (not d!24869) (not d!24875) (not b!94716) (not d!25039) (not d!25107) (not b!94606) (not b!94904) (not b!94788) (not b!94874) (not b!95241) (not bm!9515) (not b_lambda!4205) (not b!94958) (not b!95175) (not b!95130) (not b!94631) (not b!95112) (not bm!9537) (not d!24885) (not d!25029) (not d!25139) (not d!24867) (not bm!9581) (not b!95276) (not d!24813) (not b!95280) (not b!94888) (not b!95302) (not b!94902) (not b!95314) (not d!24949) (not b!94729) (not b_lambda!4219) (not d!25115) (not d!25167) (not d!25065) (not b!95321) (not d!24795) (not b!94574) (not b!95383) (not mapNonEmpty!3689) (not d!24691) (not b!94602) (not d!24783) (not d!24779) (not b!95101) (not b!94619) (not b!95110) (not b!94957) (not b!94847) (not b!95231) (not b!94733) (not bm!9547) (not b!95005) (not b!94728) (not b!94975) (not d!24725) (not b_lambda!4209) (not b!94897) (not b!95389) (not b!95289) (not d!24963) (not b!95234) (not b!94868) (not d!25099) (not d!24905) (not b!94921) (not bm!9500) (not b!95393) (not b!95194) (not b!95323) (not d!24919) (not bm!9501) (not b!95305) (not d!24925) (not b!94853) (not d!24757) (not b!95319) (not d!25113) (not bm!9520) (not d!25163) (not bm!9584) (not b!94834) (not b!95012) (not b!94726) (not b!94856) (not b!95163) (not b!95151) (not d!24767) (not bm!9566) (not d!24881) (not b!95288) (not d!24893) (not b!95362) (not d!24873) (not b!95053) (not d!25161) (not bm!9535) (not d!24995) (not b!94651) (not b!94925) (not b!95132) (not d!25013) (not b!94582) (not bm!9578) (not b!95181) (not bm!9568) (not d!24913) (not b!94828) (not d!24819) (not d!24837) (not b_lambda!4157) (not d!24859) (not b!95088) (not b!94769) (not d!25103) (not b!94837) (not b!94949) (not b!95154) (not b!95098) (not b!95399) (not b!95103) (not b!94754) (not b!94767) (not b!95290) (not b!94697) (not b!94744) (not d!24803) (not b!94764) (not b!94934) (not b!94829) (not bm!9530) (not bm!9574) (not b!95318) (not b!95172) (not bm!9558) (not b!95156) (not d!24931) (not d!24953) (not b!95050) (not b!94996) (not b!94844) (not b!95033) (not b!95283) (not b_lambda!4217) (not b!95377) (not d!25157) (not d!25031) (not d!25071) (not b!94656) (not b!94696) (not bm!9548) (not b!94932) (not d!24937) (not b!95366) (not b!95018) (not b!95301) (not b!95325) (not d!25143) (not bm!9560) (not b!94801) (not b!95191) (not b!94605) (not d!25077) (not b!94765) (not d!24895) (not b!95287) (not b!94878) (not bm!9561) (not b!95149) (not b!95210) (not b!94570) tp_is_empty!2611 (not d!24887) (not b!94926) (not b!94693) (not b!95245) (not b!95367) (not d!24687) (not bm!9540) (not b!95183) (not d!24945) (not d!24865) (not bm!9549) (not b!95320) (not d!24789) (not b!94720) (not bm!9499) (not bm!9550) (not b!95375) (not b!95388) (not b!94653) (not b!95307) (not b!94627) (not b!95002) (not d!24957) (not b!95364) (not b!95222) (not b!95032) (not d!24709) (not d!25117) (not b!94954) (not b!94938) (not d!25121) (not d!24775) (not b_lambda!4141) (not b!95045) (not b!95274) (not d!25109) (not b!95284) (not b!94886) (not b!94939) b_and!5821 (not b!94575) (not b!94718) (not d!24765) (not b!94753) (not d!24843) (not b!95306) (not b!94907) (not d!24941) (not d!24909) (not b!95084) (not bm!9542) (not b!94899) (not d!24907) (not b!94866) (not bm!9567) (not bm!9563) (not d!24987) (not d!25009) (not d!24871) (not b!94802) (not b_lambda!4195) (not b!95358) (not b!94742) (not d!24971) (not b!94699) (not b!94936) (not b!94968) (not b!95300) (not d!24817) (not b!95180) (not b!94758) (not d!24979) (not b!95243) (not b!94900))
(check-sat b_and!5821 b_and!5823 (not b_next!2389) (not b_next!2391))
