; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11500 () Bool)

(assert start!11500)

(declare-fun b!95454 () Bool)

(declare-fun b_free!2401 () Bool)

(declare-fun b_next!2401 () Bool)

(assert (=> b!95454 (= b_free!2401 (not b_next!2401))))

(declare-fun tp!9477 () Bool)

(declare-fun b_and!5825 () Bool)

(assert (=> b!95454 (= tp!9477 b_and!5825)))

(declare-fun b!95447 () Bool)

(declare-fun b_free!2403 () Bool)

(declare-fun b_next!2403 () Bool)

(assert (=> b!95447 (= b_free!2403 (not b_next!2403))))

(declare-fun tp!9478 () Bool)

(declare-fun b_and!5827 () Bool)

(assert (=> b!95447 (= tp!9478 b_and!5827)))

(declare-fun b!95442 () Bool)

(declare-fun e!62267 () Bool)

(declare-fun e!62272 () Bool)

(declare-fun mapRes!3695 () Bool)

(assert (=> b!95442 (= e!62267 (and e!62272 mapRes!3695))))

(declare-fun condMapEmpty!3695 () Bool)

(declare-datatypes ((V!3137 0))(
  ( (V!3138 (val!1353 Int)) )
))
(declare-datatypes ((array!4191 0))(
  ( (array!4192 (arr!1990 (Array (_ BitVec 32) (_ BitVec 64))) (size!2240 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!965 0))(
  ( (ValueCellFull!965 (v!2769 V!3137)) (EmptyCell!965) )
))
(declare-datatypes ((array!4193 0))(
  ( (array!4194 (arr!1991 (Array (_ BitVec 32) ValueCell!965)) (size!2241 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!838 0))(
  ( (LongMapFixedSize!839 (defaultEntry!2456 Int) (mask!6540 (_ BitVec 32)) (extraKeys!2281 (_ BitVec 32)) (zeroValue!2341 V!3137) (minValue!2341 V!3137) (_size!468 (_ BitVec 32)) (_keys!4141 array!4191) (_values!2439 array!4193) (_vacant!468 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!838)

(declare-fun mapDefault!3695 () ValueCell!965)

(assert (=> b!95442 (= condMapEmpty!3695 (= (arr!1991 (_values!2439 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3695)))))

(declare-fun b!95443 () Bool)

(declare-fun e!62266 () Bool)

(declare-fun tp_is_empty!2617 () Bool)

(assert (=> b!95443 (= e!62266 tp_is_empty!2617)))

(declare-fun b!95444 () Bool)

(declare-fun e!62275 () Bool)

(declare-fun e!62268 () Bool)

(assert (=> b!95444 (= e!62275 e!62268)))

(declare-fun res!48253 () Bool)

(assert (=> b!95444 (=> (not res!48253) (not e!62268))))

(declare-datatypes ((tuple2!2314 0))(
  ( (tuple2!2315 (_1!1168 (_ BitVec 64)) (_2!1168 V!3137)) )
))
(declare-datatypes ((List!1580 0))(
  ( (Nil!1577) (Cons!1576 (h!2169 tuple2!2314) (t!5493 List!1580)) )
))
(declare-datatypes ((ListLongMap!1507 0))(
  ( (ListLongMap!1508 (toList!769 List!1580)) )
))
(declare-fun lt!47519 () ListLongMap!1507)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lt!47518 () ListLongMap!1507)

(declare-datatypes ((Cell!630 0))(
  ( (Cell!631 (v!2770 LongMapFixedSize!838)) )
))
(declare-datatypes ((LongMap!630 0))(
  ( (LongMap!631 (underlying!326 Cell!630)) )
))
(declare-fun thiss!992 () LongMap!630)

(assert (=> b!95444 (= res!48253 (and (= lt!47519 lt!47518) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1237 (LongMapFixedSize!838) ListLongMap!1507)

(assert (=> b!95444 (= lt!47518 (map!1237 newMap!16))))

(declare-fun getCurrentListMap!451 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) ListLongMap!1507)

(assert (=> b!95444 (= lt!47519 (getCurrentListMap!451 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95445 () Bool)

(declare-fun e!62274 () Bool)

(assert (=> b!95445 (= e!62274 tp_is_empty!2617)))

(declare-fun b!95446 () Bool)

(declare-fun e!62269 () Bool)

(declare-fun e!62276 () Bool)

(assert (=> b!95446 (= e!62269 e!62276)))

(declare-fun mapNonEmpty!3695 () Bool)

(declare-fun mapRes!3696 () Bool)

(declare-fun tp!9480 () Bool)

(assert (=> mapNonEmpty!3695 (= mapRes!3696 (and tp!9480 e!62274))))

(declare-fun mapRest!3696 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3695 () ValueCell!965)

(declare-fun mapKey!3696 () (_ BitVec 32))

(assert (=> mapNonEmpty!3695 (= (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (store mapRest!3696 mapKey!3696 mapValue!3695))))

(declare-fun e!62273 () Bool)

(declare-fun array_inv!1249 (array!4191) Bool)

(declare-fun array_inv!1250 (array!4193) Bool)

(assert (=> b!95447 (= e!62273 (and tp!9478 tp_is_empty!2617 (array_inv!1249 (_keys!4141 newMap!16)) (array_inv!1250 (_values!2439 newMap!16)) e!62267))))

(declare-fun b!95448 () Bool)

(declare-fun e!62262 () Bool)

(assert (=> b!95448 (= e!62276 e!62262)))

(declare-fun mapIsEmpty!3695 () Bool)

(assert (=> mapIsEmpty!3695 mapRes!3695))

(declare-fun b!95450 () Bool)

(declare-fun res!48258 () Bool)

(assert (=> b!95450 (=> (not res!48258) (not e!62275))))

(assert (=> b!95450 (= res!48258 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!95451 () Bool)

(declare-datatypes ((Unit!2865 0))(
  ( (Unit!2866) )
))
(declare-fun e!62270 () Unit!2865)

(declare-fun Unit!2867 () Unit!2865)

(assert (=> b!95451 (= e!62270 Unit!2867)))

(declare-fun b!95452 () Bool)

(declare-fun e!62265 () Bool)

(assert (=> b!95452 (= e!62265 (and (= (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6540 (v!2770 (underlying!326 thiss!992))))) (not (= (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!95453 () Bool)

(assert (=> b!95453 (= e!62268 e!62265)))

(declare-fun res!48254 () Bool)

(assert (=> b!95453 (=> (not res!48254) (not e!62265))))

(declare-datatypes ((tuple2!2316 0))(
  ( (tuple2!2317 (_1!1169 Bool) (_2!1169 LongMapFixedSize!838)) )
))
(declare-fun lt!47521 () tuple2!2316)

(assert (=> b!95453 (= res!48254 (and (_1!1169 lt!47521) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!47515 () Unit!2865)

(assert (=> b!95453 (= lt!47515 e!62270)))

(declare-fun c!16025 () Bool)

(declare-fun contains!791 (ListLongMap!1507 (_ BitVec 64)) Bool)

(assert (=> b!95453 (= c!16025 (contains!791 lt!47518 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun update!144 (LongMapFixedSize!838 (_ BitVec 64) V!3137) tuple2!2316)

(declare-fun get!1275 (ValueCell!965 V!3137) V!3137)

(declare-fun dynLambda!367 (Int (_ BitVec 64)) V!3137)

(assert (=> b!95453 (= lt!47521 (update!144 newMap!16 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!62263 () Bool)

(assert (=> b!95454 (= e!62262 (and tp!9477 tp_is_empty!2617 (array_inv!1249 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (array_inv!1250 (_values!2439 (v!2770 (underlying!326 thiss!992)))) e!62263))))

(declare-fun b!95455 () Bool)

(declare-fun res!48252 () Bool)

(assert (=> b!95455 (=> (not res!48252) (not e!62265))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!95455 (= res!48252 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95456 () Bool)

(declare-fun res!48257 () Bool)

(assert (=> b!95456 (=> (not res!48257) (not e!62275))))

(assert (=> b!95456 (= res!48257 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6540 newMap!16)) (_size!468 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95457 () Bool)

(declare-fun e!62271 () Bool)

(assert (=> b!95457 (= e!62271 tp_is_empty!2617)))

(declare-fun b!95458 () Bool)

(declare-fun res!48255 () Bool)

(assert (=> b!95458 (=> (not res!48255) (not e!62275))))

(declare-fun valid!386 (LongMapFixedSize!838) Bool)

(assert (=> b!95458 (= res!48255 (valid!386 newMap!16))))

(declare-fun b!95449 () Bool)

(assert (=> b!95449 (= e!62263 (and e!62271 mapRes!3696))))

(declare-fun condMapEmpty!3696 () Bool)

(declare-fun mapDefault!3696 () ValueCell!965)

(assert (=> b!95449 (= condMapEmpty!3696 (= (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3696)))))

(declare-fun res!48256 () Bool)

(assert (=> start!11500 (=> (not res!48256) (not e!62275))))

(declare-fun valid!387 (LongMap!630) Bool)

(assert (=> start!11500 (= res!48256 (valid!387 thiss!992))))

(assert (=> start!11500 e!62275))

(assert (=> start!11500 e!62269))

(assert (=> start!11500 true))

(assert (=> start!11500 e!62273))

(declare-fun b!95459 () Bool)

(declare-fun Unit!2868 () Unit!2865)

(assert (=> b!95459 (= e!62270 Unit!2868)))

(declare-fun lt!47520 () Unit!2865)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!92 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2865)

(assert (=> b!95459 (= lt!47520 (lemmaListMapContainsThenArrayContainsFrom!92 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4191 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!95459 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!47516 () Unit!2865)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4191 (_ BitVec 32) (_ BitVec 32)) Unit!2865)

(assert (=> b!95459 (= lt!47516 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1581 0))(
  ( (Nil!1578) (Cons!1577 (h!2170 (_ BitVec 64)) (t!5494 List!1581)) )
))
(declare-fun arrayNoDuplicates!0 (array!4191 (_ BitVec 32) List!1581) Bool)

(assert (=> b!95459 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) from!355 Nil!1578)))

(declare-fun lt!47517 () Unit!2865)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4191 (_ BitVec 32) (_ BitVec 64) List!1581) Unit!2865)

(assert (=> b!95459 (= lt!47517 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578)))))

(assert (=> b!95459 false))

(declare-fun mapIsEmpty!3696 () Bool)

(assert (=> mapIsEmpty!3696 mapRes!3696))

(declare-fun mapNonEmpty!3696 () Bool)

(declare-fun tp!9479 () Bool)

(assert (=> mapNonEmpty!3696 (= mapRes!3695 (and tp!9479 e!62266))))

(declare-fun mapKey!3695 () (_ BitVec 32))

(declare-fun mapValue!3696 () ValueCell!965)

(declare-fun mapRest!3695 () (Array (_ BitVec 32) ValueCell!965))

(assert (=> mapNonEmpty!3696 (= (arr!1991 (_values!2439 newMap!16)) (store mapRest!3695 mapKey!3695 mapValue!3696))))

(declare-fun b!95460 () Bool)

(assert (=> b!95460 (= e!62272 tp_is_empty!2617)))

(assert (= (and start!11500 res!48256) b!95450))

(assert (= (and b!95450 res!48258) b!95458))

(assert (= (and b!95458 res!48255) b!95456))

(assert (= (and b!95456 res!48257) b!95444))

(assert (= (and b!95444 res!48253) b!95453))

(assert (= (and b!95453 c!16025) b!95459))

(assert (= (and b!95453 (not c!16025)) b!95451))

(assert (= (and b!95453 res!48254) b!95455))

(assert (= (and b!95455 res!48252) b!95452))

(assert (= (and b!95449 condMapEmpty!3696) mapIsEmpty!3696))

(assert (= (and b!95449 (not condMapEmpty!3696)) mapNonEmpty!3695))

(get-info :version)

(assert (= (and mapNonEmpty!3695 ((_ is ValueCellFull!965) mapValue!3695)) b!95445))

(assert (= (and b!95449 ((_ is ValueCellFull!965) mapDefault!3696)) b!95457))

(assert (= b!95454 b!95449))

(assert (= b!95448 b!95454))

(assert (= b!95446 b!95448))

(assert (= start!11500 b!95446))

(assert (= (and b!95442 condMapEmpty!3695) mapIsEmpty!3695))

(assert (= (and b!95442 (not condMapEmpty!3695)) mapNonEmpty!3696))

(assert (= (and mapNonEmpty!3696 ((_ is ValueCellFull!965) mapValue!3696)) b!95443))

(assert (= (and b!95442 ((_ is ValueCellFull!965) mapDefault!3695)) b!95460))

(assert (= b!95447 b!95442))

(assert (= start!11500 b!95447))

(declare-fun b_lambda!4221 () Bool)

(assert (=> (not b_lambda!4221) (not b!95453)))

(declare-fun t!5490 () Bool)

(declare-fun tb!1881 () Bool)

(assert (=> (and b!95454 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) t!5490) tb!1881))

(declare-fun result!3205 () Bool)

(assert (=> tb!1881 (= result!3205 tp_is_empty!2617)))

(assert (=> b!95453 t!5490))

(declare-fun b_and!5829 () Bool)

(assert (= b_and!5825 (and (=> t!5490 result!3205) b_and!5829)))

(declare-fun tb!1883 () Bool)

(declare-fun t!5492 () Bool)

(assert (=> (and b!95447 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) t!5492) tb!1883))

(declare-fun result!3209 () Bool)

(assert (= result!3209 result!3205))

(assert (=> b!95453 t!5492))

(declare-fun b_and!5831 () Bool)

(assert (= b_and!5827 (and (=> t!5492 result!3209) b_and!5831)))

(declare-fun m!103455 () Bool)

(assert (=> b!95455 m!103455))

(declare-fun m!103457 () Bool)

(assert (=> mapNonEmpty!3696 m!103457))

(declare-fun m!103459 () Bool)

(assert (=> b!95444 m!103459))

(declare-fun m!103461 () Bool)

(assert (=> b!95444 m!103461))

(declare-fun m!103463 () Bool)

(assert (=> b!95444 m!103463))

(declare-fun m!103465 () Bool)

(assert (=> mapNonEmpty!3695 m!103465))

(declare-fun m!103467 () Bool)

(assert (=> b!95454 m!103467))

(declare-fun m!103469 () Bool)

(assert (=> b!95454 m!103469))

(declare-fun m!103471 () Bool)

(assert (=> b!95459 m!103471))

(declare-fun m!103473 () Bool)

(assert (=> b!95459 m!103473))

(assert (=> b!95459 m!103459))

(declare-fun m!103475 () Bool)

(assert (=> b!95459 m!103475))

(assert (=> b!95459 m!103459))

(assert (=> b!95459 m!103459))

(declare-fun m!103477 () Bool)

(assert (=> b!95459 m!103477))

(assert (=> b!95459 m!103459))

(declare-fun m!103479 () Bool)

(assert (=> b!95459 m!103479))

(declare-fun m!103481 () Bool)

(assert (=> start!11500 m!103481))

(declare-fun m!103483 () Bool)

(assert (=> b!95458 m!103483))

(assert (=> b!95453 m!103459))

(declare-fun m!103485 () Bool)

(assert (=> b!95453 m!103485))

(declare-fun m!103487 () Bool)

(assert (=> b!95453 m!103487))

(declare-fun m!103489 () Bool)

(assert (=> b!95453 m!103489))

(declare-fun m!103491 () Bool)

(assert (=> b!95453 m!103491))

(assert (=> b!95453 m!103459))

(assert (=> b!95453 m!103489))

(assert (=> b!95453 m!103459))

(assert (=> b!95453 m!103491))

(declare-fun m!103493 () Bool)

(assert (=> b!95453 m!103493))

(assert (=> b!95453 m!103487))

(declare-fun m!103495 () Bool)

(assert (=> b!95447 m!103495))

(declare-fun m!103497 () Bool)

(assert (=> b!95447 m!103497))

(check-sat (not b_next!2403) (not mapNonEmpty!3695) (not b!95455) (not b!95444) tp_is_empty!2617 (not b!95454) (not b!95458) (not start!11500) (not b!95453) (not mapNonEmpty!3696) b_and!5831 b_and!5829 (not b_next!2401) (not b!95459) (not b!95447) (not b_lambda!4221))
(check-sat b_and!5829 b_and!5831 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun b_lambda!4227 () Bool)

(assert (= b_lambda!4221 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4227)))

(check-sat (not b_next!2403) (not mapNonEmpty!3695) (not b_lambda!4227) (not b!95455) (not b!95444) tp_is_empty!2617 (not b!95454) (not b!95458) (not start!11500) (not b!95453) (not mapNonEmpty!3696) b_and!5831 b_and!5829 (not b_next!2401) (not b!95459) (not b!95447))
(check-sat b_and!5829 b_and!5831 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25193 () Bool)

(assert (=> d!25193 (= (array_inv!1249 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvsge (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!95454 d!25193))

(declare-fun d!25195 () Bool)

(assert (=> d!25195 (= (array_inv!1250 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvsge (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!95454 d!25195))

(declare-fun d!25197 () Bool)

(assert (=> d!25197 (not (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47566 () Unit!2865)

(declare-fun choose!68 (array!4191 (_ BitVec 32) (_ BitVec 64) List!1581) Unit!2865)

(assert (=> d!25197 (= lt!47566 (choose!68 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578)))))

(assert (=> d!25197 (bvslt (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!25197 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578)) lt!47566)))

(declare-fun bs!3931 () Bool)

(assert (= bs!3931 d!25197))

(assert (=> bs!3931 m!103459))

(assert (=> bs!3931 m!103477))

(assert (=> bs!3931 m!103459))

(declare-fun m!103587 () Bool)

(assert (=> bs!3931 m!103587))

(assert (=> b!95459 d!25197))

(declare-fun d!25199 () Bool)

(assert (=> d!25199 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) from!355 Nil!1578)))

(declare-fun lt!47569 () Unit!2865)

(declare-fun choose!39 (array!4191 (_ BitVec 32) (_ BitVec 32)) Unit!2865)

(assert (=> d!25199 (= lt!47569 (choose!39 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!25199 (bvslt (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!25199 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 from!355) lt!47569)))

(declare-fun bs!3932 () Bool)

(assert (= bs!3932 d!25199))

(assert (=> bs!3932 m!103473))

(declare-fun m!103589 () Bool)

(assert (=> bs!3932 m!103589))

(assert (=> b!95459 d!25199))

(declare-fun d!25201 () Bool)

(declare-fun res!48305 () Bool)

(declare-fun e!62378 () Bool)

(assert (=> d!25201 (=> res!48305 e!62378)))

(assert (=> d!25201 (= res!48305 (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25201 (= (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!62378)))

(declare-fun b!95585 () Bool)

(declare-fun e!62379 () Bool)

(assert (=> b!95585 (= e!62378 e!62379)))

(declare-fun res!48306 () Bool)

(assert (=> b!95585 (=> (not res!48306) (not e!62379))))

(assert (=> b!95585 (= res!48306 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!95586 () Bool)

(assert (=> b!95586 (= e!62379 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!25201 (not res!48305)) b!95585))

(assert (= (and b!95585 res!48306) b!95586))

(declare-fun m!103591 () Bool)

(assert (=> d!25201 m!103591))

(assert (=> b!95586 m!103459))

(declare-fun m!103593 () Bool)

(assert (=> b!95586 m!103593))

(assert (=> b!95459 d!25201))

(declare-fun d!25203 () Bool)

(declare-fun e!62382 () Bool)

(assert (=> d!25203 e!62382))

(declare-fun c!16034 () Bool)

(assert (=> d!25203 (= c!16034 (and (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!47572 () Unit!2865)

(declare-fun choose!580 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2865)

(assert (=> d!25203 (= lt!47572 (choose!580 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(assert (=> d!25203 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992))))))

(assert (=> d!25203 (= (lemmaListMapContainsThenArrayContainsFrom!92 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) lt!47572)))

(declare-fun b!95591 () Bool)

(assert (=> b!95591 (= e!62382 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!95592 () Bool)

(assert (=> b!95592 (= e!62382 (ite (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!25203 c!16034) b!95591))

(assert (= (and d!25203 (not c!16034)) b!95592))

(assert (=> d!25203 m!103459))

(declare-fun m!103595 () Bool)

(assert (=> d!25203 m!103595))

(assert (=> d!25203 m!103455))

(assert (=> b!95591 m!103459))

(assert (=> b!95591 m!103477))

(assert (=> b!95459 d!25203))

(declare-fun b!95603 () Bool)

(declare-fun e!62394 () Bool)

(declare-fun contains!792 (List!1581 (_ BitVec 64)) Bool)

(assert (=> b!95603 (= e!62394 (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun call!9602 () Bool)

(declare-fun c!16037 () Bool)

(declare-fun bm!9599 () Bool)

(assert (=> bm!9599 (= call!9602 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)))))

(declare-fun b!95604 () Bool)

(declare-fun e!62391 () Bool)

(assert (=> b!95604 (= e!62391 call!9602)))

(declare-fun b!95605 () Bool)

(declare-fun e!62393 () Bool)

(assert (=> b!95605 (= e!62393 e!62391)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!95605 (= c!16037 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!95606 () Bool)

(assert (=> b!95606 (= e!62391 call!9602)))

(declare-fun d!25205 () Bool)

(declare-fun res!48313 () Bool)

(declare-fun e!62392 () Bool)

(assert (=> d!25205 (=> res!48313 e!62392)))

(assert (=> d!25205 (= res!48313 (bvsge from!355 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25205 (= (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) from!355 Nil!1578) e!62392)))

(declare-fun b!95607 () Bool)

(assert (=> b!95607 (= e!62392 e!62393)))

(declare-fun res!48314 () Bool)

(assert (=> b!95607 (=> (not res!48314) (not e!62393))))

(assert (=> b!95607 (= res!48314 (not e!62394))))

(declare-fun res!48315 () Bool)

(assert (=> b!95607 (=> (not res!48315) (not e!62394))))

(assert (=> b!95607 (= res!48315 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25205 (not res!48313)) b!95607))

(assert (= (and b!95607 res!48315) b!95603))

(assert (= (and b!95607 res!48314) b!95605))

(assert (= (and b!95605 c!16037) b!95606))

(assert (= (and b!95605 (not c!16037)) b!95604))

(assert (= (or b!95606 b!95604) bm!9599))

(assert (=> b!95603 m!103459))

(assert (=> b!95603 m!103459))

(declare-fun m!103597 () Bool)

(assert (=> b!95603 m!103597))

(assert (=> bm!9599 m!103459))

(declare-fun m!103599 () Bool)

(assert (=> bm!9599 m!103599))

(assert (=> b!95605 m!103459))

(assert (=> b!95605 m!103459))

(declare-fun m!103601 () Bool)

(assert (=> b!95605 m!103601))

(assert (=> b!95607 m!103459))

(assert (=> b!95607 m!103459))

(assert (=> b!95607 m!103601))

(assert (=> b!95459 d!25205))

(declare-fun d!25207 () Bool)

(declare-fun e!62399 () Bool)

(assert (=> d!25207 e!62399))

(declare-fun res!48318 () Bool)

(assert (=> d!25207 (=> res!48318 e!62399)))

(declare-fun lt!47582 () Bool)

(assert (=> d!25207 (= res!48318 (not lt!47582))))

(declare-fun lt!47583 () Bool)

(assert (=> d!25207 (= lt!47582 lt!47583)))

(declare-fun lt!47584 () Unit!2865)

(declare-fun e!62400 () Unit!2865)

(assert (=> d!25207 (= lt!47584 e!62400)))

(declare-fun c!16040 () Bool)

(assert (=> d!25207 (= c!16040 lt!47583)))

(declare-fun containsKey!151 (List!1580 (_ BitVec 64)) Bool)

(assert (=> d!25207 (= lt!47583 (containsKey!151 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25207 (= (contains!791 lt!47518 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!47582)))

(declare-fun b!95614 () Bool)

(declare-fun lt!47581 () Unit!2865)

(assert (=> b!95614 (= e!62400 lt!47581)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!100 (List!1580 (_ BitVec 64)) Unit!2865)

(assert (=> b!95614 (= lt!47581 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-datatypes ((Option!153 0))(
  ( (Some!152 (v!2775 V!3137)) (None!151) )
))
(declare-fun isDefined!101 (Option!153) Bool)

(declare-fun getValueByKey!147 (List!1580 (_ BitVec 64)) Option!153)

(assert (=> b!95614 (isDefined!101 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!95615 () Bool)

(declare-fun Unit!2872 () Unit!2865)

(assert (=> b!95615 (= e!62400 Unit!2872)))

(declare-fun b!95616 () Bool)

(assert (=> b!95616 (= e!62399 (isDefined!101 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (= (and d!25207 c!16040) b!95614))

(assert (= (and d!25207 (not c!16040)) b!95615))

(assert (= (and d!25207 (not res!48318)) b!95616))

(assert (=> d!25207 m!103459))

(declare-fun m!103603 () Bool)

(assert (=> d!25207 m!103603))

(assert (=> b!95614 m!103459))

(declare-fun m!103605 () Bool)

(assert (=> b!95614 m!103605))

(assert (=> b!95614 m!103459))

(declare-fun m!103607 () Bool)

(assert (=> b!95614 m!103607))

(assert (=> b!95614 m!103607))

(declare-fun m!103609 () Bool)

(assert (=> b!95614 m!103609))

(assert (=> b!95616 m!103459))

(assert (=> b!95616 m!103607))

(assert (=> b!95616 m!103607))

(assert (=> b!95616 m!103609))

(assert (=> b!95453 d!25207))

(declare-fun bm!9648 () Bool)

(declare-fun call!9655 () ListLongMap!1507)

(declare-fun call!9663 () ListLongMap!1507)

(assert (=> bm!9648 (= call!9655 call!9663)))

(declare-fun b!95701 () Bool)

(declare-fun e!62446 () Unit!2865)

(declare-fun Unit!2873 () Unit!2865)

(assert (=> b!95701 (= e!62446 Unit!2873)))

(declare-fun lt!47660 () Unit!2865)

(declare-fun call!9666 () Unit!2865)

(assert (=> b!95701 (= lt!47660 call!9666)))

(declare-datatypes ((SeekEntryResult!255 0))(
  ( (MissingZero!255 (index!3162 (_ BitVec 32))) (Found!255 (index!3163 (_ BitVec 32))) (Intermediate!255 (undefined!1067 Bool) (index!3164 (_ BitVec 32)) (x!12802 (_ BitVec 32))) (Undefined!255) (MissingVacant!255 (index!3165 (_ BitVec 32))) )
))
(declare-fun lt!47639 () SeekEntryResult!255)

(declare-fun call!9659 () SeekEntryResult!255)

(assert (=> b!95701 (= lt!47639 call!9659)))

(declare-fun c!16077 () Bool)

(assert (=> b!95701 (= c!16077 ((_ is MissingZero!255) lt!47639))))

(declare-fun e!62454 () Bool)

(assert (=> b!95701 e!62454))

(declare-fun lt!47650 () Unit!2865)

(assert (=> b!95701 (= lt!47650 lt!47660)))

(assert (=> b!95701 false))

(declare-fun b!95702 () Bool)

(declare-fun lt!47648 () Unit!2865)

(assert (=> b!95702 (= e!62446 lt!47648)))

(declare-fun call!9664 () Unit!2865)

(assert (=> b!95702 (= lt!47648 call!9664)))

(declare-fun lt!47646 () SeekEntryResult!255)

(assert (=> b!95702 (= lt!47646 call!9659)))

(declare-fun res!48360 () Bool)

(assert (=> b!95702 (= res!48360 ((_ is Found!255) lt!47646))))

(declare-fun e!62458 () Bool)

(assert (=> b!95702 (=> (not res!48360) (not e!62458))))

(assert (=> b!95702 e!62458))

(declare-fun b!95703 () Bool)

(declare-fun e!62459 () tuple2!2316)

(declare-fun e!62451 () tuple2!2316)

(assert (=> b!95703 (= e!62459 e!62451)))

(declare-fun lt!47654 () SeekEntryResult!255)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4191 (_ BitVec 32)) SeekEntryResult!255)

(assert (=> b!95703 (= lt!47654 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun c!16070 () Bool)

(assert (=> b!95703 (= c!16070 ((_ is Undefined!255) lt!47654))))

(declare-fun b!95704 () Bool)

(declare-fun e!62460 () Bool)

(declare-fun e!62457 () Bool)

(assert (=> b!95704 (= e!62460 e!62457)))

(declare-fun c!16078 () Bool)

(declare-fun lt!47642 () tuple2!2316)

(assert (=> b!95704 (= c!16078 (_1!1169 lt!47642))))

(declare-fun b!95705 () Bool)

(declare-fun e!62452 () Bool)

(declare-fun e!62449 () Bool)

(assert (=> b!95705 (= e!62452 e!62449)))

(declare-fun res!48352 () Bool)

(declare-fun call!9660 () Bool)

(assert (=> b!95705 (= res!48352 call!9660)))

(assert (=> b!95705 (=> (not res!48352) (not e!62449))))

(declare-fun bm!9649 () Bool)

(declare-fun call!9670 () Bool)

(assert (=> bm!9649 (= call!9670 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!95706 () Bool)

(declare-fun e!62464 () ListLongMap!1507)

(assert (=> b!95706 (= e!62464 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun call!9652 () Bool)

(declare-fun lt!47643 () SeekEntryResult!255)

(declare-fun lt!47662 () SeekEntryResult!255)

(declare-fun c!16073 () Bool)

(declare-fun bm!9650 () Bool)

(declare-fun c!16074 () Bool)

(declare-fun c!16069 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9650 (= call!9652 (inRange!0 (ite c!16070 (ite c!16069 (index!3163 lt!47662) (ite c!16074 (index!3162 lt!47643) (index!3165 lt!47643))) (ite c!16073 (index!3163 lt!47646) (ite c!16077 (index!3162 lt!47639) (index!3165 lt!47639)))) (mask!6540 newMap!16)))))

(declare-fun b!95707 () Bool)

(declare-fun e!62448 () Bool)

(declare-fun call!9672 () Bool)

(assert (=> b!95707 (= e!62448 (not call!9672))))

(declare-fun b!95708 () Bool)

(declare-fun lt!47664 () Unit!2865)

(declare-fun e!62447 () Unit!2865)

(assert (=> b!95708 (= lt!47664 e!62447)))

(declare-fun call!9661 () Bool)

(assert (=> b!95708 (= c!16069 call!9661)))

(assert (=> b!95708 (= e!62451 (tuple2!2317 false newMap!16))))

(declare-fun c!16079 () Bool)

(declare-fun bm!9651 () Bool)

(declare-fun call!9651 () ListLongMap!1507)

(declare-fun c!16071 () Bool)

(declare-fun e!62461 () ListLongMap!1507)

(declare-fun +!127 (ListLongMap!1507 tuple2!2314) ListLongMap!1507)

(assert (=> bm!9651 (= call!9651 (+!127 e!62461 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!16075 () Bool)

(assert (=> bm!9651 (= c!16075 c!16079)))

(declare-fun bm!9652 () Bool)

(declare-fun call!9658 () ListLongMap!1507)

(assert (=> bm!9652 (= call!9658 (map!1237 newMap!16))))

(declare-fun bm!9653 () Bool)

(declare-fun call!9665 () Bool)

(declare-fun call!9654 () Bool)

(assert (=> bm!9653 (= call!9665 call!9654)))

(declare-fun b!95709 () Bool)

(declare-fun e!62450 () Bool)

(assert (=> b!95709 (= e!62450 ((_ is Undefined!255) lt!47639))))

(declare-fun b!95710 () Bool)

(declare-fun res!48359 () Bool)

(declare-fun e!62445 () Bool)

(assert (=> b!95710 (=> (not res!48359) (not e!62445))))

(assert (=> b!95710 (= res!48359 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!47639)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95711 () Bool)

(declare-fun call!9668 () ListLongMap!1507)

(assert (=> b!95711 (= e!62464 call!9668)))

(declare-fun bm!9654 () Bool)

(declare-fun call!9662 () Bool)

(assert (=> bm!9654 (= call!9660 call!9662)))

(declare-fun b!95712 () Bool)

(declare-fun lt!47647 () Unit!2865)

(declare-fun lt!47655 () Unit!2865)

(assert (=> b!95712 (= lt!47647 lt!47655)))

(declare-fun call!9656 () ListLongMap!1507)

(assert (=> b!95712 (contains!791 call!9656 (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))

(declare-fun lt!47652 () array!4193)

(declare-fun lemmaValidKeyInArrayIsInListMap!99 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) Unit!2865)

(assert (=> b!95712 (= lt!47655 (lemmaValidKeyInArrayIsInListMap!99 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95712 (= lt!47652 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))))

(declare-fun lt!47651 () Unit!2865)

(declare-fun lt!47644 () Unit!2865)

(assert (=> b!95712 (= lt!47651 lt!47644)))

(assert (=> b!95712 (= call!9651 call!9668)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2865)

(assert (=> b!95712 (= lt!47644 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47645 () Unit!2865)

(assert (=> b!95712 (= lt!47645 e!62446)))

(assert (=> b!95712 (= c!16073 call!9661)))

(declare-fun e!62456 () tuple2!2316)

(assert (=> b!95712 (= e!62456 (tuple2!2317 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (_size!468 newMap!16) (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (_vacant!468 newMap!16))))))

(declare-fun b!95713 () Bool)

(declare-fun call!9657 () Bool)

(assert (=> b!95713 (= e!62449 (not call!9657))))

(declare-fun bm!9655 () Bool)

(assert (=> bm!9655 (= call!9657 call!9670)))

(declare-fun b!95714 () Bool)

(assert (=> b!95714 (= e!62445 (not call!9672))))

(declare-fun bm!9656 () Bool)

(declare-fun call!9673 () ListLongMap!1507)

(assert (=> bm!9656 (= call!9673 call!9651)))

(declare-fun bm!9657 () Bool)

(assert (=> bm!9657 (= call!9654 call!9652)))

(declare-fun call!9674 () SeekEntryResult!255)

(declare-fun bm!9658 () Bool)

(assert (=> bm!9658 (= call!9674 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!95715 () Bool)

(declare-fun res!48357 () Bool)

(assert (=> b!95715 (= res!48357 call!9662)))

(declare-fun e!62463 () Bool)

(assert (=> b!95715 (=> (not res!48357) (not e!62463))))

(declare-fun bm!9659 () Bool)

(declare-fun call!9669 () ListLongMap!1507)

(assert (=> bm!9659 (= call!9669 (map!1237 (_2!1169 lt!47642)))))

(declare-fun b!95716 () Bool)

(assert (=> b!95716 (= e!62457 (= call!9669 call!9658))))

(declare-fun b!95717 () Bool)

(declare-fun res!48350 () Bool)

(declare-fun e!62455 () Bool)

(assert (=> b!95717 (=> (not res!48350) (not e!62455))))

(assert (=> b!95717 (= res!48350 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!47643)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!9671 () tuple2!2316)

(declare-fun bm!9660 () Bool)

(declare-fun c!16076 () Bool)

(declare-fun updateHelperNewKey!40 (LongMapFixedSize!838 (_ BitVec 64) V!3137 (_ BitVec 32)) tuple2!2316)

(assert (=> bm!9660 (= call!9671 (updateHelperNewKey!40 newMap!16 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(declare-fun b!95718 () Bool)

(declare-fun e!62465 () Bool)

(assert (=> b!95718 (= e!62457 e!62465)))

(declare-fun res!48349 () Bool)

(assert (=> b!95718 (= res!48349 (contains!791 call!9669 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!95718 (=> (not res!48349) (not e!62465))))

(declare-fun b!95719 () Bool)

(declare-fun lt!47641 () Unit!2865)

(declare-fun lt!47640 () Unit!2865)

(assert (=> b!95719 (= lt!47641 lt!47640)))

(declare-fun call!9653 () ListLongMap!1507)

(assert (=> b!95719 (= call!9673 call!9653)))

(declare-fun lt!47657 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2865)

(assert (=> b!95719 (= lt!47640 (lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95719 (= lt!47657 (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!62462 () tuple2!2316)

(assert (=> b!95719 (= e!62462 (tuple2!2317 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6540 newMap!16) (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!468 newMap!16) (_keys!4141 newMap!16) (_values!2439 newMap!16) (_vacant!468 newMap!16))))))

(declare-fun b!95720 () Bool)

(assert (=> b!95720 (= e!62463 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47662)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun bm!9661 () Bool)

(assert (=> bm!9661 (= call!9672 call!9670)))

(declare-fun b!95721 () Bool)

(declare-fun res!48347 () Bool)

(assert (=> b!95721 (=> (not res!48347) (not e!62445))))

(assert (=> b!95721 (= res!48347 call!9665)))

(assert (=> b!95721 (= e!62454 e!62445)))

(declare-fun bm!9662 () Bool)

(assert (=> bm!9662 (= call!9653 call!9656)))

(declare-fun bm!9663 () Bool)

(declare-fun call!9667 () SeekEntryResult!255)

(assert (=> bm!9663 (= call!9667 call!9674)))

(declare-fun bm!9664 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2865)

(assert (=> bm!9664 (= call!9666 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(declare-fun b!95722 () Bool)

(declare-fun res!48348 () Bool)

(assert (=> b!95722 (= res!48348 call!9654)))

(assert (=> b!95722 (=> (not res!48348) (not e!62458))))

(declare-fun b!95723 () Bool)

(assert (=> b!95723 (= e!62461 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95724 () Bool)

(declare-fun res!48354 () Bool)

(assert (=> b!95724 (= res!48354 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!47639)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95724 (=> (not res!48354) (not e!62448))))

(declare-fun b!95725 () Bool)

(declare-fun res!48351 () Bool)

(assert (=> b!95725 (=> (not res!48351) (not e!62455))))

(assert (=> b!95725 (= res!48351 call!9660)))

(declare-fun e!62466 () Bool)

(assert (=> b!95725 (= e!62466 e!62455)))

(declare-fun b!95726 () Bool)

(declare-fun c!16082 () Bool)

(assert (=> b!95726 (= c!16082 ((_ is MissingVacant!255) lt!47643))))

(assert (=> b!95726 (= e!62466 e!62452)))

(declare-fun lt!47661 () (_ BitVec 32))

(declare-fun bm!9665 () Bool)

(assert (=> bm!9665 (= call!9656 (getCurrentListMap!451 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95727 () Bool)

(declare-fun lt!47656 () tuple2!2316)

(assert (=> b!95727 (= lt!47656 call!9671)))

(assert (=> b!95727 (= e!62456 (tuple2!2317 (_1!1169 lt!47656) (_2!1169 lt!47656)))))

(declare-fun b!95728 () Bool)

(assert (=> b!95728 (= e!62455 (not call!9657))))

(declare-fun bm!9666 () Bool)

(assert (=> bm!9666 (= call!9659 call!9674)))

(declare-fun b!95729 () Bool)

(declare-fun lt!47665 () Unit!2865)

(assert (=> b!95729 (= e!62447 lt!47665)))

(assert (=> b!95729 (= lt!47665 call!9666)))

(assert (=> b!95729 (= lt!47643 call!9667)))

(assert (=> b!95729 (= c!16074 ((_ is MissingZero!255) lt!47643))))

(assert (=> b!95729 e!62466))

(declare-fun bm!9667 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2865)

(assert (=> bm!9667 (= call!9664 (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(declare-fun bm!9668 () Bool)

(assert (=> bm!9668 (= call!9668 call!9663)))

(declare-fun b!95730 () Bool)

(assert (=> b!95730 (= c!16076 ((_ is MissingVacant!255) lt!47654))))

(declare-fun e!62453 () tuple2!2316)

(assert (=> b!95730 (= e!62451 e!62453)))

(declare-fun b!95731 () Bool)

(assert (=> b!95731 (= e!62458 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47646)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!95732 () Bool)

(assert (=> b!95732 (= e!62450 e!62448)))

(declare-fun res!48353 () Bool)

(assert (=> b!95732 (= res!48353 call!9665)))

(assert (=> b!95732 (=> (not res!48353) (not e!62448))))

(declare-fun bm!9669 () Bool)

(declare-fun c!16080 () Bool)

(assert (=> bm!9669 (= c!16080 c!16070)))

(assert (=> bm!9669 (= call!9661 (contains!791 e!62464 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun d!25209 () Bool)

(assert (=> d!25209 e!62460))

(declare-fun res!48358 () Bool)

(assert (=> d!25209 (=> (not res!48358) (not e!62460))))

(assert (=> d!25209 (= res!48358 (valid!386 (_2!1169 lt!47642)))))

(assert (=> d!25209 (= lt!47642 e!62459)))

(assert (=> d!25209 (= c!16079 (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvneg (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25209 (valid!386 newMap!16)))

(assert (=> d!25209 (= (update!144 newMap!16 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!47642)))

(declare-fun b!95733 () Bool)

(declare-fun c!16081 () Bool)

(assert (=> b!95733 (= c!16081 ((_ is MissingVacant!255) lt!47639))))

(assert (=> b!95733 (= e!62454 e!62450)))

(declare-fun b!95734 () Bool)

(declare-fun lt!47659 () tuple2!2316)

(assert (=> b!95734 (= e!62453 (tuple2!2317 (_1!1169 lt!47659) (_2!1169 lt!47659)))))

(assert (=> b!95734 (= lt!47659 call!9671)))

(declare-fun b!95735 () Bool)

(declare-fun lt!47649 () Unit!2865)

(declare-fun lt!47663 () Unit!2865)

(assert (=> b!95735 (= lt!47649 lt!47663)))

(assert (=> b!95735 (= call!9673 call!9653)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!40 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2865)

(assert (=> b!95735 (= lt!47663 (lemmaChangeZeroKeyThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47661 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95735 (= lt!47661 (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!95735 (= e!62462 (tuple2!2317 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6540 newMap!16) (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (_size!468 newMap!16) (_keys!4141 newMap!16) (_values!2439 newMap!16) (_vacant!468 newMap!16))))))

(declare-fun b!95736 () Bool)

(assert (=> b!95736 (= e!62453 e!62456)))

(declare-fun c!16072 () Bool)

(assert (=> b!95736 (= c!16072 ((_ is MissingZero!255) lt!47654))))

(declare-fun b!95737 () Bool)

(declare-fun Unit!2874 () Unit!2865)

(assert (=> b!95737 (= e!62447 Unit!2874)))

(declare-fun lt!47658 () Unit!2865)

(assert (=> b!95737 (= lt!47658 call!9664)))

(assert (=> b!95737 (= lt!47662 call!9667)))

(declare-fun res!48356 () Bool)

(assert (=> b!95737 (= res!48356 ((_ is Found!255) lt!47662))))

(assert (=> b!95737 (=> (not res!48356) (not e!62463))))

(assert (=> b!95737 e!62463))

(declare-fun lt!47653 () Unit!2865)

(assert (=> b!95737 (= lt!47653 lt!47658)))

(assert (=> b!95737 false))

(declare-fun b!95738 () Bool)

(assert (=> b!95738 (= e!62465 (= call!9669 (+!127 call!9658 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95739 () Bool)

(declare-fun res!48355 () Bool)

(assert (=> b!95739 (= res!48355 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!47643)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95739 (=> (not res!48355) (not e!62449))))

(declare-fun b!95740 () Bool)

(assert (=> b!95740 (= e!62461 call!9655)))

(declare-fun b!95741 () Bool)

(assert (=> b!95741 (= e!62459 e!62462)))

(assert (=> b!95741 (= c!16071 (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9670 () Bool)

(assert (=> bm!9670 (= call!9663 (getCurrentListMap!451 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95742 () Bool)

(assert (=> b!95742 (= e!62452 ((_ is Undefined!255) lt!47643))))

(declare-fun bm!9671 () Bool)

(assert (=> bm!9671 (= call!9662 call!9652)))

(assert (= (and d!25209 c!16079) b!95741))

(assert (= (and d!25209 (not c!16079)) b!95703))

(assert (= (and b!95741 c!16071) b!95735))

(assert (= (and b!95741 (not c!16071)) b!95719))

(assert (= (or b!95735 b!95719) bm!9648))

(assert (= (or b!95735 b!95719) bm!9662))

(assert (= (or b!95735 b!95719) bm!9656))

(assert (= (and b!95703 c!16070) b!95708))

(assert (= (and b!95703 (not c!16070)) b!95730))

(assert (= (and b!95708 c!16069) b!95737))

(assert (= (and b!95708 (not c!16069)) b!95729))

(assert (= (and b!95737 res!48356) b!95715))

(assert (= (and b!95715 res!48357) b!95720))

(assert (= (and b!95729 c!16074) b!95725))

(assert (= (and b!95729 (not c!16074)) b!95726))

(assert (= (and b!95725 res!48351) b!95717))

(assert (= (and b!95717 res!48350) b!95728))

(assert (= (and b!95726 c!16082) b!95705))

(assert (= (and b!95726 (not c!16082)) b!95742))

(assert (= (and b!95705 res!48352) b!95739))

(assert (= (and b!95739 res!48355) b!95713))

(assert (= (or b!95725 b!95705) bm!9654))

(assert (= (or b!95728 b!95713) bm!9655))

(assert (= (or b!95715 bm!9654) bm!9671))

(assert (= (or b!95737 b!95729) bm!9663))

(assert (= (and b!95730 c!16076) b!95734))

(assert (= (and b!95730 (not c!16076)) b!95736))

(assert (= (and b!95736 c!16072) b!95727))

(assert (= (and b!95736 (not c!16072)) b!95712))

(assert (= (and b!95712 c!16073) b!95702))

(assert (= (and b!95712 (not c!16073)) b!95701))

(assert (= (and b!95702 res!48360) b!95722))

(assert (= (and b!95722 res!48348) b!95731))

(assert (= (and b!95701 c!16077) b!95721))

(assert (= (and b!95701 (not c!16077)) b!95733))

(assert (= (and b!95721 res!48347) b!95710))

(assert (= (and b!95710 res!48359) b!95714))

(assert (= (and b!95733 c!16081) b!95732))

(assert (= (and b!95733 (not c!16081)) b!95709))

(assert (= (and b!95732 res!48353) b!95724))

(assert (= (and b!95724 res!48354) b!95707))

(assert (= (or b!95721 b!95732) bm!9653))

(assert (= (or b!95714 b!95707) bm!9661))

(assert (= (or b!95722 bm!9653) bm!9657))

(assert (= (or b!95702 b!95701) bm!9666))

(assert (= (or b!95734 b!95727) bm!9660))

(assert (= (or b!95729 b!95701) bm!9664))

(assert (= (or b!95737 b!95702) bm!9667))

(assert (= (or bm!9655 bm!9661) bm!9649))

(assert (= (or bm!9663 bm!9666) bm!9658))

(assert (= (or b!95708 b!95712) bm!9668))

(assert (= (or bm!9671 bm!9657) bm!9650))

(assert (= (or b!95708 b!95712) bm!9669))

(assert (= (and bm!9669 c!16080) b!95711))

(assert (= (and bm!9669 (not c!16080)) b!95706))

(assert (= (or bm!9648 bm!9668) bm!9670))

(assert (= (or bm!9662 b!95712) bm!9665))

(assert (= (or bm!9656 b!95712) bm!9651))

(assert (= (and bm!9651 c!16075) b!95740))

(assert (= (and bm!9651 (not c!16075)) b!95723))

(assert (= (and d!25209 res!48358) b!95704))

(assert (= (and b!95704 c!16078) b!95718))

(assert (= (and b!95704 (not c!16078)) b!95716))

(assert (= (and b!95718 res!48349) b!95738))

(assert (= (or b!95718 b!95738 b!95716) bm!9659))

(assert (= (or b!95738 b!95716) bm!9652))

(declare-fun m!103611 () Bool)

(assert (=> bm!9651 m!103611))

(assert (=> b!95719 m!103491))

(declare-fun m!103613 () Bool)

(assert (=> b!95719 m!103613))

(declare-fun m!103615 () Bool)

(assert (=> b!95724 m!103615))

(declare-fun m!103617 () Bool)

(assert (=> b!95738 m!103617))

(declare-fun m!103619 () Bool)

(assert (=> b!95706 m!103619))

(assert (=> bm!9649 m!103459))

(declare-fun m!103621 () Bool)

(assert (=> bm!9649 m!103621))

(assert (=> bm!9652 m!103461))

(declare-fun m!103623 () Bool)

(assert (=> bm!9650 m!103623))

(declare-fun m!103625 () Bool)

(assert (=> b!95731 m!103625))

(assert (=> b!95712 m!103459))

(assert (=> b!95712 m!103491))

(declare-fun m!103627 () Bool)

(assert (=> b!95712 m!103627))

(declare-fun m!103629 () Bool)

(assert (=> b!95712 m!103629))

(declare-fun m!103631 () Bool)

(assert (=> b!95712 m!103631))

(declare-fun m!103633 () Bool)

(assert (=> b!95712 m!103633))

(declare-fun m!103635 () Bool)

(assert (=> b!95712 m!103635))

(assert (=> b!95712 m!103633))

(assert (=> b!95723 m!103619))

(assert (=> bm!9658 m!103459))

(declare-fun m!103637 () Bool)

(assert (=> bm!9658 m!103637))

(assert (=> bm!9667 m!103459))

(declare-fun m!103639 () Bool)

(assert (=> bm!9667 m!103639))

(declare-fun m!103641 () Bool)

(assert (=> b!95717 m!103641))

(assert (=> b!95703 m!103459))

(assert (=> b!95703 m!103637))

(declare-fun m!103643 () Bool)

(assert (=> b!95710 m!103643))

(assert (=> bm!9664 m!103459))

(declare-fun m!103645 () Bool)

(assert (=> bm!9664 m!103645))

(declare-fun m!103647 () Bool)

(assert (=> bm!9665 m!103647))

(declare-fun m!103649 () Bool)

(assert (=> bm!9659 m!103649))

(declare-fun m!103651 () Bool)

(assert (=> b!95720 m!103651))

(assert (=> b!95735 m!103491))

(declare-fun m!103653 () Bool)

(assert (=> b!95735 m!103653))

(assert (=> bm!9660 m!103459))

(assert (=> bm!9660 m!103491))

(declare-fun m!103655 () Bool)

(assert (=> bm!9660 m!103655))

(declare-fun m!103657 () Bool)

(assert (=> d!25209 m!103657))

(assert (=> d!25209 m!103483))

(assert (=> b!95718 m!103459))

(declare-fun m!103659 () Bool)

(assert (=> b!95718 m!103659))

(assert (=> bm!9670 m!103629))

(declare-fun m!103661 () Bool)

(assert (=> bm!9670 m!103661))

(assert (=> bm!9669 m!103459))

(declare-fun m!103663 () Bool)

(assert (=> bm!9669 m!103663))

(declare-fun m!103665 () Bool)

(assert (=> b!95739 m!103665))

(assert (=> b!95453 d!25209))

(declare-fun d!25211 () Bool)

(declare-fun c!16085 () Bool)

(assert (=> d!25211 (= c!16085 ((_ is ValueCellFull!965) (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun e!62469 () V!3137)

(assert (=> d!25211 (= (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62469)))

(declare-fun b!95747 () Bool)

(declare-fun get!1276 (ValueCell!965 V!3137) V!3137)

(assert (=> b!95747 (= e!62469 (get!1276 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95748 () Bool)

(declare-fun get!1277 (ValueCell!965 V!3137) V!3137)

(assert (=> b!95748 (= e!62469 (get!1277 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25211 c!16085) b!95747))

(assert (= (and d!25211 (not c!16085)) b!95748))

(assert (=> b!95747 m!103487))

(assert (=> b!95747 m!103489))

(declare-fun m!103667 () Bool)

(assert (=> b!95747 m!103667))

(assert (=> b!95748 m!103487))

(assert (=> b!95748 m!103489))

(declare-fun m!103669 () Bool)

(assert (=> b!95748 m!103669))

(assert (=> b!95453 d!25211))

(declare-fun d!25213 () Bool)

(assert (=> d!25213 (= (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992)))) (and (or (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000001111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000011111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000001111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000011111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000001111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000011111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000001111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000011111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000001111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000011111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000001111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000011111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000001111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000011111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000001111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000011111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000111111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00001111111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00011111111111111111111111111111) (= (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!95455 d!25213))

(declare-fun d!25215 () Bool)

(assert (=> d!25215 (= (array_inv!1249 (_keys!4141 newMap!16)) (bvsge (size!2240 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95447 d!25215))

(declare-fun d!25217 () Bool)

(assert (=> d!25217 (= (array_inv!1250 (_values!2439 newMap!16)) (bvsge (size!2241 (_values!2439 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95447 d!25217))

(declare-fun d!25219 () Bool)

(assert (=> d!25219 (= (valid!387 thiss!992) (valid!386 (v!2770 (underlying!326 thiss!992))))))

(declare-fun bs!3933 () Bool)

(assert (= bs!3933 d!25219))

(declare-fun m!103671 () Bool)

(assert (=> bs!3933 m!103671))

(assert (=> start!11500 d!25219))

(declare-fun d!25221 () Bool)

(assert (=> d!25221 (= (map!1237 newMap!16) (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun bs!3934 () Bool)

(assert (= bs!3934 d!25221))

(assert (=> bs!3934 m!103619))

(assert (=> b!95444 d!25221))

(declare-fun bm!9686 () Bool)

(declare-fun call!9690 () ListLongMap!1507)

(declare-fun getCurrentListMapNoExtraKeys!91 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) ListLongMap!1507)

(assert (=> bm!9686 (= call!9690 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95791 () Bool)

(declare-fun e!62501 () Unit!2865)

(declare-fun Unit!2875 () Unit!2865)

(assert (=> b!95791 (= e!62501 Unit!2875)))

(declare-fun bm!9687 () Bool)

(declare-fun call!9693 () ListLongMap!1507)

(assert (=> bm!9687 (= call!9693 call!9690)))

(declare-fun b!95792 () Bool)

(declare-fun lt!47728 () Unit!2865)

(assert (=> b!95792 (= e!62501 lt!47728)))

(declare-fun lt!47722 () ListLongMap!1507)

(assert (=> b!95792 (= lt!47722 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun lt!47729 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47729 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47716 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47716 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47713 () Unit!2865)

(declare-fun addStillContains!67 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> b!95792 (= lt!47713 (addStillContains!67 lt!47722 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47716))))

(assert (=> b!95792 (contains!791 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47716)))

(declare-fun lt!47726 () Unit!2865)

(assert (=> b!95792 (= lt!47726 lt!47713)))

(declare-fun lt!47725 () ListLongMap!1507)

(assert (=> b!95792 (= lt!47725 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun lt!47710 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47710 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47711 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47711 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47727 () Unit!2865)

(declare-fun addApplyDifferent!67 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> b!95792 (= lt!47727 (addApplyDifferent!67 lt!47725 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47711))))

(declare-fun apply!91 (ListLongMap!1507 (_ BitVec 64)) V!3137)

(assert (=> b!95792 (= (apply!91 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47711) (apply!91 lt!47725 lt!47711))))

(declare-fun lt!47712 () Unit!2865)

(assert (=> b!95792 (= lt!47712 lt!47727)))

(declare-fun lt!47730 () ListLongMap!1507)

(assert (=> b!95792 (= lt!47730 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun lt!47724 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47724 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47715 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47715 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47719 () Unit!2865)

(assert (=> b!95792 (= lt!47719 (addApplyDifferent!67 lt!47730 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47715))))

(assert (=> b!95792 (= (apply!91 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47715) (apply!91 lt!47730 lt!47715))))

(declare-fun lt!47720 () Unit!2865)

(assert (=> b!95792 (= lt!47720 lt!47719)))

(declare-fun lt!47721 () ListLongMap!1507)

(assert (=> b!95792 (= lt!47721 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun lt!47718 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47718 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47723 () (_ BitVec 64))

(assert (=> b!95792 (= lt!47723 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!95792 (= lt!47728 (addApplyDifferent!67 lt!47721 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47723))))

(assert (=> b!95792 (= (apply!91 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47723) (apply!91 lt!47721 lt!47723))))

(declare-fun b!95793 () Bool)

(declare-fun e!62500 () ListLongMap!1507)

(declare-fun call!9692 () ListLongMap!1507)

(assert (=> b!95793 (= e!62500 (+!127 call!9692 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!95795 () Bool)

(declare-fun e!62502 () Bool)

(declare-fun call!9694 () Bool)

(assert (=> b!95795 (= e!62502 (not call!9694))))

(declare-fun b!95796 () Bool)

(declare-fun e!62498 () Bool)

(declare-fun e!62499 () Bool)

(assert (=> b!95796 (= e!62498 e!62499)))

(declare-fun c!16098 () Bool)

(assert (=> b!95796 (= c!16098 (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!47731 () ListLongMap!1507)

(declare-fun b!95797 () Bool)

(declare-fun e!62508 () Bool)

(assert (=> b!95797 (= e!62508 (= (apply!91 lt!47731 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95797 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> b!95797 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!95798 () Bool)

(declare-fun e!62504 () ListLongMap!1507)

(assert (=> b!95798 (= e!62500 e!62504)))

(declare-fun c!16102 () Bool)

(assert (=> b!95798 (= c!16102 (and (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95799 () Bool)

(declare-fun call!9691 () Bool)

(assert (=> b!95799 (= e!62499 (not call!9691))))

(declare-fun b!95800 () Bool)

(declare-fun e!62505 () Bool)

(assert (=> b!95800 (= e!62502 e!62505)))

(declare-fun res!48380 () Bool)

(assert (=> b!95800 (= res!48380 call!9694)))

(assert (=> b!95800 (=> (not res!48380) (not e!62505))))

(declare-fun b!95801 () Bool)

(declare-fun res!48384 () Bool)

(assert (=> b!95801 (=> (not res!48384) (not e!62498))))

(declare-fun e!62496 () Bool)

(assert (=> b!95801 (= res!48384 e!62496)))

(declare-fun res!48385 () Bool)

(assert (=> b!95801 (=> res!48385 e!62496)))

(declare-fun e!62503 () Bool)

(assert (=> b!95801 (= res!48385 (not e!62503))))

(declare-fun res!48382 () Bool)

(assert (=> b!95801 (=> (not res!48382) (not e!62503))))

(assert (=> b!95801 (= res!48382 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun bm!9688 () Bool)

(assert (=> bm!9688 (= call!9691 (contains!791 lt!47731 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95802 () Bool)

(declare-fun call!9689 () ListLongMap!1507)

(assert (=> b!95802 (= e!62504 call!9689)))

(declare-fun b!95803 () Bool)

(assert (=> b!95803 (= e!62503 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95804 () Bool)

(declare-fun e!62497 () Bool)

(assert (=> b!95804 (= e!62499 e!62497)))

(declare-fun res!48387 () Bool)

(assert (=> b!95804 (= res!48387 call!9691)))

(assert (=> b!95804 (=> (not res!48387) (not e!62497))))

(declare-fun b!95805 () Bool)

(assert (=> b!95805 (= e!62496 e!62508)))

(declare-fun res!48383 () Bool)

(assert (=> b!95805 (=> (not res!48383) (not e!62508))))

(assert (=> b!95805 (= res!48383 (contains!791 lt!47731 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95805 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!95806 () Bool)

(declare-fun e!62507 () ListLongMap!1507)

(assert (=> b!95806 (= e!62507 call!9689)))

(declare-fun b!95807 () Bool)

(declare-fun e!62506 () Bool)

(assert (=> b!95807 (= e!62506 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95808 () Bool)

(declare-fun res!48386 () Bool)

(assert (=> b!95808 (=> (not res!48386) (not e!62498))))

(assert (=> b!95808 (= res!48386 e!62502)))

(declare-fun c!16101 () Bool)

(assert (=> b!95808 (= c!16101 (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95809 () Bool)

(declare-fun c!16103 () Bool)

(assert (=> b!95809 (= c!16103 (and (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95809 (= e!62504 e!62507)))

(declare-fun bm!9689 () Bool)

(assert (=> bm!9689 (= call!9689 call!9692)))

(declare-fun b!95810 () Bool)

(assert (=> b!95810 (= e!62497 (= (apply!91 lt!47731 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95811 () Bool)

(declare-fun call!9695 () ListLongMap!1507)

(assert (=> b!95811 (= e!62507 call!9695)))

(declare-fun b!95794 () Bool)

(assert (=> b!95794 (= e!62505 (= (apply!91 lt!47731 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun d!25223 () Bool)

(assert (=> d!25223 e!62498))

(declare-fun res!48379 () Bool)

(assert (=> d!25223 (=> (not res!48379) (not e!62498))))

(assert (=> d!25223 (= res!48379 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun lt!47717 () ListLongMap!1507)

(assert (=> d!25223 (= lt!47731 lt!47717)))

(declare-fun lt!47714 () Unit!2865)

(assert (=> d!25223 (= lt!47714 e!62501)))

(declare-fun c!16100 () Bool)

(assert (=> d!25223 (= c!16100 e!62506)))

(declare-fun res!48381 () Bool)

(assert (=> d!25223 (=> (not res!48381) (not e!62506))))

(assert (=> d!25223 (= res!48381 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25223 (= lt!47717 e!62500)))

(declare-fun c!16099 () Bool)

(assert (=> d!25223 (= c!16099 (and (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25223 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992))))))

(assert (=> d!25223 (= (getCurrentListMap!451 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) lt!47731)))

(declare-fun bm!9690 () Bool)

(assert (=> bm!9690 (= call!9692 (+!127 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9691 () Bool)

(assert (=> bm!9691 (= call!9694 (contains!791 lt!47731 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9692 () Bool)

(assert (=> bm!9692 (= call!9695 call!9693)))

(assert (= (and d!25223 c!16099) b!95793))

(assert (= (and d!25223 (not c!16099)) b!95798))

(assert (= (and b!95798 c!16102) b!95802))

(assert (= (and b!95798 (not c!16102)) b!95809))

(assert (= (and b!95809 c!16103) b!95806))

(assert (= (and b!95809 (not c!16103)) b!95811))

(assert (= (or b!95806 b!95811) bm!9692))

(assert (= (or b!95802 bm!9692) bm!9687))

(assert (= (or b!95802 b!95806) bm!9689))

(assert (= (or b!95793 bm!9687) bm!9686))

(assert (= (or b!95793 bm!9689) bm!9690))

(assert (= (and d!25223 res!48381) b!95807))

(assert (= (and d!25223 c!16100) b!95792))

(assert (= (and d!25223 (not c!16100)) b!95791))

(assert (= (and d!25223 res!48379) b!95801))

(assert (= (and b!95801 res!48382) b!95803))

(assert (= (and b!95801 (not res!48385)) b!95805))

(assert (= (and b!95805 res!48383) b!95797))

(assert (= (and b!95801 res!48384) b!95808))

(assert (= (and b!95808 c!16101) b!95800))

(assert (= (and b!95808 (not c!16101)) b!95795))

(assert (= (and b!95800 res!48380) b!95794))

(assert (= (or b!95800 b!95795) bm!9691))

(assert (= (and b!95808 res!48386) b!95796))

(assert (= (and b!95796 c!16098) b!95804))

(assert (= (and b!95796 (not c!16098)) b!95799))

(assert (= (and b!95804 res!48387) b!95810))

(assert (= (or b!95804 b!95799) bm!9688))

(declare-fun b_lambda!4229 () Bool)

(assert (=> (not b_lambda!4229) (not b!95797)))

(assert (=> b!95797 t!5490))

(declare-fun b_and!5849 () Bool)

(assert (= b_and!5829 (and (=> t!5490 result!3205) b_and!5849)))

(assert (=> b!95797 t!5492))

(declare-fun b_and!5851 () Bool)

(assert (= b_and!5831 (and (=> t!5492 result!3209) b_and!5851)))

(declare-fun m!103673 () Bool)

(assert (=> bm!9688 m!103673))

(declare-fun m!103675 () Bool)

(assert (=> b!95810 m!103675))

(assert (=> b!95805 m!103591))

(assert (=> b!95805 m!103591))

(declare-fun m!103677 () Bool)

(assert (=> b!95805 m!103677))

(declare-fun m!103679 () Bool)

(assert (=> b!95793 m!103679))

(assert (=> d!25223 m!103455))

(assert (=> b!95797 m!103591))

(declare-fun m!103681 () Bool)

(assert (=> b!95797 m!103681))

(assert (=> b!95797 m!103489))

(assert (=> b!95797 m!103591))

(declare-fun m!103683 () Bool)

(assert (=> b!95797 m!103683))

(assert (=> b!95797 m!103489))

(declare-fun m!103685 () Bool)

(assert (=> b!95797 m!103685))

(assert (=> b!95797 m!103683))

(declare-fun m!103687 () Bool)

(assert (=> bm!9690 m!103687))

(declare-fun m!103689 () Bool)

(assert (=> bm!9691 m!103689))

(declare-fun m!103691 () Bool)

(assert (=> b!95792 m!103691))

(declare-fun m!103693 () Bool)

(assert (=> b!95792 m!103693))

(declare-fun m!103695 () Bool)

(assert (=> b!95792 m!103695))

(declare-fun m!103697 () Bool)

(assert (=> b!95792 m!103697))

(declare-fun m!103699 () Bool)

(assert (=> b!95792 m!103699))

(declare-fun m!103701 () Bool)

(assert (=> b!95792 m!103701))

(declare-fun m!103703 () Bool)

(assert (=> b!95792 m!103703))

(declare-fun m!103705 () Bool)

(assert (=> b!95792 m!103705))

(declare-fun m!103707 () Bool)

(assert (=> b!95792 m!103707))

(declare-fun m!103709 () Bool)

(assert (=> b!95792 m!103709))

(assert (=> b!95792 m!103707))

(declare-fun m!103711 () Bool)

(assert (=> b!95792 m!103711))

(declare-fun m!103713 () Bool)

(assert (=> b!95792 m!103713))

(declare-fun m!103715 () Bool)

(assert (=> b!95792 m!103715))

(assert (=> b!95792 m!103713))

(assert (=> b!95792 m!103703))

(assert (=> b!95792 m!103691))

(declare-fun m!103717 () Bool)

(assert (=> b!95792 m!103717))

(declare-fun m!103719 () Bool)

(assert (=> b!95792 m!103719))

(assert (=> b!95792 m!103591))

(declare-fun m!103721 () Bool)

(assert (=> b!95792 m!103721))

(assert (=> b!95803 m!103591))

(assert (=> b!95803 m!103591))

(declare-fun m!103723 () Bool)

(assert (=> b!95803 m!103723))

(assert (=> bm!9686 m!103717))

(assert (=> b!95807 m!103591))

(assert (=> b!95807 m!103591))

(assert (=> b!95807 m!103723))

(declare-fun m!103725 () Bool)

(assert (=> b!95794 m!103725))

(assert (=> b!95444 d!25223))

(declare-fun d!25225 () Bool)

(declare-fun res!48394 () Bool)

(declare-fun e!62511 () Bool)

(assert (=> d!25225 (=> (not res!48394) (not e!62511))))

(declare-fun simpleValid!67 (LongMapFixedSize!838) Bool)

(assert (=> d!25225 (= res!48394 (simpleValid!67 newMap!16))))

(assert (=> d!25225 (= (valid!386 newMap!16) e!62511)))

(declare-fun b!95818 () Bool)

(declare-fun res!48395 () Bool)

(assert (=> b!95818 (=> (not res!48395) (not e!62511))))

(declare-fun arrayCountValidKeys!0 (array!4191 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!95818 (= res!48395 (= (arrayCountValidKeys!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (_size!468 newMap!16)))))

(declare-fun b!95819 () Bool)

(declare-fun res!48396 () Bool)

(assert (=> b!95819 (=> (not res!48396) (not e!62511))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4191 (_ BitVec 32)) Bool)

(assert (=> b!95819 (= res!48396 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!95820 () Bool)

(assert (=> b!95820 (= e!62511 (arrayNoDuplicates!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 Nil!1578))))

(assert (= (and d!25225 res!48394) b!95818))

(assert (= (and b!95818 res!48395) b!95819))

(assert (= (and b!95819 res!48396) b!95820))

(declare-fun m!103727 () Bool)

(assert (=> d!25225 m!103727))

(declare-fun m!103729 () Bool)

(assert (=> b!95818 m!103729))

(declare-fun m!103731 () Bool)

(assert (=> b!95819 m!103731))

(declare-fun m!103733 () Bool)

(assert (=> b!95820 m!103733))

(assert (=> b!95458 d!25225))

(declare-fun b!95828 () Bool)

(declare-fun e!62516 () Bool)

(assert (=> b!95828 (= e!62516 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3711 () Bool)

(declare-fun mapRes!3711 () Bool)

(assert (=> mapIsEmpty!3711 mapRes!3711))

(declare-fun mapNonEmpty!3711 () Bool)

(declare-fun tp!9507 () Bool)

(declare-fun e!62517 () Bool)

(assert (=> mapNonEmpty!3711 (= mapRes!3711 (and tp!9507 e!62517))))

(declare-fun mapRest!3711 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3711 () ValueCell!965)

(declare-fun mapKey!3711 () (_ BitVec 32))

(assert (=> mapNonEmpty!3711 (= mapRest!3696 (store mapRest!3711 mapKey!3711 mapValue!3711))))

(declare-fun condMapEmpty!3711 () Bool)

(declare-fun mapDefault!3711 () ValueCell!965)

(assert (=> mapNonEmpty!3695 (= condMapEmpty!3711 (= mapRest!3696 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3711)))))

(assert (=> mapNonEmpty!3695 (= tp!9480 (and e!62516 mapRes!3711))))

(declare-fun b!95827 () Bool)

(assert (=> b!95827 (= e!62517 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3695 condMapEmpty!3711) mapIsEmpty!3711))

(assert (= (and mapNonEmpty!3695 (not condMapEmpty!3711)) mapNonEmpty!3711))

(assert (= (and mapNonEmpty!3711 ((_ is ValueCellFull!965) mapValue!3711)) b!95827))

(assert (= (and mapNonEmpty!3695 ((_ is ValueCellFull!965) mapDefault!3711)) b!95828))

(declare-fun m!103735 () Bool)

(assert (=> mapNonEmpty!3711 m!103735))

(declare-fun b!95830 () Bool)

(declare-fun e!62518 () Bool)

(assert (=> b!95830 (= e!62518 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3712 () Bool)

(declare-fun mapRes!3712 () Bool)

(assert (=> mapIsEmpty!3712 mapRes!3712))

(declare-fun mapNonEmpty!3712 () Bool)

(declare-fun tp!9508 () Bool)

(declare-fun e!62519 () Bool)

(assert (=> mapNonEmpty!3712 (= mapRes!3712 (and tp!9508 e!62519))))

(declare-fun mapRest!3712 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3712 () ValueCell!965)

(declare-fun mapKey!3712 () (_ BitVec 32))

(assert (=> mapNonEmpty!3712 (= mapRest!3695 (store mapRest!3712 mapKey!3712 mapValue!3712))))

(declare-fun condMapEmpty!3712 () Bool)

(declare-fun mapDefault!3712 () ValueCell!965)

(assert (=> mapNonEmpty!3696 (= condMapEmpty!3712 (= mapRest!3695 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3712)))))

(assert (=> mapNonEmpty!3696 (= tp!9479 (and e!62518 mapRes!3712))))

(declare-fun b!95829 () Bool)

(assert (=> b!95829 (= e!62519 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3696 condMapEmpty!3712) mapIsEmpty!3712))

(assert (= (and mapNonEmpty!3696 (not condMapEmpty!3712)) mapNonEmpty!3712))

(assert (= (and mapNonEmpty!3712 ((_ is ValueCellFull!965) mapValue!3712)) b!95829))

(assert (= (and mapNonEmpty!3696 ((_ is ValueCellFull!965) mapDefault!3712)) b!95830))

(declare-fun m!103737 () Bool)

(assert (=> mapNonEmpty!3712 m!103737))

(declare-fun b_lambda!4231 () Bool)

(assert (= b_lambda!4229 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4231)))

(check-sat (not d!25197) (not b!95735) (not bm!9659) (not b!95723) (not bm!9686) (not b!95719) (not b_next!2403) (not b!95712) (not b!95807) b_and!5849 (not bm!9650) (not mapNonEmpty!3711) (not bm!9651) (not b!95706) (not b!95792) (not b!95747) (not b!95820) (not bm!9665) (not bm!9690) (not bm!9658) (not b!95738) (not b!95793) (not bm!9688) (not b!95819) (not b!95607) (not bm!9660) (not b_lambda!4227) (not b!95805) (not bm!9599) (not bm!9664) (not d!25207) (not b!95703) (not b!95794) (not b!95718) (not d!25225) (not b!95797) tp_is_empty!2617 b_and!5851 (not bm!9669) (not bm!9652) (not bm!9670) (not b_next!2401) (not b!95603) (not b!95591) (not b!95748) (not d!25209) (not b!95616) (not b!95810) (not b_lambda!4231) (not b!95614) (not d!25223) (not bm!9667) (not d!25203) (not d!25199) (not b!95803) (not b!95586) (not bm!9691) (not b!95818) (not bm!9649) (not d!25221) (not b!95605) (not mapNonEmpty!3712) (not d!25219))
(check-sat b_and!5849 b_and!5851 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25227 () Bool)

(declare-fun get!1278 (Option!153) V!3137)

(assert (=> d!25227 (= (apply!91 lt!47730 lt!47715) (get!1278 (getValueByKey!147 (toList!769 lt!47730) lt!47715)))))

(declare-fun bs!3935 () Bool)

(assert (= bs!3935 d!25227))

(declare-fun m!103739 () Bool)

(assert (=> bs!3935 m!103739))

(assert (=> bs!3935 m!103739))

(declare-fun m!103741 () Bool)

(assert (=> bs!3935 m!103741))

(assert (=> b!95792 d!25227))

(declare-fun d!25229 () Bool)

(declare-fun e!62522 () Bool)

(assert (=> d!25229 e!62522))

(declare-fun res!48402 () Bool)

(assert (=> d!25229 (=> (not res!48402) (not e!62522))))

(declare-fun lt!47742 () ListLongMap!1507)

(assert (=> d!25229 (= res!48402 (contains!791 lt!47742 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!47740 () List!1580)

(assert (=> d!25229 (= lt!47742 (ListLongMap!1508 lt!47740))))

(declare-fun lt!47741 () Unit!2865)

(declare-fun lt!47743 () Unit!2865)

(assert (=> d!25229 (= lt!47741 lt!47743)))

(assert (=> d!25229 (= (getValueByKey!147 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!66 (List!1580 (_ BitVec 64) V!3137) Unit!2865)

(assert (=> d!25229 (= lt!47743 (lemmaContainsTupThenGetReturnValue!66 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun insertStrictlySorted!69 (List!1580 (_ BitVec 64) V!3137) List!1580)

(assert (=> d!25229 (= lt!47740 (insertStrictlySorted!69 (toList!769 lt!47722) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25229 (= (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47742)))

(declare-fun b!95835 () Bool)

(declare-fun res!48401 () Bool)

(assert (=> b!95835 (=> (not res!48401) (not e!62522))))

(assert (=> b!95835 (= res!48401 (= (getValueByKey!147 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!95836 () Bool)

(declare-fun contains!793 (List!1580 tuple2!2314) Bool)

(assert (=> b!95836 (= e!62522 (contains!793 (toList!769 lt!47742) (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25229 res!48402) b!95835))

(assert (= (and b!95835 res!48401) b!95836))

(declare-fun m!103743 () Bool)

(assert (=> d!25229 m!103743))

(declare-fun m!103745 () Bool)

(assert (=> d!25229 m!103745))

(declare-fun m!103747 () Bool)

(assert (=> d!25229 m!103747))

(declare-fun m!103749 () Bool)

(assert (=> d!25229 m!103749))

(declare-fun m!103751 () Bool)

(assert (=> b!95835 m!103751))

(declare-fun m!103753 () Bool)

(assert (=> b!95836 m!103753))

(assert (=> b!95792 d!25229))

(declare-fun d!25231 () Bool)

(assert (=> d!25231 (= (apply!91 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47723) (apply!91 lt!47721 lt!47723))))

(declare-fun lt!47746 () Unit!2865)

(declare-fun choose!581 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> d!25231 (= lt!47746 (choose!581 lt!47721 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47723))))

(declare-fun e!62525 () Bool)

(assert (=> d!25231 e!62525))

(declare-fun res!48405 () Bool)

(assert (=> d!25231 (=> (not res!48405) (not e!62525))))

(assert (=> d!25231 (= res!48405 (contains!791 lt!47721 lt!47723))))

(assert (=> d!25231 (= (addApplyDifferent!67 lt!47721 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47723) lt!47746)))

(declare-fun b!95840 () Bool)

(assert (=> b!95840 (= e!62525 (not (= lt!47723 lt!47718)))))

(assert (= (and d!25231 res!48405) b!95840))

(assert (=> d!25231 m!103707))

(assert (=> d!25231 m!103709))

(declare-fun m!103755 () Bool)

(assert (=> d!25231 m!103755))

(declare-fun m!103757 () Bool)

(assert (=> d!25231 m!103757))

(assert (=> d!25231 m!103707))

(assert (=> d!25231 m!103695))

(assert (=> b!95792 d!25231))

(declare-fun d!25233 () Bool)

(assert (=> d!25233 (= (apply!91 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47711) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47711)))))

(declare-fun bs!3936 () Bool)

(assert (= bs!3936 d!25233))

(declare-fun m!103759 () Bool)

(assert (=> bs!3936 m!103759))

(assert (=> bs!3936 m!103759))

(declare-fun m!103761 () Bool)

(assert (=> bs!3936 m!103761))

(assert (=> b!95792 d!25233))

(declare-fun d!25235 () Bool)

(declare-fun e!62526 () Bool)

(assert (=> d!25235 e!62526))

(declare-fun res!48407 () Bool)

(assert (=> d!25235 (=> (not res!48407) (not e!62526))))

(declare-fun lt!47749 () ListLongMap!1507)

(assert (=> d!25235 (= res!48407 (contains!791 lt!47749 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!47747 () List!1580)

(assert (=> d!25235 (= lt!47749 (ListLongMap!1508 lt!47747))))

(declare-fun lt!47748 () Unit!2865)

(declare-fun lt!47750 () Unit!2865)

(assert (=> d!25235 (= lt!47748 lt!47750)))

(assert (=> d!25235 (= (getValueByKey!147 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25235 (= lt!47750 (lemmaContainsTupThenGetReturnValue!66 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25235 (= lt!47747 (insertStrictlySorted!69 (toList!769 lt!47721) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25235 (= (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47749)))

(declare-fun b!95841 () Bool)

(declare-fun res!48406 () Bool)

(assert (=> b!95841 (=> (not res!48406) (not e!62526))))

(assert (=> b!95841 (= res!48406 (= (getValueByKey!147 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!95842 () Bool)

(assert (=> b!95842 (= e!62526 (contains!793 (toList!769 lt!47749) (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25235 res!48407) b!95841))

(assert (= (and b!95841 res!48406) b!95842))

(declare-fun m!103763 () Bool)

(assert (=> d!25235 m!103763))

(declare-fun m!103765 () Bool)

(assert (=> d!25235 m!103765))

(declare-fun m!103767 () Bool)

(assert (=> d!25235 m!103767))

(declare-fun m!103769 () Bool)

(assert (=> d!25235 m!103769))

(declare-fun m!103771 () Bool)

(assert (=> b!95841 m!103771))

(declare-fun m!103773 () Bool)

(assert (=> b!95842 m!103773))

(assert (=> b!95792 d!25235))

(declare-fun d!25237 () Bool)

(assert (=> d!25237 (= (apply!91 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47715) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47715)))))

(declare-fun bs!3937 () Bool)

(assert (= bs!3937 d!25237))

(declare-fun m!103775 () Bool)

(assert (=> bs!3937 m!103775))

(assert (=> bs!3937 m!103775))

(declare-fun m!103777 () Bool)

(assert (=> bs!3937 m!103777))

(assert (=> b!95792 d!25237))

(declare-fun d!25239 () Bool)

(declare-fun e!62527 () Bool)

(assert (=> d!25239 e!62527))

(declare-fun res!48409 () Bool)

(assert (=> d!25239 (=> (not res!48409) (not e!62527))))

(declare-fun lt!47753 () ListLongMap!1507)

(assert (=> d!25239 (= res!48409 (contains!791 lt!47753 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!47751 () List!1580)

(assert (=> d!25239 (= lt!47753 (ListLongMap!1508 lt!47751))))

(declare-fun lt!47752 () Unit!2865)

(declare-fun lt!47754 () Unit!2865)

(assert (=> d!25239 (= lt!47752 lt!47754)))

(assert (=> d!25239 (= (getValueByKey!147 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25239 (= lt!47754 (lemmaContainsTupThenGetReturnValue!66 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25239 (= lt!47751 (insertStrictlySorted!69 (toList!769 lt!47725) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25239 (= (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47753)))

(declare-fun b!95843 () Bool)

(declare-fun res!48408 () Bool)

(assert (=> b!95843 (=> (not res!48408) (not e!62527))))

(assert (=> b!95843 (= res!48408 (= (getValueByKey!147 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!95844 () Bool)

(assert (=> b!95844 (= e!62527 (contains!793 (toList!769 lt!47753) (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25239 res!48409) b!95843))

(assert (= (and b!95843 res!48408) b!95844))

(declare-fun m!103779 () Bool)

(assert (=> d!25239 m!103779))

(declare-fun m!103781 () Bool)

(assert (=> d!25239 m!103781))

(declare-fun m!103783 () Bool)

(assert (=> d!25239 m!103783))

(declare-fun m!103785 () Bool)

(assert (=> d!25239 m!103785))

(declare-fun m!103787 () Bool)

(assert (=> b!95843 m!103787))

(declare-fun m!103789 () Bool)

(assert (=> b!95844 m!103789))

(assert (=> b!95792 d!25239))

(declare-fun d!25241 () Bool)

(assert (=> d!25241 (contains!791 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47716)))

(declare-fun lt!47757 () Unit!2865)

(declare-fun choose!582 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> d!25241 (= lt!47757 (choose!582 lt!47722 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47716))))

(assert (=> d!25241 (contains!791 lt!47722 lt!47716)))

(assert (=> d!25241 (= (addStillContains!67 lt!47722 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47716) lt!47757)))

(declare-fun bs!3938 () Bool)

(assert (= bs!3938 d!25241))

(assert (=> bs!3938 m!103691))

(assert (=> bs!3938 m!103691))

(assert (=> bs!3938 m!103693))

(declare-fun m!103791 () Bool)

(assert (=> bs!3938 m!103791))

(declare-fun m!103793 () Bool)

(assert (=> bs!3938 m!103793))

(assert (=> b!95792 d!25241))

(declare-fun d!25243 () Bool)

(declare-fun e!62528 () Bool)

(assert (=> d!25243 e!62528))

(declare-fun res!48410 () Bool)

(assert (=> d!25243 (=> res!48410 e!62528)))

(declare-fun lt!47759 () Bool)

(assert (=> d!25243 (= res!48410 (not lt!47759))))

(declare-fun lt!47760 () Bool)

(assert (=> d!25243 (= lt!47759 lt!47760)))

(declare-fun lt!47761 () Unit!2865)

(declare-fun e!62529 () Unit!2865)

(assert (=> d!25243 (= lt!47761 e!62529)))

(declare-fun c!16104 () Bool)

(assert (=> d!25243 (= c!16104 lt!47760)))

(assert (=> d!25243 (= lt!47760 (containsKey!151 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(assert (=> d!25243 (= (contains!791 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47716) lt!47759)))

(declare-fun b!95846 () Bool)

(declare-fun lt!47758 () Unit!2865)

(assert (=> b!95846 (= e!62529 lt!47758)))

(assert (=> b!95846 (= lt!47758 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(assert (=> b!95846 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(declare-fun b!95847 () Bool)

(declare-fun Unit!2876 () Unit!2865)

(assert (=> b!95847 (= e!62529 Unit!2876)))

(declare-fun b!95848 () Bool)

(assert (=> b!95848 (= e!62528 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716)))))

(assert (= (and d!25243 c!16104) b!95846))

(assert (= (and d!25243 (not c!16104)) b!95847))

(assert (= (and d!25243 (not res!48410)) b!95848))

(declare-fun m!103795 () Bool)

(assert (=> d!25243 m!103795))

(declare-fun m!103797 () Bool)

(assert (=> b!95846 m!103797))

(declare-fun m!103799 () Bool)

(assert (=> b!95846 m!103799))

(assert (=> b!95846 m!103799))

(declare-fun m!103801 () Bool)

(assert (=> b!95846 m!103801))

(assert (=> b!95848 m!103799))

(assert (=> b!95848 m!103799))

(assert (=> b!95848 m!103801))

(assert (=> b!95792 d!25243))

(declare-fun d!25245 () Bool)

(assert (=> d!25245 (= (apply!91 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47723) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47723)))))

(declare-fun bs!3939 () Bool)

(assert (= bs!3939 d!25245))

(declare-fun m!103803 () Bool)

(assert (=> bs!3939 m!103803))

(assert (=> bs!3939 m!103803))

(declare-fun m!103805 () Bool)

(assert (=> bs!3939 m!103805))

(assert (=> b!95792 d!25245))

(declare-fun d!25247 () Bool)

(assert (=> d!25247 (= (apply!91 lt!47725 lt!47711) (get!1278 (getValueByKey!147 (toList!769 lt!47725) lt!47711)))))

(declare-fun bs!3940 () Bool)

(assert (= bs!3940 d!25247))

(declare-fun m!103807 () Bool)

(assert (=> bs!3940 m!103807))

(assert (=> bs!3940 m!103807))

(declare-fun m!103809 () Bool)

(assert (=> bs!3940 m!103809))

(assert (=> b!95792 d!25247))

(declare-fun d!25249 () Bool)

(assert (=> d!25249 (= (apply!91 lt!47721 lt!47723) (get!1278 (getValueByKey!147 (toList!769 lt!47721) lt!47723)))))

(declare-fun bs!3941 () Bool)

(assert (= bs!3941 d!25249))

(declare-fun m!103811 () Bool)

(assert (=> bs!3941 m!103811))

(assert (=> bs!3941 m!103811))

(declare-fun m!103813 () Bool)

(assert (=> bs!3941 m!103813))

(assert (=> b!95792 d!25249))

(declare-fun d!25251 () Bool)

(assert (=> d!25251 (= (apply!91 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47711) (apply!91 lt!47725 lt!47711))))

(declare-fun lt!47762 () Unit!2865)

(assert (=> d!25251 (= lt!47762 (choose!581 lt!47725 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47711))))

(declare-fun e!62530 () Bool)

(assert (=> d!25251 e!62530))

(declare-fun res!48411 () Bool)

(assert (=> d!25251 (=> (not res!48411) (not e!62530))))

(assert (=> d!25251 (= res!48411 (contains!791 lt!47725 lt!47711))))

(assert (=> d!25251 (= (addApplyDifferent!67 lt!47725 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47711) lt!47762)))

(declare-fun b!95849 () Bool)

(assert (=> b!95849 (= e!62530 (not (= lt!47711 lt!47710)))))

(assert (= (and d!25251 res!48411) b!95849))

(assert (=> d!25251 m!103713))

(assert (=> d!25251 m!103715))

(declare-fun m!103815 () Bool)

(assert (=> d!25251 m!103815))

(declare-fun m!103817 () Bool)

(assert (=> d!25251 m!103817))

(assert (=> d!25251 m!103713))

(assert (=> d!25251 m!103697))

(assert (=> b!95792 d!25251))

(declare-fun d!25253 () Bool)

(assert (=> d!25253 (= (apply!91 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47715) (apply!91 lt!47730 lt!47715))))

(declare-fun lt!47763 () Unit!2865)

(assert (=> d!25253 (= lt!47763 (choose!581 lt!47730 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47715))))

(declare-fun e!62531 () Bool)

(assert (=> d!25253 e!62531))

(declare-fun res!48412 () Bool)

(assert (=> d!25253 (=> (not res!48412) (not e!62531))))

(assert (=> d!25253 (= res!48412 (contains!791 lt!47730 lt!47715))))

(assert (=> d!25253 (= (addApplyDifferent!67 lt!47730 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47715) lt!47763)))

(declare-fun b!95850 () Bool)

(assert (=> b!95850 (= e!62531 (not (= lt!47715 lt!47724)))))

(assert (= (and d!25253 res!48412) b!95850))

(assert (=> d!25253 m!103703))

(assert (=> d!25253 m!103705))

(declare-fun m!103819 () Bool)

(assert (=> d!25253 m!103819))

(declare-fun m!103821 () Bool)

(assert (=> d!25253 m!103821))

(assert (=> d!25253 m!103703))

(assert (=> d!25253 m!103701))

(assert (=> b!95792 d!25253))

(declare-fun d!25255 () Bool)

(declare-fun e!62532 () Bool)

(assert (=> d!25255 e!62532))

(declare-fun res!48414 () Bool)

(assert (=> d!25255 (=> (not res!48414) (not e!62532))))

(declare-fun lt!47766 () ListLongMap!1507)

(assert (=> d!25255 (= res!48414 (contains!791 lt!47766 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!47764 () List!1580)

(assert (=> d!25255 (= lt!47766 (ListLongMap!1508 lt!47764))))

(declare-fun lt!47765 () Unit!2865)

(declare-fun lt!47767 () Unit!2865)

(assert (=> d!25255 (= lt!47765 lt!47767)))

(assert (=> d!25255 (= (getValueByKey!147 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25255 (= lt!47767 (lemmaContainsTupThenGetReturnValue!66 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25255 (= lt!47764 (insertStrictlySorted!69 (toList!769 lt!47730) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25255 (= (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47766)))

(declare-fun b!95851 () Bool)

(declare-fun res!48413 () Bool)

(assert (=> b!95851 (=> (not res!48413) (not e!62532))))

(assert (=> b!95851 (= res!48413 (= (getValueByKey!147 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!95852 () Bool)

(assert (=> b!95852 (= e!62532 (contains!793 (toList!769 lt!47766) (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25255 res!48414) b!95851))

(assert (= (and b!95851 res!48413) b!95852))

(declare-fun m!103823 () Bool)

(assert (=> d!25255 m!103823))

(declare-fun m!103825 () Bool)

(assert (=> d!25255 m!103825))

(declare-fun m!103827 () Bool)

(assert (=> d!25255 m!103827))

(declare-fun m!103829 () Bool)

(assert (=> d!25255 m!103829))

(declare-fun m!103831 () Bool)

(assert (=> b!95851 m!103831))

(declare-fun m!103833 () Bool)

(assert (=> b!95852 m!103833))

(assert (=> b!95792 d!25255))

(declare-fun b!95877 () Bool)

(declare-fun res!48424 () Bool)

(declare-fun e!62550 () Bool)

(assert (=> b!95877 (=> (not res!48424) (not e!62550))))

(declare-fun lt!47788 () ListLongMap!1507)

(assert (=> b!95877 (= res!48424 (not (contains!791 lt!47788 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95878 () Bool)

(declare-fun e!62553 () Bool)

(declare-fun e!62552 () Bool)

(assert (=> b!95878 (= e!62553 e!62552)))

(declare-fun c!16115 () Bool)

(assert (=> b!95878 (= c!16115 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun bm!9695 () Bool)

(declare-fun call!9698 () ListLongMap!1507)

(assert (=> bm!9695 (= call!9698 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!95879 () Bool)

(declare-fun e!62549 () ListLongMap!1507)

(declare-fun e!62551 () ListLongMap!1507)

(assert (=> b!95879 (= e!62549 e!62551)))

(declare-fun c!16113 () Bool)

(assert (=> b!95879 (= c!16113 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95880 () Bool)

(declare-fun lt!47782 () Unit!2865)

(declare-fun lt!47785 () Unit!2865)

(assert (=> b!95880 (= lt!47782 lt!47785)))

(declare-fun lt!47787 () (_ BitVec 64))

(declare-fun lt!47786 () ListLongMap!1507)

(declare-fun lt!47783 () V!3137)

(declare-fun lt!47784 () (_ BitVec 64))

(assert (=> b!95880 (not (contains!791 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783)) lt!47787))))

(declare-fun addStillNotContains!40 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> b!95880 (= lt!47785 (addStillNotContains!40 lt!47786 lt!47784 lt!47783 lt!47787))))

(assert (=> b!95880 (= lt!47787 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!95880 (= lt!47783 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!95880 (= lt!47784 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!95880 (= lt!47786 call!9698)))

(assert (=> b!95880 (= e!62551 (+!127 call!9698 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95881 () Bool)

(declare-fun e!62548 () Bool)

(assert (=> b!95881 (= e!62553 e!62548)))

(assert (=> b!95881 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun res!48423 () Bool)

(assert (=> b!95881 (= res!48423 (contains!791 lt!47788 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95881 (=> (not res!48423) (not e!62548))))

(declare-fun b!95882 () Bool)

(declare-fun e!62547 () Bool)

(assert (=> b!95882 (= e!62547 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95882 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun d!25257 () Bool)

(assert (=> d!25257 e!62550))

(declare-fun res!48425 () Bool)

(assert (=> d!25257 (=> (not res!48425) (not e!62550))))

(assert (=> d!25257 (= res!48425 (not (contains!791 lt!47788 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25257 (= lt!47788 e!62549)))

(declare-fun c!16114 () Bool)

(assert (=> d!25257 (= c!16114 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25257 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992))))))

(assert (=> d!25257 (= (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) lt!47788)))

(declare-fun b!95883 () Bool)

(assert (=> b!95883 (= e!62552 (= lt!47788 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!95884 () Bool)

(assert (=> b!95884 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> b!95884 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> b!95884 (= e!62548 (= (apply!91 lt!47788 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95885 () Bool)

(assert (=> b!95885 (= e!62551 call!9698)))

(declare-fun b!95886 () Bool)

(assert (=> b!95886 (= e!62549 (ListLongMap!1508 Nil!1577))))

(declare-fun b!95887 () Bool)

(declare-fun isEmpty!357 (ListLongMap!1507) Bool)

(assert (=> b!95887 (= e!62552 (isEmpty!357 lt!47788))))

(declare-fun b!95888 () Bool)

(assert (=> b!95888 (= e!62550 e!62553)))

(declare-fun c!16116 () Bool)

(assert (=> b!95888 (= c!16116 e!62547)))

(declare-fun res!48426 () Bool)

(assert (=> b!95888 (=> (not res!48426) (not e!62547))))

(assert (=> b!95888 (= res!48426 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25257 c!16114) b!95886))

(assert (= (and d!25257 (not c!16114)) b!95879))

(assert (= (and b!95879 c!16113) b!95880))

(assert (= (and b!95879 (not c!16113)) b!95885))

(assert (= (or b!95880 b!95885) bm!9695))

(assert (= (and d!25257 res!48425) b!95877))

(assert (= (and b!95877 res!48424) b!95888))

(assert (= (and b!95888 res!48426) b!95882))

(assert (= (and b!95888 c!16116) b!95881))

(assert (= (and b!95888 (not c!16116)) b!95878))

(assert (= (and b!95881 res!48423) b!95884))

(assert (= (and b!95878 c!16115) b!95883))

(assert (= (and b!95878 (not c!16115)) b!95887))

(declare-fun b_lambda!4233 () Bool)

(assert (=> (not b_lambda!4233) (not b!95880)))

(assert (=> b!95880 t!5490))

(declare-fun b_and!5853 () Bool)

(assert (= b_and!5849 (and (=> t!5490 result!3205) b_and!5853)))

(assert (=> b!95880 t!5492))

(declare-fun b_and!5855 () Bool)

(assert (= b_and!5851 (and (=> t!5492 result!3209) b_and!5855)))

(declare-fun b_lambda!4235 () Bool)

(assert (=> (not b_lambda!4235) (not b!95884)))

(assert (=> b!95884 t!5490))

(declare-fun b_and!5857 () Bool)

(assert (= b_and!5853 (and (=> t!5490 result!3205) b_and!5857)))

(assert (=> b!95884 t!5492))

(declare-fun b_and!5859 () Bool)

(assert (= b_and!5855 (and (=> t!5492 result!3209) b_and!5859)))

(declare-fun m!103835 () Bool)

(assert (=> bm!9695 m!103835))

(declare-fun m!103837 () Bool)

(assert (=> d!25257 m!103837))

(assert (=> d!25257 m!103455))

(declare-fun m!103839 () Bool)

(assert (=> b!95887 m!103839))

(assert (=> b!95881 m!103591))

(assert (=> b!95881 m!103591))

(declare-fun m!103841 () Bool)

(assert (=> b!95881 m!103841))

(assert (=> b!95879 m!103591))

(assert (=> b!95879 m!103591))

(assert (=> b!95879 m!103723))

(assert (=> b!95884 m!103683))

(assert (=> b!95884 m!103591))

(declare-fun m!103843 () Bool)

(assert (=> b!95884 m!103843))

(assert (=> b!95884 m!103683))

(assert (=> b!95884 m!103489))

(assert (=> b!95884 m!103685))

(assert (=> b!95884 m!103489))

(assert (=> b!95884 m!103591))

(assert (=> b!95880 m!103683))

(declare-fun m!103845 () Bool)

(assert (=> b!95880 m!103845))

(assert (=> b!95880 m!103683))

(assert (=> b!95880 m!103489))

(assert (=> b!95880 m!103685))

(assert (=> b!95880 m!103489))

(declare-fun m!103847 () Bool)

(assert (=> b!95880 m!103847))

(assert (=> b!95880 m!103591))

(declare-fun m!103849 () Bool)

(assert (=> b!95880 m!103849))

(assert (=> b!95880 m!103847))

(declare-fun m!103851 () Bool)

(assert (=> b!95880 m!103851))

(declare-fun m!103853 () Bool)

(assert (=> b!95877 m!103853))

(assert (=> b!95883 m!103835))

(assert (=> b!95882 m!103591))

(assert (=> b!95882 m!103591))

(assert (=> b!95882 m!103723))

(assert (=> b!95792 d!25257))

(declare-fun d!25259 () Bool)

(declare-fun res!48438 () Bool)

(declare-fun e!62556 () Bool)

(assert (=> d!25259 (=> (not res!48438) (not e!62556))))

(assert (=> d!25259 (= res!48438 (validMask!0 (mask!6540 newMap!16)))))

(assert (=> d!25259 (= (simpleValid!67 newMap!16) e!62556)))

(declare-fun b!95900 () Bool)

(assert (=> b!95900 (= e!62556 (and (bvsge (extraKeys!2281 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!468 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!95897 () Bool)

(declare-fun res!48436 () Bool)

(assert (=> b!95897 (=> (not res!48436) (not e!62556))))

(assert (=> b!95897 (= res!48436 (and (= (size!2241 (_values!2439 newMap!16)) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001)) (= (size!2240 (_keys!4141 newMap!16)) (size!2241 (_values!2439 newMap!16))) (bvsge (_size!468 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!468 newMap!16) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!95898 () Bool)

(declare-fun res!48435 () Bool)

(assert (=> b!95898 (=> (not res!48435) (not e!62556))))

(declare-fun size!2246 (LongMapFixedSize!838) (_ BitVec 32))

(assert (=> b!95898 (= res!48435 (bvsge (size!2246 newMap!16) (_size!468 newMap!16)))))

(declare-fun b!95899 () Bool)

(declare-fun res!48437 () Bool)

(assert (=> b!95899 (=> (not res!48437) (not e!62556))))

(assert (=> b!95899 (= res!48437 (= (size!2246 newMap!16) (bvadd (_size!468 newMap!16) (bvsdiv (bvadd (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!25259 res!48438) b!95897))

(assert (= (and b!95897 res!48436) b!95898))

(assert (= (and b!95898 res!48435) b!95899))

(assert (= (and b!95899 res!48437) b!95900))

(declare-fun m!103855 () Bool)

(assert (=> d!25259 m!103855))

(declare-fun m!103857 () Bool)

(assert (=> b!95898 m!103857))

(assert (=> b!95899 m!103857))

(assert (=> d!25225 d!25259))

(declare-fun d!25261 () Bool)

(assert (=> d!25261 (= (inRange!0 (ite c!16070 (ite c!16069 (index!3163 lt!47662) (ite c!16074 (index!3162 lt!47643) (index!3165 lt!47643))) (ite c!16073 (index!3163 lt!47646) (ite c!16077 (index!3162 lt!47639) (index!3165 lt!47639)))) (mask!6540 newMap!16)) (and (bvsge (ite c!16070 (ite c!16069 (index!3163 lt!47662) (ite c!16074 (index!3162 lt!47643) (index!3165 lt!47643))) (ite c!16073 (index!3163 lt!47646) (ite c!16077 (index!3162 lt!47639) (index!3165 lt!47639)))) #b00000000000000000000000000000000) (bvslt (ite c!16070 (ite c!16069 (index!3163 lt!47662) (ite c!16074 (index!3162 lt!47643) (index!3165 lt!47643))) (ite c!16073 (index!3163 lt!47646) (ite c!16077 (index!3162 lt!47639) (index!3165 lt!47639)))) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9650 d!25261))

(assert (=> d!25197 d!25201))

(declare-fun d!25263 () Bool)

(assert (=> d!25263 (not (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!25263 true))

(declare-fun _$68!88 () Unit!2865)

(assert (=> d!25263 (= (choose!68 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578)) _$68!88)))

(declare-fun bs!3942 () Bool)

(assert (= bs!3942 d!25263))

(assert (=> bs!3942 m!103459))

(assert (=> bs!3942 m!103477))

(assert (=> d!25197 d!25263))

(declare-fun d!25265 () Bool)

(assert (=> d!25265 (= (get!1276 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2769 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!95747 d!25265))

(declare-fun d!25267 () Bool)

(assert (=> d!25267 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47791 () Unit!2865)

(declare-fun choose!583 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2865)

(assert (=> d!25267 (= lt!47791 (choose!583 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25267 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25267 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!47791)))

(declare-fun bs!3943 () Bool)

(assert (= bs!3943 d!25267))

(assert (=> bs!3943 m!103491))

(declare-fun m!103859 () Bool)

(assert (=> bs!3943 m!103859))

(assert (=> bs!3943 m!103619))

(declare-fun m!103861 () Bool)

(assert (=> bs!3943 m!103861))

(assert (=> bs!3943 m!103619))

(assert (=> bs!3943 m!103855))

(assert (=> bs!3943 m!103491))

(declare-fun m!103863 () Bool)

(assert (=> bs!3943 m!103863))

(assert (=> b!95719 d!25267))

(declare-fun bm!9698 () Bool)

(declare-fun call!9701 () Bool)

(assert (=> bm!9698 (= call!9701 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun d!25269 () Bool)

(declare-fun res!48443 () Bool)

(declare-fun e!62563 () Bool)

(assert (=> d!25269 (=> res!48443 e!62563)))

(assert (=> d!25269 (= res!48443 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25269 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 newMap!16) (mask!6540 newMap!16)) e!62563)))

(declare-fun b!95909 () Bool)

(declare-fun e!62564 () Bool)

(assert (=> b!95909 (= e!62564 call!9701)))

(declare-fun b!95910 () Bool)

(declare-fun e!62565 () Bool)

(assert (=> b!95910 (= e!62565 call!9701)))

(declare-fun b!95911 () Bool)

(assert (=> b!95911 (= e!62563 e!62564)))

(declare-fun c!16119 () Bool)

(assert (=> b!95911 (= c!16119 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95912 () Bool)

(assert (=> b!95912 (= e!62564 e!62565)))

(declare-fun lt!47800 () (_ BitVec 64))

(assert (=> b!95912 (= lt!47800 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47798 () Unit!2865)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4191 (_ BitVec 64) (_ BitVec 32)) Unit!2865)

(assert (=> b!95912 (= lt!47798 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000))))

(assert (=> b!95912 (arrayContainsKey!0 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000)))

(declare-fun lt!47799 () Unit!2865)

(assert (=> b!95912 (= lt!47799 lt!47798)))

(declare-fun res!48444 () Bool)

(assert (=> b!95912 (= res!48444 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (_keys!4141 newMap!16) (mask!6540 newMap!16)) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!95912 (=> (not res!48444) (not e!62565))))

(assert (= (and d!25269 (not res!48443)) b!95911))

(assert (= (and b!95911 c!16119) b!95912))

(assert (= (and b!95911 (not c!16119)) b!95909))

(assert (= (and b!95912 res!48444) b!95910))

(assert (= (or b!95910 b!95909) bm!9698))

(declare-fun m!103865 () Bool)

(assert (=> bm!9698 m!103865))

(declare-fun m!103867 () Bool)

(assert (=> b!95911 m!103867))

(assert (=> b!95911 m!103867))

(declare-fun m!103869 () Bool)

(assert (=> b!95911 m!103869))

(assert (=> b!95912 m!103867))

(declare-fun m!103871 () Bool)

(assert (=> b!95912 m!103871))

(declare-fun m!103873 () Bool)

(assert (=> b!95912 m!103873))

(assert (=> b!95912 m!103867))

(declare-fun m!103875 () Bool)

(assert (=> b!95912 m!103875))

(assert (=> b!95819 d!25269))

(declare-fun d!25271 () Bool)

(declare-fun res!48445 () Bool)

(declare-fun e!62566 () Bool)

(assert (=> d!25271 (=> res!48445 e!62566)))

(assert (=> d!25271 (= res!48445 (= (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25271 (= (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000) e!62566)))

(declare-fun b!95913 () Bool)

(declare-fun e!62567 () Bool)

(assert (=> b!95913 (= e!62566 e!62567)))

(declare-fun res!48446 () Bool)

(assert (=> b!95913 (=> (not res!48446) (not e!62567))))

(assert (=> b!95913 (= res!48446 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!95914 () Bool)

(assert (=> b!95914 (= e!62567 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25271 (not res!48445)) b!95913))

(assert (= (and b!95913 res!48446) b!95914))

(assert (=> d!25271 m!103867))

(assert (=> b!95914 m!103459))

(declare-fun m!103877 () Bool)

(assert (=> b!95914 m!103877))

(assert (=> bm!9649 d!25271))

(declare-fun d!25273 () Bool)

(declare-fun e!62568 () Bool)

(assert (=> d!25273 e!62568))

(declare-fun res!48447 () Bool)

(assert (=> d!25273 (=> res!48447 e!62568)))

(declare-fun lt!47802 () Bool)

(assert (=> d!25273 (= res!48447 (not lt!47802))))

(declare-fun lt!47803 () Bool)

(assert (=> d!25273 (= lt!47802 lt!47803)))

(declare-fun lt!47804 () Unit!2865)

(declare-fun e!62569 () Unit!2865)

(assert (=> d!25273 (= lt!47804 e!62569)))

(declare-fun c!16120 () Bool)

(assert (=> d!25273 (= c!16120 lt!47803)))

(assert (=> d!25273 (= lt!47803 (containsKey!151 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25273 (= (contains!791 lt!47731 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47802)))

(declare-fun b!95915 () Bool)

(declare-fun lt!47801 () Unit!2865)

(assert (=> b!95915 (= e!62569 lt!47801)))

(assert (=> b!95915 (= lt!47801 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95915 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95916 () Bool)

(declare-fun Unit!2877 () Unit!2865)

(assert (=> b!95916 (= e!62569 Unit!2877)))

(declare-fun b!95917 () Bool)

(assert (=> b!95917 (= e!62568 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25273 c!16120) b!95915))

(assert (= (and d!25273 (not c!16120)) b!95916))

(assert (= (and d!25273 (not res!48447)) b!95917))

(declare-fun m!103879 () Bool)

(assert (=> d!25273 m!103879))

(declare-fun m!103881 () Bool)

(assert (=> b!95915 m!103881))

(declare-fun m!103883 () Bool)

(assert (=> b!95915 m!103883))

(assert (=> b!95915 m!103883))

(declare-fun m!103885 () Bool)

(assert (=> b!95915 m!103885))

(assert (=> b!95917 m!103883))

(assert (=> b!95917 m!103883))

(assert (=> b!95917 m!103885))

(assert (=> bm!9691 d!25273))

(declare-fun d!25275 () Bool)

(declare-fun e!62572 () Bool)

(assert (=> d!25275 e!62572))

(declare-fun res!48453 () Bool)

(assert (=> d!25275 (=> (not res!48453) (not e!62572))))

(declare-fun lt!47810 () SeekEntryResult!255)

(assert (=> d!25275 (= res!48453 ((_ is Found!255) lt!47810))))

(assert (=> d!25275 (= lt!47810 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun lt!47809 () Unit!2865)

(declare-fun choose!584 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2865)

(assert (=> d!25275 (= lt!47809 (choose!584 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25275 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25275 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) lt!47809)))

(declare-fun b!95922 () Bool)

(declare-fun res!48452 () Bool)

(assert (=> b!95922 (=> (not res!48452) (not e!62572))))

(assert (=> b!95922 (= res!48452 (inRange!0 (index!3163 lt!47810) (mask!6540 newMap!16)))))

(declare-fun b!95923 () Bool)

(assert (=> b!95923 (= e!62572 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47810)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!95923 (and (bvsge (index!3163 lt!47810) #b00000000000000000000000000000000) (bvslt (index!3163 lt!47810) (size!2240 (_keys!4141 newMap!16))))))

(assert (= (and d!25275 res!48453) b!95922))

(assert (= (and b!95922 res!48452) b!95923))

(assert (=> d!25275 m!103459))

(assert (=> d!25275 m!103637))

(assert (=> d!25275 m!103459))

(declare-fun m!103887 () Bool)

(assert (=> d!25275 m!103887))

(assert (=> d!25275 m!103855))

(declare-fun m!103889 () Bool)

(assert (=> b!95922 m!103889))

(declare-fun m!103891 () Bool)

(assert (=> b!95923 m!103891))

(assert (=> bm!9667 d!25275))

(declare-fun d!25277 () Bool)

(assert (=> d!25277 (= (apply!91 lt!47731 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3944 () Bool)

(assert (= bs!3944 d!25277))

(assert (=> bs!3944 m!103883))

(assert (=> bs!3944 m!103883))

(declare-fun m!103893 () Bool)

(assert (=> bs!3944 m!103893))

(assert (=> b!95794 d!25277))

(declare-fun b!95958 () Bool)

(declare-fun res!48475 () Bool)

(declare-fun e!62591 () Bool)

(assert (=> b!95958 (=> (not res!48475) (not e!62591))))

(declare-fun lt!47887 () tuple2!2316)

(assert (=> b!95958 (= res!48475 (valid!386 (_2!1169 lt!47887)))))

(declare-fun b!95959 () Bool)

(declare-fun e!62592 () Bool)

(declare-fun e!62590 () Bool)

(assert (=> b!95959 (= e!62592 e!62590)))

(declare-fun res!48479 () Bool)

(declare-fun call!9712 () Bool)

(assert (=> b!95959 (= res!48479 call!9712)))

(assert (=> b!95959 (=> (not res!48479) (not e!62590))))

(declare-fun b!95960 () Bool)

(declare-fun lt!47889 () SeekEntryResult!255)

(declare-fun e!62589 () Bool)

(assert (=> b!95960 (= e!62589 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47889)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun bm!9707 () Bool)

(declare-fun call!9713 () SeekEntryResult!255)

(assert (=> bm!9707 (= call!9713 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!95961 () Bool)

(declare-fun res!48476 () Bool)

(declare-fun e!62595 () Bool)

(assert (=> b!95961 (=> (not res!48476) (not e!62595))))

(declare-fun lt!47890 () SeekEntryResult!255)

(assert (=> b!95961 (= res!48476 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!47890)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95962 () Bool)

(declare-fun call!9711 () Bool)

(assert (=> b!95962 (= e!62590 (not call!9711))))

(declare-fun b!95963 () Bool)

(declare-fun e!62593 () Unit!2865)

(declare-fun Unit!2878 () Unit!2865)

(assert (=> b!95963 (= e!62593 Unit!2878)))

(declare-fun lt!47896 () Unit!2865)

(assert (=> b!95963 (= lt!47896 (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95963 (= lt!47889 call!9713)))

(declare-fun res!48472 () Bool)

(assert (=> b!95963 (= res!48472 ((_ is Found!255) lt!47889))))

(assert (=> b!95963 (=> (not res!48472) (not e!62589))))

(assert (=> b!95963 e!62589))

(declare-fun lt!47893 () Unit!2865)

(assert (=> b!95963 (= lt!47893 lt!47896)))

(assert (=> b!95963 false))

(declare-fun b!95964 () Bool)

(declare-fun e!62596 () Unit!2865)

(declare-fun Unit!2879 () Unit!2865)

(assert (=> b!95964 (= e!62596 Unit!2879)))

(declare-fun c!16130 () Bool)

(declare-fun c!16131 () Bool)

(declare-fun bm!9708 () Bool)

(declare-fun call!9710 () Bool)

(assert (=> bm!9708 (= call!9710 (inRange!0 (ite c!16131 (index!3163 lt!47889) (ite c!16130 (index!3162 lt!47890) (index!3165 lt!47890))) (mask!6540 newMap!16)))))

(declare-fun b!95965 () Bool)

(declare-fun res!48474 () Bool)

(assert (=> b!95965 (=> (not res!48474) (not e!62595))))

(assert (=> b!95965 (= res!48474 call!9712)))

(declare-fun e!62594 () Bool)

(assert (=> b!95965 (= e!62594 e!62595)))

(declare-fun b!95966 () Bool)

(declare-fun res!48473 () Bool)

(assert (=> b!95966 (=> (not res!48473) (not e!62591))))

(assert (=> b!95966 (= res!48473 (contains!791 (map!1237 (_2!1169 lt!47887)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!95967 () Bool)

(declare-fun res!48478 () Bool)

(assert (=> b!95967 (= res!48478 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!47890)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95967 (=> (not res!48478) (not e!62590))))

(declare-fun b!95968 () Bool)

(declare-fun res!48477 () Bool)

(assert (=> b!95968 (= res!48477 call!9710)))

(assert (=> b!95968 (=> (not res!48477) (not e!62589))))

(declare-fun b!95969 () Bool)

(assert (=> b!95969 (= e!62595 (not call!9711))))

(declare-fun bm!9709 () Bool)

(assert (=> bm!9709 (= call!9712 call!9710)))

(declare-fun bm!9710 () Bool)

(assert (=> bm!9710 (= call!9711 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!95970 () Bool)

(declare-fun lt!47891 () Unit!2865)

(assert (=> b!95970 (= e!62593 lt!47891)))

(assert (=> b!95970 (= lt!47891 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95970 (= lt!47890 call!9713)))

(assert (=> b!95970 (= c!16130 ((_ is MissingZero!255) lt!47890))))

(assert (=> b!95970 e!62594))

(declare-fun b!95971 () Bool)

(declare-fun Unit!2880 () Unit!2865)

(assert (=> b!95971 (= e!62596 Unit!2880)))

(declare-fun lt!47892 () Unit!2865)

(declare-fun lemmaArrayContainsKeyThenInListMap!24 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2865)

(assert (=> b!95971 (= lt!47892 (lemmaArrayContainsKeyThenInListMap!24 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> b!95971 (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))

(declare-fun lt!47888 () Unit!2865)

(assert (=> b!95971 (= lt!47888 lt!47892)))

(assert (=> b!95971 false))

(declare-fun d!25279 () Bool)

(assert (=> d!25279 e!62591))

(declare-fun res!48480 () Bool)

(assert (=> d!25279 (=> (not res!48480) (not e!62591))))

(assert (=> d!25279 (= res!48480 (_1!1169 lt!47887))))

(assert (=> d!25279 (= lt!47887 (tuple2!2317 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd (_size!468 newMap!16) #b00000000000000000000000000000001) (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (_vacant!468 newMap!16))))))

(declare-fun lt!47872 () Unit!2865)

(declare-fun lt!47877 () Unit!2865)

(assert (=> d!25279 (= lt!47872 lt!47877)))

(declare-fun lt!47897 () array!4193)

(declare-fun lt!47883 () array!4191)

(assert (=> d!25279 (contains!791 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(assert (=> d!25279 (= lt!47877 (lemmaValidKeyInArrayIsInListMap!99 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25279 (= lt!47897 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))))

(assert (=> d!25279 (= lt!47883 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun lt!47876 () Unit!2865)

(declare-fun lt!47899 () Unit!2865)

(assert (=> d!25279 (= lt!47876 lt!47899)))

(declare-fun lt!47881 () array!4191)

(assert (=> d!25279 (= (arrayCountValidKeys!0 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4191 (_ BitVec 32)) Unit!2865)

(assert (=> d!25279 (= lt!47899 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(assert (=> d!25279 (= lt!47881 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun lt!47880 () Unit!2865)

(declare-fun lt!47874 () Unit!2865)

(assert (=> d!25279 (= lt!47880 lt!47874)))

(declare-fun lt!47878 () array!4191)

(assert (=> d!25279 (arrayContainsKey!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!25279 (= lt!47874 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(assert (=> d!25279 (= lt!47878 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun lt!47895 () Unit!2865)

(declare-fun lt!47873 () Unit!2865)

(assert (=> d!25279 (= lt!47895 lt!47873)))

(assert (=> d!25279 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!24 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2865)

(assert (=> d!25279 (= lt!47873 (lemmaAddValidKeyToArrayThenAddPairToListMap!24 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47894 () Unit!2865)

(declare-fun lt!47900 () Unit!2865)

(assert (=> d!25279 (= lt!47894 lt!47900)))

(assert (=> d!25279 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (mask!6540 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4191 (_ BitVec 32) (_ BitVec 32)) Unit!2865)

(assert (=> d!25279 (= lt!47900 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (mask!6540 newMap!16)))))

(declare-fun lt!47875 () Unit!2865)

(declare-fun lt!47886 () Unit!2865)

(assert (=> d!25279 (= lt!47875 lt!47886)))

(assert (=> d!25279 (= (arrayCountValidKeys!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4191 (_ BitVec 32) (_ BitVec 64)) Unit!2865)

(assert (=> d!25279 (= lt!47886 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun lt!47885 () Unit!2865)

(declare-fun lt!47898 () Unit!2865)

(assert (=> d!25279 (= lt!47885 lt!47898)))

(declare-fun lt!47882 () List!1581)

(declare-fun lt!47884 () (_ BitVec 32))

(assert (=> d!25279 (arrayNoDuplicates!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) lt!47884 lt!47882)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4191 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1581) Unit!2865)

(assert (=> d!25279 (= lt!47898 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) lt!47884 lt!47882))))

(assert (=> d!25279 (= lt!47882 Nil!1578)))

(assert (=> d!25279 (= lt!47884 #b00000000000000000000000000000000)))

(declare-fun lt!47871 () Unit!2865)

(assert (=> d!25279 (= lt!47871 e!62596)))

(declare-fun c!16129 () Bool)

(assert (=> d!25279 (= c!16129 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!47879 () Unit!2865)

(assert (=> d!25279 (= lt!47879 e!62593)))

(assert (=> d!25279 (= c!16131 (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25279 (valid!386 newMap!16)))

(assert (=> d!25279 (= (updateHelperNewKey!40 newMap!16 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))) lt!47887)))

(declare-fun b!95972 () Bool)

(assert (=> b!95972 (= e!62591 (= (map!1237 (_2!1169 lt!47887)) (+!127 (map!1237 newMap!16) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95973 () Bool)

(declare-fun c!16132 () Bool)

(assert (=> b!95973 (= c!16132 ((_ is MissingVacant!255) lt!47890))))

(assert (=> b!95973 (= e!62594 e!62592)))

(declare-fun b!95974 () Bool)

(assert (=> b!95974 (= e!62592 ((_ is Undefined!255) lt!47890))))

(assert (= (and d!25279 c!16131) b!95963))

(assert (= (and d!25279 (not c!16131)) b!95970))

(assert (= (and b!95963 res!48472) b!95968))

(assert (= (and b!95968 res!48477) b!95960))

(assert (= (and b!95970 c!16130) b!95965))

(assert (= (and b!95970 (not c!16130)) b!95973))

(assert (= (and b!95965 res!48474) b!95961))

(assert (= (and b!95961 res!48476) b!95969))

(assert (= (and b!95973 c!16132) b!95959))

(assert (= (and b!95973 (not c!16132)) b!95974))

(assert (= (and b!95959 res!48479) b!95967))

(assert (= (and b!95967 res!48478) b!95962))

(assert (= (or b!95965 b!95959) bm!9709))

(assert (= (or b!95969 b!95962) bm!9710))

(assert (= (or b!95968 bm!9709) bm!9708))

(assert (= (or b!95963 b!95970) bm!9707))

(assert (= (and d!25279 c!16129) b!95971))

(assert (= (and d!25279 (not c!16129)) b!95964))

(assert (= (and d!25279 res!48480) b!95958))

(assert (= (and b!95958 res!48475) b!95966))

(assert (= (and b!95966 res!48473) b!95972))

(assert (=> b!95963 m!103459))

(assert (=> b!95963 m!103639))

(declare-fun m!103895 () Bool)

(assert (=> d!25279 m!103895))

(declare-fun m!103897 () Bool)

(assert (=> d!25279 m!103897))

(assert (=> d!25279 m!103459))

(assert (=> d!25279 m!103621))

(assert (=> d!25279 m!103459))

(declare-fun m!103899 () Bool)

(assert (=> d!25279 m!103899))

(assert (=> d!25279 m!103619))

(assert (=> d!25279 m!103619))

(declare-fun m!103901 () Bool)

(assert (=> d!25279 m!103901))

(assert (=> d!25279 m!103459))

(declare-fun m!103903 () Bool)

(assert (=> d!25279 m!103903))

(declare-fun m!103905 () Bool)

(assert (=> d!25279 m!103905))

(assert (=> d!25279 m!103459))

(assert (=> d!25279 m!103491))

(declare-fun m!103907 () Bool)

(assert (=> d!25279 m!103907))

(declare-fun m!103909 () Bool)

(assert (=> d!25279 m!103909))

(declare-fun m!103911 () Bool)

(assert (=> d!25279 m!103911))

(declare-fun m!103913 () Bool)

(assert (=> d!25279 m!103913))

(assert (=> d!25279 m!103729))

(assert (=> d!25279 m!103909))

(declare-fun m!103915 () Bool)

(assert (=> d!25279 m!103915))

(assert (=> d!25279 m!103911))

(assert (=> d!25279 m!103459))

(declare-fun m!103917 () Bool)

(assert (=> d!25279 m!103917))

(assert (=> d!25279 m!103483))

(declare-fun m!103919 () Bool)

(assert (=> d!25279 m!103919))

(assert (=> d!25279 m!103619))

(assert (=> d!25279 m!103459))

(declare-fun m!103921 () Bool)

(assert (=> d!25279 m!103921))

(declare-fun m!103923 () Bool)

(assert (=> d!25279 m!103923))

(assert (=> d!25279 m!103459))

(declare-fun m!103925 () Bool)

(assert (=> d!25279 m!103925))

(declare-fun m!103927 () Bool)

(assert (=> d!25279 m!103927))

(declare-fun m!103929 () Bool)

(assert (=> d!25279 m!103929))

(declare-fun m!103931 () Bool)

(assert (=> d!25279 m!103931))

(assert (=> d!25279 m!103459))

(declare-fun m!103933 () Bool)

(assert (=> d!25279 m!103933))

(assert (=> b!95970 m!103459))

(assert (=> b!95970 m!103645))

(assert (=> bm!9707 m!103459))

(assert (=> bm!9707 m!103637))

(declare-fun m!103935 () Bool)

(assert (=> b!95958 m!103935))

(assert (=> bm!9710 m!103459))

(assert (=> bm!9710 m!103621))

(declare-fun m!103937 () Bool)

(assert (=> b!95966 m!103937))

(assert (=> b!95966 m!103937))

(assert (=> b!95966 m!103459))

(declare-fun m!103939 () Bool)

(assert (=> b!95966 m!103939))

(declare-fun m!103941 () Bool)

(assert (=> b!95967 m!103941))

(assert (=> b!95972 m!103937))

(assert (=> b!95972 m!103461))

(assert (=> b!95972 m!103461))

(declare-fun m!103943 () Bool)

(assert (=> b!95972 m!103943))

(declare-fun m!103945 () Bool)

(assert (=> bm!9708 m!103945))

(assert (=> b!95971 m!103459))

(declare-fun m!103947 () Bool)

(assert (=> b!95971 m!103947))

(assert (=> b!95971 m!103619))

(assert (=> b!95971 m!103619))

(assert (=> b!95971 m!103459))

(assert (=> b!95971 m!103921))

(declare-fun m!103949 () Bool)

(assert (=> b!95961 m!103949))

(declare-fun m!103951 () Bool)

(assert (=> b!95960 m!103951))

(assert (=> bm!9660 d!25279))

(declare-fun d!25281 () Bool)

(declare-fun res!48481 () Bool)

(declare-fun e!62597 () Bool)

(assert (=> d!25281 (=> (not res!48481) (not e!62597))))

(assert (=> d!25281 (= res!48481 (simpleValid!67 (_2!1169 lt!47642)))))

(assert (=> d!25281 (= (valid!386 (_2!1169 lt!47642)) e!62597)))

(declare-fun b!95975 () Bool)

(declare-fun res!48482 () Bool)

(assert (=> b!95975 (=> (not res!48482) (not e!62597))))

(assert (=> b!95975 (= res!48482 (= (arrayCountValidKeys!0 (_keys!4141 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))) (_size!468 (_2!1169 lt!47642))))))

(declare-fun b!95976 () Bool)

(declare-fun res!48483 () Bool)

(assert (=> b!95976 (=> (not res!48483) (not e!62597))))

(assert (=> b!95976 (= res!48483 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642))))))

(declare-fun b!95977 () Bool)

(assert (=> b!95977 (= e!62597 (arrayNoDuplicates!0 (_keys!4141 (_2!1169 lt!47642)) #b00000000000000000000000000000000 Nil!1578))))

(assert (= (and d!25281 res!48481) b!95975))

(assert (= (and b!95975 res!48482) b!95976))

(assert (= (and b!95976 res!48483) b!95977))

(declare-fun m!103953 () Bool)

(assert (=> d!25281 m!103953))

(declare-fun m!103955 () Bool)

(assert (=> b!95975 m!103955))

(declare-fun m!103957 () Bool)

(assert (=> b!95976 m!103957))

(declare-fun m!103959 () Bool)

(assert (=> b!95977 m!103959))

(assert (=> d!25209 d!25281))

(assert (=> d!25209 d!25225))

(declare-fun d!25283 () Bool)

(assert (=> d!25283 (= (get!1277 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95748 d!25283))

(declare-fun d!25285 () Bool)

(declare-fun e!62598 () Bool)

(assert (=> d!25285 e!62598))

(declare-fun res!48485 () Bool)

(assert (=> d!25285 (=> (not res!48485) (not e!62598))))

(declare-fun lt!47903 () ListLongMap!1507)

(assert (=> d!25285 (= res!48485 (contains!791 lt!47903 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47901 () List!1580)

(assert (=> d!25285 (= lt!47903 (ListLongMap!1508 lt!47901))))

(declare-fun lt!47902 () Unit!2865)

(declare-fun lt!47904 () Unit!2865)

(assert (=> d!25285 (= lt!47902 lt!47904)))

(assert (=> d!25285 (= (getValueByKey!147 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25285 (= lt!47904 (lemmaContainsTupThenGetReturnValue!66 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25285 (= lt!47901 (insertStrictlySorted!69 (toList!769 e!62461) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25285 (= (+!127 e!62461 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47903)))

(declare-fun b!95978 () Bool)

(declare-fun res!48484 () Bool)

(assert (=> b!95978 (=> (not res!48484) (not e!62598))))

(assert (=> b!95978 (= res!48484 (= (getValueByKey!147 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95979 () Bool)

(assert (=> b!95979 (= e!62598 (contains!793 (toList!769 lt!47903) (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25285 res!48485) b!95978))

(assert (= (and b!95978 res!48484) b!95979))

(declare-fun m!103961 () Bool)

(assert (=> d!25285 m!103961))

(declare-fun m!103963 () Bool)

(assert (=> d!25285 m!103963))

(declare-fun m!103965 () Bool)

(assert (=> d!25285 m!103965))

(declare-fun m!103967 () Bool)

(assert (=> d!25285 m!103967))

(declare-fun m!103969 () Bool)

(assert (=> b!95978 m!103969))

(declare-fun m!103971 () Bool)

(assert (=> b!95979 m!103971))

(assert (=> bm!9651 d!25285))

(declare-fun d!25287 () Bool)

(declare-fun lt!47907 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!99 (List!1581) (InoxSet (_ BitVec 64)))

(assert (=> d!25287 (= lt!47907 (select (content!99 Nil!1578) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun e!62603 () Bool)

(assert (=> d!25287 (= lt!47907 e!62603)))

(declare-fun res!48491 () Bool)

(assert (=> d!25287 (=> (not res!48491) (not e!62603))))

(assert (=> d!25287 (= res!48491 ((_ is Cons!1577) Nil!1578))))

(assert (=> d!25287 (= (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!47907)))

(declare-fun b!95984 () Bool)

(declare-fun e!62604 () Bool)

(assert (=> b!95984 (= e!62603 e!62604)))

(declare-fun res!48490 () Bool)

(assert (=> b!95984 (=> res!48490 e!62604)))

(assert (=> b!95984 (= res!48490 (= (h!2170 Nil!1578) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!95985 () Bool)

(assert (=> b!95985 (= e!62604 (contains!792 (t!5494 Nil!1578) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25287 res!48491) b!95984))

(assert (= (and b!95984 (not res!48490)) b!95985))

(declare-fun m!103973 () Bool)

(assert (=> d!25287 m!103973))

(assert (=> d!25287 m!103459))

(declare-fun m!103975 () Bool)

(assert (=> d!25287 m!103975))

(assert (=> b!95985 m!103459))

(declare-fun m!103977 () Bool)

(assert (=> b!95985 m!103977))

(assert (=> b!95603 d!25287))

(declare-fun bm!9711 () Bool)

(declare-fun call!9715 () ListLongMap!1507)

(assert (=> bm!9711 (= call!9715 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95986 () Bool)

(declare-fun e!62610 () Unit!2865)

(declare-fun Unit!2881 () Unit!2865)

(assert (=> b!95986 (= e!62610 Unit!2881)))

(declare-fun bm!9712 () Bool)

(declare-fun call!9718 () ListLongMap!1507)

(assert (=> bm!9712 (= call!9718 call!9715)))

(declare-fun b!95987 () Bool)

(declare-fun lt!47926 () Unit!2865)

(assert (=> b!95987 (= e!62610 lt!47926)))

(declare-fun lt!47920 () ListLongMap!1507)

(assert (=> b!95987 (= lt!47920 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47927 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47927 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47914 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47914 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47911 () Unit!2865)

(assert (=> b!95987 (= lt!47911 (addStillContains!67 lt!47920 lt!47927 (zeroValue!2341 newMap!16) lt!47914))))

(assert (=> b!95987 (contains!791 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) lt!47914)))

(declare-fun lt!47924 () Unit!2865)

(assert (=> b!95987 (= lt!47924 lt!47911)))

(declare-fun lt!47923 () ListLongMap!1507)

(assert (=> b!95987 (= lt!47923 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47908 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47908 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47909 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47909 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47925 () Unit!2865)

(assert (=> b!95987 (= lt!47925 (addApplyDifferent!67 lt!47923 lt!47908 (minValue!2341 newMap!16) lt!47909))))

(assert (=> b!95987 (= (apply!91 (+!127 lt!47923 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) lt!47909) (apply!91 lt!47923 lt!47909))))

(declare-fun lt!47910 () Unit!2865)

(assert (=> b!95987 (= lt!47910 lt!47925)))

(declare-fun lt!47928 () ListLongMap!1507)

(assert (=> b!95987 (= lt!47928 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47922 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47922 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47913 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47913 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47917 () Unit!2865)

(assert (=> b!95987 (= lt!47917 (addApplyDifferent!67 lt!47928 lt!47922 (zeroValue!2341 newMap!16) lt!47913))))

(assert (=> b!95987 (= (apply!91 (+!127 lt!47928 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) lt!47913) (apply!91 lt!47928 lt!47913))))

(declare-fun lt!47918 () Unit!2865)

(assert (=> b!95987 (= lt!47918 lt!47917)))

(declare-fun lt!47919 () ListLongMap!1507)

(assert (=> b!95987 (= lt!47919 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47916 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47916 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47921 () (_ BitVec 64))

(assert (=> b!95987 (= lt!47921 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95987 (= lt!47926 (addApplyDifferent!67 lt!47919 lt!47916 (minValue!2341 newMap!16) lt!47921))))

(assert (=> b!95987 (= (apply!91 (+!127 lt!47919 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) lt!47921) (apply!91 lt!47919 lt!47921))))

(declare-fun b!95988 () Bool)

(declare-fun e!62609 () ListLongMap!1507)

(declare-fun call!9717 () ListLongMap!1507)

(assert (=> b!95988 (= e!62609 (+!127 call!9717 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!95990 () Bool)

(declare-fun e!62611 () Bool)

(declare-fun call!9719 () Bool)

(assert (=> b!95990 (= e!62611 (not call!9719))))

(declare-fun b!95991 () Bool)

(declare-fun e!62607 () Bool)

(declare-fun e!62608 () Bool)

(assert (=> b!95991 (= e!62607 e!62608)))

(declare-fun c!16133 () Bool)

(assert (=> b!95991 (= c!16133 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95992 () Bool)

(declare-fun e!62617 () Bool)

(declare-fun lt!47929 () ListLongMap!1507)

(assert (=> b!95992 (= e!62617 (= (apply!91 lt!47929 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (_values!2439 newMap!16))))))

(assert (=> b!95992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!95993 () Bool)

(declare-fun e!62613 () ListLongMap!1507)

(assert (=> b!95993 (= e!62609 e!62613)))

(declare-fun c!16137 () Bool)

(assert (=> b!95993 (= c!16137 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95994 () Bool)

(declare-fun call!9716 () Bool)

(assert (=> b!95994 (= e!62608 (not call!9716))))

(declare-fun b!95995 () Bool)

(declare-fun e!62614 () Bool)

(assert (=> b!95995 (= e!62611 e!62614)))

(declare-fun res!48493 () Bool)

(assert (=> b!95995 (= res!48493 call!9719)))

(assert (=> b!95995 (=> (not res!48493) (not e!62614))))

(declare-fun b!95996 () Bool)

(declare-fun res!48497 () Bool)

(assert (=> b!95996 (=> (not res!48497) (not e!62607))))

(declare-fun e!62605 () Bool)

(assert (=> b!95996 (= res!48497 e!62605)))

(declare-fun res!48498 () Bool)

(assert (=> b!95996 (=> res!48498 e!62605)))

(declare-fun e!62612 () Bool)

(assert (=> b!95996 (= res!48498 (not e!62612))))

(declare-fun res!48495 () Bool)

(assert (=> b!95996 (=> (not res!48495) (not e!62612))))

(assert (=> b!95996 (= res!48495 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9713 () Bool)

(assert (=> bm!9713 (= call!9716 (contains!791 lt!47929 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95997 () Bool)

(declare-fun call!9714 () ListLongMap!1507)

(assert (=> b!95997 (= e!62613 call!9714)))

(declare-fun b!95998 () Bool)

(assert (=> b!95998 (= e!62612 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95999 () Bool)

(declare-fun e!62606 () Bool)

(assert (=> b!95999 (= e!62608 e!62606)))

(declare-fun res!48500 () Bool)

(assert (=> b!95999 (= res!48500 call!9716)))

(assert (=> b!95999 (=> (not res!48500) (not e!62606))))

(declare-fun b!96000 () Bool)

(assert (=> b!96000 (= e!62605 e!62617)))

(declare-fun res!48496 () Bool)

(assert (=> b!96000 (=> (not res!48496) (not e!62617))))

(assert (=> b!96000 (= res!48496 (contains!791 lt!47929 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96000 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96001 () Bool)

(declare-fun e!62616 () ListLongMap!1507)

(assert (=> b!96001 (= e!62616 call!9714)))

(declare-fun b!96002 () Bool)

(declare-fun e!62615 () Bool)

(assert (=> b!96002 (= e!62615 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96003 () Bool)

(declare-fun res!48499 () Bool)

(assert (=> b!96003 (=> (not res!48499) (not e!62607))))

(assert (=> b!96003 (= res!48499 e!62611)))

(declare-fun c!16136 () Bool)

(assert (=> b!96003 (= c!16136 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96004 () Bool)

(declare-fun c!16138 () Bool)

(assert (=> b!96004 (= c!16138 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96004 (= e!62613 e!62616)))

(declare-fun bm!9714 () Bool)

(assert (=> bm!9714 (= call!9714 call!9717)))

(declare-fun b!96005 () Bool)

(assert (=> b!96005 (= e!62606 (= (apply!91 lt!47929 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96006 () Bool)

(declare-fun call!9720 () ListLongMap!1507)

(assert (=> b!96006 (= e!62616 call!9720)))

(declare-fun b!95989 () Bool)

(assert (=> b!95989 (= e!62614 (= (apply!91 lt!47929 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25289 () Bool)

(assert (=> d!25289 e!62607))

(declare-fun res!48492 () Bool)

(assert (=> d!25289 (=> (not res!48492) (not e!62607))))

(assert (=> d!25289 (= res!48492 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!47915 () ListLongMap!1507)

(assert (=> d!25289 (= lt!47929 lt!47915)))

(declare-fun lt!47912 () Unit!2865)

(assert (=> d!25289 (= lt!47912 e!62610)))

(declare-fun c!16135 () Bool)

(assert (=> d!25289 (= c!16135 e!62615)))

(declare-fun res!48494 () Bool)

(assert (=> d!25289 (=> (not res!48494) (not e!62615))))

(assert (=> d!25289 (= res!48494 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25289 (= lt!47915 e!62609)))

(declare-fun c!16134 () Bool)

(assert (=> d!25289 (= c!16134 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25289 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25289 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!47929)))

(declare-fun bm!9715 () Bool)

(assert (=> bm!9715 (= call!9717 (+!127 (ite c!16134 call!9715 (ite c!16137 call!9718 call!9720)) (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9716 () Bool)

(assert (=> bm!9716 (= call!9719 (contains!791 lt!47929 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9717 () Bool)

(assert (=> bm!9717 (= call!9720 call!9718)))

(assert (= (and d!25289 c!16134) b!95988))

(assert (= (and d!25289 (not c!16134)) b!95993))

(assert (= (and b!95993 c!16137) b!95997))

(assert (= (and b!95993 (not c!16137)) b!96004))

(assert (= (and b!96004 c!16138) b!96001))

(assert (= (and b!96004 (not c!16138)) b!96006))

(assert (= (or b!96001 b!96006) bm!9717))

(assert (= (or b!95997 bm!9717) bm!9712))

(assert (= (or b!95997 b!96001) bm!9714))

(assert (= (or b!95988 bm!9712) bm!9711))

(assert (= (or b!95988 bm!9714) bm!9715))

(assert (= (and d!25289 res!48494) b!96002))

(assert (= (and d!25289 c!16135) b!95987))

(assert (= (and d!25289 (not c!16135)) b!95986))

(assert (= (and d!25289 res!48492) b!95996))

(assert (= (and b!95996 res!48495) b!95998))

(assert (= (and b!95996 (not res!48498)) b!96000))

(assert (= (and b!96000 res!48496) b!95992))

(assert (= (and b!95996 res!48497) b!96003))

(assert (= (and b!96003 c!16136) b!95995))

(assert (= (and b!96003 (not c!16136)) b!95990))

(assert (= (and b!95995 res!48493) b!95989))

(assert (= (or b!95995 b!95990) bm!9716))

(assert (= (and b!96003 res!48499) b!95991))

(assert (= (and b!95991 c!16133) b!95999))

(assert (= (and b!95991 (not c!16133)) b!95994))

(assert (= (and b!95999 res!48500) b!96005))

(assert (= (or b!95999 b!95994) bm!9713))

(declare-fun b_lambda!4237 () Bool)

(assert (=> (not b_lambda!4237) (not b!95992)))

(declare-fun tb!1893 () Bool)

(declare-fun t!5505 () Bool)

(assert (=> (and b!95454 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16)) t!5505) tb!1893))

(declare-fun result!3225 () Bool)

(assert (=> tb!1893 (= result!3225 tp_is_empty!2617)))

(assert (=> b!95992 t!5505))

(declare-fun b_and!5861 () Bool)

(assert (= b_and!5857 (and (=> t!5505 result!3225) b_and!5861)))

(declare-fun t!5507 () Bool)

(declare-fun tb!1895 () Bool)

(assert (=> (and b!95447 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 newMap!16)) t!5507) tb!1895))

(declare-fun result!3227 () Bool)

(assert (= result!3227 result!3225))

(assert (=> b!95992 t!5507))

(declare-fun b_and!5863 () Bool)

(assert (= b_and!5859 (and (=> t!5507 result!3227) b_and!5863)))

(declare-fun m!103979 () Bool)

(assert (=> bm!9713 m!103979))

(declare-fun m!103981 () Bool)

(assert (=> b!96005 m!103981))

(assert (=> b!96000 m!103867))

(assert (=> b!96000 m!103867))

(declare-fun m!103983 () Bool)

(assert (=> b!96000 m!103983))

(declare-fun m!103985 () Bool)

(assert (=> b!95988 m!103985))

(assert (=> d!25289 m!103855))

(assert (=> b!95992 m!103867))

(declare-fun m!103987 () Bool)

(assert (=> b!95992 m!103987))

(declare-fun m!103989 () Bool)

(assert (=> b!95992 m!103989))

(assert (=> b!95992 m!103867))

(declare-fun m!103991 () Bool)

(assert (=> b!95992 m!103991))

(assert (=> b!95992 m!103989))

(declare-fun m!103993 () Bool)

(assert (=> b!95992 m!103993))

(assert (=> b!95992 m!103991))

(declare-fun m!103995 () Bool)

(assert (=> bm!9715 m!103995))

(declare-fun m!103997 () Bool)

(assert (=> bm!9716 m!103997))

(declare-fun m!103999 () Bool)

(assert (=> b!95987 m!103999))

(declare-fun m!104001 () Bool)

(assert (=> b!95987 m!104001))

(declare-fun m!104003 () Bool)

(assert (=> b!95987 m!104003))

(declare-fun m!104005 () Bool)

(assert (=> b!95987 m!104005))

(declare-fun m!104007 () Bool)

(assert (=> b!95987 m!104007))

(declare-fun m!104009 () Bool)

(assert (=> b!95987 m!104009))

(declare-fun m!104011 () Bool)

(assert (=> b!95987 m!104011))

(declare-fun m!104013 () Bool)

(assert (=> b!95987 m!104013))

(declare-fun m!104015 () Bool)

(assert (=> b!95987 m!104015))

(declare-fun m!104017 () Bool)

(assert (=> b!95987 m!104017))

(assert (=> b!95987 m!104015))

(declare-fun m!104019 () Bool)

(assert (=> b!95987 m!104019))

(declare-fun m!104021 () Bool)

(assert (=> b!95987 m!104021))

(declare-fun m!104023 () Bool)

(assert (=> b!95987 m!104023))

(assert (=> b!95987 m!104021))

(assert (=> b!95987 m!104011))

(assert (=> b!95987 m!103999))

(declare-fun m!104025 () Bool)

(assert (=> b!95987 m!104025))

(declare-fun m!104027 () Bool)

(assert (=> b!95987 m!104027))

(assert (=> b!95987 m!103867))

(declare-fun m!104029 () Bool)

(assert (=> b!95987 m!104029))

(assert (=> b!95998 m!103867))

(assert (=> b!95998 m!103867))

(assert (=> b!95998 m!103869))

(assert (=> bm!9711 m!104025))

(assert (=> b!96002 m!103867))

(assert (=> b!96002 m!103867))

(assert (=> b!96002 m!103869))

(declare-fun m!104031 () Bool)

(assert (=> b!95989 m!104031))

(assert (=> d!25221 d!25289))

(assert (=> d!25223 d!25213))

(declare-fun bm!9718 () Bool)

(declare-fun call!9722 () ListLongMap!1507)

(assert (=> bm!9718 (= call!9722 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96007 () Bool)

(declare-fun e!62623 () Unit!2865)

(declare-fun Unit!2882 () Unit!2865)

(assert (=> b!96007 (= e!62623 Unit!2882)))

(declare-fun bm!9719 () Bool)

(declare-fun call!9725 () ListLongMap!1507)

(assert (=> bm!9719 (= call!9725 call!9722)))

(declare-fun b!96008 () Bool)

(declare-fun lt!47948 () Unit!2865)

(assert (=> b!96008 (= e!62623 lt!47948)))

(declare-fun lt!47942 () ListLongMap!1507)

(assert (=> b!96008 (= lt!47942 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47949 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47949 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47936 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47936 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47933 () Unit!2865)

(assert (=> b!96008 (= lt!47933 (addStillContains!67 lt!47942 lt!47949 (zeroValue!2341 newMap!16) lt!47936))))

(assert (=> b!96008 (contains!791 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) lt!47936)))

(declare-fun lt!47946 () Unit!2865)

(assert (=> b!96008 (= lt!47946 lt!47933)))

(declare-fun lt!47945 () ListLongMap!1507)

(assert (=> b!96008 (= lt!47945 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47930 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47930 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47931 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47931 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47947 () Unit!2865)

(assert (=> b!96008 (= lt!47947 (addApplyDifferent!67 lt!47945 lt!47930 (minValue!2341 newMap!16) lt!47931))))

(assert (=> b!96008 (= (apply!91 (+!127 lt!47945 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) lt!47931) (apply!91 lt!47945 lt!47931))))

(declare-fun lt!47932 () Unit!2865)

(assert (=> b!96008 (= lt!47932 lt!47947)))

(declare-fun lt!47950 () ListLongMap!1507)

(assert (=> b!96008 (= lt!47950 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47944 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47944 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47935 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47935 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47939 () Unit!2865)

(assert (=> b!96008 (= lt!47939 (addApplyDifferent!67 lt!47950 lt!47944 (zeroValue!2341 newMap!16) lt!47935))))

(assert (=> b!96008 (= (apply!91 (+!127 lt!47950 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) lt!47935) (apply!91 lt!47950 lt!47935))))

(declare-fun lt!47940 () Unit!2865)

(assert (=> b!96008 (= lt!47940 lt!47939)))

(declare-fun lt!47941 () ListLongMap!1507)

(assert (=> b!96008 (= lt!47941 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47938 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47938 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47943 () (_ BitVec 64))

(assert (=> b!96008 (= lt!47943 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96008 (= lt!47948 (addApplyDifferent!67 lt!47941 lt!47938 (minValue!2341 newMap!16) lt!47943))))

(assert (=> b!96008 (= (apply!91 (+!127 lt!47941 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) lt!47943) (apply!91 lt!47941 lt!47943))))

(declare-fun b!96009 () Bool)

(declare-fun e!62622 () ListLongMap!1507)

(declare-fun call!9724 () ListLongMap!1507)

(assert (=> b!96009 (= e!62622 (+!127 call!9724 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96011 () Bool)

(declare-fun e!62624 () Bool)

(declare-fun call!9726 () Bool)

(assert (=> b!96011 (= e!62624 (not call!9726))))

(declare-fun b!96012 () Bool)

(declare-fun e!62620 () Bool)

(declare-fun e!62621 () Bool)

(assert (=> b!96012 (= e!62620 e!62621)))

(declare-fun c!16139 () Bool)

(assert (=> b!96012 (= c!16139 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96013 () Bool)

(declare-fun e!62630 () Bool)

(declare-fun lt!47951 () ListLongMap!1507)

(assert (=> b!96013 (= e!62630 (= (apply!91 lt!47951 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))))))))

(assert (=> b!96013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96014 () Bool)

(declare-fun e!62626 () ListLongMap!1507)

(assert (=> b!96014 (= e!62622 e!62626)))

(declare-fun c!16143 () Bool)

(assert (=> b!96014 (= c!16143 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96015 () Bool)

(declare-fun call!9723 () Bool)

(assert (=> b!96015 (= e!62621 (not call!9723))))

(declare-fun b!96016 () Bool)

(declare-fun e!62627 () Bool)

(assert (=> b!96016 (= e!62624 e!62627)))

(declare-fun res!48502 () Bool)

(assert (=> b!96016 (= res!48502 call!9726)))

(assert (=> b!96016 (=> (not res!48502) (not e!62627))))

(declare-fun b!96017 () Bool)

(declare-fun res!48506 () Bool)

(assert (=> b!96017 (=> (not res!48506) (not e!62620))))

(declare-fun e!62618 () Bool)

(assert (=> b!96017 (= res!48506 e!62618)))

(declare-fun res!48507 () Bool)

(assert (=> b!96017 (=> res!48507 e!62618)))

(declare-fun e!62625 () Bool)

(assert (=> b!96017 (= res!48507 (not e!62625))))

(declare-fun res!48504 () Bool)

(assert (=> b!96017 (=> (not res!48504) (not e!62625))))

(assert (=> b!96017 (= res!48504 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9720 () Bool)

(assert (=> bm!9720 (= call!9723 (contains!791 lt!47951 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96018 () Bool)

(declare-fun call!9721 () ListLongMap!1507)

(assert (=> b!96018 (= e!62626 call!9721)))

(declare-fun b!96019 () Bool)

(assert (=> b!96019 (= e!62625 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96020 () Bool)

(declare-fun e!62619 () Bool)

(assert (=> b!96020 (= e!62621 e!62619)))

(declare-fun res!48509 () Bool)

(assert (=> b!96020 (= res!48509 call!9723)))

(assert (=> b!96020 (=> (not res!48509) (not e!62619))))

(declare-fun b!96021 () Bool)

(assert (=> b!96021 (= e!62618 e!62630)))

(declare-fun res!48505 () Bool)

(assert (=> b!96021 (=> (not res!48505) (not e!62630))))

(assert (=> b!96021 (= res!48505 (contains!791 lt!47951 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96021 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96022 () Bool)

(declare-fun e!62629 () ListLongMap!1507)

(assert (=> b!96022 (= e!62629 call!9721)))

(declare-fun b!96023 () Bool)

(declare-fun e!62628 () Bool)

(assert (=> b!96023 (= e!62628 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96024 () Bool)

(declare-fun res!48508 () Bool)

(assert (=> b!96024 (=> (not res!48508) (not e!62620))))

(assert (=> b!96024 (= res!48508 e!62624)))

(declare-fun c!16142 () Bool)

(assert (=> b!96024 (= c!16142 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96025 () Bool)

(declare-fun c!16144 () Bool)

(assert (=> b!96025 (= c!16144 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96025 (= e!62626 e!62629)))

(declare-fun bm!9721 () Bool)

(assert (=> bm!9721 (= call!9721 call!9724)))

(declare-fun b!96026 () Bool)

(assert (=> b!96026 (= e!62619 (= (apply!91 lt!47951 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96027 () Bool)

(declare-fun call!9727 () ListLongMap!1507)

(assert (=> b!96027 (= e!62629 call!9727)))

(declare-fun b!96010 () Bool)

(assert (=> b!96010 (= e!62627 (= (apply!91 lt!47951 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25291 () Bool)

(assert (=> d!25291 e!62620))

(declare-fun res!48501 () Bool)

(assert (=> d!25291 (=> (not res!48501) (not e!62620))))

(assert (=> d!25291 (= res!48501 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!47937 () ListLongMap!1507)

(assert (=> d!25291 (= lt!47951 lt!47937)))

(declare-fun lt!47934 () Unit!2865)

(assert (=> d!25291 (= lt!47934 e!62623)))

(declare-fun c!16141 () Bool)

(assert (=> d!25291 (= c!16141 e!62628)))

(declare-fun res!48503 () Bool)

(assert (=> d!25291 (=> (not res!48503) (not e!62628))))

(assert (=> d!25291 (= res!48503 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25291 (= lt!47937 e!62622)))

(declare-fun c!16140 () Bool)

(assert (=> d!25291 (= c!16140 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25291 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25291 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!47951)))

(declare-fun bm!9722 () Bool)

(assert (=> bm!9722 (= call!9724 (+!127 (ite c!16140 call!9722 (ite c!16143 call!9725 call!9727)) (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9723 () Bool)

(assert (=> bm!9723 (= call!9726 (contains!791 lt!47951 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9724 () Bool)

(assert (=> bm!9724 (= call!9727 call!9725)))

(assert (= (and d!25291 c!16140) b!96009))

(assert (= (and d!25291 (not c!16140)) b!96014))

(assert (= (and b!96014 c!16143) b!96018))

(assert (= (and b!96014 (not c!16143)) b!96025))

(assert (= (and b!96025 c!16144) b!96022))

(assert (= (and b!96025 (not c!16144)) b!96027))

(assert (= (or b!96022 b!96027) bm!9724))

(assert (= (or b!96018 bm!9724) bm!9719))

(assert (= (or b!96018 b!96022) bm!9721))

(assert (= (or b!96009 bm!9719) bm!9718))

(assert (= (or b!96009 bm!9721) bm!9722))

(assert (= (and d!25291 res!48503) b!96023))

(assert (= (and d!25291 c!16141) b!96008))

(assert (= (and d!25291 (not c!16141)) b!96007))

(assert (= (and d!25291 res!48501) b!96017))

(assert (= (and b!96017 res!48504) b!96019))

(assert (= (and b!96017 (not res!48507)) b!96021))

(assert (= (and b!96021 res!48505) b!96013))

(assert (= (and b!96017 res!48506) b!96024))

(assert (= (and b!96024 c!16142) b!96016))

(assert (= (and b!96024 (not c!16142)) b!96011))

(assert (= (and b!96016 res!48502) b!96010))

(assert (= (or b!96016 b!96011) bm!9723))

(assert (= (and b!96024 res!48508) b!96012))

(assert (= (and b!96012 c!16139) b!96020))

(assert (= (and b!96012 (not c!16139)) b!96015))

(assert (= (and b!96020 res!48509) b!96026))

(assert (= (or b!96020 b!96015) bm!9720))

(declare-fun b_lambda!4239 () Bool)

(assert (=> (not b_lambda!4239) (not b!96013)))

(assert (=> b!96013 t!5505))

(declare-fun b_and!5865 () Bool)

(assert (= b_and!5861 (and (=> t!5505 result!3225) b_and!5865)))

(assert (=> b!96013 t!5507))

(declare-fun b_and!5867 () Bool)

(assert (= b_and!5863 (and (=> t!5507 result!3227) b_and!5867)))

(declare-fun m!104033 () Bool)

(assert (=> bm!9720 m!104033))

(declare-fun m!104035 () Bool)

(assert (=> b!96026 m!104035))

(assert (=> b!96021 m!103867))

(assert (=> b!96021 m!103867))

(declare-fun m!104037 () Bool)

(assert (=> b!96021 m!104037))

(declare-fun m!104039 () Bool)

(assert (=> b!96009 m!104039))

(assert (=> d!25291 m!103855))

(assert (=> b!96013 m!103867))

(declare-fun m!104041 () Bool)

(assert (=> b!96013 m!104041))

(assert (=> b!96013 m!103989))

(assert (=> b!96013 m!103867))

(declare-fun m!104043 () Bool)

(assert (=> b!96013 m!104043))

(assert (=> b!96013 m!103989))

(declare-fun m!104045 () Bool)

(assert (=> b!96013 m!104045))

(assert (=> b!96013 m!104043))

(declare-fun m!104047 () Bool)

(assert (=> bm!9722 m!104047))

(declare-fun m!104049 () Bool)

(assert (=> bm!9723 m!104049))

(declare-fun m!104051 () Bool)

(assert (=> b!96008 m!104051))

(declare-fun m!104053 () Bool)

(assert (=> b!96008 m!104053))

(declare-fun m!104055 () Bool)

(assert (=> b!96008 m!104055))

(declare-fun m!104057 () Bool)

(assert (=> b!96008 m!104057))

(declare-fun m!104059 () Bool)

(assert (=> b!96008 m!104059))

(declare-fun m!104061 () Bool)

(assert (=> b!96008 m!104061))

(declare-fun m!104063 () Bool)

(assert (=> b!96008 m!104063))

(declare-fun m!104065 () Bool)

(assert (=> b!96008 m!104065))

(declare-fun m!104067 () Bool)

(assert (=> b!96008 m!104067))

(declare-fun m!104069 () Bool)

(assert (=> b!96008 m!104069))

(assert (=> b!96008 m!104067))

(declare-fun m!104071 () Bool)

(assert (=> b!96008 m!104071))

(declare-fun m!104073 () Bool)

(assert (=> b!96008 m!104073))

(declare-fun m!104075 () Bool)

(assert (=> b!96008 m!104075))

(assert (=> b!96008 m!104073))

(assert (=> b!96008 m!104063))

(assert (=> b!96008 m!104051))

(declare-fun m!104077 () Bool)

(assert (=> b!96008 m!104077))

(declare-fun m!104079 () Bool)

(assert (=> b!96008 m!104079))

(assert (=> b!96008 m!103867))

(declare-fun m!104081 () Bool)

(assert (=> b!96008 m!104081))

(assert (=> b!96019 m!103867))

(assert (=> b!96019 m!103867))

(assert (=> b!96019 m!103869))

(assert (=> bm!9718 m!104077))

(assert (=> b!96023 m!103867))

(assert (=> b!96023 m!103867))

(assert (=> b!96023 m!103869))

(declare-fun m!104083 () Bool)

(assert (=> b!96010 m!104083))

(assert (=> bm!9670 d!25291))

(declare-fun d!25293 () Bool)

(declare-fun e!62631 () Bool)

(assert (=> d!25293 e!62631))

(declare-fun res!48511 () Bool)

(assert (=> d!25293 (=> (not res!48511) (not e!62631))))

(declare-fun lt!47954 () ListLongMap!1507)

(assert (=> d!25293 (= res!48511 (contains!791 lt!47954 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47952 () List!1580)

(assert (=> d!25293 (= lt!47954 (ListLongMap!1508 lt!47952))))

(declare-fun lt!47953 () Unit!2865)

(declare-fun lt!47955 () Unit!2865)

(assert (=> d!25293 (= lt!47953 lt!47955)))

(assert (=> d!25293 (= (getValueByKey!147 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25293 (= lt!47955 (lemmaContainsTupThenGetReturnValue!66 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25293 (= lt!47952 (insertStrictlySorted!69 (toList!769 call!9658) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25293 (= (+!127 call!9658 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47954)))

(declare-fun b!96028 () Bool)

(declare-fun res!48510 () Bool)

(assert (=> b!96028 (=> (not res!48510) (not e!62631))))

(assert (=> b!96028 (= res!48510 (= (getValueByKey!147 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96029 () Bool)

(assert (=> b!96029 (= e!62631 (contains!793 (toList!769 lt!47954) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25293 res!48511) b!96028))

(assert (= (and b!96028 res!48510) b!96029))

(declare-fun m!104085 () Bool)

(assert (=> d!25293 m!104085))

(declare-fun m!104087 () Bool)

(assert (=> d!25293 m!104087))

(declare-fun m!104089 () Bool)

(assert (=> d!25293 m!104089))

(declare-fun m!104091 () Bool)

(assert (=> d!25293 m!104091))

(declare-fun m!104093 () Bool)

(assert (=> b!96028 m!104093))

(declare-fun m!104095 () Bool)

(assert (=> b!96029 m!104095))

(assert (=> b!95738 d!25293))

(declare-fun d!25295 () Bool)

(assert (=> d!25295 (isDefined!101 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun lt!47958 () Unit!2865)

(declare-fun choose!585 (List!1580 (_ BitVec 64)) Unit!2865)

(assert (=> d!25295 (= lt!47958 (choose!585 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun e!62634 () Bool)

(assert (=> d!25295 e!62634))

(declare-fun res!48514 () Bool)

(assert (=> d!25295 (=> (not res!48514) (not e!62634))))

(declare-fun isStrictlySorted!298 (List!1580) Bool)

(assert (=> d!25295 (= res!48514 (isStrictlySorted!298 (toList!769 lt!47518)))))

(assert (=> d!25295 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!47958)))

(declare-fun b!96032 () Bool)

(assert (=> b!96032 (= e!62634 (containsKey!151 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25295 res!48514) b!96032))

(assert (=> d!25295 m!103459))

(assert (=> d!25295 m!103607))

(assert (=> d!25295 m!103607))

(assert (=> d!25295 m!103609))

(assert (=> d!25295 m!103459))

(declare-fun m!104097 () Bool)

(assert (=> d!25295 m!104097))

(declare-fun m!104099 () Bool)

(assert (=> d!25295 m!104099))

(assert (=> b!96032 m!103459))

(assert (=> b!96032 m!103603))

(assert (=> b!95614 d!25295))

(declare-fun d!25297 () Bool)

(declare-fun isEmpty!358 (Option!153) Bool)

(assert (=> d!25297 (= (isDefined!101 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) (not (isEmpty!358 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun bs!3945 () Bool)

(assert (= bs!3945 d!25297))

(assert (=> bs!3945 m!103607))

(declare-fun m!104101 () Bool)

(assert (=> bs!3945 m!104101))

(assert (=> b!95614 d!25297))

(declare-fun b!96042 () Bool)

(declare-fun e!62639 () Option!153)

(declare-fun e!62640 () Option!153)

(assert (=> b!96042 (= e!62639 e!62640)))

(declare-fun c!16150 () Bool)

(assert (=> b!96042 (= c!16150 (and ((_ is Cons!1576) (toList!769 lt!47518)) (not (= (_1!1168 (h!2169 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun b!96043 () Bool)

(assert (=> b!96043 (= e!62640 (getValueByKey!147 (t!5493 (toList!769 lt!47518)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96041 () Bool)

(assert (=> b!96041 (= e!62639 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47518)))))))

(declare-fun b!96044 () Bool)

(assert (=> b!96044 (= e!62640 None!151)))

(declare-fun d!25299 () Bool)

(declare-fun c!16149 () Bool)

(assert (=> d!25299 (= c!16149 (and ((_ is Cons!1576) (toList!769 lt!47518)) (= (_1!1168 (h!2169 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25299 (= (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62639)))

(assert (= (and d!25299 c!16149) b!96041))

(assert (= (and d!25299 (not c!16149)) b!96042))

(assert (= (and b!96042 c!16150) b!96043))

(assert (= (and b!96042 (not c!16150)) b!96044))

(assert (=> b!96043 m!103459))

(declare-fun m!104103 () Bool)

(assert (=> b!96043 m!104103))

(assert (=> b!95614 d!25299))

(assert (=> b!95616 d!25297))

(assert (=> b!95616 d!25299))

(assert (=> b!95591 d!25201))

(declare-fun b!96057 () Bool)

(declare-fun e!62649 () SeekEntryResult!255)

(assert (=> b!96057 (= e!62649 Undefined!255)))

(declare-fun b!96058 () Bool)

(declare-fun e!62648 () SeekEntryResult!255)

(declare-fun lt!47965 () SeekEntryResult!255)

(assert (=> b!96058 (= e!62648 (MissingZero!255 (index!3164 lt!47965)))))

(declare-fun b!96059 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4191 (_ BitVec 32)) SeekEntryResult!255)

(assert (=> b!96059 (= e!62648 (seekKeyOrZeroReturnVacant!0 (x!12802 lt!47965) (index!3164 lt!47965) (index!3164 lt!47965) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!96060 () Bool)

(declare-fun c!16159 () Bool)

(declare-fun lt!47967 () (_ BitVec 64))

(assert (=> b!96060 (= c!16159 (= lt!47967 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62647 () SeekEntryResult!255)

(assert (=> b!96060 (= e!62647 e!62648)))

(declare-fun lt!47966 () SeekEntryResult!255)

(declare-fun d!25301 () Bool)

(assert (=> d!25301 (and (or ((_ is Undefined!255) lt!47966) (not ((_ is Found!255) lt!47966)) (and (bvsge (index!3163 lt!47966) #b00000000000000000000000000000000) (bvslt (index!3163 lt!47966) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!47966) ((_ is Found!255) lt!47966) (not ((_ is MissingZero!255) lt!47966)) (and (bvsge (index!3162 lt!47966) #b00000000000000000000000000000000) (bvslt (index!3162 lt!47966) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!47966) ((_ is Found!255) lt!47966) ((_ is MissingZero!255) lt!47966) (not ((_ is MissingVacant!255) lt!47966)) (and (bvsge (index!3165 lt!47966) #b00000000000000000000000000000000) (bvslt (index!3165 lt!47966) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!47966) (ite ((_ is Found!255) lt!47966) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47966)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite ((_ is MissingZero!255) lt!47966) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!47966)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!255) lt!47966) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!47966)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25301 (= lt!47966 e!62649)))

(declare-fun c!16158 () Bool)

(assert (=> d!25301 (= c!16158 (and ((_ is Intermediate!255) lt!47965) (undefined!1067 lt!47965)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4191 (_ BitVec 32)) SeekEntryResult!255)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!25301 (= lt!47965 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(assert (=> d!25301 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25301 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)) lt!47966)))

(declare-fun b!96061 () Bool)

(assert (=> b!96061 (= e!62647 (Found!255 (index!3164 lt!47965)))))

(declare-fun b!96062 () Bool)

(assert (=> b!96062 (= e!62649 e!62647)))

(assert (=> b!96062 (= lt!47967 (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!47965)))))

(declare-fun c!16157 () Bool)

(assert (=> b!96062 (= c!16157 (= lt!47967 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25301 c!16158) b!96057))

(assert (= (and d!25301 (not c!16158)) b!96062))

(assert (= (and b!96062 c!16157) b!96061))

(assert (= (and b!96062 (not c!16157)) b!96060))

(assert (= (and b!96060 c!16159) b!96058))

(assert (= (and b!96060 (not c!16159)) b!96059))

(assert (=> b!96059 m!103459))

(declare-fun m!104105 () Bool)

(assert (=> b!96059 m!104105))

(declare-fun m!104107 () Bool)

(assert (=> d!25301 m!104107))

(assert (=> d!25301 m!103459))

(declare-fun m!104109 () Bool)

(assert (=> d!25301 m!104109))

(declare-fun m!104111 () Bool)

(assert (=> d!25301 m!104111))

(declare-fun m!104113 () Bool)

(assert (=> d!25301 m!104113))

(assert (=> d!25301 m!103855))

(assert (=> d!25301 m!103459))

(assert (=> d!25301 m!104107))

(declare-fun m!104115 () Bool)

(assert (=> d!25301 m!104115))

(declare-fun m!104117 () Bool)

(assert (=> b!96062 m!104117))

(assert (=> bm!9658 d!25301))

(declare-fun d!25303 () Bool)

(declare-fun res!48519 () Bool)

(declare-fun e!62654 () Bool)

(assert (=> d!25303 (=> res!48519 e!62654)))

(assert (=> d!25303 (= res!48519 (and ((_ is Cons!1576) (toList!769 lt!47518)) (= (_1!1168 (h!2169 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25303 (= (containsKey!151 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62654)))

(declare-fun b!96067 () Bool)

(declare-fun e!62655 () Bool)

(assert (=> b!96067 (= e!62654 e!62655)))

(declare-fun res!48520 () Bool)

(assert (=> b!96067 (=> (not res!48520) (not e!62655))))

(assert (=> b!96067 (= res!48520 (and (or (not ((_ is Cons!1576) (toList!769 lt!47518))) (bvsle (_1!1168 (h!2169 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) ((_ is Cons!1576) (toList!769 lt!47518)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(declare-fun b!96068 () Bool)

(assert (=> b!96068 (= e!62655 (containsKey!151 (t!5493 (toList!769 lt!47518)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25303 (not res!48519)) b!96067))

(assert (= (and b!96067 res!48520) b!96068))

(assert (=> b!96068 m!103459))

(declare-fun m!104119 () Bool)

(assert (=> b!96068 m!104119))

(assert (=> d!25207 d!25303))

(assert (=> b!95703 d!25301))

(declare-fun d!25305 () Bool)

(declare-fun e!62656 () Bool)

(assert (=> d!25305 e!62656))

(declare-fun res!48522 () Bool)

(assert (=> d!25305 (=> (not res!48522) (not e!62656))))

(declare-fun lt!47970 () ListLongMap!1507)

(assert (=> d!25305 (= res!48522 (contains!791 lt!47970 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!47968 () List!1580)

(assert (=> d!25305 (= lt!47970 (ListLongMap!1508 lt!47968))))

(declare-fun lt!47969 () Unit!2865)

(declare-fun lt!47971 () Unit!2865)

(assert (=> d!25305 (= lt!47969 lt!47971)))

(assert (=> d!25305 (= (getValueByKey!147 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25305 (= lt!47971 (lemmaContainsTupThenGetReturnValue!66 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25305 (= lt!47968 (insertStrictlySorted!69 (toList!769 call!9692) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25305 (= (+!127 call!9692 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47970)))

(declare-fun b!96069 () Bool)

(declare-fun res!48521 () Bool)

(assert (=> b!96069 (=> (not res!48521) (not e!62656))))

(assert (=> b!96069 (= res!48521 (= (getValueByKey!147 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96070 () Bool)

(assert (=> b!96070 (= e!62656 (contains!793 (toList!769 lt!47970) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25305 res!48522) b!96069))

(assert (= (and b!96069 res!48521) b!96070))

(declare-fun m!104121 () Bool)

(assert (=> d!25305 m!104121))

(declare-fun m!104123 () Bool)

(assert (=> d!25305 m!104123))

(declare-fun m!104125 () Bool)

(assert (=> d!25305 m!104125))

(declare-fun m!104127 () Bool)

(assert (=> d!25305 m!104127))

(declare-fun m!104129 () Bool)

(assert (=> b!96069 m!104129))

(declare-fun m!104131 () Bool)

(assert (=> b!96070 m!104131))

(assert (=> b!95793 d!25305))

(declare-fun d!25307 () Bool)

(declare-fun res!48523 () Bool)

(declare-fun e!62657 () Bool)

(assert (=> d!25307 (=> (not res!48523) (not e!62657))))

(assert (=> d!25307 (= res!48523 (simpleValid!67 (v!2770 (underlying!326 thiss!992))))))

(assert (=> d!25307 (= (valid!386 (v!2770 (underlying!326 thiss!992))) e!62657)))

(declare-fun b!96071 () Bool)

(declare-fun res!48524 () Bool)

(assert (=> b!96071 (=> (not res!48524) (not e!62657))))

(assert (=> b!96071 (= res!48524 (= (arrayCountValidKeys!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))) (_size!468 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!96072 () Bool)

(declare-fun res!48525 () Bool)

(assert (=> b!96072 (=> (not res!48525) (not e!62657))))

(assert (=> b!96072 (= res!48525 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!96073 () Bool)

(assert (=> b!96073 (= e!62657 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 Nil!1578))))

(assert (= (and d!25307 res!48523) b!96071))

(assert (= (and b!96071 res!48524) b!96072))

(assert (= (and b!96072 res!48525) b!96073))

(declare-fun m!104133 () Bool)

(assert (=> d!25307 m!104133))

(declare-fun m!104135 () Bool)

(assert (=> b!96071 m!104135))

(declare-fun m!104137 () Bool)

(assert (=> b!96072 m!104137))

(declare-fun m!104139 () Bool)

(assert (=> b!96073 m!104139))

(assert (=> d!25219 d!25307))

(declare-fun d!25309 () Bool)

(assert (=> d!25309 (= (map!1237 (_2!1169 lt!47642)) (getCurrentListMap!451 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun bs!3946 () Bool)

(assert (= bs!3946 d!25309))

(declare-fun m!104141 () Bool)

(assert (=> bs!3946 m!104141))

(assert (=> bm!9659 d!25309))

(declare-fun b!96082 () Bool)

(declare-fun e!62663 () (_ BitVec 32))

(assert (=> b!96082 (= e!62663 #b00000000000000000000000000000000)))

(declare-fun b!96083 () Bool)

(declare-fun e!62662 () (_ BitVec 32))

(assert (=> b!96083 (= e!62663 e!62662)))

(declare-fun c!16164 () Bool)

(assert (=> b!96083 (= c!16164 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!25311 () Bool)

(declare-fun lt!47974 () (_ BitVec 32))

(assert (=> d!25311 (and (bvsge lt!47974 #b00000000000000000000000000000000) (bvsle lt!47974 (bvsub (size!2240 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25311 (= lt!47974 e!62663)))

(declare-fun c!16165 () Bool)

(assert (=> d!25311 (= c!16165 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25311 (and (bvsle #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2240 (_keys!4141 newMap!16)) (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25311 (= (arrayCountValidKeys!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) lt!47974)))

(declare-fun bm!9727 () Bool)

(declare-fun call!9730 () (_ BitVec 32))

(assert (=> bm!9727 (= call!9730 (arrayCountValidKeys!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96084 () Bool)

(assert (=> b!96084 (= e!62662 (bvadd #b00000000000000000000000000000001 call!9730))))

(declare-fun b!96085 () Bool)

(assert (=> b!96085 (= e!62662 call!9730)))

(assert (= (and d!25311 c!16165) b!96082))

(assert (= (and d!25311 (not c!16165)) b!96083))

(assert (= (and b!96083 c!16164) b!96084))

(assert (= (and b!96083 (not c!16164)) b!96085))

(assert (= (or b!96084 b!96085) bm!9727))

(assert (=> b!96083 m!103867))

(assert (=> b!96083 m!103867))

(assert (=> b!96083 m!103869))

(declare-fun m!104143 () Bool)

(assert (=> bm!9727 m!104143))

(assert (=> b!95818 d!25311))

(declare-fun d!25313 () Bool)

(declare-fun e!62664 () Bool)

(assert (=> d!25313 e!62664))

(declare-fun res!48527 () Bool)

(assert (=> d!25313 (=> (not res!48527) (not e!62664))))

(declare-fun lt!47977 () ListLongMap!1507)

(assert (=> d!25313 (= res!48527 (contains!791 lt!47977 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun lt!47975 () List!1580)

(assert (=> d!25313 (= lt!47977 (ListLongMap!1508 lt!47975))))

(declare-fun lt!47976 () Unit!2865)

(declare-fun lt!47978 () Unit!2865)

(assert (=> d!25313 (= lt!47976 lt!47978)))

(assert (=> d!25313 (= (getValueByKey!147 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (Some!152 (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25313 (= lt!47978 (lemmaContainsTupThenGetReturnValue!66 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25313 (= lt!47975 (insertStrictlySorted!69 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25313 (= (+!127 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47977)))

(declare-fun b!96086 () Bool)

(declare-fun res!48526 () Bool)

(assert (=> b!96086 (=> (not res!48526) (not e!62664))))

(assert (=> b!96086 (= res!48526 (= (getValueByKey!147 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (Some!152 (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96087 () Bool)

(assert (=> b!96087 (= e!62664 (contains!793 (toList!769 lt!47977) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (= (and d!25313 res!48527) b!96086))

(assert (= (and b!96086 res!48526) b!96087))

(declare-fun m!104145 () Bool)

(assert (=> d!25313 m!104145))

(declare-fun m!104147 () Bool)

(assert (=> d!25313 m!104147))

(declare-fun m!104149 () Bool)

(assert (=> d!25313 m!104149))

(declare-fun m!104151 () Bool)

(assert (=> d!25313 m!104151))

(declare-fun m!104153 () Bool)

(assert (=> b!96086 m!104153))

(declare-fun m!104155 () Bool)

(assert (=> b!96087 m!104155))

(assert (=> bm!9690 d!25313))

(assert (=> bm!9686 d!25257))

(assert (=> d!25199 d!25205))

(declare-fun d!25315 () Bool)

(assert (=> d!25315 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) from!355 Nil!1578)))

(assert (=> d!25315 true))

(declare-fun _$71!129 () Unit!2865)

(assert (=> d!25315 (= (choose!39 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!129)))

(declare-fun bs!3947 () Bool)

(assert (= bs!3947 d!25315))

(assert (=> bs!3947 m!103473))

(assert (=> d!25199 d!25315))

(declare-fun d!25317 () Bool)

(declare-fun e!62667 () Bool)

(assert (=> d!25317 e!62667))

(declare-fun c!16168 () Bool)

(assert (=> d!25317 (= c!16168 (and (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!25317 true))

(declare-fun _$29!123 () Unit!2865)

(assert (=> d!25317 (= (choose!580 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) _$29!123)))

(declare-fun b!96092 () Bool)

(assert (=> b!96092 (= e!62667 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!96093 () Bool)

(assert (=> b!96093 (= e!62667 (ite (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!25317 c!16168) b!96092))

(assert (= (and d!25317 (not c!16168)) b!96093))

(assert (=> b!96092 m!103459))

(assert (=> b!96092 m!103477))

(assert (=> d!25203 d!25317))

(assert (=> d!25203 d!25213))

(declare-fun call!9732 () ListLongMap!1507)

(declare-fun bm!9728 () Bool)

(assert (=> bm!9728 (= call!9732 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96094 () Bool)

(declare-fun e!62673 () Unit!2865)

(declare-fun Unit!2883 () Unit!2865)

(assert (=> b!96094 (= e!62673 Unit!2883)))

(declare-fun bm!9729 () Bool)

(declare-fun call!9735 () ListLongMap!1507)

(assert (=> bm!9729 (= call!9735 call!9732)))

(declare-fun b!96095 () Bool)

(declare-fun lt!47997 () Unit!2865)

(assert (=> b!96095 (= e!62673 lt!47997)))

(declare-fun lt!47991 () ListLongMap!1507)

(assert (=> b!96095 (= lt!47991 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47998 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47998 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47985 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47985 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47982 () Unit!2865)

(assert (=> b!96095 (= lt!47982 (addStillContains!67 lt!47991 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47985))))

(assert (=> b!96095 (contains!791 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47985)))

(declare-fun lt!47995 () Unit!2865)

(assert (=> b!96095 (= lt!47995 lt!47982)))

(declare-fun lt!47994 () ListLongMap!1507)

(assert (=> b!96095 (= lt!47994 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47979 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47979 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47980 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47980 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47996 () Unit!2865)

(assert (=> b!96095 (= lt!47996 (addApplyDifferent!67 lt!47994 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47980))))

(assert (=> b!96095 (= (apply!91 (+!127 lt!47994 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47980) (apply!91 lt!47994 lt!47980))))

(declare-fun lt!47981 () Unit!2865)

(assert (=> b!96095 (= lt!47981 lt!47996)))

(declare-fun lt!47999 () ListLongMap!1507)

(assert (=> b!96095 (= lt!47999 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47993 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47993 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47984 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47984 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47988 () Unit!2865)

(assert (=> b!96095 (= lt!47988 (addApplyDifferent!67 lt!47999 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47984))))

(assert (=> b!96095 (= (apply!91 (+!127 lt!47999 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47984) (apply!91 lt!47999 lt!47984))))

(declare-fun lt!47989 () Unit!2865)

(assert (=> b!96095 (= lt!47989 lt!47988)))

(declare-fun lt!47990 () ListLongMap!1507)

(assert (=> b!96095 (= lt!47990 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47987 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47987 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47992 () (_ BitVec 64))

(assert (=> b!96095 (= lt!47992 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96095 (= lt!47997 (addApplyDifferent!67 lt!47990 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47992))))

(assert (=> b!96095 (= (apply!91 (+!127 lt!47990 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47992) (apply!91 lt!47990 lt!47992))))

(declare-fun call!9734 () ListLongMap!1507)

(declare-fun b!96096 () Bool)

(declare-fun e!62672 () ListLongMap!1507)

(assert (=> b!96096 (= e!62672 (+!127 call!9734 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(declare-fun b!96098 () Bool)

(declare-fun e!62674 () Bool)

(declare-fun call!9736 () Bool)

(assert (=> b!96098 (= e!62674 (not call!9736))))

(declare-fun b!96099 () Bool)

(declare-fun e!62670 () Bool)

(declare-fun e!62671 () Bool)

(assert (=> b!96099 (= e!62670 e!62671)))

(declare-fun c!16169 () Bool)

(assert (=> b!96099 (= c!16169 (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!48000 () ListLongMap!1507)

(declare-fun b!96100 () Bool)

(declare-fun e!62680 () Bool)

(assert (=> b!96100 (= e!62680 (= (apply!91 lt!48000 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96100 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (ite c!16079 (_values!2439 newMap!16) lt!47652))))))

(assert (=> b!96100 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96101 () Bool)

(declare-fun e!62676 () ListLongMap!1507)

(assert (=> b!96101 (= e!62672 e!62676)))

(declare-fun c!16173 () Bool)

(assert (=> b!96101 (= c!16173 (and (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96102 () Bool)

(declare-fun call!9733 () Bool)

(assert (=> b!96102 (= e!62671 (not call!9733))))

(declare-fun b!96103 () Bool)

(declare-fun e!62677 () Bool)

(assert (=> b!96103 (= e!62674 e!62677)))

(declare-fun res!48529 () Bool)

(assert (=> b!96103 (= res!48529 call!9736)))

(assert (=> b!96103 (=> (not res!48529) (not e!62677))))

(declare-fun b!96104 () Bool)

(declare-fun res!48533 () Bool)

(assert (=> b!96104 (=> (not res!48533) (not e!62670))))

(declare-fun e!62668 () Bool)

(assert (=> b!96104 (= res!48533 e!62668)))

(declare-fun res!48534 () Bool)

(assert (=> b!96104 (=> res!48534 e!62668)))

(declare-fun e!62675 () Bool)

(assert (=> b!96104 (= res!48534 (not e!62675))))

(declare-fun res!48531 () Bool)

(assert (=> b!96104 (=> (not res!48531) (not e!62675))))

(assert (=> b!96104 (= res!48531 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9730 () Bool)

(assert (=> bm!9730 (= call!9733 (contains!791 lt!48000 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96105 () Bool)

(declare-fun call!9731 () ListLongMap!1507)

(assert (=> b!96105 (= e!62676 call!9731)))

(declare-fun b!96106 () Bool)

(assert (=> b!96106 (= e!62675 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96107 () Bool)

(declare-fun e!62669 () Bool)

(assert (=> b!96107 (= e!62671 e!62669)))

(declare-fun res!48536 () Bool)

(assert (=> b!96107 (= res!48536 call!9733)))

(assert (=> b!96107 (=> (not res!48536) (not e!62669))))

(declare-fun b!96108 () Bool)

(assert (=> b!96108 (= e!62668 e!62680)))

(declare-fun res!48532 () Bool)

(assert (=> b!96108 (=> (not res!48532) (not e!62680))))

(assert (=> b!96108 (= res!48532 (contains!791 lt!48000 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96109 () Bool)

(declare-fun e!62679 () ListLongMap!1507)

(assert (=> b!96109 (= e!62679 call!9731)))

(declare-fun b!96110 () Bool)

(declare-fun e!62678 () Bool)

(assert (=> b!96110 (= e!62678 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96111 () Bool)

(declare-fun res!48535 () Bool)

(assert (=> b!96111 (=> (not res!48535) (not e!62670))))

(assert (=> b!96111 (= res!48535 e!62674)))

(declare-fun c!16172 () Bool)

(assert (=> b!96111 (= c!16172 (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96112 () Bool)

(declare-fun c!16174 () Bool)

(assert (=> b!96112 (= c!16174 (and (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96112 (= e!62676 e!62679)))

(declare-fun bm!9731 () Bool)

(assert (=> bm!9731 (= call!9731 call!9734)))

(declare-fun b!96113 () Bool)

(assert (=> b!96113 (= e!62669 (= (apply!91 lt!48000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))

(declare-fun b!96114 () Bool)

(declare-fun call!9737 () ListLongMap!1507)

(assert (=> b!96114 (= e!62679 call!9737)))

(declare-fun b!96097 () Bool)

(assert (=> b!96097 (= e!62677 (= (apply!91 lt!48000 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))

(declare-fun d!25319 () Bool)

(assert (=> d!25319 e!62670))

(declare-fun res!48528 () Bool)

(assert (=> d!25319 (=> (not res!48528) (not e!62670))))

(assert (=> d!25319 (= res!48528 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!47986 () ListLongMap!1507)

(assert (=> d!25319 (= lt!48000 lt!47986)))

(declare-fun lt!47983 () Unit!2865)

(assert (=> d!25319 (= lt!47983 e!62673)))

(declare-fun c!16171 () Bool)

(assert (=> d!25319 (= c!16171 e!62678)))

(declare-fun res!48530 () Bool)

(assert (=> d!25319 (=> (not res!48530) (not e!62678))))

(assert (=> d!25319 (= res!48530 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25319 (= lt!47986 e!62672)))

(declare-fun c!16170 () Bool)

(assert (=> d!25319 (= c!16170 (and (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25319 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25319 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48000)))

(declare-fun bm!9732 () Bool)

(assert (=> bm!9732 (= call!9734 (+!127 (ite c!16170 call!9732 (ite c!16173 call!9735 call!9737)) (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun bm!9733 () Bool)

(assert (=> bm!9733 (= call!9736 (contains!791 lt!48000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9734 () Bool)

(assert (=> bm!9734 (= call!9737 call!9735)))

(assert (= (and d!25319 c!16170) b!96096))

(assert (= (and d!25319 (not c!16170)) b!96101))

(assert (= (and b!96101 c!16173) b!96105))

(assert (= (and b!96101 (not c!16173)) b!96112))

(assert (= (and b!96112 c!16174) b!96109))

(assert (= (and b!96112 (not c!16174)) b!96114))

(assert (= (or b!96109 b!96114) bm!9734))

(assert (= (or b!96105 bm!9734) bm!9729))

(assert (= (or b!96105 b!96109) bm!9731))

(assert (= (or b!96096 bm!9729) bm!9728))

(assert (= (or b!96096 bm!9731) bm!9732))

(assert (= (and d!25319 res!48530) b!96110))

(assert (= (and d!25319 c!16171) b!96095))

(assert (= (and d!25319 (not c!16171)) b!96094))

(assert (= (and d!25319 res!48528) b!96104))

(assert (= (and b!96104 res!48531) b!96106))

(assert (= (and b!96104 (not res!48534)) b!96108))

(assert (= (and b!96108 res!48532) b!96100))

(assert (= (and b!96104 res!48533) b!96111))

(assert (= (and b!96111 c!16172) b!96103))

(assert (= (and b!96111 (not c!16172)) b!96098))

(assert (= (and b!96103 res!48529) b!96097))

(assert (= (or b!96103 b!96098) bm!9733))

(assert (= (and b!96111 res!48535) b!96099))

(assert (= (and b!96099 c!16169) b!96107))

(assert (= (and b!96099 (not c!16169)) b!96102))

(assert (= (and b!96107 res!48536) b!96113))

(assert (= (or b!96107 b!96102) bm!9730))

(declare-fun b_lambda!4241 () Bool)

(assert (=> (not b_lambda!4241) (not b!96100)))

(assert (=> b!96100 t!5505))

(declare-fun b_and!5869 () Bool)

(assert (= b_and!5865 (and (=> t!5505 result!3225) b_and!5869)))

(assert (=> b!96100 t!5507))

(declare-fun b_and!5871 () Bool)

(assert (= b_and!5867 (and (=> t!5507 result!3227) b_and!5871)))

(declare-fun m!104157 () Bool)

(assert (=> bm!9730 m!104157))

(declare-fun m!104159 () Bool)

(assert (=> b!96113 m!104159))

(assert (=> b!96108 m!103867))

(assert (=> b!96108 m!103867))

(declare-fun m!104161 () Bool)

(assert (=> b!96108 m!104161))

(declare-fun m!104163 () Bool)

(assert (=> b!96096 m!104163))

(assert (=> d!25319 m!103855))

(assert (=> b!96100 m!103867))

(declare-fun m!104165 () Bool)

(assert (=> b!96100 m!104165))

(assert (=> b!96100 m!103989))

(assert (=> b!96100 m!103867))

(declare-fun m!104167 () Bool)

(assert (=> b!96100 m!104167))

(assert (=> b!96100 m!103989))

(declare-fun m!104169 () Bool)

(assert (=> b!96100 m!104169))

(assert (=> b!96100 m!104167))

(declare-fun m!104171 () Bool)

(assert (=> bm!9732 m!104171))

(declare-fun m!104173 () Bool)

(assert (=> bm!9733 m!104173))

(declare-fun m!104175 () Bool)

(assert (=> b!96095 m!104175))

(declare-fun m!104177 () Bool)

(assert (=> b!96095 m!104177))

(declare-fun m!104179 () Bool)

(assert (=> b!96095 m!104179))

(declare-fun m!104181 () Bool)

(assert (=> b!96095 m!104181))

(declare-fun m!104183 () Bool)

(assert (=> b!96095 m!104183))

(declare-fun m!104185 () Bool)

(assert (=> b!96095 m!104185))

(declare-fun m!104187 () Bool)

(assert (=> b!96095 m!104187))

(declare-fun m!104189 () Bool)

(assert (=> b!96095 m!104189))

(declare-fun m!104191 () Bool)

(assert (=> b!96095 m!104191))

(declare-fun m!104193 () Bool)

(assert (=> b!96095 m!104193))

(assert (=> b!96095 m!104191))

(declare-fun m!104195 () Bool)

(assert (=> b!96095 m!104195))

(declare-fun m!104197 () Bool)

(assert (=> b!96095 m!104197))

(declare-fun m!104199 () Bool)

(assert (=> b!96095 m!104199))

(assert (=> b!96095 m!104197))

(assert (=> b!96095 m!104187))

(assert (=> b!96095 m!104175))

(declare-fun m!104201 () Bool)

(assert (=> b!96095 m!104201))

(declare-fun m!104203 () Bool)

(assert (=> b!96095 m!104203))

(assert (=> b!96095 m!103867))

(declare-fun m!104205 () Bool)

(assert (=> b!96095 m!104205))

(assert (=> b!96106 m!103867))

(assert (=> b!96106 m!103867))

(assert (=> b!96106 m!103869))

(assert (=> bm!9728 m!104201))

(assert (=> b!96110 m!103867))

(assert (=> b!96110 m!103867))

(assert (=> b!96110 m!103869))

(declare-fun m!104207 () Bool)

(assert (=> b!96097 m!104207))

(assert (=> bm!9665 d!25319))

(declare-fun d!25321 () Bool)

(assert (=> d!25321 (= (apply!91 lt!47731 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3948 () Bool)

(assert (= bs!3948 d!25321))

(declare-fun m!104209 () Bool)

(assert (=> bs!3948 m!104209))

(assert (=> bs!3948 m!104209))

(declare-fun m!104211 () Bool)

(assert (=> bs!3948 m!104211))

(assert (=> b!95810 d!25321))

(declare-fun d!25323 () Bool)

(assert (=> d!25323 (= (apply!91 lt!47731 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1278 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3949 () Bool)

(assert (= bs!3949 d!25323))

(assert (=> bs!3949 m!103591))

(declare-fun m!104213 () Bool)

(assert (=> bs!3949 m!104213))

(assert (=> bs!3949 m!104213))

(declare-fun m!104215 () Bool)

(assert (=> bs!3949 m!104215))

(assert (=> b!95797 d!25323))

(declare-fun d!25325 () Bool)

(declare-fun c!16175 () Bool)

(assert (=> d!25325 (= c!16175 ((_ is ValueCellFull!965) (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!62681 () V!3137)

(assert (=> d!25325 (= (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62681)))

(declare-fun b!96115 () Bool)

(assert (=> b!96115 (= e!62681 (get!1276 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96116 () Bool)

(assert (=> b!96116 (= e!62681 (get!1277 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25325 c!16175) b!96115))

(assert (= (and d!25325 (not c!16175)) b!96116))

(assert (=> b!96115 m!103683))

(assert (=> b!96115 m!103489))

(declare-fun m!104217 () Bool)

(assert (=> b!96115 m!104217))

(assert (=> b!96116 m!103683))

(assert (=> b!96116 m!103489))

(declare-fun m!104219 () Bool)

(assert (=> b!96116 m!104219))

(assert (=> b!95797 d!25325))

(declare-fun d!25327 () Bool)

(declare-fun e!62682 () Bool)

(assert (=> d!25327 e!62682))

(declare-fun res!48537 () Bool)

(assert (=> d!25327 (=> res!48537 e!62682)))

(declare-fun lt!48002 () Bool)

(assert (=> d!25327 (= res!48537 (not lt!48002))))

(declare-fun lt!48003 () Bool)

(assert (=> d!25327 (= lt!48002 lt!48003)))

(declare-fun lt!48004 () Unit!2865)

(declare-fun e!62683 () Unit!2865)

(assert (=> d!25327 (= lt!48004 e!62683)))

(declare-fun c!16176 () Bool)

(assert (=> d!25327 (= c!16176 lt!48003)))

(assert (=> d!25327 (= lt!48003 (containsKey!151 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25327 (= (contains!791 call!9669 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48002)))

(declare-fun b!96117 () Bool)

(declare-fun lt!48001 () Unit!2865)

(assert (=> b!96117 (= e!62683 lt!48001)))

(assert (=> b!96117 (= lt!48001 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!96117 (isDefined!101 (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96118 () Bool)

(declare-fun Unit!2884 () Unit!2865)

(assert (=> b!96118 (= e!62683 Unit!2884)))

(declare-fun b!96119 () Bool)

(assert (=> b!96119 (= e!62682 (isDefined!101 (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (= (and d!25327 c!16176) b!96117))

(assert (= (and d!25327 (not c!16176)) b!96118))

(assert (= (and d!25327 (not res!48537)) b!96119))

(assert (=> d!25327 m!103459))

(declare-fun m!104221 () Bool)

(assert (=> d!25327 m!104221))

(assert (=> b!96117 m!103459))

(declare-fun m!104223 () Bool)

(assert (=> b!96117 m!104223))

(assert (=> b!96117 m!103459))

(declare-fun m!104225 () Bool)

(assert (=> b!96117 m!104225))

(assert (=> b!96117 m!104225))

(declare-fun m!104227 () Bool)

(assert (=> b!96117 m!104227))

(assert (=> b!96119 m!103459))

(assert (=> b!96119 m!104225))

(assert (=> b!96119 m!104225))

(assert (=> b!96119 m!104227))

(assert (=> b!95718 d!25327))

(declare-fun d!25329 () Bool)

(declare-fun e!62684 () Bool)

(assert (=> d!25329 e!62684))

(declare-fun res!48538 () Bool)

(assert (=> d!25329 (=> res!48538 e!62684)))

(declare-fun lt!48006 () Bool)

(assert (=> d!25329 (= res!48538 (not lt!48006))))

(declare-fun lt!48007 () Bool)

(assert (=> d!25329 (= lt!48006 lt!48007)))

(declare-fun lt!48008 () Unit!2865)

(declare-fun e!62685 () Unit!2865)

(assert (=> d!25329 (= lt!48008 e!62685)))

(declare-fun c!16177 () Bool)

(assert (=> d!25329 (= c!16177 lt!48007)))

(assert (=> d!25329 (= lt!48007 (containsKey!151 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25329 (= (contains!791 e!62464 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48006)))

(declare-fun b!96120 () Bool)

(declare-fun lt!48005 () Unit!2865)

(assert (=> b!96120 (= e!62685 lt!48005)))

(assert (=> b!96120 (= lt!48005 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!96120 (isDefined!101 (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96121 () Bool)

(declare-fun Unit!2885 () Unit!2865)

(assert (=> b!96121 (= e!62685 Unit!2885)))

(declare-fun b!96122 () Bool)

(assert (=> b!96122 (= e!62684 (isDefined!101 (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (= (and d!25329 c!16177) b!96120))

(assert (= (and d!25329 (not c!16177)) b!96121))

(assert (= (and d!25329 (not res!48538)) b!96122))

(assert (=> d!25329 m!103459))

(declare-fun m!104229 () Bool)

(assert (=> d!25329 m!104229))

(assert (=> b!96120 m!103459))

(declare-fun m!104231 () Bool)

(assert (=> b!96120 m!104231))

(assert (=> b!96120 m!103459))

(declare-fun m!104233 () Bool)

(assert (=> b!96120 m!104233))

(assert (=> b!96120 m!104233))

(declare-fun m!104235 () Bool)

(assert (=> b!96120 m!104235))

(assert (=> b!96122 m!103459))

(assert (=> b!96122 m!104233))

(assert (=> b!96122 m!104233))

(assert (=> b!96122 m!104235))

(assert (=> bm!9669 d!25329))

(declare-fun b!96123 () Bool)

(declare-fun e!62689 () Bool)

(assert (=> b!96123 (= e!62689 (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9735 () Bool)

(declare-fun call!9738 () Bool)

(declare-fun c!16178 () Bool)

(assert (=> bm!9735 (= call!9738 (arrayNoDuplicates!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16178 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) Nil!1578) Nil!1578)))))

(declare-fun b!96124 () Bool)

(declare-fun e!62686 () Bool)

(assert (=> b!96124 (= e!62686 call!9738)))

(declare-fun b!96125 () Bool)

(declare-fun e!62688 () Bool)

(assert (=> b!96125 (= e!62688 e!62686)))

(assert (=> b!96125 (= c!16178 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96126 () Bool)

(assert (=> b!96126 (= e!62686 call!9738)))

(declare-fun d!25331 () Bool)

(declare-fun res!48539 () Bool)

(declare-fun e!62687 () Bool)

(assert (=> d!25331 (=> res!48539 e!62687)))

(assert (=> d!25331 (= res!48539 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25331 (= (arrayNoDuplicates!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 Nil!1578) e!62687)))

(declare-fun b!96127 () Bool)

(assert (=> b!96127 (= e!62687 e!62688)))

(declare-fun res!48540 () Bool)

(assert (=> b!96127 (=> (not res!48540) (not e!62688))))

(assert (=> b!96127 (= res!48540 (not e!62689))))

(declare-fun res!48541 () Bool)

(assert (=> b!96127 (=> (not res!48541) (not e!62689))))

(assert (=> b!96127 (= res!48541 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25331 (not res!48539)) b!96127))

(assert (= (and b!96127 res!48541) b!96123))

(assert (= (and b!96127 res!48540) b!96125))

(assert (= (and b!96125 c!16178) b!96126))

(assert (= (and b!96125 (not c!16178)) b!96124))

(assert (= (or b!96126 b!96124) bm!9735))

(assert (=> b!96123 m!103867))

(assert (=> b!96123 m!103867))

(declare-fun m!104237 () Bool)

(assert (=> b!96123 m!104237))

(assert (=> bm!9735 m!103867))

(declare-fun m!104239 () Bool)

(assert (=> bm!9735 m!104239))

(assert (=> b!96125 m!103867))

(assert (=> b!96125 m!103867))

(assert (=> b!96125 m!103869))

(assert (=> b!96127 m!103867))

(assert (=> b!96127 m!103867))

(assert (=> b!96127 m!103869))

(assert (=> b!95820 d!25331))

(assert (=> b!95706 d!25289))

(declare-fun d!25333 () Bool)

(assert (=> d!25333 (= (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (and (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95605 d!25333))

(declare-fun d!25335 () Bool)

(assert (=> d!25335 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48011 () Unit!2865)

(declare-fun choose!586 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2865)

(assert (=> d!25335 (= lt!48011 (choose!586 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47661 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25335 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25335 (= (lemmaChangeZeroKeyThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47661 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)) lt!48011)))

(declare-fun bs!3950 () Bool)

(assert (= bs!3950 d!25335))

(assert (=> bs!3950 m!103491))

(declare-fun m!104241 () Bool)

(assert (=> bs!3950 m!104241))

(assert (=> bs!3950 m!103619))

(assert (=> bs!3950 m!103855))

(assert (=> bs!3950 m!103491))

(declare-fun m!104243 () Bool)

(assert (=> bs!3950 m!104243))

(assert (=> bs!3950 m!103619))

(declare-fun m!104245 () Bool)

(assert (=> bs!3950 m!104245))

(assert (=> b!95735 d!25335))

(declare-fun d!25337 () Bool)

(declare-fun e!62690 () Bool)

(assert (=> d!25337 e!62690))

(declare-fun res!48542 () Bool)

(assert (=> d!25337 (=> res!48542 e!62690)))

(declare-fun lt!48013 () Bool)

(assert (=> d!25337 (= res!48542 (not lt!48013))))

(declare-fun lt!48014 () Bool)

(assert (=> d!25337 (= lt!48013 lt!48014)))

(declare-fun lt!48015 () Unit!2865)

(declare-fun e!62691 () Unit!2865)

(assert (=> d!25337 (= lt!48015 e!62691)))

(declare-fun c!16179 () Bool)

(assert (=> d!25337 (= c!16179 lt!48014)))

(assert (=> d!25337 (= lt!48014 (containsKey!151 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25337 (= (contains!791 lt!47731 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48013)))

(declare-fun b!96128 () Bool)

(declare-fun lt!48012 () Unit!2865)

(assert (=> b!96128 (= e!62691 lt!48012)))

(assert (=> b!96128 (= lt!48012 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96128 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96129 () Bool)

(declare-fun Unit!2886 () Unit!2865)

(assert (=> b!96129 (= e!62691 Unit!2886)))

(declare-fun b!96130 () Bool)

(assert (=> b!96130 (= e!62690 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25337 c!16179) b!96128))

(assert (= (and d!25337 (not c!16179)) b!96129))

(assert (= (and d!25337 (not res!48542)) b!96130))

(declare-fun m!104247 () Bool)

(assert (=> d!25337 m!104247))

(declare-fun m!104249 () Bool)

(assert (=> b!96128 m!104249))

(assert (=> b!96128 m!104209))

(assert (=> b!96128 m!104209))

(declare-fun m!104251 () Bool)

(assert (=> b!96128 m!104251))

(assert (=> b!96130 m!104209))

(assert (=> b!96130 m!104209))

(assert (=> b!96130 m!104251))

(assert (=> bm!9688 d!25337))

(declare-fun d!25339 () Bool)

(declare-fun res!48543 () Bool)

(declare-fun e!62692 () Bool)

(assert (=> d!25339 (=> res!48543 e!62692)))

(assert (=> d!25339 (= res!48543 (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25339 (= (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!62692)))

(declare-fun b!96131 () Bool)

(declare-fun e!62693 () Bool)

(assert (=> b!96131 (= e!62692 e!62693)))

(declare-fun res!48544 () Bool)

(assert (=> b!96131 (=> (not res!48544) (not e!62693))))

(assert (=> b!96131 (= res!48544 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96132 () Bool)

(assert (=> b!96132 (= e!62693 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25339 (not res!48543)) b!96131))

(assert (= (and b!96131 res!48544) b!96132))

(declare-fun m!104253 () Bool)

(assert (=> d!25339 m!104253))

(assert (=> b!96132 m!103459))

(declare-fun m!104255 () Bool)

(assert (=> b!96132 m!104255))

(assert (=> b!95586 d!25339))

(declare-fun d!25341 () Bool)

(assert (=> d!25341 (= (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95803 d!25341))

(declare-fun b!96149 () Bool)

(declare-fun e!62702 () Bool)

(declare-fun call!9743 () Bool)

(assert (=> b!96149 (= e!62702 (not call!9743))))

(declare-fun b!96150 () Bool)

(declare-fun e!62704 () Bool)

(assert (=> b!96150 (= e!62704 e!62702)))

(declare-fun res!48555 () Bool)

(declare-fun call!9744 () Bool)

(assert (=> b!96150 (= res!48555 call!9744)))

(assert (=> b!96150 (=> (not res!48555) (not e!62702))))

(declare-fun bm!9740 () Bool)

(assert (=> bm!9740 (= call!9743 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!25343 () Bool)

(assert (=> d!25343 e!62704))

(declare-fun c!16184 () Bool)

(declare-fun lt!48020 () SeekEntryResult!255)

(assert (=> d!25343 (= c!16184 ((_ is MissingZero!255) lt!48020))))

(assert (=> d!25343 (= lt!48020 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun lt!48021 () Unit!2865)

(declare-fun choose!587 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2865)

(assert (=> d!25343 (= lt!48021 (choose!587 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25343 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25343 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) lt!48021)))

(declare-fun b!96151 () Bool)

(assert (=> b!96151 (and (bvsge (index!3162 lt!48020) #b00000000000000000000000000000000) (bvslt (index!3162 lt!48020) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48556 () Bool)

(assert (=> b!96151 (= res!48556 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!48020)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96151 (=> (not res!48556) (not e!62702))))

(declare-fun b!96152 () Bool)

(declare-fun res!48554 () Bool)

(declare-fun e!62703 () Bool)

(assert (=> b!96152 (=> (not res!48554) (not e!62703))))

(assert (=> b!96152 (= res!48554 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!48020)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96152 (and (bvsge (index!3165 lt!48020) #b00000000000000000000000000000000) (bvslt (index!3165 lt!48020) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96153 () Bool)

(declare-fun e!62705 () Bool)

(assert (=> b!96153 (= e!62705 ((_ is Undefined!255) lt!48020))))

(declare-fun bm!9741 () Bool)

(assert (=> bm!9741 (= call!9744 (inRange!0 (ite c!16184 (index!3162 lt!48020) (index!3165 lt!48020)) (mask!6540 newMap!16)))))

(declare-fun b!96154 () Bool)

(declare-fun res!48553 () Bool)

(assert (=> b!96154 (=> (not res!48553) (not e!62703))))

(assert (=> b!96154 (= res!48553 call!9744)))

(assert (=> b!96154 (= e!62705 e!62703)))

(declare-fun b!96155 () Bool)

(assert (=> b!96155 (= e!62704 e!62705)))

(declare-fun c!16185 () Bool)

(assert (=> b!96155 (= c!16185 ((_ is MissingVacant!255) lt!48020))))

(declare-fun b!96156 () Bool)

(assert (=> b!96156 (= e!62703 (not call!9743))))

(assert (= (and d!25343 c!16184) b!96150))

(assert (= (and d!25343 (not c!16184)) b!96155))

(assert (= (and b!96150 res!48555) b!96151))

(assert (= (and b!96151 res!48556) b!96149))

(assert (= (and b!96155 c!16185) b!96154))

(assert (= (and b!96155 (not c!16185)) b!96153))

(assert (= (and b!96154 res!48553) b!96152))

(assert (= (and b!96152 res!48554) b!96156))

(assert (= (or b!96150 b!96154) bm!9741))

(assert (= (or b!96149 b!96156) bm!9740))

(declare-fun m!104257 () Bool)

(assert (=> b!96151 m!104257))

(assert (=> bm!9740 m!103459))

(assert (=> bm!9740 m!103621))

(declare-fun m!104259 () Bool)

(assert (=> b!96152 m!104259))

(assert (=> d!25343 m!103459))

(assert (=> d!25343 m!103637))

(assert (=> d!25343 m!103459))

(declare-fun m!104261 () Bool)

(assert (=> d!25343 m!104261))

(assert (=> d!25343 m!103855))

(declare-fun m!104263 () Bool)

(assert (=> bm!9741 m!104263))

(assert (=> bm!9664 d!25343))

(assert (=> bm!9652 d!25221))

(declare-fun b!96157 () Bool)

(declare-fun e!62709 () Bool)

(assert (=> b!96157 (= e!62709 (contains!792 (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!9742 () Bool)

(declare-fun call!9745 () Bool)

(declare-fun c!16186 () Bool)

(assert (=> bm!9742 (= call!9745 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16186 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578))))))

(declare-fun b!96158 () Bool)

(declare-fun e!62706 () Bool)

(assert (=> b!96158 (= e!62706 call!9745)))

(declare-fun b!96159 () Bool)

(declare-fun e!62708 () Bool)

(assert (=> b!96159 (= e!62708 e!62706)))

(assert (=> b!96159 (= c!16186 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!96160 () Bool)

(assert (=> b!96160 (= e!62706 call!9745)))

(declare-fun d!25345 () Bool)

(declare-fun res!48557 () Bool)

(declare-fun e!62707 () Bool)

(assert (=> d!25345 (=> res!48557 e!62707)))

(assert (=> d!25345 (= res!48557 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25345 (= (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) e!62707)))

(declare-fun b!96161 () Bool)

(assert (=> b!96161 (= e!62707 e!62708)))

(declare-fun res!48558 () Bool)

(assert (=> b!96161 (=> (not res!48558) (not e!62708))))

(assert (=> b!96161 (= res!48558 (not e!62709))))

(declare-fun res!48559 () Bool)

(assert (=> b!96161 (=> (not res!48559) (not e!62709))))

(assert (=> b!96161 (= res!48559 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25345 (not res!48557)) b!96161))

(assert (= (and b!96161 res!48559) b!96157))

(assert (= (and b!96161 res!48558) b!96159))

(assert (= (and b!96159 c!16186) b!96160))

(assert (= (and b!96159 (not c!16186)) b!96158))

(assert (= (or b!96160 b!96158) bm!9742))

(declare-fun m!104265 () Bool)

(assert (=> b!96157 m!104265))

(assert (=> b!96157 m!104265))

(declare-fun m!104267 () Bool)

(assert (=> b!96157 m!104267))

(assert (=> bm!9742 m!104265))

(declare-fun m!104269 () Bool)

(assert (=> bm!9742 m!104269))

(assert (=> b!96159 m!104265))

(assert (=> b!96159 m!104265))

(declare-fun m!104271 () Bool)

(assert (=> b!96159 m!104271))

(assert (=> b!96161 m!104265))

(assert (=> b!96161 m!104265))

(assert (=> b!96161 m!104271))

(assert (=> bm!9599 d!25345))

(assert (=> b!95807 d!25341))

(assert (=> b!95607 d!25333))

(declare-fun d!25347 () Bool)

(declare-fun e!62710 () Bool)

(assert (=> d!25347 e!62710))

(declare-fun res!48560 () Bool)

(assert (=> d!25347 (=> res!48560 e!62710)))

(declare-fun lt!48023 () Bool)

(assert (=> d!25347 (= res!48560 (not lt!48023))))

(declare-fun lt!48024 () Bool)

(assert (=> d!25347 (= lt!48023 lt!48024)))

(declare-fun lt!48025 () Unit!2865)

(declare-fun e!62711 () Unit!2865)

(assert (=> d!25347 (= lt!48025 e!62711)))

(declare-fun c!16187 () Bool)

(assert (=> d!25347 (= c!16187 lt!48024)))

(assert (=> d!25347 (= lt!48024 (containsKey!151 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (=> d!25347 (= (contains!791 call!9656 (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))) lt!48023)))

(declare-fun b!96162 () Bool)

(declare-fun lt!48022 () Unit!2865)

(assert (=> b!96162 (= e!62711 lt!48022)))

(assert (=> b!96162 (= lt!48022 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (=> b!96162 (isDefined!101 (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(declare-fun b!96163 () Bool)

(declare-fun Unit!2887 () Unit!2865)

(assert (=> b!96163 (= e!62711 Unit!2887)))

(declare-fun b!96164 () Bool)

(assert (=> b!96164 (= e!62710 (isDefined!101 (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))))

(assert (= (and d!25347 c!16187) b!96162))

(assert (= (and d!25347 (not c!16187)) b!96163))

(assert (= (and d!25347 (not res!48560)) b!96164))

(assert (=> d!25347 m!103633))

(declare-fun m!104273 () Bool)

(assert (=> d!25347 m!104273))

(assert (=> b!96162 m!103633))

(declare-fun m!104275 () Bool)

(assert (=> b!96162 m!104275))

(assert (=> b!96162 m!103633))

(declare-fun m!104277 () Bool)

(assert (=> b!96162 m!104277))

(assert (=> b!96162 m!104277))

(declare-fun m!104279 () Bool)

(assert (=> b!96162 m!104279))

(assert (=> b!96164 m!103633))

(assert (=> b!96164 m!104277))

(assert (=> b!96164 m!104277))

(assert (=> b!96164 m!104279))

(assert (=> b!95712 d!25347))

(declare-fun d!25349 () Bool)

(declare-fun e!62714 () Bool)

(assert (=> d!25349 e!62714))

(declare-fun res!48563 () Bool)

(assert (=> d!25349 (=> (not res!48563) (not e!62714))))

(assert (=> d!25349 (= res!48563 (and (bvsge (index!3163 lt!47654) #b00000000000000000000000000000000) (bvslt (index!3163 lt!47654) (size!2240 (_keys!4141 newMap!16)))))))

(declare-fun lt!48028 () Unit!2865)

(declare-fun choose!588 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) Unit!2865)

(assert (=> d!25349 (= lt!48028 (choose!588 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25349 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25349 (= (lemmaValidKeyInArrayIsInListMap!99 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (defaultEntry!2456 newMap!16)) lt!48028)))

(declare-fun b!96167 () Bool)

(assert (=> b!96167 (= e!62714 (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (= (and d!25349 res!48563) b!96167))

(declare-fun m!104281 () Bool)

(assert (=> d!25349 m!104281))

(assert (=> d!25349 m!103855))

(declare-fun m!104283 () Bool)

(assert (=> b!96167 m!104283))

(assert (=> b!96167 m!103633))

(assert (=> b!96167 m!104283))

(assert (=> b!96167 m!103633))

(declare-fun m!104285 () Bool)

(assert (=> b!96167 m!104285))

(assert (=> b!95712 d!25349))

(declare-fun d!25351 () Bool)

(declare-fun e!62717 () Bool)

(assert (=> d!25351 e!62717))

(declare-fun res!48566 () Bool)

(assert (=> d!25351 (=> (not res!48566) (not e!62717))))

(assert (=> d!25351 (= res!48566 (and (bvsge (index!3163 lt!47654) #b00000000000000000000000000000000) (bvslt (index!3163 lt!47654) (size!2241 (_values!2439 newMap!16)))))))

(declare-fun lt!48031 () Unit!2865)

(declare-fun choose!589 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2865)

(assert (=> d!25351 (= lt!48031 (choose!589 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25351 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25351 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!48031)))

(declare-fun b!96170 () Bool)

(assert (=> b!96170 (= e!62717 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))))

(assert (= (and d!25351 res!48566) b!96170))

(assert (=> d!25351 m!103459))

(assert (=> d!25351 m!103491))

(declare-fun m!104287 () Bool)

(assert (=> d!25351 m!104287))

(assert (=> d!25351 m!103855))

(assert (=> b!96170 m!103619))

(assert (=> b!96170 m!103619))

(assert (=> b!96170 m!103901))

(assert (=> b!96170 m!103629))

(declare-fun m!104289 () Bool)

(assert (=> b!96170 m!104289))

(assert (=> b!95712 d!25351))

(declare-fun d!25353 () Bool)

(declare-fun e!62718 () Bool)

(assert (=> d!25353 e!62718))

(declare-fun res!48567 () Bool)

(assert (=> d!25353 (=> res!48567 e!62718)))

(declare-fun lt!48033 () Bool)

(assert (=> d!25353 (= res!48567 (not lt!48033))))

(declare-fun lt!48034 () Bool)

(assert (=> d!25353 (= lt!48033 lt!48034)))

(declare-fun lt!48035 () Unit!2865)

(declare-fun e!62719 () Unit!2865)

(assert (=> d!25353 (= lt!48035 e!62719)))

(declare-fun c!16188 () Bool)

(assert (=> d!25353 (= c!16188 lt!48034)))

(assert (=> d!25353 (= lt!48034 (containsKey!151 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!25353 (= (contains!791 lt!47731 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48033)))

(declare-fun b!96171 () Bool)

(declare-fun lt!48032 () Unit!2865)

(assert (=> b!96171 (= e!62719 lt!48032)))

(assert (=> b!96171 (= lt!48032 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96171 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!96172 () Bool)

(declare-fun Unit!2888 () Unit!2865)

(assert (=> b!96172 (= e!62719 Unit!2888)))

(declare-fun b!96173 () Bool)

(assert (=> b!96173 (= e!62718 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!25353 c!16188) b!96171))

(assert (= (and d!25353 (not c!16188)) b!96172))

(assert (= (and d!25353 (not res!48567)) b!96173))

(assert (=> d!25353 m!103591))

(declare-fun m!104291 () Bool)

(assert (=> d!25353 m!104291))

(assert (=> b!96171 m!103591))

(declare-fun m!104293 () Bool)

(assert (=> b!96171 m!104293))

(assert (=> b!96171 m!103591))

(assert (=> b!96171 m!104213))

(assert (=> b!96171 m!104213))

(declare-fun m!104295 () Bool)

(assert (=> b!96171 m!104295))

(assert (=> b!96173 m!103591))

(assert (=> b!96173 m!104213))

(assert (=> b!96173 m!104213))

(assert (=> b!96173 m!104295))

(assert (=> b!95805 d!25353))

(assert (=> b!95723 d!25289))

(declare-fun b!96175 () Bool)

(declare-fun e!62720 () Bool)

(assert (=> b!96175 (= e!62720 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3713 () Bool)

(declare-fun mapRes!3713 () Bool)

(assert (=> mapIsEmpty!3713 mapRes!3713))

(declare-fun mapNonEmpty!3713 () Bool)

(declare-fun tp!9509 () Bool)

(declare-fun e!62721 () Bool)

(assert (=> mapNonEmpty!3713 (= mapRes!3713 (and tp!9509 e!62721))))

(declare-fun mapRest!3713 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3713 () ValueCell!965)

(declare-fun mapKey!3713 () (_ BitVec 32))

(assert (=> mapNonEmpty!3713 (= mapRest!3712 (store mapRest!3713 mapKey!3713 mapValue!3713))))

(declare-fun condMapEmpty!3713 () Bool)

(declare-fun mapDefault!3713 () ValueCell!965)

(assert (=> mapNonEmpty!3712 (= condMapEmpty!3713 (= mapRest!3712 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3713)))))

(assert (=> mapNonEmpty!3712 (= tp!9508 (and e!62720 mapRes!3713))))

(declare-fun b!96174 () Bool)

(assert (=> b!96174 (= e!62721 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3712 condMapEmpty!3713) mapIsEmpty!3713))

(assert (= (and mapNonEmpty!3712 (not condMapEmpty!3713)) mapNonEmpty!3713))

(assert (= (and mapNonEmpty!3713 ((_ is ValueCellFull!965) mapValue!3713)) b!96174))

(assert (= (and mapNonEmpty!3712 ((_ is ValueCellFull!965) mapDefault!3713)) b!96175))

(declare-fun m!104297 () Bool)

(assert (=> mapNonEmpty!3713 m!104297))

(declare-fun b!96177 () Bool)

(declare-fun e!62722 () Bool)

(assert (=> b!96177 (= e!62722 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3714 () Bool)

(declare-fun mapRes!3714 () Bool)

(assert (=> mapIsEmpty!3714 mapRes!3714))

(declare-fun mapNonEmpty!3714 () Bool)

(declare-fun tp!9510 () Bool)

(declare-fun e!62723 () Bool)

(assert (=> mapNonEmpty!3714 (= mapRes!3714 (and tp!9510 e!62723))))

(declare-fun mapKey!3714 () (_ BitVec 32))

(declare-fun mapValue!3714 () ValueCell!965)

(declare-fun mapRest!3714 () (Array (_ BitVec 32) ValueCell!965))

(assert (=> mapNonEmpty!3714 (= mapRest!3711 (store mapRest!3714 mapKey!3714 mapValue!3714))))

(declare-fun condMapEmpty!3714 () Bool)

(declare-fun mapDefault!3714 () ValueCell!965)

(assert (=> mapNonEmpty!3711 (= condMapEmpty!3714 (= mapRest!3711 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3714)))))

(assert (=> mapNonEmpty!3711 (= tp!9507 (and e!62722 mapRes!3714))))

(declare-fun b!96176 () Bool)

(assert (=> b!96176 (= e!62723 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3711 condMapEmpty!3714) mapIsEmpty!3714))

(assert (= (and mapNonEmpty!3711 (not condMapEmpty!3714)) mapNonEmpty!3714))

(assert (= (and mapNonEmpty!3714 ((_ is ValueCellFull!965) mapValue!3714)) b!96176))

(assert (= (and mapNonEmpty!3711 ((_ is ValueCellFull!965) mapDefault!3714)) b!96177))

(declare-fun m!104299 () Bool)

(assert (=> mapNonEmpty!3714 m!104299))

(declare-fun b_lambda!4243 () Bool)

(assert (= b_lambda!4241 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4243)))

(declare-fun b_lambda!4245 () Bool)

(assert (= b_lambda!4237 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4245)))

(declare-fun b_lambda!4247 () Bool)

(assert (= b_lambda!4239 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4247)))

(declare-fun b_lambda!4249 () Bool)

(assert (= b_lambda!4233 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4249)))

(declare-fun b_lambda!4251 () Bool)

(assert (= b_lambda!4235 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4251)))

(check-sat (not b!96070) (not d!25239) (not b!96008) (not b_next!2403) (not d!25273) (not d!25233) (not bm!9720) (not bm!9733) (not b!95998) (not b!95978) (not bm!9716) (not b!96161) (not b!95884) (not b!96087) (not bm!9722) (not b!96032) (not b!96000) (not b!96021) (not b!95887) (not bm!9730) (not b!96071) (not b!95880) (not b!96097) (not d!25253) (not b!96029) (not b!96173) (not b!95970) (not d!25255) (not b!95958) (not b!95972) (not bm!9708) (not b!96009) (not b!95988) (not d!25315) (not d!25295) (not d!25241) (not b!96117) (not d!25235) (not b!96013) (not b!96095) b_and!5871 (not bm!9710) (not d!25277) (not d!25237) (not b!96162) (not b!96157) (not d!25327) (not b!96083) (not b!96125) (not d!25279) (not b!96059) (not b!95842) (not d!25313) (not d!25243) (not b!95971) (not b!95989) (not b!95987) (not b!96086) (not b!96019) (not bm!9735) (not b!95899) (not b!95966) (not b!96164) (not d!25301) (not b!96122) (not b!95922) (not b_lambda!4251) (not d!25293) (not b_lambda!4227) (not b!96132) (not d!25285) (not bm!9698) (not b!95852) (not b!95841) (not d!25291) (not b!96096) (not b!96116) (not b!95844) (not b!95883) (not b!95979) (not b!95975) (not b!95881) (not d!25347) (not d!25349) (not d!25267) (not mapNonEmpty!3714) (not b!96167) (not b!96073) (not d!25321) (not bm!9713) (not b!96028) (not b!96068) (not d!25227) (not b!96005) (not bm!9741) (not bm!9727) (not b_lambda!4245) (not mapNonEmpty!3713) (not d!25249) (not b!95917) (not d!25251) tp_is_empty!2617 (not d!25337) (not b!95898) (not b!96110) (not b!95911) (not b!96130) (not b!96171) (not b!96069) (not d!25319) (not d!25297) (not b!96026) (not bm!9723) (not d!25343) (not bm!9707) (not b_next!2401) (not d!25281) (not d!25309) (not b!95879) (not b!95877) (not b!95851) (not b_lambda!4247) (not bm!9695) (not bm!9715) (not b!95846) (not d!25307) (not b!96115) (not b!96043) (not b!95836) (not b!95914) (not b!96119) (not b!95992) (not b!96010) (not d!25305) (not b!95835) (not b!96127) (not b!95912) (not b_lambda!4231) (not bm!9742) (not b!96170) (not b!95976) (not d!25257) (not d!25323) (not b!95963) (not b!96159) (not b!95848) (not b!96100) (not bm!9711) (not d!25229) (not b!96023) (not d!25263) (not d!25287) (not bm!9740) (not b!96106) (not d!25231) (not b!95977) (not bm!9732) (not d!25259) (not b!95843) (not b!96002) (not b_lambda!4249) (not b!96092) (not b!96113) (not b!95985) (not d!25335) (not d!25329) (not b!95915) (not b!96108) (not d!25289) (not d!25247) (not d!25275) (not bm!9718) (not b!96072) (not d!25351) b_and!5869 (not b!95882) (not d!25353) (not b!96123) (not b!96120) (not bm!9728) (not b_lambda!4243) (not d!25245) (not b!96128))
(check-sat b_and!5869 b_and!5871 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25355 () Bool)

(assert (=> d!25355 (= (get!1278 (getValueByKey!147 (toList!769 lt!47730) lt!47715)) (v!2775 (getValueByKey!147 (toList!769 lt!47730) lt!47715)))))

(assert (=> d!25227 d!25355))

(declare-fun b!96179 () Bool)

(declare-fun e!62724 () Option!153)

(declare-fun e!62725 () Option!153)

(assert (=> b!96179 (= e!62724 e!62725)))

(declare-fun c!16190 () Bool)

(assert (=> b!96179 (= c!16190 (and ((_ is Cons!1576) (toList!769 lt!47730)) (not (= (_1!1168 (h!2169 (toList!769 lt!47730))) lt!47715))))))

(declare-fun b!96180 () Bool)

(assert (=> b!96180 (= e!62725 (getValueByKey!147 (t!5493 (toList!769 lt!47730)) lt!47715))))

(declare-fun b!96178 () Bool)

(assert (=> b!96178 (= e!62724 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47730)))))))

(declare-fun b!96181 () Bool)

(assert (=> b!96181 (= e!62725 None!151)))

(declare-fun d!25357 () Bool)

(declare-fun c!16189 () Bool)

(assert (=> d!25357 (= c!16189 (and ((_ is Cons!1576) (toList!769 lt!47730)) (= (_1!1168 (h!2169 (toList!769 lt!47730))) lt!47715)))))

(assert (=> d!25357 (= (getValueByKey!147 (toList!769 lt!47730) lt!47715) e!62724)))

(assert (= (and d!25357 c!16189) b!96178))

(assert (= (and d!25357 (not c!16189)) b!96179))

(assert (= (and b!96179 c!16190) b!96180))

(assert (= (and b!96179 (not c!16190)) b!96181))

(declare-fun m!104301 () Bool)

(assert (=> b!96180 m!104301))

(assert (=> d!25227 d!25357))

(declare-fun b!96183 () Bool)

(declare-fun e!62726 () Option!153)

(declare-fun e!62727 () Option!153)

(assert (=> b!96183 (= e!62726 e!62727)))

(declare-fun c!16192 () Bool)

(assert (=> b!96183 (= c!16192 (and ((_ is Cons!1576) (toList!769 lt!47954)) (not (= (_1!1168 (h!2169 (toList!769 lt!47954))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!96184 () Bool)

(assert (=> b!96184 (= e!62727 (getValueByKey!147 (t!5493 (toList!769 lt!47954)) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96182 () Bool)

(assert (=> b!96182 (= e!62726 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47954)))))))

(declare-fun b!96185 () Bool)

(assert (=> b!96185 (= e!62727 None!151)))

(declare-fun c!16191 () Bool)

(declare-fun d!25359 () Bool)

(assert (=> d!25359 (= c!16191 (and ((_ is Cons!1576) (toList!769 lt!47954)) (= (_1!1168 (h!2169 (toList!769 lt!47954))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25359 (= (getValueByKey!147 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62726)))

(assert (= (and d!25359 c!16191) b!96182))

(assert (= (and d!25359 (not c!16191)) b!96183))

(assert (= (and b!96183 c!16192) b!96184))

(assert (= (and b!96183 (not c!16192)) b!96185))

(declare-fun m!104303 () Bool)

(assert (=> b!96184 m!104303))

(assert (=> b!96028 d!25359))

(declare-fun d!25361 () Bool)

(declare-fun e!62728 () Bool)

(assert (=> d!25361 e!62728))

(declare-fun res!48568 () Bool)

(assert (=> d!25361 (=> res!48568 e!62728)))

(declare-fun lt!48037 () Bool)

(assert (=> d!25361 (= res!48568 (not lt!48037))))

(declare-fun lt!48038 () Bool)

(assert (=> d!25361 (= lt!48037 lt!48038)))

(declare-fun lt!48039 () Unit!2865)

(declare-fun e!62729 () Unit!2865)

(assert (=> d!25361 (= lt!48039 e!62729)))

(declare-fun c!16193 () Bool)

(assert (=> d!25361 (= c!16193 lt!48038)))

(assert (=> d!25361 (= lt!48038 (containsKey!151 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25361 (= (contains!791 lt!47970 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48037)))

(declare-fun b!96186 () Bool)

(declare-fun lt!48036 () Unit!2865)

(assert (=> b!96186 (= e!62729 lt!48036)))

(assert (=> b!96186 (= lt!48036 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> b!96186 (isDefined!101 (getValueByKey!147 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96187 () Bool)

(declare-fun Unit!2889 () Unit!2865)

(assert (=> b!96187 (= e!62729 Unit!2889)))

(declare-fun b!96188 () Bool)

(assert (=> b!96188 (= e!62728 (isDefined!101 (getValueByKey!147 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25361 c!16193) b!96186))

(assert (= (and d!25361 (not c!16193)) b!96187))

(assert (= (and d!25361 (not res!48568)) b!96188))

(declare-fun m!104305 () Bool)

(assert (=> d!25361 m!104305))

(declare-fun m!104307 () Bool)

(assert (=> b!96186 m!104307))

(assert (=> b!96186 m!104129))

(assert (=> b!96186 m!104129))

(declare-fun m!104309 () Bool)

(assert (=> b!96186 m!104309))

(assert (=> b!96188 m!104129))

(assert (=> b!96188 m!104129))

(assert (=> b!96188 m!104309))

(assert (=> d!25305 d!25361))

(declare-fun b!96190 () Bool)

(declare-fun e!62730 () Option!153)

(declare-fun e!62731 () Option!153)

(assert (=> b!96190 (= e!62730 e!62731)))

(declare-fun c!16195 () Bool)

(assert (=> b!96190 (= c!16195 (and ((_ is Cons!1576) lt!47968) (not (= (_1!1168 (h!2169 lt!47968)) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96191 () Bool)

(assert (=> b!96191 (= e!62731 (getValueByKey!147 (t!5493 lt!47968) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96189 () Bool)

(assert (=> b!96189 (= e!62730 (Some!152 (_2!1168 (h!2169 lt!47968))))))

(declare-fun b!96192 () Bool)

(assert (=> b!96192 (= e!62731 None!151)))

(declare-fun d!25363 () Bool)

(declare-fun c!16194 () Bool)

(assert (=> d!25363 (= c!16194 (and ((_ is Cons!1576) lt!47968) (= (_1!1168 (h!2169 lt!47968)) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25363 (= (getValueByKey!147 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!62730)))

(assert (= (and d!25363 c!16194) b!96189))

(assert (= (and d!25363 (not c!16194)) b!96190))

(assert (= (and b!96190 c!16195) b!96191))

(assert (= (and b!96190 (not c!16195)) b!96192))

(declare-fun m!104311 () Bool)

(assert (=> b!96191 m!104311))

(assert (=> d!25305 d!25363))

(declare-fun d!25365 () Bool)

(assert (=> d!25365 (= (getValueByKey!147 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48042 () Unit!2865)

(declare-fun choose!590 (List!1580 (_ BitVec 64) V!3137) Unit!2865)

(assert (=> d!25365 (= lt!48042 (choose!590 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!62734 () Bool)

(assert (=> d!25365 e!62734))

(declare-fun res!48573 () Bool)

(assert (=> d!25365 (=> (not res!48573) (not e!62734))))

(assert (=> d!25365 (= res!48573 (isStrictlySorted!298 lt!47968))))

(assert (=> d!25365 (= (lemmaContainsTupThenGetReturnValue!66 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48042)))

(declare-fun b!96197 () Bool)

(declare-fun res!48574 () Bool)

(assert (=> b!96197 (=> (not res!48574) (not e!62734))))

(assert (=> b!96197 (= res!48574 (containsKey!151 lt!47968 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96198 () Bool)

(assert (=> b!96198 (= e!62734 (contains!793 lt!47968 (tuple2!2315 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25365 res!48573) b!96197))

(assert (= (and b!96197 res!48574) b!96198))

(assert (=> d!25365 m!104123))

(declare-fun m!104313 () Bool)

(assert (=> d!25365 m!104313))

(declare-fun m!104315 () Bool)

(assert (=> d!25365 m!104315))

(declare-fun m!104317 () Bool)

(assert (=> b!96197 m!104317))

(declare-fun m!104319 () Bool)

(assert (=> b!96198 m!104319))

(assert (=> d!25305 d!25365))

(declare-fun b!96219 () Bool)

(declare-fun e!62749 () List!1580)

(declare-fun call!9752 () List!1580)

(assert (=> b!96219 (= e!62749 call!9752)))

(declare-fun e!62747 () List!1580)

(declare-fun c!16206 () Bool)

(declare-fun c!16205 () Bool)

(declare-fun b!96220 () Bool)

(assert (=> b!96220 (= e!62747 (ite c!16206 (t!5493 (toList!769 call!9692)) (ite c!16205 (Cons!1576 (h!2169 (toList!769 call!9692)) (t!5493 (toList!769 call!9692))) Nil!1577)))))

(declare-fun b!96221 () Bool)

(assert (=> b!96221 (= e!62747 (insertStrictlySorted!69 (t!5493 (toList!769 call!9692)) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96222 () Bool)

(declare-fun e!62746 () Bool)

(declare-fun lt!48045 () List!1580)

(assert (=> b!96222 (= e!62746 (contains!793 lt!48045 (tuple2!2315 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9749 () Bool)

(declare-fun call!9753 () List!1580)

(declare-fun call!9754 () List!1580)

(assert (=> bm!9749 (= call!9753 call!9754)))

(declare-fun b!96223 () Bool)

(declare-fun e!62745 () List!1580)

(assert (=> b!96223 (= e!62745 call!9753)))

(declare-fun b!96224 () Bool)

(assert (=> b!96224 (= e!62749 call!9752)))

(declare-fun d!25367 () Bool)

(assert (=> d!25367 e!62746))

(declare-fun res!48579 () Bool)

(assert (=> d!25367 (=> (not res!48579) (not e!62746))))

(assert (=> d!25367 (= res!48579 (isStrictlySorted!298 lt!48045))))

(declare-fun e!62748 () List!1580)

(assert (=> d!25367 (= lt!48045 e!62748)))

(declare-fun c!16204 () Bool)

(assert (=> d!25367 (= c!16204 (and ((_ is Cons!1576) (toList!769 call!9692)) (bvslt (_1!1168 (h!2169 (toList!769 call!9692))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25367 (isStrictlySorted!298 (toList!769 call!9692))))

(assert (=> d!25367 (= (insertStrictlySorted!69 (toList!769 call!9692) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48045)))

(declare-fun b!96225 () Bool)

(assert (=> b!96225 (= c!16205 (and ((_ is Cons!1576) (toList!769 call!9692)) (bvsgt (_1!1168 (h!2169 (toList!769 call!9692))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96225 (= e!62745 e!62749)))

(declare-fun b!96226 () Bool)

(declare-fun res!48580 () Bool)

(assert (=> b!96226 (=> (not res!48580) (not e!62746))))

(assert (=> b!96226 (= res!48580 (containsKey!151 lt!48045 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9750 () Bool)

(declare-fun $colon$colon!76 (List!1580 tuple2!2314) List!1580)

(assert (=> bm!9750 (= call!9754 ($colon$colon!76 e!62747 (ite c!16204 (h!2169 (toList!769 call!9692)) (tuple2!2315 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun c!16207 () Bool)

(assert (=> bm!9750 (= c!16207 c!16204)))

(declare-fun b!96227 () Bool)

(assert (=> b!96227 (= e!62748 e!62745)))

(assert (=> b!96227 (= c!16206 (and ((_ is Cons!1576) (toList!769 call!9692)) (= (_1!1168 (h!2169 (toList!769 call!9692))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96228 () Bool)

(assert (=> b!96228 (= e!62748 call!9754)))

(declare-fun bm!9751 () Bool)

(assert (=> bm!9751 (= call!9752 call!9753)))

(assert (= (and d!25367 c!16204) b!96228))

(assert (= (and d!25367 (not c!16204)) b!96227))

(assert (= (and b!96227 c!16206) b!96223))

(assert (= (and b!96227 (not c!16206)) b!96225))

(assert (= (and b!96225 c!16205) b!96224))

(assert (= (and b!96225 (not c!16205)) b!96219))

(assert (= (or b!96224 b!96219) bm!9751))

(assert (= (or b!96223 bm!9751) bm!9749))

(assert (= (or b!96228 bm!9749) bm!9750))

(assert (= (and bm!9750 c!16207) b!96221))

(assert (= (and bm!9750 (not c!16207)) b!96220))

(assert (= (and d!25367 res!48579) b!96226))

(assert (= (and b!96226 res!48580) b!96222))

(declare-fun m!104321 () Bool)

(assert (=> b!96226 m!104321))

(declare-fun m!104323 () Bool)

(assert (=> b!96222 m!104323))

(declare-fun m!104325 () Bool)

(assert (=> bm!9750 m!104325))

(declare-fun m!104327 () Bool)

(assert (=> d!25367 m!104327))

(declare-fun m!104329 () Bool)

(assert (=> d!25367 m!104329))

(declare-fun m!104331 () Bool)

(assert (=> b!96221 m!104331))

(assert (=> d!25305 d!25367))

(declare-fun d!25369 () Bool)

(declare-fun res!48581 () Bool)

(declare-fun e!62750 () Bool)

(assert (=> d!25369 (=> res!48581 e!62750)))

(assert (=> d!25369 (= res!48581 (and ((_ is Cons!1576) (t!5493 (toList!769 lt!47518))) (= (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518)))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25369 (= (containsKey!151 (t!5493 (toList!769 lt!47518)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62750)))

(declare-fun b!96229 () Bool)

(declare-fun e!62751 () Bool)

(assert (=> b!96229 (= e!62750 e!62751)))

(declare-fun res!48582 () Bool)

(assert (=> b!96229 (=> (not res!48582) (not e!62751))))

(assert (=> b!96229 (= res!48582 (and (or (not ((_ is Cons!1576) (t!5493 (toList!769 lt!47518)))) (bvsle (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518)))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) ((_ is Cons!1576) (t!5493 (toList!769 lt!47518))) (bvslt (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518)))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(declare-fun b!96230 () Bool)

(assert (=> b!96230 (= e!62751 (containsKey!151 (t!5493 (t!5493 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25369 (not res!48581)) b!96229))

(assert (= (and b!96229 res!48582) b!96230))

(assert (=> b!96230 m!103459))

(declare-fun m!104333 () Bool)

(assert (=> b!96230 m!104333))

(assert (=> b!96068 d!25369))

(declare-fun lt!48048 () Bool)

(declare-fun d!25371 () Bool)

(declare-fun content!100 (List!1580) (InoxSet tuple2!2314))

(assert (=> d!25371 (= lt!48048 (select (content!100 (toList!769 lt!47753)) (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun e!62756 () Bool)

(assert (=> d!25371 (= lt!48048 e!62756)))

(declare-fun res!48588 () Bool)

(assert (=> d!25371 (=> (not res!48588) (not e!62756))))

(assert (=> d!25371 (= res!48588 ((_ is Cons!1576) (toList!769 lt!47753)))))

(assert (=> d!25371 (= (contains!793 (toList!769 lt!47753) (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!48048)))

(declare-fun b!96235 () Bool)

(declare-fun e!62757 () Bool)

(assert (=> b!96235 (= e!62756 e!62757)))

(declare-fun res!48587 () Bool)

(assert (=> b!96235 (=> res!48587 e!62757)))

(assert (=> b!96235 (= res!48587 (= (h!2169 (toList!769 lt!47753)) (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96236 () Bool)

(assert (=> b!96236 (= e!62757 (contains!793 (t!5493 (toList!769 lt!47753)) (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25371 res!48588) b!96235))

(assert (= (and b!96235 (not res!48587)) b!96236))

(declare-fun m!104335 () Bool)

(assert (=> d!25371 m!104335))

(declare-fun m!104337 () Bool)

(assert (=> d!25371 m!104337))

(declare-fun m!104339 () Bool)

(assert (=> b!96236 m!104339))

(assert (=> b!95844 d!25371))

(declare-fun d!25373 () Bool)

(declare-fun e!62758 () Bool)

(assert (=> d!25373 e!62758))

(declare-fun res!48590 () Bool)

(assert (=> d!25373 (=> (not res!48590) (not e!62758))))

(declare-fun lt!48051 () ListLongMap!1507)

(assert (=> d!25373 (= res!48590 (contains!791 lt!48051 (_1!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(declare-fun lt!48049 () List!1580)

(assert (=> d!25373 (= lt!48051 (ListLongMap!1508 lt!48049))))

(declare-fun lt!48050 () Unit!2865)

(declare-fun lt!48052 () Unit!2865)

(assert (=> d!25373 (= lt!48050 lt!48052)))

(assert (=> d!25373 (= (getValueByKey!147 lt!48049 (_1!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25373 (= lt!48052 (lemmaContainsTupThenGetReturnValue!66 lt!48049 (_1!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25373 (= lt!48049 (insertStrictlySorted!69 (toList!769 lt!47991) (_1!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25373 (= (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48051)))

(declare-fun b!96237 () Bool)

(declare-fun res!48589 () Bool)

(assert (=> b!96237 (=> (not res!48589) (not e!62758))))

(assert (=> b!96237 (= res!48589 (= (getValueByKey!147 (toList!769 lt!48051) (_1!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))))

(declare-fun b!96238 () Bool)

(assert (=> b!96238 (= e!62758 (contains!793 (toList!769 lt!48051) (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))

(assert (= (and d!25373 res!48590) b!96237))

(assert (= (and b!96237 res!48589) b!96238))

(declare-fun m!104341 () Bool)

(assert (=> d!25373 m!104341))

(declare-fun m!104343 () Bool)

(assert (=> d!25373 m!104343))

(declare-fun m!104345 () Bool)

(assert (=> d!25373 m!104345))

(declare-fun m!104347 () Bool)

(assert (=> d!25373 m!104347))

(declare-fun m!104349 () Bool)

(assert (=> b!96237 m!104349))

(declare-fun m!104351 () Bool)

(assert (=> b!96238 m!104351))

(assert (=> b!96095 d!25373))

(declare-fun d!25375 () Bool)

(declare-fun e!62759 () Bool)

(assert (=> d!25375 e!62759))

(declare-fun res!48592 () Bool)

(assert (=> d!25375 (=> (not res!48592) (not e!62759))))

(declare-fun lt!48055 () ListLongMap!1507)

(assert (=> d!25375 (= res!48592 (contains!791 lt!48055 (_1!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48053 () List!1580)

(assert (=> d!25375 (= lt!48055 (ListLongMap!1508 lt!48053))))

(declare-fun lt!48054 () Unit!2865)

(declare-fun lt!48056 () Unit!2865)

(assert (=> d!25375 (= lt!48054 lt!48056)))

(assert (=> d!25375 (= (getValueByKey!147 lt!48053 (_1!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25375 (= lt!48056 (lemmaContainsTupThenGetReturnValue!66 lt!48053 (_1!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25375 (= lt!48053 (insertStrictlySorted!69 (toList!769 lt!47994) (_1!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25375 (= (+!127 lt!47994 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48055)))

(declare-fun b!96239 () Bool)

(declare-fun res!48591 () Bool)

(assert (=> b!96239 (=> (not res!48591) (not e!62759))))

(assert (=> b!96239 (= res!48591 (= (getValueByKey!147 (toList!769 lt!48055) (_1!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96240 () Bool)

(assert (=> b!96240 (= e!62759 (contains!793 (toList!769 lt!48055) (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25375 res!48592) b!96239))

(assert (= (and b!96239 res!48591) b!96240))

(declare-fun m!104353 () Bool)

(assert (=> d!25375 m!104353))

(declare-fun m!104355 () Bool)

(assert (=> d!25375 m!104355))

(declare-fun m!104357 () Bool)

(assert (=> d!25375 m!104357))

(declare-fun m!104359 () Bool)

(assert (=> d!25375 m!104359))

(declare-fun m!104361 () Bool)

(assert (=> b!96239 m!104361))

(declare-fun m!104363 () Bool)

(assert (=> b!96240 m!104363))

(assert (=> b!96095 d!25375))

(declare-fun d!25377 () Bool)

(declare-fun e!62760 () Bool)

(assert (=> d!25377 e!62760))

(declare-fun res!48594 () Bool)

(assert (=> d!25377 (=> (not res!48594) (not e!62760))))

(declare-fun lt!48059 () ListLongMap!1507)

(assert (=> d!25377 (= res!48594 (contains!791 lt!48059 (_1!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48057 () List!1580)

(assert (=> d!25377 (= lt!48059 (ListLongMap!1508 lt!48057))))

(declare-fun lt!48058 () Unit!2865)

(declare-fun lt!48060 () Unit!2865)

(assert (=> d!25377 (= lt!48058 lt!48060)))

(assert (=> d!25377 (= (getValueByKey!147 lt!48057 (_1!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25377 (= lt!48060 (lemmaContainsTupThenGetReturnValue!66 lt!48057 (_1!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25377 (= lt!48057 (insertStrictlySorted!69 (toList!769 lt!47990) (_1!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25377 (= (+!127 lt!47990 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48059)))

(declare-fun b!96241 () Bool)

(declare-fun res!48593 () Bool)

(assert (=> b!96241 (=> (not res!48593) (not e!62760))))

(assert (=> b!96241 (= res!48593 (= (getValueByKey!147 (toList!769 lt!48059) (_1!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96242 () Bool)

(assert (=> b!96242 (= e!62760 (contains!793 (toList!769 lt!48059) (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25377 res!48594) b!96241))

(assert (= (and b!96241 res!48593) b!96242))

(declare-fun m!104365 () Bool)

(assert (=> d!25377 m!104365))

(declare-fun m!104367 () Bool)

(assert (=> d!25377 m!104367))

(declare-fun m!104369 () Bool)

(assert (=> d!25377 m!104369))

(declare-fun m!104371 () Bool)

(assert (=> d!25377 m!104371))

(declare-fun m!104373 () Bool)

(assert (=> b!96241 m!104373))

(declare-fun m!104375 () Bool)

(assert (=> b!96242 m!104375))

(assert (=> b!96095 d!25377))

(declare-fun d!25379 () Bool)

(assert (=> d!25379 (contains!791 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47985)))

(declare-fun lt!48061 () Unit!2865)

(assert (=> d!25379 (= lt!48061 (choose!582 lt!47991 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47985))))

(assert (=> d!25379 (contains!791 lt!47991 lt!47985)))

(assert (=> d!25379 (= (addStillContains!67 lt!47991 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47985) lt!48061)))

(declare-fun bs!3951 () Bool)

(assert (= bs!3951 d!25379))

(assert (=> bs!3951 m!104175))

(assert (=> bs!3951 m!104175))

(assert (=> bs!3951 m!104177))

(declare-fun m!104377 () Bool)

(assert (=> bs!3951 m!104377))

(declare-fun m!104379 () Bool)

(assert (=> bs!3951 m!104379))

(assert (=> b!96095 d!25379))

(declare-fun d!25381 () Bool)

(assert (=> d!25381 (= (apply!91 (+!127 lt!47994 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47980) (apply!91 lt!47994 lt!47980))))

(declare-fun lt!48062 () Unit!2865)

(assert (=> d!25381 (= lt!48062 (choose!581 lt!47994 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47980))))

(declare-fun e!62761 () Bool)

(assert (=> d!25381 e!62761))

(declare-fun res!48595 () Bool)

(assert (=> d!25381 (=> (not res!48595) (not e!62761))))

(assert (=> d!25381 (= res!48595 (contains!791 lt!47994 lt!47980))))

(assert (=> d!25381 (= (addApplyDifferent!67 lt!47994 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47980) lt!48062)))

(declare-fun b!96243 () Bool)

(assert (=> b!96243 (= e!62761 (not (= lt!47980 lt!47979)))))

(assert (= (and d!25381 res!48595) b!96243))

(assert (=> d!25381 m!104197))

(assert (=> d!25381 m!104199))

(declare-fun m!104381 () Bool)

(assert (=> d!25381 m!104381))

(declare-fun m!104383 () Bool)

(assert (=> d!25381 m!104383))

(assert (=> d!25381 m!104197))

(assert (=> d!25381 m!104181))

(assert (=> b!96095 d!25381))

(declare-fun d!25383 () Bool)

(declare-fun e!62762 () Bool)

(assert (=> d!25383 e!62762))

(declare-fun res!48597 () Bool)

(assert (=> d!25383 (=> (not res!48597) (not e!62762))))

(declare-fun lt!48065 () ListLongMap!1507)

(assert (=> d!25383 (= res!48597 (contains!791 lt!48065 (_1!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(declare-fun lt!48063 () List!1580)

(assert (=> d!25383 (= lt!48065 (ListLongMap!1508 lt!48063))))

(declare-fun lt!48064 () Unit!2865)

(declare-fun lt!48066 () Unit!2865)

(assert (=> d!25383 (= lt!48064 lt!48066)))

(assert (=> d!25383 (= (getValueByKey!147 lt!48063 (_1!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25383 (= lt!48066 (lemmaContainsTupThenGetReturnValue!66 lt!48063 (_1!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25383 (= lt!48063 (insertStrictlySorted!69 (toList!769 lt!47999) (_1!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25383 (= (+!127 lt!47999 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48065)))

(declare-fun b!96244 () Bool)

(declare-fun res!48596 () Bool)

(assert (=> b!96244 (=> (not res!48596) (not e!62762))))

(assert (=> b!96244 (= res!48596 (= (getValueByKey!147 (toList!769 lt!48065) (_1!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))))

(declare-fun b!96245 () Bool)

(assert (=> b!96245 (= e!62762 (contains!793 (toList!769 lt!48065) (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))

(assert (= (and d!25383 res!48597) b!96244))

(assert (= (and b!96244 res!48596) b!96245))

(declare-fun m!104385 () Bool)

(assert (=> d!25383 m!104385))

(declare-fun m!104387 () Bool)

(assert (=> d!25383 m!104387))

(declare-fun m!104389 () Bool)

(assert (=> d!25383 m!104389))

(declare-fun m!104391 () Bool)

(assert (=> d!25383 m!104391))

(declare-fun m!104393 () Bool)

(assert (=> b!96244 m!104393))

(declare-fun m!104395 () Bool)

(assert (=> b!96245 m!104395))

(assert (=> b!96095 d!25383))

(declare-fun d!25385 () Bool)

(assert (=> d!25385 (= (apply!91 lt!47999 lt!47984) (get!1278 (getValueByKey!147 (toList!769 lt!47999) lt!47984)))))

(declare-fun bs!3952 () Bool)

(assert (= bs!3952 d!25385))

(declare-fun m!104397 () Bool)

(assert (=> bs!3952 m!104397))

(assert (=> bs!3952 m!104397))

(declare-fun m!104399 () Bool)

(assert (=> bs!3952 m!104399))

(assert (=> b!96095 d!25385))

(declare-fun d!25387 () Bool)

(assert (=> d!25387 (= (apply!91 lt!47990 lt!47992) (get!1278 (getValueByKey!147 (toList!769 lt!47990) lt!47992)))))

(declare-fun bs!3953 () Bool)

(assert (= bs!3953 d!25387))

(declare-fun m!104401 () Bool)

(assert (=> bs!3953 m!104401))

(assert (=> bs!3953 m!104401))

(declare-fun m!104403 () Bool)

(assert (=> bs!3953 m!104403))

(assert (=> b!96095 d!25387))

(declare-fun b!96246 () Bool)

(declare-fun res!48599 () Bool)

(declare-fun e!62766 () Bool)

(assert (=> b!96246 (=> (not res!48599) (not e!62766))))

(declare-fun lt!48073 () ListLongMap!1507)

(assert (=> b!96246 (= res!48599 (not (contains!791 lt!48073 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96247 () Bool)

(declare-fun e!62769 () Bool)

(declare-fun e!62768 () Bool)

(assert (=> b!96247 (= e!62769 e!62768)))

(declare-fun c!16210 () Bool)

(assert (=> b!96247 (= c!16210 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun call!9755 () ListLongMap!1507)

(declare-fun bm!9752 () Bool)

(assert (=> bm!9752 (= call!9755 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun b!96248 () Bool)

(declare-fun e!62765 () ListLongMap!1507)

(declare-fun e!62767 () ListLongMap!1507)

(assert (=> b!96248 (= e!62765 e!62767)))

(declare-fun c!16208 () Bool)

(assert (=> b!96248 (= c!16208 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96249 () Bool)

(declare-fun lt!48067 () Unit!2865)

(declare-fun lt!48070 () Unit!2865)

(assert (=> b!96249 (= lt!48067 lt!48070)))

(declare-fun lt!48071 () ListLongMap!1507)

(declare-fun lt!48072 () (_ BitVec 64))

(declare-fun lt!48069 () (_ BitVec 64))

(declare-fun lt!48068 () V!3137)

(assert (=> b!96249 (not (contains!791 (+!127 lt!48071 (tuple2!2315 lt!48069 lt!48068)) lt!48072))))

(assert (=> b!96249 (= lt!48070 (addStillNotContains!40 lt!48071 lt!48069 lt!48068 lt!48072))))

(assert (=> b!96249 (= lt!48072 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96249 (= lt!48068 (get!1275 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96249 (= lt!48069 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96249 (= lt!48071 call!9755)))

(assert (=> b!96249 (= e!62767 (+!127 call!9755 (tuple2!2315 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (get!1275 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96250 () Bool)

(declare-fun e!62764 () Bool)

(assert (=> b!96250 (= e!62769 e!62764)))

(assert (=> b!96250 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48598 () Bool)

(assert (=> b!96250 (= res!48598 (contains!791 lt!48073 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96250 (=> (not res!48598) (not e!62764))))

(declare-fun b!96251 () Bool)

(declare-fun e!62763 () Bool)

(assert (=> b!96251 (= e!62763 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96251 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!25389 () Bool)

(assert (=> d!25389 e!62766))

(declare-fun res!48600 () Bool)

(assert (=> d!25389 (=> (not res!48600) (not e!62766))))

(assert (=> d!25389 (= res!48600 (not (contains!791 lt!48073 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25389 (= lt!48073 e!62765)))

(declare-fun c!16209 () Bool)

(assert (=> d!25389 (= c!16209 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25389 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25389 (= (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48073)))

(declare-fun b!96252 () Bool)

(assert (=> b!96252 (= e!62768 (= lt!48073 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite c!16079 (_values!2439 newMap!16) lt!47652) (mask!6540 newMap!16) (ite c!16079 (ite c!16071 lt!47661 lt!47657) (extraKeys!2281 newMap!16)) (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96253 () Bool)

(assert (=> b!96253 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> b!96253 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (ite c!16079 (_values!2439 newMap!16) lt!47652))))))

(assert (=> b!96253 (= e!62764 (= (apply!91 lt!48073 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96254 () Bool)

(assert (=> b!96254 (= e!62767 call!9755)))

(declare-fun b!96255 () Bool)

(assert (=> b!96255 (= e!62765 (ListLongMap!1508 Nil!1577))))

(declare-fun b!96256 () Bool)

(assert (=> b!96256 (= e!62768 (isEmpty!357 lt!48073))))

(declare-fun b!96257 () Bool)

(assert (=> b!96257 (= e!62766 e!62769)))

(declare-fun c!16211 () Bool)

(assert (=> b!96257 (= c!16211 e!62763)))

(declare-fun res!48601 () Bool)

(assert (=> b!96257 (=> (not res!48601) (not e!62763))))

(assert (=> b!96257 (= res!48601 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (= (and d!25389 c!16209) b!96255))

(assert (= (and d!25389 (not c!16209)) b!96248))

(assert (= (and b!96248 c!16208) b!96249))

(assert (= (and b!96248 (not c!16208)) b!96254))

(assert (= (or b!96249 b!96254) bm!9752))

(assert (= (and d!25389 res!48600) b!96246))

(assert (= (and b!96246 res!48599) b!96257))

(assert (= (and b!96257 res!48601) b!96251))

(assert (= (and b!96257 c!16211) b!96250))

(assert (= (and b!96257 (not c!16211)) b!96247))

(assert (= (and b!96250 res!48598) b!96253))

(assert (= (and b!96247 c!16210) b!96252))

(assert (= (and b!96247 (not c!16210)) b!96256))

(declare-fun b_lambda!4253 () Bool)

(assert (=> (not b_lambda!4253) (not b!96249)))

(assert (=> b!96249 t!5505))

(declare-fun b_and!5873 () Bool)

(assert (= b_and!5869 (and (=> t!5505 result!3225) b_and!5873)))

(assert (=> b!96249 t!5507))

(declare-fun b_and!5875 () Bool)

(assert (= b_and!5871 (and (=> t!5507 result!3227) b_and!5875)))

(declare-fun b_lambda!4255 () Bool)

(assert (=> (not b_lambda!4255) (not b!96253)))

(assert (=> b!96253 t!5505))

(declare-fun b_and!5877 () Bool)

(assert (= b_and!5873 (and (=> t!5505 result!3225) b_and!5877)))

(assert (=> b!96253 t!5507))

(declare-fun b_and!5879 () Bool)

(assert (= b_and!5875 (and (=> t!5507 result!3227) b_and!5879)))

(declare-fun m!104405 () Bool)

(assert (=> bm!9752 m!104405))

(declare-fun m!104407 () Bool)

(assert (=> d!25389 m!104407))

(assert (=> d!25389 m!103855))

(declare-fun m!104409 () Bool)

(assert (=> b!96256 m!104409))

(assert (=> b!96250 m!103867))

(assert (=> b!96250 m!103867))

(declare-fun m!104411 () Bool)

(assert (=> b!96250 m!104411))

(assert (=> b!96248 m!103867))

(assert (=> b!96248 m!103867))

(assert (=> b!96248 m!103869))

(assert (=> b!96253 m!104167))

(assert (=> b!96253 m!103867))

(declare-fun m!104413 () Bool)

(assert (=> b!96253 m!104413))

(assert (=> b!96253 m!104167))

(assert (=> b!96253 m!103989))

(assert (=> b!96253 m!104169))

(assert (=> b!96253 m!103989))

(assert (=> b!96253 m!103867))

(assert (=> b!96249 m!104167))

(declare-fun m!104415 () Bool)

(assert (=> b!96249 m!104415))

(assert (=> b!96249 m!104167))

(assert (=> b!96249 m!103989))

(assert (=> b!96249 m!104169))

(assert (=> b!96249 m!103989))

(declare-fun m!104417 () Bool)

(assert (=> b!96249 m!104417))

(assert (=> b!96249 m!103867))

(declare-fun m!104419 () Bool)

(assert (=> b!96249 m!104419))

(assert (=> b!96249 m!104417))

(declare-fun m!104421 () Bool)

(assert (=> b!96249 m!104421))

(declare-fun m!104423 () Bool)

(assert (=> b!96246 m!104423))

(assert (=> b!96252 m!104405))

(assert (=> b!96251 m!103867))

(assert (=> b!96251 m!103867))

(assert (=> b!96251 m!103869))

(assert (=> b!96095 d!25389))

(declare-fun d!25391 () Bool)

(assert (=> d!25391 (= (apply!91 (+!127 lt!47990 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47992) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47990 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!47992)))))

(declare-fun bs!3954 () Bool)

(assert (= bs!3954 d!25391))

(declare-fun m!104425 () Bool)

(assert (=> bs!3954 m!104425))

(assert (=> bs!3954 m!104425))

(declare-fun m!104427 () Bool)

(assert (=> bs!3954 m!104427))

(assert (=> b!96095 d!25391))

(declare-fun d!25393 () Bool)

(declare-fun e!62770 () Bool)

(assert (=> d!25393 e!62770))

(declare-fun res!48602 () Bool)

(assert (=> d!25393 (=> res!48602 e!62770)))

(declare-fun lt!48075 () Bool)

(assert (=> d!25393 (= res!48602 (not lt!48075))))

(declare-fun lt!48076 () Bool)

(assert (=> d!25393 (= lt!48075 lt!48076)))

(declare-fun lt!48077 () Unit!2865)

(declare-fun e!62771 () Unit!2865)

(assert (=> d!25393 (= lt!48077 e!62771)))

(declare-fun c!16212 () Bool)

(assert (=> d!25393 (= c!16212 lt!48076)))

(assert (=> d!25393 (= lt!48076 (containsKey!151 (toList!769 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!47985))))

(assert (=> d!25393 (= (contains!791 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47985) lt!48075)))

(declare-fun b!96258 () Bool)

(declare-fun lt!48074 () Unit!2865)

(assert (=> b!96258 (= e!62771 lt!48074)))

(assert (=> b!96258 (= lt!48074 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!47985))))

(assert (=> b!96258 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!47985))))

(declare-fun b!96259 () Bool)

(declare-fun Unit!2890 () Unit!2865)

(assert (=> b!96259 (= e!62771 Unit!2890)))

(declare-fun b!96260 () Bool)

(assert (=> b!96260 (= e!62770 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47991 (tuple2!2315 lt!47998 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!47985)))))

(assert (= (and d!25393 c!16212) b!96258))

(assert (= (and d!25393 (not c!16212)) b!96259))

(assert (= (and d!25393 (not res!48602)) b!96260))

(declare-fun m!104429 () Bool)

(assert (=> d!25393 m!104429))

(declare-fun m!104431 () Bool)

(assert (=> b!96258 m!104431))

(declare-fun m!104433 () Bool)

(assert (=> b!96258 m!104433))

(assert (=> b!96258 m!104433))

(declare-fun m!104435 () Bool)

(assert (=> b!96258 m!104435))

(assert (=> b!96260 m!104433))

(assert (=> b!96260 m!104433))

(assert (=> b!96260 m!104435))

(assert (=> b!96095 d!25393))

(declare-fun d!25395 () Bool)

(assert (=> d!25395 (= (apply!91 lt!47994 lt!47980) (get!1278 (getValueByKey!147 (toList!769 lt!47994) lt!47980)))))

(declare-fun bs!3955 () Bool)

(assert (= bs!3955 d!25395))

(declare-fun m!104437 () Bool)

(assert (=> bs!3955 m!104437))

(assert (=> bs!3955 m!104437))

(declare-fun m!104439 () Bool)

(assert (=> bs!3955 m!104439))

(assert (=> b!96095 d!25395))

(declare-fun d!25397 () Bool)

(assert (=> d!25397 (= (apply!91 (+!127 lt!47994 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47980) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47994 (tuple2!2315 lt!47979 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!47980)))))

(declare-fun bs!3956 () Bool)

(assert (= bs!3956 d!25397))

(declare-fun m!104441 () Bool)

(assert (=> bs!3956 m!104441))

(assert (=> bs!3956 m!104441))

(declare-fun m!104443 () Bool)

(assert (=> bs!3956 m!104443))

(assert (=> b!96095 d!25397))

(declare-fun d!25399 () Bool)

(assert (=> d!25399 (= (apply!91 (+!127 lt!47999 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47984) (apply!91 lt!47999 lt!47984))))

(declare-fun lt!48078 () Unit!2865)

(assert (=> d!25399 (= lt!48078 (choose!581 lt!47999 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47984))))

(declare-fun e!62772 () Bool)

(assert (=> d!25399 e!62772))

(declare-fun res!48603 () Bool)

(assert (=> d!25399 (=> (not res!48603) (not e!62772))))

(assert (=> d!25399 (= res!48603 (contains!791 lt!47999 lt!47984))))

(assert (=> d!25399 (= (addApplyDifferent!67 lt!47999 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!47984) lt!48078)))

(declare-fun b!96261 () Bool)

(assert (=> b!96261 (= e!62772 (not (= lt!47984 lt!47993)))))

(assert (= (and d!25399 res!48603) b!96261))

(assert (=> d!25399 m!104187))

(assert (=> d!25399 m!104189))

(declare-fun m!104445 () Bool)

(assert (=> d!25399 m!104445))

(declare-fun m!104447 () Bool)

(assert (=> d!25399 m!104447))

(assert (=> d!25399 m!104187))

(assert (=> d!25399 m!104185))

(assert (=> b!96095 d!25399))

(declare-fun d!25401 () Bool)

(assert (=> d!25401 (= (apply!91 (+!127 lt!47999 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!47984) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47999 (tuple2!2315 lt!47993 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!47984)))))

(declare-fun bs!3957 () Bool)

(assert (= bs!3957 d!25401))

(declare-fun m!104449 () Bool)

(assert (=> bs!3957 m!104449))

(assert (=> bs!3957 m!104449))

(declare-fun m!104451 () Bool)

(assert (=> bs!3957 m!104451))

(assert (=> b!96095 d!25401))

(declare-fun d!25403 () Bool)

(assert (=> d!25403 (= (apply!91 (+!127 lt!47990 (tuple2!2315 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!47992) (apply!91 lt!47990 lt!47992))))

(declare-fun lt!48079 () Unit!2865)

(assert (=> d!25403 (= lt!48079 (choose!581 lt!47990 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47992))))

(declare-fun e!62773 () Bool)

(assert (=> d!25403 e!62773))

(declare-fun res!48604 () Bool)

(assert (=> d!25403 (=> (not res!48604) (not e!62773))))

(assert (=> d!25403 (= res!48604 (contains!791 lt!47990 lt!47992))))

(assert (=> d!25403 (= (addApplyDifferent!67 lt!47990 lt!47987 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!47992) lt!48079)))

(declare-fun b!96262 () Bool)

(assert (=> b!96262 (= e!62773 (not (= lt!47992 lt!47987)))))

(assert (= (and d!25403 res!48604) b!96262))

(assert (=> d!25403 m!104191))

(assert (=> d!25403 m!104193))

(declare-fun m!104453 () Bool)

(assert (=> d!25403 m!104453))

(declare-fun m!104455 () Bool)

(assert (=> d!25403 m!104455))

(assert (=> d!25403 m!104191))

(assert (=> d!25403 m!104179))

(assert (=> b!96095 d!25403))

(declare-fun b!96263 () Bool)

(declare-fun e!62775 () (_ BitVec 32))

(assert (=> b!96263 (= e!62775 #b00000000000000000000000000000000)))

(declare-fun b!96264 () Bool)

(declare-fun e!62774 () (_ BitVec 32))

(assert (=> b!96264 (= e!62775 e!62774)))

(declare-fun c!16213 () Bool)

(assert (=> b!96264 (= c!16213 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun d!25405 () Bool)

(declare-fun lt!48080 () (_ BitVec 32))

(assert (=> d!25405 (and (bvsge lt!48080 #b00000000000000000000000000000000) (bvsle lt!48080 (bvsub (size!2240 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(assert (=> d!25405 (= lt!48080 e!62775)))

(declare-fun c!16214 () Bool)

(assert (=> d!25405 (= c!16214 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(assert (=> d!25405 (and (bvsle #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2240 (_keys!4141 (_2!1169 lt!47642))) (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(assert (=> d!25405 (= (arrayCountValidKeys!0 (_keys!4141 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))) lt!48080)))

(declare-fun bm!9753 () Bool)

(declare-fun call!9756 () (_ BitVec 32))

(assert (=> bm!9753 (= call!9756 (arrayCountValidKeys!0 (_keys!4141 (_2!1169 lt!47642)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(declare-fun b!96265 () Bool)

(assert (=> b!96265 (= e!62774 (bvadd #b00000000000000000000000000000001 call!9756))))

(declare-fun b!96266 () Bool)

(assert (=> b!96266 (= e!62774 call!9756)))

(assert (= (and d!25405 c!16214) b!96263))

(assert (= (and d!25405 (not c!16214)) b!96264))

(assert (= (and b!96264 c!16213) b!96265))

(assert (= (and b!96264 (not c!16213)) b!96266))

(assert (= (or b!96265 b!96266) bm!9753))

(declare-fun m!104457 () Bool)

(assert (=> b!96264 m!104457))

(assert (=> b!96264 m!104457))

(declare-fun m!104459 () Bool)

(assert (=> b!96264 m!104459))

(declare-fun m!104461 () Bool)

(assert (=> bm!9753 m!104461))

(assert (=> b!95975 d!25405))

(declare-fun d!25407 () Bool)

(declare-fun lt!48081 () Bool)

(assert (=> d!25407 (= lt!48081 (select (content!100 (toList!769 lt!47742)) (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun e!62776 () Bool)

(assert (=> d!25407 (= lt!48081 e!62776)))

(declare-fun res!48606 () Bool)

(assert (=> d!25407 (=> (not res!48606) (not e!62776))))

(assert (=> d!25407 (= res!48606 ((_ is Cons!1576) (toList!769 lt!47742)))))

(assert (=> d!25407 (= (contains!793 (toList!769 lt!47742) (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!48081)))

(declare-fun b!96267 () Bool)

(declare-fun e!62777 () Bool)

(assert (=> b!96267 (= e!62776 e!62777)))

(declare-fun res!48605 () Bool)

(assert (=> b!96267 (=> res!48605 e!62777)))

(assert (=> b!96267 (= res!48605 (= (h!2169 (toList!769 lt!47742)) (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96268 () Bool)

(assert (=> b!96268 (= e!62777 (contains!793 (t!5493 (toList!769 lt!47742)) (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25407 res!48606) b!96267))

(assert (= (and b!96267 (not res!48605)) b!96268))

(declare-fun m!104463 () Bool)

(assert (=> d!25407 m!104463))

(declare-fun m!104465 () Bool)

(assert (=> d!25407 m!104465))

(declare-fun m!104467 () Bool)

(assert (=> b!96268 m!104467))

(assert (=> b!95836 d!25407))

(declare-fun d!25409 () Bool)

(assert (=> d!25409 (= (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96002 d!25409))

(assert (=> b!96019 d!25409))

(declare-fun d!25411 () Bool)

(declare-fun e!62778 () Bool)

(assert (=> d!25411 e!62778))

(declare-fun res!48607 () Bool)

(assert (=> d!25411 (=> res!48607 e!62778)))

(declare-fun lt!48083 () Bool)

(assert (=> d!25411 (= res!48607 (not lt!48083))))

(declare-fun lt!48084 () Bool)

(assert (=> d!25411 (= lt!48083 lt!48084)))

(declare-fun lt!48085 () Unit!2865)

(declare-fun e!62779 () Unit!2865)

(assert (=> d!25411 (= lt!48085 e!62779)))

(declare-fun c!16215 () Bool)

(assert (=> d!25411 (= c!16215 lt!48084)))

(assert (=> d!25411 (= lt!48084 (containsKey!151 (toList!769 lt!47788) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25411 (= (contains!791 lt!47788 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48083)))

(declare-fun b!96269 () Bool)

(declare-fun lt!48082 () Unit!2865)

(assert (=> b!96269 (= e!62779 lt!48082)))

(assert (=> b!96269 (= lt!48082 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47788) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96269 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96270 () Bool)

(declare-fun Unit!2891 () Unit!2865)

(assert (=> b!96270 (= e!62779 Unit!2891)))

(declare-fun b!96271 () Bool)

(assert (=> b!96271 (= e!62778 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25411 c!16215) b!96269))

(assert (= (and d!25411 (not c!16215)) b!96270))

(assert (= (and d!25411 (not res!48607)) b!96271))

(declare-fun m!104469 () Bool)

(assert (=> d!25411 m!104469))

(declare-fun m!104471 () Bool)

(assert (=> b!96269 m!104471))

(declare-fun m!104473 () Bool)

(assert (=> b!96269 m!104473))

(assert (=> b!96269 m!104473))

(declare-fun m!104475 () Bool)

(assert (=> b!96269 m!104475))

(assert (=> b!96271 m!104473))

(assert (=> b!96271 m!104473))

(assert (=> b!96271 m!104475))

(assert (=> b!95877 d!25411))

(declare-fun d!25413 () Bool)

(assert (=> d!25413 (= (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!358 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3958 () Bool)

(assert (= bs!3958 d!25413))

(assert (=> bs!3958 m!103883))

(declare-fun m!104477 () Bool)

(assert (=> bs!3958 m!104477))

(assert (=> b!95917 d!25413))

(declare-fun b!96273 () Bool)

(declare-fun e!62780 () Option!153)

(declare-fun e!62781 () Option!153)

(assert (=> b!96273 (= e!62780 e!62781)))

(declare-fun c!16217 () Bool)

(assert (=> b!96273 (= c!16217 (and ((_ is Cons!1576) (toList!769 lt!47731)) (not (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96274 () Bool)

(assert (=> b!96274 (= e!62781 (getValueByKey!147 (t!5493 (toList!769 lt!47731)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96272 () Bool)

(assert (=> b!96272 (= e!62780 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47731)))))))

(declare-fun b!96275 () Bool)

(assert (=> b!96275 (= e!62781 None!151)))

(declare-fun d!25415 () Bool)

(declare-fun c!16216 () Bool)

(assert (=> d!25415 (= c!16216 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25415 (= (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000) e!62780)))

(assert (= (and d!25415 c!16216) b!96272))

(assert (= (and d!25415 (not c!16216)) b!96273))

(assert (= (and b!96273 c!16217) b!96274))

(assert (= (and b!96273 (not c!16217)) b!96275))

(declare-fun m!104479 () Bool)

(assert (=> b!96274 m!104479))

(assert (=> b!95917 d!25415))

(declare-fun d!25417 () Bool)

(declare-fun e!62782 () Bool)

(assert (=> d!25417 e!62782))

(declare-fun res!48609 () Bool)

(assert (=> d!25417 (=> (not res!48609) (not e!62782))))

(declare-fun lt!48088 () ListLongMap!1507)

(assert (=> d!25417 (= res!48609 (contains!791 lt!48088 (_1!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48086 () List!1580)

(assert (=> d!25417 (= lt!48088 (ListLongMap!1508 lt!48086))))

(declare-fun lt!48087 () Unit!2865)

(declare-fun lt!48089 () Unit!2865)

(assert (=> d!25417 (= lt!48087 lt!48089)))

(assert (=> d!25417 (= (getValueByKey!147 lt!48086 (_1!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25417 (= lt!48089 (lemmaContainsTupThenGetReturnValue!66 lt!48086 (_1!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25417 (= lt!48086 (insertStrictlySorted!69 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25417 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48088)))

(declare-fun b!96276 () Bool)

(declare-fun res!48608 () Bool)

(assert (=> b!96276 (=> (not res!48608) (not e!62782))))

(assert (=> b!96276 (= res!48608 (= (getValueByKey!147 (toList!769 lt!48088) (_1!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96277 () Bool)

(assert (=> b!96277 (= e!62782 (contains!793 (toList!769 lt!48088) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25417 res!48609) b!96276))

(assert (= (and b!96276 res!48608) b!96277))

(declare-fun m!104481 () Bool)

(assert (=> d!25417 m!104481))

(declare-fun m!104483 () Bool)

(assert (=> d!25417 m!104483))

(declare-fun m!104485 () Bool)

(assert (=> d!25417 m!104485))

(declare-fun m!104487 () Bool)

(assert (=> d!25417 m!104487))

(declare-fun m!104489 () Bool)

(assert (=> b!96276 m!104489))

(declare-fun m!104491 () Bool)

(assert (=> b!96277 m!104491))

(assert (=> d!25335 d!25417))

(assert (=> d!25335 d!25289))

(declare-fun bm!9754 () Bool)

(declare-fun call!9758 () ListLongMap!1507)

(assert (=> bm!9754 (= call!9758 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96278 () Bool)

(declare-fun e!62788 () Unit!2865)

(declare-fun Unit!2892 () Unit!2865)

(assert (=> b!96278 (= e!62788 Unit!2892)))

(declare-fun bm!9755 () Bool)

(declare-fun call!9761 () ListLongMap!1507)

(assert (=> bm!9755 (= call!9761 call!9758)))

(declare-fun b!96279 () Bool)

(declare-fun lt!48108 () Unit!2865)

(assert (=> b!96279 (= e!62788 lt!48108)))

(declare-fun lt!48102 () ListLongMap!1507)

(assert (=> b!96279 (= lt!48102 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48109 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48109 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48096 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48096 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48093 () Unit!2865)

(assert (=> b!96279 (= lt!48093 (addStillContains!67 lt!48102 lt!48109 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48096))))

(assert (=> b!96279 (contains!791 (+!127 lt!48102 (tuple2!2315 lt!48109 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48096)))

(declare-fun lt!48106 () Unit!2865)

(assert (=> b!96279 (= lt!48106 lt!48093)))

(declare-fun lt!48105 () ListLongMap!1507)

(assert (=> b!96279 (= lt!48105 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48090 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48090 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48091 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48091 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48107 () Unit!2865)

(assert (=> b!96279 (= lt!48107 (addApplyDifferent!67 lt!48105 lt!48090 (minValue!2341 newMap!16) lt!48091))))

(assert (=> b!96279 (= (apply!91 (+!127 lt!48105 (tuple2!2315 lt!48090 (minValue!2341 newMap!16))) lt!48091) (apply!91 lt!48105 lt!48091))))

(declare-fun lt!48092 () Unit!2865)

(assert (=> b!96279 (= lt!48092 lt!48107)))

(declare-fun lt!48110 () ListLongMap!1507)

(assert (=> b!96279 (= lt!48110 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48104 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48104 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48095 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48095 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48099 () Unit!2865)

(assert (=> b!96279 (= lt!48099 (addApplyDifferent!67 lt!48110 lt!48104 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48095))))

(assert (=> b!96279 (= (apply!91 (+!127 lt!48110 (tuple2!2315 lt!48104 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48095) (apply!91 lt!48110 lt!48095))))

(declare-fun lt!48100 () Unit!2865)

(assert (=> b!96279 (= lt!48100 lt!48099)))

(declare-fun lt!48101 () ListLongMap!1507)

(assert (=> b!96279 (= lt!48101 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48098 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48098 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48103 () (_ BitVec 64))

(assert (=> b!96279 (= lt!48103 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96279 (= lt!48108 (addApplyDifferent!67 lt!48101 lt!48098 (minValue!2341 newMap!16) lt!48103))))

(assert (=> b!96279 (= (apply!91 (+!127 lt!48101 (tuple2!2315 lt!48098 (minValue!2341 newMap!16))) lt!48103) (apply!91 lt!48101 lt!48103))))

(declare-fun b!96280 () Bool)

(declare-fun e!62787 () ListLongMap!1507)

(declare-fun call!9760 () ListLongMap!1507)

(assert (=> b!96280 (= e!62787 (+!127 call!9760 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96282 () Bool)

(declare-fun e!62789 () Bool)

(declare-fun call!9762 () Bool)

(assert (=> b!96282 (= e!62789 (not call!9762))))

(declare-fun b!96283 () Bool)

(declare-fun e!62785 () Bool)

(declare-fun e!62786 () Bool)

(assert (=> b!96283 (= e!62785 e!62786)))

(declare-fun c!16218 () Bool)

(assert (=> b!96283 (= c!16218 (not (= (bvand lt!47661 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96284 () Bool)

(declare-fun e!62795 () Bool)

(declare-fun lt!48111 () ListLongMap!1507)

(assert (=> b!96284 (= e!62795 (= (apply!91 lt!48111 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96284 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (_values!2439 newMap!16))))))

(assert (=> b!96284 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96285 () Bool)

(declare-fun e!62791 () ListLongMap!1507)

(assert (=> b!96285 (= e!62787 e!62791)))

(declare-fun c!16222 () Bool)

(assert (=> b!96285 (= c!16222 (and (not (= (bvand lt!47661 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!47661 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96286 () Bool)

(declare-fun call!9759 () Bool)

(assert (=> b!96286 (= e!62786 (not call!9759))))

(declare-fun b!96287 () Bool)

(declare-fun e!62792 () Bool)

(assert (=> b!96287 (= e!62789 e!62792)))

(declare-fun res!48611 () Bool)

(assert (=> b!96287 (= res!48611 call!9762)))

(assert (=> b!96287 (=> (not res!48611) (not e!62792))))

(declare-fun b!96288 () Bool)

(declare-fun res!48615 () Bool)

(assert (=> b!96288 (=> (not res!48615) (not e!62785))))

(declare-fun e!62783 () Bool)

(assert (=> b!96288 (= res!48615 e!62783)))

(declare-fun res!48616 () Bool)

(assert (=> b!96288 (=> res!48616 e!62783)))

(declare-fun e!62790 () Bool)

(assert (=> b!96288 (= res!48616 (not e!62790))))

(declare-fun res!48613 () Bool)

(assert (=> b!96288 (=> (not res!48613) (not e!62790))))

(assert (=> b!96288 (= res!48613 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9756 () Bool)

(assert (=> bm!9756 (= call!9759 (contains!791 lt!48111 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96289 () Bool)

(declare-fun call!9757 () ListLongMap!1507)

(assert (=> b!96289 (= e!62791 call!9757)))

(declare-fun b!96290 () Bool)

(assert (=> b!96290 (= e!62790 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96291 () Bool)

(declare-fun e!62784 () Bool)

(assert (=> b!96291 (= e!62786 e!62784)))

(declare-fun res!48618 () Bool)

(assert (=> b!96291 (= res!48618 call!9759)))

(assert (=> b!96291 (=> (not res!48618) (not e!62784))))

(declare-fun b!96292 () Bool)

(assert (=> b!96292 (= e!62783 e!62795)))

(declare-fun res!48614 () Bool)

(assert (=> b!96292 (=> (not res!48614) (not e!62795))))

(assert (=> b!96292 (= res!48614 (contains!791 lt!48111 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96292 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96293 () Bool)

(declare-fun e!62794 () ListLongMap!1507)

(assert (=> b!96293 (= e!62794 call!9757)))

(declare-fun b!96294 () Bool)

(declare-fun e!62793 () Bool)

(assert (=> b!96294 (= e!62793 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96295 () Bool)

(declare-fun res!48617 () Bool)

(assert (=> b!96295 (=> (not res!48617) (not e!62785))))

(assert (=> b!96295 (= res!48617 e!62789)))

(declare-fun c!16221 () Bool)

(assert (=> b!96295 (= c!16221 (not (= (bvand lt!47661 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96296 () Bool)

(declare-fun c!16223 () Bool)

(assert (=> b!96296 (= c!16223 (and (not (= (bvand lt!47661 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!47661 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96296 (= e!62791 e!62794)))

(declare-fun bm!9757 () Bool)

(assert (=> bm!9757 (= call!9757 call!9760)))

(declare-fun b!96297 () Bool)

(assert (=> b!96297 (= e!62784 (= (apply!91 lt!48111 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96298 () Bool)

(declare-fun call!9763 () ListLongMap!1507)

(assert (=> b!96298 (= e!62794 call!9763)))

(declare-fun b!96281 () Bool)

(assert (=> b!96281 (= e!62792 (= (apply!91 lt!48111 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!25419 () Bool)

(assert (=> d!25419 e!62785))

(declare-fun res!48610 () Bool)

(assert (=> d!25419 (=> (not res!48610) (not e!62785))))

(assert (=> d!25419 (= res!48610 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!48097 () ListLongMap!1507)

(assert (=> d!25419 (= lt!48111 lt!48097)))

(declare-fun lt!48094 () Unit!2865)

(assert (=> d!25419 (= lt!48094 e!62788)))

(declare-fun c!16220 () Bool)

(assert (=> d!25419 (= c!16220 e!62793)))

(declare-fun res!48612 () Bool)

(assert (=> d!25419 (=> (not res!48612) (not e!62793))))

(assert (=> d!25419 (= res!48612 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25419 (= lt!48097 e!62787)))

(declare-fun c!16219 () Bool)

(assert (=> d!25419 (= c!16219 (and (not (= (bvand lt!47661 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!47661 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25419 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25419 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48111)))

(declare-fun bm!9758 () Bool)

(assert (=> bm!9758 (= call!9760 (+!127 (ite c!16219 call!9758 (ite c!16222 call!9761 call!9763)) (ite (or c!16219 c!16222) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9759 () Bool)

(assert (=> bm!9759 (= call!9762 (contains!791 lt!48111 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9760 () Bool)

(assert (=> bm!9760 (= call!9763 call!9761)))

(assert (= (and d!25419 c!16219) b!96280))

(assert (= (and d!25419 (not c!16219)) b!96285))

(assert (= (and b!96285 c!16222) b!96289))

(assert (= (and b!96285 (not c!16222)) b!96296))

(assert (= (and b!96296 c!16223) b!96293))

(assert (= (and b!96296 (not c!16223)) b!96298))

(assert (= (or b!96293 b!96298) bm!9760))

(assert (= (or b!96289 bm!9760) bm!9755))

(assert (= (or b!96289 b!96293) bm!9757))

(assert (= (or b!96280 bm!9755) bm!9754))

(assert (= (or b!96280 bm!9757) bm!9758))

(assert (= (and d!25419 res!48612) b!96294))

(assert (= (and d!25419 c!16220) b!96279))

(assert (= (and d!25419 (not c!16220)) b!96278))

(assert (= (and d!25419 res!48610) b!96288))

(assert (= (and b!96288 res!48613) b!96290))

(assert (= (and b!96288 (not res!48616)) b!96292))

(assert (= (and b!96292 res!48614) b!96284))

(assert (= (and b!96288 res!48615) b!96295))

(assert (= (and b!96295 c!16221) b!96287))

(assert (= (and b!96295 (not c!16221)) b!96282))

(assert (= (and b!96287 res!48611) b!96281))

(assert (= (or b!96287 b!96282) bm!9759))

(assert (= (and b!96295 res!48617) b!96283))

(assert (= (and b!96283 c!16218) b!96291))

(assert (= (and b!96283 (not c!16218)) b!96286))

(assert (= (and b!96291 res!48618) b!96297))

(assert (= (or b!96291 b!96286) bm!9756))

(declare-fun b_lambda!4257 () Bool)

(assert (=> (not b_lambda!4257) (not b!96284)))

(assert (=> b!96284 t!5505))

(declare-fun b_and!5881 () Bool)

(assert (= b_and!5877 (and (=> t!5505 result!3225) b_and!5881)))

(assert (=> b!96284 t!5507))

(declare-fun b_and!5883 () Bool)

(assert (= b_and!5879 (and (=> t!5507 result!3227) b_and!5883)))

(declare-fun m!104493 () Bool)

(assert (=> bm!9756 m!104493))

(declare-fun m!104495 () Bool)

(assert (=> b!96297 m!104495))

(assert (=> b!96292 m!103867))

(assert (=> b!96292 m!103867))

(declare-fun m!104497 () Bool)

(assert (=> b!96292 m!104497))

(declare-fun m!104499 () Bool)

(assert (=> b!96280 m!104499))

(assert (=> d!25419 m!103855))

(assert (=> b!96284 m!103867))

(declare-fun m!104501 () Bool)

(assert (=> b!96284 m!104501))

(assert (=> b!96284 m!103989))

(assert (=> b!96284 m!103867))

(assert (=> b!96284 m!103991))

(assert (=> b!96284 m!103989))

(assert (=> b!96284 m!103993))

(assert (=> b!96284 m!103991))

(declare-fun m!104503 () Bool)

(assert (=> bm!9758 m!104503))

(declare-fun m!104505 () Bool)

(assert (=> bm!9759 m!104505))

(declare-fun m!104507 () Bool)

(assert (=> b!96279 m!104507))

(declare-fun m!104509 () Bool)

(assert (=> b!96279 m!104509))

(declare-fun m!104511 () Bool)

(assert (=> b!96279 m!104511))

(declare-fun m!104513 () Bool)

(assert (=> b!96279 m!104513))

(declare-fun m!104515 () Bool)

(assert (=> b!96279 m!104515))

(declare-fun m!104517 () Bool)

(assert (=> b!96279 m!104517))

(declare-fun m!104519 () Bool)

(assert (=> b!96279 m!104519))

(declare-fun m!104521 () Bool)

(assert (=> b!96279 m!104521))

(declare-fun m!104523 () Bool)

(assert (=> b!96279 m!104523))

(declare-fun m!104525 () Bool)

(assert (=> b!96279 m!104525))

(assert (=> b!96279 m!104523))

(assert (=> b!96279 m!103491))

(declare-fun m!104527 () Bool)

(assert (=> b!96279 m!104527))

(declare-fun m!104529 () Bool)

(assert (=> b!96279 m!104529))

(declare-fun m!104531 () Bool)

(assert (=> b!96279 m!104531))

(assert (=> b!96279 m!104529))

(assert (=> b!96279 m!104519))

(assert (=> b!96279 m!104507))

(assert (=> b!96279 m!103491))

(declare-fun m!104533 () Bool)

(assert (=> b!96279 m!104533))

(declare-fun m!104535 () Bool)

(assert (=> b!96279 m!104535))

(assert (=> b!96279 m!103867))

(assert (=> b!96279 m!103491))

(declare-fun m!104537 () Bool)

(assert (=> b!96279 m!104537))

(assert (=> b!96290 m!103867))

(assert (=> b!96290 m!103867))

(assert (=> b!96290 m!103869))

(assert (=> bm!9754 m!103491))

(assert (=> bm!9754 m!104533))

(assert (=> b!96294 m!103867))

(assert (=> b!96294 m!103867))

(assert (=> b!96294 m!103869))

(declare-fun m!104539 () Bool)

(assert (=> b!96281 m!104539))

(assert (=> d!25335 d!25419))

(declare-fun d!25421 () Bool)

(assert (=> d!25421 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47661 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25421 true))

(declare-fun _$7!80 () Unit!2865)

(assert (=> d!25421 (= (choose!586 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47661 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)) _$7!80)))

(declare-fun bs!3959 () Bool)

(assert (= bs!3959 d!25421))

(assert (=> bs!3959 m!103619))

(assert (=> bs!3959 m!103619))

(assert (=> bs!3959 m!104245))

(assert (=> bs!3959 m!103491))

(assert (=> bs!3959 m!104243))

(assert (=> d!25335 d!25421))

(declare-fun d!25423 () Bool)

(assert (=> d!25423 (= (validMask!0 (mask!6540 newMap!16)) (and (or (= (mask!6540 newMap!16) #b00000000000000000000000000000111) (= (mask!6540 newMap!16) #b00000000000000000000000000001111) (= (mask!6540 newMap!16) #b00000000000000000000000000011111) (= (mask!6540 newMap!16) #b00000000000000000000000000111111) (= (mask!6540 newMap!16) #b00000000000000000000000001111111) (= (mask!6540 newMap!16) #b00000000000000000000000011111111) (= (mask!6540 newMap!16) #b00000000000000000000000111111111) (= (mask!6540 newMap!16) #b00000000000000000000001111111111) (= (mask!6540 newMap!16) #b00000000000000000000011111111111) (= (mask!6540 newMap!16) #b00000000000000000000111111111111) (= (mask!6540 newMap!16) #b00000000000000000001111111111111) (= (mask!6540 newMap!16) #b00000000000000000011111111111111) (= (mask!6540 newMap!16) #b00000000000000000111111111111111) (= (mask!6540 newMap!16) #b00000000000000001111111111111111) (= (mask!6540 newMap!16) #b00000000000000011111111111111111) (= (mask!6540 newMap!16) #b00000000000000111111111111111111) (= (mask!6540 newMap!16) #b00000000000001111111111111111111) (= (mask!6540 newMap!16) #b00000000000011111111111111111111) (= (mask!6540 newMap!16) #b00000000000111111111111111111111) (= (mask!6540 newMap!16) #b00000000001111111111111111111111) (= (mask!6540 newMap!16) #b00000000011111111111111111111111) (= (mask!6540 newMap!16) #b00000000111111111111111111111111) (= (mask!6540 newMap!16) #b00000001111111111111111111111111) (= (mask!6540 newMap!16) #b00000011111111111111111111111111) (= (mask!6540 newMap!16) #b00000111111111111111111111111111) (= (mask!6540 newMap!16) #b00001111111111111111111111111111) (= (mask!6540 newMap!16) #b00011111111111111111111111111111) (= (mask!6540 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6540 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!25335 d!25423))

(declare-fun d!25425 () Bool)

(assert (=> d!25425 (= (apply!91 lt!47929 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47929) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3960 () Bool)

(assert (= bs!3960 d!25425))

(declare-fun m!104541 () Bool)

(assert (=> bs!3960 m!104541))

(assert (=> bs!3960 m!104541))

(declare-fun m!104543 () Bool)

(assert (=> bs!3960 m!104543))

(assert (=> b!96005 d!25425))

(declare-fun d!25427 () Bool)

(declare-fun e!62796 () Bool)

(assert (=> d!25427 e!62796))

(declare-fun res!48619 () Bool)

(assert (=> d!25427 (=> res!48619 e!62796)))

(declare-fun lt!48113 () Bool)

(assert (=> d!25427 (= res!48619 (not lt!48113))))

(declare-fun lt!48114 () Bool)

(assert (=> d!25427 (= lt!48113 lt!48114)))

(declare-fun lt!48115 () Unit!2865)

(declare-fun e!62797 () Unit!2865)

(assert (=> d!25427 (= lt!48115 e!62797)))

(declare-fun c!16224 () Bool)

(assert (=> d!25427 (= c!16224 lt!48114)))

(assert (=> d!25427 (= lt!48114 (containsKey!151 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25427 (= (contains!791 lt!47766 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48113)))

(declare-fun b!96299 () Bool)

(declare-fun lt!48112 () Unit!2865)

(assert (=> b!96299 (= e!62797 lt!48112)))

(assert (=> b!96299 (= lt!48112 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> b!96299 (isDefined!101 (getValueByKey!147 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96300 () Bool)

(declare-fun Unit!2893 () Unit!2865)

(assert (=> b!96300 (= e!62797 Unit!2893)))

(declare-fun b!96301 () Bool)

(assert (=> b!96301 (= e!62796 (isDefined!101 (getValueByKey!147 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25427 c!16224) b!96299))

(assert (= (and d!25427 (not c!16224)) b!96300))

(assert (= (and d!25427 (not res!48619)) b!96301))

(declare-fun m!104545 () Bool)

(assert (=> d!25427 m!104545))

(declare-fun m!104547 () Bool)

(assert (=> b!96299 m!104547))

(assert (=> b!96299 m!103831))

(assert (=> b!96299 m!103831))

(declare-fun m!104549 () Bool)

(assert (=> b!96299 m!104549))

(assert (=> b!96301 m!103831))

(assert (=> b!96301 m!103831))

(assert (=> b!96301 m!104549))

(assert (=> d!25255 d!25427))

(declare-fun b!96303 () Bool)

(declare-fun e!62798 () Option!153)

(declare-fun e!62799 () Option!153)

(assert (=> b!96303 (= e!62798 e!62799)))

(declare-fun c!16226 () Bool)

(assert (=> b!96303 (= c!16226 (and ((_ is Cons!1576) lt!47764) (not (= (_1!1168 (h!2169 lt!47764)) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96304 () Bool)

(assert (=> b!96304 (= e!62799 (getValueByKey!147 (t!5493 lt!47764) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96302 () Bool)

(assert (=> b!96302 (= e!62798 (Some!152 (_2!1168 (h!2169 lt!47764))))))

(declare-fun b!96305 () Bool)

(assert (=> b!96305 (= e!62799 None!151)))

(declare-fun d!25429 () Bool)

(declare-fun c!16225 () Bool)

(assert (=> d!25429 (= c!16225 (and ((_ is Cons!1576) lt!47764) (= (_1!1168 (h!2169 lt!47764)) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25429 (= (getValueByKey!147 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!62798)))

(assert (= (and d!25429 c!16225) b!96302))

(assert (= (and d!25429 (not c!16225)) b!96303))

(assert (= (and b!96303 c!16226) b!96304))

(assert (= (and b!96303 (not c!16226)) b!96305))

(declare-fun m!104551 () Bool)

(assert (=> b!96304 m!104551))

(assert (=> d!25255 d!25429))

(declare-fun d!25431 () Bool)

(assert (=> d!25431 (= (getValueByKey!147 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48116 () Unit!2865)

(assert (=> d!25431 (= lt!48116 (choose!590 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!62800 () Bool)

(assert (=> d!25431 e!62800))

(declare-fun res!48620 () Bool)

(assert (=> d!25431 (=> (not res!48620) (not e!62800))))

(assert (=> d!25431 (= res!48620 (isStrictlySorted!298 lt!47764))))

(assert (=> d!25431 (= (lemmaContainsTupThenGetReturnValue!66 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48116)))

(declare-fun b!96306 () Bool)

(declare-fun res!48621 () Bool)

(assert (=> b!96306 (=> (not res!48621) (not e!62800))))

(assert (=> b!96306 (= res!48621 (containsKey!151 lt!47764 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96307 () Bool)

(assert (=> b!96307 (= e!62800 (contains!793 lt!47764 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25431 res!48620) b!96306))

(assert (= (and b!96306 res!48621) b!96307))

(assert (=> d!25431 m!103825))

(declare-fun m!104553 () Bool)

(assert (=> d!25431 m!104553))

(declare-fun m!104555 () Bool)

(assert (=> d!25431 m!104555))

(declare-fun m!104557 () Bool)

(assert (=> b!96306 m!104557))

(declare-fun m!104559 () Bool)

(assert (=> b!96307 m!104559))

(assert (=> d!25255 d!25431))

(declare-fun b!96308 () Bool)

(declare-fun e!62805 () List!1580)

(declare-fun call!9764 () List!1580)

(assert (=> b!96308 (= e!62805 call!9764)))

(declare-fun b!96309 () Bool)

(declare-fun c!16228 () Bool)

(declare-fun e!62803 () List!1580)

(declare-fun c!16229 () Bool)

(assert (=> b!96309 (= e!62803 (ite c!16229 (t!5493 (toList!769 lt!47730)) (ite c!16228 (Cons!1576 (h!2169 (toList!769 lt!47730)) (t!5493 (toList!769 lt!47730))) Nil!1577)))))

(declare-fun b!96310 () Bool)

(assert (=> b!96310 (= e!62803 (insertStrictlySorted!69 (t!5493 (toList!769 lt!47730)) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48117 () List!1580)

(declare-fun b!96311 () Bool)

(declare-fun e!62802 () Bool)

(assert (=> b!96311 (= e!62802 (contains!793 lt!48117 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9761 () Bool)

(declare-fun call!9765 () List!1580)

(declare-fun call!9766 () List!1580)

(assert (=> bm!9761 (= call!9765 call!9766)))

(declare-fun b!96312 () Bool)

(declare-fun e!62801 () List!1580)

(assert (=> b!96312 (= e!62801 call!9765)))

(declare-fun b!96313 () Bool)

(assert (=> b!96313 (= e!62805 call!9764)))

(declare-fun d!25433 () Bool)

(assert (=> d!25433 e!62802))

(declare-fun res!48622 () Bool)

(assert (=> d!25433 (=> (not res!48622) (not e!62802))))

(assert (=> d!25433 (= res!48622 (isStrictlySorted!298 lt!48117))))

(declare-fun e!62804 () List!1580)

(assert (=> d!25433 (= lt!48117 e!62804)))

(declare-fun c!16227 () Bool)

(assert (=> d!25433 (= c!16227 (and ((_ is Cons!1576) (toList!769 lt!47730)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47730))) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25433 (isStrictlySorted!298 (toList!769 lt!47730))))

(assert (=> d!25433 (= (insertStrictlySorted!69 (toList!769 lt!47730) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48117)))

(declare-fun b!96314 () Bool)

(assert (=> b!96314 (= c!16228 (and ((_ is Cons!1576) (toList!769 lt!47730)) (bvsgt (_1!1168 (h!2169 (toList!769 lt!47730))) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96314 (= e!62801 e!62805)))

(declare-fun b!96315 () Bool)

(declare-fun res!48623 () Bool)

(assert (=> b!96315 (=> (not res!48623) (not e!62802))))

(assert (=> b!96315 (= res!48623 (containsKey!151 lt!48117 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9762 () Bool)

(assert (=> bm!9762 (= call!9766 ($colon$colon!76 e!62803 (ite c!16227 (h!2169 (toList!769 lt!47730)) (tuple2!2315 (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun c!16230 () Bool)

(assert (=> bm!9762 (= c!16230 c!16227)))

(declare-fun b!96316 () Bool)

(assert (=> b!96316 (= e!62804 e!62801)))

(assert (=> b!96316 (= c!16229 (and ((_ is Cons!1576) (toList!769 lt!47730)) (= (_1!1168 (h!2169 (toList!769 lt!47730))) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96317 () Bool)

(assert (=> b!96317 (= e!62804 call!9766)))

(declare-fun bm!9763 () Bool)

(assert (=> bm!9763 (= call!9764 call!9765)))

(assert (= (and d!25433 c!16227) b!96317))

(assert (= (and d!25433 (not c!16227)) b!96316))

(assert (= (and b!96316 c!16229) b!96312))

(assert (= (and b!96316 (not c!16229)) b!96314))

(assert (= (and b!96314 c!16228) b!96313))

(assert (= (and b!96314 (not c!16228)) b!96308))

(assert (= (or b!96313 b!96308) bm!9763))

(assert (= (or b!96312 bm!9763) bm!9761))

(assert (= (or b!96317 bm!9761) bm!9762))

(assert (= (and bm!9762 c!16230) b!96310))

(assert (= (and bm!9762 (not c!16230)) b!96309))

(assert (= (and d!25433 res!48622) b!96315))

(assert (= (and b!96315 res!48623) b!96311))

(declare-fun m!104561 () Bool)

(assert (=> b!96315 m!104561))

(declare-fun m!104563 () Bool)

(assert (=> b!96311 m!104563))

(declare-fun m!104565 () Bool)

(assert (=> bm!9762 m!104565))

(declare-fun m!104567 () Bool)

(assert (=> d!25433 m!104567))

(declare-fun m!104569 () Bool)

(assert (=> d!25433 m!104569))

(declare-fun m!104571 () Bool)

(assert (=> b!96310 m!104571))

(assert (=> d!25255 d!25433))

(declare-fun d!25435 () Bool)

(declare-fun e!62806 () Bool)

(assert (=> d!25435 e!62806))

(declare-fun res!48624 () Bool)

(assert (=> d!25435 (=> res!48624 e!62806)))

(declare-fun lt!48119 () Bool)

(assert (=> d!25435 (= res!48624 (not lt!48119))))

(declare-fun lt!48120 () Bool)

(assert (=> d!25435 (= lt!48119 lt!48120)))

(declare-fun lt!48121 () Unit!2865)

(declare-fun e!62807 () Unit!2865)

(assert (=> d!25435 (= lt!48121 e!62807)))

(declare-fun c!16231 () Bool)

(assert (=> d!25435 (= c!16231 lt!48120)))

(assert (=> d!25435 (= lt!48120 (containsKey!151 (toList!769 lt!47788) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!25435 (= (contains!791 lt!47788 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48119)))

(declare-fun b!96318 () Bool)

(declare-fun lt!48118 () Unit!2865)

(assert (=> b!96318 (= e!62807 lt!48118)))

(assert (=> b!96318 (= lt!48118 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47788) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96318 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!96319 () Bool)

(declare-fun Unit!2894 () Unit!2865)

(assert (=> b!96319 (= e!62807 Unit!2894)))

(declare-fun b!96320 () Bool)

(assert (=> b!96320 (= e!62806 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!25435 c!16231) b!96318))

(assert (= (and d!25435 (not c!16231)) b!96319))

(assert (= (and d!25435 (not res!48624)) b!96320))

(assert (=> d!25435 m!103591))

(declare-fun m!104573 () Bool)

(assert (=> d!25435 m!104573))

(assert (=> b!96318 m!103591))

(declare-fun m!104575 () Bool)

(assert (=> b!96318 m!104575))

(assert (=> b!96318 m!103591))

(declare-fun m!104577 () Bool)

(assert (=> b!96318 m!104577))

(assert (=> b!96318 m!104577))

(declare-fun m!104579 () Bool)

(assert (=> b!96318 m!104579))

(assert (=> b!96320 m!103591))

(assert (=> b!96320 m!104577))

(assert (=> b!96320 m!104577))

(assert (=> b!96320 m!104579))

(assert (=> b!95881 d!25435))

(declare-fun d!25437 () Bool)

(declare-fun e!62808 () Bool)

(assert (=> d!25437 e!62808))

(declare-fun res!48625 () Bool)

(assert (=> d!25437 (=> res!48625 e!62808)))

(declare-fun lt!48123 () Bool)

(assert (=> d!25437 (= res!48625 (not lt!48123))))

(declare-fun lt!48124 () Bool)

(assert (=> d!25437 (= lt!48123 lt!48124)))

(declare-fun lt!48125 () Unit!2865)

(declare-fun e!62809 () Unit!2865)

(assert (=> d!25437 (= lt!48125 e!62809)))

(declare-fun c!16232 () Bool)

(assert (=> d!25437 (= c!16232 lt!48124)))

(assert (=> d!25437 (= lt!48124 (containsKey!151 (toList!769 (map!1237 (_2!1169 lt!47887))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25437 (= (contains!791 (map!1237 (_2!1169 lt!47887)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48123)))

(declare-fun b!96321 () Bool)

(declare-fun lt!48122 () Unit!2865)

(assert (=> b!96321 (= e!62809 lt!48122)))

(assert (=> b!96321 (= lt!48122 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (map!1237 (_2!1169 lt!47887))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!96321 (isDefined!101 (getValueByKey!147 (toList!769 (map!1237 (_2!1169 lt!47887))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96322 () Bool)

(declare-fun Unit!2895 () Unit!2865)

(assert (=> b!96322 (= e!62809 Unit!2895)))

(declare-fun b!96323 () Bool)

(assert (=> b!96323 (= e!62808 (isDefined!101 (getValueByKey!147 (toList!769 (map!1237 (_2!1169 lt!47887))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (= (and d!25437 c!16232) b!96321))

(assert (= (and d!25437 (not c!16232)) b!96322))

(assert (= (and d!25437 (not res!48625)) b!96323))

(assert (=> d!25437 m!103459))

(declare-fun m!104581 () Bool)

(assert (=> d!25437 m!104581))

(assert (=> b!96321 m!103459))

(declare-fun m!104583 () Bool)

(assert (=> b!96321 m!104583))

(assert (=> b!96321 m!103459))

(declare-fun m!104585 () Bool)

(assert (=> b!96321 m!104585))

(assert (=> b!96321 m!104585))

(declare-fun m!104587 () Bool)

(assert (=> b!96321 m!104587))

(assert (=> b!96323 m!103459))

(assert (=> b!96323 m!104585))

(assert (=> b!96323 m!104585))

(assert (=> b!96323 m!104587))

(assert (=> b!95966 d!25437))

(declare-fun d!25439 () Bool)

(assert (=> d!25439 (= (map!1237 (_2!1169 lt!47887)) (getCurrentListMap!451 (_keys!4141 (_2!1169 lt!47887)) (_values!2439 (_2!1169 lt!47887)) (mask!6540 (_2!1169 lt!47887)) (extraKeys!2281 (_2!1169 lt!47887)) (zeroValue!2341 (_2!1169 lt!47887)) (minValue!2341 (_2!1169 lt!47887)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47887))))))

(declare-fun bs!3961 () Bool)

(assert (= bs!3961 d!25439))

(declare-fun m!104589 () Bool)

(assert (=> bs!3961 m!104589))

(assert (=> b!95966 d!25439))

(declare-fun b!96325 () Bool)

(declare-fun e!62810 () Option!153)

(declare-fun e!62811 () Option!153)

(assert (=> b!96325 (= e!62810 e!62811)))

(declare-fun c!16234 () Bool)

(assert (=> b!96325 (= c!16234 (and ((_ is Cons!1576) (t!5493 (toList!769 lt!47518))) (not (= (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518)))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun b!96326 () Bool)

(assert (=> b!96326 (= e!62811 (getValueByKey!147 (t!5493 (t!5493 (toList!769 lt!47518))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96324 () Bool)

(assert (=> b!96324 (= e!62810 (Some!152 (_2!1168 (h!2169 (t!5493 (toList!769 lt!47518))))))))

(declare-fun b!96327 () Bool)

(assert (=> b!96327 (= e!62811 None!151)))

(declare-fun c!16233 () Bool)

(declare-fun d!25441 () Bool)

(assert (=> d!25441 (= c!16233 (and ((_ is Cons!1576) (t!5493 (toList!769 lt!47518))) (= (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518)))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25441 (= (getValueByKey!147 (t!5493 (toList!769 lt!47518)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62810)))

(assert (= (and d!25441 c!16233) b!96324))

(assert (= (and d!25441 (not c!16233)) b!96325))

(assert (= (and b!96325 c!16234) b!96326))

(assert (= (and b!96325 (not c!16234)) b!96327))

(assert (=> b!96326 m!103459))

(declare-fun m!104591 () Bool)

(assert (=> b!96326 m!104591))

(assert (=> b!96043 d!25441))

(declare-fun d!25443 () Bool)

(declare-fun lt!48126 () Bool)

(assert (=> d!25443 (= lt!48126 (select (content!99 Nil!1578) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62812 () Bool)

(assert (=> d!25443 (= lt!48126 e!62812)))

(declare-fun res!48627 () Bool)

(assert (=> d!25443 (=> (not res!48627) (not e!62812))))

(assert (=> d!25443 (= res!48627 ((_ is Cons!1577) Nil!1578))))

(assert (=> d!25443 (= (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) lt!48126)))

(declare-fun b!96328 () Bool)

(declare-fun e!62813 () Bool)

(assert (=> b!96328 (= e!62812 e!62813)))

(declare-fun res!48626 () Bool)

(assert (=> b!96328 (=> res!48626 e!62813)))

(assert (=> b!96328 (= res!48626 (= (h!2170 Nil!1578) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96329 () Bool)

(assert (=> b!96329 (= e!62813 (contains!792 (t!5494 Nil!1578) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25443 res!48627) b!96328))

(assert (= (and b!96328 (not res!48626)) b!96329))

(assert (=> d!25443 m!103973))

(assert (=> d!25443 m!103867))

(declare-fun m!104593 () Bool)

(assert (=> d!25443 m!104593))

(assert (=> b!96329 m!103867))

(declare-fun m!104595 () Bool)

(assert (=> b!96329 m!104595))

(assert (=> b!96123 d!25443))

(declare-fun b!96330 () Bool)

(declare-fun e!62817 () Bool)

(assert (=> b!96330 (= e!62817 (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9764 () Bool)

(declare-fun call!9767 () Bool)

(declare-fun c!16235 () Bool)

(assert (=> bm!9764 (= call!9767 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16235 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000) Nil!1578) Nil!1578)))))

(declare-fun b!96331 () Bool)

(declare-fun e!62814 () Bool)

(assert (=> b!96331 (= e!62814 call!9767)))

(declare-fun b!96332 () Bool)

(declare-fun e!62816 () Bool)

(assert (=> b!96332 (= e!62816 e!62814)))

(assert (=> b!96332 (= c!16235 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!96333 () Bool)

(assert (=> b!96333 (= e!62814 call!9767)))

(declare-fun d!25445 () Bool)

(declare-fun res!48628 () Bool)

(declare-fun e!62815 () Bool)

(assert (=> d!25445 (=> res!48628 e!62815)))

(assert (=> d!25445 (= res!48628 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25445 (= (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 Nil!1578) e!62815)))

(declare-fun b!96334 () Bool)

(assert (=> b!96334 (= e!62815 e!62816)))

(declare-fun res!48629 () Bool)

(assert (=> b!96334 (=> (not res!48629) (not e!62816))))

(assert (=> b!96334 (= res!48629 (not e!62817))))

(declare-fun res!48630 () Bool)

(assert (=> b!96334 (=> (not res!48630) (not e!62817))))

(assert (=> b!96334 (= res!48630 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!25445 (not res!48628)) b!96334))

(assert (= (and b!96334 res!48630) b!96330))

(assert (= (and b!96334 res!48629) b!96332))

(assert (= (and b!96332 c!16235) b!96333))

(assert (= (and b!96332 (not c!16235)) b!96331))

(assert (= (or b!96333 b!96331) bm!9764))

(declare-fun m!104597 () Bool)

(assert (=> b!96330 m!104597))

(assert (=> b!96330 m!104597))

(declare-fun m!104599 () Bool)

(assert (=> b!96330 m!104599))

(assert (=> bm!9764 m!104597))

(declare-fun m!104601 () Bool)

(assert (=> bm!9764 m!104601))

(assert (=> b!96332 m!104597))

(assert (=> b!96332 m!104597))

(declare-fun m!104603 () Bool)

(assert (=> b!96332 m!104603))

(assert (=> b!96334 m!104597))

(assert (=> b!96334 m!104597))

(assert (=> b!96334 m!104603))

(assert (=> b!96073 d!25445))

(declare-fun d!25447 () Bool)

(assert (=> d!25447 (= (inRange!0 (ite c!16184 (index!3162 lt!48020) (index!3165 lt!48020)) (mask!6540 newMap!16)) (and (bvsge (ite c!16184 (index!3162 lt!48020) (index!3165 lt!48020)) #b00000000000000000000000000000000) (bvslt (ite c!16184 (index!3162 lt!48020) (index!3165 lt!48020)) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9741 d!25447))

(declare-fun d!25449 () Bool)

(declare-fun lt!48127 () Bool)

(assert (=> d!25449 (= lt!48127 (select (content!100 (toList!769 lt!47970)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun e!62818 () Bool)

(assert (=> d!25449 (= lt!48127 e!62818)))

(declare-fun res!48632 () Bool)

(assert (=> d!25449 (=> (not res!48632) (not e!62818))))

(assert (=> d!25449 (= res!48632 ((_ is Cons!1576) (toList!769 lt!47970)))))

(assert (=> d!25449 (= (contains!793 (toList!769 lt!47970) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!48127)))

(declare-fun b!96335 () Bool)

(declare-fun e!62819 () Bool)

(assert (=> b!96335 (= e!62818 e!62819)))

(declare-fun res!48631 () Bool)

(assert (=> b!96335 (=> res!48631 e!62819)))

(assert (=> b!96335 (= res!48631 (= (h!2169 (toList!769 lt!47970)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96336 () Bool)

(assert (=> b!96336 (= e!62819 (contains!793 (t!5493 (toList!769 lt!47970)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25449 res!48632) b!96335))

(assert (= (and b!96335 (not res!48631)) b!96336))

(declare-fun m!104605 () Bool)

(assert (=> d!25449 m!104605))

(declare-fun m!104607 () Bool)

(assert (=> d!25449 m!104607))

(declare-fun m!104609 () Bool)

(assert (=> b!96336 m!104609))

(assert (=> b!96070 d!25449))

(assert (=> b!95972 d!25439))

(declare-fun d!25451 () Bool)

(declare-fun e!62820 () Bool)

(assert (=> d!25451 e!62820))

(declare-fun res!48634 () Bool)

(assert (=> d!25451 (=> (not res!48634) (not e!62820))))

(declare-fun lt!48130 () ListLongMap!1507)

(assert (=> d!25451 (= res!48634 (contains!791 lt!48130 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48128 () List!1580)

(assert (=> d!25451 (= lt!48130 (ListLongMap!1508 lt!48128))))

(declare-fun lt!48129 () Unit!2865)

(declare-fun lt!48131 () Unit!2865)

(assert (=> d!25451 (= lt!48129 lt!48131)))

(assert (=> d!25451 (= (getValueByKey!147 lt!48128 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25451 (= lt!48131 (lemmaContainsTupThenGetReturnValue!66 lt!48128 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25451 (= lt!48128 (insertStrictlySorted!69 (toList!769 (map!1237 newMap!16)) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25451 (= (+!127 (map!1237 newMap!16) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48130)))

(declare-fun b!96337 () Bool)

(declare-fun res!48633 () Bool)

(assert (=> b!96337 (=> (not res!48633) (not e!62820))))

(assert (=> b!96337 (= res!48633 (= (getValueByKey!147 (toList!769 lt!48130) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96338 () Bool)

(assert (=> b!96338 (= e!62820 (contains!793 (toList!769 lt!48130) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25451 res!48634) b!96337))

(assert (= (and b!96337 res!48633) b!96338))

(declare-fun m!104611 () Bool)

(assert (=> d!25451 m!104611))

(declare-fun m!104613 () Bool)

(assert (=> d!25451 m!104613))

(declare-fun m!104615 () Bool)

(assert (=> d!25451 m!104615))

(declare-fun m!104617 () Bool)

(assert (=> d!25451 m!104617))

(declare-fun m!104619 () Bool)

(assert (=> b!96337 m!104619))

(declare-fun m!104621 () Bool)

(assert (=> b!96338 m!104621))

(assert (=> b!95972 d!25451))

(assert (=> b!95972 d!25221))

(declare-fun d!25453 () Bool)

(assert (=> d!25453 (= (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47711)) (v!2775 (getValueByKey!147 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47711)))))

(assert (=> d!25233 d!25453))

(declare-fun b!96340 () Bool)

(declare-fun e!62821 () Option!153)

(declare-fun e!62822 () Option!153)

(assert (=> b!96340 (= e!62821 e!62822)))

(declare-fun c!16237 () Bool)

(assert (=> b!96340 (= c!16237 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (not (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47711))))))

(declare-fun b!96341 () Bool)

(assert (=> b!96341 (= e!62822 (getValueByKey!147 (t!5493 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!47711))))

(declare-fun b!96339 () Bool)

(assert (=> b!96339 (= e!62821 (Some!152 (_2!1168 (h!2169 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96342 () Bool)

(assert (=> b!96342 (= e!62822 None!151)))

(declare-fun c!16236 () Bool)

(declare-fun d!25455 () Bool)

(assert (=> d!25455 (= c!16236 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47711)))))

(assert (=> d!25455 (= (getValueByKey!147 (toList!769 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47711) e!62821)))

(assert (= (and d!25455 c!16236) b!96339))

(assert (= (and d!25455 (not c!16236)) b!96340))

(assert (= (and b!96340 c!16237) b!96341))

(assert (= (and b!96340 (not c!16237)) b!96342))

(declare-fun m!104623 () Bool)

(assert (=> b!96341 m!104623))

(assert (=> d!25233 d!25455))

(declare-fun d!25457 () Bool)

(assert (=> d!25457 (= (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!358 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3962 () Bool)

(assert (= bs!3962 d!25457))

(assert (=> bs!3962 m!104209))

(declare-fun m!104625 () Bool)

(assert (=> bs!3962 m!104625))

(assert (=> b!96130 d!25457))

(declare-fun b!96344 () Bool)

(declare-fun e!62823 () Option!153)

(declare-fun e!62824 () Option!153)

(assert (=> b!96344 (= e!62823 e!62824)))

(declare-fun c!16239 () Bool)

(assert (=> b!96344 (= c!16239 (and ((_ is Cons!1576) (toList!769 lt!47731)) (not (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96345 () Bool)

(assert (=> b!96345 (= e!62824 (getValueByKey!147 (t!5493 (toList!769 lt!47731)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96343 () Bool)

(assert (=> b!96343 (= e!62823 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47731)))))))

(declare-fun b!96346 () Bool)

(assert (=> b!96346 (= e!62824 None!151)))

(declare-fun d!25459 () Bool)

(declare-fun c!16238 () Bool)

(assert (=> d!25459 (= c!16238 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25459 (= (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000) e!62823)))

(assert (= (and d!25459 c!16238) b!96343))

(assert (= (and d!25459 (not c!16238)) b!96344))

(assert (= (and b!96344 c!16239) b!96345))

(assert (= (and b!96344 (not c!16239)) b!96346))

(declare-fun m!104627 () Bool)

(assert (=> b!96345 m!104627))

(assert (=> b!96130 d!25459))

(assert (=> b!95998 d!25409))

(assert (=> b!96083 d!25409))

(declare-fun d!25461 () Bool)

(assert (=> d!25461 (= (get!1278 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2775 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25321 d!25461))

(assert (=> d!25321 d!25459))

(declare-fun d!25463 () Bool)

(declare-fun e!62825 () Bool)

(assert (=> d!25463 e!62825))

(declare-fun res!48635 () Bool)

(assert (=> d!25463 (=> res!48635 e!62825)))

(declare-fun lt!48133 () Bool)

(assert (=> d!25463 (= res!48635 (not lt!48133))))

(declare-fun lt!48134 () Bool)

(assert (=> d!25463 (= lt!48133 lt!48134)))

(declare-fun lt!48135 () Unit!2865)

(declare-fun e!62826 () Unit!2865)

(assert (=> d!25463 (= lt!48135 e!62826)))

(declare-fun c!16240 () Bool)

(assert (=> d!25463 (= c!16240 lt!48134)))

(assert (=> d!25463 (= lt!48134 (containsKey!151 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25463 (= (contains!791 lt!47954 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48133)))

(declare-fun b!96347 () Bool)

(declare-fun lt!48132 () Unit!2865)

(assert (=> b!96347 (= e!62826 lt!48132)))

(assert (=> b!96347 (= lt!48132 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!96347 (isDefined!101 (getValueByKey!147 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96348 () Bool)

(declare-fun Unit!2896 () Unit!2865)

(assert (=> b!96348 (= e!62826 Unit!2896)))

(declare-fun b!96349 () Bool)

(assert (=> b!96349 (= e!62825 (isDefined!101 (getValueByKey!147 (toList!769 lt!47954) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25463 c!16240) b!96347))

(assert (= (and d!25463 (not c!16240)) b!96348))

(assert (= (and d!25463 (not res!48635)) b!96349))

(declare-fun m!104629 () Bool)

(assert (=> d!25463 m!104629))

(declare-fun m!104631 () Bool)

(assert (=> b!96347 m!104631))

(assert (=> b!96347 m!104093))

(assert (=> b!96347 m!104093))

(declare-fun m!104633 () Bool)

(assert (=> b!96347 m!104633))

(assert (=> b!96349 m!104093))

(assert (=> b!96349 m!104093))

(assert (=> b!96349 m!104633))

(assert (=> d!25293 d!25463))

(declare-fun b!96351 () Bool)

(declare-fun e!62827 () Option!153)

(declare-fun e!62828 () Option!153)

(assert (=> b!96351 (= e!62827 e!62828)))

(declare-fun c!16242 () Bool)

(assert (=> b!96351 (= c!16242 (and ((_ is Cons!1576) lt!47952) (not (= (_1!1168 (h!2169 lt!47952)) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!96352 () Bool)

(assert (=> b!96352 (= e!62828 (getValueByKey!147 (t!5493 lt!47952) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96350 () Bool)

(assert (=> b!96350 (= e!62827 (Some!152 (_2!1168 (h!2169 lt!47952))))))

(declare-fun b!96353 () Bool)

(assert (=> b!96353 (= e!62828 None!151)))

(declare-fun c!16241 () Bool)

(declare-fun d!25465 () Bool)

(assert (=> d!25465 (= c!16241 (and ((_ is Cons!1576) lt!47952) (= (_1!1168 (h!2169 lt!47952)) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25465 (= (getValueByKey!147 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62827)))

(assert (= (and d!25465 c!16241) b!96350))

(assert (= (and d!25465 (not c!16241)) b!96351))

(assert (= (and b!96351 c!16242) b!96352))

(assert (= (and b!96351 (not c!16242)) b!96353))

(declare-fun m!104635 () Bool)

(assert (=> b!96352 m!104635))

(assert (=> d!25293 d!25465))

(declare-fun d!25467 () Bool)

(assert (=> d!25467 (= (getValueByKey!147 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48136 () Unit!2865)

(assert (=> d!25467 (= lt!48136 (choose!590 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62829 () Bool)

(assert (=> d!25467 e!62829))

(declare-fun res!48636 () Bool)

(assert (=> d!25467 (=> (not res!48636) (not e!62829))))

(assert (=> d!25467 (= res!48636 (isStrictlySorted!298 lt!47952))))

(assert (=> d!25467 (= (lemmaContainsTupThenGetReturnValue!66 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48136)))

(declare-fun b!96354 () Bool)

(declare-fun res!48637 () Bool)

(assert (=> b!96354 (=> (not res!48637) (not e!62829))))

(assert (=> b!96354 (= res!48637 (containsKey!151 lt!47952 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96355 () Bool)

(assert (=> b!96355 (= e!62829 (contains!793 lt!47952 (tuple2!2315 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25467 res!48636) b!96354))

(assert (= (and b!96354 res!48637) b!96355))

(assert (=> d!25467 m!104087))

(declare-fun m!104637 () Bool)

(assert (=> d!25467 m!104637))

(declare-fun m!104639 () Bool)

(assert (=> d!25467 m!104639))

(declare-fun m!104641 () Bool)

(assert (=> b!96354 m!104641))

(declare-fun m!104643 () Bool)

(assert (=> b!96355 m!104643))

(assert (=> d!25293 d!25467))

(declare-fun b!96356 () Bool)

(declare-fun e!62834 () List!1580)

(declare-fun call!9768 () List!1580)

(assert (=> b!96356 (= e!62834 call!9768)))

(declare-fun c!16244 () Bool)

(declare-fun c!16245 () Bool)

(declare-fun b!96357 () Bool)

(declare-fun e!62832 () List!1580)

(assert (=> b!96357 (= e!62832 (ite c!16245 (t!5493 (toList!769 call!9658)) (ite c!16244 (Cons!1576 (h!2169 (toList!769 call!9658)) (t!5493 (toList!769 call!9658))) Nil!1577)))))

(declare-fun b!96358 () Bool)

(assert (=> b!96358 (= e!62832 (insertStrictlySorted!69 (t!5493 (toList!769 call!9658)) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62831 () Bool)

(declare-fun lt!48137 () List!1580)

(declare-fun b!96359 () Bool)

(assert (=> b!96359 (= e!62831 (contains!793 lt!48137 (tuple2!2315 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9765 () Bool)

(declare-fun call!9769 () List!1580)

(declare-fun call!9770 () List!1580)

(assert (=> bm!9765 (= call!9769 call!9770)))

(declare-fun b!96360 () Bool)

(declare-fun e!62830 () List!1580)

(assert (=> b!96360 (= e!62830 call!9769)))

(declare-fun b!96361 () Bool)

(assert (=> b!96361 (= e!62834 call!9768)))

(declare-fun d!25469 () Bool)

(assert (=> d!25469 e!62831))

(declare-fun res!48638 () Bool)

(assert (=> d!25469 (=> (not res!48638) (not e!62831))))

(assert (=> d!25469 (= res!48638 (isStrictlySorted!298 lt!48137))))

(declare-fun e!62833 () List!1580)

(assert (=> d!25469 (= lt!48137 e!62833)))

(declare-fun c!16243 () Bool)

(assert (=> d!25469 (= c!16243 (and ((_ is Cons!1576) (toList!769 call!9658)) (bvslt (_1!1168 (h!2169 (toList!769 call!9658))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25469 (isStrictlySorted!298 (toList!769 call!9658))))

(assert (=> d!25469 (= (insertStrictlySorted!69 (toList!769 call!9658) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48137)))

(declare-fun b!96362 () Bool)

(assert (=> b!96362 (= c!16244 (and ((_ is Cons!1576) (toList!769 call!9658)) (bvsgt (_1!1168 (h!2169 (toList!769 call!9658))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!96362 (= e!62830 e!62834)))

(declare-fun b!96363 () Bool)

(declare-fun res!48639 () Bool)

(assert (=> b!96363 (=> (not res!48639) (not e!62831))))

(assert (=> b!96363 (= res!48639 (containsKey!151 lt!48137 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9766 () Bool)

(assert (=> bm!9766 (= call!9770 ($colon$colon!76 e!62832 (ite c!16243 (h!2169 (toList!769 call!9658)) (tuple2!2315 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16246 () Bool)

(assert (=> bm!9766 (= c!16246 c!16243)))

(declare-fun b!96364 () Bool)

(assert (=> b!96364 (= e!62833 e!62830)))

(assert (=> b!96364 (= c!16245 (and ((_ is Cons!1576) (toList!769 call!9658)) (= (_1!1168 (h!2169 (toList!769 call!9658))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96365 () Bool)

(assert (=> b!96365 (= e!62833 call!9770)))

(declare-fun bm!9767 () Bool)

(assert (=> bm!9767 (= call!9768 call!9769)))

(assert (= (and d!25469 c!16243) b!96365))

(assert (= (and d!25469 (not c!16243)) b!96364))

(assert (= (and b!96364 c!16245) b!96360))

(assert (= (and b!96364 (not c!16245)) b!96362))

(assert (= (and b!96362 c!16244) b!96361))

(assert (= (and b!96362 (not c!16244)) b!96356))

(assert (= (or b!96361 b!96356) bm!9767))

(assert (= (or b!96360 bm!9767) bm!9765))

(assert (= (or b!96365 bm!9765) bm!9766))

(assert (= (and bm!9766 c!16246) b!96358))

(assert (= (and bm!9766 (not c!16246)) b!96357))

(assert (= (and d!25469 res!48638) b!96363))

(assert (= (and b!96363 res!48639) b!96359))

(declare-fun m!104645 () Bool)

(assert (=> b!96363 m!104645))

(declare-fun m!104647 () Bool)

(assert (=> b!96359 m!104647))

(declare-fun m!104649 () Bool)

(assert (=> bm!9766 m!104649))

(declare-fun m!104651 () Bool)

(assert (=> d!25469 m!104651))

(declare-fun m!104653 () Bool)

(assert (=> d!25469 m!104653))

(declare-fun m!104655 () Bool)

(assert (=> b!96358 m!104655))

(assert (=> d!25293 d!25469))

(declare-fun d!25471 () Bool)

(assert (=> d!25471 (= (get!1276 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2769 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96115 d!25471))

(declare-fun lt!48138 () Bool)

(declare-fun d!25473 () Bool)

(assert (=> d!25473 (= lt!48138 (select (content!100 (toList!769 lt!47766)) (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun e!62835 () Bool)

(assert (=> d!25473 (= lt!48138 e!62835)))

(declare-fun res!48641 () Bool)

(assert (=> d!25473 (=> (not res!48641) (not e!62835))))

(assert (=> d!25473 (= res!48641 ((_ is Cons!1576) (toList!769 lt!47766)))))

(assert (=> d!25473 (= (contains!793 (toList!769 lt!47766) (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!48138)))

(declare-fun b!96366 () Bool)

(declare-fun e!62836 () Bool)

(assert (=> b!96366 (= e!62835 e!62836)))

(declare-fun res!48640 () Bool)

(assert (=> b!96366 (=> res!48640 e!62836)))

(assert (=> b!96366 (= res!48640 (= (h!2169 (toList!769 lt!47766)) (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96367 () Bool)

(assert (=> b!96367 (= e!62836 (contains!793 (t!5493 (toList!769 lt!47766)) (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25473 res!48641) b!96366))

(assert (= (and b!96366 (not res!48640)) b!96367))

(declare-fun m!104657 () Bool)

(assert (=> d!25473 m!104657))

(declare-fun m!104659 () Bool)

(assert (=> d!25473 m!104659))

(declare-fun m!104661 () Bool)

(assert (=> b!96367 m!104661))

(assert (=> b!95852 d!25473))

(declare-fun d!25475 () Bool)

(declare-fun e!62837 () Bool)

(assert (=> d!25475 e!62837))

(declare-fun res!48642 () Bool)

(assert (=> d!25475 (=> res!48642 e!62837)))

(declare-fun lt!48140 () Bool)

(assert (=> d!25475 (= res!48642 (not lt!48140))))

(declare-fun lt!48141 () Bool)

(assert (=> d!25475 (= lt!48140 lt!48141)))

(declare-fun lt!48142 () Unit!2865)

(declare-fun e!62838 () Unit!2865)

(assert (=> d!25475 (= lt!48142 e!62838)))

(declare-fun c!16247 () Bool)

(assert (=> d!25475 (= c!16247 lt!48141)))

(assert (=> d!25475 (= lt!48141 (containsKey!151 (toList!769 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) lt!47936))))

(assert (=> d!25475 (= (contains!791 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) lt!47936) lt!48140)))

(declare-fun b!96368 () Bool)

(declare-fun lt!48139 () Unit!2865)

(assert (=> b!96368 (= e!62838 lt!48139)))

(assert (=> b!96368 (= lt!48139 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) lt!47936))))

(assert (=> b!96368 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) lt!47936))))

(declare-fun b!96369 () Bool)

(declare-fun Unit!2897 () Unit!2865)

(assert (=> b!96369 (= e!62838 Unit!2897)))

(declare-fun b!96370 () Bool)

(assert (=> b!96370 (= e!62837 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) lt!47936)))))

(assert (= (and d!25475 c!16247) b!96368))

(assert (= (and d!25475 (not c!16247)) b!96369))

(assert (= (and d!25475 (not res!48642)) b!96370))

(declare-fun m!104663 () Bool)

(assert (=> d!25475 m!104663))

(declare-fun m!104665 () Bool)

(assert (=> b!96368 m!104665))

(declare-fun m!104667 () Bool)

(assert (=> b!96368 m!104667))

(assert (=> b!96368 m!104667))

(declare-fun m!104669 () Bool)

(assert (=> b!96368 m!104669))

(assert (=> b!96370 m!104667))

(assert (=> b!96370 m!104667))

(assert (=> b!96370 m!104669))

(assert (=> b!96008 d!25475))

(declare-fun d!25477 () Bool)

(assert (=> d!25477 (= (apply!91 (+!127 lt!47950 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) lt!47935) (apply!91 lt!47950 lt!47935))))

(declare-fun lt!48143 () Unit!2865)

(assert (=> d!25477 (= lt!48143 (choose!581 lt!47950 lt!47944 (zeroValue!2341 newMap!16) lt!47935))))

(declare-fun e!62839 () Bool)

(assert (=> d!25477 e!62839))

(declare-fun res!48643 () Bool)

(assert (=> d!25477 (=> (not res!48643) (not e!62839))))

(assert (=> d!25477 (= res!48643 (contains!791 lt!47950 lt!47935))))

(assert (=> d!25477 (= (addApplyDifferent!67 lt!47950 lt!47944 (zeroValue!2341 newMap!16) lt!47935) lt!48143)))

(declare-fun b!96371 () Bool)

(assert (=> b!96371 (= e!62839 (not (= lt!47935 lt!47944)))))

(assert (= (and d!25477 res!48643) b!96371))

(assert (=> d!25477 m!104063))

(assert (=> d!25477 m!104065))

(declare-fun m!104671 () Bool)

(assert (=> d!25477 m!104671))

(declare-fun m!104673 () Bool)

(assert (=> d!25477 m!104673))

(assert (=> d!25477 m!104063))

(assert (=> d!25477 m!104061))

(assert (=> b!96008 d!25477))

(declare-fun d!25479 () Bool)

(assert (=> d!25479 (= (apply!91 lt!47950 lt!47935) (get!1278 (getValueByKey!147 (toList!769 lt!47950) lt!47935)))))

(declare-fun bs!3963 () Bool)

(assert (= bs!3963 d!25479))

(declare-fun m!104675 () Bool)

(assert (=> bs!3963 m!104675))

(assert (=> bs!3963 m!104675))

(declare-fun m!104677 () Bool)

(assert (=> bs!3963 m!104677))

(assert (=> b!96008 d!25479))

(declare-fun d!25481 () Bool)

(declare-fun e!62840 () Bool)

(assert (=> d!25481 e!62840))

(declare-fun res!48645 () Bool)

(assert (=> d!25481 (=> (not res!48645) (not e!62840))))

(declare-fun lt!48146 () ListLongMap!1507)

(assert (=> d!25481 (= res!48645 (contains!791 lt!48146 (_1!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48144 () List!1580)

(assert (=> d!25481 (= lt!48146 (ListLongMap!1508 lt!48144))))

(declare-fun lt!48145 () Unit!2865)

(declare-fun lt!48147 () Unit!2865)

(assert (=> d!25481 (= lt!48145 lt!48147)))

(assert (=> d!25481 (= (getValueByKey!147 lt!48144 (_1!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25481 (= lt!48147 (lemmaContainsTupThenGetReturnValue!66 lt!48144 (_1!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25481 (= lt!48144 (insertStrictlySorted!69 (toList!769 lt!47942) (_1!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25481 (= (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) lt!48146)))

(declare-fun b!96372 () Bool)

(declare-fun res!48644 () Bool)

(assert (=> b!96372 (=> (not res!48644) (not e!62840))))

(assert (=> b!96372 (= res!48644 (= (getValueByKey!147 (toList!769 lt!48146) (_1!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))))))))

(declare-fun b!96373 () Bool)

(assert (=> b!96373 (= e!62840 (contains!793 (toList!769 lt!48146) (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25481 res!48645) b!96372))

(assert (= (and b!96372 res!48644) b!96373))

(declare-fun m!104679 () Bool)

(assert (=> d!25481 m!104679))

(declare-fun m!104681 () Bool)

(assert (=> d!25481 m!104681))

(declare-fun m!104683 () Bool)

(assert (=> d!25481 m!104683))

(declare-fun m!104685 () Bool)

(assert (=> d!25481 m!104685))

(declare-fun m!104687 () Bool)

(assert (=> b!96372 m!104687))

(declare-fun m!104689 () Bool)

(assert (=> b!96373 m!104689))

(assert (=> b!96008 d!25481))

(declare-fun d!25483 () Bool)

(declare-fun e!62841 () Bool)

(assert (=> d!25483 e!62841))

(declare-fun res!48647 () Bool)

(assert (=> d!25483 (=> (not res!48647) (not e!62841))))

(declare-fun lt!48150 () ListLongMap!1507)

(assert (=> d!25483 (= res!48647 (contains!791 lt!48150 (_1!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48148 () List!1580)

(assert (=> d!25483 (= lt!48150 (ListLongMap!1508 lt!48148))))

(declare-fun lt!48149 () Unit!2865)

(declare-fun lt!48151 () Unit!2865)

(assert (=> d!25483 (= lt!48149 lt!48151)))

(assert (=> d!25483 (= (getValueByKey!147 lt!48148 (_1!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25483 (= lt!48151 (lemmaContainsTupThenGetReturnValue!66 lt!48148 (_1!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25483 (= lt!48148 (insertStrictlySorted!69 (toList!769 lt!47950) (_1!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25483 (= (+!127 lt!47950 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) lt!48150)))

(declare-fun b!96374 () Bool)

(declare-fun res!48646 () Bool)

(assert (=> b!96374 (=> (not res!48646) (not e!62841))))

(assert (=> b!96374 (= res!48646 (= (getValueByKey!147 (toList!769 lt!48150) (_1!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))))))))

(declare-fun b!96375 () Bool)

(assert (=> b!96375 (= e!62841 (contains!793 (toList!769 lt!48150) (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25483 res!48647) b!96374))

(assert (= (and b!96374 res!48646) b!96375))

(declare-fun m!104691 () Bool)

(assert (=> d!25483 m!104691))

(declare-fun m!104693 () Bool)

(assert (=> d!25483 m!104693))

(declare-fun m!104695 () Bool)

(assert (=> d!25483 m!104695))

(declare-fun m!104697 () Bool)

(assert (=> d!25483 m!104697))

(declare-fun m!104699 () Bool)

(assert (=> b!96374 m!104699))

(declare-fun m!104701 () Bool)

(assert (=> b!96375 m!104701))

(assert (=> b!96008 d!25483))

(declare-fun d!25485 () Bool)

(assert (=> d!25485 (= (apply!91 (+!127 lt!47945 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) lt!47931) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47945 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))) lt!47931)))))

(declare-fun bs!3964 () Bool)

(assert (= bs!3964 d!25485))

(declare-fun m!104703 () Bool)

(assert (=> bs!3964 m!104703))

(assert (=> bs!3964 m!104703))

(declare-fun m!104705 () Bool)

(assert (=> bs!3964 m!104705))

(assert (=> b!96008 d!25485))

(declare-fun d!25487 () Bool)

(assert (=> d!25487 (= (apply!91 (+!127 lt!47945 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) lt!47931) (apply!91 lt!47945 lt!47931))))

(declare-fun lt!48152 () Unit!2865)

(assert (=> d!25487 (= lt!48152 (choose!581 lt!47945 lt!47930 (minValue!2341 newMap!16) lt!47931))))

(declare-fun e!62842 () Bool)

(assert (=> d!25487 e!62842))

(declare-fun res!48648 () Bool)

(assert (=> d!25487 (=> (not res!48648) (not e!62842))))

(assert (=> d!25487 (= res!48648 (contains!791 lt!47945 lt!47931))))

(assert (=> d!25487 (= (addApplyDifferent!67 lt!47945 lt!47930 (minValue!2341 newMap!16) lt!47931) lt!48152)))

(declare-fun b!96376 () Bool)

(assert (=> b!96376 (= e!62842 (not (= lt!47931 lt!47930)))))

(assert (= (and d!25487 res!48648) b!96376))

(assert (=> d!25487 m!104073))

(assert (=> d!25487 m!104075))

(declare-fun m!104707 () Bool)

(assert (=> d!25487 m!104707))

(declare-fun m!104709 () Bool)

(assert (=> d!25487 m!104709))

(assert (=> d!25487 m!104073))

(assert (=> d!25487 m!104057))

(assert (=> b!96008 d!25487))

(declare-fun d!25489 () Bool)

(declare-fun e!62843 () Bool)

(assert (=> d!25489 e!62843))

(declare-fun res!48650 () Bool)

(assert (=> d!25489 (=> (not res!48650) (not e!62843))))

(declare-fun lt!48155 () ListLongMap!1507)

(assert (=> d!25489 (= res!48650 (contains!791 lt!48155 (_1!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))))))

(declare-fun lt!48153 () List!1580)

(assert (=> d!25489 (= lt!48155 (ListLongMap!1508 lt!48153))))

(declare-fun lt!48154 () Unit!2865)

(declare-fun lt!48156 () Unit!2865)

(assert (=> d!25489 (= lt!48154 lt!48156)))

(assert (=> d!25489 (= (getValueByKey!147 lt!48153 (_1!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))))))

(assert (=> d!25489 (= lt!48156 (lemmaContainsTupThenGetReturnValue!66 lt!48153 (_1!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))))))

(assert (=> d!25489 (= lt!48153 (insertStrictlySorted!69 (toList!769 lt!47941) (_1!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))))))

(assert (=> d!25489 (= (+!127 lt!47941 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) lt!48155)))

(declare-fun b!96377 () Bool)

(declare-fun res!48649 () Bool)

(assert (=> b!96377 (=> (not res!48649) (not e!62843))))

(assert (=> b!96377 (= res!48649 (= (getValueByKey!147 (toList!769 lt!48155) (_1!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))))))))

(declare-fun b!96378 () Bool)

(assert (=> b!96378 (= e!62843 (contains!793 (toList!769 lt!48155) (tuple2!2315 lt!47938 (minValue!2341 newMap!16))))))

(assert (= (and d!25489 res!48650) b!96377))

(assert (= (and b!96377 res!48649) b!96378))

(declare-fun m!104711 () Bool)

(assert (=> d!25489 m!104711))

(declare-fun m!104713 () Bool)

(assert (=> d!25489 m!104713))

(declare-fun m!104715 () Bool)

(assert (=> d!25489 m!104715))

(declare-fun m!104717 () Bool)

(assert (=> d!25489 m!104717))

(declare-fun m!104719 () Bool)

(assert (=> b!96377 m!104719))

(declare-fun m!104721 () Bool)

(assert (=> b!96378 m!104721))

(assert (=> b!96008 d!25489))

(declare-fun b!96379 () Bool)

(declare-fun res!48652 () Bool)

(declare-fun e!62847 () Bool)

(assert (=> b!96379 (=> (not res!48652) (not e!62847))))

(declare-fun lt!48163 () ListLongMap!1507)

(assert (=> b!96379 (= res!48652 (not (contains!791 lt!48163 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96380 () Bool)

(declare-fun e!62850 () Bool)

(declare-fun e!62849 () Bool)

(assert (=> b!96380 (= e!62850 e!62849)))

(declare-fun c!16250 () Bool)

(assert (=> b!96380 (= c!16250 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun call!9771 () ListLongMap!1507)

(declare-fun bm!9768 () Bool)

(assert (=> bm!9768 (= call!9771 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun b!96381 () Bool)

(declare-fun e!62846 () ListLongMap!1507)

(declare-fun e!62848 () ListLongMap!1507)

(assert (=> b!96381 (= e!62846 e!62848)))

(declare-fun c!16248 () Bool)

(assert (=> b!96381 (= c!16248 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96382 () Bool)

(declare-fun lt!48157 () Unit!2865)

(declare-fun lt!48160 () Unit!2865)

(assert (=> b!96382 (= lt!48157 lt!48160)))

(declare-fun lt!48158 () V!3137)

(declare-fun lt!48162 () (_ BitVec 64))

(declare-fun lt!48159 () (_ BitVec 64))

(declare-fun lt!48161 () ListLongMap!1507)

(assert (=> b!96382 (not (contains!791 (+!127 lt!48161 (tuple2!2315 lt!48159 lt!48158)) lt!48162))))

(assert (=> b!96382 (= lt!48160 (addStillNotContains!40 lt!48161 lt!48159 lt!48158 lt!48162))))

(assert (=> b!96382 (= lt!48162 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96382 (= lt!48158 (get!1275 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96382 (= lt!48159 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96382 (= lt!48161 call!9771)))

(assert (=> b!96382 (= e!62848 (+!127 call!9771 (tuple2!2315 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (get!1275 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96383 () Bool)

(declare-fun e!62845 () Bool)

(assert (=> b!96383 (= e!62850 e!62845)))

(assert (=> b!96383 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48651 () Bool)

(assert (=> b!96383 (= res!48651 (contains!791 lt!48163 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96383 (=> (not res!48651) (not e!62845))))

(declare-fun b!96384 () Bool)

(declare-fun e!62844 () Bool)

(assert (=> b!96384 (= e!62844 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96384 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!25491 () Bool)

(assert (=> d!25491 e!62847))

(declare-fun res!48653 () Bool)

(assert (=> d!25491 (=> (not res!48653) (not e!62847))))

(assert (=> d!25491 (= res!48653 (not (contains!791 lt!48163 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25491 (= lt!48163 e!62846)))

(declare-fun c!16249 () Bool)

(assert (=> d!25491 (= c!16249 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25491 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25491 (= (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48163)))

(declare-fun b!96385 () Bool)

(assert (=> b!96385 (= e!62849 (= lt!48163 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96386 () Bool)

(assert (=> b!96386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> b!96386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))))))))

(assert (=> b!96386 (= e!62845 (= (apply!91 lt!48163 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96387 () Bool)

(assert (=> b!96387 (= e!62848 call!9771)))

(declare-fun b!96388 () Bool)

(assert (=> b!96388 (= e!62846 (ListLongMap!1508 Nil!1577))))

(declare-fun b!96389 () Bool)

(assert (=> b!96389 (= e!62849 (isEmpty!357 lt!48163))))

(declare-fun b!96390 () Bool)

(assert (=> b!96390 (= e!62847 e!62850)))

(declare-fun c!16251 () Bool)

(assert (=> b!96390 (= c!16251 e!62844)))

(declare-fun res!48654 () Bool)

(assert (=> b!96390 (=> (not res!48654) (not e!62844))))

(assert (=> b!96390 (= res!48654 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (= (and d!25491 c!16249) b!96388))

(assert (= (and d!25491 (not c!16249)) b!96381))

(assert (= (and b!96381 c!16248) b!96382))

(assert (= (and b!96381 (not c!16248)) b!96387))

(assert (= (or b!96382 b!96387) bm!9768))

(assert (= (and d!25491 res!48653) b!96379))

(assert (= (and b!96379 res!48652) b!96390))

(assert (= (and b!96390 res!48654) b!96384))

(assert (= (and b!96390 c!16251) b!96383))

(assert (= (and b!96390 (not c!16251)) b!96380))

(assert (= (and b!96383 res!48651) b!96386))

(assert (= (and b!96380 c!16250) b!96385))

(assert (= (and b!96380 (not c!16250)) b!96389))

(declare-fun b_lambda!4259 () Bool)

(assert (=> (not b_lambda!4259) (not b!96382)))

(assert (=> b!96382 t!5505))

(declare-fun b_and!5885 () Bool)

(assert (= b_and!5881 (and (=> t!5505 result!3225) b_and!5885)))

(assert (=> b!96382 t!5507))

(declare-fun b_and!5887 () Bool)

(assert (= b_and!5883 (and (=> t!5507 result!3227) b_and!5887)))

(declare-fun b_lambda!4261 () Bool)

(assert (=> (not b_lambda!4261) (not b!96386)))

(assert (=> b!96386 t!5505))

(declare-fun b_and!5889 () Bool)

(assert (= b_and!5885 (and (=> t!5505 result!3225) b_and!5889)))

(assert (=> b!96386 t!5507))

(declare-fun b_and!5891 () Bool)

(assert (= b_and!5887 (and (=> t!5507 result!3227) b_and!5891)))

(declare-fun m!104723 () Bool)

(assert (=> bm!9768 m!104723))

(declare-fun m!104725 () Bool)

(assert (=> d!25491 m!104725))

(assert (=> d!25491 m!103855))

(declare-fun m!104727 () Bool)

(assert (=> b!96389 m!104727))

(assert (=> b!96383 m!103867))

(assert (=> b!96383 m!103867))

(declare-fun m!104729 () Bool)

(assert (=> b!96383 m!104729))

(assert (=> b!96381 m!103867))

(assert (=> b!96381 m!103867))

(assert (=> b!96381 m!103869))

(assert (=> b!96386 m!104043))

(assert (=> b!96386 m!103867))

(declare-fun m!104731 () Bool)

(assert (=> b!96386 m!104731))

(assert (=> b!96386 m!104043))

(assert (=> b!96386 m!103989))

(assert (=> b!96386 m!104045))

(assert (=> b!96386 m!103989))

(assert (=> b!96386 m!103867))

(assert (=> b!96382 m!104043))

(declare-fun m!104733 () Bool)

(assert (=> b!96382 m!104733))

(assert (=> b!96382 m!104043))

(assert (=> b!96382 m!103989))

(assert (=> b!96382 m!104045))

(assert (=> b!96382 m!103989))

(declare-fun m!104735 () Bool)

(assert (=> b!96382 m!104735))

(assert (=> b!96382 m!103867))

(declare-fun m!104737 () Bool)

(assert (=> b!96382 m!104737))

(assert (=> b!96382 m!104735))

(declare-fun m!104739 () Bool)

(assert (=> b!96382 m!104739))

(declare-fun m!104741 () Bool)

(assert (=> b!96379 m!104741))

(assert (=> b!96385 m!104723))

(assert (=> b!96384 m!103867))

(assert (=> b!96384 m!103867))

(assert (=> b!96384 m!103869))

(assert (=> b!96008 d!25491))

(declare-fun d!25493 () Bool)

(assert (=> d!25493 (= (apply!91 (+!127 lt!47941 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) lt!47943) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47941 (tuple2!2315 lt!47938 (minValue!2341 newMap!16)))) lt!47943)))))

(declare-fun bs!3965 () Bool)

(assert (= bs!3965 d!25493))

(declare-fun m!104743 () Bool)

(assert (=> bs!3965 m!104743))

(assert (=> bs!3965 m!104743))

(declare-fun m!104745 () Bool)

(assert (=> bs!3965 m!104745))

(assert (=> b!96008 d!25493))

(declare-fun d!25495 () Bool)

(assert (=> d!25495 (= (apply!91 lt!47945 lt!47931) (get!1278 (getValueByKey!147 (toList!769 lt!47945) lt!47931)))))

(declare-fun bs!3966 () Bool)

(assert (= bs!3966 d!25495))

(declare-fun m!104747 () Bool)

(assert (=> bs!3966 m!104747))

(assert (=> bs!3966 m!104747))

(declare-fun m!104749 () Bool)

(assert (=> bs!3966 m!104749))

(assert (=> b!96008 d!25495))

(declare-fun d!25497 () Bool)

(assert (=> d!25497 (= (apply!91 (+!127 lt!47941 (tuple2!2315 lt!47938 (minValue!2341 newMap!16))) lt!47943) (apply!91 lt!47941 lt!47943))))

(declare-fun lt!48164 () Unit!2865)

(assert (=> d!25497 (= lt!48164 (choose!581 lt!47941 lt!47938 (minValue!2341 newMap!16) lt!47943))))

(declare-fun e!62851 () Bool)

(assert (=> d!25497 e!62851))

(declare-fun res!48655 () Bool)

(assert (=> d!25497 (=> (not res!48655) (not e!62851))))

(assert (=> d!25497 (= res!48655 (contains!791 lt!47941 lt!47943))))

(assert (=> d!25497 (= (addApplyDifferent!67 lt!47941 lt!47938 (minValue!2341 newMap!16) lt!47943) lt!48164)))

(declare-fun b!96391 () Bool)

(assert (=> b!96391 (= e!62851 (not (= lt!47943 lt!47938)))))

(assert (= (and d!25497 res!48655) b!96391))

(assert (=> d!25497 m!104067))

(assert (=> d!25497 m!104069))

(declare-fun m!104751 () Bool)

(assert (=> d!25497 m!104751))

(declare-fun m!104753 () Bool)

(assert (=> d!25497 m!104753))

(assert (=> d!25497 m!104067))

(assert (=> d!25497 m!104055))

(assert (=> b!96008 d!25497))

(declare-fun d!25499 () Bool)

(assert (=> d!25499 (= (apply!91 lt!47941 lt!47943) (get!1278 (getValueByKey!147 (toList!769 lt!47941) lt!47943)))))

(declare-fun bs!3967 () Bool)

(assert (= bs!3967 d!25499))

(declare-fun m!104755 () Bool)

(assert (=> bs!3967 m!104755))

(assert (=> bs!3967 m!104755))

(declare-fun m!104757 () Bool)

(assert (=> bs!3967 m!104757))

(assert (=> b!96008 d!25499))

(declare-fun d!25501 () Bool)

(assert (=> d!25501 (= (apply!91 (+!127 lt!47950 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16))) lt!47935) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47950 (tuple2!2315 lt!47944 (zeroValue!2341 newMap!16)))) lt!47935)))))

(declare-fun bs!3968 () Bool)

(assert (= bs!3968 d!25501))

(declare-fun m!104759 () Bool)

(assert (=> bs!3968 m!104759))

(assert (=> bs!3968 m!104759))

(declare-fun m!104761 () Bool)

(assert (=> bs!3968 m!104761))

(assert (=> b!96008 d!25501))

(declare-fun d!25503 () Bool)

(assert (=> d!25503 (contains!791 (+!127 lt!47942 (tuple2!2315 lt!47949 (zeroValue!2341 newMap!16))) lt!47936)))

(declare-fun lt!48165 () Unit!2865)

(assert (=> d!25503 (= lt!48165 (choose!582 lt!47942 lt!47949 (zeroValue!2341 newMap!16) lt!47936))))

(assert (=> d!25503 (contains!791 lt!47942 lt!47936)))

(assert (=> d!25503 (= (addStillContains!67 lt!47942 lt!47949 (zeroValue!2341 newMap!16) lt!47936) lt!48165)))

(declare-fun bs!3969 () Bool)

(assert (= bs!3969 d!25503))

(assert (=> bs!3969 m!104051))

(assert (=> bs!3969 m!104051))

(assert (=> bs!3969 m!104053))

(declare-fun m!104763 () Bool)

(assert (=> bs!3969 m!104763))

(declare-fun m!104765 () Bool)

(assert (=> bs!3969 m!104765))

(assert (=> b!96008 d!25503))

(declare-fun d!25505 () Bool)

(declare-fun e!62852 () Bool)

(assert (=> d!25505 e!62852))

(declare-fun res!48657 () Bool)

(assert (=> d!25505 (=> (not res!48657) (not e!62852))))

(declare-fun lt!48168 () ListLongMap!1507)

(assert (=> d!25505 (= res!48657 (contains!791 lt!48168 (_1!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))))))

(declare-fun lt!48166 () List!1580)

(assert (=> d!25505 (= lt!48168 (ListLongMap!1508 lt!48166))))

(declare-fun lt!48167 () Unit!2865)

(declare-fun lt!48169 () Unit!2865)

(assert (=> d!25505 (= lt!48167 lt!48169)))

(assert (=> d!25505 (= (getValueByKey!147 lt!48166 (_1!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))))))

(assert (=> d!25505 (= lt!48169 (lemmaContainsTupThenGetReturnValue!66 lt!48166 (_1!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))))))

(assert (=> d!25505 (= lt!48166 (insertStrictlySorted!69 (toList!769 lt!47945) (_1!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))))))

(assert (=> d!25505 (= (+!127 lt!47945 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))) lt!48168)))

(declare-fun b!96392 () Bool)

(declare-fun res!48656 () Bool)

(assert (=> b!96392 (=> (not res!48656) (not e!62852))))

(assert (=> b!96392 (= res!48656 (= (getValueByKey!147 (toList!769 lt!48168) (_1!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47930 (minValue!2341 newMap!16))))))))

(declare-fun b!96393 () Bool)

(assert (=> b!96393 (= e!62852 (contains!793 (toList!769 lt!48168) (tuple2!2315 lt!47930 (minValue!2341 newMap!16))))))

(assert (= (and d!25505 res!48657) b!96392))

(assert (= (and b!96392 res!48656) b!96393))

(declare-fun m!104767 () Bool)

(assert (=> d!25505 m!104767))

(declare-fun m!104769 () Bool)

(assert (=> d!25505 m!104769))

(declare-fun m!104771 () Bool)

(assert (=> d!25505 m!104771))

(declare-fun m!104773 () Bool)

(assert (=> d!25505 m!104773))

(declare-fun m!104775 () Bool)

(assert (=> b!96392 m!104775))

(declare-fun m!104777 () Bool)

(assert (=> b!96393 m!104777))

(assert (=> b!96008 d!25505))

(declare-fun lt!48170 () Bool)

(declare-fun d!25507 () Bool)

(assert (=> d!25507 (= lt!48170 (select (content!100 (toList!769 lt!47954)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!62853 () Bool)

(assert (=> d!25507 (= lt!48170 e!62853)))

(declare-fun res!48659 () Bool)

(assert (=> d!25507 (=> (not res!48659) (not e!62853))))

(assert (=> d!25507 (= res!48659 ((_ is Cons!1576) (toList!769 lt!47954)))))

(assert (=> d!25507 (= (contains!793 (toList!769 lt!47954) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48170)))

(declare-fun b!96394 () Bool)

(declare-fun e!62854 () Bool)

(assert (=> b!96394 (= e!62853 e!62854)))

(declare-fun res!48658 () Bool)

(assert (=> b!96394 (=> res!48658 e!62854)))

(assert (=> b!96394 (= res!48658 (= (h!2169 (toList!769 lt!47954)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96395 () Bool)

(assert (=> b!96395 (= e!62854 (contains!793 (t!5493 (toList!769 lt!47954)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25507 res!48659) b!96394))

(assert (= (and b!96394 (not res!48658)) b!96395))

(declare-fun m!104779 () Bool)

(assert (=> d!25507 m!104779))

(declare-fun m!104781 () Bool)

(assert (=> d!25507 m!104781))

(declare-fun m!104783 () Bool)

(assert (=> b!96395 m!104783))

(assert (=> b!96029 d!25507))

(declare-fun d!25509 () Bool)

(assert (=> d!25509 (= (apply!91 lt!47951 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (getValueByKey!147 (toList!769 lt!47951) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3970 () Bool)

(assert (= bs!3970 d!25509))

(assert (=> bs!3970 m!103867))

(declare-fun m!104785 () Bool)

(assert (=> bs!3970 m!104785))

(assert (=> bs!3970 m!104785))

(declare-fun m!104787 () Bool)

(assert (=> bs!3970 m!104787))

(assert (=> b!96013 d!25509))

(declare-fun c!16252 () Bool)

(declare-fun d!25511 () Bool)

(assert (=> d!25511 (= c!16252 ((_ is ValueCellFull!965) (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62855 () V!3137)

(assert (=> d!25511 (= (get!1275 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62855)))

(declare-fun b!96396 () Bool)

(assert (=> b!96396 (= e!62855 (get!1276 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96397 () Bool)

(assert (=> b!96397 (= e!62855 (get!1277 (select (arr!1991 (ite (or c!16079 c!16070) (_values!2439 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25511 c!16252) b!96396))

(assert (= (and d!25511 (not c!16252)) b!96397))

(assert (=> b!96396 m!104043))

(assert (=> b!96396 m!103989))

(declare-fun m!104789 () Bool)

(assert (=> b!96396 m!104789))

(assert (=> b!96397 m!104043))

(assert (=> b!96397 m!103989))

(declare-fun m!104791 () Bool)

(assert (=> b!96397 m!104791))

(assert (=> b!96013 d!25511))

(declare-fun bm!9769 () Bool)

(declare-fun call!9772 () Bool)

(assert (=> bm!9769 (= call!9772 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4141 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642))))))

(declare-fun d!25513 () Bool)

(declare-fun res!48660 () Bool)

(declare-fun e!62856 () Bool)

(assert (=> d!25513 (=> res!48660 e!62856)))

(assert (=> d!25513 (= res!48660 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(assert (=> d!25513 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642))) e!62856)))

(declare-fun b!96398 () Bool)

(declare-fun e!62857 () Bool)

(assert (=> b!96398 (= e!62857 call!9772)))

(declare-fun b!96399 () Bool)

(declare-fun e!62858 () Bool)

(assert (=> b!96399 (= e!62858 call!9772)))

(declare-fun b!96400 () Bool)

(assert (=> b!96400 (= e!62856 e!62857)))

(declare-fun c!16253 () Bool)

(assert (=> b!96400 (= c!16253 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun b!96401 () Bool)

(assert (=> b!96401 (= e!62857 e!62858)))

(declare-fun lt!48173 () (_ BitVec 64))

(assert (=> b!96401 (= lt!48173 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000))))

(declare-fun lt!48171 () Unit!2865)

(assert (=> b!96401 (= lt!48171 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4141 (_2!1169 lt!47642)) lt!48173 #b00000000000000000000000000000000))))

(assert (=> b!96401 (arrayContainsKey!0 (_keys!4141 (_2!1169 lt!47642)) lt!48173 #b00000000000000000000000000000000)))

(declare-fun lt!48172 () Unit!2865)

(assert (=> b!96401 (= lt!48172 lt!48171)))

(declare-fun res!48661 () Bool)

(assert (=> b!96401 (= res!48661 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000) (_keys!4141 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642))) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!96401 (=> (not res!48661) (not e!62858))))

(assert (= (and d!25513 (not res!48660)) b!96400))

(assert (= (and b!96400 c!16253) b!96401))

(assert (= (and b!96400 (not c!16253)) b!96398))

(assert (= (and b!96401 res!48661) b!96399))

(assert (= (or b!96399 b!96398) bm!9769))

(declare-fun m!104793 () Bool)

(assert (=> bm!9769 m!104793))

(assert (=> b!96400 m!104457))

(assert (=> b!96400 m!104457))

(assert (=> b!96400 m!104459))

(assert (=> b!96401 m!104457))

(declare-fun m!104795 () Bool)

(assert (=> b!96401 m!104795))

(declare-fun m!104797 () Bool)

(assert (=> b!96401 m!104797))

(assert (=> b!96401 m!104457))

(declare-fun m!104799 () Bool)

(assert (=> b!96401 m!104799))

(assert (=> b!95976 d!25513))

(declare-fun d!25515 () Bool)

(declare-fun e!62859 () Bool)

(assert (=> d!25515 e!62859))

(declare-fun res!48663 () Bool)

(assert (=> d!25515 (=> (not res!48663) (not e!62859))))

(declare-fun lt!48176 () ListLongMap!1507)

(assert (=> d!25515 (= res!48663 (contains!791 lt!48176 (_1!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun lt!48174 () List!1580)

(assert (=> d!25515 (= lt!48176 (ListLongMap!1508 lt!48174))))

(declare-fun lt!48175 () Unit!2865)

(declare-fun lt!48177 () Unit!2865)

(assert (=> d!25515 (= lt!48175 lt!48177)))

(assert (=> d!25515 (= (getValueByKey!147 lt!48174 (_1!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))) (Some!152 (_2!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25515 (= lt!48177 (lemmaContainsTupThenGetReturnValue!66 lt!48174 (_1!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (_2!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25515 (= lt!48174 (insertStrictlySorted!69 (toList!769 (ite c!16170 call!9732 (ite c!16173 call!9735 call!9737))) (_1!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (_2!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25515 (= (+!127 (ite c!16170 call!9732 (ite c!16173 call!9735 call!9737)) (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!48176)))

(declare-fun b!96402 () Bool)

(declare-fun res!48662 () Bool)

(assert (=> b!96402 (=> (not res!48662) (not e!62859))))

(assert (=> b!96402 (= res!48662 (= (getValueByKey!147 (toList!769 lt!48176) (_1!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))) (Some!152 (_2!1168 (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))))

(declare-fun b!96403 () Bool)

(assert (=> b!96403 (= e!62859 (contains!793 (toList!769 lt!48176) (ite (or c!16170 c!16173) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16079 c!16071) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (= (and d!25515 res!48663) b!96402))

(assert (= (and b!96402 res!48662) b!96403))

(declare-fun m!104801 () Bool)

(assert (=> d!25515 m!104801))

(declare-fun m!104803 () Bool)

(assert (=> d!25515 m!104803))

(declare-fun m!104805 () Bool)

(assert (=> d!25515 m!104805))

(declare-fun m!104807 () Bool)

(assert (=> d!25515 m!104807))

(declare-fun m!104809 () Bool)

(assert (=> b!96402 m!104809))

(declare-fun m!104811 () Bool)

(assert (=> b!96403 m!104811))

(assert (=> bm!9732 d!25515))

(declare-fun d!25517 () Bool)

(declare-fun e!62860 () Bool)

(assert (=> d!25517 e!62860))

(declare-fun res!48665 () Bool)

(assert (=> d!25517 (=> (not res!48665) (not e!62860))))

(declare-fun lt!48180 () ListLongMap!1507)

(assert (=> d!25517 (= res!48665 (contains!791 lt!48180 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48178 () List!1580)

(assert (=> d!25517 (= lt!48180 (ListLongMap!1508 lt!48178))))

(declare-fun lt!48179 () Unit!2865)

(declare-fun lt!48181 () Unit!2865)

(assert (=> d!25517 (= lt!48179 lt!48181)))

(assert (=> d!25517 (= (getValueByKey!147 lt!48178 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25517 (= lt!48181 (lemmaContainsTupThenGetReturnValue!66 lt!48178 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25517 (= lt!48178 (insertStrictlySorted!69 (toList!769 call!9734) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25517 (= (+!127 call!9734 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48180)))

(declare-fun b!96404 () Bool)

(declare-fun res!48664 () Bool)

(assert (=> b!96404 (=> (not res!48664) (not e!62860))))

(assert (=> b!96404 (= res!48664 (= (getValueByKey!147 (toList!769 lt!48180) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96405 () Bool)

(assert (=> b!96405 (= e!62860 (contains!793 (toList!769 lt!48180) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16079 (ite c!16071 (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25517 res!48665) b!96404))

(assert (= (and b!96404 res!48664) b!96405))

(declare-fun m!104813 () Bool)

(assert (=> d!25517 m!104813))

(declare-fun m!104815 () Bool)

(assert (=> d!25517 m!104815))

(declare-fun m!104817 () Bool)

(assert (=> d!25517 m!104817))

(declare-fun m!104819 () Bool)

(assert (=> d!25517 m!104819))

(declare-fun m!104821 () Bool)

(assert (=> b!96404 m!104821))

(declare-fun m!104823 () Bool)

(assert (=> b!96405 m!104823))

(assert (=> b!96096 d!25517))

(declare-fun b!96418 () Bool)

(declare-fun e!62867 () SeekEntryResult!255)

(assert (=> b!96418 (= e!62867 (MissingVacant!255 (index!3164 lt!47965)))))

(declare-fun lt!48187 () SeekEntryResult!255)

(declare-fun d!25519 () Bool)

(assert (=> d!25519 (and (or ((_ is Undefined!255) lt!48187) (not ((_ is Found!255) lt!48187)) (and (bvsge (index!3163 lt!48187) #b00000000000000000000000000000000) (bvslt (index!3163 lt!48187) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!48187) ((_ is Found!255) lt!48187) (not ((_ is MissingVacant!255) lt!48187)) (not (= (index!3165 lt!48187) (index!3164 lt!47965))) (and (bvsge (index!3165 lt!48187) #b00000000000000000000000000000000) (bvslt (index!3165 lt!48187) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!48187) (ite ((_ is Found!255) lt!48187) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!48187)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (and ((_ is MissingVacant!255) lt!48187) (= (index!3165 lt!48187) (index!3164 lt!47965)) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!48187)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!62868 () SeekEntryResult!255)

(assert (=> d!25519 (= lt!48187 e!62868)))

(declare-fun c!16261 () Bool)

(assert (=> d!25519 (= c!16261 (bvsge (x!12802 lt!47965) #b01111111111111111111111111111110))))

(declare-fun lt!48186 () (_ BitVec 64))

(assert (=> d!25519 (= lt!48186 (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!47965)))))

(assert (=> d!25519 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25519 (= (seekKeyOrZeroReturnVacant!0 (x!12802 lt!47965) (index!3164 lt!47965) (index!3164 lt!47965) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)) lt!48187)))

(declare-fun b!96419 () Bool)

(declare-fun e!62869 () SeekEntryResult!255)

(assert (=> b!96419 (= e!62869 (Found!255 (index!3164 lt!47965)))))

(declare-fun b!96420 () Bool)

(declare-fun c!16262 () Bool)

(assert (=> b!96420 (= c!16262 (= lt!48186 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96420 (= e!62869 e!62867)))

(declare-fun b!96421 () Bool)

(assert (=> b!96421 (= e!62868 Undefined!255)))

(declare-fun b!96422 () Bool)

(assert (=> b!96422 (= e!62868 e!62869)))

(declare-fun c!16260 () Bool)

(assert (=> b!96422 (= c!16260 (= lt!48186 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96423 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!96423 (= e!62867 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12802 lt!47965) #b00000000000000000000000000000001) (nextIndex!0 (index!3164 lt!47965) (x!12802 lt!47965) (mask!6540 newMap!16)) (index!3164 lt!47965) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(assert (= (and d!25519 c!16261) b!96421))

(assert (= (and d!25519 (not c!16261)) b!96422))

(assert (= (and b!96422 c!16260) b!96419))

(assert (= (and b!96422 (not c!16260)) b!96420))

(assert (= (and b!96420 c!16262) b!96418))

(assert (= (and b!96420 (not c!16262)) b!96423))

(declare-fun m!104825 () Bool)

(assert (=> d!25519 m!104825))

(declare-fun m!104827 () Bool)

(assert (=> d!25519 m!104827))

(assert (=> d!25519 m!104117))

(assert (=> d!25519 m!103855))

(declare-fun m!104829 () Bool)

(assert (=> b!96423 m!104829))

(assert (=> b!96423 m!104829))

(assert (=> b!96423 m!103459))

(declare-fun m!104831 () Bool)

(assert (=> b!96423 m!104831))

(assert (=> b!96059 d!25519))

(declare-fun d!25521 () Bool)

(declare-fun e!62870 () Bool)

(assert (=> d!25521 e!62870))

(declare-fun res!48667 () Bool)

(assert (=> d!25521 (=> (not res!48667) (not e!62870))))

(declare-fun lt!48190 () ListLongMap!1507)

(assert (=> d!25521 (= res!48667 (contains!791 lt!48190 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48188 () List!1580)

(assert (=> d!25521 (= lt!48190 (ListLongMap!1508 lt!48188))))

(declare-fun lt!48189 () Unit!2865)

(declare-fun lt!48191 () Unit!2865)

(assert (=> d!25521 (= lt!48189 lt!48191)))

(assert (=> d!25521 (= (getValueByKey!147 lt!48188 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25521 (= lt!48191 (lemmaContainsTupThenGetReturnValue!66 lt!48188 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25521 (= lt!48188 (insertStrictlySorted!69 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25521 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48190)))

(declare-fun b!96424 () Bool)

(declare-fun res!48666 () Bool)

(assert (=> b!96424 (=> (not res!48666) (not e!62870))))

(assert (=> b!96424 (= res!48666 (= (getValueByKey!147 (toList!769 lt!48190) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96425 () Bool)

(assert (=> b!96425 (= e!62870 (contains!793 (toList!769 lt!48190) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25521 res!48667) b!96424))

(assert (= (and b!96424 res!48666) b!96425))

(declare-fun m!104833 () Bool)

(assert (=> d!25521 m!104833))

(declare-fun m!104835 () Bool)

(assert (=> d!25521 m!104835))

(declare-fun m!104837 () Bool)

(assert (=> d!25521 m!104837))

(declare-fun m!104839 () Bool)

(assert (=> d!25521 m!104839))

(declare-fun m!104841 () Bool)

(assert (=> b!96424 m!104841))

(declare-fun m!104843 () Bool)

(assert (=> b!96425 m!104843))

(assert (=> d!25267 d!25521))

(assert (=> d!25267 d!25289))

(declare-fun call!9774 () ListLongMap!1507)

(declare-fun bm!9770 () Bool)

(assert (=> bm!9770 (= call!9774 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96426 () Bool)

(declare-fun e!62876 () Unit!2865)

(declare-fun Unit!2898 () Unit!2865)

(assert (=> b!96426 (= e!62876 Unit!2898)))

(declare-fun bm!9771 () Bool)

(declare-fun call!9777 () ListLongMap!1507)

(assert (=> bm!9771 (= call!9777 call!9774)))

(declare-fun b!96427 () Bool)

(declare-fun lt!48210 () Unit!2865)

(assert (=> b!96427 (= e!62876 lt!48210)))

(declare-fun lt!48204 () ListLongMap!1507)

(assert (=> b!96427 (= lt!48204 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48211 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48198 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48198 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48195 () Unit!2865)

(assert (=> b!96427 (= lt!48195 (addStillContains!67 lt!48204 lt!48211 (zeroValue!2341 newMap!16) lt!48198))))

(assert (=> b!96427 (contains!791 (+!127 lt!48204 (tuple2!2315 lt!48211 (zeroValue!2341 newMap!16))) lt!48198)))

(declare-fun lt!48208 () Unit!2865)

(assert (=> b!96427 (= lt!48208 lt!48195)))

(declare-fun lt!48207 () ListLongMap!1507)

(assert (=> b!96427 (= lt!48207 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48192 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48192 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48193 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48193 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48209 () Unit!2865)

(assert (=> b!96427 (= lt!48209 (addApplyDifferent!67 lt!48207 lt!48192 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48193))))

(assert (=> b!96427 (= (apply!91 (+!127 lt!48207 (tuple2!2315 lt!48192 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48193) (apply!91 lt!48207 lt!48193))))

(declare-fun lt!48194 () Unit!2865)

(assert (=> b!96427 (= lt!48194 lt!48209)))

(declare-fun lt!48212 () ListLongMap!1507)

(assert (=> b!96427 (= lt!48212 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48206 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48206 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48197 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48197 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48201 () Unit!2865)

(assert (=> b!96427 (= lt!48201 (addApplyDifferent!67 lt!48212 lt!48206 (zeroValue!2341 newMap!16) lt!48197))))

(assert (=> b!96427 (= (apply!91 (+!127 lt!48212 (tuple2!2315 lt!48206 (zeroValue!2341 newMap!16))) lt!48197) (apply!91 lt!48212 lt!48197))))

(declare-fun lt!48202 () Unit!2865)

(assert (=> b!96427 (= lt!48202 lt!48201)))

(declare-fun lt!48203 () ListLongMap!1507)

(assert (=> b!96427 (= lt!48203 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48200 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48200 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48205 () (_ BitVec 64))

(assert (=> b!96427 (= lt!48205 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96427 (= lt!48210 (addApplyDifferent!67 lt!48203 lt!48200 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48205))))

(assert (=> b!96427 (= (apply!91 (+!127 lt!48203 (tuple2!2315 lt!48200 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48205) (apply!91 lt!48203 lt!48205))))

(declare-fun e!62875 () ListLongMap!1507)

(declare-fun b!96428 () Bool)

(declare-fun call!9776 () ListLongMap!1507)

(assert (=> b!96428 (= e!62875 (+!127 call!9776 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96430 () Bool)

(declare-fun e!62877 () Bool)

(declare-fun call!9778 () Bool)

(assert (=> b!96430 (= e!62877 (not call!9778))))

(declare-fun b!96431 () Bool)

(declare-fun e!62873 () Bool)

(declare-fun e!62874 () Bool)

(assert (=> b!96431 (= e!62873 e!62874)))

(declare-fun c!16263 () Bool)

(assert (=> b!96431 (= c!16263 (not (= (bvand lt!47657 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96432 () Bool)

(declare-fun e!62883 () Bool)

(declare-fun lt!48213 () ListLongMap!1507)

(assert (=> b!96432 (= e!62883 (= (apply!91 lt!48213 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (_values!2439 newMap!16))))))

(assert (=> b!96432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96433 () Bool)

(declare-fun e!62879 () ListLongMap!1507)

(assert (=> b!96433 (= e!62875 e!62879)))

(declare-fun c!16267 () Bool)

(assert (=> b!96433 (= c!16267 (and (not (= (bvand lt!47657 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!47657 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96434 () Bool)

(declare-fun call!9775 () Bool)

(assert (=> b!96434 (= e!62874 (not call!9775))))

(declare-fun b!96435 () Bool)

(declare-fun e!62880 () Bool)

(assert (=> b!96435 (= e!62877 e!62880)))

(declare-fun res!48669 () Bool)

(assert (=> b!96435 (= res!48669 call!9778)))

(assert (=> b!96435 (=> (not res!48669) (not e!62880))))

(declare-fun b!96436 () Bool)

(declare-fun res!48673 () Bool)

(assert (=> b!96436 (=> (not res!48673) (not e!62873))))

(declare-fun e!62871 () Bool)

(assert (=> b!96436 (= res!48673 e!62871)))

(declare-fun res!48674 () Bool)

(assert (=> b!96436 (=> res!48674 e!62871)))

(declare-fun e!62878 () Bool)

(assert (=> b!96436 (= res!48674 (not e!62878))))

(declare-fun res!48671 () Bool)

(assert (=> b!96436 (=> (not res!48671) (not e!62878))))

(assert (=> b!96436 (= res!48671 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9772 () Bool)

(assert (=> bm!9772 (= call!9775 (contains!791 lt!48213 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96437 () Bool)

(declare-fun call!9773 () ListLongMap!1507)

(assert (=> b!96437 (= e!62879 call!9773)))

(declare-fun b!96438 () Bool)

(assert (=> b!96438 (= e!62878 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96439 () Bool)

(declare-fun e!62872 () Bool)

(assert (=> b!96439 (= e!62874 e!62872)))

(declare-fun res!48676 () Bool)

(assert (=> b!96439 (= res!48676 call!9775)))

(assert (=> b!96439 (=> (not res!48676) (not e!62872))))

(declare-fun b!96440 () Bool)

(assert (=> b!96440 (= e!62871 e!62883)))

(declare-fun res!48672 () Bool)

(assert (=> b!96440 (=> (not res!48672) (not e!62883))))

(assert (=> b!96440 (= res!48672 (contains!791 lt!48213 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96440 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96441 () Bool)

(declare-fun e!62882 () ListLongMap!1507)

(assert (=> b!96441 (= e!62882 call!9773)))

(declare-fun b!96442 () Bool)

(declare-fun e!62881 () Bool)

(assert (=> b!96442 (= e!62881 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96443 () Bool)

(declare-fun res!48675 () Bool)

(assert (=> b!96443 (=> (not res!48675) (not e!62873))))

(assert (=> b!96443 (= res!48675 e!62877)))

(declare-fun c!16266 () Bool)

(assert (=> b!96443 (= c!16266 (not (= (bvand lt!47657 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96444 () Bool)

(declare-fun c!16268 () Bool)

(assert (=> b!96444 (= c!16268 (and (not (= (bvand lt!47657 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!47657 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96444 (= e!62879 e!62882)))

(declare-fun bm!9773 () Bool)

(assert (=> bm!9773 (= call!9773 call!9776)))

(declare-fun b!96445 () Bool)

(assert (=> b!96445 (= e!62872 (= (apply!91 lt!48213 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96446 () Bool)

(declare-fun call!9779 () ListLongMap!1507)

(assert (=> b!96446 (= e!62882 call!9779)))

(declare-fun b!96429 () Bool)

(assert (=> b!96429 (= e!62880 (= (apply!91 lt!48213 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25523 () Bool)

(assert (=> d!25523 e!62873))

(declare-fun res!48668 () Bool)

(assert (=> d!25523 (=> (not res!48668) (not e!62873))))

(assert (=> d!25523 (= res!48668 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!48199 () ListLongMap!1507)

(assert (=> d!25523 (= lt!48213 lt!48199)))

(declare-fun lt!48196 () Unit!2865)

(assert (=> d!25523 (= lt!48196 e!62876)))

(declare-fun c!16265 () Bool)

(assert (=> d!25523 (= c!16265 e!62881)))

(declare-fun res!48670 () Bool)

(assert (=> d!25523 (=> (not res!48670) (not e!62881))))

(assert (=> d!25523 (= res!48670 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25523 (= lt!48199 e!62875)))

(declare-fun c!16264 () Bool)

(assert (=> d!25523 (= c!16264 (and (not (= (bvand lt!47657 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!47657 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25523 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25523 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48213)))

(declare-fun bm!9774 () Bool)

(assert (=> bm!9774 (= call!9776 (+!127 (ite c!16264 call!9774 (ite c!16267 call!9777 call!9779)) (ite (or c!16264 c!16267) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9775 () Bool)

(assert (=> bm!9775 (= call!9778 (contains!791 lt!48213 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9776 () Bool)

(assert (=> bm!9776 (= call!9779 call!9777)))

(assert (= (and d!25523 c!16264) b!96428))

(assert (= (and d!25523 (not c!16264)) b!96433))

(assert (= (and b!96433 c!16267) b!96437))

(assert (= (and b!96433 (not c!16267)) b!96444))

(assert (= (and b!96444 c!16268) b!96441))

(assert (= (and b!96444 (not c!16268)) b!96446))

(assert (= (or b!96441 b!96446) bm!9776))

(assert (= (or b!96437 bm!9776) bm!9771))

(assert (= (or b!96437 b!96441) bm!9773))

(assert (= (or b!96428 bm!9771) bm!9770))

(assert (= (or b!96428 bm!9773) bm!9774))

(assert (= (and d!25523 res!48670) b!96442))

(assert (= (and d!25523 c!16265) b!96427))

(assert (= (and d!25523 (not c!16265)) b!96426))

(assert (= (and d!25523 res!48668) b!96436))

(assert (= (and b!96436 res!48671) b!96438))

(assert (= (and b!96436 (not res!48674)) b!96440))

(assert (= (and b!96440 res!48672) b!96432))

(assert (= (and b!96436 res!48673) b!96443))

(assert (= (and b!96443 c!16266) b!96435))

(assert (= (and b!96443 (not c!16266)) b!96430))

(assert (= (and b!96435 res!48669) b!96429))

(assert (= (or b!96435 b!96430) bm!9775))

(assert (= (and b!96443 res!48675) b!96431))

(assert (= (and b!96431 c!16263) b!96439))

(assert (= (and b!96431 (not c!16263)) b!96434))

(assert (= (and b!96439 res!48676) b!96445))

(assert (= (or b!96439 b!96434) bm!9772))

(declare-fun b_lambda!4263 () Bool)

(assert (=> (not b_lambda!4263) (not b!96432)))

(assert (=> b!96432 t!5505))

(declare-fun b_and!5893 () Bool)

(assert (= b_and!5889 (and (=> t!5505 result!3225) b_and!5893)))

(assert (=> b!96432 t!5507))

(declare-fun b_and!5895 () Bool)

(assert (= b_and!5891 (and (=> t!5507 result!3227) b_and!5895)))

(declare-fun m!104845 () Bool)

(assert (=> bm!9772 m!104845))

(declare-fun m!104847 () Bool)

(assert (=> b!96445 m!104847))

(assert (=> b!96440 m!103867))

(assert (=> b!96440 m!103867))

(declare-fun m!104849 () Bool)

(assert (=> b!96440 m!104849))

(declare-fun m!104851 () Bool)

(assert (=> b!96428 m!104851))

(assert (=> d!25523 m!103855))

(assert (=> b!96432 m!103867))

(declare-fun m!104853 () Bool)

(assert (=> b!96432 m!104853))

(assert (=> b!96432 m!103989))

(assert (=> b!96432 m!103867))

(assert (=> b!96432 m!103991))

(assert (=> b!96432 m!103989))

(assert (=> b!96432 m!103993))

(assert (=> b!96432 m!103991))

(declare-fun m!104855 () Bool)

(assert (=> bm!9774 m!104855))

(declare-fun m!104857 () Bool)

(assert (=> bm!9775 m!104857))

(declare-fun m!104859 () Bool)

(assert (=> b!96427 m!104859))

(declare-fun m!104861 () Bool)

(assert (=> b!96427 m!104861))

(declare-fun m!104863 () Bool)

(assert (=> b!96427 m!104863))

(declare-fun m!104865 () Bool)

(assert (=> b!96427 m!104865))

(assert (=> b!96427 m!103491))

(declare-fun m!104867 () Bool)

(assert (=> b!96427 m!104867))

(declare-fun m!104869 () Bool)

(assert (=> b!96427 m!104869))

(declare-fun m!104871 () Bool)

(assert (=> b!96427 m!104871))

(declare-fun m!104873 () Bool)

(assert (=> b!96427 m!104873))

(declare-fun m!104875 () Bool)

(assert (=> b!96427 m!104875))

(declare-fun m!104877 () Bool)

(assert (=> b!96427 m!104877))

(assert (=> b!96427 m!104875))

(declare-fun m!104879 () Bool)

(assert (=> b!96427 m!104879))

(declare-fun m!104881 () Bool)

(assert (=> b!96427 m!104881))

(declare-fun m!104883 () Bool)

(assert (=> b!96427 m!104883))

(assert (=> b!96427 m!104881))

(assert (=> b!96427 m!104871))

(assert (=> b!96427 m!104859))

(assert (=> b!96427 m!103491))

(declare-fun m!104885 () Bool)

(assert (=> b!96427 m!104885))

(assert (=> b!96427 m!103491))

(declare-fun m!104887 () Bool)

(assert (=> b!96427 m!104887))

(assert (=> b!96427 m!103867))

(declare-fun m!104889 () Bool)

(assert (=> b!96427 m!104889))

(assert (=> b!96438 m!103867))

(assert (=> b!96438 m!103867))

(assert (=> b!96438 m!103869))

(assert (=> bm!9770 m!103491))

(assert (=> bm!9770 m!104885))

(assert (=> b!96442 m!103867))

(assert (=> b!96442 m!103867))

(assert (=> b!96442 m!103869))

(declare-fun m!104891 () Bool)

(assert (=> b!96429 m!104891))

(assert (=> d!25267 d!25523))

(assert (=> d!25267 d!25423))

(declare-fun d!25525 () Bool)

(assert (=> d!25525 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25525 true))

(declare-fun _$8!82 () Unit!2865)

(assert (=> d!25525 (= (choose!583 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) lt!47657 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) _$8!82)))

(declare-fun bs!3971 () Bool)

(assert (= bs!3971 d!25525))

(assert (=> bs!3971 m!103619))

(assert (=> bs!3971 m!103619))

(assert (=> bs!3971 m!103861))

(assert (=> bs!3971 m!103491))

(assert (=> bs!3971 m!103859))

(assert (=> d!25267 d!25525))

(declare-fun d!25527 () Bool)

(assert (=> d!25527 (= (apply!91 (+!127 lt!47725 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47711) (apply!91 lt!47725 lt!47711))))

(assert (=> d!25527 true))

(declare-fun _$34!855 () Unit!2865)

(assert (=> d!25527 (= (choose!581 lt!47725 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47711) _$34!855)))

(declare-fun bs!3972 () Bool)

(assert (= bs!3972 d!25527))

(assert (=> bs!3972 m!103713))

(assert (=> bs!3972 m!103713))

(assert (=> bs!3972 m!103715))

(assert (=> bs!3972 m!103697))

(assert (=> d!25251 d!25527))

(assert (=> d!25251 d!25233))

(declare-fun d!25529 () Bool)

(declare-fun e!62884 () Bool)

(assert (=> d!25529 e!62884))

(declare-fun res!48677 () Bool)

(assert (=> d!25529 (=> res!48677 e!62884)))

(declare-fun lt!48215 () Bool)

(assert (=> d!25529 (= res!48677 (not lt!48215))))

(declare-fun lt!48216 () Bool)

(assert (=> d!25529 (= lt!48215 lt!48216)))

(declare-fun lt!48217 () Unit!2865)

(declare-fun e!62885 () Unit!2865)

(assert (=> d!25529 (= lt!48217 e!62885)))

(declare-fun c!16269 () Bool)

(assert (=> d!25529 (= c!16269 lt!48216)))

(assert (=> d!25529 (= lt!48216 (containsKey!151 (toList!769 lt!47725) lt!47711))))

(assert (=> d!25529 (= (contains!791 lt!47725 lt!47711) lt!48215)))

(declare-fun b!96448 () Bool)

(declare-fun lt!48214 () Unit!2865)

(assert (=> b!96448 (= e!62885 lt!48214)))

(assert (=> b!96448 (= lt!48214 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47725) lt!47711))))

(assert (=> b!96448 (isDefined!101 (getValueByKey!147 (toList!769 lt!47725) lt!47711))))

(declare-fun b!96449 () Bool)

(declare-fun Unit!2899 () Unit!2865)

(assert (=> b!96449 (= e!62885 Unit!2899)))

(declare-fun b!96450 () Bool)

(assert (=> b!96450 (= e!62884 (isDefined!101 (getValueByKey!147 (toList!769 lt!47725) lt!47711)))))

(assert (= (and d!25529 c!16269) b!96448))

(assert (= (and d!25529 (not c!16269)) b!96449))

(assert (= (and d!25529 (not res!48677)) b!96450))

(declare-fun m!104893 () Bool)

(assert (=> d!25529 m!104893))

(declare-fun m!104895 () Bool)

(assert (=> b!96448 m!104895))

(assert (=> b!96448 m!103807))

(assert (=> b!96448 m!103807))

(declare-fun m!104897 () Bool)

(assert (=> b!96448 m!104897))

(assert (=> b!96450 m!103807))

(assert (=> b!96450 m!103807))

(assert (=> b!96450 m!104897))

(assert (=> d!25251 d!25529))

(assert (=> d!25251 d!25239))

(assert (=> d!25251 d!25247))

(assert (=> bm!9740 d!25271))

(declare-fun d!25531 () Bool)

(declare-fun res!48678 () Bool)

(declare-fun e!62886 () Bool)

(assert (=> d!25531 (=> res!48678 e!62886)))

(assert (=> d!25531 (= res!48678 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47716)))))

(assert (=> d!25531 (= (containsKey!151 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716) e!62886)))

(declare-fun b!96451 () Bool)

(declare-fun e!62887 () Bool)

(assert (=> b!96451 (= e!62886 e!62887)))

(declare-fun res!48679 () Bool)

(assert (=> b!96451 (=> (not res!48679) (not e!62887))))

(assert (=> b!96451 (= res!48679 (and (or (not ((_ is Cons!1576) (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) (bvsle (_1!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47716)) ((_ is Cons!1576) (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (bvslt (_1!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47716)))))

(declare-fun b!96452 () Bool)

(assert (=> b!96452 (= e!62887 (containsKey!151 (t!5493 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!47716))))

(assert (= (and d!25531 (not res!48678)) b!96451))

(assert (= (and b!96451 res!48679) b!96452))

(declare-fun m!104899 () Bool)

(assert (=> b!96452 m!104899))

(assert (=> d!25243 d!25531))

(declare-fun d!25533 () Bool)

(assert (=> d!25533 (= (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47723)) (v!2775 (getValueByKey!147 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47723)))))

(assert (=> d!25245 d!25533))

(declare-fun b!96454 () Bool)

(declare-fun e!62888 () Option!153)

(declare-fun e!62889 () Option!153)

(assert (=> b!96454 (= e!62888 e!62889)))

(declare-fun c!16271 () Bool)

(assert (=> b!96454 (= c!16271 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (not (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47723))))))

(declare-fun b!96455 () Bool)

(assert (=> b!96455 (= e!62889 (getValueByKey!147 (t!5493 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!47723))))

(declare-fun b!96453 () Bool)

(assert (=> b!96453 (= e!62888 (Some!152 (_2!1168 (h!2169 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96456 () Bool)

(assert (=> b!96456 (= e!62889 None!151)))

(declare-fun c!16270 () Bool)

(declare-fun d!25535 () Bool)

(assert (=> d!25535 (= c!16270 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47723)))))

(assert (=> d!25535 (= (getValueByKey!147 (toList!769 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47723) e!62888)))

(assert (= (and d!25535 c!16270) b!96453))

(assert (= (and d!25535 (not c!16270)) b!96454))

(assert (= (and b!96454 c!16271) b!96455))

(assert (= (and b!96454 (not c!16271)) b!96456))

(declare-fun m!104901 () Bool)

(assert (=> b!96455 m!104901))

(assert (=> d!25245 d!25535))

(declare-fun b!96458 () Bool)

(declare-fun e!62890 () Option!153)

(declare-fun e!62891 () Option!153)

(assert (=> b!96458 (= e!62890 e!62891)))

(declare-fun c!16273 () Bool)

(assert (=> b!96458 (= c!16273 (and ((_ is Cons!1576) (toList!769 lt!47903)) (not (= (_1!1168 (h!2169 (toList!769 lt!47903))) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!96459 () Bool)

(assert (=> b!96459 (= e!62891 (getValueByKey!147 (t!5493 (toList!769 lt!47903)) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96457 () Bool)

(assert (=> b!96457 (= e!62890 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47903)))))))

(declare-fun b!96460 () Bool)

(assert (=> b!96460 (= e!62891 None!151)))

(declare-fun d!25537 () Bool)

(declare-fun c!16272 () Bool)

(assert (=> d!25537 (= c!16272 (and ((_ is Cons!1576) (toList!769 lt!47903)) (= (_1!1168 (h!2169 (toList!769 lt!47903))) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25537 (= (getValueByKey!147 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62890)))

(assert (= (and d!25537 c!16272) b!96457))

(assert (= (and d!25537 (not c!16272)) b!96458))

(assert (= (and b!96458 c!16273) b!96459))

(assert (= (and b!96458 (not c!16273)) b!96460))

(declare-fun m!104903 () Bool)

(assert (=> b!96459 m!104903))

(assert (=> b!95978 d!25537))

(declare-fun d!25539 () Bool)

(assert (=> d!25539 (= (apply!91 lt!48000 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (getValueByKey!147 (toList!769 lt!48000) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3973 () Bool)

(assert (= bs!3973 d!25539))

(assert (=> bs!3973 m!103867))

(declare-fun m!104905 () Bool)

(assert (=> bs!3973 m!104905))

(assert (=> bs!3973 m!104905))

(declare-fun m!104907 () Bool)

(assert (=> bs!3973 m!104907))

(assert (=> b!96100 d!25539))

(declare-fun d!25541 () Bool)

(declare-fun c!16274 () Bool)

(assert (=> d!25541 (= c!16274 ((_ is ValueCellFull!965) (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000)))))

(declare-fun e!62892 () V!3137)

(assert (=> d!25541 (= (get!1275 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62892)))

(declare-fun b!96461 () Bool)

(assert (=> b!96461 (= e!62892 (get!1276 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96462 () Bool)

(assert (=> b!96462 (= e!62892 (get!1277 (select (arr!1991 (ite c!16079 (_values!2439 newMap!16) lt!47652)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25541 c!16274) b!96461))

(assert (= (and d!25541 (not c!16274)) b!96462))

(assert (=> b!96461 m!104167))

(assert (=> b!96461 m!103989))

(declare-fun m!104909 () Bool)

(assert (=> b!96461 m!104909))

(assert (=> b!96462 m!104167))

(assert (=> b!96462 m!103989))

(declare-fun m!104911 () Bool)

(assert (=> b!96462 m!104911))

(assert (=> b!96100 d!25541))

(declare-fun d!25543 () Bool)

(assert (=> d!25543 (= (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47715)) (v!2775 (getValueByKey!147 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47715)))))

(assert (=> d!25237 d!25543))

(declare-fun b!96464 () Bool)

(declare-fun e!62893 () Option!153)

(declare-fun e!62894 () Option!153)

(assert (=> b!96464 (= e!62893 e!62894)))

(declare-fun c!16276 () Bool)

(assert (=> b!96464 (= c!16276 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (not (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47715))))))

(declare-fun b!96465 () Bool)

(assert (=> b!96465 (= e!62894 (getValueByKey!147 (t!5493 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!47715))))

(declare-fun b!96463 () Bool)

(assert (=> b!96463 (= e!62893 (Some!152 (_2!1168 (h!2169 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96466 () Bool)

(assert (=> b!96466 (= e!62894 None!151)))

(declare-fun c!16275 () Bool)

(declare-fun d!25545 () Bool)

(assert (=> d!25545 (= c!16275 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47715)))))

(assert (=> d!25545 (= (getValueByKey!147 (toList!769 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47715) e!62893)))

(assert (= (and d!25545 c!16275) b!96463))

(assert (= (and d!25545 (not c!16275)) b!96464))

(assert (= (and b!96464 c!16276) b!96465))

(assert (= (and b!96464 (not c!16276)) b!96466))

(declare-fun m!104913 () Bool)

(assert (=> b!96465 m!104913))

(assert (=> d!25237 d!25545))

(assert (=> b!95963 d!25275))

(assert (=> d!25315 d!25205))

(declare-fun d!25547 () Bool)

(declare-fun res!48680 () Bool)

(declare-fun e!62895 () Bool)

(assert (=> d!25547 (=> res!48680 e!62895)))

(assert (=> d!25547 (= res!48680 (and ((_ is Cons!1576) (toList!769 call!9656)) (= (_1!1168 (h!2169 (toList!769 call!9656))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))))

(assert (=> d!25547 (= (containsKey!151 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))) e!62895)))

(declare-fun b!96467 () Bool)

(declare-fun e!62896 () Bool)

(assert (=> b!96467 (= e!62895 e!62896)))

(declare-fun res!48681 () Bool)

(assert (=> b!96467 (=> (not res!48681) (not e!62896))))

(assert (=> b!96467 (= res!48681 (and (or (not ((_ is Cons!1576) (toList!769 call!9656))) (bvsle (_1!1168 (h!2169 (toList!769 call!9656))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))) ((_ is Cons!1576) (toList!769 call!9656)) (bvslt (_1!1168 (h!2169 (toList!769 call!9656))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))))

(declare-fun b!96468 () Bool)

(assert (=> b!96468 (= e!62896 (containsKey!151 (t!5493 (toList!769 call!9656)) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (= (and d!25547 (not res!48680)) b!96467))

(assert (= (and b!96467 res!48681) b!96468))

(assert (=> b!96468 m!103633))

(declare-fun m!104915 () Bool)

(assert (=> b!96468 m!104915))

(assert (=> d!25347 d!25547))

(declare-fun d!25549 () Bool)

(assert (=> d!25549 (= (apply!91 (+!127 lt!47928 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) lt!47913) (apply!91 lt!47928 lt!47913))))

(declare-fun lt!48218 () Unit!2865)

(assert (=> d!25549 (= lt!48218 (choose!581 lt!47928 lt!47922 (zeroValue!2341 newMap!16) lt!47913))))

(declare-fun e!62897 () Bool)

(assert (=> d!25549 e!62897))

(declare-fun res!48682 () Bool)

(assert (=> d!25549 (=> (not res!48682) (not e!62897))))

(assert (=> d!25549 (= res!48682 (contains!791 lt!47928 lt!47913))))

(assert (=> d!25549 (= (addApplyDifferent!67 lt!47928 lt!47922 (zeroValue!2341 newMap!16) lt!47913) lt!48218)))

(declare-fun b!96469 () Bool)

(assert (=> b!96469 (= e!62897 (not (= lt!47913 lt!47922)))))

(assert (= (and d!25549 res!48682) b!96469))

(assert (=> d!25549 m!104011))

(assert (=> d!25549 m!104013))

(declare-fun m!104917 () Bool)

(assert (=> d!25549 m!104917))

(declare-fun m!104919 () Bool)

(assert (=> d!25549 m!104919))

(assert (=> d!25549 m!104011))

(assert (=> d!25549 m!104009))

(assert (=> b!95987 d!25549))

(declare-fun d!25551 () Bool)

(assert (=> d!25551 (contains!791 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) lt!47914)))

(declare-fun lt!48219 () Unit!2865)

(assert (=> d!25551 (= lt!48219 (choose!582 lt!47920 lt!47927 (zeroValue!2341 newMap!16) lt!47914))))

(assert (=> d!25551 (contains!791 lt!47920 lt!47914)))

(assert (=> d!25551 (= (addStillContains!67 lt!47920 lt!47927 (zeroValue!2341 newMap!16) lt!47914) lt!48219)))

(declare-fun bs!3974 () Bool)

(assert (= bs!3974 d!25551))

(assert (=> bs!3974 m!103999))

(assert (=> bs!3974 m!103999))

(assert (=> bs!3974 m!104001))

(declare-fun m!104921 () Bool)

(assert (=> bs!3974 m!104921))

(declare-fun m!104923 () Bool)

(assert (=> bs!3974 m!104923))

(assert (=> b!95987 d!25551))

(declare-fun d!25553 () Bool)

(assert (=> d!25553 (= (apply!91 (+!127 lt!47923 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) lt!47909) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47923 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))) lt!47909)))))

(declare-fun bs!3975 () Bool)

(assert (= bs!3975 d!25553))

(declare-fun m!104925 () Bool)

(assert (=> bs!3975 m!104925))

(assert (=> bs!3975 m!104925))

(declare-fun m!104927 () Bool)

(assert (=> bs!3975 m!104927))

(assert (=> b!95987 d!25553))

(declare-fun d!25555 () Bool)

(assert (=> d!25555 (= (apply!91 (+!127 lt!47919 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) lt!47921) (apply!91 lt!47919 lt!47921))))

(declare-fun lt!48220 () Unit!2865)

(assert (=> d!25555 (= lt!48220 (choose!581 lt!47919 lt!47916 (minValue!2341 newMap!16) lt!47921))))

(declare-fun e!62898 () Bool)

(assert (=> d!25555 e!62898))

(declare-fun res!48683 () Bool)

(assert (=> d!25555 (=> (not res!48683) (not e!62898))))

(assert (=> d!25555 (= res!48683 (contains!791 lt!47919 lt!47921))))

(assert (=> d!25555 (= (addApplyDifferent!67 lt!47919 lt!47916 (minValue!2341 newMap!16) lt!47921) lt!48220)))

(declare-fun b!96470 () Bool)

(assert (=> b!96470 (= e!62898 (not (= lt!47921 lt!47916)))))

(assert (= (and d!25555 res!48683) b!96470))

(assert (=> d!25555 m!104015))

(assert (=> d!25555 m!104017))

(declare-fun m!104929 () Bool)

(assert (=> d!25555 m!104929))

(declare-fun m!104931 () Bool)

(assert (=> d!25555 m!104931))

(assert (=> d!25555 m!104015))

(assert (=> d!25555 m!104003))

(assert (=> b!95987 d!25555))

(declare-fun d!25557 () Bool)

(assert (=> d!25557 (= (apply!91 (+!127 lt!47923 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) lt!47909) (apply!91 lt!47923 lt!47909))))

(declare-fun lt!48221 () Unit!2865)

(assert (=> d!25557 (= lt!48221 (choose!581 lt!47923 lt!47908 (minValue!2341 newMap!16) lt!47909))))

(declare-fun e!62899 () Bool)

(assert (=> d!25557 e!62899))

(declare-fun res!48684 () Bool)

(assert (=> d!25557 (=> (not res!48684) (not e!62899))))

(assert (=> d!25557 (= res!48684 (contains!791 lt!47923 lt!47909))))

(assert (=> d!25557 (= (addApplyDifferent!67 lt!47923 lt!47908 (minValue!2341 newMap!16) lt!47909) lt!48221)))

(declare-fun b!96471 () Bool)

(assert (=> b!96471 (= e!62899 (not (= lt!47909 lt!47908)))))

(assert (= (and d!25557 res!48684) b!96471))

(assert (=> d!25557 m!104021))

(assert (=> d!25557 m!104023))

(declare-fun m!104933 () Bool)

(assert (=> d!25557 m!104933))

(declare-fun m!104935 () Bool)

(assert (=> d!25557 m!104935))

(assert (=> d!25557 m!104021))

(assert (=> d!25557 m!104005))

(assert (=> b!95987 d!25557))

(declare-fun d!25559 () Bool)

(assert (=> d!25559 (= (apply!91 (+!127 lt!47919 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) lt!47921) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47919 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))) lt!47921)))))

(declare-fun bs!3976 () Bool)

(assert (= bs!3976 d!25559))

(declare-fun m!104937 () Bool)

(assert (=> bs!3976 m!104937))

(assert (=> bs!3976 m!104937))

(declare-fun m!104939 () Bool)

(assert (=> bs!3976 m!104939))

(assert (=> b!95987 d!25559))

(declare-fun d!25561 () Bool)

(assert (=> d!25561 (= (apply!91 (+!127 lt!47928 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) lt!47913) (get!1278 (getValueByKey!147 (toList!769 (+!127 lt!47928 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))) lt!47913)))))

(declare-fun bs!3977 () Bool)

(assert (= bs!3977 d!25561))

(declare-fun m!104941 () Bool)

(assert (=> bs!3977 m!104941))

(assert (=> bs!3977 m!104941))

(declare-fun m!104943 () Bool)

(assert (=> bs!3977 m!104943))

(assert (=> b!95987 d!25561))

(declare-fun d!25563 () Bool)

(declare-fun e!62900 () Bool)

(assert (=> d!25563 e!62900))

(declare-fun res!48686 () Bool)

(assert (=> d!25563 (=> (not res!48686) (not e!62900))))

(declare-fun lt!48224 () ListLongMap!1507)

(assert (=> d!25563 (= res!48686 (contains!791 lt!48224 (_1!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48222 () List!1580)

(assert (=> d!25563 (= lt!48224 (ListLongMap!1508 lt!48222))))

(declare-fun lt!48223 () Unit!2865)

(declare-fun lt!48225 () Unit!2865)

(assert (=> d!25563 (= lt!48223 lt!48225)))

(assert (=> d!25563 (= (getValueByKey!147 lt!48222 (_1!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25563 (= lt!48225 (lemmaContainsTupThenGetReturnValue!66 lt!48222 (_1!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25563 (= lt!48222 (insertStrictlySorted!69 (toList!769 lt!47928) (_1!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25563 (= (+!127 lt!47928 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))) lt!48224)))

(declare-fun b!96472 () Bool)

(declare-fun res!48685 () Bool)

(assert (=> b!96472 (=> (not res!48685) (not e!62900))))

(assert (=> b!96472 (= res!48685 (= (getValueByKey!147 (toList!769 lt!48224) (_1!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))))))))

(declare-fun b!96473 () Bool)

(assert (=> b!96473 (= e!62900 (contains!793 (toList!769 lt!48224) (tuple2!2315 lt!47922 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25563 res!48686) b!96472))

(assert (= (and b!96472 res!48685) b!96473))

(declare-fun m!104945 () Bool)

(assert (=> d!25563 m!104945))

(declare-fun m!104947 () Bool)

(assert (=> d!25563 m!104947))

(declare-fun m!104949 () Bool)

(assert (=> d!25563 m!104949))

(declare-fun m!104951 () Bool)

(assert (=> d!25563 m!104951))

(declare-fun m!104953 () Bool)

(assert (=> b!96472 m!104953))

(declare-fun m!104955 () Bool)

(assert (=> b!96473 m!104955))

(assert (=> b!95987 d!25563))

(declare-fun d!25565 () Bool)

(assert (=> d!25565 (= (apply!91 lt!47919 lt!47921) (get!1278 (getValueByKey!147 (toList!769 lt!47919) lt!47921)))))

(declare-fun bs!3978 () Bool)

(assert (= bs!3978 d!25565))

(declare-fun m!104957 () Bool)

(assert (=> bs!3978 m!104957))

(assert (=> bs!3978 m!104957))

(declare-fun m!104959 () Bool)

(assert (=> bs!3978 m!104959))

(assert (=> b!95987 d!25565))

(declare-fun d!25567 () Bool)

(declare-fun e!62901 () Bool)

(assert (=> d!25567 e!62901))

(declare-fun res!48687 () Bool)

(assert (=> d!25567 (=> res!48687 e!62901)))

(declare-fun lt!48227 () Bool)

(assert (=> d!25567 (= res!48687 (not lt!48227))))

(declare-fun lt!48228 () Bool)

(assert (=> d!25567 (= lt!48227 lt!48228)))

(declare-fun lt!48229 () Unit!2865)

(declare-fun e!62902 () Unit!2865)

(assert (=> d!25567 (= lt!48229 e!62902)))

(declare-fun c!16277 () Bool)

(assert (=> d!25567 (= c!16277 lt!48228)))

(assert (=> d!25567 (= lt!48228 (containsKey!151 (toList!769 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) lt!47914))))

(assert (=> d!25567 (= (contains!791 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) lt!47914) lt!48227)))

(declare-fun b!96474 () Bool)

(declare-fun lt!48226 () Unit!2865)

(assert (=> b!96474 (= e!62902 lt!48226)))

(assert (=> b!96474 (= lt!48226 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) lt!47914))))

(assert (=> b!96474 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) lt!47914))))

(declare-fun b!96475 () Bool)

(declare-fun Unit!2900 () Unit!2865)

(assert (=> b!96475 (= e!62902 Unit!2900)))

(declare-fun b!96476 () Bool)

(assert (=> b!96476 (= e!62901 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) lt!47914)))))

(assert (= (and d!25567 c!16277) b!96474))

(assert (= (and d!25567 (not c!16277)) b!96475))

(assert (= (and d!25567 (not res!48687)) b!96476))

(declare-fun m!104961 () Bool)

(assert (=> d!25567 m!104961))

(declare-fun m!104963 () Bool)

(assert (=> b!96474 m!104963))

(declare-fun m!104965 () Bool)

(assert (=> b!96474 m!104965))

(assert (=> b!96474 m!104965))

(declare-fun m!104967 () Bool)

(assert (=> b!96474 m!104967))

(assert (=> b!96476 m!104965))

(assert (=> b!96476 m!104965))

(assert (=> b!96476 m!104967))

(assert (=> b!95987 d!25567))

(declare-fun d!25569 () Bool)

(declare-fun e!62903 () Bool)

(assert (=> d!25569 e!62903))

(declare-fun res!48689 () Bool)

(assert (=> d!25569 (=> (not res!48689) (not e!62903))))

(declare-fun lt!48232 () ListLongMap!1507)

(assert (=> d!25569 (= res!48689 (contains!791 lt!48232 (_1!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))))))

(declare-fun lt!48230 () List!1580)

(assert (=> d!25569 (= lt!48232 (ListLongMap!1508 lt!48230))))

(declare-fun lt!48231 () Unit!2865)

(declare-fun lt!48233 () Unit!2865)

(assert (=> d!25569 (= lt!48231 lt!48233)))

(assert (=> d!25569 (= (getValueByKey!147 lt!48230 (_1!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))))))

(assert (=> d!25569 (= lt!48233 (lemmaContainsTupThenGetReturnValue!66 lt!48230 (_1!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))))))

(assert (=> d!25569 (= lt!48230 (insertStrictlySorted!69 (toList!769 lt!47919) (_1!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))))))

(assert (=> d!25569 (= (+!127 lt!47919 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))) lt!48232)))

(declare-fun b!96477 () Bool)

(declare-fun res!48688 () Bool)

(assert (=> b!96477 (=> (not res!48688) (not e!62903))))

(assert (=> b!96477 (= res!48688 (= (getValueByKey!147 (toList!769 lt!48232) (_1!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47916 (minValue!2341 newMap!16))))))))

(declare-fun b!96478 () Bool)

(assert (=> b!96478 (= e!62903 (contains!793 (toList!769 lt!48232) (tuple2!2315 lt!47916 (minValue!2341 newMap!16))))))

(assert (= (and d!25569 res!48689) b!96477))

(assert (= (and b!96477 res!48688) b!96478))

(declare-fun m!104969 () Bool)

(assert (=> d!25569 m!104969))

(declare-fun m!104971 () Bool)

(assert (=> d!25569 m!104971))

(declare-fun m!104973 () Bool)

(assert (=> d!25569 m!104973))

(declare-fun m!104975 () Bool)

(assert (=> d!25569 m!104975))

(declare-fun m!104977 () Bool)

(assert (=> b!96477 m!104977))

(declare-fun m!104979 () Bool)

(assert (=> b!96478 m!104979))

(assert (=> b!95987 d!25569))

(declare-fun d!25571 () Bool)

(assert (=> d!25571 (= (apply!91 lt!47928 lt!47913) (get!1278 (getValueByKey!147 (toList!769 lt!47928) lt!47913)))))

(declare-fun bs!3979 () Bool)

(assert (= bs!3979 d!25571))

(declare-fun m!104981 () Bool)

(assert (=> bs!3979 m!104981))

(assert (=> bs!3979 m!104981))

(declare-fun m!104983 () Bool)

(assert (=> bs!3979 m!104983))

(assert (=> b!95987 d!25571))

(declare-fun d!25573 () Bool)

(assert (=> d!25573 (= (apply!91 lt!47923 lt!47909) (get!1278 (getValueByKey!147 (toList!769 lt!47923) lt!47909)))))

(declare-fun bs!3980 () Bool)

(assert (= bs!3980 d!25573))

(declare-fun m!104985 () Bool)

(assert (=> bs!3980 m!104985))

(assert (=> bs!3980 m!104985))

(declare-fun m!104987 () Bool)

(assert (=> bs!3980 m!104987))

(assert (=> b!95987 d!25573))

(declare-fun d!25575 () Bool)

(declare-fun e!62904 () Bool)

(assert (=> d!25575 e!62904))

(declare-fun res!48691 () Bool)

(assert (=> d!25575 (=> (not res!48691) (not e!62904))))

(declare-fun lt!48236 () ListLongMap!1507)

(assert (=> d!25575 (= res!48691 (contains!791 lt!48236 (_1!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))))))

(declare-fun lt!48234 () List!1580)

(assert (=> d!25575 (= lt!48236 (ListLongMap!1508 lt!48234))))

(declare-fun lt!48235 () Unit!2865)

(declare-fun lt!48237 () Unit!2865)

(assert (=> d!25575 (= lt!48235 lt!48237)))

(assert (=> d!25575 (= (getValueByKey!147 lt!48234 (_1!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))))))

(assert (=> d!25575 (= lt!48237 (lemmaContainsTupThenGetReturnValue!66 lt!48234 (_1!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))))))

(assert (=> d!25575 (= lt!48234 (insertStrictlySorted!69 (toList!769 lt!47923) (_1!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))))))

(assert (=> d!25575 (= (+!127 lt!47923 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))) lt!48236)))

(declare-fun b!96479 () Bool)

(declare-fun res!48690 () Bool)

(assert (=> b!96479 (=> (not res!48690) (not e!62904))))

(assert (=> b!96479 (= res!48690 (= (getValueByKey!147 (toList!769 lt!48236) (_1!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47908 (minValue!2341 newMap!16))))))))

(declare-fun b!96480 () Bool)

(assert (=> b!96480 (= e!62904 (contains!793 (toList!769 lt!48236) (tuple2!2315 lt!47908 (minValue!2341 newMap!16))))))

(assert (= (and d!25575 res!48691) b!96479))

(assert (= (and b!96479 res!48690) b!96480))

(declare-fun m!104989 () Bool)

(assert (=> d!25575 m!104989))

(declare-fun m!104991 () Bool)

(assert (=> d!25575 m!104991))

(declare-fun m!104993 () Bool)

(assert (=> d!25575 m!104993))

(declare-fun m!104995 () Bool)

(assert (=> d!25575 m!104995))

(declare-fun m!104997 () Bool)

(assert (=> b!96479 m!104997))

(declare-fun m!104999 () Bool)

(assert (=> b!96480 m!104999))

(assert (=> b!95987 d!25575))

(declare-fun b!96481 () Bool)

(declare-fun res!48693 () Bool)

(declare-fun e!62908 () Bool)

(assert (=> b!96481 (=> (not res!48693) (not e!62908))))

(declare-fun lt!48244 () ListLongMap!1507)

(assert (=> b!96481 (= res!48693 (not (contains!791 lt!48244 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96482 () Bool)

(declare-fun e!62911 () Bool)

(declare-fun e!62910 () Bool)

(assert (=> b!96482 (= e!62911 e!62910)))

(declare-fun c!16280 () Bool)

(assert (=> b!96482 (= c!16280 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9777 () Bool)

(declare-fun call!9780 () ListLongMap!1507)

(assert (=> bm!9777 (= call!9780 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun b!96483 () Bool)

(declare-fun e!62907 () ListLongMap!1507)

(declare-fun e!62909 () ListLongMap!1507)

(assert (=> b!96483 (= e!62907 e!62909)))

(declare-fun c!16278 () Bool)

(assert (=> b!96483 (= c!16278 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96484 () Bool)

(declare-fun lt!48238 () Unit!2865)

(declare-fun lt!48241 () Unit!2865)

(assert (=> b!96484 (= lt!48238 lt!48241)))

(declare-fun lt!48240 () (_ BitVec 64))

(declare-fun lt!48242 () ListLongMap!1507)

(declare-fun lt!48239 () V!3137)

(declare-fun lt!48243 () (_ BitVec 64))

(assert (=> b!96484 (not (contains!791 (+!127 lt!48242 (tuple2!2315 lt!48240 lt!48239)) lt!48243))))

(assert (=> b!96484 (= lt!48241 (addStillNotContains!40 lt!48242 lt!48240 lt!48239 lt!48243))))

(assert (=> b!96484 (= lt!48243 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96484 (= lt!48239 (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96484 (= lt!48240 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96484 (= lt!48242 call!9780)))

(assert (=> b!96484 (= e!62909 (+!127 call!9780 (tuple2!2315 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96485 () Bool)

(declare-fun e!62906 () Bool)

(assert (=> b!96485 (= e!62911 e!62906)))

(assert (=> b!96485 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48692 () Bool)

(assert (=> b!96485 (= res!48692 (contains!791 lt!48244 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96485 (=> (not res!48692) (not e!62906))))

(declare-fun b!96486 () Bool)

(declare-fun e!62905 () Bool)

(assert (=> b!96486 (= e!62905 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96486 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!25577 () Bool)

(assert (=> d!25577 e!62908))

(declare-fun res!48694 () Bool)

(assert (=> d!25577 (=> (not res!48694) (not e!62908))))

(assert (=> d!25577 (= res!48694 (not (contains!791 lt!48244 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25577 (= lt!48244 e!62907)))

(declare-fun c!16279 () Bool)

(assert (=> d!25577 (= c!16279 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25577 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25577 (= (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48244)))

(declare-fun b!96487 () Bool)

(assert (=> b!96487 (= e!62910 (= lt!48244 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96488 () Bool)

(assert (=> b!96488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> b!96488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (_values!2439 newMap!16))))))

(assert (=> b!96488 (= e!62906 (= (apply!91 lt!48244 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96489 () Bool)

(assert (=> b!96489 (= e!62909 call!9780)))

(declare-fun b!96490 () Bool)

(assert (=> b!96490 (= e!62907 (ListLongMap!1508 Nil!1577))))

(declare-fun b!96491 () Bool)

(assert (=> b!96491 (= e!62910 (isEmpty!357 lt!48244))))

(declare-fun b!96492 () Bool)

(assert (=> b!96492 (= e!62908 e!62911)))

(declare-fun c!16281 () Bool)

(assert (=> b!96492 (= c!16281 e!62905)))

(declare-fun res!48695 () Bool)

(assert (=> b!96492 (=> (not res!48695) (not e!62905))))

(assert (=> b!96492 (= res!48695 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (= (and d!25577 c!16279) b!96490))

(assert (= (and d!25577 (not c!16279)) b!96483))

(assert (= (and b!96483 c!16278) b!96484))

(assert (= (and b!96483 (not c!16278)) b!96489))

(assert (= (or b!96484 b!96489) bm!9777))

(assert (= (and d!25577 res!48694) b!96481))

(assert (= (and b!96481 res!48693) b!96492))

(assert (= (and b!96492 res!48695) b!96486))

(assert (= (and b!96492 c!16281) b!96485))

(assert (= (and b!96492 (not c!16281)) b!96482))

(assert (= (and b!96485 res!48692) b!96488))

(assert (= (and b!96482 c!16280) b!96487))

(assert (= (and b!96482 (not c!16280)) b!96491))

(declare-fun b_lambda!4265 () Bool)

(assert (=> (not b_lambda!4265) (not b!96484)))

(assert (=> b!96484 t!5505))

(declare-fun b_and!5897 () Bool)

(assert (= b_and!5893 (and (=> t!5505 result!3225) b_and!5897)))

(assert (=> b!96484 t!5507))

(declare-fun b_and!5899 () Bool)

(assert (= b_and!5895 (and (=> t!5507 result!3227) b_and!5899)))

(declare-fun b_lambda!4267 () Bool)

(assert (=> (not b_lambda!4267) (not b!96488)))

(assert (=> b!96488 t!5505))

(declare-fun b_and!5901 () Bool)

(assert (= b_and!5897 (and (=> t!5505 result!3225) b_and!5901)))

(assert (=> b!96488 t!5507))

(declare-fun b_and!5903 () Bool)

(assert (= b_and!5899 (and (=> t!5507 result!3227) b_and!5903)))

(declare-fun m!105001 () Bool)

(assert (=> bm!9777 m!105001))

(declare-fun m!105003 () Bool)

(assert (=> d!25577 m!105003))

(assert (=> d!25577 m!103855))

(declare-fun m!105005 () Bool)

(assert (=> b!96491 m!105005))

(assert (=> b!96485 m!103867))

(assert (=> b!96485 m!103867))

(declare-fun m!105007 () Bool)

(assert (=> b!96485 m!105007))

(assert (=> b!96483 m!103867))

(assert (=> b!96483 m!103867))

(assert (=> b!96483 m!103869))

(assert (=> b!96488 m!103991))

(assert (=> b!96488 m!103867))

(declare-fun m!105009 () Bool)

(assert (=> b!96488 m!105009))

(assert (=> b!96488 m!103991))

(assert (=> b!96488 m!103989))

(assert (=> b!96488 m!103993))

(assert (=> b!96488 m!103989))

(assert (=> b!96488 m!103867))

(assert (=> b!96484 m!103991))

(declare-fun m!105011 () Bool)

(assert (=> b!96484 m!105011))

(assert (=> b!96484 m!103991))

(assert (=> b!96484 m!103989))

(assert (=> b!96484 m!103993))

(assert (=> b!96484 m!103989))

(declare-fun m!105013 () Bool)

(assert (=> b!96484 m!105013))

(assert (=> b!96484 m!103867))

(declare-fun m!105015 () Bool)

(assert (=> b!96484 m!105015))

(assert (=> b!96484 m!105013))

(declare-fun m!105017 () Bool)

(assert (=> b!96484 m!105017))

(declare-fun m!105019 () Bool)

(assert (=> b!96481 m!105019))

(assert (=> b!96487 m!105001))

(assert (=> b!96486 m!103867))

(assert (=> b!96486 m!103867))

(assert (=> b!96486 m!103869))

(assert (=> b!95987 d!25577))

(declare-fun d!25579 () Bool)

(declare-fun e!62912 () Bool)

(assert (=> d!25579 e!62912))

(declare-fun res!48697 () Bool)

(assert (=> d!25579 (=> (not res!48697) (not e!62912))))

(declare-fun lt!48247 () ListLongMap!1507)

(assert (=> d!25579 (= res!48697 (contains!791 lt!48247 (_1!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48245 () List!1580)

(assert (=> d!25579 (= lt!48247 (ListLongMap!1508 lt!48245))))

(declare-fun lt!48246 () Unit!2865)

(declare-fun lt!48248 () Unit!2865)

(assert (=> d!25579 (= lt!48246 lt!48248)))

(assert (=> d!25579 (= (getValueByKey!147 lt!48245 (_1!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25579 (= lt!48248 (lemmaContainsTupThenGetReturnValue!66 lt!48245 (_1!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25579 (= lt!48245 (insertStrictlySorted!69 (toList!769 lt!47920) (_1!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) (_2!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25579 (= (+!127 lt!47920 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))) lt!48247)))

(declare-fun b!96493 () Bool)

(declare-fun res!48696 () Bool)

(assert (=> b!96493 (=> (not res!48696) (not e!62912))))

(assert (=> b!96493 (= res!48696 (= (getValueByKey!147 (toList!769 lt!48247) (_1!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))))))))

(declare-fun b!96494 () Bool)

(assert (=> b!96494 (= e!62912 (contains!793 (toList!769 lt!48247) (tuple2!2315 lt!47927 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25579 res!48697) b!96493))

(assert (= (and b!96493 res!48696) b!96494))

(declare-fun m!105021 () Bool)

(assert (=> d!25579 m!105021))

(declare-fun m!105023 () Bool)

(assert (=> d!25579 m!105023))

(declare-fun m!105025 () Bool)

(assert (=> d!25579 m!105025))

(declare-fun m!105027 () Bool)

(assert (=> d!25579 m!105027))

(declare-fun m!105029 () Bool)

(assert (=> b!96493 m!105029))

(declare-fun m!105031 () Bool)

(assert (=> b!96494 m!105031))

(assert (=> b!95987 d!25579))

(declare-fun d!25581 () Bool)

(assert (=> d!25581 (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))

(assert (=> d!25581 true))

(declare-fun _$16!114 () Unit!2865)

(assert (=> d!25581 (= (choose!588 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (defaultEntry!2456 newMap!16)) _$16!114)))

(declare-fun bs!3981 () Bool)

(assert (= bs!3981 d!25581))

(assert (=> bs!3981 m!104283))

(assert (=> bs!3981 m!103633))

(assert (=> bs!3981 m!104283))

(assert (=> bs!3981 m!103633))

(assert (=> bs!3981 m!104285))

(assert (=> d!25349 d!25581))

(assert (=> d!25349 d!25423))

(assert (=> bm!9718 d!25491))

(assert (=> d!25241 d!25243))

(assert (=> d!25241 d!25229))

(declare-fun d!25583 () Bool)

(assert (=> d!25583 (contains!791 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47716)))

(assert (=> d!25583 true))

(declare-fun _$35!336 () Unit!2865)

(assert (=> d!25583 (= (choose!582 lt!47722 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47716) _$35!336)))

(declare-fun bs!3982 () Bool)

(assert (= bs!3982 d!25583))

(assert (=> bs!3982 m!103691))

(assert (=> bs!3982 m!103691))

(assert (=> bs!3982 m!103693))

(assert (=> d!25241 d!25583))

(declare-fun d!25585 () Bool)

(declare-fun e!62913 () Bool)

(assert (=> d!25585 e!62913))

(declare-fun res!48698 () Bool)

(assert (=> d!25585 (=> res!48698 e!62913)))

(declare-fun lt!48250 () Bool)

(assert (=> d!25585 (= res!48698 (not lt!48250))))

(declare-fun lt!48251 () Bool)

(assert (=> d!25585 (= lt!48250 lt!48251)))

(declare-fun lt!48252 () Unit!2865)

(declare-fun e!62914 () Unit!2865)

(assert (=> d!25585 (= lt!48252 e!62914)))

(declare-fun c!16282 () Bool)

(assert (=> d!25585 (= c!16282 lt!48251)))

(assert (=> d!25585 (= lt!48251 (containsKey!151 (toList!769 lt!47722) lt!47716))))

(assert (=> d!25585 (= (contains!791 lt!47722 lt!47716) lt!48250)))

(declare-fun b!96496 () Bool)

(declare-fun lt!48249 () Unit!2865)

(assert (=> b!96496 (= e!62914 lt!48249)))

(assert (=> b!96496 (= lt!48249 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47722) lt!47716))))

(assert (=> b!96496 (isDefined!101 (getValueByKey!147 (toList!769 lt!47722) lt!47716))))

(declare-fun b!96497 () Bool)

(declare-fun Unit!2901 () Unit!2865)

(assert (=> b!96497 (= e!62914 Unit!2901)))

(declare-fun b!96498 () Bool)

(assert (=> b!96498 (= e!62913 (isDefined!101 (getValueByKey!147 (toList!769 lt!47722) lt!47716)))))

(assert (= (and d!25585 c!16282) b!96496))

(assert (= (and d!25585 (not c!16282)) b!96497))

(assert (= (and d!25585 (not res!48698)) b!96498))

(declare-fun m!105033 () Bool)

(assert (=> d!25585 m!105033))

(declare-fun m!105035 () Bool)

(assert (=> b!96496 m!105035))

(declare-fun m!105037 () Bool)

(assert (=> b!96496 m!105037))

(assert (=> b!96496 m!105037))

(declare-fun m!105039 () Bool)

(assert (=> b!96496 m!105039))

(assert (=> b!96498 m!105037))

(assert (=> b!96498 m!105037))

(assert (=> b!96498 m!105039))

(assert (=> d!25241 d!25585))

(declare-fun d!25587 () Bool)

(declare-fun e!62915 () Bool)

(assert (=> d!25587 e!62915))

(declare-fun res!48699 () Bool)

(assert (=> d!25587 (=> res!48699 e!62915)))

(declare-fun lt!48254 () Bool)

(assert (=> d!25587 (= res!48699 (not lt!48254))))

(declare-fun lt!48255 () Bool)

(assert (=> d!25587 (= lt!48254 lt!48255)))

(declare-fun lt!48256 () Unit!2865)

(declare-fun e!62916 () Unit!2865)

(assert (=> d!25587 (= lt!48256 e!62916)))

(declare-fun c!16283 () Bool)

(assert (=> d!25587 (= c!16283 lt!48255)))

(assert (=> d!25587 (= lt!48255 (containsKey!151 (toList!769 lt!48000) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25587 (= (contains!791 lt!48000 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) lt!48254)))

(declare-fun b!96499 () Bool)

(declare-fun lt!48253 () Unit!2865)

(assert (=> b!96499 (= e!62916 lt!48253)))

(assert (=> b!96499 (= lt!48253 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!48000) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96499 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96500 () Bool)

(declare-fun Unit!2902 () Unit!2865)

(assert (=> b!96500 (= e!62916 Unit!2902)))

(declare-fun b!96501 () Bool)

(assert (=> b!96501 (= e!62915 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25587 c!16283) b!96499))

(assert (= (and d!25587 (not c!16283)) b!96500))

(assert (= (and d!25587 (not res!48699)) b!96501))

(assert (=> d!25587 m!103867))

(declare-fun m!105041 () Bool)

(assert (=> d!25587 m!105041))

(assert (=> b!96499 m!103867))

(declare-fun m!105043 () Bool)

(assert (=> b!96499 m!105043))

(assert (=> b!96499 m!103867))

(assert (=> b!96499 m!104905))

(assert (=> b!96499 m!104905))

(declare-fun m!105045 () Bool)

(assert (=> b!96499 m!105045))

(assert (=> b!96501 m!103867))

(assert (=> b!96501 m!104905))

(assert (=> b!96501 m!104905))

(assert (=> b!96501 m!105045))

(assert (=> b!96108 d!25587))

(assert (=> b!95882 d!25341))

(declare-fun e!62931 () SeekEntryResult!255)

(declare-fun b!96520 () Bool)

(assert (=> b!96520 (= e!62931 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) #b00000000000000000000000000000000 (mask!6540 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!96521 () Bool)

(assert (=> b!96521 (= e!62931 (Intermediate!255 false (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!96522 () Bool)

(declare-fun lt!48262 () SeekEntryResult!255)

(assert (=> b!96522 (and (bvsge (index!3164 lt!48262) #b00000000000000000000000000000000) (bvslt (index!3164 lt!48262) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun e!62929 () Bool)

(assert (=> b!96522 (= e!62929 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!48262)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96523 () Bool)

(declare-fun e!62930 () Bool)

(declare-fun e!62927 () Bool)

(assert (=> b!96523 (= e!62930 e!62927)))

(declare-fun res!48708 () Bool)

(assert (=> b!96523 (= res!48708 (and ((_ is Intermediate!255) lt!48262) (not (undefined!1067 lt!48262)) (bvslt (x!12802 lt!48262) #b01111111111111111111111111111110) (bvsge (x!12802 lt!48262) #b00000000000000000000000000000000) (bvsge (x!12802 lt!48262) #b00000000000000000000000000000000)))))

(assert (=> b!96523 (=> (not res!48708) (not e!62927))))

(declare-fun b!96524 () Bool)

(assert (=> b!96524 (and (bvsge (index!3164 lt!48262) #b00000000000000000000000000000000) (bvslt (index!3164 lt!48262) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48707 () Bool)

(assert (=> b!96524 (= res!48707 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!48262)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96524 (=> res!48707 e!62929)))

(declare-fun d!25589 () Bool)

(assert (=> d!25589 e!62930))

(declare-fun c!16290 () Bool)

(assert (=> d!25589 (= c!16290 (and ((_ is Intermediate!255) lt!48262) (undefined!1067 lt!48262)))))

(declare-fun e!62928 () SeekEntryResult!255)

(assert (=> d!25589 (= lt!48262 e!62928)))

(declare-fun c!16292 () Bool)

(assert (=> d!25589 (= c!16292 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!48261 () (_ BitVec 64))

(assert (=> d!25589 (= lt!48261 (select (arr!1990 (_keys!4141 newMap!16)) (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16))))))

(assert (=> d!25589 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25589 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)) lt!48262)))

(declare-fun b!96525 () Bool)

(assert (=> b!96525 (= e!62928 (Intermediate!255 true (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!96526 () Bool)

(assert (=> b!96526 (and (bvsge (index!3164 lt!48262) #b00000000000000000000000000000000) (bvslt (index!3164 lt!48262) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun res!48706 () Bool)

(assert (=> b!96526 (= res!48706 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!48262)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!96526 (=> res!48706 e!62929)))

(assert (=> b!96526 (= e!62927 e!62929)))

(declare-fun b!96527 () Bool)

(assert (=> b!96527 (= e!62930 (bvsge (x!12802 lt!48262) #b01111111111111111111111111111110))))

(declare-fun b!96528 () Bool)

(assert (=> b!96528 (= e!62928 e!62931)))

(declare-fun c!16291 () Bool)

(assert (=> b!96528 (= c!16291 (or (= lt!48261 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (= (bvadd lt!48261 lt!48261) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25589 c!16292) b!96525))

(assert (= (and d!25589 (not c!16292)) b!96528))

(assert (= (and b!96528 c!16291) b!96521))

(assert (= (and b!96528 (not c!16291)) b!96520))

(assert (= (and d!25589 c!16290) b!96527))

(assert (= (and d!25589 (not c!16290)) b!96523))

(assert (= (and b!96523 res!48708) b!96526))

(assert (= (and b!96526 (not res!48706)) b!96524))

(assert (= (and b!96524 (not res!48707)) b!96522))

(assert (=> d!25589 m!104107))

(declare-fun m!105047 () Bool)

(assert (=> d!25589 m!105047))

(assert (=> d!25589 m!103855))

(declare-fun m!105049 () Bool)

(assert (=> b!96524 m!105049))

(assert (=> b!96520 m!104107))

(declare-fun m!105051 () Bool)

(assert (=> b!96520 m!105051))

(assert (=> b!96520 m!105051))

(assert (=> b!96520 m!103459))

(declare-fun m!105053 () Bool)

(assert (=> b!96520 m!105053))

(assert (=> b!96522 m!105049))

(assert (=> b!96526 m!105049))

(assert (=> d!25301 d!25589))

(declare-fun d!25591 () Bool)

(declare-fun lt!48268 () (_ BitVec 32))

(declare-fun lt!48267 () (_ BitVec 32))

(assert (=> d!25591 (= lt!48268 (bvmul (bvxor lt!48267 (bvlshr lt!48267 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!25591 (= lt!48267 ((_ extract 31 0) (bvand (bvxor (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvlshr (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!25591 (and (bvsge (mask!6540 newMap!16) #b00000000000000000000000000000000) (let ((res!48709 (let ((h!2172 ((_ extract 31 0) (bvand (bvxor (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvlshr (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12906 (bvmul (bvxor h!2172 (bvlshr h!2172 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12906 (bvlshr x!12906 #b00000000000000000000000000001101)) (mask!6540 newMap!16)))))) (and (bvslt res!48709 (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48709 #b00000000000000000000000000000000))))))

(assert (=> d!25591 (= (toIndex!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (mask!6540 newMap!16)) (bvand (bvxor lt!48268 (bvlshr lt!48268 #b00000000000000000000000000001101)) (mask!6540 newMap!16)))))

(assert (=> d!25301 d!25591))

(assert (=> d!25301 d!25423))

(declare-fun d!25593 () Bool)

(declare-fun e!62932 () Bool)

(assert (=> d!25593 e!62932))

(declare-fun res!48710 () Bool)

(assert (=> d!25593 (=> res!48710 e!62932)))

(declare-fun lt!48270 () Bool)

(assert (=> d!25593 (= res!48710 (not lt!48270))))

(declare-fun lt!48271 () Bool)

(assert (=> d!25593 (= lt!48270 lt!48271)))

(declare-fun lt!48272 () Unit!2865)

(declare-fun e!62933 () Unit!2865)

(assert (=> d!25593 (= lt!48272 e!62933)))

(declare-fun c!16293 () Bool)

(assert (=> d!25593 (= c!16293 lt!48271)))

(assert (=> d!25593 (= lt!48271 (containsKey!151 (toList!769 lt!48000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25593 (= (contains!791 lt!48000 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48270)))

(declare-fun b!96529 () Bool)

(declare-fun lt!48269 () Unit!2865)

(assert (=> b!96529 (= e!62933 lt!48269)))

(assert (=> b!96529 (= lt!48269 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!48000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96529 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96530 () Bool)

(declare-fun Unit!2903 () Unit!2865)

(assert (=> b!96530 (= e!62933 Unit!2903)))

(declare-fun b!96531 () Bool)

(assert (=> b!96531 (= e!62932 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25593 c!16293) b!96529))

(assert (= (and d!25593 (not c!16293)) b!96530))

(assert (= (and d!25593 (not res!48710)) b!96531))

(declare-fun m!105055 () Bool)

(assert (=> d!25593 m!105055))

(declare-fun m!105057 () Bool)

(assert (=> b!96529 m!105057))

(declare-fun m!105059 () Bool)

(assert (=> b!96529 m!105059))

(assert (=> b!96529 m!105059))

(declare-fun m!105061 () Bool)

(assert (=> b!96529 m!105061))

(assert (=> b!96531 m!105059))

(assert (=> b!96531 m!105059))

(assert (=> b!96531 m!105061))

(assert (=> bm!9730 d!25593))

(declare-fun b!96532 () Bool)

(declare-fun res!48712 () Bool)

(declare-fun e!62937 () Bool)

(assert (=> b!96532 (=> (not res!48712) (not e!62937))))

(declare-fun lt!48279 () ListLongMap!1507)

(assert (=> b!96532 (= res!48712 (not (contains!791 lt!48279 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96533 () Bool)

(declare-fun e!62940 () Bool)

(declare-fun e!62939 () Bool)

(assert (=> b!96533 (= e!62940 e!62939)))

(declare-fun c!16296 () Bool)

(assert (=> b!96533 (= c!16296 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun bm!9778 () Bool)

(declare-fun call!9781 () ListLongMap!1507)

(assert (=> bm!9778 (= call!9781 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!96534 () Bool)

(declare-fun e!62936 () ListLongMap!1507)

(declare-fun e!62938 () ListLongMap!1507)

(assert (=> b!96534 (= e!62936 e!62938)))

(declare-fun c!16294 () Bool)

(assert (=> b!96534 (= c!16294 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!96535 () Bool)

(declare-fun lt!48273 () Unit!2865)

(declare-fun lt!48276 () Unit!2865)

(assert (=> b!96535 (= lt!48273 lt!48276)))

(declare-fun lt!48274 () V!3137)

(declare-fun lt!48278 () (_ BitVec 64))

(declare-fun lt!48277 () ListLongMap!1507)

(declare-fun lt!48275 () (_ BitVec 64))

(assert (=> b!96535 (not (contains!791 (+!127 lt!48277 (tuple2!2315 lt!48275 lt!48274)) lt!48278))))

(assert (=> b!96535 (= lt!48276 (addStillNotContains!40 lt!48277 lt!48275 lt!48274 lt!48278))))

(assert (=> b!96535 (= lt!48278 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96535 (= lt!48274 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96535 (= lt!48275 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!96535 (= lt!48277 call!9781)))

(assert (=> b!96535 (= e!62938 (+!127 call!9781 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96536 () Bool)

(declare-fun e!62935 () Bool)

(assert (=> b!96536 (= e!62940 e!62935)))

(assert (=> b!96536 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun res!48711 () Bool)

(assert (=> b!96536 (= res!48711 (contains!791 lt!48279 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!96536 (=> (not res!48711) (not e!62935))))

(declare-fun b!96537 () Bool)

(declare-fun e!62934 () Bool)

(assert (=> b!96537 (= e!62934 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!96537 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!25595 () Bool)

(assert (=> d!25595 e!62937))

(declare-fun res!48713 () Bool)

(assert (=> d!25595 (=> (not res!48713) (not e!62937))))

(assert (=> d!25595 (= res!48713 (not (contains!791 lt!48279 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25595 (= lt!48279 e!62936)))

(declare-fun c!16295 () Bool)

(assert (=> d!25595 (= c!16295 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25595 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992))))))

(assert (=> d!25595 (= (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992)))) lt!48279)))

(declare-fun b!96538 () Bool)

(assert (=> b!96538 (= e!62939 (= lt!48279 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (_values!2439 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992))) (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) (minValue!2341 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96539 () Bool)

(assert (=> b!96539 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> b!96539 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> b!96539 (= e!62935 (= (apply!91 lt!48279 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96540 () Bool)

(assert (=> b!96540 (= e!62938 call!9781)))

(declare-fun b!96541 () Bool)

(assert (=> b!96541 (= e!62936 (ListLongMap!1508 Nil!1577))))

(declare-fun b!96542 () Bool)

(assert (=> b!96542 (= e!62939 (isEmpty!357 lt!48279))))

(declare-fun b!96543 () Bool)

(assert (=> b!96543 (= e!62937 e!62940)))

(declare-fun c!16297 () Bool)

(assert (=> b!96543 (= c!16297 e!62934)))

(declare-fun res!48714 () Bool)

(assert (=> b!96543 (=> (not res!48714) (not e!62934))))

(assert (=> b!96543 (= res!48714 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25595 c!16295) b!96541))

(assert (= (and d!25595 (not c!16295)) b!96534))

(assert (= (and b!96534 c!16294) b!96535))

(assert (= (and b!96534 (not c!16294)) b!96540))

(assert (= (or b!96535 b!96540) bm!9778))

(assert (= (and d!25595 res!48713) b!96532))

(assert (= (and b!96532 res!48712) b!96543))

(assert (= (and b!96543 res!48714) b!96537))

(assert (= (and b!96543 c!16297) b!96536))

(assert (= (and b!96543 (not c!16297)) b!96533))

(assert (= (and b!96536 res!48711) b!96539))

(assert (= (and b!96533 c!16296) b!96538))

(assert (= (and b!96533 (not c!16296)) b!96542))

(declare-fun b_lambda!4269 () Bool)

(assert (=> (not b_lambda!4269) (not b!96535)))

(assert (=> b!96535 t!5490))

(declare-fun b_and!5905 () Bool)

(assert (= b_and!5901 (and (=> t!5490 result!3205) b_and!5905)))

(assert (=> b!96535 t!5492))

(declare-fun b_and!5907 () Bool)

(assert (= b_and!5903 (and (=> t!5492 result!3209) b_and!5907)))

(declare-fun b_lambda!4271 () Bool)

(assert (=> (not b_lambda!4271) (not b!96539)))

(assert (=> b!96539 t!5490))

(declare-fun b_and!5909 () Bool)

(assert (= b_and!5905 (and (=> t!5490 result!3205) b_and!5909)))

(assert (=> b!96539 t!5492))

(declare-fun b_and!5911 () Bool)

(assert (= b_and!5907 (and (=> t!5492 result!3209) b_and!5911)))

(declare-fun m!105063 () Bool)

(assert (=> bm!9778 m!105063))

(declare-fun m!105065 () Bool)

(assert (=> d!25595 m!105065))

(assert (=> d!25595 m!103455))

(declare-fun m!105067 () Bool)

(assert (=> b!96542 m!105067))

(assert (=> b!96536 m!104253))

(assert (=> b!96536 m!104253))

(declare-fun m!105069 () Bool)

(assert (=> b!96536 m!105069))

(assert (=> b!96534 m!104253))

(assert (=> b!96534 m!104253))

(declare-fun m!105071 () Bool)

(assert (=> b!96534 m!105071))

(declare-fun m!105073 () Bool)

(assert (=> b!96539 m!105073))

(assert (=> b!96539 m!104253))

(declare-fun m!105075 () Bool)

(assert (=> b!96539 m!105075))

(assert (=> b!96539 m!105073))

(assert (=> b!96539 m!103489))

(declare-fun m!105077 () Bool)

(assert (=> b!96539 m!105077))

(assert (=> b!96539 m!103489))

(assert (=> b!96539 m!104253))

(assert (=> b!96535 m!105073))

(declare-fun m!105079 () Bool)

(assert (=> b!96535 m!105079))

(assert (=> b!96535 m!105073))

(assert (=> b!96535 m!103489))

(assert (=> b!96535 m!105077))

(assert (=> b!96535 m!103489))

(declare-fun m!105081 () Bool)

(assert (=> b!96535 m!105081))

(assert (=> b!96535 m!104253))

(declare-fun m!105083 () Bool)

(assert (=> b!96535 m!105083))

(assert (=> b!96535 m!105081))

(declare-fun m!105085 () Bool)

(assert (=> b!96535 m!105085))

(declare-fun m!105087 () Bool)

(assert (=> b!96532 m!105087))

(assert (=> b!96538 m!105063))

(assert (=> b!96537 m!104253))

(assert (=> b!96537 m!104253))

(assert (=> b!96537 m!105071))

(assert (=> bm!9695 d!25595))

(declare-fun d!25597 () Bool)

(declare-fun res!48715 () Bool)

(declare-fun e!62941 () Bool)

(assert (=> d!25597 (=> res!48715 e!62941)))

(assert (=> d!25597 (= res!48715 (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25597 (= (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!62941)))

(declare-fun b!96544 () Bool)

(declare-fun e!62942 () Bool)

(assert (=> b!96544 (= e!62941 e!62942)))

(declare-fun res!48716 () Bool)

(assert (=> b!96544 (=> (not res!48716) (not e!62942))))

(assert (=> b!96544 (= res!48716 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96545 () Bool)

(assert (=> b!96545 (= e!62942 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25597 (not res!48715)) b!96544))

(assert (= (and b!96544 res!48716) b!96545))

(declare-fun m!105089 () Bool)

(assert (=> d!25597 m!105089))

(assert (=> b!96545 m!103459))

(declare-fun m!105091 () Bool)

(assert (=> b!96545 m!105091))

(assert (=> b!96132 d!25597))

(declare-fun b!96546 () Bool)

(declare-fun e!62946 () Bool)

(assert (=> b!96546 (= e!62946 (contains!792 (ite c!16178 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) Nil!1578) Nil!1578) (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun c!16298 () Bool)

(declare-fun bm!9779 () Bool)

(declare-fun call!9782 () Bool)

(assert (=> bm!9779 (= call!9782 (arrayNoDuplicates!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16298 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!16178 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) Nil!1578) Nil!1578)) (ite c!16178 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) Nil!1578) Nil!1578))))))

(declare-fun b!96547 () Bool)

(declare-fun e!62943 () Bool)

(assert (=> b!96547 (= e!62943 call!9782)))

(declare-fun b!96548 () Bool)

(declare-fun e!62945 () Bool)

(assert (=> b!96548 (= e!62945 e!62943)))

(assert (=> b!96548 (= c!16298 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!96549 () Bool)

(assert (=> b!96549 (= e!62943 call!9782)))

(declare-fun d!25599 () Bool)

(declare-fun res!48717 () Bool)

(declare-fun e!62944 () Bool)

(assert (=> d!25599 (=> res!48717 e!62944)))

(assert (=> d!25599 (= res!48717 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25599 (= (arrayNoDuplicates!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16178 (Cons!1577 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) Nil!1578) Nil!1578)) e!62944)))

(declare-fun b!96550 () Bool)

(assert (=> b!96550 (= e!62944 e!62945)))

(declare-fun res!48718 () Bool)

(assert (=> b!96550 (=> (not res!48718) (not e!62945))))

(assert (=> b!96550 (= res!48718 (not e!62946))))

(declare-fun res!48719 () Bool)

(assert (=> b!96550 (=> (not res!48719) (not e!62946))))

(assert (=> b!96550 (= res!48719 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!25599 (not res!48717)) b!96550))

(assert (= (and b!96550 res!48719) b!96546))

(assert (= (and b!96550 res!48718) b!96548))

(assert (= (and b!96548 c!16298) b!96549))

(assert (= (and b!96548 (not c!16298)) b!96547))

(assert (= (or b!96549 b!96547) bm!9779))

(declare-fun m!105093 () Bool)

(assert (=> b!96546 m!105093))

(assert (=> b!96546 m!105093))

(declare-fun m!105095 () Bool)

(assert (=> b!96546 m!105095))

(assert (=> bm!9779 m!105093))

(declare-fun m!105097 () Bool)

(assert (=> bm!9779 m!105097))

(assert (=> b!96548 m!105093))

(assert (=> b!96548 m!105093))

(declare-fun m!105099 () Bool)

(assert (=> b!96548 m!105099))

(assert (=> b!96550 m!105093))

(assert (=> b!96550 m!105093))

(assert (=> b!96550 m!105099))

(assert (=> bm!9735 d!25599))

(assert (=> b!96032 d!25303))

(declare-fun d!25601 () Bool)

(assert (=> d!25601 (= (isDefined!101 (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) (not (isEmpty!358 (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun bs!3983 () Bool)

(assert (= bs!3983 d!25601))

(assert (=> bs!3983 m!104233))

(declare-fun m!105101 () Bool)

(assert (=> bs!3983 m!105101))

(assert (=> b!96122 d!25601))

(declare-fun b!96552 () Bool)

(declare-fun e!62947 () Option!153)

(declare-fun e!62948 () Option!153)

(assert (=> b!96552 (= e!62947 e!62948)))

(declare-fun c!16300 () Bool)

(assert (=> b!96552 (= c!16300 (and ((_ is Cons!1576) (toList!769 e!62464)) (not (= (_1!1168 (h!2169 (toList!769 e!62464))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun b!96553 () Bool)

(assert (=> b!96553 (= e!62948 (getValueByKey!147 (t!5493 (toList!769 e!62464)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96551 () Bool)

(assert (=> b!96551 (= e!62947 (Some!152 (_2!1168 (h!2169 (toList!769 e!62464)))))))

(declare-fun b!96554 () Bool)

(assert (=> b!96554 (= e!62948 None!151)))

(declare-fun d!25603 () Bool)

(declare-fun c!16299 () Bool)

(assert (=> d!25603 (= c!16299 (and ((_ is Cons!1576) (toList!769 e!62464)) (= (_1!1168 (h!2169 (toList!769 e!62464))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25603 (= (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62947)))

(assert (= (and d!25603 c!16299) b!96551))

(assert (= (and d!25603 (not c!16299)) b!96552))

(assert (= (and b!96552 c!16300) b!96553))

(assert (= (and b!96552 (not c!16300)) b!96554))

(assert (=> b!96553 m!103459))

(declare-fun m!105103 () Bool)

(assert (=> b!96553 m!105103))

(assert (=> b!96122 d!25603))

(declare-fun d!25605 () Bool)

(assert (=> d!25605 (= (apply!91 lt!47929 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (getValueByKey!147 (toList!769 lt!47929) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3984 () Bool)

(assert (= bs!3984 d!25605))

(assert (=> bs!3984 m!103867))

(declare-fun m!105105 () Bool)

(assert (=> bs!3984 m!105105))

(assert (=> bs!3984 m!105105))

(declare-fun m!105107 () Bool)

(assert (=> bs!3984 m!105107))

(assert (=> b!95992 d!25605))

(declare-fun d!25607 () Bool)

(declare-fun c!16301 () Bool)

(assert (=> d!25607 (= c!16301 ((_ is ValueCellFull!965) (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62949 () V!3137)

(assert (=> d!25607 (= (get!1275 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62949)))

(declare-fun b!96555 () Bool)

(assert (=> b!96555 (= e!62949 (get!1276 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96556 () Bool)

(assert (=> b!96556 (= e!62949 (get!1277 (select (arr!1991 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25607 c!16301) b!96555))

(assert (= (and d!25607 (not c!16301)) b!96556))

(assert (=> b!96555 m!103991))

(assert (=> b!96555 m!103989))

(declare-fun m!105109 () Bool)

(assert (=> b!96555 m!105109))

(assert (=> b!96556 m!103991))

(assert (=> b!96556 m!103989))

(declare-fun m!105111 () Bool)

(assert (=> b!96556 m!105111))

(assert (=> b!95992 d!25607))

(declare-fun d!25609 () Bool)

(assert (=> d!25609 (= (isDefined!101 (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) (not (isEmpty!358 (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun bs!3985 () Bool)

(assert (= bs!3985 d!25609))

(assert (=> bs!3985 m!104225))

(declare-fun m!105113 () Bool)

(assert (=> bs!3985 m!105113))

(assert (=> b!96119 d!25609))

(declare-fun b!96558 () Bool)

(declare-fun e!62950 () Option!153)

(declare-fun e!62951 () Option!153)

(assert (=> b!96558 (= e!62950 e!62951)))

(declare-fun c!16303 () Bool)

(assert (=> b!96558 (= c!16303 (and ((_ is Cons!1576) (toList!769 call!9669)) (not (= (_1!1168 (h!2169 (toList!769 call!9669))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(declare-fun b!96559 () Bool)

(assert (=> b!96559 (= e!62951 (getValueByKey!147 (t!5493 (toList!769 call!9669)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96557 () Bool)

(assert (=> b!96557 (= e!62950 (Some!152 (_2!1168 (h!2169 (toList!769 call!9669)))))))

(declare-fun b!96560 () Bool)

(assert (=> b!96560 (= e!62951 None!151)))

(declare-fun d!25611 () Bool)

(declare-fun c!16302 () Bool)

(assert (=> d!25611 (= c!16302 (and ((_ is Cons!1576) (toList!769 call!9669)) (= (_1!1168 (h!2169 (toList!769 call!9669))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25611 (= (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!62950)))

(assert (= (and d!25611 c!16302) b!96557))

(assert (= (and d!25611 (not c!16302)) b!96558))

(assert (= (and b!96558 c!16303) b!96559))

(assert (= (and b!96558 (not c!16303)) b!96560))

(assert (=> b!96559 m!103459))

(declare-fun m!105115 () Bool)

(assert (=> b!96559 m!105115))

(assert (=> b!96119 d!25611))

(declare-fun d!25613 () Bool)

(declare-fun e!62952 () Bool)

(assert (=> d!25613 e!62952))

(declare-fun res!48720 () Bool)

(assert (=> d!25613 (=> res!48720 e!62952)))

(declare-fun lt!48281 () Bool)

(assert (=> d!25613 (= res!48720 (not lt!48281))))

(declare-fun lt!48282 () Bool)

(assert (=> d!25613 (= lt!48281 lt!48282)))

(declare-fun lt!48283 () Unit!2865)

(declare-fun e!62953 () Unit!2865)

(assert (=> d!25613 (= lt!48283 e!62953)))

(declare-fun c!16304 () Bool)

(assert (=> d!25613 (= c!16304 lt!48282)))

(assert (=> d!25613 (= lt!48282 (containsKey!151 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25613 (= (contains!791 lt!47903 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48281)))

(declare-fun b!96561 () Bool)

(declare-fun lt!48280 () Unit!2865)

(assert (=> b!96561 (= e!62953 lt!48280)))

(assert (=> b!96561 (= lt!48280 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!96561 (isDefined!101 (getValueByKey!147 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96562 () Bool)

(declare-fun Unit!2904 () Unit!2865)

(assert (=> b!96562 (= e!62953 Unit!2904)))

(declare-fun b!96563 () Bool)

(assert (=> b!96563 (= e!62952 (isDefined!101 (getValueByKey!147 (toList!769 lt!47903) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25613 c!16304) b!96561))

(assert (= (and d!25613 (not c!16304)) b!96562))

(assert (= (and d!25613 (not res!48720)) b!96563))

(declare-fun m!105117 () Bool)

(assert (=> d!25613 m!105117))

(declare-fun m!105119 () Bool)

(assert (=> b!96561 m!105119))

(assert (=> b!96561 m!103969))

(assert (=> b!96561 m!103969))

(declare-fun m!105121 () Bool)

(assert (=> b!96561 m!105121))

(assert (=> b!96563 m!103969))

(assert (=> b!96563 m!103969))

(assert (=> b!96563 m!105121))

(assert (=> d!25285 d!25613))

(declare-fun b!96565 () Bool)

(declare-fun e!62954 () Option!153)

(declare-fun e!62955 () Option!153)

(assert (=> b!96565 (= e!62954 e!62955)))

(declare-fun c!16306 () Bool)

(assert (=> b!96565 (= c!16306 (and ((_ is Cons!1576) lt!47901) (not (= (_1!1168 (h!2169 lt!47901)) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!96566 () Bool)

(assert (=> b!96566 (= e!62955 (getValueByKey!147 (t!5493 lt!47901) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96564 () Bool)

(assert (=> b!96564 (= e!62954 (Some!152 (_2!1168 (h!2169 lt!47901))))))

(declare-fun b!96567 () Bool)

(assert (=> b!96567 (= e!62955 None!151)))

(declare-fun c!16305 () Bool)

(declare-fun d!25615 () Bool)

(assert (=> d!25615 (= c!16305 (and ((_ is Cons!1576) lt!47901) (= (_1!1168 (h!2169 lt!47901)) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25615 (= (getValueByKey!147 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62954)))

(assert (= (and d!25615 c!16305) b!96564))

(assert (= (and d!25615 (not c!16305)) b!96565))

(assert (= (and b!96565 c!16306) b!96566))

(assert (= (and b!96565 (not c!16306)) b!96567))

(declare-fun m!105123 () Bool)

(assert (=> b!96566 m!105123))

(assert (=> d!25285 d!25615))

(declare-fun d!25617 () Bool)

(assert (=> d!25617 (= (getValueByKey!147 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!152 (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!48284 () Unit!2865)

(assert (=> d!25617 (= lt!48284 (choose!590 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62956 () Bool)

(assert (=> d!25617 e!62956))

(declare-fun res!48721 () Bool)

(assert (=> d!25617 (=> (not res!48721) (not e!62956))))

(assert (=> d!25617 (= res!48721 (isStrictlySorted!298 lt!47901))))

(assert (=> d!25617 (= (lemmaContainsTupThenGetReturnValue!66 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48284)))

(declare-fun b!96568 () Bool)

(declare-fun res!48722 () Bool)

(assert (=> b!96568 (=> (not res!48722) (not e!62956))))

(assert (=> b!96568 (= res!48722 (containsKey!151 lt!47901 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96569 () Bool)

(assert (=> b!96569 (= e!62956 (contains!793 lt!47901 (tuple2!2315 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25617 res!48721) b!96568))

(assert (= (and b!96568 res!48722) b!96569))

(assert (=> d!25617 m!103963))

(declare-fun m!105125 () Bool)

(assert (=> d!25617 m!105125))

(declare-fun m!105127 () Bool)

(assert (=> d!25617 m!105127))

(declare-fun m!105129 () Bool)

(assert (=> b!96568 m!105129))

(declare-fun m!105131 () Bool)

(assert (=> b!96569 m!105131))

(assert (=> d!25285 d!25617))

(declare-fun b!96570 () Bool)

(declare-fun e!62961 () List!1580)

(declare-fun call!9783 () List!1580)

(assert (=> b!96570 (= e!62961 call!9783)))

(declare-fun c!16308 () Bool)

(declare-fun b!96571 () Bool)

(declare-fun e!62959 () List!1580)

(declare-fun c!16309 () Bool)

(assert (=> b!96571 (= e!62959 (ite c!16309 (t!5493 (toList!769 e!62461)) (ite c!16308 (Cons!1576 (h!2169 (toList!769 e!62461)) (t!5493 (toList!769 e!62461))) Nil!1577)))))

(declare-fun b!96572 () Bool)

(assert (=> b!96572 (= e!62959 (insertStrictlySorted!69 (t!5493 (toList!769 e!62461)) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62958 () Bool)

(declare-fun lt!48285 () List!1580)

(declare-fun b!96573 () Bool)

(assert (=> b!96573 (= e!62958 (contains!793 lt!48285 (tuple2!2315 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun bm!9780 () Bool)

(declare-fun call!9784 () List!1580)

(declare-fun call!9785 () List!1580)

(assert (=> bm!9780 (= call!9784 call!9785)))

(declare-fun b!96574 () Bool)

(declare-fun e!62957 () List!1580)

(assert (=> b!96574 (= e!62957 call!9784)))

(declare-fun b!96575 () Bool)

(assert (=> b!96575 (= e!62961 call!9783)))

(declare-fun d!25619 () Bool)

(assert (=> d!25619 e!62958))

(declare-fun res!48723 () Bool)

(assert (=> d!25619 (=> (not res!48723) (not e!62958))))

(assert (=> d!25619 (= res!48723 (isStrictlySorted!298 lt!48285))))

(declare-fun e!62960 () List!1580)

(assert (=> d!25619 (= lt!48285 e!62960)))

(declare-fun c!16307 () Bool)

(assert (=> d!25619 (= c!16307 (and ((_ is Cons!1576) (toList!769 e!62461)) (bvslt (_1!1168 (h!2169 (toList!769 e!62461))) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25619 (isStrictlySorted!298 (toList!769 e!62461))))

(assert (=> d!25619 (= (insertStrictlySorted!69 (toList!769 e!62461) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48285)))

(declare-fun b!96576 () Bool)

(assert (=> b!96576 (= c!16308 (and ((_ is Cons!1576) (toList!769 e!62461)) (bvsgt (_1!1168 (h!2169 (toList!769 e!62461))) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!96576 (= e!62957 e!62961)))

(declare-fun b!96577 () Bool)

(declare-fun res!48724 () Bool)

(assert (=> b!96577 (=> (not res!48724) (not e!62958))))

(assert (=> b!96577 (= res!48724 (containsKey!151 lt!48285 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9781 () Bool)

(assert (=> bm!9781 (= call!9785 ($colon$colon!76 e!62959 (ite c!16307 (h!2169 (toList!769 e!62461)) (tuple2!2315 (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!16310 () Bool)

(assert (=> bm!9781 (= c!16310 c!16307)))

(declare-fun b!96578 () Bool)

(assert (=> b!96578 (= e!62960 e!62957)))

(assert (=> b!96578 (= c!16309 (and ((_ is Cons!1576) (toList!769 e!62461)) (= (_1!1168 (h!2169 (toList!769 e!62461))) (_1!1168 (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!96579 () Bool)

(assert (=> b!96579 (= e!62960 call!9785)))

(declare-fun bm!9782 () Bool)

(assert (=> bm!9782 (= call!9783 call!9784)))

(assert (= (and d!25619 c!16307) b!96579))

(assert (= (and d!25619 (not c!16307)) b!96578))

(assert (= (and b!96578 c!16309) b!96574))

(assert (= (and b!96578 (not c!16309)) b!96576))

(assert (= (and b!96576 c!16308) b!96575))

(assert (= (and b!96576 (not c!16308)) b!96570))

(assert (= (or b!96575 b!96570) bm!9782))

(assert (= (or b!96574 bm!9782) bm!9780))

(assert (= (or b!96579 bm!9780) bm!9781))

(assert (= (and bm!9781 c!16310) b!96572))

(assert (= (and bm!9781 (not c!16310)) b!96571))

(assert (= (and d!25619 res!48723) b!96577))

(assert (= (and b!96577 res!48724) b!96573))

(declare-fun m!105133 () Bool)

(assert (=> b!96577 m!105133))

(declare-fun m!105135 () Bool)

(assert (=> b!96573 m!105135))

(declare-fun m!105137 () Bool)

(assert (=> bm!9781 m!105137))

(declare-fun m!105139 () Bool)

(assert (=> d!25619 m!105139))

(declare-fun m!105141 () Bool)

(assert (=> d!25619 m!105141))

(declare-fun m!105143 () Bool)

(assert (=> b!96572 m!105143))

(assert (=> d!25285 d!25619))

(declare-fun d!25621 () Bool)

(assert (=> d!25621 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(declare-fun lt!48286 () Unit!2865)

(assert (=> d!25621 (= lt!48286 (choose!585 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(declare-fun e!62962 () Bool)

(assert (=> d!25621 e!62962))

(declare-fun res!48725 () Bool)

(assert (=> d!25621 (=> (not res!48725) (not e!62962))))

(assert (=> d!25621 (= res!48725 (isStrictlySorted!298 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25621 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716) lt!48286)))

(declare-fun b!96580 () Bool)

(assert (=> b!96580 (= e!62962 (containsKey!151 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))

(assert (= (and d!25621 res!48725) b!96580))

(assert (=> d!25621 m!103799))

(assert (=> d!25621 m!103799))

(assert (=> d!25621 m!103801))

(declare-fun m!105145 () Bool)

(assert (=> d!25621 m!105145))

(declare-fun m!105147 () Bool)

(assert (=> d!25621 m!105147))

(assert (=> b!96580 m!103795))

(assert (=> b!95846 d!25621))

(declare-fun d!25623 () Bool)

(assert (=> d!25623 (= (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716)) (not (isEmpty!358 (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716))))))

(declare-fun bs!3986 () Bool)

(assert (= bs!3986 d!25623))

(assert (=> bs!3986 m!103799))

(declare-fun m!105149 () Bool)

(assert (=> bs!3986 m!105149))

(assert (=> b!95846 d!25623))

(declare-fun b!96582 () Bool)

(declare-fun e!62963 () Option!153)

(declare-fun e!62964 () Option!153)

(assert (=> b!96582 (= e!62963 e!62964)))

(declare-fun c!16312 () Bool)

(assert (=> b!96582 (= c!16312 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (not (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47716))))))

(declare-fun b!96583 () Bool)

(assert (=> b!96583 (= e!62964 (getValueByKey!147 (t!5493 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!47716))))

(declare-fun b!96581 () Bool)

(assert (=> b!96581 (= e!62963 (Some!152 (_2!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96584 () Bool)

(assert (=> b!96584 (= e!62964 None!151)))

(declare-fun d!25625 () Bool)

(declare-fun c!16311 () Bool)

(assert (=> d!25625 (= c!16311 (and ((_ is Cons!1576) (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))) (= (_1!1168 (h!2169 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))) lt!47716)))))

(assert (=> d!25625 (= (getValueByKey!147 (toList!769 (+!127 lt!47722 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!47716) e!62963)))

(assert (= (and d!25625 c!16311) b!96581))

(assert (= (and d!25625 (not c!16311)) b!96582))

(assert (= (and b!96582 c!16312) b!96583))

(assert (= (and b!96582 (not c!16312)) b!96584))

(declare-fun m!105151 () Bool)

(assert (=> b!96583 m!105151))

(assert (=> b!95846 d!25625))

(assert (=> bm!9728 d!25389))

(assert (=> d!25343 d!25301))

(declare-fun b!96601 () Bool)

(declare-fun res!48734 () Bool)

(declare-fun lt!48289 () SeekEntryResult!255)

(assert (=> b!96601 (= res!48734 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!48289)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62975 () Bool)

(assert (=> b!96601 (=> (not res!48734) (not e!62975))))

(declare-fun c!16317 () Bool)

(declare-fun bm!9787 () Bool)

(declare-fun call!9791 () Bool)

(assert (=> bm!9787 (= call!9791 (inRange!0 (ite c!16317 (index!3162 lt!48289) (index!3165 lt!48289)) (mask!6540 newMap!16)))))

(declare-fun b!96602 () Bool)

(declare-fun call!9790 () Bool)

(assert (=> b!96602 (= e!62975 (not call!9790))))

(declare-fun b!96603 () Bool)

(declare-fun e!62973 () Bool)

(declare-fun e!62976 () Bool)

(assert (=> b!96603 (= e!62973 e!62976)))

(declare-fun c!16318 () Bool)

(assert (=> b!96603 (= c!16318 ((_ is MissingVacant!255) lt!48289))))

(declare-fun b!96604 () Bool)

(assert (=> b!96604 (= e!62973 e!62975)))

(declare-fun res!48735 () Bool)

(assert (=> b!96604 (= res!48735 call!9791)))

(assert (=> b!96604 (=> (not res!48735) (not e!62975))))

(declare-fun b!96605 () Bool)

(declare-fun res!48737 () Bool)

(declare-fun e!62974 () Bool)

(assert (=> b!96605 (=> (not res!48737) (not e!62974))))

(assert (=> b!96605 (= res!48737 call!9791)))

(assert (=> b!96605 (= e!62976 e!62974)))

(declare-fun b!96606 () Bool)

(declare-fun res!48736 () Bool)

(assert (=> b!96606 (=> (not res!48736) (not e!62974))))

(assert (=> b!96606 (= res!48736 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!48289)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!25627 () Bool)

(assert (=> d!25627 e!62973))

(assert (=> d!25627 (= c!16317 ((_ is MissingZero!255) lt!48289))))

(assert (=> d!25627 (= lt!48289 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(assert (=> d!25627 true))

(declare-fun _$34!858 () Unit!2865)

(assert (=> d!25627 (= (choose!587 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) _$34!858)))

(declare-fun b!96607 () Bool)

(assert (=> b!96607 (= e!62974 (not call!9790))))

(declare-fun b!96608 () Bool)

(assert (=> b!96608 (= e!62976 ((_ is Undefined!255) lt!48289))))

(declare-fun bm!9788 () Bool)

(assert (=> bm!9788 (= call!9790 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!25627 c!16317) b!96604))

(assert (= (and d!25627 (not c!16317)) b!96603))

(assert (= (and b!96604 res!48735) b!96601))

(assert (= (and b!96601 res!48734) b!96602))

(assert (= (and b!96603 c!16318) b!96605))

(assert (= (and b!96603 (not c!16318)) b!96608))

(assert (= (and b!96605 res!48737) b!96606))

(assert (= (and b!96606 res!48736) b!96607))

(assert (= (or b!96604 b!96605) bm!9787))

(assert (= (or b!96602 b!96607) bm!9788))

(declare-fun m!105153 () Bool)

(assert (=> b!96606 m!105153))

(declare-fun m!105155 () Bool)

(assert (=> bm!9787 m!105155))

(declare-fun m!105157 () Bool)

(assert (=> b!96601 m!105157))

(assert (=> bm!9788 m!103459))

(assert (=> bm!9788 m!103621))

(assert (=> d!25627 m!103459))

(assert (=> d!25627 m!103637))

(assert (=> d!25343 d!25627))

(assert (=> d!25343 d!25423))

(declare-fun d!25629 () Bool)

(assert (=> d!25629 (= (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96159 d!25629))

(declare-fun d!25631 () Bool)

(assert (=> d!25631 (isDefined!101 (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(declare-fun lt!48290 () Unit!2865)

(assert (=> d!25631 (= lt!48290 (choose!585 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(declare-fun e!62977 () Bool)

(assert (=> d!25631 e!62977))

(declare-fun res!48738 () Bool)

(assert (=> d!25631 (=> (not res!48738) (not e!62977))))

(assert (=> d!25631 (= res!48738 (isStrictlySorted!298 (toList!769 call!9656)))))

(assert (=> d!25631 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))) lt!48290)))

(declare-fun b!96609 () Bool)

(assert (=> b!96609 (= e!62977 (containsKey!151 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (= (and d!25631 res!48738) b!96609))

(assert (=> d!25631 m!103633))

(assert (=> d!25631 m!104277))

(assert (=> d!25631 m!104277))

(assert (=> d!25631 m!104279))

(assert (=> d!25631 m!103633))

(declare-fun m!105159 () Bool)

(assert (=> d!25631 m!105159))

(declare-fun m!105161 () Bool)

(assert (=> d!25631 m!105161))

(assert (=> b!96609 m!103633))

(assert (=> b!96609 m!104273))

(assert (=> b!96162 d!25631))

(declare-fun d!25633 () Bool)

(assert (=> d!25633 (= (isDefined!101 (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))) (not (isEmpty!358 (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))))

(declare-fun bs!3987 () Bool)

(assert (= bs!3987 d!25633))

(assert (=> bs!3987 m!104277))

(declare-fun m!105163 () Bool)

(assert (=> bs!3987 m!105163))

(assert (=> b!96162 d!25633))

(declare-fun b!96611 () Bool)

(declare-fun e!62978 () Option!153)

(declare-fun e!62979 () Option!153)

(assert (=> b!96611 (= e!62978 e!62979)))

(declare-fun c!16320 () Bool)

(assert (=> b!96611 (= c!16320 (and ((_ is Cons!1576) (toList!769 call!9656)) (not (= (_1!1168 (h!2169 (toList!769 call!9656))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))))

(declare-fun b!96612 () Bool)

(assert (=> b!96612 (= e!62979 (getValueByKey!147 (t!5493 (toList!769 call!9656)) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(declare-fun b!96610 () Bool)

(assert (=> b!96610 (= e!62978 (Some!152 (_2!1168 (h!2169 (toList!769 call!9656)))))))

(declare-fun b!96613 () Bool)

(assert (=> b!96613 (= e!62979 None!151)))

(declare-fun d!25635 () Bool)

(declare-fun c!16319 () Bool)

(assert (=> d!25635 (= c!16319 (and ((_ is Cons!1576) (toList!769 call!9656)) (= (_1!1168 (h!2169 (toList!769 call!9656))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))))

(assert (=> d!25635 (= (getValueByKey!147 (toList!769 call!9656) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))) e!62978)))

(assert (= (and d!25635 c!16319) b!96610))

(assert (= (and d!25635 (not c!16319)) b!96611))

(assert (= (and b!96611 c!16320) b!96612))

(assert (= (and b!96611 (not c!16320)) b!96613))

(assert (=> b!96612 m!103633))

(declare-fun m!105165 () Bool)

(assert (=> b!96612 m!105165))

(assert (=> b!96162 d!25635))

(assert (=> d!25275 d!25301))

(declare-fun d!25637 () Bool)

(declare-fun e!62982 () Bool)

(assert (=> d!25637 e!62982))

(declare-fun res!48743 () Bool)

(assert (=> d!25637 (=> (not res!48743) (not e!62982))))

(declare-fun lt!48293 () SeekEntryResult!255)

(assert (=> d!25637 (= res!48743 ((_ is Found!255) lt!48293))))

(assert (=> d!25637 (= lt!48293 (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(assert (=> d!25637 true))

(declare-fun _$33!78 () Unit!2865)

(assert (=> d!25637 (= (choose!584 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) _$33!78)))

(declare-fun b!96618 () Bool)

(declare-fun res!48744 () Bool)

(assert (=> b!96618 (=> (not res!48744) (not e!62982))))

(assert (=> b!96618 (= res!48744 (inRange!0 (index!3163 lt!48293) (mask!6540 newMap!16)))))

(declare-fun b!96619 () Bool)

(assert (=> b!96619 (= e!62982 (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!48293)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25637 res!48743) b!96618))

(assert (= (and b!96618 res!48744) b!96619))

(assert (=> d!25637 m!103459))

(assert (=> d!25637 m!103637))

(declare-fun m!105167 () Bool)

(assert (=> b!96618 m!105167))

(declare-fun m!105169 () Bool)

(assert (=> b!96619 m!105169))

(assert (=> d!25275 d!25637))

(assert (=> d!25275 d!25423))

(declare-fun d!25639 () Bool)

(assert (=> d!25639 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25639 true))

(declare-fun _$5!98 () Unit!2865)

(assert (=> d!25639 (= (choose!589 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3163 lt!47654) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) _$5!98)))

(declare-fun bs!3988 () Bool)

(assert (= bs!3988 d!25639))

(assert (=> bs!3988 m!103619))

(assert (=> bs!3988 m!103619))

(assert (=> bs!3988 m!103901))

(assert (=> bs!3988 m!103629))

(assert (=> bs!3988 m!104289))

(assert (=> d!25351 d!25639))

(assert (=> d!25351 d!25423))

(declare-fun d!25641 () Bool)

(declare-fun res!48745 () Bool)

(declare-fun e!62983 () Bool)

(assert (=> d!25641 (=> res!48745 e!62983)))

(assert (=> d!25641 (= res!48745 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25641 (= (containsKey!151 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000) e!62983)))

(declare-fun b!96620 () Bool)

(declare-fun e!62984 () Bool)

(assert (=> b!96620 (= e!62983 e!62984)))

(declare-fun res!48746 () Bool)

(assert (=> b!96620 (=> (not res!48746) (not e!62984))))

(assert (=> b!96620 (= res!48746 (and (or (not ((_ is Cons!1576) (toList!769 lt!47731))) (bvsle (_1!1168 (h!2169 (toList!769 lt!47731))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1576) (toList!769 lt!47731)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47731))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96621 () Bool)

(assert (=> b!96621 (= e!62984 (containsKey!151 (t!5493 (toList!769 lt!47731)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25641 (not res!48745)) b!96620))

(assert (= (and b!96620 res!48746) b!96621))

(declare-fun m!105171 () Bool)

(assert (=> b!96621 m!105171))

(assert (=> d!25273 d!25641))

(declare-fun b!96622 () Bool)

(declare-fun e!62986 () (_ BitVec 32))

(assert (=> b!96622 (= e!62986 #b00000000000000000000000000000000)))

(declare-fun b!96623 () Bool)

(declare-fun e!62985 () (_ BitVec 32))

(assert (=> b!96623 (= e!62986 e!62985)))

(declare-fun c!16321 () Bool)

(assert (=> b!96623 (= c!16321 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!25643 () Bool)

(declare-fun lt!48294 () (_ BitVec 32))

(assert (=> d!25643 (and (bvsge lt!48294 #b00000000000000000000000000000000) (bvsle lt!48294 (bvsub (size!2240 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!25643 (= lt!48294 e!62986)))

(declare-fun c!16322 () Bool)

(assert (=> d!25643 (= c!16322 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25643 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2240 (_keys!4141 newMap!16)) (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25643 (= (arrayCountValidKeys!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))) lt!48294)))

(declare-fun bm!9789 () Bool)

(declare-fun call!9792 () (_ BitVec 32))

(assert (=> bm!9789 (= call!9792 (arrayCountValidKeys!0 (_keys!4141 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96624 () Bool)

(assert (=> b!96624 (= e!62985 (bvadd #b00000000000000000000000000000001 call!9792))))

(declare-fun b!96625 () Bool)

(assert (=> b!96625 (= e!62985 call!9792)))

(assert (= (and d!25643 c!16322) b!96622))

(assert (= (and d!25643 (not c!16322)) b!96623))

(assert (= (and b!96623 c!16321) b!96624))

(assert (= (and b!96623 (not c!16321)) b!96625))

(assert (= (or b!96624 b!96625) bm!9789))

(assert (=> b!96623 m!105093))

(assert (=> b!96623 m!105093))

(assert (=> b!96623 m!105099))

(declare-fun m!105173 () Bool)

(assert (=> bm!9789 m!105173))

(assert (=> bm!9727 d!25643))

(declare-fun d!25645 () Bool)

(assert (=> d!25645 (= (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!358 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3989 () Bool)

(assert (= bs!3989 d!25645))

(assert (=> bs!3989 m!104213))

(declare-fun m!105175 () Bool)

(assert (=> bs!3989 m!105175))

(assert (=> b!96173 d!25645))

(declare-fun b!96627 () Bool)

(declare-fun e!62987 () Option!153)

(declare-fun e!62988 () Option!153)

(assert (=> b!96627 (= e!62987 e!62988)))

(declare-fun c!16324 () Bool)

(assert (=> b!96627 (= c!16324 (and ((_ is Cons!1576) (toList!769 lt!47731)) (not (= (_1!1168 (h!2169 (toList!769 lt!47731))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!96628 () Bool)

(assert (=> b!96628 (= e!62988 (getValueByKey!147 (t!5493 (toList!769 lt!47731)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!96626 () Bool)

(assert (=> b!96626 (= e!62987 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47731)))))))

(declare-fun b!96629 () Bool)

(assert (=> b!96629 (= e!62988 None!151)))

(declare-fun c!16323 () Bool)

(declare-fun d!25647 () Bool)

(assert (=> d!25647 (= c!16323 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25647 (= (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!62987)))

(assert (= (and d!25647 c!16323) b!96626))

(assert (= (and d!25647 (not c!16323)) b!96627))

(assert (= (and b!96627 c!16324) b!96628))

(assert (= (and b!96627 (not c!16324)) b!96629))

(assert (=> b!96628 m!103591))

(declare-fun m!105177 () Bool)

(assert (=> b!96628 m!105177))

(assert (=> b!96173 d!25647))

(declare-fun d!25649 () Bool)

(declare-fun e!62989 () Bool)

(assert (=> d!25649 e!62989))

(declare-fun res!48747 () Bool)

(assert (=> d!25649 (=> res!48747 e!62989)))

(declare-fun lt!48296 () Bool)

(assert (=> d!25649 (= res!48747 (not lt!48296))))

(declare-fun lt!48297 () Bool)

(assert (=> d!25649 (= lt!48296 lt!48297)))

(declare-fun lt!48298 () Unit!2865)

(declare-fun e!62990 () Unit!2865)

(assert (=> d!25649 (= lt!48298 e!62990)))

(declare-fun c!16325 () Bool)

(assert (=> d!25649 (= c!16325 lt!48297)))

(assert (=> d!25649 (= lt!48297 (containsKey!151 (toList!769 lt!47721) lt!47723))))

(assert (=> d!25649 (= (contains!791 lt!47721 lt!47723) lt!48296)))

(declare-fun b!96630 () Bool)

(declare-fun lt!48295 () Unit!2865)

(assert (=> b!96630 (= e!62990 lt!48295)))

(assert (=> b!96630 (= lt!48295 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47721) lt!47723))))

(assert (=> b!96630 (isDefined!101 (getValueByKey!147 (toList!769 lt!47721) lt!47723))))

(declare-fun b!96631 () Bool)

(declare-fun Unit!2905 () Unit!2865)

(assert (=> b!96631 (= e!62990 Unit!2905)))

(declare-fun b!96632 () Bool)

(assert (=> b!96632 (= e!62989 (isDefined!101 (getValueByKey!147 (toList!769 lt!47721) lt!47723)))))

(assert (= (and d!25649 c!16325) b!96630))

(assert (= (and d!25649 (not c!16325)) b!96631))

(assert (= (and d!25649 (not res!48747)) b!96632))

(declare-fun m!105179 () Bool)

(assert (=> d!25649 m!105179))

(declare-fun m!105181 () Bool)

(assert (=> b!96630 m!105181))

(assert (=> b!96630 m!103811))

(assert (=> b!96630 m!103811))

(declare-fun m!105183 () Bool)

(assert (=> b!96630 m!105183))

(assert (=> b!96632 m!103811))

(assert (=> b!96632 m!103811))

(assert (=> b!96632 m!105183))

(assert (=> d!25231 d!25649))

(assert (=> d!25231 d!25249))

(declare-fun d!25651 () Bool)

(assert (=> d!25651 (= (apply!91 (+!127 lt!47721 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47723) (apply!91 lt!47721 lt!47723))))

(assert (=> d!25651 true))

(declare-fun _$34!859 () Unit!2865)

(assert (=> d!25651 (= (choose!581 lt!47721 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47723) _$34!859)))

(declare-fun bs!3990 () Bool)

(assert (= bs!3990 d!25651))

(assert (=> bs!3990 m!103707))

(assert (=> bs!3990 m!103707))

(assert (=> bs!3990 m!103709))

(assert (=> bs!3990 m!103695))

(assert (=> d!25231 d!25651))

(assert (=> d!25231 d!25235))

(assert (=> d!25231 d!25245))

(assert (=> bm!9710 d!25271))

(assert (=> b!96127 d!25409))

(assert (=> b!95911 d!25409))

(declare-fun d!25653 () Bool)

(declare-fun e!62991 () Bool)

(assert (=> d!25653 e!62991))

(declare-fun res!48749 () Bool)

(assert (=> d!25653 (=> (not res!48749) (not e!62991))))

(declare-fun lt!48301 () ListLongMap!1507)

(assert (=> d!25653 (= res!48749 (contains!791 lt!48301 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48299 () List!1580)

(assert (=> d!25653 (= lt!48301 (ListLongMap!1508 lt!48299))))

(declare-fun lt!48300 () Unit!2865)

(declare-fun lt!48302 () Unit!2865)

(assert (=> d!25653 (= lt!48300 lt!48302)))

(assert (=> d!25653 (= (getValueByKey!147 lt!48299 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25653 (= lt!48302 (lemmaContainsTupThenGetReturnValue!66 lt!48299 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25653 (= lt!48299 (insertStrictlySorted!69 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25653 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48301)))

(declare-fun b!96633 () Bool)

(declare-fun res!48748 () Bool)

(assert (=> b!96633 (=> (not res!48748) (not e!62991))))

(assert (=> b!96633 (= res!48748 (= (getValueByKey!147 (toList!769 lt!48301) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96634 () Bool)

(assert (=> b!96634 (= e!62991 (contains!793 (toList!769 lt!48301) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25653 res!48749) b!96633))

(assert (= (and b!96633 res!48748) b!96634))

(declare-fun m!105185 () Bool)

(assert (=> d!25653 m!105185))

(declare-fun m!105187 () Bool)

(assert (=> d!25653 m!105187))

(declare-fun m!105189 () Bool)

(assert (=> d!25653 m!105189))

(declare-fun m!105191 () Bool)

(assert (=> d!25653 m!105191))

(declare-fun m!105193 () Bool)

(assert (=> b!96633 m!105193))

(declare-fun m!105195 () Bool)

(assert (=> b!96634 m!105195))

(assert (=> b!96170 d!25653))

(assert (=> b!96170 d!25289))

(declare-fun bm!9790 () Bool)

(declare-fun call!9794 () ListLongMap!1507)

(assert (=> bm!9790 (= call!9794 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96635 () Bool)

(declare-fun e!62997 () Unit!2865)

(declare-fun Unit!2906 () Unit!2865)

(assert (=> b!96635 (= e!62997 Unit!2906)))

(declare-fun bm!9791 () Bool)

(declare-fun call!9797 () ListLongMap!1507)

(assert (=> bm!9791 (= call!9797 call!9794)))

(declare-fun b!96636 () Bool)

(declare-fun lt!48321 () Unit!2865)

(assert (=> b!96636 (= e!62997 lt!48321)))

(declare-fun lt!48315 () ListLongMap!1507)

(assert (=> b!96636 (= lt!48315 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48322 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48322 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48309 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48309 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48306 () Unit!2865)

(assert (=> b!96636 (= lt!48306 (addStillContains!67 lt!48315 lt!48322 (zeroValue!2341 newMap!16) lt!48309))))

(assert (=> b!96636 (contains!791 (+!127 lt!48315 (tuple2!2315 lt!48322 (zeroValue!2341 newMap!16))) lt!48309)))

(declare-fun lt!48319 () Unit!2865)

(assert (=> b!96636 (= lt!48319 lt!48306)))

(declare-fun lt!48318 () ListLongMap!1507)

(assert (=> b!96636 (= lt!48318 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48303 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48303 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48304 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48304 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48320 () Unit!2865)

(assert (=> b!96636 (= lt!48320 (addApplyDifferent!67 lt!48318 lt!48303 (minValue!2341 newMap!16) lt!48304))))

(assert (=> b!96636 (= (apply!91 (+!127 lt!48318 (tuple2!2315 lt!48303 (minValue!2341 newMap!16))) lt!48304) (apply!91 lt!48318 lt!48304))))

(declare-fun lt!48305 () Unit!2865)

(assert (=> b!96636 (= lt!48305 lt!48320)))

(declare-fun lt!48323 () ListLongMap!1507)

(assert (=> b!96636 (= lt!48323 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48317 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48317 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48308 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48308 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48312 () Unit!2865)

(assert (=> b!96636 (= lt!48312 (addApplyDifferent!67 lt!48323 lt!48317 (zeroValue!2341 newMap!16) lt!48308))))

(assert (=> b!96636 (= (apply!91 (+!127 lt!48323 (tuple2!2315 lt!48317 (zeroValue!2341 newMap!16))) lt!48308) (apply!91 lt!48323 lt!48308))))

(declare-fun lt!48313 () Unit!2865)

(assert (=> b!96636 (= lt!48313 lt!48312)))

(declare-fun lt!48314 () ListLongMap!1507)

(assert (=> b!96636 (= lt!48314 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48311 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48311 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48316 () (_ BitVec 64))

(assert (=> b!96636 (= lt!48316 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96636 (= lt!48321 (addApplyDifferent!67 lt!48314 lt!48311 (minValue!2341 newMap!16) lt!48316))))

(assert (=> b!96636 (= (apply!91 (+!127 lt!48314 (tuple2!2315 lt!48311 (minValue!2341 newMap!16))) lt!48316) (apply!91 lt!48314 lt!48316))))

(declare-fun b!96637 () Bool)

(declare-fun e!62996 () ListLongMap!1507)

(declare-fun call!9796 () ListLongMap!1507)

(assert (=> b!96637 (= e!62996 (+!127 call!9796 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96639 () Bool)

(declare-fun e!62998 () Bool)

(declare-fun call!9798 () Bool)

(assert (=> b!96639 (= e!62998 (not call!9798))))

(declare-fun b!96640 () Bool)

(declare-fun e!62994 () Bool)

(declare-fun e!62995 () Bool)

(assert (=> b!96640 (= e!62994 e!62995)))

(declare-fun c!16326 () Bool)

(assert (=> b!96640 (= c!16326 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!63004 () Bool)

(declare-fun lt!48324 () ListLongMap!1507)

(declare-fun b!96641 () Bool)

(assert (=> b!96641 (= e!63004 (= (apply!91 lt!48324 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96641 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))))))

(assert (=> b!96641 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96642 () Bool)

(declare-fun e!63000 () ListLongMap!1507)

(assert (=> b!96642 (= e!62996 e!63000)))

(declare-fun c!16330 () Bool)

(assert (=> b!96642 (= c!16330 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96643 () Bool)

(declare-fun call!9795 () Bool)

(assert (=> b!96643 (= e!62995 (not call!9795))))

(declare-fun b!96644 () Bool)

(declare-fun e!63001 () Bool)

(assert (=> b!96644 (= e!62998 e!63001)))

(declare-fun res!48751 () Bool)

(assert (=> b!96644 (= res!48751 call!9798)))

(assert (=> b!96644 (=> (not res!48751) (not e!63001))))

(declare-fun b!96645 () Bool)

(declare-fun res!48755 () Bool)

(assert (=> b!96645 (=> (not res!48755) (not e!62994))))

(declare-fun e!62992 () Bool)

(assert (=> b!96645 (= res!48755 e!62992)))

(declare-fun res!48756 () Bool)

(assert (=> b!96645 (=> res!48756 e!62992)))

(declare-fun e!62999 () Bool)

(assert (=> b!96645 (= res!48756 (not e!62999))))

(declare-fun res!48753 () Bool)

(assert (=> b!96645 (=> (not res!48753) (not e!62999))))

(assert (=> b!96645 (= res!48753 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9792 () Bool)

(assert (=> bm!9792 (= call!9795 (contains!791 lt!48324 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96646 () Bool)

(declare-fun call!9793 () ListLongMap!1507)

(assert (=> b!96646 (= e!63000 call!9793)))

(declare-fun b!96647 () Bool)

(assert (=> b!96647 (= e!62999 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96648 () Bool)

(declare-fun e!62993 () Bool)

(assert (=> b!96648 (= e!62995 e!62993)))

(declare-fun res!48758 () Bool)

(assert (=> b!96648 (= res!48758 call!9795)))

(assert (=> b!96648 (=> (not res!48758) (not e!62993))))

(declare-fun b!96649 () Bool)

(assert (=> b!96649 (= e!62992 e!63004)))

(declare-fun res!48754 () Bool)

(assert (=> b!96649 (=> (not res!48754) (not e!63004))))

(assert (=> b!96649 (= res!48754 (contains!791 lt!48324 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96649 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96650 () Bool)

(declare-fun e!63003 () ListLongMap!1507)

(assert (=> b!96650 (= e!63003 call!9793)))

(declare-fun b!96651 () Bool)

(declare-fun e!63002 () Bool)

(assert (=> b!96651 (= e!63002 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96652 () Bool)

(declare-fun res!48757 () Bool)

(assert (=> b!96652 (=> (not res!48757) (not e!62994))))

(assert (=> b!96652 (= res!48757 e!62998)))

(declare-fun c!16329 () Bool)

(assert (=> b!96652 (= c!16329 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96653 () Bool)

(declare-fun c!16331 () Bool)

(assert (=> b!96653 (= c!16331 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96653 (= e!63000 e!63003)))

(declare-fun bm!9793 () Bool)

(assert (=> bm!9793 (= call!9793 call!9796)))

(declare-fun b!96654 () Bool)

(assert (=> b!96654 (= e!62993 (= (apply!91 lt!48324 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96655 () Bool)

(declare-fun call!9799 () ListLongMap!1507)

(assert (=> b!96655 (= e!63003 call!9799)))

(declare-fun b!96638 () Bool)

(assert (=> b!96638 (= e!63001 (= (apply!91 lt!48324 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25655 () Bool)

(assert (=> d!25655 e!62994))

(declare-fun res!48750 () Bool)

(assert (=> d!25655 (=> (not res!48750) (not e!62994))))

(assert (=> d!25655 (= res!48750 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!48310 () ListLongMap!1507)

(assert (=> d!25655 (= lt!48324 lt!48310)))

(declare-fun lt!48307 () Unit!2865)

(assert (=> d!25655 (= lt!48307 e!62997)))

(declare-fun c!16328 () Bool)

(assert (=> d!25655 (= c!16328 e!63002)))

(declare-fun res!48752 () Bool)

(assert (=> d!25655 (=> (not res!48752) (not e!63002))))

(assert (=> d!25655 (= res!48752 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25655 (= lt!48310 e!62996)))

(declare-fun c!16327 () Bool)

(assert (=> d!25655 (= c!16327 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25655 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25655 (= (getCurrentListMap!451 (_keys!4141 newMap!16) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (index!3163 lt!47654) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48324)))

(declare-fun bm!9794 () Bool)

(assert (=> bm!9794 (= call!9796 (+!127 (ite c!16327 call!9794 (ite c!16330 call!9797 call!9799)) (ite (or c!16327 c!16330) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9795 () Bool)

(assert (=> bm!9795 (= call!9798 (contains!791 lt!48324 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9796 () Bool)

(assert (=> bm!9796 (= call!9799 call!9797)))

(assert (= (and d!25655 c!16327) b!96637))

(assert (= (and d!25655 (not c!16327)) b!96642))

(assert (= (and b!96642 c!16330) b!96646))

(assert (= (and b!96642 (not c!16330)) b!96653))

(assert (= (and b!96653 c!16331) b!96650))

(assert (= (and b!96653 (not c!16331)) b!96655))

(assert (= (or b!96650 b!96655) bm!9796))

(assert (= (or b!96646 bm!9796) bm!9791))

(assert (= (or b!96646 b!96650) bm!9793))

(assert (= (or b!96637 bm!9791) bm!9790))

(assert (= (or b!96637 bm!9793) bm!9794))

(assert (= (and d!25655 res!48752) b!96651))

(assert (= (and d!25655 c!16328) b!96636))

(assert (= (and d!25655 (not c!16328)) b!96635))

(assert (= (and d!25655 res!48750) b!96645))

(assert (= (and b!96645 res!48753) b!96647))

(assert (= (and b!96645 (not res!48756)) b!96649))

(assert (= (and b!96649 res!48754) b!96641))

(assert (= (and b!96645 res!48755) b!96652))

(assert (= (and b!96652 c!16329) b!96644))

(assert (= (and b!96652 (not c!16329)) b!96639))

(assert (= (and b!96644 res!48751) b!96638))

(assert (= (or b!96644 b!96639) bm!9795))

(assert (= (and b!96652 res!48757) b!96640))

(assert (= (and b!96640 c!16326) b!96648))

(assert (= (and b!96640 (not c!16326)) b!96643))

(assert (= (and b!96648 res!48758) b!96654))

(assert (= (or b!96648 b!96643) bm!9792))

(declare-fun b_lambda!4273 () Bool)

(assert (=> (not b_lambda!4273) (not b!96641)))

(assert (=> b!96641 t!5505))

(declare-fun b_and!5913 () Bool)

(assert (= b_and!5909 (and (=> t!5505 result!3225) b_and!5913)))

(assert (=> b!96641 t!5507))

(declare-fun b_and!5915 () Bool)

(assert (= b_and!5911 (and (=> t!5507 result!3227) b_and!5915)))

(declare-fun m!105197 () Bool)

(assert (=> bm!9792 m!105197))

(declare-fun m!105199 () Bool)

(assert (=> b!96654 m!105199))

(assert (=> b!96649 m!103867))

(assert (=> b!96649 m!103867))

(declare-fun m!105201 () Bool)

(assert (=> b!96649 m!105201))

(declare-fun m!105203 () Bool)

(assert (=> b!96637 m!105203))

(assert (=> d!25655 m!103855))

(assert (=> b!96641 m!103867))

(declare-fun m!105205 () Bool)

(assert (=> b!96641 m!105205))

(assert (=> b!96641 m!103989))

(assert (=> b!96641 m!103867))

(declare-fun m!105207 () Bool)

(assert (=> b!96641 m!105207))

(assert (=> b!96641 m!103989))

(declare-fun m!105209 () Bool)

(assert (=> b!96641 m!105209))

(assert (=> b!96641 m!105207))

(declare-fun m!105211 () Bool)

(assert (=> bm!9794 m!105211))

(declare-fun m!105213 () Bool)

(assert (=> bm!9795 m!105213))

(declare-fun m!105215 () Bool)

(assert (=> b!96636 m!105215))

(declare-fun m!105217 () Bool)

(assert (=> b!96636 m!105217))

(declare-fun m!105219 () Bool)

(assert (=> b!96636 m!105219))

(declare-fun m!105221 () Bool)

(assert (=> b!96636 m!105221))

(declare-fun m!105223 () Bool)

(assert (=> b!96636 m!105223))

(declare-fun m!105225 () Bool)

(assert (=> b!96636 m!105225))

(declare-fun m!105227 () Bool)

(assert (=> b!96636 m!105227))

(declare-fun m!105229 () Bool)

(assert (=> b!96636 m!105229))

(declare-fun m!105231 () Bool)

(assert (=> b!96636 m!105231))

(declare-fun m!105233 () Bool)

(assert (=> b!96636 m!105233))

(assert (=> b!96636 m!105231))

(declare-fun m!105235 () Bool)

(assert (=> b!96636 m!105235))

(declare-fun m!105237 () Bool)

(assert (=> b!96636 m!105237))

(declare-fun m!105239 () Bool)

(assert (=> b!96636 m!105239))

(assert (=> b!96636 m!105237))

(assert (=> b!96636 m!105227))

(assert (=> b!96636 m!105215))

(declare-fun m!105241 () Bool)

(assert (=> b!96636 m!105241))

(declare-fun m!105243 () Bool)

(assert (=> b!96636 m!105243))

(assert (=> b!96636 m!103867))

(declare-fun m!105245 () Bool)

(assert (=> b!96636 m!105245))

(assert (=> b!96647 m!103867))

(assert (=> b!96647 m!103867))

(assert (=> b!96647 m!103869))

(assert (=> bm!9790 m!105241))

(assert (=> b!96651 m!103867))

(assert (=> b!96651 m!103867))

(assert (=> b!96651 m!103869))

(declare-fun m!105247 () Bool)

(assert (=> b!96638 m!105247))

(assert (=> b!96170 d!25655))

(declare-fun d!25657 () Bool)

(declare-fun res!48759 () Bool)

(declare-fun e!63005 () Bool)

(assert (=> d!25657 (=> res!48759 e!63005)))

(assert (=> d!25657 (= res!48759 (= (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25657 (= (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!63005)))

(declare-fun b!96656 () Bool)

(declare-fun e!63006 () Bool)

(assert (=> b!96656 (= e!63005 e!63006)))

(declare-fun res!48760 () Bool)

(assert (=> b!96656 (=> (not res!48760) (not e!63006))))

(assert (=> b!96656 (= res!48760 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96657 () Bool)

(assert (=> b!96657 (= e!63006 (arrayContainsKey!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25657 (not res!48759)) b!96656))

(assert (= (and b!96656 res!48760) b!96657))

(assert (=> d!25657 m!105093))

(assert (=> b!96657 m!103459))

(declare-fun m!105249 () Bool)

(assert (=> b!96657 m!105249))

(assert (=> b!95914 d!25657))

(declare-fun d!25659 () Bool)

(assert (=> d!25659 (= (get!1277 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96116 d!25659))

(declare-fun d!25661 () Bool)

(declare-fun e!63007 () Bool)

(assert (=> d!25661 e!63007))

(declare-fun res!48762 () Bool)

(assert (=> d!25661 (=> (not res!48762) (not e!63007))))

(declare-fun lt!48327 () ListLongMap!1507)

(assert (=> d!25661 (= res!48762 (contains!791 lt!48327 (_1!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun lt!48325 () List!1580)

(assert (=> d!25661 (= lt!48327 (ListLongMap!1508 lt!48325))))

(declare-fun lt!48326 () Unit!2865)

(declare-fun lt!48328 () Unit!2865)

(assert (=> d!25661 (= lt!48326 lt!48328)))

(assert (=> d!25661 (= (getValueByKey!147 lt!48325 (_1!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25661 (= lt!48328 (lemmaContainsTupThenGetReturnValue!66 lt!48325 (_1!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25661 (= lt!48325 (insertStrictlySorted!69 (toList!769 (ite c!16140 call!9722 (ite c!16143 call!9725 call!9727))) (_1!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25661 (= (+!127 (ite c!16140 call!9722 (ite c!16143 call!9725 call!9727)) (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) lt!48327)))

(declare-fun b!96658 () Bool)

(declare-fun res!48761 () Bool)

(assert (=> b!96658 (=> (not res!48761) (not e!63007))))

(assert (=> b!96658 (= res!48761 (= (getValueByKey!147 (toList!769 lt!48327) (_1!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))))

(declare-fun b!96659 () Bool)

(assert (=> b!96659 (= e!63007 (contains!793 (toList!769 lt!48327) (ite (or c!16140 c!16143) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (= (and d!25661 res!48762) b!96658))

(assert (= (and b!96658 res!48761) b!96659))

(declare-fun m!105251 () Bool)

(assert (=> d!25661 m!105251))

(declare-fun m!105253 () Bool)

(assert (=> d!25661 m!105253))

(declare-fun m!105255 () Bool)

(assert (=> d!25661 m!105255))

(declare-fun m!105257 () Bool)

(assert (=> d!25661 m!105257))

(declare-fun m!105259 () Bool)

(assert (=> b!96658 m!105259))

(declare-fun m!105261 () Bool)

(assert (=> b!96659 m!105261))

(assert (=> bm!9722 d!25661))

(declare-fun d!25663 () Bool)

(declare-fun e!63008 () Bool)

(assert (=> d!25663 e!63008))

(declare-fun res!48764 () Bool)

(assert (=> d!25663 (=> (not res!48764) (not e!63008))))

(declare-fun lt!48331 () ListLongMap!1507)

(assert (=> d!25663 (= res!48764 (contains!791 lt!48331 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun lt!48329 () List!1580)

(assert (=> d!25663 (= lt!48331 (ListLongMap!1508 lt!48329))))

(declare-fun lt!48330 () Unit!2865)

(declare-fun lt!48332 () Unit!2865)

(assert (=> d!25663 (= lt!48330 lt!48332)))

(assert (=> d!25663 (= (getValueByKey!147 lt!48329 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25663 (= lt!48332 (lemmaContainsTupThenGetReturnValue!66 lt!48329 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25663 (= lt!48329 (insertStrictlySorted!69 (toList!769 call!9724) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25663 (= (+!127 call!9724 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) lt!48331)))

(declare-fun b!96660 () Bool)

(declare-fun res!48763 () Bool)

(assert (=> b!96660 (=> (not res!48763) (not e!63008))))

(assert (=> b!96660 (= res!48763 (= (getValueByKey!147 (toList!769 lt!48331) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun b!96661 () Bool)

(assert (=> b!96661 (= e!63008 (contains!793 (toList!769 lt!48331) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(assert (= (and d!25663 res!48764) b!96660))

(assert (= (and b!96660 res!48763) b!96661))

(declare-fun m!105263 () Bool)

(assert (=> d!25663 m!105263))

(declare-fun m!105265 () Bool)

(assert (=> d!25663 m!105265))

(declare-fun m!105267 () Bool)

(assert (=> d!25663 m!105267))

(declare-fun m!105269 () Bool)

(assert (=> d!25663 m!105269))

(declare-fun m!105271 () Bool)

(assert (=> b!96660 m!105271))

(declare-fun m!105273 () Bool)

(assert (=> b!96661 m!105273))

(assert (=> b!96009 d!25663))

(declare-fun d!25665 () Bool)

(assert (=> d!25665 (= (apply!91 lt!48000 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!48000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3991 () Bool)

(assert (= bs!3991 d!25665))

(declare-fun m!105275 () Bool)

(assert (=> bs!3991 m!105275))

(assert (=> bs!3991 m!105275))

(declare-fun m!105277 () Bool)

(assert (=> bs!3991 m!105277))

(assert (=> b!96097 d!25665))

(declare-fun b!96662 () Bool)

(declare-fun e!63012 () Bool)

(assert (=> b!96662 (= e!63012 (contains!792 Nil!1578 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun bm!9797 () Bool)

(declare-fun call!9800 () Bool)

(declare-fun c!16332 () Bool)

(assert (=> bm!9797 (= call!9800 (arrayNoDuplicates!0 (_keys!4141 (_2!1169 lt!47642)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16332 (Cons!1577 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000) Nil!1578) Nil!1578)))))

(declare-fun b!96663 () Bool)

(declare-fun e!63009 () Bool)

(assert (=> b!96663 (= e!63009 call!9800)))

(declare-fun b!96664 () Bool)

(declare-fun e!63011 () Bool)

(assert (=> b!96664 (= e!63011 e!63009)))

(assert (=> b!96664 (= c!16332 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun b!96665 () Bool)

(assert (=> b!96665 (= e!63009 call!9800)))

(declare-fun d!25667 () Bool)

(declare-fun res!48765 () Bool)

(declare-fun e!63010 () Bool)

(assert (=> d!25667 (=> res!48765 e!63010)))

(assert (=> d!25667 (= res!48765 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(assert (=> d!25667 (= (arrayNoDuplicates!0 (_keys!4141 (_2!1169 lt!47642)) #b00000000000000000000000000000000 Nil!1578) e!63010)))

(declare-fun b!96666 () Bool)

(assert (=> b!96666 (= e!63010 e!63011)))

(declare-fun res!48766 () Bool)

(assert (=> b!96666 (=> (not res!48766) (not e!63011))))

(assert (=> b!96666 (= res!48766 (not e!63012))))

(declare-fun res!48767 () Bool)

(assert (=> b!96666 (=> (not res!48767) (not e!63012))))

(assert (=> b!96666 (= res!48767 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(assert (= (and d!25667 (not res!48765)) b!96666))

(assert (= (and b!96666 res!48767) b!96662))

(assert (= (and b!96666 res!48766) b!96664))

(assert (= (and b!96664 c!16332) b!96665))

(assert (= (and b!96664 (not c!16332)) b!96663))

(assert (= (or b!96665 b!96663) bm!9797))

(assert (=> b!96662 m!104457))

(assert (=> b!96662 m!104457))

(declare-fun m!105279 () Bool)

(assert (=> b!96662 m!105279))

(assert (=> bm!9797 m!104457))

(declare-fun m!105281 () Bool)

(assert (=> bm!9797 m!105281))

(assert (=> b!96664 m!104457))

(assert (=> b!96664 m!104457))

(assert (=> b!96664 m!104459))

(assert (=> b!96666 m!104457))

(assert (=> b!96666 m!104457))

(assert (=> b!96666 m!104459))

(assert (=> b!95977 d!25667))

(assert (=> d!25319 d!25423))

(assert (=> bm!9707 d!25301))

(assert (=> bm!9711 d!25577))

(declare-fun d!25669 () Bool)

(declare-fun e!63013 () Bool)

(assert (=> d!25669 e!63013))

(declare-fun res!48768 () Bool)

(assert (=> d!25669 (=> res!48768 e!63013)))

(declare-fun lt!48334 () Bool)

(assert (=> d!25669 (= res!48768 (not lt!48334))))

(declare-fun lt!48335 () Bool)

(assert (=> d!25669 (= lt!48334 lt!48335)))

(declare-fun lt!48336 () Unit!2865)

(declare-fun e!63014 () Unit!2865)

(assert (=> d!25669 (= lt!48336 e!63014)))

(declare-fun c!16333 () Bool)

(assert (=> d!25669 (= c!16333 lt!48335)))

(assert (=> d!25669 (= lt!48335 (containsKey!151 (toList!769 lt!47929) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25669 (= (contains!791 lt!47929 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) lt!48334)))

(declare-fun b!96667 () Bool)

(declare-fun lt!48333 () Unit!2865)

(assert (=> b!96667 (= e!63014 lt!48333)))

(assert (=> b!96667 (= lt!48333 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47929) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96667 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96668 () Bool)

(declare-fun Unit!2907 () Unit!2865)

(assert (=> b!96668 (= e!63014 Unit!2907)))

(declare-fun b!96669 () Bool)

(assert (=> b!96669 (= e!63013 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25669 c!16333) b!96667))

(assert (= (and d!25669 (not c!16333)) b!96668))

(assert (= (and d!25669 (not res!48768)) b!96669))

(assert (=> d!25669 m!103867))

(declare-fun m!105283 () Bool)

(assert (=> d!25669 m!105283))

(assert (=> b!96667 m!103867))

(declare-fun m!105285 () Bool)

(assert (=> b!96667 m!105285))

(assert (=> b!96667 m!103867))

(assert (=> b!96667 m!105105))

(assert (=> b!96667 m!105105))

(declare-fun m!105287 () Bool)

(assert (=> b!96667 m!105287))

(assert (=> b!96669 m!103867))

(assert (=> b!96669 m!105105))

(assert (=> b!96669 m!105105))

(assert (=> b!96669 m!105287))

(assert (=> b!96000 d!25669))

(declare-fun bm!9798 () Bool)

(declare-fun call!9802 () ListLongMap!1507)

(assert (=> bm!9798 (= call!9802 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun b!96670 () Bool)

(declare-fun e!63020 () Unit!2865)

(declare-fun Unit!2908 () Unit!2865)

(assert (=> b!96670 (= e!63020 Unit!2908)))

(declare-fun bm!9799 () Bool)

(declare-fun call!9805 () ListLongMap!1507)

(assert (=> bm!9799 (= call!9805 call!9802)))

(declare-fun b!96671 () Bool)

(declare-fun lt!48355 () Unit!2865)

(assert (=> b!96671 (= e!63020 lt!48355)))

(declare-fun lt!48349 () ListLongMap!1507)

(assert (=> b!96671 (= lt!48349 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun lt!48356 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48356 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48343 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48343 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000))))

(declare-fun lt!48340 () Unit!2865)

(assert (=> b!96671 (= lt!48340 (addStillContains!67 lt!48349 lt!48356 (zeroValue!2341 (_2!1169 lt!47642)) lt!48343))))

(assert (=> b!96671 (contains!791 (+!127 lt!48349 (tuple2!2315 lt!48356 (zeroValue!2341 (_2!1169 lt!47642)))) lt!48343)))

(declare-fun lt!48353 () Unit!2865)

(assert (=> b!96671 (= lt!48353 lt!48340)))

(declare-fun lt!48352 () ListLongMap!1507)

(assert (=> b!96671 (= lt!48352 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun lt!48337 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48337 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48338 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48338 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000))))

(declare-fun lt!48354 () Unit!2865)

(assert (=> b!96671 (= lt!48354 (addApplyDifferent!67 lt!48352 lt!48337 (minValue!2341 (_2!1169 lt!47642)) lt!48338))))

(assert (=> b!96671 (= (apply!91 (+!127 lt!48352 (tuple2!2315 lt!48337 (minValue!2341 (_2!1169 lt!47642)))) lt!48338) (apply!91 lt!48352 lt!48338))))

(declare-fun lt!48339 () Unit!2865)

(assert (=> b!96671 (= lt!48339 lt!48354)))

(declare-fun lt!48357 () ListLongMap!1507)

(assert (=> b!96671 (= lt!48357 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun lt!48351 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48351 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48342 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48342 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000))))

(declare-fun lt!48346 () Unit!2865)

(assert (=> b!96671 (= lt!48346 (addApplyDifferent!67 lt!48357 lt!48351 (zeroValue!2341 (_2!1169 lt!47642)) lt!48342))))

(assert (=> b!96671 (= (apply!91 (+!127 lt!48357 (tuple2!2315 lt!48351 (zeroValue!2341 (_2!1169 lt!47642)))) lt!48342) (apply!91 lt!48357 lt!48342))))

(declare-fun lt!48347 () Unit!2865)

(assert (=> b!96671 (= lt!48347 lt!48346)))

(declare-fun lt!48348 () ListLongMap!1507)

(assert (=> b!96671 (= lt!48348 (getCurrentListMapNoExtraKeys!91 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))))))

(declare-fun lt!48345 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48345 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48350 () (_ BitVec 64))

(assert (=> b!96671 (= lt!48350 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000))))

(assert (=> b!96671 (= lt!48355 (addApplyDifferent!67 lt!48348 lt!48345 (minValue!2341 (_2!1169 lt!47642)) lt!48350))))

(assert (=> b!96671 (= (apply!91 (+!127 lt!48348 (tuple2!2315 lt!48345 (minValue!2341 (_2!1169 lt!47642)))) lt!48350) (apply!91 lt!48348 lt!48350))))

(declare-fun b!96672 () Bool)

(declare-fun e!63019 () ListLongMap!1507)

(declare-fun call!9804 () ListLongMap!1507)

(assert (=> b!96672 (= e!63019 (+!127 call!9804 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (_2!1169 lt!47642)))))))

(declare-fun b!96674 () Bool)

(declare-fun e!63021 () Bool)

(declare-fun call!9806 () Bool)

(assert (=> b!96674 (= e!63021 (not call!9806))))

(declare-fun b!96675 () Bool)

(declare-fun e!63017 () Bool)

(declare-fun e!63018 () Bool)

(assert (=> b!96675 (= e!63017 e!63018)))

(declare-fun c!16334 () Bool)

(assert (=> b!96675 (= c!16334 (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96676 () Bool)

(declare-fun e!63027 () Bool)

(declare-fun lt!48358 () ListLongMap!1507)

(assert (=> b!96676 (= e!63027 (= (apply!91 lt!48358 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (_values!2439 (_2!1169 lt!47642))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 (_2!1169 lt!47642)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (_values!2439 (_2!1169 lt!47642)))))))

(assert (=> b!96676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(declare-fun b!96677 () Bool)

(declare-fun e!63023 () ListLongMap!1507)

(assert (=> b!96677 (= e!63019 e!63023)))

(declare-fun c!16338 () Bool)

(assert (=> b!96677 (= c!16338 (and (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96678 () Bool)

(declare-fun call!9803 () Bool)

(assert (=> b!96678 (= e!63018 (not call!9803))))

(declare-fun b!96679 () Bool)

(declare-fun e!63024 () Bool)

(assert (=> b!96679 (= e!63021 e!63024)))

(declare-fun res!48770 () Bool)

(assert (=> b!96679 (= res!48770 call!9806)))

(assert (=> b!96679 (=> (not res!48770) (not e!63024))))

(declare-fun b!96680 () Bool)

(declare-fun res!48774 () Bool)

(assert (=> b!96680 (=> (not res!48774) (not e!63017))))

(declare-fun e!63015 () Bool)

(assert (=> b!96680 (= res!48774 e!63015)))

(declare-fun res!48775 () Bool)

(assert (=> b!96680 (=> res!48775 e!63015)))

(declare-fun e!63022 () Bool)

(assert (=> b!96680 (= res!48775 (not e!63022))))

(declare-fun res!48772 () Bool)

(assert (=> b!96680 (=> (not res!48772) (not e!63022))))

(assert (=> b!96680 (= res!48772 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(declare-fun bm!9800 () Bool)

(assert (=> bm!9800 (= call!9803 (contains!791 lt!48358 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96681 () Bool)

(declare-fun call!9801 () ListLongMap!1507)

(assert (=> b!96681 (= e!63023 call!9801)))

(declare-fun b!96682 () Bool)

(assert (=> b!96682 (= e!63022 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun b!96683 () Bool)

(declare-fun e!63016 () Bool)

(assert (=> b!96683 (= e!63018 e!63016)))

(declare-fun res!48777 () Bool)

(assert (=> b!96683 (= res!48777 call!9803)))

(assert (=> b!96683 (=> (not res!48777) (not e!63016))))

(declare-fun b!96684 () Bool)

(assert (=> b!96684 (= e!63015 e!63027)))

(declare-fun res!48773 () Bool)

(assert (=> b!96684 (=> (not res!48773) (not e!63027))))

(assert (=> b!96684 (= res!48773 (contains!791 lt!48358 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(assert (=> b!96684 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(declare-fun b!96685 () Bool)

(declare-fun e!63026 () ListLongMap!1507)

(assert (=> b!96685 (= e!63026 call!9801)))

(declare-fun b!96686 () Bool)

(declare-fun e!63025 () Bool)

(assert (=> b!96686 (= e!63025 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (_2!1169 lt!47642))) #b00000000000000000000000000000000)))))

(declare-fun b!96687 () Bool)

(declare-fun res!48776 () Bool)

(assert (=> b!96687 (=> (not res!48776) (not e!63017))))

(assert (=> b!96687 (= res!48776 e!63021)))

(declare-fun c!16337 () Bool)

(assert (=> b!96687 (= c!16337 (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96688 () Bool)

(declare-fun c!16339 () Bool)

(assert (=> b!96688 (= c!16339 (and (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96688 (= e!63023 e!63026)))

(declare-fun bm!9801 () Bool)

(assert (=> bm!9801 (= call!9801 call!9804)))

(declare-fun b!96689 () Bool)

(assert (=> b!96689 (= e!63016 (= (apply!91 lt!48358 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 (_2!1169 lt!47642))))))

(declare-fun b!96690 () Bool)

(declare-fun call!9807 () ListLongMap!1507)

(assert (=> b!96690 (= e!63026 call!9807)))

(declare-fun b!96673 () Bool)

(assert (=> b!96673 (= e!63024 (= (apply!91 lt!48358 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 (_2!1169 lt!47642))))))

(declare-fun d!25671 () Bool)

(assert (=> d!25671 e!63017))

(declare-fun res!48769 () Bool)

(assert (=> d!25671 (=> (not res!48769) (not e!63017))))

(assert (=> d!25671 (= res!48769 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))))

(declare-fun lt!48344 () ListLongMap!1507)

(assert (=> d!25671 (= lt!48358 lt!48344)))

(declare-fun lt!48341 () Unit!2865)

(assert (=> d!25671 (= lt!48341 e!63020)))

(declare-fun c!16336 () Bool)

(assert (=> d!25671 (= c!16336 e!63025)))

(declare-fun res!48771 () Bool)

(assert (=> d!25671 (=> (not res!48771) (not e!63025))))

(assert (=> d!25671 (= res!48771 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47642)))))))

(assert (=> d!25671 (= lt!48344 e!63019)))

(declare-fun c!16335 () Bool)

(assert (=> d!25671 (= c!16335 (and (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25671 (validMask!0 (mask!6540 (_2!1169 lt!47642)))))

(assert (=> d!25671 (= (getCurrentListMap!451 (_keys!4141 (_2!1169 lt!47642)) (_values!2439 (_2!1169 lt!47642)) (mask!6540 (_2!1169 lt!47642)) (extraKeys!2281 (_2!1169 lt!47642)) (zeroValue!2341 (_2!1169 lt!47642)) (minValue!2341 (_2!1169 lt!47642)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1169 lt!47642))) lt!48358)))

(declare-fun bm!9802 () Bool)

(assert (=> bm!9802 (= call!9804 (+!127 (ite c!16335 call!9802 (ite c!16338 call!9805 call!9807)) (ite (or c!16335 c!16338) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (_2!1169 lt!47642))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (_2!1169 lt!47642))))))))

(declare-fun bm!9803 () Bool)

(assert (=> bm!9803 (= call!9806 (contains!791 lt!48358 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9804 () Bool)

(assert (=> bm!9804 (= call!9807 call!9805)))

(assert (= (and d!25671 c!16335) b!96672))

(assert (= (and d!25671 (not c!16335)) b!96677))

(assert (= (and b!96677 c!16338) b!96681))

(assert (= (and b!96677 (not c!16338)) b!96688))

(assert (= (and b!96688 c!16339) b!96685))

(assert (= (and b!96688 (not c!16339)) b!96690))

(assert (= (or b!96685 b!96690) bm!9804))

(assert (= (or b!96681 bm!9804) bm!9799))

(assert (= (or b!96681 b!96685) bm!9801))

(assert (= (or b!96672 bm!9799) bm!9798))

(assert (= (or b!96672 bm!9801) bm!9802))

(assert (= (and d!25671 res!48771) b!96686))

(assert (= (and d!25671 c!16336) b!96671))

(assert (= (and d!25671 (not c!16336)) b!96670))

(assert (= (and d!25671 res!48769) b!96680))

(assert (= (and b!96680 res!48772) b!96682))

(assert (= (and b!96680 (not res!48775)) b!96684))

(assert (= (and b!96684 res!48773) b!96676))

(assert (= (and b!96680 res!48774) b!96687))

(assert (= (and b!96687 c!16337) b!96679))

(assert (= (and b!96687 (not c!16337)) b!96674))

(assert (= (and b!96679 res!48770) b!96673))

(assert (= (or b!96679 b!96674) bm!9803))

(assert (= (and b!96687 res!48776) b!96675))

(assert (= (and b!96675 c!16334) b!96683))

(assert (= (and b!96675 (not c!16334)) b!96678))

(assert (= (and b!96683 res!48777) b!96689))

(assert (= (or b!96683 b!96678) bm!9800))

(declare-fun b_lambda!4275 () Bool)

(assert (=> (not b_lambda!4275) (not b!96676)))

(declare-fun t!5509 () Bool)

(declare-fun tb!1897 () Bool)

(assert (=> (and b!95454 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 (_2!1169 lt!47642))) t!5509) tb!1897))

(declare-fun result!3229 () Bool)

(assert (=> tb!1897 (= result!3229 tp_is_empty!2617)))

(assert (=> b!96676 t!5509))

(declare-fun b_and!5917 () Bool)

(assert (= b_and!5913 (and (=> t!5509 result!3229) b_and!5917)))

(declare-fun tb!1899 () Bool)

(declare-fun t!5511 () Bool)

(assert (=> (and b!95447 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (_2!1169 lt!47642))) t!5511) tb!1899))

(declare-fun result!3231 () Bool)

(assert (= result!3231 result!3229))

(assert (=> b!96676 t!5511))

(declare-fun b_and!5919 () Bool)

(assert (= b_and!5915 (and (=> t!5511 result!3231) b_and!5919)))

(declare-fun m!105289 () Bool)

(assert (=> bm!9800 m!105289))

(declare-fun m!105291 () Bool)

(assert (=> b!96689 m!105291))

(assert (=> b!96684 m!104457))

(assert (=> b!96684 m!104457))

(declare-fun m!105293 () Bool)

(assert (=> b!96684 m!105293))

(declare-fun m!105295 () Bool)

(assert (=> b!96672 m!105295))

(declare-fun m!105297 () Bool)

(assert (=> d!25671 m!105297))

(assert (=> b!96676 m!104457))

(declare-fun m!105299 () Bool)

(assert (=> b!96676 m!105299))

(declare-fun m!105301 () Bool)

(assert (=> b!96676 m!105301))

(assert (=> b!96676 m!104457))

(declare-fun m!105303 () Bool)

(assert (=> b!96676 m!105303))

(assert (=> b!96676 m!105301))

(declare-fun m!105305 () Bool)

(assert (=> b!96676 m!105305))

(assert (=> b!96676 m!105303))

(declare-fun m!105307 () Bool)

(assert (=> bm!9802 m!105307))

(declare-fun m!105309 () Bool)

(assert (=> bm!9803 m!105309))

(declare-fun m!105311 () Bool)

(assert (=> b!96671 m!105311))

(declare-fun m!105313 () Bool)

(assert (=> b!96671 m!105313))

(declare-fun m!105315 () Bool)

(assert (=> b!96671 m!105315))

(declare-fun m!105317 () Bool)

(assert (=> b!96671 m!105317))

(declare-fun m!105319 () Bool)

(assert (=> b!96671 m!105319))

(declare-fun m!105321 () Bool)

(assert (=> b!96671 m!105321))

(declare-fun m!105323 () Bool)

(assert (=> b!96671 m!105323))

(declare-fun m!105325 () Bool)

(assert (=> b!96671 m!105325))

(declare-fun m!105327 () Bool)

(assert (=> b!96671 m!105327))

(declare-fun m!105329 () Bool)

(assert (=> b!96671 m!105329))

(assert (=> b!96671 m!105327))

(declare-fun m!105331 () Bool)

(assert (=> b!96671 m!105331))

(declare-fun m!105333 () Bool)

(assert (=> b!96671 m!105333))

(declare-fun m!105335 () Bool)

(assert (=> b!96671 m!105335))

(assert (=> b!96671 m!105333))

(assert (=> b!96671 m!105323))

(assert (=> b!96671 m!105311))

(declare-fun m!105337 () Bool)

(assert (=> b!96671 m!105337))

(declare-fun m!105339 () Bool)

(assert (=> b!96671 m!105339))

(assert (=> b!96671 m!104457))

(declare-fun m!105341 () Bool)

(assert (=> b!96671 m!105341))

(assert (=> b!96682 m!104457))

(assert (=> b!96682 m!104457))

(assert (=> b!96682 m!104459))

(assert (=> bm!9798 m!105337))

(assert (=> b!96686 m!104457))

(assert (=> b!96686 m!104457))

(assert (=> b!96686 m!104459))

(declare-fun m!105343 () Bool)

(assert (=> b!96673 m!105343))

(assert (=> d!25309 d!25671))

(declare-fun d!25673 () Bool)

(assert (=> d!25673 (= (get!1278 (getValueByKey!147 (toList!769 lt!47721) lt!47723)) (v!2775 (getValueByKey!147 (toList!769 lt!47721) lt!47723)))))

(assert (=> d!25249 d!25673))

(declare-fun b!96692 () Bool)

(declare-fun e!63028 () Option!153)

(declare-fun e!63029 () Option!153)

(assert (=> b!96692 (= e!63028 e!63029)))

(declare-fun c!16341 () Bool)

(assert (=> b!96692 (= c!16341 (and ((_ is Cons!1576) (toList!769 lt!47721)) (not (= (_1!1168 (h!2169 (toList!769 lt!47721))) lt!47723))))))

(declare-fun b!96693 () Bool)

(assert (=> b!96693 (= e!63029 (getValueByKey!147 (t!5493 (toList!769 lt!47721)) lt!47723))))

(declare-fun b!96691 () Bool)

(assert (=> b!96691 (= e!63028 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47721)))))))

(declare-fun b!96694 () Bool)

(assert (=> b!96694 (= e!63029 None!151)))

(declare-fun d!25675 () Bool)

(declare-fun c!16340 () Bool)

(assert (=> d!25675 (= c!16340 (and ((_ is Cons!1576) (toList!769 lt!47721)) (= (_1!1168 (h!2169 (toList!769 lt!47721))) lt!47723)))))

(assert (=> d!25675 (= (getValueByKey!147 (toList!769 lt!47721) lt!47723) e!63028)))

(assert (= (and d!25675 c!16340) b!96691))

(assert (= (and d!25675 (not c!16340)) b!96692))

(assert (= (and b!96692 c!16341) b!96693))

(assert (= (and b!96692 (not c!16341)) b!96694))

(declare-fun m!105345 () Bool)

(assert (=> b!96693 m!105345))

(assert (=> d!25249 d!25675))

(declare-fun d!25677 () Bool)

(declare-fun e!63030 () Bool)

(assert (=> d!25677 e!63030))

(declare-fun res!48778 () Bool)

(assert (=> d!25677 (=> res!48778 e!63030)))

(declare-fun lt!48360 () Bool)

(assert (=> d!25677 (= res!48778 (not lt!48360))))

(declare-fun lt!48361 () Bool)

(assert (=> d!25677 (= lt!48360 lt!48361)))

(declare-fun lt!48362 () Unit!2865)

(declare-fun e!63031 () Unit!2865)

(assert (=> d!25677 (= lt!48362 e!63031)))

(declare-fun c!16342 () Bool)

(assert (=> d!25677 (= c!16342 lt!48361)))

(assert (=> d!25677 (= lt!48361 (containsKey!151 (toList!769 lt!48000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25677 (= (contains!791 lt!48000 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48360)))

(declare-fun b!96695 () Bool)

(declare-fun lt!48359 () Unit!2865)

(assert (=> b!96695 (= e!63031 lt!48359)))

(assert (=> b!96695 (= lt!48359 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!48000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96695 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96696 () Bool)

(declare-fun Unit!2909 () Unit!2865)

(assert (=> b!96696 (= e!63031 Unit!2909)))

(declare-fun b!96697 () Bool)

(assert (=> b!96697 (= e!63030 (isDefined!101 (getValueByKey!147 (toList!769 lt!48000) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25677 c!16342) b!96695))

(assert (= (and d!25677 (not c!16342)) b!96696))

(assert (= (and d!25677 (not res!48778)) b!96697))

(declare-fun m!105347 () Bool)

(assert (=> d!25677 m!105347))

(declare-fun m!105349 () Bool)

(assert (=> b!96695 m!105349))

(assert (=> b!96695 m!105275))

(assert (=> b!96695 m!105275))

(declare-fun m!105351 () Bool)

(assert (=> b!96695 m!105351))

(assert (=> b!96697 m!105275))

(assert (=> b!96697 m!105275))

(assert (=> b!96697 m!105351))

(assert (=> bm!9733 d!25677))

(declare-fun d!25679 () Bool)

(assert (=> d!25679 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!48363 () Unit!2865)

(assert (=> d!25679 (= lt!48363 (choose!585 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63032 () Bool)

(assert (=> d!25679 e!63032))

(declare-fun res!48779 () Bool)

(assert (=> d!25679 (=> (not res!48779) (not e!63032))))

(assert (=> d!25679 (= res!48779 (isStrictlySorted!298 (toList!769 lt!47731)))))

(assert (=> d!25679 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000) lt!48363)))

(declare-fun b!96698 () Bool)

(assert (=> b!96698 (= e!63032 (containsKey!151 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25679 res!48779) b!96698))

(assert (=> d!25679 m!103883))

(assert (=> d!25679 m!103883))

(assert (=> d!25679 m!103885))

(declare-fun m!105353 () Bool)

(assert (=> d!25679 m!105353))

(declare-fun m!105355 () Bool)

(assert (=> d!25679 m!105355))

(assert (=> b!96698 m!103879))

(assert (=> b!95915 d!25679))

(assert (=> b!95915 d!25413))

(assert (=> b!95915 d!25415))

(declare-fun d!25681 () Bool)

(declare-fun e!63033 () Bool)

(assert (=> d!25681 e!63033))

(declare-fun res!48781 () Bool)

(assert (=> d!25681 (=> (not res!48781) (not e!63033))))

(declare-fun lt!48366 () ListLongMap!1507)

(assert (=> d!25681 (= res!48781 (contains!791 lt!48366 (_1!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun lt!48364 () List!1580)

(assert (=> d!25681 (= lt!48366 (ListLongMap!1508 lt!48364))))

(declare-fun lt!48365 () Unit!2865)

(declare-fun lt!48367 () Unit!2865)

(assert (=> d!25681 (= lt!48365 lt!48367)))

(assert (=> d!25681 (= (getValueByKey!147 lt!48364 (_1!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25681 (= lt!48367 (lemmaContainsTupThenGetReturnValue!66 lt!48364 (_1!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25681 (= lt!48364 (insertStrictlySorted!69 (toList!769 (ite c!16134 call!9715 (ite c!16137 call!9718 call!9720))) (_1!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25681 (= (+!127 (ite c!16134 call!9715 (ite c!16137 call!9718 call!9720)) (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) lt!48366)))

(declare-fun b!96699 () Bool)

(declare-fun res!48780 () Bool)

(assert (=> b!96699 (=> (not res!48780) (not e!63033))))

(assert (=> b!96699 (= res!48780 (= (getValueByKey!147 (toList!769 lt!48366) (_1!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!152 (_2!1168 (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))))

(declare-fun b!96700 () Bool)

(assert (=> b!96700 (= e!63033 (contains!793 (toList!769 lt!48366) (ite (or c!16134 c!16137) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (= (and d!25681 res!48781) b!96699))

(assert (= (and b!96699 res!48780) b!96700))

(declare-fun m!105357 () Bool)

(assert (=> d!25681 m!105357))

(declare-fun m!105359 () Bool)

(assert (=> d!25681 m!105359))

(declare-fun m!105361 () Bool)

(assert (=> d!25681 m!105361))

(declare-fun m!105363 () Bool)

(assert (=> d!25681 m!105363))

(declare-fun m!105365 () Bool)

(assert (=> b!96699 m!105365))

(declare-fun m!105367 () Bool)

(assert (=> b!96700 m!105367))

(assert (=> bm!9715 d!25681))

(declare-fun d!25683 () Bool)

(declare-fun e!63034 () Bool)

(assert (=> d!25683 e!63034))

(declare-fun res!48783 () Bool)

(assert (=> d!25683 (=> (not res!48783) (not e!63034))))

(declare-fun lt!48370 () ListLongMap!1507)

(assert (=> d!25683 (= res!48783 (contains!791 lt!48370 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun lt!48368 () List!1580)

(assert (=> d!25683 (= lt!48370 (ListLongMap!1508 lt!48368))))

(declare-fun lt!48369 () Unit!2865)

(declare-fun lt!48371 () Unit!2865)

(assert (=> d!25683 (= lt!48369 lt!48371)))

(assert (=> d!25683 (= (getValueByKey!147 lt!48368 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25683 (= lt!48371 (lemmaContainsTupThenGetReturnValue!66 lt!48368 (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25683 (= lt!48368 (insertStrictlySorted!69 (toList!769 call!9717) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25683 (= (+!127 call!9717 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) lt!48370)))

(declare-fun b!96701 () Bool)

(declare-fun res!48782 () Bool)

(assert (=> b!96701 (=> (not res!48782) (not e!63034))))

(assert (=> b!96701 (= res!48782 (= (getValueByKey!147 (toList!769 lt!48370) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!152 (_2!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun b!96702 () Bool)

(assert (=> b!96702 (= e!63034 (contains!793 (toList!769 lt!48370) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(assert (= (and d!25683 res!48783) b!96701))

(assert (= (and b!96701 res!48782) b!96702))

(declare-fun m!105369 () Bool)

(assert (=> d!25683 m!105369))

(declare-fun m!105371 () Bool)

(assert (=> d!25683 m!105371))

(declare-fun m!105373 () Bool)

(assert (=> d!25683 m!105373))

(declare-fun m!105375 () Bool)

(assert (=> d!25683 m!105375))

(declare-fun m!105377 () Bool)

(assert (=> b!96701 m!105377))

(declare-fun m!105379 () Bool)

(assert (=> b!96702 m!105379))

(assert (=> b!95988 d!25683))

(declare-fun d!25685 () Bool)

(declare-fun e!63035 () Bool)

(assert (=> d!25685 e!63035))

(declare-fun res!48784 () Bool)

(assert (=> d!25685 (=> res!48784 e!63035)))

(declare-fun lt!48373 () Bool)

(assert (=> d!25685 (= res!48784 (not lt!48373))))

(declare-fun lt!48374 () Bool)

(assert (=> d!25685 (= lt!48373 lt!48374)))

(declare-fun lt!48375 () Unit!2865)

(declare-fun e!63036 () Unit!2865)

(assert (=> d!25685 (= lt!48375 e!63036)))

(declare-fun c!16343 () Bool)

(assert (=> d!25685 (= c!16343 lt!48374)))

(assert (=> d!25685 (= lt!48374 (containsKey!151 (toList!769 lt!47788) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25685 (= (contains!791 lt!47788 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48373)))

(declare-fun b!96703 () Bool)

(declare-fun lt!48372 () Unit!2865)

(assert (=> b!96703 (= e!63036 lt!48372)))

(assert (=> b!96703 (= lt!48372 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47788) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96703 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96704 () Bool)

(declare-fun Unit!2910 () Unit!2865)

(assert (=> b!96704 (= e!63036 Unit!2910)))

(declare-fun b!96705 () Bool)

(assert (=> b!96705 (= e!63035 (isDefined!101 (getValueByKey!147 (toList!769 lt!47788) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25685 c!16343) b!96703))

(assert (= (and d!25685 (not c!16343)) b!96704))

(assert (= (and d!25685 (not res!48784)) b!96705))

(declare-fun m!105381 () Bool)

(assert (=> d!25685 m!105381))

(declare-fun m!105383 () Bool)

(assert (=> b!96703 m!105383))

(declare-fun m!105385 () Bool)

(assert (=> b!96703 m!105385))

(assert (=> b!96703 m!105385))

(declare-fun m!105387 () Bool)

(assert (=> b!96703 m!105387))

(assert (=> b!96705 m!105385))

(assert (=> b!96705 m!105385))

(assert (=> b!96705 m!105387))

(assert (=> d!25257 d!25685))

(assert (=> d!25257 d!25213))

(declare-fun d!25687 () Bool)

(declare-fun e!63037 () Bool)

(assert (=> d!25687 e!63037))

(declare-fun res!48785 () Bool)

(assert (=> d!25687 (=> res!48785 e!63037)))

(declare-fun lt!48377 () Bool)

(assert (=> d!25687 (= res!48785 (not lt!48377))))

(declare-fun lt!48378 () Bool)

(assert (=> d!25687 (= lt!48377 lt!48378)))

(declare-fun lt!48379 () Unit!2865)

(declare-fun e!63038 () Unit!2865)

(assert (=> d!25687 (= lt!48379 e!63038)))

(declare-fun c!16344 () Bool)

(assert (=> d!25687 (= c!16344 lt!48378)))

(assert (=> d!25687 (= lt!48378 (containsKey!151 (toList!769 lt!47951) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25687 (= (contains!791 lt!47951 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) lt!48377)))

(declare-fun b!96706 () Bool)

(declare-fun lt!48376 () Unit!2865)

(assert (=> b!96706 (= e!63038 lt!48376)))

(assert (=> b!96706 (= lt!48376 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47951) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96706 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96707 () Bool)

(declare-fun Unit!2911 () Unit!2865)

(assert (=> b!96707 (= e!63038 Unit!2911)))

(declare-fun b!96708 () Bool)

(assert (=> b!96708 (= e!63037 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25687 c!16344) b!96706))

(assert (= (and d!25687 (not c!16344)) b!96707))

(assert (= (and d!25687 (not res!48785)) b!96708))

(assert (=> d!25687 m!103867))

(declare-fun m!105389 () Bool)

(assert (=> d!25687 m!105389))

(assert (=> b!96706 m!103867))

(declare-fun m!105391 () Bool)

(assert (=> b!96706 m!105391))

(assert (=> b!96706 m!103867))

(assert (=> b!96706 m!104785))

(assert (=> b!96706 m!104785))

(declare-fun m!105393 () Bool)

(assert (=> b!96706 m!105393))

(assert (=> b!96708 m!103867))

(assert (=> b!96708 m!104785))

(assert (=> b!96708 m!104785))

(assert (=> b!96708 m!105393))

(assert (=> b!96021 d!25687))

(declare-fun d!25689 () Bool)

(declare-fun res!48789 () Bool)

(declare-fun e!63039 () Bool)

(assert (=> d!25689 (=> (not res!48789) (not e!63039))))

(assert (=> d!25689 (= res!48789 (validMask!0 (mask!6540 (v!2770 (underlying!326 thiss!992)))))))

(assert (=> d!25689 (= (simpleValid!67 (v!2770 (underlying!326 thiss!992))) e!63039)))

(declare-fun b!96712 () Bool)

(assert (=> b!96712 (= e!63039 (and (bvsge (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!468 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!96709 () Bool)

(declare-fun res!48787 () Bool)

(assert (=> b!96709 (=> (not res!48787) (not e!63039))))

(assert (=> b!96709 (= res!48787 (and (= (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001)) (= (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (size!2241 (_values!2439 (v!2770 (underlying!326 thiss!992))))) (bvsge (_size!468 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!468 (v!2770 (underlying!326 thiss!992))) (bvadd (mask!6540 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!96710 () Bool)

(declare-fun res!48786 () Bool)

(assert (=> b!96710 (=> (not res!48786) (not e!63039))))

(assert (=> b!96710 (= res!48786 (bvsge (size!2246 (v!2770 (underlying!326 thiss!992))) (_size!468 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun b!96711 () Bool)

(declare-fun res!48788 () Bool)

(assert (=> b!96711 (=> (not res!48788) (not e!63039))))

(assert (=> b!96711 (= res!48788 (= (size!2246 (v!2770 (underlying!326 thiss!992))) (bvadd (_size!468 (v!2770 (underlying!326 thiss!992))) (bvsdiv (bvadd (extraKeys!2281 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!25689 res!48789) b!96709))

(assert (= (and b!96709 res!48787) b!96710))

(assert (= (and b!96710 res!48786) b!96711))

(assert (= (and b!96711 res!48788) b!96712))

(assert (=> d!25689 m!103455))

(declare-fun m!105395 () Bool)

(assert (=> b!96710 m!105395))

(assert (=> b!96711 m!105395))

(assert (=> d!25307 d!25689))

(declare-fun d!25691 () Bool)

(declare-fun e!63040 () Bool)

(assert (=> d!25691 e!63040))

(declare-fun res!48790 () Bool)

(assert (=> d!25691 (=> res!48790 e!63040)))

(declare-fun lt!48381 () Bool)

(assert (=> d!25691 (= res!48790 (not lt!48381))))

(declare-fun lt!48382 () Bool)

(assert (=> d!25691 (= lt!48381 lt!48382)))

(declare-fun lt!48383 () Unit!2865)

(declare-fun e!63041 () Unit!2865)

(assert (=> d!25691 (= lt!48383 e!63041)))

(declare-fun c!16345 () Bool)

(assert (=> d!25691 (= c!16345 lt!48382)))

(assert (=> d!25691 (= lt!48382 (containsKey!151 (toList!769 lt!47951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25691 (= (contains!791 lt!47951 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48381)))

(declare-fun b!96713 () Bool)

(declare-fun lt!48380 () Unit!2865)

(assert (=> b!96713 (= e!63041 lt!48380)))

(assert (=> b!96713 (= lt!48380 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96713 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96714 () Bool)

(declare-fun Unit!2912 () Unit!2865)

(assert (=> b!96714 (= e!63041 Unit!2912)))

(declare-fun b!96715 () Bool)

(assert (=> b!96715 (= e!63040 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25691 c!16345) b!96713))

(assert (= (and d!25691 (not c!16345)) b!96714))

(assert (= (and d!25691 (not res!48790)) b!96715))

(declare-fun m!105397 () Bool)

(assert (=> d!25691 m!105397))

(declare-fun m!105399 () Bool)

(assert (=> b!96713 m!105399))

(declare-fun m!105401 () Bool)

(assert (=> b!96713 m!105401))

(assert (=> b!96713 m!105401))

(declare-fun m!105403 () Bool)

(assert (=> b!96713 m!105403))

(assert (=> b!96715 m!105401))

(assert (=> b!96715 m!105401))

(assert (=> b!96715 m!105403))

(assert (=> bm!9720 d!25691))

(declare-fun lt!48384 () Bool)

(declare-fun d!25693 () Bool)

(assert (=> d!25693 (= lt!48384 (select (content!100 (toList!769 lt!47903)) (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!63042 () Bool)

(assert (=> d!25693 (= lt!48384 e!63042)))

(declare-fun res!48792 () Bool)

(assert (=> d!25693 (=> (not res!48792) (not e!63042))))

(assert (=> d!25693 (= res!48792 ((_ is Cons!1576) (toList!769 lt!47903)))))

(assert (=> d!25693 (= (contains!793 (toList!769 lt!47903) (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48384)))

(declare-fun b!96716 () Bool)

(declare-fun e!63043 () Bool)

(assert (=> b!96716 (= e!63042 e!63043)))

(declare-fun res!48791 () Bool)

(assert (=> b!96716 (=> res!48791 e!63043)))

(assert (=> b!96716 (= res!48791 (= (h!2169 (toList!769 lt!47903)) (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96717 () Bool)

(assert (=> b!96717 (= e!63043 (contains!793 (t!5493 (toList!769 lt!47903)) (ite c!16079 (ite c!16071 (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25693 res!48792) b!96716))

(assert (= (and b!96716 (not res!48791)) b!96717))

(declare-fun m!105405 () Bool)

(assert (=> d!25693 m!105405))

(declare-fun m!105407 () Bool)

(assert (=> d!25693 m!105407))

(declare-fun m!105409 () Bool)

(assert (=> b!96717 m!105409))

(assert (=> b!95979 d!25693))

(declare-fun d!25695 () Bool)

(declare-fun e!63044 () Bool)

(assert (=> d!25695 e!63044))

(declare-fun res!48793 () Bool)

(assert (=> d!25695 (=> res!48793 e!63044)))

(declare-fun lt!48386 () Bool)

(assert (=> d!25695 (= res!48793 (not lt!48386))))

(declare-fun lt!48387 () Bool)

(assert (=> d!25695 (= lt!48386 lt!48387)))

(declare-fun lt!48388 () Unit!2865)

(declare-fun e!63045 () Unit!2865)

(assert (=> d!25695 (= lt!48388 e!63045)))

(declare-fun c!16346 () Bool)

(assert (=> d!25695 (= c!16346 lt!48387)))

(assert (=> d!25695 (= lt!48387 (containsKey!151 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (=> d!25695 (= (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))) lt!48386)))

(declare-fun b!96718 () Bool)

(declare-fun lt!48385 () Unit!2865)

(assert (=> b!96718 (= e!63045 lt!48385)))

(assert (=> b!96718 (= lt!48385 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(assert (=> b!96718 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654))))))

(declare-fun b!96719 () Bool)

(declare-fun Unit!2913 () Unit!2865)

(assert (=> b!96719 (= e!63045 Unit!2913)))

(declare-fun b!96720 () Bool)

(assert (=> b!96720 (= e!63044 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!47654)))))))

(assert (= (and d!25695 c!16346) b!96718))

(assert (= (and d!25695 (not c!16346)) b!96719))

(assert (= (and d!25695 (not res!48793)) b!96720))

(assert (=> d!25695 m!103633))

(declare-fun m!105411 () Bool)

(assert (=> d!25695 m!105411))

(assert (=> b!96718 m!103633))

(declare-fun m!105413 () Bool)

(assert (=> b!96718 m!105413))

(assert (=> b!96718 m!103633))

(declare-fun m!105415 () Bool)

(assert (=> b!96718 m!105415))

(assert (=> b!96718 m!105415))

(declare-fun m!105417 () Bool)

(assert (=> b!96718 m!105417))

(assert (=> b!96720 m!103633))

(assert (=> b!96720 m!105415))

(assert (=> b!96720 m!105415))

(assert (=> b!96720 m!105417))

(assert (=> b!96167 d!25695))

(declare-fun bm!9805 () Bool)

(declare-fun call!9809 () ListLongMap!1507)

(assert (=> bm!9805 (= call!9809 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96721 () Bool)

(declare-fun e!63051 () Unit!2865)

(declare-fun Unit!2914 () Unit!2865)

(assert (=> b!96721 (= e!63051 Unit!2914)))

(declare-fun bm!9806 () Bool)

(declare-fun call!9812 () ListLongMap!1507)

(assert (=> bm!9806 (= call!9812 call!9809)))

(declare-fun b!96722 () Bool)

(declare-fun lt!48407 () Unit!2865)

(assert (=> b!96722 (= e!63051 lt!48407)))

(declare-fun lt!48401 () ListLongMap!1507)

(assert (=> b!96722 (= lt!48401 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48408 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48408 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48395 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48395 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48392 () Unit!2865)

(assert (=> b!96722 (= lt!48392 (addStillContains!67 lt!48401 lt!48408 (zeroValue!2341 newMap!16) lt!48395))))

(assert (=> b!96722 (contains!791 (+!127 lt!48401 (tuple2!2315 lt!48408 (zeroValue!2341 newMap!16))) lt!48395)))

(declare-fun lt!48405 () Unit!2865)

(assert (=> b!96722 (= lt!48405 lt!48392)))

(declare-fun lt!48404 () ListLongMap!1507)

(assert (=> b!96722 (= lt!48404 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48389 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48389 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48390 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48390 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48406 () Unit!2865)

(assert (=> b!96722 (= lt!48406 (addApplyDifferent!67 lt!48404 lt!48389 (minValue!2341 newMap!16) lt!48390))))

(assert (=> b!96722 (= (apply!91 (+!127 lt!48404 (tuple2!2315 lt!48389 (minValue!2341 newMap!16))) lt!48390) (apply!91 lt!48404 lt!48390))))

(declare-fun lt!48391 () Unit!2865)

(assert (=> b!96722 (= lt!48391 lt!48406)))

(declare-fun lt!48409 () ListLongMap!1507)

(assert (=> b!96722 (= lt!48409 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48403 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48403 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48394 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48394 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48398 () Unit!2865)

(assert (=> b!96722 (= lt!48398 (addApplyDifferent!67 lt!48409 lt!48403 (zeroValue!2341 newMap!16) lt!48394))))

(assert (=> b!96722 (= (apply!91 (+!127 lt!48409 (tuple2!2315 lt!48403 (zeroValue!2341 newMap!16))) lt!48394) (apply!91 lt!48409 lt!48394))))

(declare-fun lt!48399 () Unit!2865)

(assert (=> b!96722 (= lt!48399 lt!48398)))

(declare-fun lt!48400 () ListLongMap!1507)

(assert (=> b!96722 (= lt!48400 (getCurrentListMapNoExtraKeys!91 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48397 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48397 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48402 () (_ BitVec 64))

(assert (=> b!96722 (= lt!48402 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96722 (= lt!48407 (addApplyDifferent!67 lt!48400 lt!48397 (minValue!2341 newMap!16) lt!48402))))

(assert (=> b!96722 (= (apply!91 (+!127 lt!48400 (tuple2!2315 lt!48397 (minValue!2341 newMap!16))) lt!48402) (apply!91 lt!48400 lt!48402))))

(declare-fun b!96723 () Bool)

(declare-fun e!63050 () ListLongMap!1507)

(declare-fun call!9811 () ListLongMap!1507)

(assert (=> b!96723 (= e!63050 (+!127 call!9811 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96725 () Bool)

(declare-fun e!63052 () Bool)

(declare-fun call!9813 () Bool)

(assert (=> b!96725 (= e!63052 (not call!9813))))

(declare-fun b!96726 () Bool)

(declare-fun e!63048 () Bool)

(declare-fun e!63049 () Bool)

(assert (=> b!96726 (= e!63048 e!63049)))

(declare-fun c!16347 () Bool)

(assert (=> b!96726 (= c!16347 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun lt!48410 () ListLongMap!1507)

(declare-fun e!63058 () Bool)

(declare-fun b!96727 () Bool)

(assert (=> b!96727 (= e!63058 (= (apply!91 lt!48410 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 lt!47652) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 lt!47652)))))

(assert (=> b!96727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96728 () Bool)

(declare-fun e!63054 () ListLongMap!1507)

(assert (=> b!96728 (= e!63050 e!63054)))

(declare-fun c!16351 () Bool)

(assert (=> b!96728 (= c!16351 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96729 () Bool)

(declare-fun call!9810 () Bool)

(assert (=> b!96729 (= e!63049 (not call!9810))))

(declare-fun b!96730 () Bool)

(declare-fun e!63055 () Bool)

(assert (=> b!96730 (= e!63052 e!63055)))

(declare-fun res!48795 () Bool)

(assert (=> b!96730 (= res!48795 call!9813)))

(assert (=> b!96730 (=> (not res!48795) (not e!63055))))

(declare-fun b!96731 () Bool)

(declare-fun res!48799 () Bool)

(assert (=> b!96731 (=> (not res!48799) (not e!63048))))

(declare-fun e!63046 () Bool)

(assert (=> b!96731 (= res!48799 e!63046)))

(declare-fun res!48800 () Bool)

(assert (=> b!96731 (=> res!48800 e!63046)))

(declare-fun e!63053 () Bool)

(assert (=> b!96731 (= res!48800 (not e!63053))))

(declare-fun res!48797 () Bool)

(assert (=> b!96731 (=> (not res!48797) (not e!63053))))

(assert (=> b!96731 (= res!48797 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun bm!9807 () Bool)

(assert (=> bm!9807 (= call!9810 (contains!791 lt!48410 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96732 () Bool)

(declare-fun call!9808 () ListLongMap!1507)

(assert (=> b!96732 (= e!63054 call!9808)))

(declare-fun b!96733 () Bool)

(assert (=> b!96733 (= e!63053 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96734 () Bool)

(declare-fun e!63047 () Bool)

(assert (=> b!96734 (= e!63049 e!63047)))

(declare-fun res!48802 () Bool)

(assert (=> b!96734 (= res!48802 call!9810)))

(assert (=> b!96734 (=> (not res!48802) (not e!63047))))

(declare-fun b!96735 () Bool)

(assert (=> b!96735 (= e!63046 e!63058)))

(declare-fun res!48798 () Bool)

(assert (=> b!96735 (=> (not res!48798) (not e!63058))))

(assert (=> b!96735 (= res!48798 (contains!791 lt!48410 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96735 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96736 () Bool)

(declare-fun e!63057 () ListLongMap!1507)

(assert (=> b!96736 (= e!63057 call!9808)))

(declare-fun b!96737 () Bool)

(declare-fun e!63056 () Bool)

(assert (=> b!96737 (= e!63056 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96738 () Bool)

(declare-fun res!48801 () Bool)

(assert (=> b!96738 (=> (not res!48801) (not e!63048))))

(assert (=> b!96738 (= res!48801 e!63052)))

(declare-fun c!16350 () Bool)

(assert (=> b!96738 (= c!16350 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96739 () Bool)

(declare-fun c!16352 () Bool)

(assert (=> b!96739 (= c!16352 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96739 (= e!63054 e!63057)))

(declare-fun bm!9808 () Bool)

(assert (=> bm!9808 (= call!9808 call!9811)))

(declare-fun b!96740 () Bool)

(assert (=> b!96740 (= e!63047 (= (apply!91 lt!48410 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96741 () Bool)

(declare-fun call!9814 () ListLongMap!1507)

(assert (=> b!96741 (= e!63057 call!9814)))

(declare-fun b!96724 () Bool)

(assert (=> b!96724 (= e!63055 (= (apply!91 lt!48410 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25697 () Bool)

(assert (=> d!25697 e!63048))

(declare-fun res!48794 () Bool)

(assert (=> d!25697 (=> (not res!48794) (not e!63048))))

(assert (=> d!25697 (= res!48794 (or (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun lt!48396 () ListLongMap!1507)

(assert (=> d!25697 (= lt!48410 lt!48396)))

(declare-fun lt!48393 () Unit!2865)

(assert (=> d!25697 (= lt!48393 e!63051)))

(declare-fun c!16349 () Bool)

(assert (=> d!25697 (= c!16349 e!63056)))

(declare-fun res!48796 () Bool)

(assert (=> d!25697 (=> (not res!48796) (not e!63056))))

(assert (=> d!25697 (= res!48796 (bvslt #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25697 (= lt!48396 e!63050)))

(declare-fun c!16348 () Bool)

(assert (=> d!25697 (= c!16348 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25697 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25697 (= (getCurrentListMap!451 (_keys!4141 newMap!16) lt!47652 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48410)))

(declare-fun bm!9809 () Bool)

(assert (=> bm!9809 (= call!9811 (+!127 (ite c!16348 call!9809 (ite c!16351 call!9812 call!9814)) (ite (or c!16348 c!16351) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9810 () Bool)

(assert (=> bm!9810 (= call!9813 (contains!791 lt!48410 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9811 () Bool)

(assert (=> bm!9811 (= call!9814 call!9812)))

(assert (= (and d!25697 c!16348) b!96723))

(assert (= (and d!25697 (not c!16348)) b!96728))

(assert (= (and b!96728 c!16351) b!96732))

(assert (= (and b!96728 (not c!16351)) b!96739))

(assert (= (and b!96739 c!16352) b!96736))

(assert (= (and b!96739 (not c!16352)) b!96741))

(assert (= (or b!96736 b!96741) bm!9811))

(assert (= (or b!96732 bm!9811) bm!9806))

(assert (= (or b!96732 b!96736) bm!9808))

(assert (= (or b!96723 bm!9806) bm!9805))

(assert (= (or b!96723 bm!9808) bm!9809))

(assert (= (and d!25697 res!48796) b!96737))

(assert (= (and d!25697 c!16349) b!96722))

(assert (= (and d!25697 (not c!16349)) b!96721))

(assert (= (and d!25697 res!48794) b!96731))

(assert (= (and b!96731 res!48797) b!96733))

(assert (= (and b!96731 (not res!48800)) b!96735))

(assert (= (and b!96735 res!48798) b!96727))

(assert (= (and b!96731 res!48799) b!96738))

(assert (= (and b!96738 c!16350) b!96730))

(assert (= (and b!96738 (not c!16350)) b!96725))

(assert (= (and b!96730 res!48795) b!96724))

(assert (= (or b!96730 b!96725) bm!9810))

(assert (= (and b!96738 res!48801) b!96726))

(assert (= (and b!96726 c!16347) b!96734))

(assert (= (and b!96726 (not c!16347)) b!96729))

(assert (= (and b!96734 res!48802) b!96740))

(assert (= (or b!96734 b!96729) bm!9807))

(declare-fun b_lambda!4277 () Bool)

(assert (=> (not b_lambda!4277) (not b!96727)))

(assert (=> b!96727 t!5505))

(declare-fun b_and!5921 () Bool)

(assert (= b_and!5917 (and (=> t!5505 result!3225) b_and!5921)))

(assert (=> b!96727 t!5507))

(declare-fun b_and!5923 () Bool)

(assert (= b_and!5919 (and (=> t!5507 result!3227) b_and!5923)))

(declare-fun m!105419 () Bool)

(assert (=> bm!9807 m!105419))

(declare-fun m!105421 () Bool)

(assert (=> b!96740 m!105421))

(assert (=> b!96735 m!103867))

(assert (=> b!96735 m!103867))

(declare-fun m!105423 () Bool)

(assert (=> b!96735 m!105423))

(declare-fun m!105425 () Bool)

(assert (=> b!96723 m!105425))

(assert (=> d!25697 m!103855))

(assert (=> b!96727 m!103867))

(declare-fun m!105427 () Bool)

(assert (=> b!96727 m!105427))

(assert (=> b!96727 m!103989))

(assert (=> b!96727 m!103867))

(declare-fun m!105429 () Bool)

(assert (=> b!96727 m!105429))

(assert (=> b!96727 m!103989))

(declare-fun m!105431 () Bool)

(assert (=> b!96727 m!105431))

(assert (=> b!96727 m!105429))

(declare-fun m!105433 () Bool)

(assert (=> bm!9809 m!105433))

(declare-fun m!105435 () Bool)

(assert (=> bm!9810 m!105435))

(declare-fun m!105437 () Bool)

(assert (=> b!96722 m!105437))

(declare-fun m!105439 () Bool)

(assert (=> b!96722 m!105439))

(declare-fun m!105441 () Bool)

(assert (=> b!96722 m!105441))

(declare-fun m!105443 () Bool)

(assert (=> b!96722 m!105443))

(declare-fun m!105445 () Bool)

(assert (=> b!96722 m!105445))

(declare-fun m!105447 () Bool)

(assert (=> b!96722 m!105447))

(declare-fun m!105449 () Bool)

(assert (=> b!96722 m!105449))

(declare-fun m!105451 () Bool)

(assert (=> b!96722 m!105451))

(declare-fun m!105453 () Bool)

(assert (=> b!96722 m!105453))

(declare-fun m!105455 () Bool)

(assert (=> b!96722 m!105455))

(assert (=> b!96722 m!105453))

(declare-fun m!105457 () Bool)

(assert (=> b!96722 m!105457))

(declare-fun m!105459 () Bool)

(assert (=> b!96722 m!105459))

(declare-fun m!105461 () Bool)

(assert (=> b!96722 m!105461))

(assert (=> b!96722 m!105459))

(assert (=> b!96722 m!105449))

(assert (=> b!96722 m!105437))

(declare-fun m!105463 () Bool)

(assert (=> b!96722 m!105463))

(declare-fun m!105465 () Bool)

(assert (=> b!96722 m!105465))

(assert (=> b!96722 m!103867))

(declare-fun m!105467 () Bool)

(assert (=> b!96722 m!105467))

(assert (=> b!96733 m!103867))

(assert (=> b!96733 m!103867))

(assert (=> b!96733 m!103869))

(assert (=> bm!9805 m!105463))

(assert (=> b!96737 m!103867))

(assert (=> b!96737 m!103867))

(assert (=> b!96737 m!103869))

(declare-fun m!105469 () Bool)

(assert (=> b!96724 m!105469))

(assert (=> b!96167 d!25697))

(declare-fun d!25699 () Bool)

(assert (=> d!25699 (= (inRange!0 (index!3163 lt!47810) (mask!6540 newMap!16)) (and (bvsge (index!3163 lt!47810) #b00000000000000000000000000000000) (bvslt (index!3163 lt!47810) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!95922 d!25699))

(declare-fun d!25701 () Bool)

(declare-fun res!48803 () Bool)

(declare-fun e!63059 () Bool)

(assert (=> d!25701 (=> res!48803 e!63059)))

(assert (=> d!25701 (= res!48803 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25701 (= (containsKey!151 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000) e!63059)))

(declare-fun b!96742 () Bool)

(declare-fun e!63060 () Bool)

(assert (=> b!96742 (= e!63059 e!63060)))

(declare-fun res!48804 () Bool)

(assert (=> b!96742 (=> (not res!48804) (not e!63060))))

(assert (=> b!96742 (= res!48804 (and (or (not ((_ is Cons!1576) (toList!769 lt!47731))) (bvsle (_1!1168 (h!2169 (toList!769 lt!47731))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1576) (toList!769 lt!47731)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47731))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96743 () Bool)

(assert (=> b!96743 (= e!63060 (containsKey!151 (t!5493 (toList!769 lt!47731)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25701 (not res!48803)) b!96742))

(assert (= (and b!96742 res!48804) b!96743))

(declare-fun m!105471 () Bool)

(assert (=> b!96743 m!105471))

(assert (=> d!25337 d!25701))

(declare-fun b!96745 () Bool)

(declare-fun e!63061 () Option!153)

(declare-fun e!63062 () Option!153)

(assert (=> b!96745 (= e!63061 e!63062)))

(declare-fun c!16354 () Bool)

(assert (=> b!96745 (= c!16354 (and ((_ is Cons!1576) (toList!769 lt!47977)) (not (= (_1!1168 (h!2169 (toList!769 lt!47977))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96746 () Bool)

(assert (=> b!96746 (= e!63062 (getValueByKey!147 (t!5493 (toList!769 lt!47977)) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96744 () Bool)

(assert (=> b!96744 (= e!63061 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47977)))))))

(declare-fun b!96747 () Bool)

(assert (=> b!96747 (= e!63062 None!151)))

(declare-fun d!25703 () Bool)

(declare-fun c!16353 () Bool)

(assert (=> d!25703 (= c!16353 (and ((_ is Cons!1576) (toList!769 lt!47977)) (= (_1!1168 (h!2169 (toList!769 lt!47977))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (=> d!25703 (= (getValueByKey!147 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) e!63061)))

(assert (= (and d!25703 c!16353) b!96744))

(assert (= (and d!25703 (not c!16353)) b!96745))

(assert (= (and b!96745 c!16354) b!96746))

(assert (= (and b!96745 (not c!16354)) b!96747))

(declare-fun m!105473 () Bool)

(assert (=> b!96746 m!105473))

(assert (=> b!96086 d!25703))

(declare-fun bm!9812 () Bool)

(declare-fun call!9815 () Bool)

(assert (=> bm!9812 (= call!9815 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun d!25705 () Bool)

(declare-fun res!48805 () Bool)

(declare-fun e!63063 () Bool)

(assert (=> d!25705 (=> res!48805 e!63063)))

(assert (=> d!25705 (= res!48805 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25705 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4141 newMap!16) (mask!6540 newMap!16)) e!63063)))

(declare-fun b!96748 () Bool)

(declare-fun e!63064 () Bool)

(assert (=> b!96748 (= e!63064 call!9815)))

(declare-fun b!96749 () Bool)

(declare-fun e!63065 () Bool)

(assert (=> b!96749 (= e!63065 call!9815)))

(declare-fun b!96750 () Bool)

(assert (=> b!96750 (= e!63063 e!63064)))

(declare-fun c!16355 () Bool)

(assert (=> b!96750 (= c!16355 (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!96751 () Bool)

(assert (=> b!96751 (= e!63064 e!63065)))

(declare-fun lt!48413 () (_ BitVec 64))

(assert (=> b!96751 (= lt!48413 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!48411 () Unit!2865)

(assert (=> b!96751 (= lt!48411 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4141 newMap!16) lt!48413 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!96751 (arrayContainsKey!0 (_keys!4141 newMap!16) lt!48413 #b00000000000000000000000000000000)))

(declare-fun lt!48412 () Unit!2865)

(assert (=> b!96751 (= lt!48412 lt!48411)))

(declare-fun res!48806 () Bool)

(assert (=> b!96751 (= res!48806 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4141 newMap!16) (mask!6540 newMap!16)) (Found!255 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!96751 (=> (not res!48806) (not e!63065))))

(assert (= (and d!25705 (not res!48805)) b!96750))

(assert (= (and b!96750 c!16355) b!96751))

(assert (= (and b!96750 (not c!16355)) b!96748))

(assert (= (and b!96751 res!48806) b!96749))

(assert (= (or b!96749 b!96748) bm!9812))

(declare-fun m!105475 () Bool)

(assert (=> bm!9812 m!105475))

(assert (=> b!96750 m!105093))

(assert (=> b!96750 m!105093))

(assert (=> b!96750 m!105099))

(assert (=> b!96751 m!105093))

(declare-fun m!105477 () Bool)

(assert (=> b!96751 m!105477))

(declare-fun m!105479 () Bool)

(assert (=> b!96751 m!105479))

(assert (=> b!96751 m!105093))

(declare-fun m!105481 () Bool)

(assert (=> b!96751 m!105481))

(assert (=> bm!9698 d!25705))

(declare-fun d!25707 () Bool)

(declare-fun e!63066 () Bool)

(assert (=> d!25707 e!63066))

(declare-fun res!48807 () Bool)

(assert (=> d!25707 (=> res!48807 e!63066)))

(declare-fun lt!48415 () Bool)

(assert (=> d!25707 (= res!48807 (not lt!48415))))

(declare-fun lt!48416 () Bool)

(assert (=> d!25707 (= lt!48415 lt!48416)))

(declare-fun lt!48417 () Unit!2865)

(declare-fun e!63067 () Unit!2865)

(assert (=> d!25707 (= lt!48417 e!63067)))

(declare-fun c!16356 () Bool)

(assert (=> d!25707 (= c!16356 lt!48416)))

(assert (=> d!25707 (= lt!48416 (containsKey!151 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25707 (= (contains!791 lt!47742 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48415)))

(declare-fun b!96752 () Bool)

(declare-fun lt!48414 () Unit!2865)

(assert (=> b!96752 (= e!63067 lt!48414)))

(assert (=> b!96752 (= lt!48414 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> b!96752 (isDefined!101 (getValueByKey!147 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96753 () Bool)

(declare-fun Unit!2915 () Unit!2865)

(assert (=> b!96753 (= e!63067 Unit!2915)))

(declare-fun b!96754 () Bool)

(assert (=> b!96754 (= e!63066 (isDefined!101 (getValueByKey!147 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25707 c!16356) b!96752))

(assert (= (and d!25707 (not c!16356)) b!96753))

(assert (= (and d!25707 (not res!48807)) b!96754))

(declare-fun m!105483 () Bool)

(assert (=> d!25707 m!105483))

(declare-fun m!105485 () Bool)

(assert (=> b!96752 m!105485))

(assert (=> b!96752 m!103751))

(assert (=> b!96752 m!103751))

(declare-fun m!105487 () Bool)

(assert (=> b!96752 m!105487))

(assert (=> b!96754 m!103751))

(assert (=> b!96754 m!103751))

(assert (=> b!96754 m!105487))

(assert (=> d!25229 d!25707))

(declare-fun b!96756 () Bool)

(declare-fun e!63068 () Option!153)

(declare-fun e!63069 () Option!153)

(assert (=> b!96756 (= e!63068 e!63069)))

(declare-fun c!16358 () Bool)

(assert (=> b!96756 (= c!16358 (and ((_ is Cons!1576) lt!47740) (not (= (_1!1168 (h!2169 lt!47740)) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96757 () Bool)

(assert (=> b!96757 (= e!63069 (getValueByKey!147 (t!5493 lt!47740) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96755 () Bool)

(assert (=> b!96755 (= e!63068 (Some!152 (_2!1168 (h!2169 lt!47740))))))

(declare-fun b!96758 () Bool)

(assert (=> b!96758 (= e!63069 None!151)))

(declare-fun c!16357 () Bool)

(declare-fun d!25709 () Bool)

(assert (=> d!25709 (= c!16357 (and ((_ is Cons!1576) lt!47740) (= (_1!1168 (h!2169 lt!47740)) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25709 (= (getValueByKey!147 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63068)))

(assert (= (and d!25709 c!16357) b!96755))

(assert (= (and d!25709 (not c!16357)) b!96756))

(assert (= (and b!96756 c!16358) b!96757))

(assert (= (and b!96756 (not c!16358)) b!96758))

(declare-fun m!105489 () Bool)

(assert (=> b!96757 m!105489))

(assert (=> d!25229 d!25709))

(declare-fun d!25711 () Bool)

(assert (=> d!25711 (= (getValueByKey!147 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48418 () Unit!2865)

(assert (=> d!25711 (= lt!48418 (choose!590 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63070 () Bool)

(assert (=> d!25711 e!63070))

(declare-fun res!48808 () Bool)

(assert (=> d!25711 (=> (not res!48808) (not e!63070))))

(assert (=> d!25711 (= res!48808 (isStrictlySorted!298 lt!47740))))

(assert (=> d!25711 (= (lemmaContainsTupThenGetReturnValue!66 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48418)))

(declare-fun b!96759 () Bool)

(declare-fun res!48809 () Bool)

(assert (=> b!96759 (=> (not res!48809) (not e!63070))))

(assert (=> b!96759 (= res!48809 (containsKey!151 lt!47740 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96760 () Bool)

(assert (=> b!96760 (= e!63070 (contains!793 lt!47740 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25711 res!48808) b!96759))

(assert (= (and b!96759 res!48809) b!96760))

(assert (=> d!25711 m!103745))

(declare-fun m!105491 () Bool)

(assert (=> d!25711 m!105491))

(declare-fun m!105493 () Bool)

(assert (=> d!25711 m!105493))

(declare-fun m!105495 () Bool)

(assert (=> b!96759 m!105495))

(declare-fun m!105497 () Bool)

(assert (=> b!96760 m!105497))

(assert (=> d!25229 d!25711))

(declare-fun b!96761 () Bool)

(declare-fun e!63075 () List!1580)

(declare-fun call!9816 () List!1580)

(assert (=> b!96761 (= e!63075 call!9816)))

(declare-fun c!16360 () Bool)

(declare-fun b!96762 () Bool)

(declare-fun e!63073 () List!1580)

(declare-fun c!16361 () Bool)

(assert (=> b!96762 (= e!63073 (ite c!16361 (t!5493 (toList!769 lt!47722)) (ite c!16360 (Cons!1576 (h!2169 (toList!769 lt!47722)) (t!5493 (toList!769 lt!47722))) Nil!1577)))))

(declare-fun b!96763 () Bool)

(assert (=> b!96763 (= e!63073 (insertStrictlySorted!69 (t!5493 (toList!769 lt!47722)) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48419 () List!1580)

(declare-fun e!63072 () Bool)

(declare-fun b!96764 () Bool)

(assert (=> b!96764 (= e!63072 (contains!793 lt!48419 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9813 () Bool)

(declare-fun call!9817 () List!1580)

(declare-fun call!9818 () List!1580)

(assert (=> bm!9813 (= call!9817 call!9818)))

(declare-fun b!96765 () Bool)

(declare-fun e!63071 () List!1580)

(assert (=> b!96765 (= e!63071 call!9817)))

(declare-fun b!96766 () Bool)

(assert (=> b!96766 (= e!63075 call!9816)))

(declare-fun d!25713 () Bool)

(assert (=> d!25713 e!63072))

(declare-fun res!48810 () Bool)

(assert (=> d!25713 (=> (not res!48810) (not e!63072))))

(assert (=> d!25713 (= res!48810 (isStrictlySorted!298 lt!48419))))

(declare-fun e!63074 () List!1580)

(assert (=> d!25713 (= lt!48419 e!63074)))

(declare-fun c!16359 () Bool)

(assert (=> d!25713 (= c!16359 (and ((_ is Cons!1576) (toList!769 lt!47722)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47722))) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25713 (isStrictlySorted!298 (toList!769 lt!47722))))

(assert (=> d!25713 (= (insertStrictlySorted!69 (toList!769 lt!47722) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48419)))

(declare-fun b!96767 () Bool)

(assert (=> b!96767 (= c!16360 (and ((_ is Cons!1576) (toList!769 lt!47722)) (bvsgt (_1!1168 (h!2169 (toList!769 lt!47722))) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96767 (= e!63071 e!63075)))

(declare-fun b!96768 () Bool)

(declare-fun res!48811 () Bool)

(assert (=> b!96768 (=> (not res!48811) (not e!63072))))

(assert (=> b!96768 (= res!48811 (containsKey!151 lt!48419 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9814 () Bool)

(assert (=> bm!9814 (= call!9818 ($colon$colon!76 e!63073 (ite c!16359 (h!2169 (toList!769 lt!47722)) (tuple2!2315 (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun c!16362 () Bool)

(assert (=> bm!9814 (= c!16362 c!16359)))

(declare-fun b!96769 () Bool)

(assert (=> b!96769 (= e!63074 e!63071)))

(assert (=> b!96769 (= c!16361 (and ((_ is Cons!1576) (toList!769 lt!47722)) (= (_1!1168 (h!2169 (toList!769 lt!47722))) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96770 () Bool)

(assert (=> b!96770 (= e!63074 call!9818)))

(declare-fun bm!9815 () Bool)

(assert (=> bm!9815 (= call!9816 call!9817)))

(assert (= (and d!25713 c!16359) b!96770))

(assert (= (and d!25713 (not c!16359)) b!96769))

(assert (= (and b!96769 c!16361) b!96765))

(assert (= (and b!96769 (not c!16361)) b!96767))

(assert (= (and b!96767 c!16360) b!96766))

(assert (= (and b!96767 (not c!16360)) b!96761))

(assert (= (or b!96766 b!96761) bm!9815))

(assert (= (or b!96765 bm!9815) bm!9813))

(assert (= (or b!96770 bm!9813) bm!9814))

(assert (= (and bm!9814 c!16362) b!96763))

(assert (= (and bm!9814 (not c!16362)) b!96762))

(assert (= (and d!25713 res!48810) b!96768))

(assert (= (and b!96768 res!48811) b!96764))

(declare-fun m!105499 () Bool)

(assert (=> b!96768 m!105499))

(declare-fun m!105501 () Bool)

(assert (=> b!96764 m!105501))

(declare-fun m!105503 () Bool)

(assert (=> bm!9814 m!105503))

(declare-fun m!105505 () Bool)

(assert (=> d!25713 m!105505))

(declare-fun m!105507 () Bool)

(assert (=> d!25713 m!105507))

(declare-fun m!105509 () Bool)

(assert (=> b!96763 m!105509))

(assert (=> d!25229 d!25713))

(declare-fun b!96771 () Bool)

(declare-fun e!63077 () (_ BitVec 32))

(assert (=> b!96771 (= e!63077 #b00000000000000000000000000000000)))

(declare-fun b!96772 () Bool)

(declare-fun e!63076 () (_ BitVec 32))

(assert (=> b!96772 (= e!63077 e!63076)))

(declare-fun c!16363 () Bool)

(assert (=> b!96772 (= c!16363 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!25715 () Bool)

(declare-fun lt!48420 () (_ BitVec 32))

(assert (=> d!25715 (and (bvsge lt!48420 #b00000000000000000000000000000000) (bvsle lt!48420 (bvsub (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!25715 (= lt!48420 e!63077)))

(declare-fun c!16364 () Bool)

(assert (=> d!25715 (= c!16364 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25715 (and (bvsle #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25715 (= (arrayCountValidKeys!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))) lt!48420)))

(declare-fun bm!9816 () Bool)

(declare-fun call!9819 () (_ BitVec 32))

(assert (=> bm!9816 (= call!9819 (arrayCountValidKeys!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96773 () Bool)

(assert (=> b!96773 (= e!63076 (bvadd #b00000000000000000000000000000001 call!9819))))

(declare-fun b!96774 () Bool)

(assert (=> b!96774 (= e!63076 call!9819)))

(assert (= (and d!25715 c!16364) b!96771))

(assert (= (and d!25715 (not c!16364)) b!96772))

(assert (= (and b!96772 c!16363) b!96773))

(assert (= (and b!96772 (not c!16363)) b!96774))

(assert (= (or b!96773 b!96774) bm!9816))

(assert (=> b!96772 m!104597))

(assert (=> b!96772 m!104597))

(assert (=> b!96772 m!104603))

(declare-fun m!105511 () Bool)

(assert (=> bm!9816 m!105511))

(assert (=> b!96071 d!25715))

(assert (=> d!25289 d!25423))

(declare-fun d!25717 () Bool)

(declare-fun lt!48421 () Bool)

(assert (=> d!25717 (= lt!48421 (select (content!99 (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!63078 () Bool)

(assert (=> d!25717 (= lt!48421 e!63078)))

(declare-fun res!48813 () Bool)

(assert (=> d!25717 (=> (not res!48813) (not e!63078))))

(assert (=> d!25717 (= res!48813 ((_ is Cons!1577) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)))))

(assert (=> d!25717 (= (contains!792 (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!48421)))

(declare-fun b!96775 () Bool)

(declare-fun e!63079 () Bool)

(assert (=> b!96775 (= e!63078 e!63079)))

(declare-fun res!48812 () Bool)

(assert (=> b!96775 (=> res!48812 e!63079)))

(assert (=> b!96775 (= res!48812 (= (h!2170 (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!96776 () Bool)

(assert (=> b!96776 (= e!63079 (contains!792 (t!5494 (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25717 res!48813) b!96775))

(assert (= (and b!96775 (not res!48812)) b!96776))

(declare-fun m!105513 () Bool)

(assert (=> d!25717 m!105513))

(assert (=> d!25717 m!104265))

(declare-fun m!105515 () Bool)

(assert (=> d!25717 m!105515))

(assert (=> b!96776 m!104265))

(declare-fun m!105517 () Bool)

(assert (=> b!96776 m!105517))

(assert (=> b!96157 d!25717))

(assert (=> b!95879 d!25341))

(declare-fun b!96778 () Bool)

(declare-fun e!63080 () Option!153)

(declare-fun e!63081 () Option!153)

(assert (=> b!96778 (= e!63080 e!63081)))

(declare-fun c!16366 () Bool)

(assert (=> b!96778 (= c!16366 (and ((_ is Cons!1576) (toList!769 lt!47749)) (not (= (_1!1168 (h!2169 (toList!769 lt!47749))) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96779 () Bool)

(assert (=> b!96779 (= e!63081 (getValueByKey!147 (t!5493 (toList!769 lt!47749)) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96777 () Bool)

(assert (=> b!96777 (= e!63080 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47749)))))))

(declare-fun b!96780 () Bool)

(assert (=> b!96780 (= e!63081 None!151)))

(declare-fun d!25719 () Bool)

(declare-fun c!16365 () Bool)

(assert (=> d!25719 (= c!16365 (and ((_ is Cons!1576) (toList!769 lt!47749)) (= (_1!1168 (h!2169 (toList!769 lt!47749))) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25719 (= (getValueByKey!147 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63080)))

(assert (= (and d!25719 c!16365) b!96777))

(assert (= (and d!25719 (not c!16365)) b!96778))

(assert (= (and b!96778 c!16366) b!96779))

(assert (= (and b!96778 (not c!16366)) b!96780))

(declare-fun m!105519 () Bool)

(assert (=> b!96779 m!105519))

(assert (=> b!95841 d!25719))

(declare-fun d!25721 () Bool)

(declare-fun e!63082 () Bool)

(assert (=> d!25721 e!63082))

(declare-fun res!48814 () Bool)

(assert (=> d!25721 (=> res!48814 e!63082)))

(declare-fun lt!48423 () Bool)

(assert (=> d!25721 (= res!48814 (not lt!48423))))

(declare-fun lt!48424 () Bool)

(assert (=> d!25721 (= lt!48423 lt!48424)))

(declare-fun lt!48425 () Unit!2865)

(declare-fun e!63083 () Unit!2865)

(assert (=> d!25721 (= lt!48425 e!63083)))

(declare-fun c!16367 () Bool)

(assert (=> d!25721 (= c!16367 lt!48424)))

(assert (=> d!25721 (= lt!48424 (containsKey!151 (toList!769 lt!47730) lt!47715))))

(assert (=> d!25721 (= (contains!791 lt!47730 lt!47715) lt!48423)))

(declare-fun b!96781 () Bool)

(declare-fun lt!48422 () Unit!2865)

(assert (=> b!96781 (= e!63083 lt!48422)))

(assert (=> b!96781 (= lt!48422 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47730) lt!47715))))

(assert (=> b!96781 (isDefined!101 (getValueByKey!147 (toList!769 lt!47730) lt!47715))))

(declare-fun b!96782 () Bool)

(declare-fun Unit!2916 () Unit!2865)

(assert (=> b!96782 (= e!63083 Unit!2916)))

(declare-fun b!96783 () Bool)

(assert (=> b!96783 (= e!63082 (isDefined!101 (getValueByKey!147 (toList!769 lt!47730) lt!47715)))))

(assert (= (and d!25721 c!16367) b!96781))

(assert (= (and d!25721 (not c!16367)) b!96782))

(assert (= (and d!25721 (not res!48814)) b!96783))

(declare-fun m!105521 () Bool)

(assert (=> d!25721 m!105521))

(declare-fun m!105523 () Bool)

(assert (=> b!96781 m!105523))

(assert (=> b!96781 m!103739))

(assert (=> b!96781 m!103739))

(declare-fun m!105525 () Bool)

(assert (=> b!96781 m!105525))

(assert (=> b!96783 m!103739))

(assert (=> b!96783 m!103739))

(assert (=> b!96783 m!105525))

(assert (=> d!25253 d!25721))

(assert (=> d!25253 d!25255))

(assert (=> d!25253 d!25237))

(assert (=> d!25253 d!25227))

(declare-fun d!25723 () Bool)

(assert (=> d!25723 (= (apply!91 (+!127 lt!47730 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!47715) (apply!91 lt!47730 lt!47715))))

(assert (=> d!25723 true))

(declare-fun _$34!860 () Unit!2865)

(assert (=> d!25723 (= (choose!581 lt!47730 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))) lt!47715) _$34!860)))

(declare-fun bs!3992 () Bool)

(assert (= bs!3992 d!25723))

(assert (=> bs!3992 m!103703))

(assert (=> bs!3992 m!103703))

(assert (=> bs!3992 m!103705))

(assert (=> bs!3992 m!103701))

(assert (=> d!25253 d!25723))

(declare-fun d!25725 () Bool)

(declare-fun e!63084 () Bool)

(assert (=> d!25725 e!63084))

(declare-fun res!48815 () Bool)

(assert (=> d!25725 (=> res!48815 e!63084)))

(declare-fun lt!48427 () Bool)

(assert (=> d!25725 (= res!48815 (not lt!48427))))

(declare-fun lt!48428 () Bool)

(assert (=> d!25725 (= lt!48427 lt!48428)))

(declare-fun lt!48429 () Unit!2865)

(declare-fun e!63085 () Unit!2865)

(assert (=> d!25725 (= lt!48429 e!63085)))

(declare-fun c!16368 () Bool)

(assert (=> d!25725 (= c!16368 lt!48428)))

(assert (=> d!25725 (= lt!48428 (containsKey!151 (toList!769 lt!47951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25725 (= (contains!791 lt!47951 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48427)))

(declare-fun b!96784 () Bool)

(declare-fun lt!48426 () Unit!2865)

(assert (=> b!96784 (= e!63085 lt!48426)))

(assert (=> b!96784 (= lt!48426 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96784 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96785 () Bool)

(declare-fun Unit!2917 () Unit!2865)

(assert (=> b!96785 (= e!63085 Unit!2917)))

(declare-fun b!96786 () Bool)

(assert (=> b!96786 (= e!63084 (isDefined!101 (getValueByKey!147 (toList!769 lt!47951) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25725 c!16368) b!96784))

(assert (= (and d!25725 (not c!16368)) b!96785))

(assert (= (and d!25725 (not res!48815)) b!96786))

(declare-fun m!105527 () Bool)

(assert (=> d!25725 m!105527))

(declare-fun m!105529 () Bool)

(assert (=> b!96784 m!105529))

(declare-fun m!105531 () Bool)

(assert (=> b!96784 m!105531))

(assert (=> b!96784 m!105531))

(declare-fun m!105533 () Bool)

(assert (=> b!96784 m!105533))

(assert (=> b!96786 m!105531))

(assert (=> b!96786 m!105531))

(assert (=> b!96786 m!105533))

(assert (=> bm!9723 d!25725))

(declare-fun d!25727 () Bool)

(assert (=> d!25727 (= (size!2246 newMap!16) (bvadd (_size!468 newMap!16) (bvsdiv (bvadd (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!95898 d!25727))

(declare-fun d!25729 () Bool)

(assert (=> d!25729 (= (apply!91 lt!47951 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47951) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3993 () Bool)

(assert (= bs!3993 d!25729))

(assert (=> bs!3993 m!105531))

(assert (=> bs!3993 m!105531))

(declare-fun m!105535 () Bool)

(assert (=> bs!3993 m!105535))

(assert (=> b!96010 d!25729))

(assert (=> d!25291 d!25423))

(declare-fun d!25731 () Bool)

(declare-fun isEmpty!359 (List!1580) Bool)

(assert (=> d!25731 (= (isEmpty!357 lt!47788) (isEmpty!359 (toList!769 lt!47788)))))

(declare-fun bs!3994 () Bool)

(assert (= bs!3994 d!25731))

(declare-fun m!105537 () Bool)

(assert (=> bs!3994 m!105537))

(assert (=> b!95887 d!25731))

(assert (=> b!95970 d!25343))

(declare-fun d!25733 () Bool)

(assert (=> d!25733 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!48430 () Unit!2865)

(assert (=> d!25733 (= lt!48430 (choose!585 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63086 () Bool)

(assert (=> d!25733 e!63086))

(declare-fun res!48816 () Bool)

(assert (=> d!25733 (=> (not res!48816) (not e!63086))))

(assert (=> d!25733 (= res!48816 (isStrictlySorted!298 (toList!769 lt!47731)))))

(assert (=> d!25733 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000) lt!48430)))

(declare-fun b!96787 () Bool)

(assert (=> b!96787 (= e!63086 (containsKey!151 (toList!769 lt!47731) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25733 res!48816) b!96787))

(assert (=> d!25733 m!104209))

(assert (=> d!25733 m!104209))

(assert (=> d!25733 m!104251))

(declare-fun m!105539 () Bool)

(assert (=> d!25733 m!105539))

(assert (=> d!25733 m!105355))

(assert (=> b!96787 m!104247))

(assert (=> b!96128 d!25733))

(assert (=> b!96128 d!25457))

(assert (=> b!96128 d!25459))

(declare-fun d!25735 () Bool)

(assert (=> d!25735 (= (get!1278 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2775 (getValueByKey!147 (toList!769 lt!47731) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25277 d!25735))

(assert (=> d!25277 d!25415))

(assert (=> b!95883 d!25595))

(assert (=> d!25295 d!25297))

(assert (=> d!25295 d!25299))

(declare-fun d!25737 () Bool)

(assert (=> d!25737 (isDefined!101 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25737 true))

(declare-fun _$12!341 () Unit!2865)

(assert (=> d!25737 (= (choose!585 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) _$12!341)))

(declare-fun bs!3995 () Bool)

(assert (= bs!3995 d!25737))

(assert (=> bs!3995 m!103459))

(assert (=> bs!3995 m!103607))

(assert (=> bs!3995 m!103607))

(assert (=> bs!3995 m!103609))

(assert (=> d!25295 d!25737))

(declare-fun d!25739 () Bool)

(declare-fun res!48821 () Bool)

(declare-fun e!63091 () Bool)

(assert (=> d!25739 (=> res!48821 e!63091)))

(assert (=> d!25739 (= res!48821 (or ((_ is Nil!1577) (toList!769 lt!47518)) ((_ is Nil!1577) (t!5493 (toList!769 lt!47518)))))))

(assert (=> d!25739 (= (isStrictlySorted!298 (toList!769 lt!47518)) e!63091)))

(declare-fun b!96792 () Bool)

(declare-fun e!63092 () Bool)

(assert (=> b!96792 (= e!63091 e!63092)))

(declare-fun res!48822 () Bool)

(assert (=> b!96792 (=> (not res!48822) (not e!63092))))

(assert (=> b!96792 (= res!48822 (bvslt (_1!1168 (h!2169 (toList!769 lt!47518))) (_1!1168 (h!2169 (t!5493 (toList!769 lt!47518))))))))

(declare-fun b!96793 () Bool)

(assert (=> b!96793 (= e!63092 (isStrictlySorted!298 (t!5493 (toList!769 lt!47518))))))

(assert (= (and d!25739 (not res!48821)) b!96792))

(assert (= (and b!96792 res!48822) b!96793))

(declare-fun m!105541 () Bool)

(assert (=> b!96793 m!105541))

(assert (=> d!25295 d!25739))

(declare-fun d!25741 () Bool)

(declare-fun e!63093 () Bool)

(assert (=> d!25741 e!63093))

(declare-fun res!48823 () Bool)

(assert (=> d!25741 (=> res!48823 e!63093)))

(declare-fun lt!48432 () Bool)

(assert (=> d!25741 (= res!48823 (not lt!48432))))

(declare-fun lt!48433 () Bool)

(assert (=> d!25741 (= lt!48432 lt!48433)))

(declare-fun lt!48434 () Unit!2865)

(declare-fun e!63094 () Unit!2865)

(assert (=> d!25741 (= lt!48434 e!63094)))

(declare-fun c!16369 () Bool)

(assert (=> d!25741 (= c!16369 lt!48433)))

(assert (=> d!25741 (= lt!48433 (containsKey!151 (toList!769 lt!47929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25741 (= (contains!791 lt!47929 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48432)))

(declare-fun b!96794 () Bool)

(declare-fun lt!48431 () Unit!2865)

(assert (=> b!96794 (= e!63094 lt!48431)))

(assert (=> b!96794 (= lt!48431 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96794 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96795 () Bool)

(declare-fun Unit!2918 () Unit!2865)

(assert (=> b!96795 (= e!63094 Unit!2918)))

(declare-fun b!96796 () Bool)

(assert (=> b!96796 (= e!63093 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25741 c!16369) b!96794))

(assert (= (and d!25741 (not c!16369)) b!96795))

(assert (= (and d!25741 (not res!48823)) b!96796))

(declare-fun m!105543 () Bool)

(assert (=> d!25741 m!105543))

(declare-fun m!105545 () Bool)

(assert (=> b!96794 m!105545))

(assert (=> b!96794 m!104541))

(assert (=> b!96794 m!104541))

(declare-fun m!105547 () Bool)

(assert (=> b!96794 m!105547))

(assert (=> b!96796 m!104541))

(assert (=> b!96796 m!104541))

(assert (=> b!96796 m!105547))

(assert (=> bm!9713 d!25741))

(declare-fun d!25743 () Bool)

(assert (=> d!25743 (arrayContainsKey!0 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000)))

(declare-fun lt!48437 () Unit!2865)

(declare-fun choose!13 (array!4191 (_ BitVec 64) (_ BitVec 32)) Unit!2865)

(assert (=> d!25743 (= lt!48437 (choose!13 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000))))

(assert (=> d!25743 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!25743 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000) lt!48437)))

(declare-fun bs!3996 () Bool)

(assert (= bs!3996 d!25743))

(assert (=> bs!3996 m!103873))

(declare-fun m!105549 () Bool)

(assert (=> bs!3996 m!105549))

(assert (=> b!95912 d!25743))

(declare-fun d!25745 () Bool)

(declare-fun res!48824 () Bool)

(declare-fun e!63095 () Bool)

(assert (=> d!25745 (=> res!48824 e!63095)))

(assert (=> d!25745 (= res!48824 (= (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) lt!47800))))

(assert (=> d!25745 (= (arrayContainsKey!0 (_keys!4141 newMap!16) lt!47800 #b00000000000000000000000000000000) e!63095)))

(declare-fun b!96797 () Bool)

(declare-fun e!63096 () Bool)

(assert (=> b!96797 (= e!63095 e!63096)))

(declare-fun res!48825 () Bool)

(assert (=> b!96797 (=> (not res!48825) (not e!63096))))

(assert (=> b!96797 (= res!48825 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96798 () Bool)

(assert (=> b!96798 (= e!63096 (arrayContainsKey!0 (_keys!4141 newMap!16) lt!47800 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25745 (not res!48824)) b!96797))

(assert (= (and b!96797 res!48825) b!96798))

(assert (=> d!25745 m!103867))

(declare-fun m!105551 () Bool)

(assert (=> b!96798 m!105551))

(assert (=> b!95912 d!25745))

(declare-fun b!96799 () Bool)

(declare-fun e!63099 () SeekEntryResult!255)

(assert (=> b!96799 (= e!63099 Undefined!255)))

(declare-fun b!96800 () Bool)

(declare-fun e!63098 () SeekEntryResult!255)

(declare-fun lt!48438 () SeekEntryResult!255)

(assert (=> b!96800 (= e!63098 (MissingZero!255 (index!3164 lt!48438)))))

(declare-fun b!96801 () Bool)

(assert (=> b!96801 (= e!63098 (seekKeyOrZeroReturnVacant!0 (x!12802 lt!48438) (index!3164 lt!48438) (index!3164 lt!48438) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(declare-fun b!96802 () Bool)

(declare-fun c!16372 () Bool)

(declare-fun lt!48440 () (_ BitVec 64))

(assert (=> b!96802 (= c!16372 (= lt!48440 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63097 () SeekEntryResult!255)

(assert (=> b!96802 (= e!63097 e!63098)))

(declare-fun d!25747 () Bool)

(declare-fun lt!48439 () SeekEntryResult!255)

(assert (=> d!25747 (and (or ((_ is Undefined!255) lt!48439) (not ((_ is Found!255) lt!48439)) (and (bvsge (index!3163 lt!48439) #b00000000000000000000000000000000) (bvslt (index!3163 lt!48439) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!48439) ((_ is Found!255) lt!48439) (not ((_ is MissingZero!255) lt!48439)) (and (bvsge (index!3162 lt!48439) #b00000000000000000000000000000000) (bvslt (index!3162 lt!48439) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!48439) ((_ is Found!255) lt!48439) ((_ is MissingZero!255) lt!48439) (not ((_ is MissingVacant!255) lt!48439)) (and (bvsge (index!3165 lt!48439) #b00000000000000000000000000000000) (bvslt (index!3165 lt!48439) (size!2240 (_keys!4141 newMap!16))))) (or ((_ is Undefined!255) lt!48439) (ite ((_ is Found!255) lt!48439) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3163 lt!48439)) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!255) lt!48439) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3162 lt!48439)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!255) lt!48439) (= (select (arr!1990 (_keys!4141 newMap!16)) (index!3165 lt!48439)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25747 (= lt!48439 e!63099)))

(declare-fun c!16371 () Bool)

(assert (=> d!25747 (= c!16371 (and ((_ is Intermediate!255) lt!48438) (undefined!1067 lt!48438)))))

(assert (=> d!25747 (= lt!48438 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (mask!6540 newMap!16)) (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (_keys!4141 newMap!16) (mask!6540 newMap!16)))))

(assert (=> d!25747 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25747 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000) (_keys!4141 newMap!16) (mask!6540 newMap!16)) lt!48439)))

(declare-fun b!96803 () Bool)

(assert (=> b!96803 (= e!63097 (Found!255 (index!3164 lt!48438)))))

(declare-fun b!96804 () Bool)

(assert (=> b!96804 (= e!63099 e!63097)))

(assert (=> b!96804 (= lt!48440 (select (arr!1990 (_keys!4141 newMap!16)) (index!3164 lt!48438)))))

(declare-fun c!16370 () Bool)

(assert (=> b!96804 (= c!16370 (= lt!48440 (select (arr!1990 (_keys!4141 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25747 c!16371) b!96799))

(assert (= (and d!25747 (not c!16371)) b!96804))

(assert (= (and b!96804 c!16370) b!96803))

(assert (= (and b!96804 (not c!16370)) b!96802))

(assert (= (and b!96802 c!16372) b!96800))

(assert (= (and b!96802 (not c!16372)) b!96801))

(assert (=> b!96801 m!103867))

(declare-fun m!105553 () Bool)

(assert (=> b!96801 m!105553))

(declare-fun m!105555 () Bool)

(assert (=> d!25747 m!105555))

(assert (=> d!25747 m!103867))

(declare-fun m!105557 () Bool)

(assert (=> d!25747 m!105557))

(declare-fun m!105559 () Bool)

(assert (=> d!25747 m!105559))

(declare-fun m!105561 () Bool)

(assert (=> d!25747 m!105561))

(assert (=> d!25747 m!103855))

(assert (=> d!25747 m!103867))

(assert (=> d!25747 m!105555))

(declare-fun m!105563 () Bool)

(assert (=> d!25747 m!105563))

(declare-fun m!105565 () Bool)

(assert (=> b!96804 m!105565))

(assert (=> b!95912 d!25747))

(declare-fun d!25749 () Bool)

(assert (not d!25749))

(assert (=> b!95985 d!25749))

(declare-fun d!25751 () Bool)

(declare-fun e!63100 () Bool)

(assert (=> d!25751 e!63100))

(declare-fun res!48826 () Bool)

(assert (=> d!25751 (=> res!48826 e!63100)))

(declare-fun lt!48442 () Bool)

(assert (=> d!25751 (= res!48826 (not lt!48442))))

(declare-fun lt!48443 () Bool)

(assert (=> d!25751 (= lt!48442 lt!48443)))

(declare-fun lt!48444 () Unit!2865)

(declare-fun e!63101 () Unit!2865)

(assert (=> d!25751 (= lt!48444 e!63101)))

(declare-fun c!16373 () Bool)

(assert (=> d!25751 (= c!16373 lt!48443)))

(assert (=> d!25751 (= lt!48443 (containsKey!151 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25751 (= (contains!791 lt!47749 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48442)))

(declare-fun b!96805 () Bool)

(declare-fun lt!48441 () Unit!2865)

(assert (=> b!96805 (= e!63101 lt!48441)))

(assert (=> b!96805 (= lt!48441 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> b!96805 (isDefined!101 (getValueByKey!147 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96806 () Bool)

(declare-fun Unit!2919 () Unit!2865)

(assert (=> b!96806 (= e!63101 Unit!2919)))

(declare-fun b!96807 () Bool)

(assert (=> b!96807 (= e!63100 (isDefined!101 (getValueByKey!147 (toList!769 lt!47749) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25751 c!16373) b!96805))

(assert (= (and d!25751 (not c!16373)) b!96806))

(assert (= (and d!25751 (not res!48826)) b!96807))

(declare-fun m!105567 () Bool)

(assert (=> d!25751 m!105567))

(declare-fun m!105569 () Bool)

(assert (=> b!96805 m!105569))

(assert (=> b!96805 m!103771))

(assert (=> b!96805 m!103771))

(declare-fun m!105571 () Bool)

(assert (=> b!96805 m!105571))

(assert (=> b!96807 m!103771))

(assert (=> b!96807 m!103771))

(assert (=> b!96807 m!105571))

(assert (=> d!25235 d!25751))

(declare-fun b!96809 () Bool)

(declare-fun e!63102 () Option!153)

(declare-fun e!63103 () Option!153)

(assert (=> b!96809 (= e!63102 e!63103)))

(declare-fun c!16375 () Bool)

(assert (=> b!96809 (= c!16375 (and ((_ is Cons!1576) lt!47747) (not (= (_1!1168 (h!2169 lt!47747)) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96810 () Bool)

(assert (=> b!96810 (= e!63103 (getValueByKey!147 (t!5493 lt!47747) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96808 () Bool)

(assert (=> b!96808 (= e!63102 (Some!152 (_2!1168 (h!2169 lt!47747))))))

(declare-fun b!96811 () Bool)

(assert (=> b!96811 (= e!63103 None!151)))

(declare-fun c!16374 () Bool)

(declare-fun d!25753 () Bool)

(assert (=> d!25753 (= c!16374 (and ((_ is Cons!1576) lt!47747) (= (_1!1168 (h!2169 lt!47747)) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25753 (= (getValueByKey!147 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63102)))

(assert (= (and d!25753 c!16374) b!96808))

(assert (= (and d!25753 (not c!16374)) b!96809))

(assert (= (and b!96809 c!16375) b!96810))

(assert (= (and b!96809 (not c!16375)) b!96811))

(declare-fun m!105573 () Bool)

(assert (=> b!96810 m!105573))

(assert (=> d!25235 d!25753))

(declare-fun d!25755 () Bool)

(assert (=> d!25755 (= (getValueByKey!147 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48445 () Unit!2865)

(assert (=> d!25755 (= lt!48445 (choose!590 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63104 () Bool)

(assert (=> d!25755 e!63104))

(declare-fun res!48827 () Bool)

(assert (=> d!25755 (=> (not res!48827) (not e!63104))))

(assert (=> d!25755 (= res!48827 (isStrictlySorted!298 lt!47747))))

(assert (=> d!25755 (= (lemmaContainsTupThenGetReturnValue!66 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48445)))

(declare-fun b!96812 () Bool)

(declare-fun res!48828 () Bool)

(assert (=> b!96812 (=> (not res!48828) (not e!63104))))

(assert (=> b!96812 (= res!48828 (containsKey!151 lt!47747 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96813 () Bool)

(assert (=> b!96813 (= e!63104 (contains!793 lt!47747 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25755 res!48827) b!96812))

(assert (= (and b!96812 res!48828) b!96813))

(assert (=> d!25755 m!103765))

(declare-fun m!105575 () Bool)

(assert (=> d!25755 m!105575))

(declare-fun m!105577 () Bool)

(assert (=> d!25755 m!105577))

(declare-fun m!105579 () Bool)

(assert (=> b!96812 m!105579))

(declare-fun m!105581 () Bool)

(assert (=> b!96813 m!105581))

(assert (=> d!25235 d!25755))

(declare-fun b!96814 () Bool)

(declare-fun e!63109 () List!1580)

(declare-fun call!9820 () List!1580)

(assert (=> b!96814 (= e!63109 call!9820)))

(declare-fun e!63107 () List!1580)

(declare-fun c!16378 () Bool)

(declare-fun b!96815 () Bool)

(declare-fun c!16377 () Bool)

(assert (=> b!96815 (= e!63107 (ite c!16378 (t!5493 (toList!769 lt!47721)) (ite c!16377 (Cons!1576 (h!2169 (toList!769 lt!47721)) (t!5493 (toList!769 lt!47721))) Nil!1577)))))

(declare-fun b!96816 () Bool)

(assert (=> b!96816 (= e!63107 (insertStrictlySorted!69 (t!5493 (toList!769 lt!47721)) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63106 () Bool)

(declare-fun lt!48446 () List!1580)

(declare-fun b!96817 () Bool)

(assert (=> b!96817 (= e!63106 (contains!793 lt!48446 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9817 () Bool)

(declare-fun call!9821 () List!1580)

(declare-fun call!9822 () List!1580)

(assert (=> bm!9817 (= call!9821 call!9822)))

(declare-fun b!96818 () Bool)

(declare-fun e!63105 () List!1580)

(assert (=> b!96818 (= e!63105 call!9821)))

(declare-fun b!96819 () Bool)

(assert (=> b!96819 (= e!63109 call!9820)))

(declare-fun d!25757 () Bool)

(assert (=> d!25757 e!63106))

(declare-fun res!48829 () Bool)

(assert (=> d!25757 (=> (not res!48829) (not e!63106))))

(assert (=> d!25757 (= res!48829 (isStrictlySorted!298 lt!48446))))

(declare-fun e!63108 () List!1580)

(assert (=> d!25757 (= lt!48446 e!63108)))

(declare-fun c!16376 () Bool)

(assert (=> d!25757 (= c!16376 (and ((_ is Cons!1576) (toList!769 lt!47721)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47721))) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25757 (isStrictlySorted!298 (toList!769 lt!47721))))

(assert (=> d!25757 (= (insertStrictlySorted!69 (toList!769 lt!47721) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48446)))

(declare-fun b!96820 () Bool)

(assert (=> b!96820 (= c!16377 (and ((_ is Cons!1576) (toList!769 lt!47721)) (bvsgt (_1!1168 (h!2169 (toList!769 lt!47721))) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96820 (= e!63105 e!63109)))

(declare-fun b!96821 () Bool)

(declare-fun res!48830 () Bool)

(assert (=> b!96821 (=> (not res!48830) (not e!63106))))

(assert (=> b!96821 (= res!48830 (containsKey!151 lt!48446 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9818 () Bool)

(assert (=> bm!9818 (= call!9822 ($colon$colon!76 e!63107 (ite c!16376 (h!2169 (toList!769 lt!47721)) (tuple2!2315 (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun c!16379 () Bool)

(assert (=> bm!9818 (= c!16379 c!16376)))

(declare-fun b!96822 () Bool)

(assert (=> b!96822 (= e!63108 e!63105)))

(assert (=> b!96822 (= c!16378 (and ((_ is Cons!1576) (toList!769 lt!47721)) (= (_1!1168 (h!2169 (toList!769 lt!47721))) (_1!1168 (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96823 () Bool)

(assert (=> b!96823 (= e!63108 call!9822)))

(declare-fun bm!9819 () Bool)

(assert (=> bm!9819 (= call!9820 call!9821)))

(assert (= (and d!25757 c!16376) b!96823))

(assert (= (and d!25757 (not c!16376)) b!96822))

(assert (= (and b!96822 c!16378) b!96818))

(assert (= (and b!96822 (not c!16378)) b!96820))

(assert (= (and b!96820 c!16377) b!96819))

(assert (= (and b!96820 (not c!16377)) b!96814))

(assert (= (or b!96819 b!96814) bm!9819))

(assert (= (or b!96818 bm!9819) bm!9817))

(assert (= (or b!96823 bm!9817) bm!9818))

(assert (= (and bm!9818 c!16379) b!96816))

(assert (= (and bm!9818 (not c!16379)) b!96815))

(assert (= (and d!25757 res!48829) b!96821))

(assert (= (and b!96821 res!48830) b!96817))

(declare-fun m!105583 () Bool)

(assert (=> b!96821 m!105583))

(declare-fun m!105585 () Bool)

(assert (=> b!96817 m!105585))

(declare-fun m!105587 () Bool)

(assert (=> bm!9818 m!105587))

(declare-fun m!105589 () Bool)

(assert (=> d!25757 m!105589))

(declare-fun m!105591 () Bool)

(assert (=> d!25757 m!105591))

(declare-fun m!105593 () Bool)

(assert (=> b!96816 m!105593))

(assert (=> d!25235 d!25757))

(declare-fun d!25759 () Bool)

(declare-fun e!63110 () Bool)

(assert (=> d!25759 e!63110))

(declare-fun res!48831 () Bool)

(assert (=> d!25759 (=> res!48831 e!63110)))

(declare-fun lt!48448 () Bool)

(assert (=> d!25759 (= res!48831 (not lt!48448))))

(declare-fun lt!48449 () Bool)

(assert (=> d!25759 (= lt!48448 lt!48449)))

(declare-fun lt!48450 () Unit!2865)

(declare-fun e!63111 () Unit!2865)

(assert (=> d!25759 (= lt!48450 e!63111)))

(declare-fun c!16380 () Bool)

(assert (=> d!25759 (= c!16380 lt!48449)))

(assert (=> d!25759 (= lt!48449 (containsKey!151 (toList!769 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(assert (=> d!25759 (= (contains!791 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))) lt!48448)))

(declare-fun b!96824 () Bool)

(declare-fun lt!48447 () Unit!2865)

(assert (=> b!96824 (= e!63111 lt!48447)))

(assert (=> b!96824 (= lt!48447 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(assert (=> b!96824 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(declare-fun b!96825 () Bool)

(declare-fun Unit!2920 () Unit!2865)

(assert (=> b!96825 (= e!63111 Unit!2920)))

(declare-fun b!96826 () Bool)

(assert (=> b!96826 (= e!63110 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))))

(assert (= (and d!25759 c!16380) b!96824))

(assert (= (and d!25759 (not c!16380)) b!96825))

(assert (= (and d!25759 (not res!48831)) b!96826))

(assert (=> d!25759 m!103911))

(declare-fun m!105595 () Bool)

(assert (=> d!25759 m!105595))

(assert (=> b!96824 m!103911))

(declare-fun m!105597 () Bool)

(assert (=> b!96824 m!105597))

(assert (=> b!96824 m!103911))

(declare-fun m!105599 () Bool)

(assert (=> b!96824 m!105599))

(assert (=> b!96824 m!105599))

(declare-fun m!105601 () Bool)

(assert (=> b!96824 m!105601))

(assert (=> b!96826 m!103911))

(assert (=> b!96826 m!105599))

(assert (=> b!96826 m!105599))

(assert (=> b!96826 m!105601))

(assert (=> d!25279 d!25759))

(declare-fun d!25761 () Bool)

(declare-fun e!63112 () Bool)

(assert (=> d!25761 e!63112))

(declare-fun res!48832 () Bool)

(assert (=> d!25761 (=> res!48832 e!63112)))

(declare-fun lt!48452 () Bool)

(assert (=> d!25761 (= res!48832 (not lt!48452))))

(declare-fun lt!48453 () Bool)

(assert (=> d!25761 (= lt!48452 lt!48453)))

(declare-fun lt!48454 () Unit!2865)

(declare-fun e!63113 () Unit!2865)

(assert (=> d!25761 (= lt!48454 e!63113)))

(declare-fun c!16381 () Bool)

(assert (=> d!25761 (= c!16381 lt!48453)))

(assert (=> d!25761 (= lt!48453 (containsKey!151 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25761 (= (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48452)))

(declare-fun b!96827 () Bool)

(declare-fun lt!48451 () Unit!2865)

(assert (=> b!96827 (= e!63113 lt!48451)))

(assert (=> b!96827 (= lt!48451 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> b!96827 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96828 () Bool)

(declare-fun Unit!2921 () Unit!2865)

(assert (=> b!96828 (= e!63113 Unit!2921)))

(declare-fun b!96829 () Bool)

(assert (=> b!96829 (= e!63112 (isDefined!101 (getValueByKey!147 (toList!769 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (= (and d!25761 c!16381) b!96827))

(assert (= (and d!25761 (not c!16381)) b!96828))

(assert (= (and d!25761 (not res!48832)) b!96829))

(assert (=> d!25761 m!103459))

(declare-fun m!105603 () Bool)

(assert (=> d!25761 m!105603))

(assert (=> b!96827 m!103459))

(declare-fun m!105605 () Bool)

(assert (=> b!96827 m!105605))

(assert (=> b!96827 m!103459))

(declare-fun m!105607 () Bool)

(assert (=> b!96827 m!105607))

(assert (=> b!96827 m!105607))

(declare-fun m!105609 () Bool)

(assert (=> b!96827 m!105609))

(assert (=> b!96829 m!103459))

(assert (=> b!96829 m!105607))

(assert (=> b!96829 m!105607))

(assert (=> b!96829 m!105609))

(assert (=> d!25279 d!25761))

(assert (=> d!25279 d!25289))

(assert (=> d!25279 d!25225))

(assert (=> d!25279 d!25271))

(declare-fun b!96839 () Bool)

(declare-fun res!48842 () Bool)

(declare-fun e!63118 () Bool)

(assert (=> b!96839 (=> (not res!48842) (not e!63118))))

(assert (=> b!96839 (= res!48842 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun b!96841 () Bool)

(declare-fun e!63119 () Bool)

(assert (=> b!96841 (= e!63119 (= (arrayCountValidKeys!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4141 newMap!16) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!25763 () Bool)

(assert (=> d!25763 e!63119))

(declare-fun res!48844 () Bool)

(assert (=> d!25763 (=> (not res!48844) (not e!63119))))

(assert (=> d!25763 (= res!48844 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 (_keys!4141 newMap!16)))))))

(declare-fun lt!48457 () Unit!2865)

(declare-fun choose!1 (array!4191 (_ BitVec 32) (_ BitVec 64)) Unit!2865)

(assert (=> d!25763 (= lt!48457 (choose!1 (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25763 e!63118))

(declare-fun res!48843 () Bool)

(assert (=> d!25763 (=> (not res!48843) (not e!63118))))

(assert (=> d!25763 (= res!48843 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 (_keys!4141 newMap!16)))))))

(assert (=> d!25763 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48457)))

(declare-fun b!96838 () Bool)

(declare-fun res!48841 () Bool)

(assert (=> b!96838 (=> (not res!48841) (not e!63118))))

(assert (=> b!96838 (= res!48841 (not (validKeyInArray!0 (select (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))))

(declare-fun b!96840 () Bool)

(assert (=> b!96840 (= e!63118 (bvslt (size!2240 (_keys!4141 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!25763 res!48843) b!96838))

(assert (= (and b!96838 res!48841) b!96839))

(assert (= (and b!96839 res!48842) b!96840))

(assert (= (and d!25763 res!48844) b!96841))

(assert (=> b!96839 m!103459))

(assert (=> b!96839 m!103601))

(assert (=> b!96841 m!103915))

(assert (=> b!96841 m!103923))

(assert (=> b!96841 m!103729))

(assert (=> d!25763 m!103459))

(declare-fun m!105611 () Bool)

(assert (=> d!25763 m!105611))

(declare-fun m!105613 () Bool)

(assert (=> b!96838 m!105613))

(assert (=> b!96838 m!105613))

(declare-fun m!105615 () Bool)

(assert (=> b!96838 m!105615))

(assert (=> d!25279 d!25763))

(declare-fun d!25765 () Bool)

(declare-fun e!63122 () Bool)

(assert (=> d!25765 e!63122))

(declare-fun res!48847 () Bool)

(assert (=> d!25765 (=> (not res!48847) (not e!63122))))

(assert (=> d!25765 (= res!48847 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 (_keys!4141 newMap!16)))))))

(declare-fun lt!48460 () Unit!2865)

(declare-fun choose!41 (array!4191 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1581) Unit!2865)

(assert (=> d!25765 (= lt!48460 (choose!41 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) lt!47884 lt!47882))))

(assert (=> d!25765 (bvslt (size!2240 (_keys!4141 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!25765 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4141 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) lt!47884 lt!47882) lt!48460)))

(declare-fun b!96844 () Bool)

(assert (=> b!96844 (= e!63122 (arrayNoDuplicates!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) lt!47884 lt!47882))))

(assert (= (and d!25765 res!48847) b!96844))

(assert (=> d!25765 m!103459))

(declare-fun m!105617 () Bool)

(assert (=> d!25765 m!105617))

(assert (=> b!96844 m!103915))

(assert (=> b!96844 m!103919))

(assert (=> d!25279 d!25765))

(declare-fun call!9824 () ListLongMap!1507)

(declare-fun bm!9820 () Bool)

(assert (=> bm!9820 (= call!9824 (getCurrentListMapNoExtraKeys!91 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96845 () Bool)

(declare-fun e!63128 () Unit!2865)

(declare-fun Unit!2922 () Unit!2865)

(assert (=> b!96845 (= e!63128 Unit!2922)))

(declare-fun bm!9821 () Bool)

(declare-fun call!9827 () ListLongMap!1507)

(assert (=> bm!9821 (= call!9827 call!9824)))

(declare-fun b!96846 () Bool)

(declare-fun lt!48479 () Unit!2865)

(assert (=> b!96846 (= e!63128 lt!48479)))

(declare-fun lt!48473 () ListLongMap!1507)

(assert (=> b!96846 (= lt!48473 (getCurrentListMapNoExtraKeys!91 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48480 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48480 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48467 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48467 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48464 () Unit!2865)

(assert (=> b!96846 (= lt!48464 (addStillContains!67 lt!48473 lt!48480 (zeroValue!2341 newMap!16) lt!48467))))

(assert (=> b!96846 (contains!791 (+!127 lt!48473 (tuple2!2315 lt!48480 (zeroValue!2341 newMap!16))) lt!48467)))

(declare-fun lt!48477 () Unit!2865)

(assert (=> b!96846 (= lt!48477 lt!48464)))

(declare-fun lt!48476 () ListLongMap!1507)

(assert (=> b!96846 (= lt!48476 (getCurrentListMapNoExtraKeys!91 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48461 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48461 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48462 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48462 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48478 () Unit!2865)

(assert (=> b!96846 (= lt!48478 (addApplyDifferent!67 lt!48476 lt!48461 (minValue!2341 newMap!16) lt!48462))))

(assert (=> b!96846 (= (apply!91 (+!127 lt!48476 (tuple2!2315 lt!48461 (minValue!2341 newMap!16))) lt!48462) (apply!91 lt!48476 lt!48462))))

(declare-fun lt!48463 () Unit!2865)

(assert (=> b!96846 (= lt!48463 lt!48478)))

(declare-fun lt!48481 () ListLongMap!1507)

(assert (=> b!96846 (= lt!48481 (getCurrentListMapNoExtraKeys!91 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48475 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48475 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48466 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48466 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48470 () Unit!2865)

(assert (=> b!96846 (= lt!48470 (addApplyDifferent!67 lt!48481 lt!48475 (zeroValue!2341 newMap!16) lt!48466))))

(assert (=> b!96846 (= (apply!91 (+!127 lt!48481 (tuple2!2315 lt!48475 (zeroValue!2341 newMap!16))) lt!48466) (apply!91 lt!48481 lt!48466))))

(declare-fun lt!48471 () Unit!2865)

(assert (=> b!96846 (= lt!48471 lt!48470)))

(declare-fun lt!48472 () ListLongMap!1507)

(assert (=> b!96846 (= lt!48472 (getCurrentListMapNoExtraKeys!91 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48469 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48469 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48474 () (_ BitVec 64))

(assert (=> b!96846 (= lt!48474 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!96846 (= lt!48479 (addApplyDifferent!67 lt!48472 lt!48469 (minValue!2341 newMap!16) lt!48474))))

(assert (=> b!96846 (= (apply!91 (+!127 lt!48472 (tuple2!2315 lt!48469 (minValue!2341 newMap!16))) lt!48474) (apply!91 lt!48472 lt!48474))))

(declare-fun b!96847 () Bool)

(declare-fun e!63127 () ListLongMap!1507)

(declare-fun call!9826 () ListLongMap!1507)

(assert (=> b!96847 (= e!63127 (+!127 call!9826 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96849 () Bool)

(declare-fun e!63129 () Bool)

(declare-fun call!9828 () Bool)

(assert (=> b!96849 (= e!63129 (not call!9828))))

(declare-fun b!96850 () Bool)

(declare-fun e!63125 () Bool)

(declare-fun e!63126 () Bool)

(assert (=> b!96850 (= e!63125 e!63126)))

(declare-fun c!16382 () Bool)

(assert (=> b!96850 (= c!16382 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96851 () Bool)

(declare-fun lt!48482 () ListLongMap!1507)

(declare-fun e!63135 () Bool)

(assert (=> b!96851 (= e!63135 (= (apply!91 lt!48482 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96851 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))))))))

(assert (=> b!96851 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun b!96852 () Bool)

(declare-fun e!63131 () ListLongMap!1507)

(assert (=> b!96852 (= e!63127 e!63131)))

(declare-fun c!16386 () Bool)

(assert (=> b!96852 (= c!16386 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96853 () Bool)

(declare-fun call!9825 () Bool)

(assert (=> b!96853 (= e!63126 (not call!9825))))

(declare-fun b!96854 () Bool)

(declare-fun e!63132 () Bool)

(assert (=> b!96854 (= e!63129 e!63132)))

(declare-fun res!48849 () Bool)

(assert (=> b!96854 (= res!48849 call!9828)))

(assert (=> b!96854 (=> (not res!48849) (not e!63132))))

(declare-fun b!96855 () Bool)

(declare-fun res!48853 () Bool)

(assert (=> b!96855 (=> (not res!48853) (not e!63125))))

(declare-fun e!63123 () Bool)

(assert (=> b!96855 (= res!48853 e!63123)))

(declare-fun res!48854 () Bool)

(assert (=> b!96855 (=> res!48854 e!63123)))

(declare-fun e!63130 () Bool)

(assert (=> b!96855 (= res!48854 (not e!63130))))

(declare-fun res!48851 () Bool)

(assert (=> b!96855 (=> (not res!48851) (not e!63130))))

(assert (=> b!96855 (= res!48851 (bvslt #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun bm!9822 () Bool)

(assert (=> bm!9822 (= call!9825 (contains!791 lt!48482 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96856 () Bool)

(declare-fun call!9823 () ListLongMap!1507)

(assert (=> b!96856 (= e!63131 call!9823)))

(declare-fun b!96857 () Bool)

(assert (=> b!96857 (= e!63130 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96858 () Bool)

(declare-fun e!63124 () Bool)

(assert (=> b!96858 (= e!63126 e!63124)))

(declare-fun res!48856 () Bool)

(assert (=> b!96858 (= res!48856 call!9825)))

(assert (=> b!96858 (=> (not res!48856) (not e!63124))))

(declare-fun b!96859 () Bool)

(assert (=> b!96859 (= e!63123 e!63135)))

(declare-fun res!48852 () Bool)

(assert (=> b!96859 (=> (not res!48852) (not e!63135))))

(assert (=> b!96859 (= res!48852 (contains!791 lt!48482 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!96859 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(declare-fun b!96860 () Bool)

(declare-fun e!63134 () ListLongMap!1507)

(assert (=> b!96860 (= e!63134 call!9823)))

(declare-fun b!96861 () Bool)

(declare-fun e!63133 () Bool)

(assert (=> b!96861 (= e!63133 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96862 () Bool)

(declare-fun res!48855 () Bool)

(assert (=> b!96862 (=> (not res!48855) (not e!63125))))

(assert (=> b!96862 (= res!48855 e!63129)))

(declare-fun c!16385 () Bool)

(assert (=> b!96862 (= c!16385 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96863 () Bool)

(declare-fun c!16387 () Bool)

(assert (=> b!96863 (= c!16387 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96863 (= e!63131 e!63134)))

(declare-fun bm!9823 () Bool)

(assert (=> bm!9823 (= call!9823 call!9826)))

(declare-fun b!96864 () Bool)

(assert (=> b!96864 (= e!63124 (= (apply!91 lt!48482 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96865 () Bool)

(declare-fun call!9829 () ListLongMap!1507)

(assert (=> b!96865 (= e!63134 call!9829)))

(declare-fun b!96848 () Bool)

(assert (=> b!96848 (= e!63132 (= (apply!91 lt!48482 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25767 () Bool)

(assert (=> d!25767 e!63125))

(declare-fun res!48848 () Bool)

(assert (=> d!25767 (=> (not res!48848) (not e!63125))))

(assert (=> d!25767 (= res!48848 (or (bvsge #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))))

(declare-fun lt!48468 () ListLongMap!1507)

(assert (=> d!25767 (= lt!48482 lt!48468)))

(declare-fun lt!48465 () Unit!2865)

(assert (=> d!25767 (= lt!48465 e!63128)))

(declare-fun c!16384 () Bool)

(assert (=> d!25767 (= c!16384 e!63133)))

(declare-fun res!48850 () Bool)

(assert (=> d!25767 (=> (not res!48850) (not e!63133))))

(assert (=> d!25767 (= res!48850 (bvslt #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(assert (=> d!25767 (= lt!48468 e!63127)))

(declare-fun c!16383 () Bool)

(assert (=> d!25767 (= c!16383 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25767 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25767 (= (getCurrentListMap!451 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48482)))

(declare-fun bm!9824 () Bool)

(assert (=> bm!9824 (= call!9826 (+!127 (ite c!16383 call!9824 (ite c!16386 call!9827 call!9829)) (ite (or c!16383 c!16386) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9825 () Bool)

(assert (=> bm!9825 (= call!9828 (contains!791 lt!48482 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9826 () Bool)

(assert (=> bm!9826 (= call!9829 call!9827)))

(assert (= (and d!25767 c!16383) b!96847))

(assert (= (and d!25767 (not c!16383)) b!96852))

(assert (= (and b!96852 c!16386) b!96856))

(assert (= (and b!96852 (not c!16386)) b!96863))

(assert (= (and b!96863 c!16387) b!96860))

(assert (= (and b!96863 (not c!16387)) b!96865))

(assert (= (or b!96860 b!96865) bm!9826))

(assert (= (or b!96856 bm!9826) bm!9821))

(assert (= (or b!96856 b!96860) bm!9823))

(assert (= (or b!96847 bm!9821) bm!9820))

(assert (= (or b!96847 bm!9823) bm!9824))

(assert (= (and d!25767 res!48850) b!96861))

(assert (= (and d!25767 c!16384) b!96846))

(assert (= (and d!25767 (not c!16384)) b!96845))

(assert (= (and d!25767 res!48848) b!96855))

(assert (= (and b!96855 res!48851) b!96857))

(assert (= (and b!96855 (not res!48854)) b!96859))

(assert (= (and b!96859 res!48852) b!96851))

(assert (= (and b!96855 res!48853) b!96862))

(assert (= (and b!96862 c!16385) b!96854))

(assert (= (and b!96862 (not c!16385)) b!96849))

(assert (= (and b!96854 res!48849) b!96848))

(assert (= (or b!96854 b!96849) bm!9825))

(assert (= (and b!96862 res!48855) b!96850))

(assert (= (and b!96850 c!16382) b!96858))

(assert (= (and b!96850 (not c!16382)) b!96853))

(assert (= (and b!96858 res!48856) b!96864))

(assert (= (or b!96858 b!96853) bm!9822))

(declare-fun b_lambda!4279 () Bool)

(assert (=> (not b_lambda!4279) (not b!96851)))

(assert (=> b!96851 t!5505))

(declare-fun b_and!5925 () Bool)

(assert (= b_and!5921 (and (=> t!5505 result!3225) b_and!5925)))

(assert (=> b!96851 t!5507))

(declare-fun b_and!5927 () Bool)

(assert (= b_and!5923 (and (=> t!5507 result!3227) b_and!5927)))

(declare-fun m!105619 () Bool)

(assert (=> bm!9822 m!105619))

(declare-fun m!105621 () Bool)

(assert (=> b!96864 m!105621))

(declare-fun m!105623 () Bool)

(assert (=> b!96859 m!105623))

(assert (=> b!96859 m!105623))

(declare-fun m!105625 () Bool)

(assert (=> b!96859 m!105625))

(declare-fun m!105627 () Bool)

(assert (=> b!96847 m!105627))

(assert (=> d!25767 m!103855))

(assert (=> b!96851 m!105623))

(declare-fun m!105629 () Bool)

(assert (=> b!96851 m!105629))

(assert (=> b!96851 m!103989))

(assert (=> b!96851 m!105623))

(declare-fun m!105631 () Bool)

(assert (=> b!96851 m!105631))

(assert (=> b!96851 m!103989))

(declare-fun m!105633 () Bool)

(assert (=> b!96851 m!105633))

(assert (=> b!96851 m!105631))

(declare-fun m!105635 () Bool)

(assert (=> bm!9824 m!105635))

(declare-fun m!105637 () Bool)

(assert (=> bm!9825 m!105637))

(declare-fun m!105639 () Bool)

(assert (=> b!96846 m!105639))

(declare-fun m!105641 () Bool)

(assert (=> b!96846 m!105641))

(declare-fun m!105643 () Bool)

(assert (=> b!96846 m!105643))

(declare-fun m!105645 () Bool)

(assert (=> b!96846 m!105645))

(declare-fun m!105647 () Bool)

(assert (=> b!96846 m!105647))

(declare-fun m!105649 () Bool)

(assert (=> b!96846 m!105649))

(declare-fun m!105651 () Bool)

(assert (=> b!96846 m!105651))

(declare-fun m!105653 () Bool)

(assert (=> b!96846 m!105653))

(declare-fun m!105655 () Bool)

(assert (=> b!96846 m!105655))

(declare-fun m!105657 () Bool)

(assert (=> b!96846 m!105657))

(assert (=> b!96846 m!105655))

(declare-fun m!105659 () Bool)

(assert (=> b!96846 m!105659))

(declare-fun m!105661 () Bool)

(assert (=> b!96846 m!105661))

(declare-fun m!105663 () Bool)

(assert (=> b!96846 m!105663))

(assert (=> b!96846 m!105661))

(assert (=> b!96846 m!105651))

(assert (=> b!96846 m!105639))

(declare-fun m!105665 () Bool)

(assert (=> b!96846 m!105665))

(declare-fun m!105667 () Bool)

(assert (=> b!96846 m!105667))

(assert (=> b!96846 m!105623))

(declare-fun m!105669 () Bool)

(assert (=> b!96846 m!105669))

(assert (=> b!96857 m!105623))

(assert (=> b!96857 m!105623))

(declare-fun m!105671 () Bool)

(assert (=> b!96857 m!105671))

(assert (=> bm!9820 m!105665))

(assert (=> b!96861 m!105623))

(assert (=> b!96861 m!105623))

(assert (=> b!96861 m!105671))

(declare-fun m!105673 () Bool)

(assert (=> b!96848 m!105673))

(assert (=> d!25279 d!25767))

(assert (=> d!25279 d!25653))

(declare-fun b!96866 () Bool)

(declare-fun e!63137 () (_ BitVec 32))

(assert (=> b!96866 (= e!63137 #b00000000000000000000000000000000)))

(declare-fun b!96867 () Bool)

(declare-fun e!63136 () (_ BitVec 32))

(assert (=> b!96867 (= e!63137 e!63136)))

(declare-fun c!16388 () Bool)

(assert (=> b!96867 (= c!16388 (validKeyInArray!0 (select (arr!1990 lt!47881) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(declare-fun lt!48483 () (_ BitVec 32))

(declare-fun d!25769 () Bool)

(assert (=> d!25769 (and (bvsge lt!48483 #b00000000000000000000000000000000) (bvsle lt!48483 (bvsub (size!2240 lt!47881) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(assert (=> d!25769 (= lt!48483 e!63137)))

(declare-fun c!16389 () Bool)

(assert (=> d!25769 (= c!16389 (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)))))

(assert (=> d!25769 (and (bvsle (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)) (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001) (size!2240 lt!47881)))))

(assert (=> d!25769 (= (arrayCountValidKeys!0 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)) lt!48483)))

(declare-fun call!9830 () (_ BitVec 32))

(declare-fun bm!9827 () Bool)

(assert (=> bm!9827 (= call!9830 (arrayCountValidKeys!0 lt!47881 (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)))))

(declare-fun b!96868 () Bool)

(assert (=> b!96868 (= e!63136 (bvadd #b00000000000000000000000000000001 call!9830))))

(declare-fun b!96869 () Bool)

(assert (=> b!96869 (= e!63136 call!9830)))

(assert (= (and d!25769 c!16389) b!96866))

(assert (= (and d!25769 (not c!16389)) b!96867))

(assert (= (and b!96867 c!16388) b!96868))

(assert (= (and b!96867 (not c!16388)) b!96869))

(assert (= (or b!96868 b!96869) bm!9827))

(declare-fun m!105675 () Bool)

(assert (=> b!96867 m!105675))

(assert (=> b!96867 m!105675))

(declare-fun m!105677 () Bool)

(assert (=> b!96867 m!105677))

(declare-fun m!105679 () Bool)

(assert (=> bm!9827 m!105679))

(assert (=> d!25279 d!25769))

(declare-fun bm!9828 () Bool)

(declare-fun call!9832 () ListLongMap!1507)

(assert (=> bm!9828 (= call!9832 (getCurrentListMapNoExtraKeys!91 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96870 () Bool)

(declare-fun e!63143 () Unit!2865)

(declare-fun Unit!2923 () Unit!2865)

(assert (=> b!96870 (= e!63143 Unit!2923)))

(declare-fun bm!9829 () Bool)

(declare-fun call!9835 () ListLongMap!1507)

(assert (=> bm!9829 (= call!9835 call!9832)))

(declare-fun b!96871 () Bool)

(declare-fun lt!48502 () Unit!2865)

(assert (=> b!96871 (= e!63143 lt!48502)))

(declare-fun lt!48496 () ListLongMap!1507)

(assert (=> b!96871 (= lt!48496 (getCurrentListMapNoExtraKeys!91 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48503 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48503 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48490 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48490 (select (arr!1990 lt!47883) #b00000000000000000000000000000000))))

(declare-fun lt!48487 () Unit!2865)

(assert (=> b!96871 (= lt!48487 (addStillContains!67 lt!48496 lt!48503 (zeroValue!2341 newMap!16) lt!48490))))

(assert (=> b!96871 (contains!791 (+!127 lt!48496 (tuple2!2315 lt!48503 (zeroValue!2341 newMap!16))) lt!48490)))

(declare-fun lt!48500 () Unit!2865)

(assert (=> b!96871 (= lt!48500 lt!48487)))

(declare-fun lt!48499 () ListLongMap!1507)

(assert (=> b!96871 (= lt!48499 (getCurrentListMapNoExtraKeys!91 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48484 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48484 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48485 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48485 (select (arr!1990 lt!47883) #b00000000000000000000000000000000))))

(declare-fun lt!48501 () Unit!2865)

(assert (=> b!96871 (= lt!48501 (addApplyDifferent!67 lt!48499 lt!48484 (minValue!2341 newMap!16) lt!48485))))

(assert (=> b!96871 (= (apply!91 (+!127 lt!48499 (tuple2!2315 lt!48484 (minValue!2341 newMap!16))) lt!48485) (apply!91 lt!48499 lt!48485))))

(declare-fun lt!48486 () Unit!2865)

(assert (=> b!96871 (= lt!48486 lt!48501)))

(declare-fun lt!48504 () ListLongMap!1507)

(assert (=> b!96871 (= lt!48504 (getCurrentListMapNoExtraKeys!91 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48498 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48498 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48489 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48489 (select (arr!1990 lt!47883) #b00000000000000000000000000000000))))

(declare-fun lt!48493 () Unit!2865)

(assert (=> b!96871 (= lt!48493 (addApplyDifferent!67 lt!48504 lt!48498 (zeroValue!2341 newMap!16) lt!48489))))

(assert (=> b!96871 (= (apply!91 (+!127 lt!48504 (tuple2!2315 lt!48498 (zeroValue!2341 newMap!16))) lt!48489) (apply!91 lt!48504 lt!48489))))

(declare-fun lt!48494 () Unit!2865)

(assert (=> b!96871 (= lt!48494 lt!48493)))

(declare-fun lt!48495 () ListLongMap!1507)

(assert (=> b!96871 (= lt!48495 (getCurrentListMapNoExtraKeys!91 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48492 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48492 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48497 () (_ BitVec 64))

(assert (=> b!96871 (= lt!48497 (select (arr!1990 lt!47883) #b00000000000000000000000000000000))))

(assert (=> b!96871 (= lt!48502 (addApplyDifferent!67 lt!48495 lt!48492 (minValue!2341 newMap!16) lt!48497))))

(assert (=> b!96871 (= (apply!91 (+!127 lt!48495 (tuple2!2315 lt!48492 (minValue!2341 newMap!16))) lt!48497) (apply!91 lt!48495 lt!48497))))

(declare-fun b!96872 () Bool)

(declare-fun e!63142 () ListLongMap!1507)

(declare-fun call!9834 () ListLongMap!1507)

(assert (=> b!96872 (= e!63142 (+!127 call!9834 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96874 () Bool)

(declare-fun e!63144 () Bool)

(declare-fun call!9836 () Bool)

(assert (=> b!96874 (= e!63144 (not call!9836))))

(declare-fun b!96875 () Bool)

(declare-fun e!63140 () Bool)

(declare-fun e!63141 () Bool)

(assert (=> b!96875 (= e!63140 e!63141)))

(declare-fun c!16390 () Bool)

(assert (=> b!96875 (= c!16390 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96876 () Bool)

(declare-fun e!63150 () Bool)

(declare-fun lt!48505 () ListLongMap!1507)

(assert (=> b!96876 (= e!63150 (= (apply!91 lt!48505 (select (arr!1990 lt!47883) #b00000000000000000000000000000000)) (get!1275 (select (arr!1991 lt!47897) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96876 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2241 lt!47897)))))

(assert (=> b!96876 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 lt!47883)))))

(declare-fun b!96877 () Bool)

(declare-fun e!63146 () ListLongMap!1507)

(assert (=> b!96877 (= e!63142 e!63146)))

(declare-fun c!16394 () Bool)

(assert (=> b!96877 (= c!16394 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96878 () Bool)

(declare-fun call!9833 () Bool)

(assert (=> b!96878 (= e!63141 (not call!9833))))

(declare-fun b!96879 () Bool)

(declare-fun e!63147 () Bool)

(assert (=> b!96879 (= e!63144 e!63147)))

(declare-fun res!48858 () Bool)

(assert (=> b!96879 (= res!48858 call!9836)))

(assert (=> b!96879 (=> (not res!48858) (not e!63147))))

(declare-fun b!96880 () Bool)

(declare-fun res!48862 () Bool)

(assert (=> b!96880 (=> (not res!48862) (not e!63140))))

(declare-fun e!63138 () Bool)

(assert (=> b!96880 (= res!48862 e!63138)))

(declare-fun res!48863 () Bool)

(assert (=> b!96880 (=> res!48863 e!63138)))

(declare-fun e!63145 () Bool)

(assert (=> b!96880 (= res!48863 (not e!63145))))

(declare-fun res!48860 () Bool)

(assert (=> b!96880 (=> (not res!48860) (not e!63145))))

(assert (=> b!96880 (= res!48860 (bvslt #b00000000000000000000000000000000 (size!2240 lt!47883)))))

(declare-fun bm!9830 () Bool)

(assert (=> bm!9830 (= call!9833 (contains!791 lt!48505 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96881 () Bool)

(declare-fun call!9831 () ListLongMap!1507)

(assert (=> b!96881 (= e!63146 call!9831)))

(declare-fun b!96882 () Bool)

(assert (=> b!96882 (= e!63145 (validKeyInArray!0 (select (arr!1990 lt!47883) #b00000000000000000000000000000000)))))

(declare-fun b!96883 () Bool)

(declare-fun e!63139 () Bool)

(assert (=> b!96883 (= e!63141 e!63139)))

(declare-fun res!48865 () Bool)

(assert (=> b!96883 (= res!48865 call!9833)))

(assert (=> b!96883 (=> (not res!48865) (not e!63139))))

(declare-fun b!96884 () Bool)

(assert (=> b!96884 (= e!63138 e!63150)))

(declare-fun res!48861 () Bool)

(assert (=> b!96884 (=> (not res!48861) (not e!63150))))

(assert (=> b!96884 (= res!48861 (contains!791 lt!48505 (select (arr!1990 lt!47883) #b00000000000000000000000000000000)))))

(assert (=> b!96884 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 lt!47883)))))

(declare-fun b!96885 () Bool)

(declare-fun e!63149 () ListLongMap!1507)

(assert (=> b!96885 (= e!63149 call!9831)))

(declare-fun b!96886 () Bool)

(declare-fun e!63148 () Bool)

(assert (=> b!96886 (= e!63148 (validKeyInArray!0 (select (arr!1990 lt!47883) #b00000000000000000000000000000000)))))

(declare-fun b!96887 () Bool)

(declare-fun res!48864 () Bool)

(assert (=> b!96887 (=> (not res!48864) (not e!63140))))

(assert (=> b!96887 (= res!48864 e!63144)))

(declare-fun c!16393 () Bool)

(assert (=> b!96887 (= c!16393 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96888 () Bool)

(declare-fun c!16395 () Bool)

(assert (=> b!96888 (= c!16395 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96888 (= e!63146 e!63149)))

(declare-fun bm!9831 () Bool)

(assert (=> bm!9831 (= call!9831 call!9834)))

(declare-fun b!96889 () Bool)

(assert (=> b!96889 (= e!63139 (= (apply!91 lt!48505 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96890 () Bool)

(declare-fun call!9837 () ListLongMap!1507)

(assert (=> b!96890 (= e!63149 call!9837)))

(declare-fun b!96873 () Bool)

(assert (=> b!96873 (= e!63147 (= (apply!91 lt!48505 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun d!25771 () Bool)

(assert (=> d!25771 e!63140))

(declare-fun res!48857 () Bool)

(assert (=> d!25771 (=> (not res!48857) (not e!63140))))

(assert (=> d!25771 (= res!48857 (or (bvsge #b00000000000000000000000000000000 (size!2240 lt!47883)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2240 lt!47883)))))))

(declare-fun lt!48491 () ListLongMap!1507)

(assert (=> d!25771 (= lt!48505 lt!48491)))

(declare-fun lt!48488 () Unit!2865)

(assert (=> d!25771 (= lt!48488 e!63143)))

(declare-fun c!16392 () Bool)

(assert (=> d!25771 (= c!16392 e!63148)))

(declare-fun res!48859 () Bool)

(assert (=> d!25771 (=> (not res!48859) (not e!63148))))

(assert (=> d!25771 (= res!48859 (bvslt #b00000000000000000000000000000000 (size!2240 lt!47883)))))

(assert (=> d!25771 (= lt!48491 e!63142)))

(declare-fun c!16391 () Bool)

(assert (=> d!25771 (= c!16391 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25771 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25771 (= (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48505)))

(declare-fun bm!9832 () Bool)

(assert (=> bm!9832 (= call!9834 (+!127 (ite c!16391 call!9832 (ite c!16394 call!9835 call!9837)) (ite (or c!16391 c!16394) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun bm!9833 () Bool)

(assert (=> bm!9833 (= call!9836 (contains!791 lt!48505 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9834 () Bool)

(assert (=> bm!9834 (= call!9837 call!9835)))

(assert (= (and d!25771 c!16391) b!96872))

(assert (= (and d!25771 (not c!16391)) b!96877))

(assert (= (and b!96877 c!16394) b!96881))

(assert (= (and b!96877 (not c!16394)) b!96888))

(assert (= (and b!96888 c!16395) b!96885))

(assert (= (and b!96888 (not c!16395)) b!96890))

(assert (= (or b!96885 b!96890) bm!9834))

(assert (= (or b!96881 bm!9834) bm!9829))

(assert (= (or b!96881 b!96885) bm!9831))

(assert (= (or b!96872 bm!9829) bm!9828))

(assert (= (or b!96872 bm!9831) bm!9832))

(assert (= (and d!25771 res!48859) b!96886))

(assert (= (and d!25771 c!16392) b!96871))

(assert (= (and d!25771 (not c!16392)) b!96870))

(assert (= (and d!25771 res!48857) b!96880))

(assert (= (and b!96880 res!48860) b!96882))

(assert (= (and b!96880 (not res!48863)) b!96884))

(assert (= (and b!96884 res!48861) b!96876))

(assert (= (and b!96880 res!48862) b!96887))

(assert (= (and b!96887 c!16393) b!96879))

(assert (= (and b!96887 (not c!16393)) b!96874))

(assert (= (and b!96879 res!48858) b!96873))

(assert (= (or b!96879 b!96874) bm!9833))

(assert (= (and b!96887 res!48864) b!96875))

(assert (= (and b!96875 c!16390) b!96883))

(assert (= (and b!96875 (not c!16390)) b!96878))

(assert (= (and b!96883 res!48865) b!96889))

(assert (= (or b!96883 b!96878) bm!9830))

(declare-fun b_lambda!4281 () Bool)

(assert (=> (not b_lambda!4281) (not b!96876)))

(assert (=> b!96876 t!5505))

(declare-fun b_and!5929 () Bool)

(assert (= b_and!5925 (and (=> t!5505 result!3225) b_and!5929)))

(assert (=> b!96876 t!5507))

(declare-fun b_and!5931 () Bool)

(assert (= b_and!5927 (and (=> t!5507 result!3227) b_and!5931)))

(declare-fun m!105681 () Bool)

(assert (=> bm!9830 m!105681))

(declare-fun m!105683 () Bool)

(assert (=> b!96889 m!105683))

(declare-fun m!105685 () Bool)

(assert (=> b!96884 m!105685))

(assert (=> b!96884 m!105685))

(declare-fun m!105687 () Bool)

(assert (=> b!96884 m!105687))

(declare-fun m!105689 () Bool)

(assert (=> b!96872 m!105689))

(assert (=> d!25771 m!103855))

(assert (=> b!96876 m!105685))

(declare-fun m!105691 () Bool)

(assert (=> b!96876 m!105691))

(assert (=> b!96876 m!103989))

(assert (=> b!96876 m!105685))

(declare-fun m!105693 () Bool)

(assert (=> b!96876 m!105693))

(assert (=> b!96876 m!103989))

(declare-fun m!105695 () Bool)

(assert (=> b!96876 m!105695))

(assert (=> b!96876 m!105693))

(declare-fun m!105697 () Bool)

(assert (=> bm!9832 m!105697))

(declare-fun m!105699 () Bool)

(assert (=> bm!9833 m!105699))

(declare-fun m!105701 () Bool)

(assert (=> b!96871 m!105701))

(declare-fun m!105703 () Bool)

(assert (=> b!96871 m!105703))

(declare-fun m!105705 () Bool)

(assert (=> b!96871 m!105705))

(declare-fun m!105707 () Bool)

(assert (=> b!96871 m!105707))

(declare-fun m!105709 () Bool)

(assert (=> b!96871 m!105709))

(declare-fun m!105711 () Bool)

(assert (=> b!96871 m!105711))

(declare-fun m!105713 () Bool)

(assert (=> b!96871 m!105713))

(declare-fun m!105715 () Bool)

(assert (=> b!96871 m!105715))

(declare-fun m!105717 () Bool)

(assert (=> b!96871 m!105717))

(declare-fun m!105719 () Bool)

(assert (=> b!96871 m!105719))

(assert (=> b!96871 m!105717))

(declare-fun m!105721 () Bool)

(assert (=> b!96871 m!105721))

(declare-fun m!105723 () Bool)

(assert (=> b!96871 m!105723))

(declare-fun m!105725 () Bool)

(assert (=> b!96871 m!105725))

(assert (=> b!96871 m!105723))

(assert (=> b!96871 m!105713))

(assert (=> b!96871 m!105701))

(declare-fun m!105727 () Bool)

(assert (=> b!96871 m!105727))

(declare-fun m!105729 () Bool)

(assert (=> b!96871 m!105729))

(assert (=> b!96871 m!105685))

(declare-fun m!105731 () Bool)

(assert (=> b!96871 m!105731))

(assert (=> b!96882 m!105685))

(assert (=> b!96882 m!105685))

(declare-fun m!105733 () Bool)

(assert (=> b!96882 m!105733))

(assert (=> bm!9828 m!105727))

(assert (=> b!96886 m!105685))

(assert (=> b!96886 m!105685))

(assert (=> b!96886 m!105733))

(declare-fun m!105735 () Bool)

(assert (=> b!96873 m!105735))

(assert (=> d!25279 d!25771))

(declare-fun d!25773 () Bool)

(declare-fun e!63151 () Bool)

(assert (=> d!25773 e!63151))

(declare-fun res!48866 () Bool)

(assert (=> d!25773 (=> (not res!48866) (not e!63151))))

(assert (=> d!25773 (= res!48866 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 lt!47883))))))

(declare-fun lt!48506 () Unit!2865)

(assert (=> d!25773 (= lt!48506 (choose!588 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25773 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25773 (= (lemmaValidKeyInArrayIsInListMap!99 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (defaultEntry!2456 newMap!16)) lt!48506)))

(declare-fun b!96891 () Bool)

(assert (=> b!96891 (= e!63151 (contains!791 (getCurrentListMap!451 lt!47883 lt!47897 (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 lt!47883) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(assert (= (and d!25773 res!48866) b!96891))

(declare-fun m!105737 () Bool)

(assert (=> d!25773 m!105737))

(assert (=> d!25773 m!103855))

(assert (=> b!96891 m!103909))

(declare-fun m!105739 () Bool)

(assert (=> b!96891 m!105739))

(assert (=> b!96891 m!103909))

(assert (=> b!96891 m!105739))

(declare-fun m!105741 () Bool)

(assert (=> b!96891 m!105741))

(assert (=> d!25279 d!25773))

(declare-fun call!9838 () Bool)

(declare-fun bm!9835 () Bool)

(assert (=> bm!9835 (= call!9838 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (mask!6540 newMap!16)))))

(declare-fun d!25775 () Bool)

(declare-fun res!48867 () Bool)

(declare-fun e!63152 () Bool)

(assert (=> d!25775 (=> res!48867 e!63152)))

(assert (=> d!25775 (= res!48867 (bvsge #b00000000000000000000000000000000 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(assert (=> d!25775 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (mask!6540 newMap!16)) e!63152)))

(declare-fun b!96892 () Bool)

(declare-fun e!63153 () Bool)

(assert (=> b!96892 (= e!63153 call!9838)))

(declare-fun b!96893 () Bool)

(declare-fun e!63154 () Bool)

(assert (=> b!96893 (= e!63154 call!9838)))

(declare-fun b!96894 () Bool)

(assert (=> b!96894 (= e!63152 e!63153)))

(declare-fun c!16396 () Bool)

(assert (=> b!96894 (= c!16396 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96895 () Bool)

(assert (=> b!96895 (= e!63153 e!63154)))

(declare-fun lt!48509 () (_ BitVec 64))

(assert (=> b!96895 (= lt!48509 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48507 () Unit!2865)

(assert (=> b!96895 (= lt!48507 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) lt!48509 #b00000000000000000000000000000000))))

(assert (=> b!96895 (arrayContainsKey!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) lt!48509 #b00000000000000000000000000000000)))

(declare-fun lt!48508 () Unit!2865)

(assert (=> b!96895 (= lt!48508 lt!48507)))

(declare-fun res!48868 () Bool)

(assert (=> b!96895 (= res!48868 (= (seekEntryOrOpen!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000) (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (mask!6540 newMap!16)) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!96895 (=> (not res!48868) (not e!63154))))

(assert (= (and d!25775 (not res!48867)) b!96894))

(assert (= (and b!96894 c!16396) b!96895))

(assert (= (and b!96894 (not c!16396)) b!96892))

(assert (= (and b!96895 res!48868) b!96893))

(assert (= (or b!96893 b!96892) bm!9835))

(declare-fun m!105743 () Bool)

(assert (=> bm!9835 m!105743))

(assert (=> b!96894 m!105623))

(assert (=> b!96894 m!105623))

(assert (=> b!96894 m!105671))

(assert (=> b!96895 m!105623))

(declare-fun m!105745 () Bool)

(assert (=> b!96895 m!105745))

(declare-fun m!105747 () Bool)

(assert (=> b!96895 m!105747))

(assert (=> b!96895 m!105623))

(declare-fun m!105749 () Bool)

(assert (=> b!96895 m!105749))

(assert (=> d!25279 d!25775))

(declare-fun d!25777 () Bool)

(assert (=> d!25777 (arrayContainsKey!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!48510 () Unit!2865)

(assert (=> d!25777 (= lt!48510 (choose!13 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(assert (=> d!25777 (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000)))

(assert (=> d!25777 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))) lt!48510)))

(declare-fun bs!3997 () Bool)

(assert (= bs!3997 d!25777))

(assert (=> bs!3997 m!103459))

(assert (=> bs!3997 m!103917))

(assert (=> bs!3997 m!103459))

(declare-fun m!105751 () Bool)

(assert (=> bs!3997 m!105751))

(assert (=> d!25279 d!25777))

(declare-fun d!25779 () Bool)

(assert (=> d!25779 (= (arrayCountValidKeys!0 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (bvadd (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!48513 () Unit!2865)

(declare-fun choose!2 (array!4191 (_ BitVec 32)) Unit!2865)

(assert (=> d!25779 (= lt!48513 (choose!2 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))))))

(declare-fun e!63157 () Bool)

(assert (=> d!25779 e!63157))

(declare-fun res!48873 () Bool)

(assert (=> d!25779 (=> (not res!48873) (not e!63157))))

(assert (=> d!25779 (= res!48873 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 lt!47881))))))

(assert (=> d!25779 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47881 (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654))) lt!48513)))

(declare-fun b!96900 () Bool)

(declare-fun res!48874 () Bool)

(assert (=> b!96900 (=> (not res!48874) (not e!63157))))

(assert (=> b!96900 (= res!48874 (validKeyInArray!0 (select (arr!1990 lt!47881) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)))))))

(declare-fun b!96901 () Bool)

(assert (=> b!96901 (= e!63157 (bvslt (size!2240 lt!47881) #b01111111111111111111111111111111))))

(assert (= (and d!25779 res!48873) b!96900))

(assert (= (and b!96900 res!48874) b!96901))

(assert (=> d!25779 m!103895))

(declare-fun m!105753 () Bool)

(assert (=> d!25779 m!105753))

(assert (=> b!96900 m!105675))

(assert (=> b!96900 m!105675))

(assert (=> b!96900 m!105677))

(assert (=> d!25279 d!25779))

(declare-fun d!25781 () Bool)

(declare-fun e!63160 () Bool)

(assert (=> d!25781 e!63160))

(declare-fun res!48877 () Bool)

(assert (=> d!25781 (=> (not res!48877) (not e!63160))))

(assert (=> d!25781 (= res!48877 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 (_keys!4141 newMap!16))) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2241 (_values!2439 newMap!16)))))))

(declare-fun lt!48516 () Unit!2865)

(declare-fun choose!591 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2865)

(assert (=> d!25781 (= lt!48516 (choose!591 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25781 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25781 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!24 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!48516)))

(declare-fun b!96904 () Bool)

(assert (=> b!96904 (= e!63160 (= (+!127 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!451 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (array!4194 (store (arr!1991 (_values!2439 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (ValueCellFull!965 (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2241 (_values!2439 newMap!16))) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))))

(assert (= (and d!25781 res!48877) b!96904))

(assert (=> d!25781 m!103459))

(assert (=> d!25781 m!103491))

(declare-fun m!105755 () Bool)

(assert (=> d!25781 m!105755))

(assert (=> d!25781 m!103855))

(assert (=> b!96904 m!103905))

(assert (=> b!96904 m!103619))

(assert (=> b!96904 m!103619))

(assert (=> b!96904 m!103901))

(assert (=> b!96904 m!103915))

(assert (=> b!96904 m!103897))

(assert (=> d!25279 d!25781))

(declare-fun b!96905 () Bool)

(declare-fun e!63164 () Bool)

(assert (=> b!96905 (= e!63164 (contains!792 lt!47882 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) lt!47884)))))

(declare-fun call!9839 () Bool)

(declare-fun bm!9836 () Bool)

(declare-fun c!16397 () Bool)

(assert (=> bm!9836 (= call!9839 (arrayNoDuplicates!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (bvadd lt!47884 #b00000000000000000000000000000001) (ite c!16397 (Cons!1577 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) lt!47884) lt!47882) lt!47882)))))

(declare-fun b!96906 () Bool)

(declare-fun e!63161 () Bool)

(assert (=> b!96906 (= e!63161 call!9839)))

(declare-fun b!96907 () Bool)

(declare-fun e!63163 () Bool)

(assert (=> b!96907 (= e!63163 e!63161)))

(assert (=> b!96907 (= c!16397 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) lt!47884)))))

(declare-fun b!96908 () Bool)

(assert (=> b!96908 (= e!63161 call!9839)))

(declare-fun d!25783 () Bool)

(declare-fun res!48878 () Bool)

(declare-fun e!63162 () Bool)

(assert (=> d!25783 (=> res!48878 e!63162)))

(assert (=> d!25783 (= res!48878 (bvsge lt!47884 (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(assert (=> d!25783 (= (arrayNoDuplicates!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) lt!47884 lt!47882) e!63162)))

(declare-fun b!96909 () Bool)

(assert (=> b!96909 (= e!63162 e!63163)))

(declare-fun res!48879 () Bool)

(assert (=> b!96909 (=> (not res!48879) (not e!63163))))

(assert (=> b!96909 (= res!48879 (not e!63164))))

(declare-fun res!48880 () Bool)

(assert (=> b!96909 (=> (not res!48880) (not e!63164))))

(assert (=> b!96909 (= res!48880 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) lt!47884)))))

(assert (= (and d!25783 (not res!48878)) b!96909))

(assert (= (and b!96909 res!48880) b!96905))

(assert (= (and b!96909 res!48879) b!96907))

(assert (= (and b!96907 c!16397) b!96908))

(assert (= (and b!96907 (not c!16397)) b!96906))

(assert (= (or b!96908 b!96906) bm!9836))

(declare-fun m!105757 () Bool)

(assert (=> b!96905 m!105757))

(assert (=> b!96905 m!105757))

(declare-fun m!105759 () Bool)

(assert (=> b!96905 m!105759))

(assert (=> bm!9836 m!105757))

(declare-fun m!105761 () Bool)

(assert (=> bm!9836 m!105761))

(assert (=> b!96907 m!105757))

(assert (=> b!96907 m!105757))

(declare-fun m!105763 () Bool)

(assert (=> b!96907 m!105763))

(assert (=> b!96909 m!105757))

(assert (=> b!96909 m!105757))

(assert (=> b!96909 m!105763))

(assert (=> d!25279 d!25783))

(declare-fun b!96910 () Bool)

(declare-fun e!63166 () (_ BitVec 32))

(assert (=> b!96910 (= e!63166 #b00000000000000000000000000000000)))

(declare-fun b!96911 () Bool)

(declare-fun e!63165 () (_ BitVec 32))

(assert (=> b!96911 (= e!63166 e!63165)))

(declare-fun c!16398 () Bool)

(assert (=> b!96911 (= c!16398 (validKeyInArray!0 (select (arr!1990 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!25785 () Bool)

(declare-fun lt!48517 () (_ BitVec 32))

(assert (=> d!25785 (and (bvsge lt!48517 #b00000000000000000000000000000000) (bvsle lt!48517 (bvsub (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!25785 (= lt!48517 e!63166)))

(declare-fun c!16399 () Bool)

(assert (=> d!25785 (= c!16399 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))))))

(assert (=> d!25785 (and (bvsle #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2240 (_keys!4141 newMap!16)) (size!2240 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))))))))

(assert (=> d!25785 (= (arrayCountValidKeys!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) #b00000000000000000000000000000000 (size!2240 (_keys!4141 newMap!16))) lt!48517)))

(declare-fun bm!9837 () Bool)

(declare-fun call!9840 () (_ BitVec 32))

(assert (=> bm!9837 (= call!9840 (arrayCountValidKeys!0 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 (_keys!4141 newMap!16))))))

(declare-fun b!96912 () Bool)

(assert (=> b!96912 (= e!63165 (bvadd #b00000000000000000000000000000001 call!9840))))

(declare-fun b!96913 () Bool)

(assert (=> b!96913 (= e!63165 call!9840)))

(assert (= (and d!25785 c!16399) b!96910))

(assert (= (and d!25785 (not c!16399)) b!96911))

(assert (= (and b!96911 c!16398) b!96912))

(assert (= (and b!96911 (not c!16398)) b!96913))

(assert (= (or b!96912 b!96913) bm!9837))

(assert (=> b!96911 m!105623))

(assert (=> b!96911 m!105623))

(assert (=> b!96911 m!105671))

(declare-fun m!105765 () Bool)

(assert (=> bm!9837 m!105765))

(assert (=> d!25279 d!25785))

(assert (=> d!25279 d!25311))

(declare-fun d!25787 () Bool)

(declare-fun e!63169 () Bool)

(assert (=> d!25787 e!63169))

(declare-fun res!48883 () Bool)

(assert (=> d!25787 (=> (not res!48883) (not e!63169))))

(assert (=> d!25787 (= res!48883 (and (bvsge (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) #b00000000000000000000000000000000) (bvslt (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (size!2240 (_keys!4141 newMap!16)))))))

(declare-fun lt!48520 () Unit!2865)

(declare-fun choose!102 ((_ BitVec 64) array!4191 (_ BitVec 32) (_ BitVec 32)) Unit!2865)

(assert (=> d!25787 (= lt!48520 (choose!102 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (mask!6540 newMap!16)))))

(assert (=> d!25787 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25787 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (_keys!4141 newMap!16) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (mask!6540 newMap!16)) lt!48520)))

(declare-fun b!96916 () Bool)

(assert (=> b!96916 (= e!63169 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4192 (store (arr!1990 (_keys!4141 newMap!16)) (ite c!16076 (index!3165 lt!47654) (index!3162 lt!47654)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) (size!2240 (_keys!4141 newMap!16))) (mask!6540 newMap!16)))))

(assert (= (and d!25787 res!48883) b!96916))

(assert (=> d!25787 m!103459))

(declare-fun m!105767 () Bool)

(assert (=> d!25787 m!105767))

(assert (=> d!25787 m!103855))

(assert (=> b!96916 m!103915))

(assert (=> b!96916 m!103931))

(assert (=> d!25279 d!25787))

(declare-fun d!25789 () Bool)

(declare-fun res!48884 () Bool)

(declare-fun e!63170 () Bool)

(assert (=> d!25789 (=> res!48884 e!63170)))

(assert (=> d!25789 (= res!48884 (= (select (arr!1990 lt!47878) #b00000000000000000000000000000000) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (=> d!25789 (= (arrayContainsKey!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000) e!63170)))

(declare-fun b!96917 () Bool)

(declare-fun e!63171 () Bool)

(assert (=> b!96917 (= e!63170 e!63171)))

(declare-fun res!48885 () Bool)

(assert (=> b!96917 (=> (not res!48885) (not e!63171))))

(assert (=> b!96917 (= res!48885 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2240 lt!47878)))))

(declare-fun b!96918 () Bool)

(assert (=> b!96918 (= e!63171 (arrayContainsKey!0 lt!47878 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25789 (not res!48884)) b!96917))

(assert (= (and b!96917 res!48885) b!96918))

(declare-fun m!105769 () Bool)

(assert (=> d!25789 m!105769))

(assert (=> b!96918 m!103459))

(declare-fun m!105771 () Bool)

(assert (=> b!96918 m!105771))

(assert (=> d!25279 d!25789))

(declare-fun d!25791 () Bool)

(declare-fun res!48886 () Bool)

(declare-fun e!63172 () Bool)

(assert (=> d!25791 (=> res!48886 e!63172)))

(assert (=> d!25791 (= res!48886 (and ((_ is Cons!1576) (toList!769 lt!47731)) (= (_1!1168 (h!2169 (toList!769 lt!47731))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25791 (= (containsKey!151 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!63172)))

(declare-fun b!96919 () Bool)

(declare-fun e!63173 () Bool)

(assert (=> b!96919 (= e!63172 e!63173)))

(declare-fun res!48887 () Bool)

(assert (=> b!96919 (=> (not res!48887) (not e!63173))))

(assert (=> b!96919 (= res!48887 (and (or (not ((_ is Cons!1576) (toList!769 lt!47731))) (bvsle (_1!1168 (h!2169 (toList!769 lt!47731))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1576) (toList!769 lt!47731)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47731))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!96920 () Bool)

(assert (=> b!96920 (= e!63173 (containsKey!151 (t!5493 (toList!769 lt!47731)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25791 (not res!48886)) b!96919))

(assert (= (and b!96919 res!48887) b!96920))

(assert (=> b!96920 m!103591))

(declare-fun m!105773 () Bool)

(assert (=> b!96920 m!105773))

(assert (=> d!25353 d!25791))

(declare-fun b!96922 () Bool)

(declare-fun e!63174 () Option!153)

(declare-fun e!63175 () Option!153)

(assert (=> b!96922 (= e!63174 e!63175)))

(declare-fun c!16401 () Bool)

(assert (=> b!96922 (= c!16401 (and ((_ is Cons!1576) (toList!769 lt!47753)) (not (= (_1!1168 (h!2169 (toList!769 lt!47753))) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96923 () Bool)

(assert (=> b!96923 (= e!63175 (getValueByKey!147 (t!5493 (toList!769 lt!47753)) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96921 () Bool)

(assert (=> b!96921 (= e!63174 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47753)))))))

(declare-fun b!96924 () Bool)

(assert (=> b!96924 (= e!63175 None!151)))

(declare-fun c!16400 () Bool)

(declare-fun d!25793 () Bool)

(assert (=> d!25793 (= c!16400 (and ((_ is Cons!1576) (toList!769 lt!47753)) (= (_1!1168 (h!2169 (toList!769 lt!47753))) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25793 (= (getValueByKey!147 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63174)))

(assert (= (and d!25793 c!16400) b!96921))

(assert (= (and d!25793 (not c!16400)) b!96922))

(assert (= (and b!96922 c!16401) b!96923))

(assert (= (and b!96922 (not c!16401)) b!96924))

(declare-fun m!105775 () Bool)

(assert (=> b!96923 m!105775))

(assert (=> b!95843 d!25793))

(declare-fun d!25795 () Bool)

(declare-fun res!48888 () Bool)

(declare-fun e!63176 () Bool)

(assert (=> d!25795 (=> (not res!48888) (not e!63176))))

(assert (=> d!25795 (= res!48888 (simpleValid!67 (_2!1169 lt!47887)))))

(assert (=> d!25795 (= (valid!386 (_2!1169 lt!47887)) e!63176)))

(declare-fun b!96925 () Bool)

(declare-fun res!48889 () Bool)

(assert (=> b!96925 (=> (not res!48889) (not e!63176))))

(assert (=> b!96925 (= res!48889 (= (arrayCountValidKeys!0 (_keys!4141 (_2!1169 lt!47887)) #b00000000000000000000000000000000 (size!2240 (_keys!4141 (_2!1169 lt!47887)))) (_size!468 (_2!1169 lt!47887))))))

(declare-fun b!96926 () Bool)

(declare-fun res!48890 () Bool)

(assert (=> b!96926 (=> (not res!48890) (not e!63176))))

(assert (=> b!96926 (= res!48890 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 (_2!1169 lt!47887)) (mask!6540 (_2!1169 lt!47887))))))

(declare-fun b!96927 () Bool)

(assert (=> b!96927 (= e!63176 (arrayNoDuplicates!0 (_keys!4141 (_2!1169 lt!47887)) #b00000000000000000000000000000000 Nil!1578))))

(assert (= (and d!25795 res!48888) b!96925))

(assert (= (and b!96925 res!48889) b!96926))

(assert (= (and b!96926 res!48890) b!96927))

(declare-fun m!105777 () Bool)

(assert (=> d!25795 m!105777))

(declare-fun m!105779 () Bool)

(assert (=> b!96925 m!105779))

(declare-fun m!105781 () Bool)

(assert (=> b!96926 m!105781))

(declare-fun m!105783 () Bool)

(assert (=> b!96927 m!105783))

(assert (=> b!95958 d!25795))

(assert (=> b!96092 d!25201))

(declare-fun b!96929 () Bool)

(declare-fun e!63177 () Option!153)

(declare-fun e!63178 () Option!153)

(assert (=> b!96929 (= e!63177 e!63178)))

(declare-fun c!16403 () Bool)

(assert (=> b!96929 (= c!16403 (and ((_ is Cons!1576) (toList!769 lt!47742)) (not (= (_1!1168 (h!2169 (toList!769 lt!47742))) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96930 () Bool)

(assert (=> b!96930 (= e!63178 (getValueByKey!147 (t!5493 (toList!769 lt!47742)) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96928 () Bool)

(assert (=> b!96928 (= e!63177 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47742)))))))

(declare-fun b!96931 () Bool)

(assert (=> b!96931 (= e!63178 None!151)))

(declare-fun c!16402 () Bool)

(declare-fun d!25797 () Bool)

(assert (=> d!25797 (= c!16402 (and ((_ is Cons!1576) (toList!769 lt!47742)) (= (_1!1168 (h!2169 (toList!769 lt!47742))) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25797 (= (getValueByKey!147 (toList!769 lt!47742) (_1!1168 (tuple2!2315 lt!47729 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63177)))

(assert (= (and d!25797 c!16402) b!96928))

(assert (= (and d!25797 (not c!16402)) b!96929))

(assert (= (and b!96929 c!16403) b!96930))

(assert (= (and b!96929 (not c!16403)) b!96931))

(declare-fun m!105785 () Bool)

(assert (=> b!96930 m!105785))

(assert (=> b!95835 d!25797))

(declare-fun d!25799 () Bool)

(declare-fun res!48891 () Bool)

(declare-fun e!63179 () Bool)

(assert (=> d!25799 (=> res!48891 e!63179)))

(assert (=> d!25799 (= res!48891 (and ((_ is Cons!1576) (toList!769 e!62464)) (= (_1!1168 (h!2169 (toList!769 e!62464))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25799 (= (containsKey!151 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!63179)))

(declare-fun b!96932 () Bool)

(declare-fun e!63180 () Bool)

(assert (=> b!96932 (= e!63179 e!63180)))

(declare-fun res!48892 () Bool)

(assert (=> b!96932 (=> (not res!48892) (not e!63180))))

(assert (=> b!96932 (= res!48892 (and (or (not ((_ is Cons!1576) (toList!769 e!62464))) (bvsle (_1!1168 (h!2169 (toList!769 e!62464))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) ((_ is Cons!1576) (toList!769 e!62464)) (bvslt (_1!1168 (h!2169 (toList!769 e!62464))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(declare-fun b!96933 () Bool)

(assert (=> b!96933 (= e!63180 (containsKey!151 (t!5493 (toList!769 e!62464)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25799 (not res!48891)) b!96932))

(assert (= (and b!96932 res!48892) b!96933))

(assert (=> b!96933 m!103459))

(declare-fun m!105787 () Bool)

(assert (=> b!96933 m!105787))

(assert (=> d!25329 d!25799))

(declare-fun d!25801 () Bool)

(declare-fun res!48893 () Bool)

(declare-fun e!63181 () Bool)

(assert (=> d!25801 (=> res!48893 e!63181)))

(assert (=> d!25801 (= res!48893 (and ((_ is Cons!1576) (toList!769 call!9669)) (= (_1!1168 (h!2169 (toList!769 call!9669))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(assert (=> d!25801 (= (containsKey!151 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) e!63181)))

(declare-fun b!96934 () Bool)

(declare-fun e!63182 () Bool)

(assert (=> b!96934 (= e!63181 e!63182)))

(declare-fun res!48894 () Bool)

(assert (=> b!96934 (=> (not res!48894) (not e!63182))))

(assert (=> b!96934 (= res!48894 (and (or (not ((_ is Cons!1576) (toList!769 call!9669))) (bvsle (_1!1168 (h!2169 (toList!769 call!9669))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) ((_ is Cons!1576) (toList!769 call!9669)) (bvslt (_1!1168 (h!2169 (toList!769 call!9669))) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))))

(declare-fun b!96935 () Bool)

(assert (=> b!96935 (= e!63182 (containsKey!151 (t!5493 (toList!769 call!9669)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25801 (not res!48893)) b!96934))

(assert (= (and b!96934 res!48894) b!96935))

(assert (=> b!96935 m!103459))

(declare-fun m!105789 () Bool)

(assert (=> b!96935 m!105789))

(assert (=> d!25327 d!25801))

(declare-fun d!25803 () Bool)

(assert (=> d!25803 (= (inRange!0 (ite c!16131 (index!3163 lt!47889) (ite c!16130 (index!3162 lt!47890) (index!3165 lt!47890))) (mask!6540 newMap!16)) (and (bvsge (ite c!16131 (index!3163 lt!47889) (ite c!16130 (index!3162 lt!47890) (index!3165 lt!47890))) #b00000000000000000000000000000000) (bvslt (ite c!16131 (index!3163 lt!47889) (ite c!16130 (index!3162 lt!47890) (index!3165 lt!47890))) (bvadd (mask!6540 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9708 d!25803))

(declare-fun d!25805 () Bool)

(declare-fun e!63183 () Bool)

(assert (=> d!25805 e!63183))

(declare-fun res!48895 () Bool)

(assert (=> d!25805 (=> res!48895 e!63183)))

(declare-fun lt!48522 () Bool)

(assert (=> d!25805 (= res!48895 (not lt!48522))))

(declare-fun lt!48523 () Bool)

(assert (=> d!25805 (= lt!48522 lt!48523)))

(declare-fun lt!48524 () Unit!2865)

(declare-fun e!63184 () Unit!2865)

(assert (=> d!25805 (= lt!48524 e!63184)))

(declare-fun c!16404 () Bool)

(assert (=> d!25805 (= c!16404 lt!48523)))

(assert (=> d!25805 (= lt!48523 (containsKey!151 (toList!769 lt!47929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25805 (= (contains!791 lt!47929 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48522)))

(declare-fun b!96936 () Bool)

(declare-fun lt!48521 () Unit!2865)

(assert (=> b!96936 (= e!63184 lt!48521)))

(assert (=> b!96936 (= lt!48521 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96936 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96937 () Bool)

(declare-fun Unit!2924 () Unit!2865)

(assert (=> b!96937 (= e!63184 Unit!2924)))

(declare-fun b!96938 () Bool)

(assert (=> b!96938 (= e!63183 (isDefined!101 (getValueByKey!147 (toList!769 lt!47929) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25805 c!16404) b!96936))

(assert (= (and d!25805 (not c!16404)) b!96937))

(assert (= (and d!25805 (not res!48895)) b!96938))

(declare-fun m!105791 () Bool)

(assert (=> d!25805 m!105791))

(declare-fun m!105793 () Bool)

(assert (=> b!96936 m!105793))

(declare-fun m!105795 () Bool)

(assert (=> b!96936 m!105795))

(assert (=> b!96936 m!105795))

(declare-fun m!105797 () Bool)

(assert (=> b!96936 m!105797))

(assert (=> b!96938 m!105795))

(assert (=> b!96938 m!105795))

(assert (=> b!96938 m!105797))

(assert (=> bm!9716 d!25805))

(declare-fun d!25807 () Bool)

(assert (=> d!25807 (= (apply!91 lt!47929 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47929) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3998 () Bool)

(assert (= bs!3998 d!25807))

(assert (=> bs!3998 m!105795))

(assert (=> bs!3998 m!105795))

(declare-fun m!105799 () Bool)

(assert (=> bs!3998 m!105799))

(assert (=> b!95989 d!25807))

(declare-fun d!25809 () Bool)

(declare-fun e!63185 () Bool)

(assert (=> d!25809 e!63185))

(declare-fun res!48896 () Bool)

(assert (=> d!25809 (=> res!48896 e!63185)))

(declare-fun lt!48526 () Bool)

(assert (=> d!25809 (= res!48896 (not lt!48526))))

(declare-fun lt!48527 () Bool)

(assert (=> d!25809 (= lt!48526 lt!48527)))

(declare-fun lt!48528 () Unit!2865)

(declare-fun e!63186 () Unit!2865)

(assert (=> d!25809 (= lt!48528 e!63186)))

(declare-fun c!16405 () Bool)

(assert (=> d!25809 (= c!16405 lt!48527)))

(assert (=> d!25809 (= lt!48527 (containsKey!151 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25809 (= (contains!791 lt!47977 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!48526)))

(declare-fun b!96939 () Bool)

(declare-fun lt!48525 () Unit!2865)

(assert (=> b!96939 (= e!63186 lt!48525)))

(assert (=> b!96939 (= lt!48525 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96939 (isDefined!101 (getValueByKey!147 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96940 () Bool)

(declare-fun Unit!2925 () Unit!2865)

(assert (=> b!96940 (= e!63186 Unit!2925)))

(declare-fun b!96941 () Bool)

(assert (=> b!96941 (= e!63185 (isDefined!101 (getValueByKey!147 (toList!769 lt!47977) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (= (and d!25809 c!16405) b!96939))

(assert (= (and d!25809 (not c!16405)) b!96940))

(assert (= (and d!25809 (not res!48896)) b!96941))

(declare-fun m!105801 () Bool)

(assert (=> d!25809 m!105801))

(declare-fun m!105803 () Bool)

(assert (=> b!96939 m!105803))

(assert (=> b!96939 m!104153))

(assert (=> b!96939 m!104153))

(declare-fun m!105805 () Bool)

(assert (=> b!96939 m!105805))

(assert (=> b!96941 m!104153))

(assert (=> b!96941 m!104153))

(assert (=> b!96941 m!105805))

(assert (=> d!25313 d!25809))

(declare-fun b!96943 () Bool)

(declare-fun e!63187 () Option!153)

(declare-fun e!63188 () Option!153)

(assert (=> b!96943 (= e!63187 e!63188)))

(declare-fun c!16407 () Bool)

(assert (=> b!96943 (= c!16407 (and ((_ is Cons!1576) lt!47975) (not (= (_1!1168 (h!2169 lt!47975)) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun b!96944 () Bool)

(assert (=> b!96944 (= e!63188 (getValueByKey!147 (t!5493 lt!47975) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96942 () Bool)

(assert (=> b!96942 (= e!63187 (Some!152 (_2!1168 (h!2169 lt!47975))))))

(declare-fun b!96945 () Bool)

(assert (=> b!96945 (= e!63188 None!151)))

(declare-fun d!25811 () Bool)

(declare-fun c!16406 () Bool)

(assert (=> d!25811 (= c!16406 (and ((_ is Cons!1576) lt!47975) (= (_1!1168 (h!2169 lt!47975)) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (=> d!25811 (= (getValueByKey!147 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) e!63187)))

(assert (= (and d!25811 c!16406) b!96942))

(assert (= (and d!25811 (not c!16406)) b!96943))

(assert (= (and b!96943 c!16407) b!96944))

(assert (= (and b!96943 (not c!16407)) b!96945))

(declare-fun m!105807 () Bool)

(assert (=> b!96944 m!105807))

(assert (=> d!25313 d!25811))

(declare-fun d!25813 () Bool)

(assert (=> d!25813 (= (getValueByKey!147 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) (Some!152 (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun lt!48529 () Unit!2865)

(assert (=> d!25813 (= lt!48529 (choose!590 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun e!63189 () Bool)

(assert (=> d!25813 e!63189))

(declare-fun res!48897 () Bool)

(assert (=> d!25813 (=> (not res!48897) (not e!63189))))

(assert (=> d!25813 (= res!48897 (isStrictlySorted!298 lt!47975))))

(assert (=> d!25813 (= (lemmaContainsTupThenGetReturnValue!66 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!48529)))

(declare-fun b!96946 () Bool)

(declare-fun res!48898 () Bool)

(assert (=> b!96946 (=> (not res!48898) (not e!63189))))

(assert (=> b!96946 (= res!48898 (containsKey!151 lt!47975 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96947 () Bool)

(assert (=> b!96947 (= e!63189 (contains!793 lt!47975 (tuple2!2315 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (= (and d!25813 res!48897) b!96946))

(assert (= (and b!96946 res!48898) b!96947))

(assert (=> d!25813 m!104147))

(declare-fun m!105809 () Bool)

(assert (=> d!25813 m!105809))

(declare-fun m!105811 () Bool)

(assert (=> d!25813 m!105811))

(declare-fun m!105813 () Bool)

(assert (=> b!96946 m!105813))

(declare-fun m!105815 () Bool)

(assert (=> b!96947 m!105815))

(assert (=> d!25313 d!25813))

(declare-fun b!96948 () Bool)

(declare-fun e!63194 () List!1580)

(declare-fun call!9841 () List!1580)

(assert (=> b!96948 (= e!63194 call!9841)))

(declare-fun c!16409 () Bool)

(declare-fun c!16410 () Bool)

(declare-fun b!96949 () Bool)

(declare-fun e!63192 () List!1580)

(assert (=> b!96949 (= e!63192 (ite c!16410 (t!5493 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (ite c!16409 (Cons!1576 (h!2169 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (t!5493 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))))) Nil!1577)))))

(declare-fun b!96950 () Bool)

(assert (=> b!96950 (= e!63192 (insertStrictlySorted!69 (t!5493 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96951 () Bool)

(declare-fun lt!48530 () List!1580)

(declare-fun e!63191 () Bool)

(assert (=> b!96951 (= e!63191 (contains!793 lt!48530 (tuple2!2315 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun bm!9838 () Bool)

(declare-fun call!9842 () List!1580)

(declare-fun call!9843 () List!1580)

(assert (=> bm!9838 (= call!9842 call!9843)))

(declare-fun b!96952 () Bool)

(declare-fun e!63190 () List!1580)

(assert (=> b!96952 (= e!63190 call!9842)))

(declare-fun b!96953 () Bool)

(assert (=> b!96953 (= e!63194 call!9841)))

(declare-fun d!25815 () Bool)

(assert (=> d!25815 e!63191))

(declare-fun res!48899 () Bool)

(assert (=> d!25815 (=> (not res!48899) (not e!63191))))

(assert (=> d!25815 (= res!48899 (isStrictlySorted!298 lt!48530))))

(declare-fun e!63193 () List!1580)

(assert (=> d!25815 (= lt!48530 e!63193)))

(declare-fun c!16408 () Bool)

(assert (=> d!25815 (= c!16408 (and ((_ is Cons!1576) (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (bvslt (_1!1168 (h!2169 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (=> d!25815 (isStrictlySorted!298 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))))))

(assert (=> d!25815 (= (insertStrictlySorted!69 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))) lt!48530)))

(declare-fun b!96954 () Bool)

(assert (=> b!96954 (= c!16409 (and ((_ is Cons!1576) (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (bvsgt (_1!1168 (h!2169 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(assert (=> b!96954 (= e!63190 e!63194)))

(declare-fun b!96955 () Bool)

(declare-fun res!48900 () Bool)

(assert (=> b!96955 (=> (not res!48900) (not e!63191))))

(assert (=> b!96955 (= res!48900 (containsKey!151 lt!48530 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9839 () Bool)

(assert (=> bm!9839 (= call!9843 ($colon$colon!76 e!63192 (ite c!16408 (h!2169 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (tuple2!2315 (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (_2!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))))

(declare-fun c!16411 () Bool)

(assert (=> bm!9839 (= c!16411 c!16408)))

(declare-fun b!96956 () Bool)

(assert (=> b!96956 (= e!63193 e!63190)))

(assert (=> b!96956 (= c!16410 (and ((_ is Cons!1576) (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695)))) (= (_1!1168 (h!2169 (toList!769 (ite c!16099 call!9690 (ite c!16102 call!9693 call!9695))))) (_1!1168 (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96957 () Bool)

(assert (=> b!96957 (= e!63193 call!9843)))

(declare-fun bm!9840 () Bool)

(assert (=> bm!9840 (= call!9841 call!9842)))

(assert (= (and d!25815 c!16408) b!96957))

(assert (= (and d!25815 (not c!16408)) b!96956))

(assert (= (and b!96956 c!16410) b!96952))

(assert (= (and b!96956 (not c!16410)) b!96954))

(assert (= (and b!96954 c!16409) b!96953))

(assert (= (and b!96954 (not c!16409)) b!96948))

(assert (= (or b!96953 b!96948) bm!9840))

(assert (= (or b!96952 bm!9840) bm!9838))

(assert (= (or b!96957 bm!9838) bm!9839))

(assert (= (and bm!9839 c!16411) b!96950))

(assert (= (and bm!9839 (not c!16411)) b!96949))

(assert (= (and d!25815 res!48899) b!96955))

(assert (= (and b!96955 res!48900) b!96951))

(declare-fun m!105817 () Bool)

(assert (=> b!96955 m!105817))

(declare-fun m!105819 () Bool)

(assert (=> b!96951 m!105819))

(declare-fun m!105821 () Bool)

(assert (=> bm!9839 m!105821))

(declare-fun m!105823 () Bool)

(assert (=> d!25815 m!105823))

(declare-fun m!105825 () Bool)

(assert (=> d!25815 m!105825))

(declare-fun m!105827 () Bool)

(assert (=> b!96950 m!105827))

(assert (=> d!25313 d!25815))

(declare-fun d!25817 () Bool)

(assert (=> d!25817 (= (get!1278 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2775 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25323 d!25817))

(assert (=> d!25323 d!25647))

(assert (=> b!95880 d!25325))

(declare-fun d!25819 () Bool)

(declare-fun e!63195 () Bool)

(assert (=> d!25819 e!63195))

(declare-fun res!48902 () Bool)

(assert (=> d!25819 (=> (not res!48902) (not e!63195))))

(declare-fun lt!48533 () ListLongMap!1507)

(assert (=> d!25819 (= res!48902 (contains!791 lt!48533 (_1!1168 (tuple2!2315 lt!47784 lt!47783))))))

(declare-fun lt!48531 () List!1580)

(assert (=> d!25819 (= lt!48533 (ListLongMap!1508 lt!48531))))

(declare-fun lt!48532 () Unit!2865)

(declare-fun lt!48534 () Unit!2865)

(assert (=> d!25819 (= lt!48532 lt!48534)))

(assert (=> d!25819 (= (getValueByKey!147 lt!48531 (_1!1168 (tuple2!2315 lt!47784 lt!47783))) (Some!152 (_2!1168 (tuple2!2315 lt!47784 lt!47783))))))

(assert (=> d!25819 (= lt!48534 (lemmaContainsTupThenGetReturnValue!66 lt!48531 (_1!1168 (tuple2!2315 lt!47784 lt!47783)) (_2!1168 (tuple2!2315 lt!47784 lt!47783))))))

(assert (=> d!25819 (= lt!48531 (insertStrictlySorted!69 (toList!769 lt!47786) (_1!1168 (tuple2!2315 lt!47784 lt!47783)) (_2!1168 (tuple2!2315 lt!47784 lt!47783))))))

(assert (=> d!25819 (= (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783)) lt!48533)))

(declare-fun b!96958 () Bool)

(declare-fun res!48901 () Bool)

(assert (=> b!96958 (=> (not res!48901) (not e!63195))))

(assert (=> b!96958 (= res!48901 (= (getValueByKey!147 (toList!769 lt!48533) (_1!1168 (tuple2!2315 lt!47784 lt!47783))) (Some!152 (_2!1168 (tuple2!2315 lt!47784 lt!47783)))))))

(declare-fun b!96959 () Bool)

(assert (=> b!96959 (= e!63195 (contains!793 (toList!769 lt!48533) (tuple2!2315 lt!47784 lt!47783)))))

(assert (= (and d!25819 res!48902) b!96958))

(assert (= (and b!96958 res!48901) b!96959))

(declare-fun m!105829 () Bool)

(assert (=> d!25819 m!105829))

(declare-fun m!105831 () Bool)

(assert (=> d!25819 m!105831))

(declare-fun m!105833 () Bool)

(assert (=> d!25819 m!105833))

(declare-fun m!105835 () Bool)

(assert (=> d!25819 m!105835))

(declare-fun m!105837 () Bool)

(assert (=> b!96958 m!105837))

(declare-fun m!105839 () Bool)

(assert (=> b!96959 m!105839))

(assert (=> b!95880 d!25819))

(declare-fun d!25821 () Bool)

(declare-fun e!63196 () Bool)

(assert (=> d!25821 e!63196))

(declare-fun res!48904 () Bool)

(assert (=> d!25821 (=> (not res!48904) (not e!63196))))

(declare-fun lt!48537 () ListLongMap!1507)

(assert (=> d!25821 (= res!48904 (contains!791 lt!48537 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48535 () List!1580)

(assert (=> d!25821 (= lt!48537 (ListLongMap!1508 lt!48535))))

(declare-fun lt!48536 () Unit!2865)

(declare-fun lt!48538 () Unit!2865)

(assert (=> d!25821 (= lt!48536 lt!48538)))

(assert (=> d!25821 (= (getValueByKey!147 lt!48535 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25821 (= lt!48538 (lemmaContainsTupThenGetReturnValue!66 lt!48535 (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25821 (= lt!48535 (insertStrictlySorted!69 (toList!769 call!9698) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25821 (= (+!127 call!9698 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48537)))

(declare-fun b!96960 () Bool)

(declare-fun res!48903 () Bool)

(assert (=> b!96960 (=> (not res!48903) (not e!63196))))

(assert (=> b!96960 (= res!48903 (= (getValueByKey!147 (toList!769 lt!48537) (_1!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!152 (_2!1168 (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96961 () Bool)

(assert (=> b!96961 (= e!63196 (contains!793 (toList!769 lt!48537) (tuple2!2315 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1275 (select (arr!1991 (_values!2439 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25821 res!48904) b!96960))

(assert (= (and b!96960 res!48903) b!96961))

(declare-fun m!105841 () Bool)

(assert (=> d!25821 m!105841))

(declare-fun m!105843 () Bool)

(assert (=> d!25821 m!105843))

(declare-fun m!105845 () Bool)

(assert (=> d!25821 m!105845))

(declare-fun m!105847 () Bool)

(assert (=> d!25821 m!105847))

(declare-fun m!105849 () Bool)

(assert (=> b!96960 m!105849))

(declare-fun m!105851 () Bool)

(assert (=> b!96961 m!105851))

(assert (=> b!95880 d!25821))

(declare-fun d!25823 () Bool)

(declare-fun e!63197 () Bool)

(assert (=> d!25823 e!63197))

(declare-fun res!48905 () Bool)

(assert (=> d!25823 (=> res!48905 e!63197)))

(declare-fun lt!48540 () Bool)

(assert (=> d!25823 (= res!48905 (not lt!48540))))

(declare-fun lt!48541 () Bool)

(assert (=> d!25823 (= lt!48540 lt!48541)))

(declare-fun lt!48542 () Unit!2865)

(declare-fun e!63198 () Unit!2865)

(assert (=> d!25823 (= lt!48542 e!63198)))

(declare-fun c!16412 () Bool)

(assert (=> d!25823 (= c!16412 lt!48541)))

(assert (=> d!25823 (= lt!48541 (containsKey!151 (toList!769 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783))) lt!47787))))

(assert (=> d!25823 (= (contains!791 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783)) lt!47787) lt!48540)))

(declare-fun b!96962 () Bool)

(declare-fun lt!48539 () Unit!2865)

(assert (=> b!96962 (= e!63198 lt!48539)))

(assert (=> b!96962 (= lt!48539 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783))) lt!47787))))

(assert (=> b!96962 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783))) lt!47787))))

(declare-fun b!96963 () Bool)

(declare-fun Unit!2926 () Unit!2865)

(assert (=> b!96963 (= e!63198 Unit!2926)))

(declare-fun b!96964 () Bool)

(assert (=> b!96964 (= e!63197 (isDefined!101 (getValueByKey!147 (toList!769 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783))) lt!47787)))))

(assert (= (and d!25823 c!16412) b!96962))

(assert (= (and d!25823 (not c!16412)) b!96963))

(assert (= (and d!25823 (not res!48905)) b!96964))

(declare-fun m!105853 () Bool)

(assert (=> d!25823 m!105853))

(declare-fun m!105855 () Bool)

(assert (=> b!96962 m!105855))

(declare-fun m!105857 () Bool)

(assert (=> b!96962 m!105857))

(assert (=> b!96962 m!105857))

(declare-fun m!105859 () Bool)

(assert (=> b!96962 m!105859))

(assert (=> b!96964 m!105857))

(assert (=> b!96964 m!105857))

(assert (=> b!96964 m!105859))

(assert (=> b!95880 d!25823))

(declare-fun d!25825 () Bool)

(assert (=> d!25825 (not (contains!791 (+!127 lt!47786 (tuple2!2315 lt!47784 lt!47783)) lt!47787))))

(declare-fun lt!48545 () Unit!2865)

(declare-fun choose!592 (ListLongMap!1507 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2865)

(assert (=> d!25825 (= lt!48545 (choose!592 lt!47786 lt!47784 lt!47783 lt!47787))))

(declare-fun e!63201 () Bool)

(assert (=> d!25825 e!63201))

(declare-fun res!48908 () Bool)

(assert (=> d!25825 (=> (not res!48908) (not e!63201))))

(assert (=> d!25825 (= res!48908 (not (contains!791 lt!47786 lt!47787)))))

(assert (=> d!25825 (= (addStillNotContains!40 lt!47786 lt!47784 lt!47783 lt!47787) lt!48545)))

(declare-fun b!96968 () Bool)

(assert (=> b!96968 (= e!63201 (not (= lt!47784 lt!47787)))))

(assert (= (and d!25825 res!48908) b!96968))

(assert (=> d!25825 m!103847))

(assert (=> d!25825 m!103847))

(assert (=> d!25825 m!103851))

(declare-fun m!105861 () Bool)

(assert (=> d!25825 m!105861))

(declare-fun m!105863 () Bool)

(assert (=> d!25825 m!105863))

(assert (=> b!95880 d!25825))

(declare-fun d!25827 () Bool)

(declare-fun lt!48546 () Bool)

(assert (=> d!25827 (= lt!48546 (select (content!100 (toList!769 lt!47749)) (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun e!63202 () Bool)

(assert (=> d!25827 (= lt!48546 e!63202)))

(declare-fun res!48910 () Bool)

(assert (=> d!25827 (=> (not res!48910) (not e!63202))))

(assert (=> d!25827 (= res!48910 ((_ is Cons!1576) (toList!769 lt!47749)))))

(assert (=> d!25827 (= (contains!793 (toList!769 lt!47749) (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) lt!48546)))

(declare-fun b!96969 () Bool)

(declare-fun e!63203 () Bool)

(assert (=> b!96969 (= e!63202 e!63203)))

(declare-fun res!48909 () Bool)

(assert (=> b!96969 (=> res!48909 e!63203)))

(assert (=> b!96969 (= res!48909 (= (h!2169 (toList!769 lt!47749)) (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(declare-fun b!96970 () Bool)

(assert (=> b!96970 (= e!63203 (contains!793 (t!5493 (toList!769 lt!47749)) (tuple2!2315 lt!47718 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))

(assert (= (and d!25827 res!48910) b!96969))

(assert (= (and b!96969 (not res!48909)) b!96970))

(declare-fun m!105865 () Bool)

(assert (=> d!25827 m!105865))

(declare-fun m!105867 () Bool)

(assert (=> d!25827 m!105867))

(declare-fun m!105869 () Bool)

(assert (=> b!96970 m!105869))

(assert (=> b!95842 d!25827))

(declare-fun d!25829 () Bool)

(declare-fun e!63204 () Bool)

(assert (=> d!25829 e!63204))

(declare-fun res!48911 () Bool)

(assert (=> d!25829 (=> res!48911 e!63204)))

(declare-fun lt!48548 () Bool)

(assert (=> d!25829 (= res!48911 (not lt!48548))))

(declare-fun lt!48549 () Bool)

(assert (=> d!25829 (= lt!48548 lt!48549)))

(declare-fun lt!48550 () Unit!2865)

(declare-fun e!63205 () Unit!2865)

(assert (=> d!25829 (= lt!48550 e!63205)))

(declare-fun c!16413 () Bool)

(assert (=> d!25829 (= c!16413 lt!48549)))

(assert (=> d!25829 (= lt!48549 (containsKey!151 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> d!25829 (= (contains!791 lt!47753 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48548)))

(declare-fun b!96971 () Bool)

(declare-fun lt!48547 () Unit!2865)

(assert (=> b!96971 (= e!63205 lt!48547)))

(assert (=> b!96971 (= lt!48547 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (=> b!96971 (isDefined!101 (getValueByKey!147 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96972 () Bool)

(declare-fun Unit!2927 () Unit!2865)

(assert (=> b!96972 (= e!63205 Unit!2927)))

(declare-fun b!96973 () Bool)

(assert (=> b!96973 (= e!63204 (isDefined!101 (getValueByKey!147 (toList!769 lt!47753) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25829 c!16413) b!96971))

(assert (= (and d!25829 (not c!16413)) b!96972))

(assert (= (and d!25829 (not res!48911)) b!96973))

(declare-fun m!105871 () Bool)

(assert (=> d!25829 m!105871))

(declare-fun m!105873 () Bool)

(assert (=> b!96971 m!105873))

(assert (=> b!96971 m!103787))

(assert (=> b!96971 m!103787))

(declare-fun m!105875 () Bool)

(assert (=> b!96971 m!105875))

(assert (=> b!96973 m!103787))

(assert (=> b!96973 m!103787))

(assert (=> b!96973 m!105875))

(assert (=> d!25239 d!25829))

(declare-fun b!96975 () Bool)

(declare-fun e!63206 () Option!153)

(declare-fun e!63207 () Option!153)

(assert (=> b!96975 (= e!63206 e!63207)))

(declare-fun c!16415 () Bool)

(assert (=> b!96975 (= c!16415 (and ((_ is Cons!1576) lt!47751) (not (= (_1!1168 (h!2169 lt!47751)) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96976 () Bool)

(assert (=> b!96976 (= e!63207 (getValueByKey!147 (t!5493 lt!47751) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96974 () Bool)

(assert (=> b!96974 (= e!63206 (Some!152 (_2!1168 (h!2169 lt!47751))))))

(declare-fun b!96977 () Bool)

(assert (=> b!96977 (= e!63207 None!151)))

(declare-fun d!25831 () Bool)

(declare-fun c!16414 () Bool)

(assert (=> d!25831 (= c!16414 (and ((_ is Cons!1576) lt!47751) (= (_1!1168 (h!2169 lt!47751)) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25831 (= (getValueByKey!147 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63206)))

(assert (= (and d!25831 c!16414) b!96974))

(assert (= (and d!25831 (not c!16414)) b!96975))

(assert (= (and b!96975 c!16415) b!96976))

(assert (= (and b!96975 (not c!16415)) b!96977))

(declare-fun m!105877 () Bool)

(assert (=> b!96976 m!105877))

(assert (=> d!25239 d!25831))

(declare-fun d!25833 () Bool)

(assert (=> d!25833 (= (getValueByKey!147 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) (Some!152 (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun lt!48551 () Unit!2865)

(assert (=> d!25833 (= lt!48551 (choose!590 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63208 () Bool)

(assert (=> d!25833 e!63208))

(declare-fun res!48912 () Bool)

(assert (=> d!25833 (=> (not res!48912) (not e!63208))))

(assert (=> d!25833 (= res!48912 (isStrictlySorted!298 lt!47751))))

(assert (=> d!25833 (= (lemmaContainsTupThenGetReturnValue!66 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48551)))

(declare-fun b!96978 () Bool)

(declare-fun res!48913 () Bool)

(assert (=> b!96978 (=> (not res!48913) (not e!63208))))

(assert (=> b!96978 (= res!48913 (containsKey!151 lt!47751 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96979 () Bool)

(assert (=> b!96979 (= e!63208 (contains!793 lt!47751 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (= (and d!25833 res!48912) b!96978))

(assert (= (and b!96978 res!48913) b!96979))

(assert (=> d!25833 m!103781))

(declare-fun m!105879 () Bool)

(assert (=> d!25833 m!105879))

(declare-fun m!105881 () Bool)

(assert (=> d!25833 m!105881))

(declare-fun m!105883 () Bool)

(assert (=> b!96978 m!105883))

(declare-fun m!105885 () Bool)

(assert (=> b!96979 m!105885))

(assert (=> d!25239 d!25833))

(declare-fun b!96980 () Bool)

(declare-fun e!63213 () List!1580)

(declare-fun call!9844 () List!1580)

(assert (=> b!96980 (= e!63213 call!9844)))

(declare-fun e!63211 () List!1580)

(declare-fun b!96981 () Bool)

(declare-fun c!16418 () Bool)

(declare-fun c!16417 () Bool)

(assert (=> b!96981 (= e!63211 (ite c!16418 (t!5493 (toList!769 lt!47725)) (ite c!16417 (Cons!1576 (h!2169 (toList!769 lt!47725)) (t!5493 (toList!769 lt!47725))) Nil!1577)))))

(declare-fun b!96982 () Bool)

(assert (=> b!96982 (= e!63211 (insertStrictlySorted!69 (t!5493 (toList!769 lt!47725)) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63210 () Bool)

(declare-fun b!96983 () Bool)

(declare-fun lt!48552 () List!1580)

(assert (=> b!96983 (= e!63210 (contains!793 lt!48552 (tuple2!2315 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun bm!9841 () Bool)

(declare-fun call!9845 () List!1580)

(declare-fun call!9846 () List!1580)

(assert (=> bm!9841 (= call!9845 call!9846)))

(declare-fun b!96984 () Bool)

(declare-fun e!63209 () List!1580)

(assert (=> b!96984 (= e!63209 call!9845)))

(declare-fun b!96985 () Bool)

(assert (=> b!96985 (= e!63213 call!9844)))

(declare-fun d!25835 () Bool)

(assert (=> d!25835 e!63210))

(declare-fun res!48914 () Bool)

(assert (=> d!25835 (=> (not res!48914) (not e!63210))))

(assert (=> d!25835 (= res!48914 (isStrictlySorted!298 lt!48552))))

(declare-fun e!63212 () List!1580)

(assert (=> d!25835 (= lt!48552 e!63212)))

(declare-fun c!16416 () Bool)

(assert (=> d!25835 (= c!16416 (and ((_ is Cons!1576) (toList!769 lt!47725)) (bvslt (_1!1168 (h!2169 (toList!769 lt!47725))) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25835 (isStrictlySorted!298 (toList!769 lt!47725))))

(assert (=> d!25835 (= (insertStrictlySorted!69 (toList!769 lt!47725) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48552)))

(declare-fun b!96986 () Bool)

(assert (=> b!96986 (= c!16417 (and ((_ is Cons!1576) (toList!769 lt!47725)) (bvsgt (_1!1168 (h!2169 (toList!769 lt!47725))) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> b!96986 (= e!63209 e!63213)))

(declare-fun b!96987 () Bool)

(declare-fun res!48915 () Bool)

(assert (=> b!96987 (=> (not res!48915) (not e!63210))))

(assert (=> b!96987 (= res!48915 (containsKey!151 lt!48552 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun bm!9842 () Bool)

(assert (=> bm!9842 (= call!9846 ($colon$colon!76 e!63211 (ite c!16416 (h!2169 (toList!769 lt!47725)) (tuple2!2315 (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))) (_2!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun c!16419 () Bool)

(assert (=> bm!9842 (= c!16419 c!16416)))

(declare-fun b!96988 () Bool)

(assert (=> b!96988 (= e!63212 e!63209)))

(assert (=> b!96988 (= c!16418 (and ((_ is Cons!1576) (toList!769 lt!47725)) (= (_1!1168 (h!2169 (toList!769 lt!47725))) (_1!1168 (tuple2!2315 lt!47710 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(declare-fun b!96989 () Bool)

(assert (=> b!96989 (= e!63212 call!9846)))

(declare-fun bm!9843 () Bool)

(assert (=> bm!9843 (= call!9844 call!9845)))

(assert (= (and d!25835 c!16416) b!96989))

(assert (= (and d!25835 (not c!16416)) b!96988))

(assert (= (and b!96988 c!16418) b!96984))

(assert (= (and b!96988 (not c!16418)) b!96986))

(assert (= (and b!96986 c!16417) b!96985))

(assert (= (and b!96986 (not c!16417)) b!96980))

(assert (= (or b!96985 b!96980) bm!9843))

(assert (= (or b!96984 bm!9843) bm!9841))

(assert (= (or b!96989 bm!9841) bm!9842))

(assert (= (and bm!9842 c!16419) b!96982))

(assert (= (and bm!9842 (not c!16419)) b!96981))

(assert (= (and d!25835 res!48914) b!96987))

(assert (= (and b!96987 res!48915) b!96983))

(declare-fun m!105887 () Bool)

(assert (=> b!96987 m!105887))

(declare-fun m!105889 () Bool)

(assert (=> b!96983 m!105889))

(declare-fun m!105891 () Bool)

(assert (=> bm!9842 m!105891))

(declare-fun m!105893 () Bool)

(assert (=> d!25835 m!105893))

(declare-fun m!105895 () Bool)

(assert (=> d!25835 m!105895))

(declare-fun m!105897 () Bool)

(assert (=> b!96982 m!105897))

(assert (=> d!25239 d!25835))

(assert (=> b!96125 d!25409))

(declare-fun d!25837 () Bool)

(declare-fun lt!48553 () Bool)

(assert (=> d!25837 (= lt!48553 (select (content!100 (toList!769 lt!47977)) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun e!63214 () Bool)

(assert (=> d!25837 (= lt!48553 e!63214)))

(declare-fun res!48917 () Bool)

(assert (=> d!25837 (=> (not res!48917) (not e!63214))))

(assert (=> d!25837 (= res!48917 ((_ is Cons!1576) (toList!769 lt!47977)))))

(assert (=> d!25837 (= (contains!793 (toList!769 lt!47977) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) lt!48553)))

(declare-fun b!96990 () Bool)

(declare-fun e!63215 () Bool)

(assert (=> b!96990 (= e!63214 e!63215)))

(declare-fun res!48916 () Bool)

(assert (=> b!96990 (=> res!48916 e!63215)))

(assert (=> b!96990 (= res!48916 (= (h!2169 (toList!769 lt!47977)) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96991 () Bool)

(assert (=> b!96991 (= e!63215 (contains!793 (t!5493 (toList!769 lt!47977)) (ite (or c!16099 c!16102) (tuple2!2315 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))) (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(assert (= (and d!25837 res!48917) b!96990))

(assert (= (and b!96990 (not res!48916)) b!96991))

(declare-fun m!105899 () Bool)

(assert (=> d!25837 m!105899))

(declare-fun m!105901 () Bool)

(assert (=> d!25837 m!105901))

(declare-fun m!105903 () Bool)

(assert (=> b!96991 m!105903))

(assert (=> b!96087 d!25837))

(declare-fun b!96993 () Bool)

(declare-fun e!63216 () Option!153)

(declare-fun e!63217 () Option!153)

(assert (=> b!96993 (= e!63216 e!63217)))

(declare-fun c!16421 () Bool)

(assert (=> b!96993 (= c!16421 (and ((_ is Cons!1576) (toList!769 lt!47766)) (not (= (_1!1168 (h!2169 (toList!769 lt!47766))) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!96994 () Bool)

(assert (=> b!96994 (= e!63217 (getValueByKey!147 (t!5493 (toList!769 lt!47766)) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!96992 () Bool)

(assert (=> b!96992 (= e!63216 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47766)))))))

(declare-fun b!96995 () Bool)

(assert (=> b!96995 (= e!63217 None!151)))

(declare-fun d!25839 () Bool)

(declare-fun c!16420 () Bool)

(assert (=> d!25839 (= c!16420 (and ((_ is Cons!1576) (toList!769 lt!47766)) (= (_1!1168 (h!2169 (toList!769 lt!47766))) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25839 (= (getValueByKey!147 (toList!769 lt!47766) (_1!1168 (tuple2!2315 lt!47724 (zeroValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63216)))

(assert (= (and d!25839 c!16420) b!96992))

(assert (= (and d!25839 (not c!16420)) b!96993))

(assert (= (and b!96993 c!16421) b!96994))

(assert (= (and b!96993 (not c!16421)) b!96995))

(declare-fun m!105905 () Bool)

(assert (=> b!96994 m!105905))

(assert (=> b!95851 d!25839))

(declare-fun d!25841 () Bool)

(assert (=> d!25841 (isDefined!101 (getValueByKey!147 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun lt!48554 () Unit!2865)

(assert (=> d!25841 (= lt!48554 (choose!585 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun e!63218 () Bool)

(assert (=> d!25841 e!63218))

(declare-fun res!48918 () Bool)

(assert (=> d!25841 (=> (not res!48918) (not e!63218))))

(assert (=> d!25841 (= res!48918 (isStrictlySorted!298 (toList!769 e!62464)))))

(assert (=> d!25841 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48554)))

(declare-fun b!96996 () Bool)

(assert (=> b!96996 (= e!63218 (containsKey!151 (toList!769 e!62464) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25841 res!48918) b!96996))

(assert (=> d!25841 m!103459))

(assert (=> d!25841 m!104233))

(assert (=> d!25841 m!104233))

(assert (=> d!25841 m!104235))

(assert (=> d!25841 m!103459))

(declare-fun m!105907 () Bool)

(assert (=> d!25841 m!105907))

(declare-fun m!105909 () Bool)

(assert (=> d!25841 m!105909))

(assert (=> b!96996 m!103459))

(assert (=> b!96996 m!104229))

(assert (=> b!96120 d!25841))

(assert (=> b!96120 d!25601))

(assert (=> b!96120 d!25603))

(declare-fun e!63222 () Bool)

(declare-fun b!96997 () Bool)

(assert (=> b!96997 (= e!63222 (contains!792 (ite c!16186 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!9847 () Bool)

(declare-fun bm!9844 () Bool)

(declare-fun c!16422 () Bool)

(assert (=> bm!9844 (= call!9847 (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16422 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!16186 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578))) (ite c!16186 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)))))))

(declare-fun b!96998 () Bool)

(declare-fun e!63219 () Bool)

(assert (=> b!96998 (= e!63219 call!9847)))

(declare-fun b!96999 () Bool)

(declare-fun e!63221 () Bool)

(assert (=> b!96999 (= e!63221 e!63219)))

(assert (=> b!96999 (= c!16422 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!97000 () Bool)

(assert (=> b!97000 (= e!63219 call!9847)))

(declare-fun d!25843 () Bool)

(declare-fun res!48919 () Bool)

(declare-fun e!63220 () Bool)

(assert (=> d!25843 (=> res!48919 e!63220)))

(assert (=> d!25843 (= res!48919 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25843 (= (arrayNoDuplicates!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16186 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578)) (ite c!16037 (Cons!1577 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) Nil!1578) Nil!1578))) e!63220)))

(declare-fun b!97001 () Bool)

(assert (=> b!97001 (= e!63220 e!63221)))

(declare-fun res!48920 () Bool)

(assert (=> b!97001 (=> (not res!48920) (not e!63221))))

(assert (=> b!97001 (= res!48920 (not e!63222))))

(declare-fun res!48921 () Bool)

(assert (=> b!97001 (=> (not res!48921) (not e!63222))))

(assert (=> b!97001 (= res!48921 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!25843 (not res!48919)) b!97001))

(assert (= (and b!97001 res!48921) b!96997))

(assert (= (and b!97001 res!48920) b!96999))

(assert (= (and b!96999 c!16422) b!97000))

(assert (= (and b!96999 (not c!16422)) b!96998))

(assert (= (or b!97000 b!96998) bm!9844))

(declare-fun m!105911 () Bool)

(assert (=> b!96997 m!105911))

(assert (=> b!96997 m!105911))

(declare-fun m!105913 () Bool)

(assert (=> b!96997 m!105913))

(assert (=> bm!9844 m!105911))

(declare-fun m!105915 () Bool)

(assert (=> bm!9844 m!105915))

(assert (=> b!96999 m!105911))

(assert (=> b!96999 m!105911))

(declare-fun m!105917 () Bool)

(assert (=> b!96999 m!105917))

(assert (=> b!97001 m!105911))

(assert (=> b!97001 m!105911))

(assert (=> b!97001 m!105917))

(assert (=> bm!9742 d!25843))

(declare-fun d!25845 () Bool)

(assert (=> d!25845 (isDefined!101 (getValueByKey!147 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun lt!48555 () Unit!2865)

(assert (=> d!25845 (= lt!48555 (choose!585 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(declare-fun e!63223 () Bool)

(assert (=> d!25845 e!63223))

(declare-fun res!48922 () Bool)

(assert (=> d!25845 (=> (not res!48922) (not e!63223))))

(assert (=> d!25845 (= res!48922 (isStrictlySorted!298 (toList!769 call!9669)))))

(assert (=> d!25845 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)) lt!48555)))

(declare-fun b!97002 () Bool)

(assert (=> b!97002 (= e!63223 (containsKey!151 (toList!769 call!9669) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))

(assert (= (and d!25845 res!48922) b!97002))

(assert (=> d!25845 m!103459))

(assert (=> d!25845 m!104225))

(assert (=> d!25845 m!104225))

(assert (=> d!25845 m!104227))

(assert (=> d!25845 m!103459))

(declare-fun m!105919 () Bool)

(assert (=> d!25845 m!105919))

(declare-fun m!105921 () Bool)

(assert (=> d!25845 m!105921))

(assert (=> b!97002 m!103459))

(assert (=> b!97002 m!104221))

(assert (=> b!96117 d!25845))

(assert (=> b!96117 d!25609))

(assert (=> b!96117 d!25611))

(declare-fun bm!9845 () Bool)

(declare-fun call!9848 () Bool)

(assert (=> bm!9845 (= call!9848 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4141 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992)))))))

(declare-fun d!25847 () Bool)

(declare-fun res!48923 () Bool)

(declare-fun e!63224 () Bool)

(assert (=> d!25847 (=> res!48923 e!63224)))

(assert (=> d!25847 (= res!48923 (bvsge #b00000000000000000000000000000000 (size!2240 (_keys!4141 (v!2770 (underlying!326 thiss!992))))))))

(assert (=> d!25847 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4141 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992)))) e!63224)))

(declare-fun b!97003 () Bool)

(declare-fun e!63225 () Bool)

(assert (=> b!97003 (= e!63225 call!9848)))

(declare-fun b!97004 () Bool)

(declare-fun e!63226 () Bool)

(assert (=> b!97004 (= e!63226 call!9848)))

(declare-fun b!97005 () Bool)

(assert (=> b!97005 (= e!63224 e!63225)))

(declare-fun c!16423 () Bool)

(assert (=> b!97005 (= c!16423 (validKeyInArray!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!97006 () Bool)

(assert (=> b!97006 (= e!63225 e!63226)))

(declare-fun lt!48558 () (_ BitVec 64))

(assert (=> b!97006 (= lt!48558 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!48556 () Unit!2865)

(assert (=> b!97006 (= lt!48556 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) lt!48558 #b00000000000000000000000000000000))))

(assert (=> b!97006 (arrayContainsKey!0 (_keys!4141 (v!2770 (underlying!326 thiss!992))) lt!48558 #b00000000000000000000000000000000)))

(declare-fun lt!48557 () Unit!2865)

(assert (=> b!97006 (= lt!48557 lt!48556)))

(declare-fun res!48924 () Bool)

(assert (=> b!97006 (= res!48924 (= (seekEntryOrOpen!0 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) #b00000000000000000000000000000000) (_keys!4141 (v!2770 (underlying!326 thiss!992))) (mask!6540 (v!2770 (underlying!326 thiss!992)))) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!97006 (=> (not res!48924) (not e!63226))))

(assert (= (and d!25847 (not res!48923)) b!97005))

(assert (= (and b!97005 c!16423) b!97006))

(assert (= (and b!97005 (not c!16423)) b!97003))

(assert (= (and b!97006 res!48924) b!97004))

(assert (= (or b!97004 b!97003) bm!9845))

(declare-fun m!105923 () Bool)

(assert (=> bm!9845 m!105923))

(assert (=> b!97005 m!104597))

(assert (=> b!97005 m!104597))

(assert (=> b!97005 m!104603))

(assert (=> b!97006 m!104597))

(declare-fun m!105925 () Bool)

(assert (=> b!97006 m!105925))

(declare-fun m!105927 () Bool)

(assert (=> b!97006 m!105927))

(assert (=> b!97006 m!104597))

(declare-fun m!105929 () Bool)

(assert (=> b!97006 m!105929))

(assert (=> b!96072 d!25847))

(assert (=> d!25263 d!25201))

(declare-fun b!97008 () Bool)

(declare-fun e!63227 () Option!153)

(declare-fun e!63228 () Option!153)

(assert (=> b!97008 (= e!63227 e!63228)))

(declare-fun c!16425 () Bool)

(assert (=> b!97008 (= c!16425 (and ((_ is Cons!1576) (toList!769 lt!47970)) (not (= (_1!1168 (h!2169 (toList!769 lt!47970))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))))

(declare-fun b!97009 () Bool)

(assert (=> b!97009 (= e!63228 (getValueByKey!147 (t!5493 (toList!769 lt!47970)) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))))))

(declare-fun b!97007 () Bool)

(assert (=> b!97007 (= e!63227 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47970)))))))

(declare-fun b!97010 () Bool)

(assert (=> b!97010 (= e!63228 None!151)))

(declare-fun d!25849 () Bool)

(declare-fun c!16424 () Bool)

(assert (=> d!25849 (= c!16424 (and ((_ is Cons!1576) (toList!769 lt!47970)) (= (_1!1168 (h!2169 (toList!769 lt!47970))) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992))))))))))

(assert (=> d!25849 (= (getValueByKey!147 (toList!769 lt!47970) (_1!1168 (tuple2!2315 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2770 (underlying!326 thiss!992)))))) e!63227)))

(assert (= (and d!25849 c!16424) b!97007))

(assert (= (and d!25849 (not c!16424)) b!97008))

(assert (= (and b!97008 c!16425) b!97009))

(assert (= (and b!97008 (not c!16425)) b!97010))

(declare-fun m!105931 () Bool)

(assert (=> b!97009 m!105931))

(assert (=> b!96069 d!25849))

(assert (=> b!96023 d!25409))

(declare-fun d!25851 () Bool)

(assert (=> d!25851 (isDefined!101 (getValueByKey!147 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!48559 () Unit!2865)

(assert (=> d!25851 (= lt!48559 (choose!585 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!63229 () Bool)

(assert (=> d!25851 e!63229))

(declare-fun res!48925 () Bool)

(assert (=> d!25851 (=> (not res!48925) (not e!63229))))

(assert (=> d!25851 (= res!48925 (isStrictlySorted!298 (toList!769 lt!47731)))))

(assert (=> d!25851 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48559)))

(declare-fun b!97011 () Bool)

(assert (=> b!97011 (= e!63229 (containsKey!151 (toList!769 lt!47731) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25851 res!48925) b!97011))

(assert (=> d!25851 m!103591))

(assert (=> d!25851 m!104213))

(assert (=> d!25851 m!104213))

(assert (=> d!25851 m!104295))

(assert (=> d!25851 m!103591))

(declare-fun m!105933 () Bool)

(assert (=> d!25851 m!105933))

(assert (=> d!25851 m!105355))

(assert (=> b!97011 m!103591))

(assert (=> b!97011 m!104291))

(assert (=> b!96171 d!25851))

(assert (=> b!96171 d!25645))

(assert (=> b!96171 d!25647))

(assert (=> d!25259 d!25423))

(assert (=> b!96106 d!25409))

(declare-fun d!25853 () Bool)

(assert (=> d!25853 (= (content!99 Nil!1578) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!25287 d!25853))

(declare-fun d!25855 () Bool)

(assert (=> d!25855 (= (apply!91 lt!48000 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!48000) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3999 () Bool)

(assert (= bs!3999 d!25855))

(assert (=> bs!3999 m!105059))

(assert (=> bs!3999 m!105059))

(declare-fun m!105935 () Bool)

(assert (=> bs!3999 m!105935))

(assert (=> b!96113 d!25855))

(assert (=> b!95899 d!25727))

(assert (=> b!95848 d!25623))

(assert (=> b!95848 d!25625))

(declare-fun d!25857 () Bool)

(assert (=> d!25857 (= (get!1278 (getValueByKey!147 (toList!769 lt!47725) lt!47711)) (v!2775 (getValueByKey!147 (toList!769 lt!47725) lt!47711)))))

(assert (=> d!25247 d!25857))

(declare-fun b!97013 () Bool)

(declare-fun e!63230 () Option!153)

(declare-fun e!63231 () Option!153)

(assert (=> b!97013 (= e!63230 e!63231)))

(declare-fun c!16427 () Bool)

(assert (=> b!97013 (= c!16427 (and ((_ is Cons!1576) (toList!769 lt!47725)) (not (= (_1!1168 (h!2169 (toList!769 lt!47725))) lt!47711))))))

(declare-fun b!97014 () Bool)

(assert (=> b!97014 (= e!63231 (getValueByKey!147 (t!5493 (toList!769 lt!47725)) lt!47711))))

(declare-fun b!97012 () Bool)

(assert (=> b!97012 (= e!63230 (Some!152 (_2!1168 (h!2169 (toList!769 lt!47725)))))))

(declare-fun b!97015 () Bool)

(assert (=> b!97015 (= e!63231 None!151)))

(declare-fun d!25859 () Bool)

(declare-fun c!16426 () Bool)

(assert (=> d!25859 (= c!16426 (and ((_ is Cons!1576) (toList!769 lt!47725)) (= (_1!1168 (h!2169 (toList!769 lt!47725))) lt!47711)))))

(assert (=> d!25859 (= (getValueByKey!147 (toList!769 lt!47725) lt!47711) e!63230)))

(assert (= (and d!25859 c!16426) b!97012))

(assert (= (and d!25859 (not c!16426)) b!97013))

(assert (= (and b!97013 c!16427) b!97014))

(assert (= (and b!97013 (not c!16427)) b!97015))

(declare-fun m!105937 () Bool)

(assert (=> b!97014 m!105937))

(assert (=> d!25247 d!25859))

(declare-fun d!25861 () Bool)

(assert (=> d!25861 (= (apply!91 lt!47951 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1278 (getValueByKey!147 (toList!769 lt!47951) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4000 () Bool)

(assert (= bs!4000 d!25861))

(assert (=> bs!4000 m!105401))

(assert (=> bs!4000 m!105401))

(declare-fun m!105939 () Bool)

(assert (=> bs!4000 m!105939))

(assert (=> b!96026 d!25861))

(declare-fun d!25863 () Bool)

(declare-fun res!48929 () Bool)

(declare-fun e!63232 () Bool)

(assert (=> d!25863 (=> (not res!48929) (not e!63232))))

(assert (=> d!25863 (= res!48929 (validMask!0 (mask!6540 (_2!1169 lt!47642))))))

(assert (=> d!25863 (= (simpleValid!67 (_2!1169 lt!47642)) e!63232)))

(declare-fun b!97019 () Bool)

(assert (=> b!97019 (= e!63232 (and (bvsge (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000011) (bvsge (_vacant!468 (_2!1169 lt!47642)) #b00000000000000000000000000000000)))))

(declare-fun b!97016 () Bool)

(declare-fun res!48927 () Bool)

(assert (=> b!97016 (=> (not res!48927) (not e!63232))))

(assert (=> b!97016 (= res!48927 (and (= (size!2241 (_values!2439 (_2!1169 lt!47642))) (bvadd (mask!6540 (_2!1169 lt!47642)) #b00000000000000000000000000000001)) (= (size!2240 (_keys!4141 (_2!1169 lt!47642))) (size!2241 (_values!2439 (_2!1169 lt!47642)))) (bvsge (_size!468 (_2!1169 lt!47642)) #b00000000000000000000000000000000) (bvsle (_size!468 (_2!1169 lt!47642)) (bvadd (mask!6540 (_2!1169 lt!47642)) #b00000000000000000000000000000001))))))

(declare-fun b!97017 () Bool)

(declare-fun res!48926 () Bool)

(assert (=> b!97017 (=> (not res!48926) (not e!63232))))

(assert (=> b!97017 (= res!48926 (bvsge (size!2246 (_2!1169 lt!47642)) (_size!468 (_2!1169 lt!47642))))))

(declare-fun b!97018 () Bool)

(declare-fun res!48928 () Bool)

(assert (=> b!97018 (=> (not res!48928) (not e!63232))))

(assert (=> b!97018 (= res!48928 (= (size!2246 (_2!1169 lt!47642)) (bvadd (_size!468 (_2!1169 lt!47642)) (bvsdiv (bvadd (extraKeys!2281 (_2!1169 lt!47642)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!25863 res!48929) b!97016))

(assert (= (and b!97016 res!48927) b!97017))

(assert (= (and b!97017 res!48926) b!97018))

(assert (= (and b!97018 res!48928) b!97019))

(assert (=> d!25863 m!105297))

(declare-fun m!105941 () Bool)

(assert (=> b!97017 m!105941))

(assert (=> b!97018 m!105941))

(assert (=> d!25281 d!25863))

(assert (=> b!96110 d!25409))

(declare-fun d!25865 () Bool)

(assert (=> d!25865 (= (apply!91 lt!47788 (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1278 (getValueByKey!147 (toList!769 lt!47788) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4001 () Bool)

(assert (= bs!4001 d!25865))

(assert (=> bs!4001 m!103591))

(assert (=> bs!4001 m!104577))

(assert (=> bs!4001 m!104577))

(declare-fun m!105943 () Bool)

(assert (=> bs!4001 m!105943))

(assert (=> b!95884 d!25865))

(assert (=> b!95884 d!25325))

(assert (=> b!96161 d!25629))

(assert (=> b!96164 d!25633))

(assert (=> b!96164 d!25635))

(declare-fun d!25867 () Bool)

(assert (=> d!25867 (contains!791 (getCurrentListMap!451 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))))

(declare-fun lt!48562 () Unit!2865)

(declare-fun choose!593 (array!4191 array!4193 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2865)

(assert (=> d!25867 (= lt!48562 (choose!593 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25867 (validMask!0 (mask!6540 newMap!16))))

(assert (=> d!25867 (= (lemmaArrayContainsKeyThenInListMap!24 (_keys!4141 newMap!16) (_values!2439 newMap!16) (mask!6540 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48562)))

(declare-fun bs!4002 () Bool)

(assert (= bs!4002 d!25867))

(assert (=> bs!4002 m!103619))

(assert (=> bs!4002 m!103619))

(assert (=> bs!4002 m!103459))

(assert (=> bs!4002 m!103921))

(assert (=> bs!4002 m!103459))

(declare-fun m!105945 () Bool)

(assert (=> bs!4002 m!105945))

(assert (=> bs!4002 m!103855))

(assert (=> b!95971 d!25867))

(assert (=> b!95971 d!25761))

(assert (=> b!95971 d!25289))

(declare-fun d!25869 () Bool)

(assert (=> d!25869 (= (isEmpty!358 (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355))) (not ((_ is Some!152) (getValueByKey!147 (toList!769 lt!47518) (select (arr!1990 (_keys!4141 (v!2770 (underlying!326 thiss!992)))) from!355)))))))

(assert (=> d!25297 d!25869))

(declare-fun b!97021 () Bool)

(declare-fun e!63233 () Bool)

(assert (=> b!97021 (= e!63233 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3715 () Bool)

(declare-fun mapRes!3715 () Bool)

(assert (=> mapIsEmpty!3715 mapRes!3715))

(declare-fun mapNonEmpty!3715 () Bool)

(declare-fun tp!9511 () Bool)

(declare-fun e!63234 () Bool)

(assert (=> mapNonEmpty!3715 (= mapRes!3715 (and tp!9511 e!63234))))

(declare-fun mapRest!3715 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapKey!3715 () (_ BitVec 32))

(declare-fun mapValue!3715 () ValueCell!965)

(assert (=> mapNonEmpty!3715 (= mapRest!3713 (store mapRest!3715 mapKey!3715 mapValue!3715))))

(declare-fun condMapEmpty!3715 () Bool)

(declare-fun mapDefault!3715 () ValueCell!965)

(assert (=> mapNonEmpty!3713 (= condMapEmpty!3715 (= mapRest!3713 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3715)))))

(assert (=> mapNonEmpty!3713 (= tp!9509 (and e!63233 mapRes!3715))))

(declare-fun b!97020 () Bool)

(assert (=> b!97020 (= e!63234 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3713 condMapEmpty!3715) mapIsEmpty!3715))

(assert (= (and mapNonEmpty!3713 (not condMapEmpty!3715)) mapNonEmpty!3715))

(assert (= (and mapNonEmpty!3715 ((_ is ValueCellFull!965) mapValue!3715)) b!97020))

(assert (= (and mapNonEmpty!3713 ((_ is ValueCellFull!965) mapDefault!3715)) b!97021))

(declare-fun m!105947 () Bool)

(assert (=> mapNonEmpty!3715 m!105947))

(declare-fun b!97023 () Bool)

(declare-fun e!63235 () Bool)

(assert (=> b!97023 (= e!63235 tp_is_empty!2617)))

(declare-fun mapIsEmpty!3716 () Bool)

(declare-fun mapRes!3716 () Bool)

(assert (=> mapIsEmpty!3716 mapRes!3716))

(declare-fun mapNonEmpty!3716 () Bool)

(declare-fun tp!9512 () Bool)

(declare-fun e!63236 () Bool)

(assert (=> mapNonEmpty!3716 (= mapRes!3716 (and tp!9512 e!63236))))

(declare-fun mapKey!3716 () (_ BitVec 32))

(declare-fun mapValue!3716 () ValueCell!965)

(declare-fun mapRest!3716 () (Array (_ BitVec 32) ValueCell!965))

(assert (=> mapNonEmpty!3716 (= mapRest!3714 (store mapRest!3716 mapKey!3716 mapValue!3716))))

(declare-fun condMapEmpty!3716 () Bool)

(declare-fun mapDefault!3716 () ValueCell!965)

(assert (=> mapNonEmpty!3714 (= condMapEmpty!3716 (= mapRest!3714 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3716)))))

(assert (=> mapNonEmpty!3714 (= tp!9510 (and e!63235 mapRes!3716))))

(declare-fun b!97022 () Bool)

(assert (=> b!97022 (= e!63236 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3714 condMapEmpty!3716) mapIsEmpty!3716))

(assert (= (and mapNonEmpty!3714 (not condMapEmpty!3716)) mapNonEmpty!3716))

(assert (= (and mapNonEmpty!3716 ((_ is ValueCellFull!965) mapValue!3716)) b!97022))

(assert (= (and mapNonEmpty!3714 ((_ is ValueCellFull!965) mapDefault!3716)) b!97023))

(declare-fun m!105949 () Bool)

(assert (=> mapNonEmpty!3716 m!105949))

(declare-fun b_lambda!4283 () Bool)

(assert (= b_lambda!4271 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4283)))

(declare-fun b_lambda!4285 () Bool)

(assert (= b_lambda!4279 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4285)))

(declare-fun b_lambda!4287 () Bool)

(assert (= b_lambda!4261 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4287)))

(declare-fun b_lambda!4289 () Bool)

(assert (= b_lambda!4277 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4289)))

(declare-fun b_lambda!4291 () Bool)

(assert (= b_lambda!4269 (or (and b!95454 b_free!2401) (and b!95447 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))))) b_lambda!4291)))

(declare-fun b_lambda!4293 () Bool)

(assert (= b_lambda!4253 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4293)))

(declare-fun b_lambda!4295 () Bool)

(assert (= b_lambda!4267 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4295)))

(declare-fun b_lambda!4297 () Bool)

(assert (= b_lambda!4263 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4297)))

(declare-fun b_lambda!4299 () Bool)

(assert (= b_lambda!4265 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4299)))

(declare-fun b_lambda!4301 () Bool)

(assert (= b_lambda!4273 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4301)))

(declare-fun b_lambda!4303 () Bool)

(assert (= b_lambda!4257 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4303)))

(declare-fun b_lambda!4305 () Bool)

(assert (= b_lambda!4259 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4305)))

(declare-fun b_lambda!4307 () Bool)

(assert (= b_lambda!4255 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4307)))

(declare-fun b_lambda!4309 () Bool)

(assert (= b_lambda!4281 (or (and b!95454 b_free!2401 (= (defaultEntry!2456 (v!2770 (underlying!326 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95447 b_free!2403) b_lambda!4309)))

(check-sat (not b!96609) (not b!96250) (not b_lambda!4275) (not b!96304) (not b_next!2403) (not d!25397) (not d!25741) (not b!96550) (not b!96847) (not b!96662) (not d!25375) (not b!96269) (not d!25561) (not b!96274) (not d!25489) (not b!96720) (not d!25487) (not d!25851) (not bm!9797) (not bm!9759) (not b!96664) (not b!96621) (not d!25559) (not b!96321) (not b!96198) (not bm!9822) (not b!96884) (not bm!9790) (not b!96377) (not b!96979) (not d!25639) (not b!97009) (not b!96487) (not d!25773) (not b!96236) (not b!96938) (not b!96294) (not b!96612) (not b!96657) (not b!96240) (not bm!9789) (not b!96545) (not b!97006) (not b!96871) (not d!25521) (not d!25431) (not b!96889) (not d!25687) (not d!25433) (not b!96323) (not b!96555) (not d!25863) (not b!97002) (not b!96480) (not d!25565) (not b!96556) (not b!96905) (not b!96473) (not d!25779) (not d!25411) (not b!96184) (not d!25449) (not d!25751) (not b!96459) (not d!25595) (not d!25393) (not b!96983) (not b!97001) (not b!96393) (not d!25367) (not b!96768) (not b!96485) (not d!25555) (not b!96861) (not b!96841) (not bm!9795) (not b!96404) (not b!96476) (not b!96429) (not b!96784) (not d!25861) (not bm!9837) (not d!25815) (not bm!9845) (not bm!9777) (not b!96271) (not d!25711) (not b!96757) (not b!96991) (not d!25497) (not d!25381) (not b_lambda!4305) (not b!96964) (not b_lambda!4285) (not d!25777) (not b!96702) (not d!25439) (not bm!9827) (not b!96568) (not b!96537) (not b!96553) (not b!96638) (not b!96488) (not b!96851) (not b!96386) (not b!96821) (not b!96982) (not b!96486) (not b!96947) (not b!96400) (not b!96838) (not bm!9824) (not d!25395) (not bm!9775) (not b!96689) (not b!96633) (not bm!9809) (not b!96226) (not bm!9844) (not b!96461) (not b!96827) (not b!96911) (not d!25505) (not b!96307) (not bm!9820) (not bm!9758) (not b!96268) (not b!96824) (not b!96673) (not b!96349) (not b!96926) (not d!25787) (not b!96577) (not b!96297) (not b!96935) (not b!96389) (not b!96944) (not b!96754) (not b!96572) (not d!25841) (not d!25809) (not d!25731) (not b!96559) (not d!25509) (not b!96708) (not d!25855) (not d!25765) (not b!96779) (not b!96484) (not d!25761) (not bm!9830) (not d!25807) (not bm!9756) (not b!96573) (not d!25781) (not b!96188) (not d!25563) b_and!5931 (not b_lambda!4295) (not b!96632) (not b!96936) (not b!96311) (not bm!9803) (not d!25795) (not b!96894) (not b!96695) (not d!25827) (not d!25663) (not d!25649) (not b!96248) (not d!25645) (not d!25671) (not d!25413) (not b!96583) (not b!96950) (not b!96448) (not b!96450) (not b!96722) (not b!96817) (not b!96961) (not b!96812) (not b!96338) (not b!96737) (not b!96481) (not b!96299) (not b!96423) (not bm!9800) (not bm!9770) (not b!96355) (not b!96535) (not d!25661) (not b!96796) (not b!96740) (not b!96700) (not d!25425) (not bm!9779) (not b!96330) (not b!96472) (not b!96628) (not d!25601) (not d!25627) (not b!96542) (not b!96483) (not d!25553) (not b!96751) (not d!25725) (not b!96191) (not d!25829) (not d!25755) (not bm!9774) (not d!25391) (not b!96706) (not d!25819) (not b!96222) (not b!96810) (not b_lambda!4297) (not d!25665) (not d!25551) (not d!25805) (not bm!9810) (not b!96245) (not bm!9766) (not b!96994) (not d!25655) (not bm!9825) (not b!96764) (not d!25467) (not d!25567) (not b!96536) (not b!96221) (not d!25519) (not b!96180) (not d!25435) (not bm!9764) (not b!96382) (not bm!9788) (not b_lambda!4291) (not d!25361) (not d!25685) (not b!96258) (not d!25473) (not b!96958) (not d!25737) (not b_lambda!4251) (not b!96727) (not b!96403) (not b!96427) (not d!25389) (not b!96676) (not b!96939) (not b!96253) (not d!25483) (not b_lambda!4287) (not b!96424) (not b_lambda!4227) (not b!96805) (not b!96491) (not d!25683) (not b!96637) (not d!25463) (not b!96468) (not mapNonEmpty!3715) (not d!25651) (not b!96760) (not b!96641) (not b!96462) (not d!25681) (not b!96829) (not b!97017) (not bm!9839) (not b!96280) (not b!96520) (not d!25617) (not b!96496) (not b!96959) (not b!96705) (not bm!9794) (not b!96772) (not b!96971) (not b!96667) (not b!96750) (not bm!9842) (not b!96276) (not bm!9750) (not b!96425) (not b!96455) (not b!96867) (not b!96927) (not d!25437) (not bm!9814) (not b!96698) (not b!96955) (not b!96569) (not b!96329) (not d!25577) (not bm!9769) (not b!96477) (not d!25575) (not b!96933) (not d!25373) (not d!25865) (not b!96699) (not b!96807) (not b!96493) (not d!25399) (not b!96941) (not b!96306) (not b!96320) (not b!96839) (not b!96798) (not d!25419) (not b!96378) (not d!25503) (not d!25573) (not d!25821) (not mapNonEmpty!3716) (not bm!9792) (not d!25451) (not d!25695) (not b!96359) (not b!96918) (not b!96776) (not b_lambda!4307) (not b!96531) (not b!96501) (not d!25475) (not d!25493) (not d!25407) (not b!96794) (not b!96891) (not b_lambda!4245) (not b!96279) (not d!25443) (not b!96445) (not d!25593) (not b!96197) (not b!96252) (not b_lambda!4299) (not d!25539) (not b!96651) (not d!25371) (not b!96659) (not d!25637) (not b!96352) (not b!96882) (not d!25557) (not b!96372) (not b_lambda!4289) (not bm!9807) (not b!96563) (not b!96186) (not d!25401) tp_is_empty!2617 (not d!25729) (not b!96260) (not b!96916) (not b!96907) (not d!25605) (not d!25589) (not b!96379) (not bm!9812) (not d!25525) (not bm!9816) (not d!25507) (not d!25677) (not d!25757) (not b!96440) (not b!96976) (not b!96277) (not d!25581) b_and!5929 (not d!25837) (not d!25633) (not b!96358) (not b!96494) (not d!25579) (not b!96264) (not b!96684) (not d!25733) (not b_lambda!4303) (not b!96452) (not b!96370) (not b!96781) (not d!25613) (not b!96752) (not d!25421) (not d!25365) (not d!25587) (not d!25713) (not b!96710) (not d!25491) (not b!96332) (not b!96241) (not bm!9836) (not b!96384) (not d!25377) (not b!96368) (not d!25495) (not bm!9762) (not b!96465) (not b!96759) (not d!25697) (not b!96813) (not b!96872) (not b!96886) (not b!96733) (not d!25691) (not b!96428) (not b!96354) (not b!96718) (not b_lambda!4309) (not b!96895) (not d!25825) (not d!25845) (not b!96310) (not b!97014) (not b!96256) (not b!96385) (not b!96946) (not b!96347) (not b!96857) (not b!96904) (not b!96978) (not b_next!2401) (not b!96251) (not d!25707) (not bm!9772) (not b!96987) (not b!96783) (not b!96618) (not b!96735) (not b!96363) (not d!25549) (not b!96997) (not b!96900) (not b!96249) (not b!96367) (not b!96923) (not d!25523) (not b!96396) (not b!96561) (not b_lambda!4247) (not b!96786) (not b_lambda!4301) (not b!96397) (not d!25383) (not b!96962) (not d!25717) (not d!25631) (not b!96647) (not b!96864) (not b!96701) (not bm!9787) (not b!96498) (not b!96999) (not b!97011) (not b!96703) (not d!25583) (not b!96238) (not b!96402) (not d!25823) (not d!25689) (not b!96859) (not b!97005) (not b!96793) (not b!96848) (not bm!9754) (not d!25653) (not b_lambda!4293) (not bm!9778) (not d!25379) (not b!96713) (not d!25385) (not b!96301) (not b!96336) (not d!25517) (not d!25569) (not bm!9752) (not d!25527) (not d!25515) (not b!96534) (not bm!9781) (not d!25759) (not d!25621) (not d!25767) (not b!96654) (not b!96442) (not b!96661) (not d!25623) (not d!25529) (not b_lambda!4231) (not d!25763) (not b!96479) (not d!25469) (not b!96315) (not b!96532) (not bm!9802) (not d!25833) (not b!96375) (not d!25721) (not b!96693) (not d!25669) (not d!25403) (not b!96801) (not b!96546) (not bm!9805) (not b!96405) (not b!96873) (not d!25693) (not d!25479) (not b!96686) (not b!96374) (not b!96723) (not b!96960) (not b!96787) (not b!96715) (not b!96395) (not b!96539) (not b!96292) (not bm!9833) (not b!96763) (not d!25771) (not b!96682) (not b!96337) (not b!96925) (not bm!9818) (not d!25867) (not bm!9828) (not b!96630) (not d!25387) (not b!96538) (not d!25585) (not b!96244) (not b!96281) (not b!96930) (not b!96666) (not b!96237) (not b!96239) (not b!96746) (not b!96478) (not d!25499) (not b!96242) (not d!25813) (not b!96672) (not b!96438) (not b!96826) (not b!96499) (not b!96230) (not d!25481) (not b!96724) (not d!25609) (not b!96381) (not b!96951) (not b!96634) (not b_lambda!4249) (not b!96649) (not d!25427) (not bm!9832) (not b!96548) (not d!25417) (not b!96658) (not b!96844) (not d!25743) (not b!96383) (not b!96566) (not bm!9835) (not b!96697) (not b!96671) (not b!96920) (not b!96909) (not b!96717) (not d!25457) (not b!96711) (not b!96816) (not b!96996) (not d!25835) (not b!96284) (not d!25747) (not b_lambda!4283) (not b!96970) (not b!96341) (not b!96580) (not bm!9753) (not b!96326) (not b!96636) (not d!25501) (not d!25477) (not b!96432) (not d!25485) (not b!96401) (not b!96846) (not d!25571) (not d!25723) (not b!96373) (not b!97018) (not b!96973) (not b!96345) (not b!96743) (not bm!9798) (not b!96290) (not b!96334) (not b!96392) (not d!25679) (not b!96474) (not b!96669) (not b!96246) (not b!96623) (not bm!9768) (not d!25619) (not b_lambda!4243) (not b!96318) (not b!96529) (not b!96876) (not b!96660))
(check-sat b_and!5929 b_and!5931 (not b_next!2401) (not b_next!2403))
