; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11500 () Bool)

(assert start!11500)

(declare-fun b!95533 () Bool)

(declare-fun b_free!2401 () Bool)

(declare-fun b_next!2401 () Bool)

(assert (=> b!95533 (= b_free!2401 (not b_next!2401))))

(declare-fun tp!9477 () Bool)

(declare-fun b_and!5833 () Bool)

(assert (=> b!95533 (= tp!9477 b_and!5833)))

(declare-fun b!95536 () Bool)

(declare-fun b_free!2403 () Bool)

(declare-fun b_next!2403 () Bool)

(assert (=> b!95536 (= b_free!2403 (not b_next!2403))))

(declare-fun tp!9478 () Bool)

(declare-fun b_and!5835 () Bool)

(assert (=> b!95536 (= tp!9478 b_and!5835)))

(declare-fun mapIsEmpty!3695 () Bool)

(declare-fun mapRes!3695 () Bool)

(assert (=> mapIsEmpty!3695 mapRes!3695))

(declare-fun b!95523 () Bool)

(declare-fun e!62324 () Bool)

(declare-fun e!62312 () Bool)

(assert (=> b!95523 (= e!62324 (and e!62312 mapRes!3695))))

(declare-fun condMapEmpty!3696 () Bool)

(declare-datatypes ((V!3137 0))(
  ( (V!3138 (val!1353 Int)) )
))
(declare-datatypes ((array!4197 0))(
  ( (array!4198 (arr!1994 (Array (_ BitVec 32) (_ BitVec 64))) (size!2243 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!965 0))(
  ( (ValueCellFull!965 (v!2779 V!3137)) (EmptyCell!965) )
))
(declare-datatypes ((array!4199 0))(
  ( (array!4200 (arr!1995 (Array (_ BitVec 32) ValueCell!965)) (size!2244 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!838 0))(
  ( (LongMapFixedSize!839 (defaultEntry!2456 Int) (mask!6541 (_ BitVec 32)) (extraKeys!2281 (_ BitVec 32)) (zeroValue!2341 V!3137) (minValue!2341 V!3137) (_size!468 (_ BitVec 32)) (_keys!4142 array!4197) (_values!2439 array!4199) (_vacant!468 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!838)

(declare-fun mapDefault!3696 () ValueCell!965)

(assert (=> b!95523 (= condMapEmpty!3696 (= (arr!1995 (_values!2439 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3696)))))

(declare-fun b!95524 () Bool)

(declare-fun e!62319 () Bool)

(declare-fun tp_is_empty!2617 () Bool)

(assert (=> b!95524 (= e!62319 tp_is_empty!2617)))

(declare-fun b!95525 () Bool)

(declare-fun e!62316 () Bool)

(assert (=> b!95525 (= e!62316 tp_is_empty!2617)))

(declare-fun b!95526 () Bool)

(declare-fun e!62317 () Bool)

(declare-fun e!62315 () Bool)

(assert (=> b!95526 (= e!62317 e!62315)))

(declare-fun b!95527 () Bool)

(assert (=> b!95527 (= e!62312 tp_is_empty!2617)))

(declare-fun res!48281 () Bool)

(declare-fun e!62320 () Bool)

(assert (=> start!11500 (=> (not res!48281) (not e!62320))))

(declare-datatypes ((Cell!644 0))(
  ( (Cell!645 (v!2780 LongMapFixedSize!838)) )
))
(declare-datatypes ((LongMap!644 0))(
  ( (LongMap!645 (underlying!333 Cell!644)) )
))
(declare-fun thiss!992 () LongMap!644)

(declare-fun valid!386 (LongMap!644) Bool)

(assert (=> start!11500 (= res!48281 (valid!386 thiss!992))))

(assert (=> start!11500 e!62320))

(declare-fun e!62318 () Bool)

(assert (=> start!11500 e!62318))

(assert (=> start!11500 true))

(declare-fun e!62325 () Bool)

(assert (=> start!11500 e!62325))

(declare-fun b!95528 () Bool)

(declare-fun e!62326 () Bool)

(assert (=> b!95528 (= e!62326 tp_is_empty!2617)))

(declare-fun b!95529 () Bool)

(declare-fun e!62314 () Bool)

(declare-fun mapRes!3696 () Bool)

(assert (=> b!95529 (= e!62314 (and e!62326 mapRes!3696))))

(declare-fun condMapEmpty!3695 () Bool)

(declare-fun mapDefault!3695 () ValueCell!965)

(assert (=> b!95529 (= condMapEmpty!3695 (= (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3695)))))

(declare-fun b!95530 () Bool)

(declare-fun e!62313 () Bool)

(assert (=> b!95530 (= e!62320 e!62313)))

(declare-fun res!48279 () Bool)

(assert (=> b!95530 (=> (not res!48279) (not e!62313))))

(declare-datatypes ((tuple2!2286 0))(
  ( (tuple2!2287 (_1!1154 (_ BitVec 64)) (_2!1154 V!3137)) )
))
(declare-datatypes ((List!1558 0))(
  ( (Nil!1555) (Cons!1554 (h!2147 tuple2!2286) (t!5472 List!1558)) )
))
(declare-datatypes ((ListLongMap!1493 0))(
  ( (ListLongMap!1494 (toList!762 List!1558)) )
))
(declare-fun lt!47565 () ListLongMap!1493)

(declare-fun lt!47566 () ListLongMap!1493)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!95530 (= res!48279 (and (= lt!47566 lt!47565) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1246 (LongMapFixedSize!838) ListLongMap!1493)

(assert (=> b!95530 (= lt!47565 (map!1246 newMap!16))))

(declare-fun getCurrentListMap!452 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) ListLongMap!1493)

(assert (=> b!95530 (= lt!47566 (getCurrentListMap!452 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!95531 () Bool)

(declare-datatypes ((Unit!2849 0))(
  ( (Unit!2850) )
))
(declare-fun e!62323 () Unit!2849)

(declare-fun Unit!2851 () Unit!2849)

(assert (=> b!95531 (= e!62323 Unit!2851)))

(declare-fun lt!47563 () Unit!2849)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!83 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2849)

(assert (=> b!95531 (= lt!47563 (lemmaListMapContainsThenArrayContainsFrom!83 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4197 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!95531 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!47567 () Unit!2849)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4197 (_ BitVec 32) (_ BitVec 32)) Unit!2849)

(assert (=> b!95531 (= lt!47567 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1559 0))(
  ( (Nil!1556) (Cons!1555 (h!2148 (_ BitVec 64)) (t!5473 List!1559)) )
))
(declare-fun arrayNoDuplicates!0 (array!4197 (_ BitVec 32) List!1559) Bool)

(assert (=> b!95531 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) from!355 Nil!1556)))

(declare-fun lt!47561 () Unit!2849)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4197 (_ BitVec 32) (_ BitVec 64) List!1559) Unit!2849)

(assert (=> b!95531 (= lt!47561 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556)))))

(assert (=> b!95531 false))

(declare-fun mapNonEmpty!3695 () Bool)

(declare-fun tp!9479 () Bool)

(assert (=> mapNonEmpty!3695 (= mapRes!3696 (and tp!9479 e!62319))))

(declare-fun mapKey!3696 () (_ BitVec 32))

(declare-fun mapRest!3696 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3696 () ValueCell!965)

(assert (=> mapNonEmpty!3695 (= (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (store mapRest!3696 mapKey!3696 mapValue!3696))))

(declare-fun b!95532 () Bool)

(declare-fun res!48282 () Bool)

(assert (=> b!95532 (=> (not res!48282) (not e!62320))))

(assert (=> b!95532 (= res!48282 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6541 newMap!16)) (_size!468 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun array_inv!1229 (array!4197) Bool)

(declare-fun array_inv!1230 (array!4199) Bool)

(assert (=> b!95533 (= e!62315 (and tp!9477 tp_is_empty!2617 (array_inv!1229 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (array_inv!1230 (_values!2439 (v!2780 (underlying!333 thiss!992)))) e!62314))))

(declare-fun b!95534 () Bool)

(declare-fun e!62321 () Bool)

(assert (=> b!95534 (= e!62313 e!62321)))

(declare-fun res!48280 () Bool)

(assert (=> b!95534 (=> (not res!48280) (not e!62321))))

(declare-datatypes ((tuple2!2288 0))(
  ( (tuple2!2289 (_1!1155 Bool) (_2!1155 LongMapFixedSize!838)) )
))
(declare-fun lt!47564 () tuple2!2288)

(assert (=> b!95534 (= res!48280 (and (_1!1155 lt!47564) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!47562 () Unit!2849)

(assert (=> b!95534 (= lt!47562 e!62323)))

(declare-fun c!16052 () Bool)

(declare-fun contains!783 (ListLongMap!1493 (_ BitVec 64)) Bool)

(assert (=> b!95534 (= c!16052 (contains!783 lt!47565 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun update!142 (LongMapFixedSize!838 (_ BitVec 64) V!3137) tuple2!2288)

(declare-fun get!1278 (ValueCell!965 V!3137) V!3137)

(declare-fun dynLambda!367 (Int (_ BitVec 64)) V!3137)

(assert (=> b!95534 (= lt!47564 (update!142 newMap!16 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95535 () Bool)

(declare-fun Unit!2852 () Unit!2849)

(assert (=> b!95535 (= e!62323 Unit!2852)))

(assert (=> b!95536 (= e!62325 (and tp!9478 tp_is_empty!2617 (array_inv!1229 (_keys!4142 newMap!16)) (array_inv!1230 (_values!2439 newMap!16)) e!62324))))

(declare-fun mapIsEmpty!3696 () Bool)

(assert (=> mapIsEmpty!3696 mapRes!3696))

(declare-fun b!95537 () Bool)

(declare-fun res!48285 () Bool)

(assert (=> b!95537 (=> (not res!48285) (not e!62320))))

(declare-fun valid!387 (LongMapFixedSize!838) Bool)

(assert (=> b!95537 (= res!48285 (valid!387 newMap!16))))

(declare-fun mapNonEmpty!3696 () Bool)

(declare-fun tp!9480 () Bool)

(assert (=> mapNonEmpty!3696 (= mapRes!3695 (and tp!9480 e!62316))))

(declare-fun mapKey!3695 () (_ BitVec 32))

(declare-fun mapValue!3695 () ValueCell!965)

(declare-fun mapRest!3695 () (Array (_ BitVec 32) ValueCell!965))

(assert (=> mapNonEmpty!3696 (= (arr!1995 (_values!2439 newMap!16)) (store mapRest!3695 mapKey!3695 mapValue!3695))))

(declare-fun b!95538 () Bool)

(declare-fun res!48283 () Bool)

(assert (=> b!95538 (=> (not res!48283) (not e!62321))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!95538 (= res!48283 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!95539 () Bool)

(declare-fun res!48284 () Bool)

(assert (=> b!95539 (=> (not res!48284) (not e!62320))))

(assert (=> b!95539 (= res!48284 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!95540 () Bool)

(assert (=> b!95540 (= e!62318 e!62317)))

(declare-fun b!95541 () Bool)

(assert (=> b!95541 (= e!62321 (and (= (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6541 (v!2780 (underlying!333 thiss!992))))) (not (= (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and start!11500 res!48281) b!95539))

(assert (= (and b!95539 res!48284) b!95537))

(assert (= (and b!95537 res!48285) b!95532))

(assert (= (and b!95532 res!48282) b!95530))

(assert (= (and b!95530 res!48279) b!95534))

(assert (= (and b!95534 c!16052) b!95531))

(assert (= (and b!95534 (not c!16052)) b!95535))

(assert (= (and b!95534 res!48280) b!95538))

(assert (= (and b!95538 res!48283) b!95541))

(assert (= (and b!95529 condMapEmpty!3695) mapIsEmpty!3696))

(assert (= (and b!95529 (not condMapEmpty!3695)) mapNonEmpty!3695))

(get-info :version)

(assert (= (and mapNonEmpty!3695 ((_ is ValueCellFull!965) mapValue!3696)) b!95524))

(assert (= (and b!95529 ((_ is ValueCellFull!965) mapDefault!3695)) b!95528))

(assert (= b!95533 b!95529))

(assert (= b!95526 b!95533))

(assert (= b!95540 b!95526))

(assert (= start!11500 b!95540))

(assert (= (and b!95523 condMapEmpty!3696) mapIsEmpty!3695))

(assert (= (and b!95523 (not condMapEmpty!3696)) mapNonEmpty!3696))

(assert (= (and mapNonEmpty!3696 ((_ is ValueCellFull!965) mapValue!3695)) b!95525))

(assert (= (and b!95523 ((_ is ValueCellFull!965) mapDefault!3696)) b!95527))

(assert (= b!95536 b!95523))

(assert (= start!11500 b!95536))

(declare-fun b_lambda!4229 () Bool)

(assert (=> (not b_lambda!4229) (not b!95534)))

(declare-fun t!5469 () Bool)

(declare-fun tb!1881 () Bool)

(assert (=> (and b!95533 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) t!5469) tb!1881))

(declare-fun result!3205 () Bool)

(assert (=> tb!1881 (= result!3205 tp_is_empty!2617)))

(assert (=> b!95534 t!5469))

(declare-fun b_and!5837 () Bool)

(assert (= b_and!5833 (and (=> t!5469 result!3205) b_and!5837)))

(declare-fun t!5471 () Bool)

(declare-fun tb!1883 () Bool)

(assert (=> (and b!95536 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) t!5471) tb!1883))

(declare-fun result!3209 () Bool)

(assert (= result!3209 result!3205))

(assert (=> b!95534 t!5471))

(declare-fun b_and!5839 () Bool)

(assert (= b_and!5835 (and (=> t!5471 result!3209) b_and!5839)))

(declare-fun m!103627 () Bool)

(assert (=> b!95537 m!103627))

(declare-fun m!103629 () Bool)

(assert (=> b!95534 m!103629))

(declare-fun m!103631 () Bool)

(assert (=> b!95534 m!103631))

(declare-fun m!103633 () Bool)

(assert (=> b!95534 m!103633))

(declare-fun m!103635 () Bool)

(assert (=> b!95534 m!103635))

(assert (=> b!95534 m!103631))

(assert (=> b!95534 m!103635))

(declare-fun m!103637 () Bool)

(assert (=> b!95534 m!103637))

(assert (=> b!95534 m!103635))

(assert (=> b!95534 m!103633))

(declare-fun m!103639 () Bool)

(assert (=> b!95534 m!103639))

(assert (=> b!95534 m!103629))

(declare-fun m!103641 () Bool)

(assert (=> b!95538 m!103641))

(declare-fun m!103643 () Bool)

(assert (=> b!95536 m!103643))

(declare-fun m!103645 () Bool)

(assert (=> b!95536 m!103645))

(declare-fun m!103647 () Bool)

(assert (=> b!95531 m!103647))

(declare-fun m!103649 () Bool)

(assert (=> b!95531 m!103649))

(assert (=> b!95531 m!103635))

(declare-fun m!103651 () Bool)

(assert (=> b!95531 m!103651))

(assert (=> b!95531 m!103635))

(assert (=> b!95531 m!103635))

(declare-fun m!103653 () Bool)

(assert (=> b!95531 m!103653))

(assert (=> b!95531 m!103635))

(declare-fun m!103655 () Bool)

(assert (=> b!95531 m!103655))

(declare-fun m!103657 () Bool)

(assert (=> start!11500 m!103657))

(assert (=> b!95530 m!103635))

(declare-fun m!103659 () Bool)

(assert (=> b!95530 m!103659))

(declare-fun m!103661 () Bool)

(assert (=> b!95530 m!103661))

(declare-fun m!103663 () Bool)

(assert (=> b!95533 m!103663))

(declare-fun m!103665 () Bool)

(assert (=> b!95533 m!103665))

(declare-fun m!103667 () Bool)

(assert (=> mapNonEmpty!3695 m!103667))

(declare-fun m!103669 () Bool)

(assert (=> mapNonEmpty!3696 m!103669))

(check-sat (not b!95530) (not mapNonEmpty!3696) (not b!95536) b_and!5839 (not b!95533) (not b!95537) (not b!95534) b_and!5837 tp_is_empty!2617 (not mapNonEmpty!3695) (not b!95538) (not b_lambda!4229) (not b_next!2401) (not start!11500) (not b!95531) (not b_next!2403))
(check-sat b_and!5837 b_and!5839 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun b_lambda!4235 () Bool)

(assert (= b_lambda!4229 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4235)))

(check-sat (not b!95530) (not mapNonEmpty!3696) (not b!95536) b_and!5839 (not b!95533) (not b!95538) (not b!95537) (not b_lambda!4235) (not b!95534) b_and!5837 tp_is_empty!2617 (not mapNonEmpty!3695) (not b_next!2401) (not start!11500) (not b!95531) (not b_next!2403))
(check-sat b_and!5837 b_and!5839 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25253 () Bool)

(assert (=> d!25253 (= (valid!386 thiss!992) (valid!387 (v!2780 (underlying!333 thiss!992))))))

(declare-fun bs!3942 () Bool)

(assert (= bs!3942 d!25253))

(declare-fun m!103759 () Bool)

(assert (=> bs!3942 m!103759))

(assert (=> start!11500 d!25253))

(declare-fun d!25255 () Bool)

(assert (=> d!25255 (= (array_inv!1229 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvsge (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!95533 d!25255))

(declare-fun d!25257 () Bool)

(assert (=> d!25257 (= (array_inv!1230 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvsge (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!95533 d!25257))

(declare-fun d!25259 () Bool)

(declare-fun res!48334 () Bool)

(declare-fun e!62425 () Bool)

(assert (=> d!25259 (=> (not res!48334) (not e!62425))))

(declare-fun simpleValid!67 (LongMapFixedSize!838) Bool)

(assert (=> d!25259 (= res!48334 (simpleValid!67 newMap!16))))

(assert (=> d!25259 (= (valid!387 newMap!16) e!62425)))

(declare-fun b!95668 () Bool)

(declare-fun res!48335 () Bool)

(assert (=> b!95668 (=> (not res!48335) (not e!62425))))

(declare-fun arrayCountValidKeys!0 (array!4197 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!95668 (= res!48335 (= (arrayCountValidKeys!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (_size!468 newMap!16)))))

(declare-fun b!95669 () Bool)

(declare-fun res!48336 () Bool)

(assert (=> b!95669 (=> (not res!48336) (not e!62425))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4197 (_ BitVec 32)) Bool)

(assert (=> b!95669 (= res!48336 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun b!95670 () Bool)

(assert (=> b!95670 (= e!62425 (arrayNoDuplicates!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 Nil!1556))))

(assert (= (and d!25259 res!48334) b!95668))

(assert (= (and b!95668 res!48335) b!95669))

(assert (= (and b!95669 res!48336) b!95670))

(declare-fun m!103761 () Bool)

(assert (=> d!25259 m!103761))

(declare-fun m!103763 () Bool)

(assert (=> b!95668 m!103763))

(declare-fun m!103765 () Bool)

(assert (=> b!95669 m!103765))

(declare-fun m!103767 () Bool)

(assert (=> b!95670 m!103767))

(assert (=> b!95537 d!25259))

(declare-fun d!25261 () Bool)

(assert (=> d!25261 (= (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992)))) (and (or (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000001111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000011111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000001111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000011111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000001111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000011111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000001111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000011111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000001111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000011111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000001111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000011111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000001111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000011111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000001111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000011111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000111111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00001111111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00011111111111111111111111111111) (= (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!95538 d!25261))

(declare-fun d!25263 () Bool)

(assert (=> d!25263 (= (map!1246 newMap!16) (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun bs!3943 () Bool)

(assert (= bs!3943 d!25263))

(declare-fun m!103769 () Bool)

(assert (=> bs!3943 m!103769))

(assert (=> b!95530 d!25263))

(declare-fun b!95713 () Bool)

(declare-fun e!62464 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!95713 (= e!62464 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95714 () Bool)

(declare-fun e!62452 () ListLongMap!1493)

(declare-fun call!9614 () ListLongMap!1493)

(assert (=> b!95714 (= e!62452 call!9614)))

(declare-fun b!95715 () Bool)

(declare-fun e!62463 () Bool)

(assert (=> b!95715 (= e!62463 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!95716 () Bool)

(declare-fun e!62458 () Bool)

(declare-fun e!62462 () Bool)

(assert (=> b!95716 (= e!62458 e!62462)))

(declare-fun res!48357 () Bool)

(assert (=> b!95716 (=> (not res!48357) (not e!62462))))

(declare-fun lt!47659 () ListLongMap!1493)

(assert (=> b!95716 (= res!48357 (contains!783 lt!47659 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95716 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!95717 () Bool)

(declare-fun e!62460 () ListLongMap!1493)

(assert (=> b!95717 (= e!62460 call!9614)))

(declare-fun b!95718 () Bool)

(declare-fun e!62453 () Bool)

(declare-fun e!62456 () Bool)

(assert (=> b!95718 (= e!62453 e!62456)))

(declare-fun res!48363 () Bool)

(declare-fun call!9612 () Bool)

(assert (=> b!95718 (= res!48363 call!9612)))

(assert (=> b!95718 (=> (not res!48363) (not e!62456))))

(declare-fun b!95719 () Bool)

(declare-fun res!48361 () Bool)

(declare-fun e!62455 () Bool)

(assert (=> b!95719 (=> (not res!48361) (not e!62455))))

(declare-fun e!62454 () Bool)

(assert (=> b!95719 (= res!48361 e!62454)))

(declare-fun c!16076 () Bool)

(assert (=> b!95719 (= c!16076 (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95721 () Bool)

(declare-fun res!48359 () Bool)

(assert (=> b!95721 (=> (not res!48359) (not e!62455))))

(assert (=> b!95721 (= res!48359 e!62458)))

(declare-fun res!48360 () Bool)

(assert (=> b!95721 (=> res!48360 e!62458)))

(assert (=> b!95721 (= res!48360 (not e!62464))))

(declare-fun res!48355 () Bool)

(assert (=> b!95721 (=> (not res!48355) (not e!62464))))

(assert (=> b!95721 (= res!48355 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!95722 () Bool)

(declare-fun e!62459 () Bool)

(declare-fun apply!91 (ListLongMap!1493 (_ BitVec 64)) V!3137)

(assert (=> b!95722 (= e!62459 (= (apply!91 lt!47659 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun bm!9606 () Bool)

(declare-fun call!9609 () ListLongMap!1493)

(declare-fun call!9611 () ListLongMap!1493)

(assert (=> bm!9606 (= call!9609 call!9611)))

(declare-fun b!95723 () Bool)

(assert (=> b!95723 (= e!62454 e!62459)))

(declare-fun res!48356 () Bool)

(declare-fun call!9610 () Bool)

(assert (=> b!95723 (= res!48356 call!9610)))

(assert (=> b!95723 (=> (not res!48356) (not e!62459))))

(declare-fun b!95724 () Bool)

(declare-fun e!62461 () Unit!2849)

(declare-fun Unit!2856 () Unit!2849)

(assert (=> b!95724 (= e!62461 Unit!2856)))

(declare-fun b!95725 () Bool)

(declare-fun e!62457 () ListLongMap!1493)

(assert (=> b!95725 (= e!62457 e!62452)))

(declare-fun c!16075 () Bool)

(assert (=> b!95725 (= c!16075 (and (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9607 () Bool)

(assert (=> bm!9607 (= call!9612 (contains!783 lt!47659 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95726 () Bool)

(declare-fun c!16071 () Bool)

(assert (=> b!95726 (= c!16071 (and (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95726 (= e!62452 e!62460)))

(declare-fun call!9613 () ListLongMap!1493)

(declare-fun bm!9608 () Bool)

(declare-fun c!16072 () Bool)

(declare-fun call!9615 () ListLongMap!1493)

(declare-fun +!129 (ListLongMap!1493 tuple2!2286) ListLongMap!1493)

(assert (=> bm!9608 (= call!9613 (+!129 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!95720 () Bool)

(assert (=> b!95720 (= e!62454 (not call!9610))))

(declare-fun d!25265 () Bool)

(assert (=> d!25265 e!62455))

(declare-fun res!48358 () Bool)

(assert (=> d!25265 (=> (not res!48358) (not e!62455))))

(assert (=> d!25265 (= res!48358 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun lt!47674 () ListLongMap!1493)

(assert (=> d!25265 (= lt!47659 lt!47674)))

(declare-fun lt!47657 () Unit!2849)

(assert (=> d!25265 (= lt!47657 e!62461)))

(declare-fun c!16074 () Bool)

(assert (=> d!25265 (= c!16074 e!62463)))

(declare-fun res!48362 () Bool)

(assert (=> d!25265 (=> (not res!48362) (not e!62463))))

(assert (=> d!25265 (= res!48362 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25265 (= lt!47674 e!62457)))

(assert (=> d!25265 (= c!16072 (and (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25265 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992))))))

(assert (=> d!25265 (= (getCurrentListMap!452 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) lt!47659)))

(declare-fun bm!9609 () Bool)

(assert (=> bm!9609 (= call!9611 call!9615)))

(declare-fun bm!9610 () Bool)

(declare-fun getCurrentListMapNoExtraKeys!94 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) ListLongMap!1493)

(assert (=> bm!9610 (= call!9615 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!95727 () Bool)

(assert (=> b!95727 (= e!62455 e!62453)))

(declare-fun c!16073 () Bool)

(assert (=> b!95727 (= c!16073 (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95728 () Bool)

(assert (=> b!95728 (= e!62456 (= (apply!91 lt!47659 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!95729 () Bool)

(declare-fun lt!47675 () Unit!2849)

(assert (=> b!95729 (= e!62461 lt!47675)))

(declare-fun lt!47654 () ListLongMap!1493)

(assert (=> b!95729 (= lt!47654 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun lt!47668 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47660 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47660 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47666 () Unit!2849)

(declare-fun addStillContains!67 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> b!95729 (= lt!47666 (addStillContains!67 lt!47654 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47660))))

(assert (=> b!95729 (contains!783 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47660)))

(declare-fun lt!47670 () Unit!2849)

(assert (=> b!95729 (= lt!47670 lt!47666)))

(declare-fun lt!47671 () ListLongMap!1493)

(assert (=> b!95729 (= lt!47671 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun lt!47662 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47662 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47658 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47658 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47655 () Unit!2849)

(declare-fun addApplyDifferent!67 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> b!95729 (= lt!47655 (addApplyDifferent!67 lt!47671 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47658))))

(assert (=> b!95729 (= (apply!91 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47658) (apply!91 lt!47671 lt!47658))))

(declare-fun lt!47656 () Unit!2849)

(assert (=> b!95729 (= lt!47656 lt!47655)))

(declare-fun lt!47672 () ListLongMap!1493)

(assert (=> b!95729 (= lt!47672 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun lt!47665 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47665 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47673 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47673 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47661 () Unit!2849)

(assert (=> b!95729 (= lt!47661 (addApplyDifferent!67 lt!47672 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47673))))

(assert (=> b!95729 (= (apply!91 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47673) (apply!91 lt!47672 lt!47673))))

(declare-fun lt!47667 () Unit!2849)

(assert (=> b!95729 (= lt!47667 lt!47661)))

(declare-fun lt!47664 () ListLongMap!1493)

(assert (=> b!95729 (= lt!47664 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun lt!47669 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47669 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47663 () (_ BitVec 64))

(assert (=> b!95729 (= lt!47663 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!95729 (= lt!47675 (addApplyDifferent!67 lt!47664 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47663))))

(assert (=> b!95729 (= (apply!91 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47663) (apply!91 lt!47664 lt!47663))))

(declare-fun bm!9611 () Bool)

(assert (=> bm!9611 (= call!9614 call!9613)))

(declare-fun b!95730 () Bool)

(assert (=> b!95730 (= e!62460 call!9609)))

(declare-fun bm!9612 () Bool)

(assert (=> bm!9612 (= call!9610 (contains!783 lt!47659 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95731 () Bool)

(assert (=> b!95731 (= e!62453 (not call!9612))))

(declare-fun b!95732 () Bool)

(assert (=> b!95732 (= e!62457 (+!129 call!9613 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!95733 () Bool)

(assert (=> b!95733 (= e!62462 (= (apply!91 lt!47659 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95733 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> b!95733 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25265 c!16072) b!95732))

(assert (= (and d!25265 (not c!16072)) b!95725))

(assert (= (and b!95725 c!16075) b!95714))

(assert (= (and b!95725 (not c!16075)) b!95726))

(assert (= (and b!95726 c!16071) b!95717))

(assert (= (and b!95726 (not c!16071)) b!95730))

(assert (= (or b!95717 b!95730) bm!9606))

(assert (= (or b!95714 bm!9606) bm!9609))

(assert (= (or b!95714 b!95717) bm!9611))

(assert (= (or b!95732 bm!9609) bm!9610))

(assert (= (or b!95732 bm!9611) bm!9608))

(assert (= (and d!25265 res!48362) b!95715))

(assert (= (and d!25265 c!16074) b!95729))

(assert (= (and d!25265 (not c!16074)) b!95724))

(assert (= (and d!25265 res!48358) b!95721))

(assert (= (and b!95721 res!48355) b!95713))

(assert (= (and b!95721 (not res!48360)) b!95716))

(assert (= (and b!95716 res!48357) b!95733))

(assert (= (and b!95721 res!48359) b!95719))

(assert (= (and b!95719 c!16076) b!95723))

(assert (= (and b!95719 (not c!16076)) b!95720))

(assert (= (and b!95723 res!48356) b!95722))

(assert (= (or b!95723 b!95720) bm!9612))

(assert (= (and b!95719 res!48361) b!95727))

(assert (= (and b!95727 c!16073) b!95718))

(assert (= (and b!95727 (not c!16073)) b!95731))

(assert (= (and b!95718 res!48363) b!95728))

(assert (= (or b!95718 b!95731) bm!9607))

(declare-fun b_lambda!4237 () Bool)

(assert (=> (not b_lambda!4237) (not b!95733)))

(assert (=> b!95733 t!5469))

(declare-fun b_and!5857 () Bool)

(assert (= b_and!5837 (and (=> t!5469 result!3205) b_and!5857)))

(assert (=> b!95733 t!5471))

(declare-fun b_and!5859 () Bool)

(assert (= b_and!5839 (and (=> t!5471 result!3209) b_and!5859)))

(declare-fun m!103771 () Bool)

(assert (=> bm!9610 m!103771))

(declare-fun m!103773 () Bool)

(assert (=> b!95733 m!103773))

(assert (=> b!95733 m!103631))

(declare-fun m!103775 () Bool)

(assert (=> b!95733 m!103775))

(declare-fun m!103777 () Bool)

(assert (=> b!95733 m!103777))

(assert (=> b!95733 m!103777))

(declare-fun m!103779 () Bool)

(assert (=> b!95733 m!103779))

(assert (=> b!95733 m!103773))

(assert (=> b!95733 m!103631))

(declare-fun m!103781 () Bool)

(assert (=> b!95732 m!103781))

(declare-fun m!103783 () Bool)

(assert (=> b!95729 m!103783))

(assert (=> b!95729 m!103771))

(declare-fun m!103785 () Bool)

(assert (=> b!95729 m!103785))

(declare-fun m!103787 () Bool)

(assert (=> b!95729 m!103787))

(declare-fun m!103789 () Bool)

(assert (=> b!95729 m!103789))

(declare-fun m!103791 () Bool)

(assert (=> b!95729 m!103791))

(declare-fun m!103793 () Bool)

(assert (=> b!95729 m!103793))

(declare-fun m!103795 () Bool)

(assert (=> b!95729 m!103795))

(declare-fun m!103797 () Bool)

(assert (=> b!95729 m!103797))

(declare-fun m!103799 () Bool)

(assert (=> b!95729 m!103799))

(declare-fun m!103801 () Bool)

(assert (=> b!95729 m!103801))

(declare-fun m!103803 () Bool)

(assert (=> b!95729 m!103803))

(assert (=> b!95729 m!103777))

(assert (=> b!95729 m!103789))

(assert (=> b!95729 m!103793))

(declare-fun m!103805 () Bool)

(assert (=> b!95729 m!103805))

(declare-fun m!103807 () Bool)

(assert (=> b!95729 m!103807))

(assert (=> b!95729 m!103805))

(declare-fun m!103809 () Bool)

(assert (=> b!95729 m!103809))

(declare-fun m!103811 () Bool)

(assert (=> b!95729 m!103811))

(assert (=> b!95729 m!103797))

(assert (=> b!95715 m!103777))

(assert (=> b!95715 m!103777))

(declare-fun m!103813 () Bool)

(assert (=> b!95715 m!103813))

(declare-fun m!103815 () Bool)

(assert (=> b!95722 m!103815))

(declare-fun m!103817 () Bool)

(assert (=> bm!9608 m!103817))

(declare-fun m!103819 () Bool)

(assert (=> b!95728 m!103819))

(assert (=> b!95716 m!103777))

(assert (=> b!95716 m!103777))

(declare-fun m!103821 () Bool)

(assert (=> b!95716 m!103821))

(assert (=> b!95713 m!103777))

(assert (=> b!95713 m!103777))

(assert (=> b!95713 m!103813))

(assert (=> d!25265 m!103641))

(declare-fun m!103823 () Bool)

(assert (=> bm!9607 m!103823))

(declare-fun m!103825 () Bool)

(assert (=> bm!9612 m!103825))

(assert (=> b!95530 d!25265))

(declare-fun d!25267 () Bool)

(declare-fun e!62469 () Bool)

(assert (=> d!25267 e!62469))

(declare-fun res!48366 () Bool)

(assert (=> d!25267 (=> res!48366 e!62469)))

(declare-fun lt!47686 () Bool)

(assert (=> d!25267 (= res!48366 (not lt!47686))))

(declare-fun lt!47687 () Bool)

(assert (=> d!25267 (= lt!47686 lt!47687)))

(declare-fun lt!47685 () Unit!2849)

(declare-fun e!62470 () Unit!2849)

(assert (=> d!25267 (= lt!47685 e!62470)))

(declare-fun c!16079 () Bool)

(assert (=> d!25267 (= c!16079 lt!47687)))

(declare-fun containsKey!153 (List!1558 (_ BitVec 64)) Bool)

(assert (=> d!25267 (= lt!47687 (containsKey!153 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25267 (= (contains!783 lt!47565 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!47686)))

(declare-fun b!95740 () Bool)

(declare-fun lt!47684 () Unit!2849)

(assert (=> b!95740 (= e!62470 lt!47684)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!101 (List!1558 (_ BitVec 64)) Unit!2849)

(assert (=> b!95740 (= lt!47684 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-datatypes ((Option!156 0))(
  ( (Some!155 (v!2786 V!3137)) (None!154) )
))
(declare-fun isDefined!102 (Option!156) Bool)

(declare-fun getValueByKey!150 (List!1558 (_ BitVec 64)) Option!156)

(assert (=> b!95740 (isDefined!102 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95741 () Bool)

(declare-fun Unit!2857 () Unit!2849)

(assert (=> b!95741 (= e!62470 Unit!2857)))

(declare-fun b!95742 () Bool)

(assert (=> b!95742 (= e!62469 (isDefined!102 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (= (and d!25267 c!16079) b!95740))

(assert (= (and d!25267 (not c!16079)) b!95741))

(assert (= (and d!25267 (not res!48366)) b!95742))

(assert (=> d!25267 m!103635))

(declare-fun m!103827 () Bool)

(assert (=> d!25267 m!103827))

(assert (=> b!95740 m!103635))

(declare-fun m!103829 () Bool)

(assert (=> b!95740 m!103829))

(assert (=> b!95740 m!103635))

(declare-fun m!103831 () Bool)

(assert (=> b!95740 m!103831))

(assert (=> b!95740 m!103831))

(declare-fun m!103833 () Bool)

(assert (=> b!95740 m!103833))

(assert (=> b!95742 m!103635))

(assert (=> b!95742 m!103831))

(assert (=> b!95742 m!103831))

(assert (=> b!95742 m!103833))

(assert (=> b!95534 d!25267))

(declare-fun b!95827 () Bool)

(declare-fun e!62527 () tuple2!2288)

(declare-fun e!62522 () tuple2!2288)

(assert (=> b!95827 (= e!62527 e!62522)))

(declare-datatypes ((SeekEntryResult!246 0))(
  ( (MissingZero!246 (index!3126 (_ BitVec 32))) (Found!246 (index!3127 (_ BitVec 32))) (Intermediate!246 (undefined!1058 Bool) (index!3128 (_ BitVec 32)) (x!12794 (_ BitVec 32))) (Undefined!246) (MissingVacant!246 (index!3129 (_ BitVec 32))) )
))
(declare-fun lt!47752 () SeekEntryResult!246)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4197 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> b!95827 (= lt!47752 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun c!16114 () Bool)

(assert (=> b!95827 (= c!16114 ((_ is Undefined!246) lt!47752))))

(declare-fun b!95828 () Bool)

(declare-fun e!62530 () Bool)

(declare-fun call!9685 () Bool)

(assert (=> b!95828 (= e!62530 (not call!9685))))

(declare-fun bm!9661 () Bool)

(declare-fun call!9672 () ListLongMap!1493)

(declare-fun call!9671 () ListLongMap!1493)

(assert (=> bm!9661 (= call!9672 call!9671)))

(declare-fun call!9666 () Unit!2849)

(declare-fun bm!9662 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2849)

(assert (=> bm!9662 (= call!9666 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(declare-fun b!95829 () Bool)

(declare-fun e!62520 () Bool)

(declare-fun e!62532 () Bool)

(assert (=> b!95829 (= e!62520 e!62532)))

(declare-fun c!16119 () Bool)

(declare-fun lt!47762 () tuple2!2288)

(assert (=> b!95829 (= c!16119 (_1!1155 lt!47762))))

(declare-fun b!95830 () Bool)

(declare-fun e!62516 () Bool)

(assert (=> b!95830 (= e!62516 (not call!9685))))

(declare-fun bm!9663 () Bool)

(declare-fun call!9665 () Bool)

(declare-fun call!9675 () Bool)

(assert (=> bm!9663 (= call!9665 call!9675)))

(declare-fun b!95831 () Bool)

(declare-fun e!62523 () ListLongMap!1493)

(assert (=> b!95831 (= e!62523 call!9671)))

(declare-fun bm!9664 () Bool)

(declare-fun call!9669 () Bool)

(declare-fun call!9678 () Bool)

(assert (=> bm!9664 (= call!9669 call!9678)))

(declare-fun bm!9665 () Bool)

(declare-fun call!9670 () Unit!2849)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2849)

(assert (=> bm!9665 (= call!9670 (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(declare-fun b!95832 () Bool)

(declare-fun e!62534 () Bool)

(assert (=> b!95832 (= e!62534 (not call!9669))))

(declare-fun b!95833 () Bool)

(declare-fun call!9686 () ListLongMap!1493)

(assert (=> b!95833 (= e!62523 call!9686)))

(declare-fun b!95834 () Bool)

(declare-fun res!48405 () Bool)

(assert (=> b!95834 (=> (not res!48405) (not e!62530))))

(declare-fun call!9674 () Bool)

(assert (=> b!95834 (= res!48405 call!9674)))

(declare-fun e!62518 () Bool)

(assert (=> b!95834 (= e!62518 e!62530)))

(declare-fun bm!9667 () Bool)

(declare-fun call!9680 () SeekEntryResult!246)

(declare-fun call!9679 () SeekEntryResult!246)

(assert (=> bm!9667 (= call!9680 call!9679)))

(declare-fun bm!9668 () Bool)

(declare-fun call!9684 () SeekEntryResult!246)

(assert (=> bm!9668 (= call!9684 call!9679)))

(declare-fun b!95835 () Bool)

(declare-fun e!62533 () Bool)

(assert (=> b!95835 (= e!62533 (not call!9669))))

(declare-fun bm!9669 () Bool)

(declare-fun call!9664 () Bool)

(assert (=> bm!9669 (= call!9664 call!9675)))

(declare-fun bm!9670 () Bool)

(declare-fun call!9667 () ListLongMap!1493)

(declare-fun call!9687 () ListLongMap!1493)

(assert (=> bm!9670 (= call!9667 call!9687)))

(declare-fun b!95836 () Bool)

(declare-fun res!48395 () Bool)

(assert (=> b!95836 (= res!48395 call!9664)))

(declare-fun e!62536 () Bool)

(assert (=> b!95836 (=> (not res!48395) (not e!62536))))

(declare-fun b!95837 () Bool)

(declare-fun e!62535 () Bool)

(assert (=> b!95837 (= e!62535 e!62533)))

(declare-fun res!48404 () Bool)

(declare-fun call!9673 () Bool)

(assert (=> b!95837 (= res!48404 call!9673)))

(assert (=> b!95837 (=> (not res!48404) (not e!62533))))

(declare-fun b!95838 () Bool)

(declare-fun lt!47747 () Unit!2849)

(declare-fun e!62515 () Unit!2849)

(assert (=> b!95838 (= lt!47747 e!62515)))

(declare-fun c!16112 () Bool)

(declare-fun call!9683 () Bool)

(assert (=> b!95838 (= c!16112 call!9683)))

(assert (=> b!95838 (= e!62522 (tuple2!2289 false newMap!16))))

(declare-fun e!62525 () Bool)

(declare-fun lt!47765 () SeekEntryResult!246)

(declare-fun b!95839 () Bool)

(assert (=> b!95839 (= e!62525 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47765)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95840 () Bool)

(declare-fun Unit!2858 () Unit!2849)

(assert (=> b!95840 (= e!62515 Unit!2858)))

(declare-fun lt!47751 () Unit!2849)

(assert (=> b!95840 (= lt!47751 call!9670)))

(declare-fun lt!47757 () SeekEntryResult!246)

(assert (=> b!95840 (= lt!47757 call!9684)))

(declare-fun res!48402 () Bool)

(assert (=> b!95840 (= res!48402 ((_ is Found!246) lt!47757))))

(assert (=> b!95840 (=> (not res!48402) (not e!62536))))

(assert (=> b!95840 e!62536))

(declare-fun lt!47759 () Unit!2849)

(assert (=> b!95840 (= lt!47759 lt!47751)))

(assert (=> b!95840 false))

(declare-fun bm!9671 () Bool)

(assert (=> bm!9671 (= call!9679 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun bm!9672 () Bool)

(assert (=> bm!9672 (= call!9674 call!9664)))

(declare-fun b!95841 () Bool)

(declare-fun res!48397 () Bool)

(assert (=> b!95841 (=> (not res!48397) (not e!62534))))

(declare-fun lt!47756 () SeekEntryResult!246)

(assert (=> b!95841 (= res!48397 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!47756)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95842 () Bool)

(declare-fun e!62519 () tuple2!2288)

(assert (=> b!95842 (= e!62527 e!62519)))

(declare-fun c!16109 () Bool)

(assert (=> b!95842 (= c!16109 (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95843 () Bool)

(declare-fun lt!47767 () Unit!2849)

(assert (=> b!95843 (= e!62515 lt!47767)))

(assert (=> b!95843 (= lt!47767 call!9666)))

(declare-fun lt!47763 () SeekEntryResult!246)

(assert (=> b!95843 (= lt!47763 call!9684)))

(declare-fun c!16108 () Bool)

(assert (=> b!95843 (= c!16108 ((_ is MissingZero!246) lt!47763))))

(assert (=> b!95843 e!62518))

(declare-fun bm!9673 () Bool)

(assert (=> bm!9673 (= call!9686 call!9687)))

(declare-fun b!95844 () Bool)

(declare-fun e!62517 () Bool)

(assert (=> b!95844 (= e!62517 e!62516)))

(declare-fun res!48401 () Bool)

(assert (=> b!95844 (= res!48401 call!9674)))

(assert (=> b!95844 (=> (not res!48401) (not e!62516))))

(declare-fun c!16117 () Bool)

(declare-fun bm!9674 () Bool)

(assert (=> bm!9674 (= call!9687 (getCurrentListMap!452 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95845 () Bool)

(declare-fun e!62521 () tuple2!2288)

(declare-fun e!62529 () tuple2!2288)

(assert (=> b!95845 (= e!62521 e!62529)))

(declare-fun c!16120 () Bool)

(assert (=> b!95845 (= c!16120 ((_ is MissingZero!246) lt!47752))))

(declare-fun b!95846 () Bool)

(declare-fun lt!47749 () tuple2!2288)

(assert (=> b!95846 (= e!62521 (tuple2!2289 (_1!1155 lt!47749) (_2!1155 lt!47749)))))

(declare-fun call!9681 () tuple2!2288)

(assert (=> b!95846 (= lt!47749 call!9681)))

(declare-fun b!95847 () Bool)

(declare-fun e!62528 () Unit!2849)

(declare-fun Unit!2859 () Unit!2849)

(assert (=> b!95847 (= e!62528 Unit!2859)))

(declare-fun lt!47768 () Unit!2849)

(assert (=> b!95847 (= lt!47768 call!9666)))

(assert (=> b!95847 (= lt!47756 call!9680)))

(declare-fun c!16113 () Bool)

(assert (=> b!95847 (= c!16113 ((_ is MissingZero!246) lt!47756))))

(declare-fun e!62526 () Bool)

(assert (=> b!95847 e!62526))

(declare-fun lt!47748 () Unit!2849)

(assert (=> b!95847 (= lt!47748 lt!47768)))

(assert (=> b!95847 false))

(declare-fun e!62531 () Bool)

(declare-fun call!9677 () ListLongMap!1493)

(declare-fun call!9676 () ListLongMap!1493)

(declare-fun b!95848 () Bool)

(assert (=> b!95848 (= e!62531 (= call!9677 (+!129 call!9676 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9675 () Bool)

(assert (=> bm!9675 (= call!9673 call!9665)))

(declare-fun b!95849 () Bool)

(declare-fun res!48403 () Bool)

(assert (=> b!95849 (=> (not res!48403) (not e!62530))))

(assert (=> b!95849 (= res!48403 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!47763)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95850 () Bool)

(declare-fun e!62524 () ListLongMap!1493)

(assert (=> b!95850 (= e!62524 call!9667)))

(declare-fun bm!9676 () Bool)

(declare-fun call!9682 () ListLongMap!1493)

(assert (=> bm!9676 (= call!9682 (+!129 e!62524 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!16110 () Bool)

(assert (=> bm!9676 (= c!16110 c!16117)))

(declare-fun lt!47743 () (_ BitVec 32))

(declare-fun lt!47761 () array!4199)

(declare-fun lt!47764 () (_ BitVec 32))

(declare-fun bm!9677 () Bool)

(assert (=> bm!9677 (= call!9671 (getCurrentListMap!452 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun bm!9678 () Bool)

(declare-fun c!16111 () Bool)

(assert (=> bm!9678 (= c!16111 c!16114)))

(assert (=> bm!9678 (= call!9683 (contains!783 e!62523 (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(declare-fun b!95851 () Bool)

(declare-fun res!48407 () Bool)

(assert (=> b!95851 (= res!48407 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!47756)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95851 (=> (not res!48407) (not e!62533))))

(declare-fun b!95852 () Bool)

(declare-fun res!48399 () Bool)

(assert (=> b!95852 (= res!48399 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!47763)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95852 (=> (not res!48399) (not e!62516))))

(declare-fun b!95853 () Bool)

(declare-fun res!48398 () Bool)

(assert (=> b!95853 (=> (not res!48398) (not e!62534))))

(assert (=> b!95853 (= res!48398 call!9673)))

(assert (=> b!95853 (= e!62526 e!62534)))

(declare-fun b!95854 () Bool)

(declare-fun c!16115 () Bool)

(assert (=> b!95854 (= c!16115 ((_ is MissingVacant!246) lt!47756))))

(assert (=> b!95854 (= e!62526 e!62535)))

(declare-fun b!95855 () Bool)

(declare-fun lt!47745 () Unit!2849)

(declare-fun lt!47744 () Unit!2849)

(assert (=> b!95855 (= lt!47745 lt!47744)))

(declare-fun call!9668 () ListLongMap!1493)

(assert (=> b!95855 (= call!9668 call!9672)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!40 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2849)

(assert (=> b!95855 (= lt!47744 (lemmaChangeZeroKeyThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47743 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95855 (= lt!47743 (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!95855 (= e!62519 (tuple2!2289 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6541 newMap!16) (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (_size!468 newMap!16) (_keys!4142 newMap!16) (_values!2439 newMap!16) (_vacant!468 newMap!16))))))

(declare-fun b!95856 () Bool)

(assert (=> b!95856 (= e!62517 ((_ is Undefined!246) lt!47763))))

(declare-fun b!95857 () Bool)

(assert (=> b!95857 (= e!62535 ((_ is Undefined!246) lt!47756))))

(declare-fun b!95858 () Bool)

(declare-fun lt!47758 () Unit!2849)

(declare-fun lt!47746 () Unit!2849)

(assert (=> b!95858 (= lt!47758 lt!47746)))

(assert (=> b!95858 (= call!9668 call!9672)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2849)

(assert (=> b!95858 (= lt!47746 (lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95858 (= lt!47764 (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!95858 (= e!62519 (tuple2!2289 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6541 newMap!16) (bvor (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!468 newMap!16) (_keys!4142 newMap!16) (_values!2439 newMap!16) (_vacant!468 newMap!16))))))

(declare-fun b!95859 () Bool)

(declare-fun lt!47750 () Unit!2849)

(declare-fun lt!47742 () Unit!2849)

(assert (=> b!95859 (= lt!47750 lt!47742)))

(assert (=> b!95859 call!9683))

(declare-fun lemmaValidKeyInArrayIsInListMap!100 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) Unit!2849)

(assert (=> b!95859 (= lt!47742 (lemmaValidKeyInArrayIsInListMap!100 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (defaultEntry!2456 newMap!16)))))

(assert (=> b!95859 (= lt!47761 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))))

(declare-fun lt!47766 () Unit!2849)

(declare-fun lt!47755 () Unit!2849)

(assert (=> b!95859 (= lt!47766 lt!47755)))

(assert (=> b!95859 (= call!9682 call!9686)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2849)

(assert (=> b!95859 (= lt!47755 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47754 () Unit!2849)

(assert (=> b!95859 (= lt!47754 e!62528)))

(declare-fun c!16116 () Bool)

(assert (=> b!95859 (= c!16116 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!95859 (= e!62529 (tuple2!2289 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (_size!468 newMap!16) (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (_vacant!468 newMap!16))))))

(declare-fun bm!9679 () Bool)

(assert (=> bm!9679 (= call!9685 call!9678)))

(declare-fun b!95860 () Bool)

(declare-fun c!16121 () Bool)

(assert (=> b!95860 (= c!16121 ((_ is MissingVacant!246) lt!47752))))

(assert (=> b!95860 (= e!62522 e!62521)))

(declare-fun bm!9680 () Bool)

(assert (=> bm!9680 (= call!9677 (map!1246 (_2!1155 lt!47762)))))

(declare-fun b!95861 () Bool)

(declare-fun res!48396 () Bool)

(assert (=> b!95861 (= res!48396 call!9665)))

(assert (=> b!95861 (=> (not res!48396) (not e!62525))))

(declare-fun b!95862 () Bool)

(declare-fun c!16118 () Bool)

(assert (=> b!95862 (= c!16118 ((_ is MissingVacant!246) lt!47763))))

(assert (=> b!95862 (= e!62518 e!62517)))

(declare-fun b!95863 () Bool)

(declare-fun lt!47753 () tuple2!2288)

(assert (=> b!95863 (= lt!47753 call!9681)))

(assert (=> b!95863 (= e!62529 (tuple2!2289 (_1!1155 lt!47753) (_2!1155 lt!47753)))))

(declare-fun bm!9681 () Bool)

(assert (=> bm!9681 (= call!9668 call!9682)))

(declare-fun b!95864 () Bool)

(assert (=> b!95864 (= e!62536 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47757)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95865 () Bool)

(assert (=> b!95865 (= e!62524 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95866 () Bool)

(assert (=> b!95866 (= e!62532 (= call!9677 call!9676))))

(declare-fun bm!9682 () Bool)

(declare-fun updateHelperNewKey!40 (LongMapFixedSize!838 (_ BitVec 64) V!3137 (_ BitVec 32)) tuple2!2288)

(assert (=> bm!9682 (= call!9681 (updateHelperNewKey!40 newMap!16 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(declare-fun bm!9683 () Bool)

(assert (=> bm!9683 (= call!9676 (map!1246 newMap!16))))

(declare-fun bm!9684 () Bool)

(assert (=> bm!9684 (= call!9678 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!95867 () Bool)

(assert (=> b!95867 (= e!62532 e!62531)))

(declare-fun res!48400 () Bool)

(assert (=> b!95867 (= res!48400 (contains!783 call!9677 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!95867 (=> (not res!48400) (not e!62531))))

(declare-fun b!95868 () Bool)

(declare-fun lt!47760 () Unit!2849)

(assert (=> b!95868 (= e!62528 lt!47760)))

(assert (=> b!95868 (= lt!47760 call!9670)))

(assert (=> b!95868 (= lt!47765 call!9680)))

(declare-fun res!48406 () Bool)

(assert (=> b!95868 (= res!48406 ((_ is Found!246) lt!47765))))

(assert (=> b!95868 (=> (not res!48406) (not e!62525))))

(assert (=> b!95868 e!62525))

(declare-fun bm!9666 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9666 (= call!9675 (inRange!0 (ite c!16114 (ite c!16112 (index!3127 lt!47757) (ite c!16108 (index!3126 lt!47763) (index!3129 lt!47763))) (ite c!16116 (index!3127 lt!47765) (ite c!16113 (index!3126 lt!47756) (index!3129 lt!47756)))) (mask!6541 newMap!16)))))

(declare-fun d!25269 () Bool)

(assert (=> d!25269 e!62520))

(declare-fun res!48408 () Bool)

(assert (=> d!25269 (=> (not res!48408) (not e!62520))))

(assert (=> d!25269 (= res!48408 (valid!387 (_2!1155 lt!47762)))))

(assert (=> d!25269 (= lt!47762 e!62527)))

(assert (=> d!25269 (= c!16117 (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvneg (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (=> d!25269 (valid!387 newMap!16)))

(assert (=> d!25269 (= (update!142 newMap!16 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!47762)))

(assert (= (and d!25269 c!16117) b!95842))

(assert (= (and d!25269 (not c!16117)) b!95827))

(assert (= (and b!95842 c!16109) b!95855))

(assert (= (and b!95842 (not c!16109)) b!95858))

(assert (= (or b!95855 b!95858) bm!9661))

(assert (= (or b!95855 b!95858) bm!9670))

(assert (= (or b!95855 b!95858) bm!9681))

(assert (= (and b!95827 c!16114) b!95838))

(assert (= (and b!95827 (not c!16114)) b!95860))

(assert (= (and b!95838 c!16112) b!95840))

(assert (= (and b!95838 (not c!16112)) b!95843))

(assert (= (and b!95840 res!48402) b!95836))

(assert (= (and b!95836 res!48395) b!95864))

(assert (= (and b!95843 c!16108) b!95834))

(assert (= (and b!95843 (not c!16108)) b!95862))

(assert (= (and b!95834 res!48405) b!95849))

(assert (= (and b!95849 res!48403) b!95828))

(assert (= (and b!95862 c!16118) b!95844))

(assert (= (and b!95862 (not c!16118)) b!95856))

(assert (= (and b!95844 res!48401) b!95852))

(assert (= (and b!95852 res!48399) b!95830))

(assert (= (or b!95834 b!95844) bm!9672))

(assert (= (or b!95828 b!95830) bm!9679))

(assert (= (or b!95836 bm!9672) bm!9669))

(assert (= (or b!95840 b!95843) bm!9668))

(assert (= (and b!95860 c!16121) b!95846))

(assert (= (and b!95860 (not c!16121)) b!95845))

(assert (= (and b!95845 c!16120) b!95863))

(assert (= (and b!95845 (not c!16120)) b!95859))

(assert (= (and b!95859 c!16116) b!95868))

(assert (= (and b!95859 (not c!16116)) b!95847))

(assert (= (and b!95868 res!48406) b!95861))

(assert (= (and b!95861 res!48396) b!95839))

(assert (= (and b!95847 c!16113) b!95853))

(assert (= (and b!95847 (not c!16113)) b!95854))

(assert (= (and b!95853 res!48398) b!95841))

(assert (= (and b!95841 res!48397) b!95832))

(assert (= (and b!95854 c!16115) b!95837))

(assert (= (and b!95854 (not c!16115)) b!95857))

(assert (= (and b!95837 res!48404) b!95851))

(assert (= (and b!95851 res!48407) b!95835))

(assert (= (or b!95853 b!95837) bm!9675))

(assert (= (or b!95832 b!95835) bm!9664))

(assert (= (or b!95861 bm!9675) bm!9663))

(assert (= (or b!95868 b!95847) bm!9667))

(assert (= (or b!95846 b!95863) bm!9682))

(assert (= (or bm!9669 bm!9663) bm!9666))

(assert (= (or bm!9668 bm!9667) bm!9671))

(assert (= (or bm!9679 bm!9664) bm!9684))

(assert (= (or b!95843 b!95847) bm!9662))

(assert (= (or b!95838 b!95859) bm!9673))

(assert (= (or b!95840 b!95868) bm!9665))

(assert (= (or b!95838 b!95859) bm!9678))

(assert (= (and bm!9678 c!16111) b!95833))

(assert (= (and bm!9678 (not c!16111)) b!95831))

(assert (= (or bm!9670 bm!9673) bm!9674))

(assert (= (or bm!9661 b!95831) bm!9677))

(assert (= (or bm!9681 b!95859) bm!9676))

(assert (= (and bm!9676 c!16110) b!95850))

(assert (= (and bm!9676 (not c!16110)) b!95865))

(assert (= (and d!25269 res!48408) b!95829))

(assert (= (and b!95829 c!16119) b!95867))

(assert (= (and b!95829 (not c!16119)) b!95866))

(assert (= (and b!95867 res!48400) b!95848))

(assert (= (or b!95867 b!95848 b!95866) bm!9680))

(assert (= (or b!95848 b!95866) bm!9683))

(assert (=> bm!9682 m!103635))

(assert (=> bm!9682 m!103633))

(declare-fun m!103835 () Bool)

(assert (=> bm!9682 m!103835))

(declare-fun m!103837 () Bool)

(assert (=> b!95841 m!103837))

(declare-fun m!103839 () Bool)

(assert (=> bm!9676 m!103839))

(declare-fun m!103841 () Bool)

(assert (=> b!95848 m!103841))

(declare-fun m!103843 () Bool)

(assert (=> bm!9677 m!103843))

(assert (=> bm!9665 m!103635))

(declare-fun m!103845 () Bool)

(assert (=> bm!9665 m!103845))

(assert (=> b!95827 m!103635))

(declare-fun m!103847 () Bool)

(assert (=> b!95827 m!103847))

(assert (=> b!95855 m!103633))

(declare-fun m!103849 () Bool)

(assert (=> b!95855 m!103849))

(assert (=> b!95859 m!103769))

(assert (=> b!95859 m!103635))

(assert (=> b!95859 m!103633))

(declare-fun m!103851 () Bool)

(assert (=> b!95859 m!103851))

(declare-fun m!103853 () Bool)

(assert (=> b!95859 m!103853))

(assert (=> b!95859 m!103769))

(assert (=> b!95859 m!103635))

(declare-fun m!103855 () Bool)

(assert (=> b!95859 m!103855))

(declare-fun m!103857 () Bool)

(assert (=> b!95859 m!103857))

(declare-fun m!103859 () Bool)

(assert (=> b!95864 m!103859))

(declare-fun m!103861 () Bool)

(assert (=> b!95852 m!103861))

(assert (=> b!95865 m!103769))

(assert (=> bm!9674 m!103853))

(declare-fun m!103863 () Bool)

(assert (=> bm!9674 m!103863))

(declare-fun m!103865 () Bool)

(assert (=> b!95851 m!103865))

(declare-fun m!103867 () Bool)

(assert (=> bm!9680 m!103867))

(assert (=> bm!9684 m!103635))

(declare-fun m!103869 () Bool)

(assert (=> bm!9684 m!103869))

(assert (=> b!95867 m!103635))

(declare-fun m!103871 () Bool)

(assert (=> b!95867 m!103871))

(assert (=> b!95858 m!103633))

(declare-fun m!103873 () Bool)

(assert (=> b!95858 m!103873))

(declare-fun m!103875 () Bool)

(assert (=> bm!9666 m!103875))

(declare-fun m!103877 () Bool)

(assert (=> bm!9678 m!103877))

(declare-fun m!103879 () Bool)

(assert (=> bm!9678 m!103879))

(declare-fun m!103881 () Bool)

(assert (=> b!95839 m!103881))

(declare-fun m!103883 () Bool)

(assert (=> d!25269 m!103883))

(assert (=> d!25269 m!103627))

(assert (=> bm!9662 m!103635))

(declare-fun m!103885 () Bool)

(assert (=> bm!9662 m!103885))

(declare-fun m!103887 () Bool)

(assert (=> b!95849 m!103887))

(assert (=> bm!9683 m!103659))

(assert (=> bm!9671 m!103635))

(assert (=> bm!9671 m!103847))

(assert (=> b!95534 d!25269))

(declare-fun d!25271 () Bool)

(declare-fun c!16124 () Bool)

(assert (=> d!25271 (= c!16124 ((_ is ValueCellFull!965) (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun e!62539 () V!3137)

(assert (=> d!25271 (= (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62539)))

(declare-fun b!95873 () Bool)

(declare-fun get!1279 (ValueCell!965 V!3137) V!3137)

(assert (=> b!95873 (= e!62539 (get!1279 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95874 () Bool)

(declare-fun get!1280 (ValueCell!965 V!3137) V!3137)

(assert (=> b!95874 (= e!62539 (get!1280 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25271 c!16124) b!95873))

(assert (= (and d!25271 (not c!16124)) b!95874))

(assert (=> b!95873 m!103629))

(assert (=> b!95873 m!103631))

(declare-fun m!103889 () Bool)

(assert (=> b!95873 m!103889))

(assert (=> b!95874 m!103629))

(assert (=> b!95874 m!103631))

(declare-fun m!103891 () Bool)

(assert (=> b!95874 m!103891))

(assert (=> b!95534 d!25271))

(declare-fun d!25273 () Bool)

(assert (=> d!25273 (= (array_inv!1229 (_keys!4142 newMap!16)) (bvsge (size!2243 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95536 d!25273))

(declare-fun d!25275 () Bool)

(assert (=> d!25275 (= (array_inv!1230 (_values!2439 newMap!16)) (bvsge (size!2244 (_values!2439 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95536 d!25275))

(declare-fun d!25277 () Bool)

(assert (=> d!25277 (not (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!47771 () Unit!2849)

(declare-fun choose!68 (array!4197 (_ BitVec 32) (_ BitVec 64) List!1559) Unit!2849)

(assert (=> d!25277 (= lt!47771 (choose!68 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556)))))

(assert (=> d!25277 (bvslt (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!25277 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556)) lt!47771)))

(declare-fun bs!3944 () Bool)

(assert (= bs!3944 d!25277))

(assert (=> bs!3944 m!103635))

(assert (=> bs!3944 m!103653))

(assert (=> bs!3944 m!103635))

(declare-fun m!103893 () Bool)

(assert (=> bs!3944 m!103893))

(assert (=> b!95531 d!25277))

(declare-fun d!25279 () Bool)

(assert (=> d!25279 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) from!355 Nil!1556)))

(declare-fun lt!47774 () Unit!2849)

(declare-fun choose!39 (array!4197 (_ BitVec 32) (_ BitVec 32)) Unit!2849)

(assert (=> d!25279 (= lt!47774 (choose!39 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!25279 (bvslt (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!25279 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 from!355) lt!47774)))

(declare-fun bs!3945 () Bool)

(assert (= bs!3945 d!25279))

(assert (=> bs!3945 m!103649))

(declare-fun m!103895 () Bool)

(assert (=> bs!3945 m!103895))

(assert (=> b!95531 d!25279))

(declare-fun d!25281 () Bool)

(declare-fun res!48413 () Bool)

(declare-fun e!62544 () Bool)

(assert (=> d!25281 (=> res!48413 e!62544)))

(assert (=> d!25281 (= res!48413 (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25281 (= (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!62544)))

(declare-fun b!95879 () Bool)

(declare-fun e!62545 () Bool)

(assert (=> b!95879 (= e!62544 e!62545)))

(declare-fun res!48414 () Bool)

(assert (=> b!95879 (=> (not res!48414) (not e!62545))))

(assert (=> b!95879 (= res!48414 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!95880 () Bool)

(assert (=> b!95880 (= e!62545 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!25281 (not res!48413)) b!95879))

(assert (= (and b!95879 res!48414) b!95880))

(assert (=> d!25281 m!103777))

(assert (=> b!95880 m!103635))

(declare-fun m!103897 () Bool)

(assert (=> b!95880 m!103897))

(assert (=> b!95531 d!25281))

(declare-fun d!25283 () Bool)

(declare-fun e!62548 () Bool)

(assert (=> d!25283 e!62548))

(declare-fun c!16127 () Bool)

(assert (=> d!25283 (= c!16127 (and (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!47777 () Unit!2849)

(declare-fun choose!580 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2849)

(assert (=> d!25283 (= lt!47777 (choose!580 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(assert (=> d!25283 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992))))))

(assert (=> d!25283 (= (lemmaListMapContainsThenArrayContainsFrom!83 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) lt!47777)))

(declare-fun b!95885 () Bool)

(assert (=> b!95885 (= e!62548 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!95886 () Bool)

(assert (=> b!95886 (= e!62548 (ite (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!25283 c!16127) b!95885))

(assert (= (and d!25283 (not c!16127)) b!95886))

(assert (=> d!25283 m!103635))

(declare-fun m!103899 () Bool)

(assert (=> d!25283 m!103899))

(assert (=> d!25283 m!103641))

(assert (=> b!95885 m!103635))

(assert (=> b!95885 m!103653))

(assert (=> b!95531 d!25283))

(declare-fun d!25285 () Bool)

(declare-fun res!48421 () Bool)

(declare-fun e!62559 () Bool)

(assert (=> d!25285 (=> res!48421 e!62559)))

(assert (=> d!25285 (= res!48421 (bvsge from!355 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25285 (= (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) from!355 Nil!1556) e!62559)))

(declare-fun b!95897 () Bool)

(declare-fun e!62560 () Bool)

(declare-fun call!9690 () Bool)

(assert (=> b!95897 (= e!62560 call!9690)))

(declare-fun b!95898 () Bool)

(declare-fun e!62557 () Bool)

(assert (=> b!95898 (= e!62559 e!62557)))

(declare-fun res!48423 () Bool)

(assert (=> b!95898 (=> (not res!48423) (not e!62557))))

(declare-fun e!62558 () Bool)

(assert (=> b!95898 (= res!48423 (not e!62558))))

(declare-fun res!48422 () Bool)

(assert (=> b!95898 (=> (not res!48422) (not e!62558))))

(assert (=> b!95898 (= res!48422 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95899 () Bool)

(assert (=> b!95899 (= e!62560 call!9690)))

(declare-fun c!16130 () Bool)

(declare-fun bm!9687 () Bool)

(assert (=> bm!9687 (= call!9690 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)))))

(declare-fun b!95900 () Bool)

(assert (=> b!95900 (= e!62557 e!62560)))

(assert (=> b!95900 (= c!16130 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95901 () Bool)

(declare-fun contains!784 (List!1559 (_ BitVec 64)) Bool)

(assert (=> b!95901 (= e!62558 (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25285 (not res!48421)) b!95898))

(assert (= (and b!95898 res!48422) b!95901))

(assert (= (and b!95898 res!48423) b!95900))

(assert (= (and b!95900 c!16130) b!95897))

(assert (= (and b!95900 (not c!16130)) b!95899))

(assert (= (or b!95897 b!95899) bm!9687))

(assert (=> b!95898 m!103635))

(assert (=> b!95898 m!103635))

(declare-fun m!103901 () Bool)

(assert (=> b!95898 m!103901))

(assert (=> bm!9687 m!103635))

(declare-fun m!103903 () Bool)

(assert (=> bm!9687 m!103903))

(assert (=> b!95900 m!103635))

(assert (=> b!95900 m!103635))

(assert (=> b!95900 m!103901))

(assert (=> b!95901 m!103635))

(assert (=> b!95901 m!103635))

(declare-fun m!103905 () Bool)

(assert (=> b!95901 m!103905))

(assert (=> b!95531 d!25285))

(declare-fun condMapEmpty!3711 () Bool)

(declare-fun mapDefault!3711 () ValueCell!965)

(assert (=> mapNonEmpty!3696 (= condMapEmpty!3711 (= mapRest!3695 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3711)))))

(declare-fun e!62565 () Bool)

(declare-fun mapRes!3711 () Bool)

(assert (=> mapNonEmpty!3696 (= tp!9480 (and e!62565 mapRes!3711))))

(declare-fun mapIsEmpty!3711 () Bool)

(assert (=> mapIsEmpty!3711 mapRes!3711))

(declare-fun b!95909 () Bool)

(assert (=> b!95909 (= e!62565 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3711 () Bool)

(declare-fun tp!9507 () Bool)

(declare-fun e!62566 () Bool)

(assert (=> mapNonEmpty!3711 (= mapRes!3711 (and tp!9507 e!62566))))

(declare-fun mapKey!3711 () (_ BitVec 32))

(declare-fun mapValue!3711 () ValueCell!965)

(declare-fun mapRest!3711 () (Array (_ BitVec 32) ValueCell!965))

(assert (=> mapNonEmpty!3711 (= mapRest!3695 (store mapRest!3711 mapKey!3711 mapValue!3711))))

(declare-fun b!95908 () Bool)

(assert (=> b!95908 (= e!62566 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3696 condMapEmpty!3711) mapIsEmpty!3711))

(assert (= (and mapNonEmpty!3696 (not condMapEmpty!3711)) mapNonEmpty!3711))

(assert (= (and mapNonEmpty!3711 ((_ is ValueCellFull!965) mapValue!3711)) b!95908))

(assert (= (and mapNonEmpty!3696 ((_ is ValueCellFull!965) mapDefault!3711)) b!95909))

(declare-fun m!103907 () Bool)

(assert (=> mapNonEmpty!3711 m!103907))

(declare-fun condMapEmpty!3712 () Bool)

(declare-fun mapDefault!3712 () ValueCell!965)

(assert (=> mapNonEmpty!3695 (= condMapEmpty!3712 (= mapRest!3696 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3712)))))

(declare-fun e!62567 () Bool)

(declare-fun mapRes!3712 () Bool)

(assert (=> mapNonEmpty!3695 (= tp!9479 (and e!62567 mapRes!3712))))

(declare-fun mapIsEmpty!3712 () Bool)

(assert (=> mapIsEmpty!3712 mapRes!3712))

(declare-fun b!95911 () Bool)

(assert (=> b!95911 (= e!62567 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3712 () Bool)

(declare-fun tp!9508 () Bool)

(declare-fun e!62568 () Bool)

(assert (=> mapNonEmpty!3712 (= mapRes!3712 (and tp!9508 e!62568))))

(declare-fun mapRest!3712 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapKey!3712 () (_ BitVec 32))

(declare-fun mapValue!3712 () ValueCell!965)

(assert (=> mapNonEmpty!3712 (= mapRest!3696 (store mapRest!3712 mapKey!3712 mapValue!3712))))

(declare-fun b!95910 () Bool)

(assert (=> b!95910 (= e!62568 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3695 condMapEmpty!3712) mapIsEmpty!3712))

(assert (= (and mapNonEmpty!3695 (not condMapEmpty!3712)) mapNonEmpty!3712))

(assert (= (and mapNonEmpty!3712 ((_ is ValueCellFull!965) mapValue!3712)) b!95910))

(assert (= (and mapNonEmpty!3695 ((_ is ValueCellFull!965) mapDefault!3712)) b!95911))

(declare-fun m!103909 () Bool)

(assert (=> mapNonEmpty!3712 m!103909))

(declare-fun b_lambda!4239 () Bool)

(assert (= b_lambda!4237 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4239)))

(check-sat (not mapNonEmpty!3712) (not b!95728) (not bm!9610) (not b!95732) (not b!95668) (not b_next!2401) (not d!25277) (not b!95858) (not bm!9612) (not b!95742) (not bm!9666) (not bm!9683) (not bm!9680) (not b!95722) (not b!95865) (not b!95827) (not bm!9687) (not d!25283) (not bm!9671) (not bm!9676) (not b!95901) b_and!5859 (not bm!9678) (not d!25253) (not b!95848) (not bm!9608) (not d!25259) (not bm!9607) (not b!95716) (not b!95867) (not b!95713) (not b!95900) (not b!95880) (not bm!9684) (not b!95669) (not d!25263) (not bm!9674) (not b!95729) (not b_lambda!4239) (not b!95715) (not bm!9662) (not b_lambda!4235) (not bm!9677) (not b!95855) (not b!95898) (not b!95670) (not b!95874) (not mapNonEmpty!3711) (not b!95859) tp_is_empty!2617 (not d!25265) (not b!95740) b_and!5857 (not b!95873) (not bm!9682) (not b!95733) (not b_next!2403) (not b!95885) (not d!25269) (not d!25267) (not d!25279) (not bm!9665))
(check-sat b_and!5857 b_and!5859 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25287 () Bool)

(declare-fun lt!47780 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!100 (List!1559) (InoxSet (_ BitVec 64)))

(assert (=> d!25287 (= lt!47780 (select (content!100 Nil!1556) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun e!62574 () Bool)

(assert (=> d!25287 (= lt!47780 e!62574)))

(declare-fun res!48428 () Bool)

(assert (=> d!25287 (=> (not res!48428) (not e!62574))))

(assert (=> d!25287 (= res!48428 ((_ is Cons!1555) Nil!1556))))

(assert (=> d!25287 (= (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!47780)))

(declare-fun b!95916 () Bool)

(declare-fun e!62573 () Bool)

(assert (=> b!95916 (= e!62574 e!62573)))

(declare-fun res!48429 () Bool)

(assert (=> b!95916 (=> res!48429 e!62573)))

(assert (=> b!95916 (= res!48429 (= (h!2148 Nil!1556) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!95917 () Bool)

(assert (=> b!95917 (= e!62573 (contains!784 (t!5473 Nil!1556) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25287 res!48428) b!95916))

(assert (= (and b!95916 (not res!48429)) b!95917))

(declare-fun m!103911 () Bool)

(assert (=> d!25287 m!103911))

(assert (=> d!25287 m!103635))

(declare-fun m!103913 () Bool)

(assert (=> d!25287 m!103913))

(assert (=> b!95917 m!103635))

(declare-fun m!103915 () Bool)

(assert (=> b!95917 m!103915))

(assert (=> b!95901 d!25287))

(declare-fun d!25289 () Bool)

(declare-fun res!48430 () Bool)

(declare-fun e!62575 () Bool)

(assert (=> d!25289 (=> res!48430 e!62575)))

(assert (=> d!25289 (= res!48430 (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25289 (= (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!62575)))

(declare-fun b!95918 () Bool)

(declare-fun e!62576 () Bool)

(assert (=> b!95918 (= e!62575 e!62576)))

(declare-fun res!48431 () Bool)

(assert (=> b!95918 (=> (not res!48431) (not e!62576))))

(assert (=> b!95918 (= res!48431 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!95919 () Bool)

(assert (=> b!95919 (= e!62576 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25289 (not res!48430)) b!95918))

(assert (= (and b!95918 res!48431) b!95919))

(declare-fun m!103917 () Bool)

(assert (=> d!25289 m!103917))

(assert (=> b!95919 m!103635))

(declare-fun m!103919 () Bool)

(assert (=> b!95919 m!103919))

(assert (=> b!95880 d!25289))

(declare-fun d!25291 () Bool)

(declare-fun res!48432 () Bool)

(declare-fun e!62579 () Bool)

(assert (=> d!25291 (=> res!48432 e!62579)))

(assert (=> d!25291 (= res!48432 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25291 (= (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) e!62579)))

(declare-fun b!95920 () Bool)

(declare-fun e!62580 () Bool)

(declare-fun call!9691 () Bool)

(assert (=> b!95920 (= e!62580 call!9691)))

(declare-fun b!95921 () Bool)

(declare-fun e!62577 () Bool)

(assert (=> b!95921 (= e!62579 e!62577)))

(declare-fun res!48434 () Bool)

(assert (=> b!95921 (=> (not res!48434) (not e!62577))))

(declare-fun e!62578 () Bool)

(assert (=> b!95921 (= res!48434 (not e!62578))))

(declare-fun res!48433 () Bool)

(assert (=> b!95921 (=> (not res!48433) (not e!62578))))

(assert (=> b!95921 (= res!48433 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!95922 () Bool)

(assert (=> b!95922 (= e!62580 call!9691)))

(declare-fun bm!9688 () Bool)

(declare-fun c!16131 () Bool)

(assert (=> bm!9688 (= call!9691 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16131 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556))))))

(declare-fun b!95923 () Bool)

(assert (=> b!95923 (= e!62577 e!62580)))

(assert (=> b!95923 (= c!16131 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!95924 () Bool)

(assert (=> b!95924 (= e!62578 (contains!784 (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25291 (not res!48432)) b!95921))

(assert (= (and b!95921 res!48433) b!95924))

(assert (= (and b!95921 res!48434) b!95923))

(assert (= (and b!95923 c!16131) b!95920))

(assert (= (and b!95923 (not c!16131)) b!95922))

(assert (= (or b!95920 b!95922) bm!9688))

(declare-fun m!103921 () Bool)

(assert (=> b!95921 m!103921))

(assert (=> b!95921 m!103921))

(declare-fun m!103923 () Bool)

(assert (=> b!95921 m!103923))

(assert (=> bm!9688 m!103921))

(declare-fun m!103925 () Bool)

(assert (=> bm!9688 m!103925))

(assert (=> b!95923 m!103921))

(assert (=> b!95923 m!103921))

(assert (=> b!95923 m!103923))

(assert (=> b!95924 m!103921))

(assert (=> b!95924 m!103921))

(declare-fun m!103927 () Bool)

(assert (=> b!95924 m!103927))

(assert (=> bm!9687 d!25291))

(declare-fun d!25293 () Bool)

(assert (=> d!25293 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47783 () Unit!2849)

(declare-fun choose!581 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2849)

(assert (=> d!25293 (= lt!47783 (choose!581 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47743 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25293 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25293 (= (lemmaChangeZeroKeyThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47743 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)) lt!47783)))

(declare-fun bs!3946 () Bool)

(assert (= bs!3946 d!25293))

(assert (=> bs!3946 m!103633))

(declare-fun m!103929 () Bool)

(assert (=> bs!3946 m!103929))

(assert (=> bs!3946 m!103633))

(declare-fun m!103931 () Bool)

(assert (=> bs!3946 m!103931))

(declare-fun m!103933 () Bool)

(assert (=> bs!3946 m!103933))

(assert (=> bs!3946 m!103769))

(assert (=> bs!3946 m!103769))

(declare-fun m!103935 () Bool)

(assert (=> bs!3946 m!103935))

(assert (=> b!95855 d!25293))

(declare-fun d!25295 () Bool)

(declare-fun get!1281 (Option!156) V!3137)

(assert (=> d!25295 (= (apply!91 lt!47659 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1281 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3947 () Bool)

(assert (= bs!3947 d!25295))

(assert (=> bs!3947 m!103777))

(declare-fun m!103937 () Bool)

(assert (=> bs!3947 m!103937))

(assert (=> bs!3947 m!103937))

(declare-fun m!103939 () Bool)

(assert (=> bs!3947 m!103939))

(assert (=> b!95733 d!25295))

(declare-fun d!25297 () Bool)

(declare-fun c!16132 () Bool)

(assert (=> d!25297 (= c!16132 ((_ is ValueCellFull!965) (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!62581 () V!3137)

(assert (=> d!25297 (= (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62581)))

(declare-fun b!95925 () Bool)

(assert (=> b!95925 (= e!62581 (get!1279 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95926 () Bool)

(assert (=> b!95926 (= e!62581 (get!1280 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25297 c!16132) b!95925))

(assert (= (and d!25297 (not c!16132)) b!95926))

(assert (=> b!95925 m!103773))

(assert (=> b!95925 m!103631))

(declare-fun m!103941 () Bool)

(assert (=> b!95925 m!103941))

(assert (=> b!95926 m!103773))

(assert (=> b!95926 m!103631))

(declare-fun m!103943 () Bool)

(assert (=> b!95926 m!103943))

(assert (=> b!95733 d!25297))

(declare-fun b!95927 () Bool)

(declare-fun e!62594 () Bool)

(assert (=> b!95927 (= e!62594 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95928 () Bool)

(declare-fun e!62582 () ListLongMap!1493)

(declare-fun call!9697 () ListLongMap!1493)

(assert (=> b!95928 (= e!62582 call!9697)))

(declare-fun b!95929 () Bool)

(declare-fun e!62593 () Bool)

(assert (=> b!95929 (= e!62593 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95930 () Bool)

(declare-fun e!62588 () Bool)

(declare-fun e!62592 () Bool)

(assert (=> b!95930 (= e!62588 e!62592)))

(declare-fun res!48437 () Bool)

(assert (=> b!95930 (=> (not res!48437) (not e!62592))))

(declare-fun lt!47789 () ListLongMap!1493)

(assert (=> b!95930 (= res!48437 (contains!783 lt!47789 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95930 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!95931 () Bool)

(declare-fun e!62590 () ListLongMap!1493)

(assert (=> b!95931 (= e!62590 call!9697)))

(declare-fun b!95932 () Bool)

(declare-fun e!62583 () Bool)

(declare-fun e!62586 () Bool)

(assert (=> b!95932 (= e!62583 e!62586)))

(declare-fun res!48443 () Bool)

(declare-fun call!9695 () Bool)

(assert (=> b!95932 (= res!48443 call!9695)))

(assert (=> b!95932 (=> (not res!48443) (not e!62586))))

(declare-fun b!95933 () Bool)

(declare-fun res!48441 () Bool)

(declare-fun e!62585 () Bool)

(assert (=> b!95933 (=> (not res!48441) (not e!62585))))

(declare-fun e!62584 () Bool)

(assert (=> b!95933 (= res!48441 e!62584)))

(declare-fun c!16138 () Bool)

(assert (=> b!95933 (= c!16138 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95935 () Bool)

(declare-fun res!48439 () Bool)

(assert (=> b!95935 (=> (not res!48439) (not e!62585))))

(assert (=> b!95935 (= res!48439 e!62588)))

(declare-fun res!48440 () Bool)

(assert (=> b!95935 (=> res!48440 e!62588)))

(assert (=> b!95935 (= res!48440 (not e!62594))))

(declare-fun res!48435 () Bool)

(assert (=> b!95935 (=> (not res!48435) (not e!62594))))

(assert (=> b!95935 (= res!48435 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!95936 () Bool)

(declare-fun e!62589 () Bool)

(assert (=> b!95936 (= e!62589 (= (apply!91 lt!47789 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9689 () Bool)

(declare-fun call!9692 () ListLongMap!1493)

(declare-fun call!9694 () ListLongMap!1493)

(assert (=> bm!9689 (= call!9692 call!9694)))

(declare-fun b!95937 () Bool)

(assert (=> b!95937 (= e!62584 e!62589)))

(declare-fun res!48436 () Bool)

(declare-fun call!9693 () Bool)

(assert (=> b!95937 (= res!48436 call!9693)))

(assert (=> b!95937 (=> (not res!48436) (not e!62589))))

(declare-fun b!95938 () Bool)

(declare-fun e!62591 () Unit!2849)

(declare-fun Unit!2860 () Unit!2849)

(assert (=> b!95938 (= e!62591 Unit!2860)))

(declare-fun b!95939 () Bool)

(declare-fun e!62587 () ListLongMap!1493)

(assert (=> b!95939 (= e!62587 e!62582)))

(declare-fun c!16137 () Bool)

(assert (=> b!95939 (= c!16137 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9690 () Bool)

(assert (=> bm!9690 (= call!9695 (contains!783 lt!47789 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95940 () Bool)

(declare-fun c!16133 () Bool)

(assert (=> b!95940 (= c!16133 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95940 (= e!62582 e!62590)))

(declare-fun call!9696 () ListLongMap!1493)

(declare-fun c!16134 () Bool)

(declare-fun call!9698 () ListLongMap!1493)

(declare-fun bm!9691 () Bool)

(assert (=> bm!9691 (= call!9696 (+!129 (ite c!16134 call!9698 (ite c!16137 call!9694 call!9692)) (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!95934 () Bool)

(assert (=> b!95934 (= e!62584 (not call!9693))))

(declare-fun d!25299 () Bool)

(assert (=> d!25299 e!62585))

(declare-fun res!48438 () Bool)

(assert (=> d!25299 (=> (not res!48438) (not e!62585))))

(assert (=> d!25299 (= res!48438 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!47804 () ListLongMap!1493)

(assert (=> d!25299 (= lt!47789 lt!47804)))

(declare-fun lt!47787 () Unit!2849)

(assert (=> d!25299 (= lt!47787 e!62591)))

(declare-fun c!16136 () Bool)

(assert (=> d!25299 (= c!16136 e!62593)))

(declare-fun res!48442 () Bool)

(assert (=> d!25299 (=> (not res!48442) (not e!62593))))

(assert (=> d!25299 (= res!48442 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25299 (= lt!47804 e!62587)))

(assert (=> d!25299 (= c!16134 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25299 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25299 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!47789)))

(declare-fun bm!9692 () Bool)

(assert (=> bm!9692 (= call!9694 call!9698)))

(declare-fun bm!9693 () Bool)

(assert (=> bm!9693 (= call!9698 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95941 () Bool)

(assert (=> b!95941 (= e!62585 e!62583)))

(declare-fun c!16135 () Bool)

(assert (=> b!95941 (= c!16135 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95942 () Bool)

(assert (=> b!95942 (= e!62586 (= (apply!91 lt!47789 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!95943 () Bool)

(declare-fun lt!47805 () Unit!2849)

(assert (=> b!95943 (= e!62591 lt!47805)))

(declare-fun lt!47784 () ListLongMap!1493)

(assert (=> b!95943 (= lt!47784 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47798 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47798 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47790 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47790 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47796 () Unit!2849)

(assert (=> b!95943 (= lt!47796 (addStillContains!67 lt!47784 lt!47798 (zeroValue!2341 newMap!16) lt!47790))))

(assert (=> b!95943 (contains!783 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) lt!47790)))

(declare-fun lt!47800 () Unit!2849)

(assert (=> b!95943 (= lt!47800 lt!47796)))

(declare-fun lt!47801 () ListLongMap!1493)

(assert (=> b!95943 (= lt!47801 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47792 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47792 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47788 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47788 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47785 () Unit!2849)

(assert (=> b!95943 (= lt!47785 (addApplyDifferent!67 lt!47801 lt!47792 (minValue!2341 newMap!16) lt!47788))))

(assert (=> b!95943 (= (apply!91 (+!129 lt!47801 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) lt!47788) (apply!91 lt!47801 lt!47788))))

(declare-fun lt!47786 () Unit!2849)

(assert (=> b!95943 (= lt!47786 lt!47785)))

(declare-fun lt!47802 () ListLongMap!1493)

(assert (=> b!95943 (= lt!47802 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47795 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47795 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47803 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47803 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47791 () Unit!2849)

(assert (=> b!95943 (= lt!47791 (addApplyDifferent!67 lt!47802 lt!47795 (zeroValue!2341 newMap!16) lt!47803))))

(assert (=> b!95943 (= (apply!91 (+!129 lt!47802 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) lt!47803) (apply!91 lt!47802 lt!47803))))

(declare-fun lt!47797 () Unit!2849)

(assert (=> b!95943 (= lt!47797 lt!47791)))

(declare-fun lt!47794 () ListLongMap!1493)

(assert (=> b!95943 (= lt!47794 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47799 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47799 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47793 () (_ BitVec 64))

(assert (=> b!95943 (= lt!47793 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95943 (= lt!47805 (addApplyDifferent!67 lt!47794 lt!47799 (minValue!2341 newMap!16) lt!47793))))

(assert (=> b!95943 (= (apply!91 (+!129 lt!47794 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) lt!47793) (apply!91 lt!47794 lt!47793))))

(declare-fun bm!9694 () Bool)

(assert (=> bm!9694 (= call!9697 call!9696)))

(declare-fun b!95944 () Bool)

(assert (=> b!95944 (= e!62590 call!9692)))

(declare-fun bm!9695 () Bool)

(assert (=> bm!9695 (= call!9693 (contains!783 lt!47789 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95945 () Bool)

(assert (=> b!95945 (= e!62583 (not call!9695))))

(declare-fun b!95946 () Bool)

(assert (=> b!95946 (= e!62587 (+!129 call!9696 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!95947 () Bool)

(assert (=> b!95947 (= e!62592 (= (apply!91 lt!47789 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95947 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))))))))

(assert (=> b!95947 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25299 c!16134) b!95946))

(assert (= (and d!25299 (not c!16134)) b!95939))

(assert (= (and b!95939 c!16137) b!95928))

(assert (= (and b!95939 (not c!16137)) b!95940))

(assert (= (and b!95940 c!16133) b!95931))

(assert (= (and b!95940 (not c!16133)) b!95944))

(assert (= (or b!95931 b!95944) bm!9689))

(assert (= (or b!95928 bm!9689) bm!9692))

(assert (= (or b!95928 b!95931) bm!9694))

(assert (= (or b!95946 bm!9692) bm!9693))

(assert (= (or b!95946 bm!9694) bm!9691))

(assert (= (and d!25299 res!48442) b!95929))

(assert (= (and d!25299 c!16136) b!95943))

(assert (= (and d!25299 (not c!16136)) b!95938))

(assert (= (and d!25299 res!48438) b!95935))

(assert (= (and b!95935 res!48435) b!95927))

(assert (= (and b!95935 (not res!48440)) b!95930))

(assert (= (and b!95930 res!48437) b!95947))

(assert (= (and b!95935 res!48439) b!95933))

(assert (= (and b!95933 c!16138) b!95937))

(assert (= (and b!95933 (not c!16138)) b!95934))

(assert (= (and b!95937 res!48436) b!95936))

(assert (= (or b!95937 b!95934) bm!9695))

(assert (= (and b!95933 res!48441) b!95941))

(assert (= (and b!95941 c!16135) b!95932))

(assert (= (and b!95941 (not c!16135)) b!95945))

(assert (= (and b!95932 res!48443) b!95942))

(assert (= (or b!95932 b!95945) bm!9690))

(declare-fun b_lambda!4241 () Bool)

(assert (=> (not b_lambda!4241) (not b!95947)))

(declare-fun t!5484 () Bool)

(declare-fun tb!1893 () Bool)

(assert (=> (and b!95533 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16)) t!5484) tb!1893))

(declare-fun result!3225 () Bool)

(assert (=> tb!1893 (= result!3225 tp_is_empty!2617)))

(assert (=> b!95947 t!5484))

(declare-fun b_and!5861 () Bool)

(assert (= b_and!5857 (and (=> t!5484 result!3225) b_and!5861)))

(declare-fun t!5486 () Bool)

(declare-fun tb!1895 () Bool)

(assert (=> (and b!95536 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 newMap!16)) t!5486) tb!1895))

(declare-fun result!3227 () Bool)

(assert (= result!3227 result!3225))

(assert (=> b!95947 t!5486))

(declare-fun b_and!5863 () Bool)

(assert (= b_and!5859 (and (=> t!5486 result!3227) b_and!5863)))

(declare-fun m!103945 () Bool)

(assert (=> bm!9693 m!103945))

(declare-fun m!103947 () Bool)

(assert (=> b!95947 m!103947))

(declare-fun m!103949 () Bool)

(assert (=> b!95947 m!103949))

(declare-fun m!103951 () Bool)

(assert (=> b!95947 m!103951))

(declare-fun m!103953 () Bool)

(assert (=> b!95947 m!103953))

(assert (=> b!95947 m!103953))

(declare-fun m!103955 () Bool)

(assert (=> b!95947 m!103955))

(assert (=> b!95947 m!103947))

(assert (=> b!95947 m!103949))

(declare-fun m!103957 () Bool)

(assert (=> b!95946 m!103957))

(declare-fun m!103959 () Bool)

(assert (=> b!95943 m!103959))

(assert (=> b!95943 m!103945))

(declare-fun m!103961 () Bool)

(assert (=> b!95943 m!103961))

(declare-fun m!103963 () Bool)

(assert (=> b!95943 m!103963))

(declare-fun m!103965 () Bool)

(assert (=> b!95943 m!103965))

(declare-fun m!103967 () Bool)

(assert (=> b!95943 m!103967))

(declare-fun m!103969 () Bool)

(assert (=> b!95943 m!103969))

(declare-fun m!103971 () Bool)

(assert (=> b!95943 m!103971))

(declare-fun m!103973 () Bool)

(assert (=> b!95943 m!103973))

(declare-fun m!103975 () Bool)

(assert (=> b!95943 m!103975))

(declare-fun m!103977 () Bool)

(assert (=> b!95943 m!103977))

(declare-fun m!103979 () Bool)

(assert (=> b!95943 m!103979))

(assert (=> b!95943 m!103953))

(assert (=> b!95943 m!103965))

(assert (=> b!95943 m!103969))

(declare-fun m!103981 () Bool)

(assert (=> b!95943 m!103981))

(declare-fun m!103983 () Bool)

(assert (=> b!95943 m!103983))

(assert (=> b!95943 m!103981))

(declare-fun m!103985 () Bool)

(assert (=> b!95943 m!103985))

(declare-fun m!103987 () Bool)

(assert (=> b!95943 m!103987))

(assert (=> b!95943 m!103973))

(assert (=> b!95929 m!103953))

(assert (=> b!95929 m!103953))

(declare-fun m!103989 () Bool)

(assert (=> b!95929 m!103989))

(declare-fun m!103991 () Bool)

(assert (=> b!95936 m!103991))

(declare-fun m!103993 () Bool)

(assert (=> bm!9691 m!103993))

(declare-fun m!103995 () Bool)

(assert (=> b!95942 m!103995))

(assert (=> b!95930 m!103953))

(assert (=> b!95930 m!103953))

(declare-fun m!103997 () Bool)

(assert (=> b!95930 m!103997))

(assert (=> b!95927 m!103953))

(assert (=> b!95927 m!103953))

(assert (=> b!95927 m!103989))

(assert (=> d!25299 m!103933))

(declare-fun m!103999 () Bool)

(assert (=> bm!9690 m!103999))

(declare-fun m!104001 () Bool)

(assert (=> bm!9695 m!104001))

(assert (=> bm!9674 d!25299))

(declare-fun d!25301 () Bool)

(assert (=> d!25301 (= (inRange!0 (ite c!16114 (ite c!16112 (index!3127 lt!47757) (ite c!16108 (index!3126 lt!47763) (index!3129 lt!47763))) (ite c!16116 (index!3127 lt!47765) (ite c!16113 (index!3126 lt!47756) (index!3129 lt!47756)))) (mask!6541 newMap!16)) (and (bvsge (ite c!16114 (ite c!16112 (index!3127 lt!47757) (ite c!16108 (index!3126 lt!47763) (index!3129 lt!47763))) (ite c!16116 (index!3127 lt!47765) (ite c!16113 (index!3126 lt!47756) (index!3129 lt!47756)))) #b00000000000000000000000000000000) (bvslt (ite c!16114 (ite c!16112 (index!3127 lt!47757) (ite c!16108 (index!3126 lt!47763) (index!3129 lt!47763))) (ite c!16116 (index!3127 lt!47765) (ite c!16113 (index!3126 lt!47756) (index!3129 lt!47756)))) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9666 d!25301))

(declare-fun d!25303 () Bool)

(declare-fun e!62597 () Bool)

(assert (=> d!25303 e!62597))

(declare-fun c!16141 () Bool)

(assert (=> d!25303 (= c!16141 (and (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!25303 true))

(declare-fun _$29!123 () Unit!2849)

(assert (=> d!25303 (= (choose!580 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) _$29!123)))

(declare-fun b!95952 () Bool)

(assert (=> b!95952 (= e!62597 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!95953 () Bool)

(assert (=> b!95953 (= e!62597 (ite (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!25303 c!16141) b!95952))

(assert (= (and d!25303 (not c!16141)) b!95953))

(assert (=> b!95952 m!103635))

(assert (=> b!95952 m!103653))

(assert (=> d!25283 d!25303))

(assert (=> d!25283 d!25261))

(declare-fun d!25305 () Bool)

(declare-fun e!62598 () Bool)

(assert (=> d!25305 e!62598))

(declare-fun res!48444 () Bool)

(assert (=> d!25305 (=> res!48444 e!62598)))

(declare-fun lt!47808 () Bool)

(assert (=> d!25305 (= res!48444 (not lt!47808))))

(declare-fun lt!47809 () Bool)

(assert (=> d!25305 (= lt!47808 lt!47809)))

(declare-fun lt!47807 () Unit!2849)

(declare-fun e!62599 () Unit!2849)

(assert (=> d!25305 (= lt!47807 e!62599)))

(declare-fun c!16142 () Bool)

(assert (=> d!25305 (= c!16142 lt!47809)))

(assert (=> d!25305 (= lt!47809 (containsKey!153 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25305 (= (contains!783 lt!47659 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47808)))

(declare-fun b!95954 () Bool)

(declare-fun lt!47806 () Unit!2849)

(assert (=> b!95954 (= e!62599 lt!47806)))

(assert (=> b!95954 (= lt!47806 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95954 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95955 () Bool)

(declare-fun Unit!2861 () Unit!2849)

(assert (=> b!95955 (= e!62599 Unit!2861)))

(declare-fun b!95956 () Bool)

(assert (=> b!95956 (= e!62598 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25305 c!16142) b!95954))

(assert (= (and d!25305 (not c!16142)) b!95955))

(assert (= (and d!25305 (not res!48444)) b!95956))

(declare-fun m!104003 () Bool)

(assert (=> d!25305 m!104003))

(declare-fun m!104005 () Bool)

(assert (=> b!95954 m!104005))

(declare-fun m!104007 () Bool)

(assert (=> b!95954 m!104007))

(assert (=> b!95954 m!104007))

(declare-fun m!104009 () Bool)

(assert (=> b!95954 m!104009))

(assert (=> b!95956 m!104007))

(assert (=> b!95956 m!104007))

(assert (=> b!95956 m!104009))

(assert (=> bm!9607 d!25305))

(declare-fun b!95965 () Bool)

(declare-fun e!62604 () (_ BitVec 32))

(declare-fun e!62605 () (_ BitVec 32))

(assert (=> b!95965 (= e!62604 e!62605)))

(declare-fun c!16147 () Bool)

(assert (=> b!95965 (= c!16147 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9698 () Bool)

(declare-fun call!9701 () (_ BitVec 32))

(assert (=> bm!9698 (= call!9701 (arrayCountValidKeys!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!95966 () Bool)

(assert (=> b!95966 (= e!62605 call!9701)))

(declare-fun b!95967 () Bool)

(assert (=> b!95967 (= e!62605 (bvadd #b00000000000000000000000000000001 call!9701))))

(declare-fun b!95968 () Bool)

(assert (=> b!95968 (= e!62604 #b00000000000000000000000000000000)))

(declare-fun d!25307 () Bool)

(declare-fun lt!47812 () (_ BitVec 32))

(assert (=> d!25307 (and (bvsge lt!47812 #b00000000000000000000000000000000) (bvsle lt!47812 (bvsub (size!2243 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25307 (= lt!47812 e!62604)))

(declare-fun c!16148 () Bool)

(assert (=> d!25307 (= c!16148 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25307 (and (bvsle #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2243 (_keys!4142 newMap!16)) (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25307 (= (arrayCountValidKeys!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) lt!47812)))

(assert (= (and d!25307 c!16148) b!95968))

(assert (= (and d!25307 (not c!16148)) b!95965))

(assert (= (and b!95965 c!16147) b!95967))

(assert (= (and b!95965 (not c!16147)) b!95966))

(assert (= (or b!95967 b!95966) bm!9698))

(assert (=> b!95965 m!103953))

(assert (=> b!95965 m!103953))

(assert (=> b!95965 m!103989))

(declare-fun m!104011 () Bool)

(assert (=> bm!9698 m!104011))

(assert (=> b!95668 d!25307))

(declare-fun d!25309 () Bool)

(declare-fun res!48445 () Bool)

(declare-fun e!62606 () Bool)

(assert (=> d!25309 (=> (not res!48445) (not e!62606))))

(assert (=> d!25309 (= res!48445 (simpleValid!67 (_2!1155 lt!47762)))))

(assert (=> d!25309 (= (valid!387 (_2!1155 lt!47762)) e!62606)))

(declare-fun b!95969 () Bool)

(declare-fun res!48446 () Bool)

(assert (=> b!95969 (=> (not res!48446) (not e!62606))))

(assert (=> b!95969 (= res!48446 (= (arrayCountValidKeys!0 (_keys!4142 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))) (_size!468 (_2!1155 lt!47762))))))

(declare-fun b!95970 () Bool)

(declare-fun res!48447 () Bool)

(assert (=> b!95970 (=> (not res!48447) (not e!62606))))

(assert (=> b!95970 (= res!48447 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762))))))

(declare-fun b!95971 () Bool)

(assert (=> b!95971 (= e!62606 (arrayNoDuplicates!0 (_keys!4142 (_2!1155 lt!47762)) #b00000000000000000000000000000000 Nil!1556))))

(assert (= (and d!25309 res!48445) b!95969))

(assert (= (and b!95969 res!48446) b!95970))

(assert (= (and b!95970 res!48447) b!95971))

(declare-fun m!104013 () Bool)

(assert (=> d!25309 m!104013))

(declare-fun m!104015 () Bool)

(assert (=> b!95969 m!104015))

(declare-fun m!104017 () Bool)

(assert (=> b!95970 m!104017))

(declare-fun m!104019 () Bool)

(assert (=> b!95971 m!104019))

(assert (=> d!25269 d!25309))

(assert (=> d!25269 d!25259))

(declare-fun b!95972 () Bool)

(declare-fun e!62619 () Bool)

(assert (=> b!95972 (= e!62619 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95973 () Bool)

(declare-fun e!62607 () ListLongMap!1493)

(declare-fun call!9707 () ListLongMap!1493)

(assert (=> b!95973 (= e!62607 call!9707)))

(declare-fun b!95974 () Bool)

(declare-fun e!62618 () Bool)

(assert (=> b!95974 (= e!62618 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95975 () Bool)

(declare-fun e!62613 () Bool)

(declare-fun e!62617 () Bool)

(assert (=> b!95975 (= e!62613 e!62617)))

(declare-fun res!48450 () Bool)

(assert (=> b!95975 (=> (not res!48450) (not e!62617))))

(declare-fun lt!47818 () ListLongMap!1493)

(assert (=> b!95975 (= res!48450 (contains!783 lt!47818 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95975 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!95976 () Bool)

(declare-fun e!62615 () ListLongMap!1493)

(assert (=> b!95976 (= e!62615 call!9707)))

(declare-fun b!95977 () Bool)

(declare-fun e!62608 () Bool)

(declare-fun e!62611 () Bool)

(assert (=> b!95977 (= e!62608 e!62611)))

(declare-fun res!48456 () Bool)

(declare-fun call!9705 () Bool)

(assert (=> b!95977 (= res!48456 call!9705)))

(assert (=> b!95977 (=> (not res!48456) (not e!62611))))

(declare-fun b!95978 () Bool)

(declare-fun res!48454 () Bool)

(declare-fun e!62610 () Bool)

(assert (=> b!95978 (=> (not res!48454) (not e!62610))))

(declare-fun e!62609 () Bool)

(assert (=> b!95978 (= res!48454 e!62609)))

(declare-fun c!16154 () Bool)

(assert (=> b!95978 (= c!16154 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!95980 () Bool)

(declare-fun res!48452 () Bool)

(assert (=> b!95980 (=> (not res!48452) (not e!62610))))

(assert (=> b!95980 (= res!48452 e!62613)))

(declare-fun res!48453 () Bool)

(assert (=> b!95980 (=> res!48453 e!62613)))

(assert (=> b!95980 (= res!48453 (not e!62619))))

(declare-fun res!48448 () Bool)

(assert (=> b!95980 (=> (not res!48448) (not e!62619))))

(assert (=> b!95980 (= res!48448 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!95981 () Bool)

(declare-fun e!62614 () Bool)

(assert (=> b!95981 (= e!62614 (= (apply!91 lt!47818 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9699 () Bool)

(declare-fun call!9702 () ListLongMap!1493)

(declare-fun call!9704 () ListLongMap!1493)

(assert (=> bm!9699 (= call!9702 call!9704)))

(declare-fun b!95982 () Bool)

(assert (=> b!95982 (= e!62609 e!62614)))

(declare-fun res!48449 () Bool)

(declare-fun call!9703 () Bool)

(assert (=> b!95982 (= res!48449 call!9703)))

(assert (=> b!95982 (=> (not res!48449) (not e!62614))))

(declare-fun b!95983 () Bool)

(declare-fun e!62616 () Unit!2849)

(declare-fun Unit!2862 () Unit!2849)

(assert (=> b!95983 (= e!62616 Unit!2862)))

(declare-fun b!95984 () Bool)

(declare-fun e!62612 () ListLongMap!1493)

(assert (=> b!95984 (= e!62612 e!62607)))

(declare-fun c!16153 () Bool)

(assert (=> b!95984 (= c!16153 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9700 () Bool)

(assert (=> bm!9700 (= call!9705 (contains!783 lt!47818 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95985 () Bool)

(declare-fun c!16149 () Bool)

(assert (=> b!95985 (= c!16149 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95985 (= e!62607 e!62615)))

(declare-fun c!16150 () Bool)

(declare-fun call!9706 () ListLongMap!1493)

(declare-fun bm!9701 () Bool)

(declare-fun call!9708 () ListLongMap!1493)

(assert (=> bm!9701 (= call!9706 (+!129 (ite c!16150 call!9708 (ite c!16153 call!9704 call!9702)) (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!95979 () Bool)

(assert (=> b!95979 (= e!62609 (not call!9703))))

(declare-fun d!25311 () Bool)

(assert (=> d!25311 e!62610))

(declare-fun res!48451 () Bool)

(assert (=> d!25311 (=> (not res!48451) (not e!62610))))

(assert (=> d!25311 (= res!48451 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!47833 () ListLongMap!1493)

(assert (=> d!25311 (= lt!47818 lt!47833)))

(declare-fun lt!47816 () Unit!2849)

(assert (=> d!25311 (= lt!47816 e!62616)))

(declare-fun c!16152 () Bool)

(assert (=> d!25311 (= c!16152 e!62618)))

(declare-fun res!48455 () Bool)

(assert (=> d!25311 (=> (not res!48455) (not e!62618))))

(assert (=> d!25311 (= res!48455 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25311 (= lt!47833 e!62612)))

(assert (=> d!25311 (= c!16150 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25311 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25311 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!47818)))

(declare-fun bm!9702 () Bool)

(assert (=> bm!9702 (= call!9704 call!9708)))

(declare-fun bm!9703 () Bool)

(assert (=> bm!9703 (= call!9708 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!95986 () Bool)

(assert (=> b!95986 (= e!62610 e!62608)))

(declare-fun c!16151 () Bool)

(assert (=> b!95986 (= c!16151 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95987 () Bool)

(assert (=> b!95987 (= e!62611 (= (apply!91 lt!47818 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!95988 () Bool)

(declare-fun lt!47834 () Unit!2849)

(assert (=> b!95988 (= e!62616 lt!47834)))

(declare-fun lt!47813 () ListLongMap!1493)

(assert (=> b!95988 (= lt!47813 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47827 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47827 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47819 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47819 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47825 () Unit!2849)

(assert (=> b!95988 (= lt!47825 (addStillContains!67 lt!47813 lt!47827 (zeroValue!2341 newMap!16) lt!47819))))

(assert (=> b!95988 (contains!783 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) lt!47819)))

(declare-fun lt!47829 () Unit!2849)

(assert (=> b!95988 (= lt!47829 lt!47825)))

(declare-fun lt!47830 () ListLongMap!1493)

(assert (=> b!95988 (= lt!47830 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47821 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47821 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47817 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47817 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47814 () Unit!2849)

(assert (=> b!95988 (= lt!47814 (addApplyDifferent!67 lt!47830 lt!47821 (minValue!2341 newMap!16) lt!47817))))

(assert (=> b!95988 (= (apply!91 (+!129 lt!47830 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) lt!47817) (apply!91 lt!47830 lt!47817))))

(declare-fun lt!47815 () Unit!2849)

(assert (=> b!95988 (= lt!47815 lt!47814)))

(declare-fun lt!47831 () ListLongMap!1493)

(assert (=> b!95988 (= lt!47831 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47824 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47824 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47832 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47832 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47820 () Unit!2849)

(assert (=> b!95988 (= lt!47820 (addApplyDifferent!67 lt!47831 lt!47824 (zeroValue!2341 newMap!16) lt!47832))))

(assert (=> b!95988 (= (apply!91 (+!129 lt!47831 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) lt!47832) (apply!91 lt!47831 lt!47832))))

(declare-fun lt!47826 () Unit!2849)

(assert (=> b!95988 (= lt!47826 lt!47820)))

(declare-fun lt!47823 () ListLongMap!1493)

(assert (=> b!95988 (= lt!47823 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47828 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47828 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47822 () (_ BitVec 64))

(assert (=> b!95988 (= lt!47822 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95988 (= lt!47834 (addApplyDifferent!67 lt!47823 lt!47828 (minValue!2341 newMap!16) lt!47822))))

(assert (=> b!95988 (= (apply!91 (+!129 lt!47823 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) lt!47822) (apply!91 lt!47823 lt!47822))))

(declare-fun bm!9704 () Bool)

(assert (=> bm!9704 (= call!9707 call!9706)))

(declare-fun b!95989 () Bool)

(assert (=> b!95989 (= e!62615 call!9702)))

(declare-fun bm!9705 () Bool)

(assert (=> bm!9705 (= call!9703 (contains!783 lt!47818 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95990 () Bool)

(assert (=> b!95990 (= e!62608 (not call!9705))))

(declare-fun b!95991 () Bool)

(assert (=> b!95991 (= e!62612 (+!129 call!9706 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!95992 () Bool)

(assert (=> b!95992 (= e!62617 (= (apply!91 lt!47818 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_values!2439 newMap!16))))))

(assert (=> b!95992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25311 c!16150) b!95991))

(assert (= (and d!25311 (not c!16150)) b!95984))

(assert (= (and b!95984 c!16153) b!95973))

(assert (= (and b!95984 (not c!16153)) b!95985))

(assert (= (and b!95985 c!16149) b!95976))

(assert (= (and b!95985 (not c!16149)) b!95989))

(assert (= (or b!95976 b!95989) bm!9699))

(assert (= (or b!95973 bm!9699) bm!9702))

(assert (= (or b!95973 b!95976) bm!9704))

(assert (= (or b!95991 bm!9702) bm!9703))

(assert (= (or b!95991 bm!9704) bm!9701))

(assert (= (and d!25311 res!48455) b!95974))

(assert (= (and d!25311 c!16152) b!95988))

(assert (= (and d!25311 (not c!16152)) b!95983))

(assert (= (and d!25311 res!48451) b!95980))

(assert (= (and b!95980 res!48448) b!95972))

(assert (= (and b!95980 (not res!48453)) b!95975))

(assert (= (and b!95975 res!48450) b!95992))

(assert (= (and b!95980 res!48452) b!95978))

(assert (= (and b!95978 c!16154) b!95982))

(assert (= (and b!95978 (not c!16154)) b!95979))

(assert (= (and b!95982 res!48449) b!95981))

(assert (= (or b!95982 b!95979) bm!9705))

(assert (= (and b!95978 res!48454) b!95986))

(assert (= (and b!95986 c!16151) b!95977))

(assert (= (and b!95986 (not c!16151)) b!95990))

(assert (= (and b!95977 res!48456) b!95987))

(assert (= (or b!95977 b!95990) bm!9700))

(declare-fun b_lambda!4243 () Bool)

(assert (=> (not b_lambda!4243) (not b!95992)))

(assert (=> b!95992 t!5484))

(declare-fun b_and!5865 () Bool)

(assert (= b_and!5861 (and (=> t!5484 result!3225) b_and!5865)))

(assert (=> b!95992 t!5486))

(declare-fun b_and!5867 () Bool)

(assert (= b_and!5863 (and (=> t!5486 result!3227) b_and!5867)))

(declare-fun m!104021 () Bool)

(assert (=> bm!9703 m!104021))

(declare-fun m!104023 () Bool)

(assert (=> b!95992 m!104023))

(assert (=> b!95992 m!103949))

(declare-fun m!104025 () Bool)

(assert (=> b!95992 m!104025))

(assert (=> b!95992 m!103953))

(assert (=> b!95992 m!103953))

(declare-fun m!104027 () Bool)

(assert (=> b!95992 m!104027))

(assert (=> b!95992 m!104023))

(assert (=> b!95992 m!103949))

(declare-fun m!104029 () Bool)

(assert (=> b!95991 m!104029))

(declare-fun m!104031 () Bool)

(assert (=> b!95988 m!104031))

(assert (=> b!95988 m!104021))

(declare-fun m!104033 () Bool)

(assert (=> b!95988 m!104033))

(declare-fun m!104035 () Bool)

(assert (=> b!95988 m!104035))

(declare-fun m!104037 () Bool)

(assert (=> b!95988 m!104037))

(declare-fun m!104039 () Bool)

(assert (=> b!95988 m!104039))

(declare-fun m!104041 () Bool)

(assert (=> b!95988 m!104041))

(declare-fun m!104043 () Bool)

(assert (=> b!95988 m!104043))

(declare-fun m!104045 () Bool)

(assert (=> b!95988 m!104045))

(declare-fun m!104047 () Bool)

(assert (=> b!95988 m!104047))

(declare-fun m!104049 () Bool)

(assert (=> b!95988 m!104049))

(declare-fun m!104051 () Bool)

(assert (=> b!95988 m!104051))

(assert (=> b!95988 m!103953))

(assert (=> b!95988 m!104037))

(assert (=> b!95988 m!104041))

(declare-fun m!104053 () Bool)

(assert (=> b!95988 m!104053))

(declare-fun m!104055 () Bool)

(assert (=> b!95988 m!104055))

(assert (=> b!95988 m!104053))

(declare-fun m!104057 () Bool)

(assert (=> b!95988 m!104057))

(declare-fun m!104059 () Bool)

(assert (=> b!95988 m!104059))

(assert (=> b!95988 m!104045))

(assert (=> b!95974 m!103953))

(assert (=> b!95974 m!103953))

(assert (=> b!95974 m!103989))

(declare-fun m!104061 () Bool)

(assert (=> b!95981 m!104061))

(declare-fun m!104063 () Bool)

(assert (=> bm!9701 m!104063))

(declare-fun m!104065 () Bool)

(assert (=> b!95987 m!104065))

(assert (=> b!95975 m!103953))

(assert (=> b!95975 m!103953))

(declare-fun m!104067 () Bool)

(assert (=> b!95975 m!104067))

(assert (=> b!95972 m!103953))

(assert (=> b!95972 m!103953))

(assert (=> b!95972 m!103989))

(assert (=> d!25311 m!103933))

(declare-fun m!104069 () Bool)

(assert (=> bm!9700 m!104069))

(declare-fun m!104071 () Bool)

(assert (=> bm!9705 m!104071))

(assert (=> d!25263 d!25311))

(declare-fun d!25313 () Bool)

(declare-fun e!62622 () Bool)

(assert (=> d!25313 e!62622))

(declare-fun res!48459 () Bool)

(assert (=> d!25313 (=> (not res!48459) (not e!62622))))

(assert (=> d!25313 (= res!48459 (and (bvsge (index!3127 lt!47752) #b00000000000000000000000000000000) (bvslt (index!3127 lt!47752) (size!2243 (_keys!4142 newMap!16)))))))

(declare-fun lt!47837 () Unit!2849)

(declare-fun choose!582 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) Int) Unit!2849)

(assert (=> d!25313 (= lt!47837 (choose!582 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25313 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25313 (= (lemmaValidKeyInArrayIsInListMap!100 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (defaultEntry!2456 newMap!16)) lt!47837)))

(declare-fun b!95995 () Bool)

(assert (=> b!95995 (= e!62622 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))

(assert (= (and d!25313 res!48459) b!95995))

(declare-fun m!104073 () Bool)

(assert (=> d!25313 m!104073))

(assert (=> d!25313 m!103933))

(declare-fun m!104075 () Bool)

(assert (=> b!95995 m!104075))

(assert (=> b!95995 m!103877))

(assert (=> b!95995 m!104075))

(assert (=> b!95995 m!103877))

(declare-fun m!104077 () Bool)

(assert (=> b!95995 m!104077))

(assert (=> b!95859 d!25313))

(declare-fun d!25315 () Bool)

(declare-fun e!62625 () Bool)

(assert (=> d!25315 e!62625))

(declare-fun res!48462 () Bool)

(assert (=> d!25315 (=> (not res!48462) (not e!62625))))

(assert (=> d!25315 (= res!48462 (and (bvsge (index!3127 lt!47752) #b00000000000000000000000000000000) (bvslt (index!3127 lt!47752) (size!2244 (_values!2439 newMap!16)))))))

(declare-fun lt!47840 () Unit!2849)

(declare-fun choose!583 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2849)

(assert (=> d!25315 (= lt!47840 (choose!583 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25315 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25315 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!47840)))

(declare-fun b!95998 () Bool)

(assert (=> b!95998 (= e!62625 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))))

(assert (= (and d!25315 res!48462) b!95998))

(assert (=> d!25315 m!103635))

(assert (=> d!25315 m!103633))

(declare-fun m!104079 () Bool)

(assert (=> d!25315 m!104079))

(assert (=> d!25315 m!103933))

(assert (=> b!95998 m!103769))

(assert (=> b!95998 m!103769))

(declare-fun m!104081 () Bool)

(assert (=> b!95998 m!104081))

(assert (=> b!95998 m!103853))

(declare-fun m!104083 () Bool)

(assert (=> b!95998 m!104083))

(assert (=> b!95859 d!25315))

(declare-fun d!25317 () Bool)

(declare-fun e!62626 () Bool)

(assert (=> d!25317 e!62626))

(declare-fun res!48463 () Bool)

(assert (=> d!25317 (=> res!48463 e!62626)))

(declare-fun lt!47843 () Bool)

(assert (=> d!25317 (= res!48463 (not lt!47843))))

(declare-fun lt!47844 () Bool)

(assert (=> d!25317 (= lt!47843 lt!47844)))

(declare-fun lt!47842 () Unit!2849)

(declare-fun e!62627 () Unit!2849)

(assert (=> d!25317 (= lt!47842 e!62627)))

(declare-fun c!16155 () Bool)

(assert (=> d!25317 (= c!16155 lt!47844)))

(assert (=> d!25317 (= lt!47844 (containsKey!153 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25317 (= (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!47843)))

(declare-fun b!95999 () Bool)

(declare-fun lt!47841 () Unit!2849)

(assert (=> b!95999 (= e!62627 lt!47841)))

(assert (=> b!95999 (= lt!47841 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!95999 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96000 () Bool)

(declare-fun Unit!2863 () Unit!2849)

(assert (=> b!96000 (= e!62627 Unit!2863)))

(declare-fun b!96001 () Bool)

(assert (=> b!96001 (= e!62626 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (= (and d!25317 c!16155) b!95999))

(assert (= (and d!25317 (not c!16155)) b!96000))

(assert (= (and d!25317 (not res!48463)) b!96001))

(assert (=> d!25317 m!103635))

(declare-fun m!104085 () Bool)

(assert (=> d!25317 m!104085))

(assert (=> b!95999 m!103635))

(declare-fun m!104087 () Bool)

(assert (=> b!95999 m!104087))

(assert (=> b!95999 m!103635))

(declare-fun m!104089 () Bool)

(assert (=> b!95999 m!104089))

(assert (=> b!95999 m!104089))

(declare-fun m!104091 () Bool)

(assert (=> b!95999 m!104091))

(assert (=> b!96001 m!103635))

(assert (=> b!96001 m!104089))

(assert (=> b!96001 m!104089))

(assert (=> b!96001 m!104091))

(assert (=> b!95859 d!25317))

(assert (=> b!95859 d!25311))

(declare-fun d!25319 () Bool)

(assert (=> d!25319 (= (get!1279 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2779 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!95873 d!25319))

(assert (=> b!95865 d!25311))

(declare-fun d!25321 () Bool)

(assert (=> d!25321 (isDefined!102 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun lt!47847 () Unit!2849)

(declare-fun choose!584 (List!1558 (_ BitVec 64)) Unit!2849)

(assert (=> d!25321 (= lt!47847 (choose!584 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun e!62630 () Bool)

(assert (=> d!25321 e!62630))

(declare-fun res!48466 () Bool)

(assert (=> d!25321 (=> (not res!48466) (not e!62630))))

(declare-fun isStrictlySorted!290 (List!1558) Bool)

(assert (=> d!25321 (= res!48466 (isStrictlySorted!290 (toList!762 lt!47565)))))

(assert (=> d!25321 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!47847)))

(declare-fun b!96004 () Bool)

(assert (=> b!96004 (= e!62630 (containsKey!153 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25321 res!48466) b!96004))

(assert (=> d!25321 m!103635))

(assert (=> d!25321 m!103831))

(assert (=> d!25321 m!103831))

(assert (=> d!25321 m!103833))

(assert (=> d!25321 m!103635))

(declare-fun m!104093 () Bool)

(assert (=> d!25321 m!104093))

(declare-fun m!104095 () Bool)

(assert (=> d!25321 m!104095))

(assert (=> b!96004 m!103635))

(assert (=> b!96004 m!103827))

(assert (=> b!95740 d!25321))

(declare-fun d!25323 () Bool)

(declare-fun isEmpty!359 (Option!156) Bool)

(assert (=> d!25323 (= (isDefined!102 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) (not (isEmpty!359 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(declare-fun bs!3948 () Bool)

(assert (= bs!3948 d!25323))

(assert (=> bs!3948 m!103831))

(declare-fun m!104097 () Bool)

(assert (=> bs!3948 m!104097))

(assert (=> b!95740 d!25323))

(declare-fun e!62636 () Option!156)

(declare-fun b!96015 () Bool)

(assert (=> b!96015 (= e!62636 (getValueByKey!150 (t!5472 (toList!762 lt!47565)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96016 () Bool)

(assert (=> b!96016 (= e!62636 None!154)))

(declare-fun d!25325 () Bool)

(declare-fun c!16160 () Bool)

(assert (=> d!25325 (= c!16160 (and ((_ is Cons!1554) (toList!762 lt!47565)) (= (_1!1154 (h!2147 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun e!62635 () Option!156)

(assert (=> d!25325 (= (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!62635)))

(declare-fun b!96013 () Bool)

(assert (=> b!96013 (= e!62635 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47565)))))))

(declare-fun b!96014 () Bool)

(assert (=> b!96014 (= e!62635 e!62636)))

(declare-fun c!16161 () Bool)

(assert (=> b!96014 (= c!16161 (and ((_ is Cons!1554) (toList!762 lt!47565)) (not (= (_1!1154 (h!2147 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(assert (= (and d!25325 c!16160) b!96013))

(assert (= (and d!25325 (not c!16160)) b!96014))

(assert (= (and b!96014 c!16161) b!96015))

(assert (= (and b!96014 (not c!16161)) b!96016))

(assert (=> b!96015 m!103635))

(declare-fun m!104099 () Bool)

(assert (=> b!96015 m!104099))

(assert (=> b!95740 d!25325))

(declare-fun b!96025 () Bool)

(declare-fun e!62643 () Bool)

(declare-fun call!9711 () Bool)

(assert (=> b!96025 (= e!62643 call!9711)))

(declare-fun b!96026 () Bool)

(declare-fun e!62644 () Bool)

(assert (=> b!96026 (= e!62644 call!9711)))

(declare-fun d!25327 () Bool)

(declare-fun res!48471 () Bool)

(declare-fun e!62645 () Bool)

(assert (=> d!25327 (=> res!48471 e!62645)))

(assert (=> d!25327 (= res!48471 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25327 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 newMap!16) (mask!6541 newMap!16)) e!62645)))

(declare-fun b!96027 () Bool)

(assert (=> b!96027 (= e!62645 e!62643)))

(declare-fun c!16164 () Bool)

(assert (=> b!96027 (= c!16164 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96028 () Bool)

(assert (=> b!96028 (= e!62643 e!62644)))

(declare-fun lt!47855 () (_ BitVec 64))

(assert (=> b!96028 (= lt!47855 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47856 () Unit!2849)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4197 (_ BitVec 64) (_ BitVec 32)) Unit!2849)

(assert (=> b!96028 (= lt!47856 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000))))

(assert (=> b!96028 (arrayContainsKey!0 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000)))

(declare-fun lt!47854 () Unit!2849)

(assert (=> b!96028 (= lt!47854 lt!47856)))

(declare-fun res!48472 () Bool)

(assert (=> b!96028 (= res!48472 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (_keys!4142 newMap!16) (mask!6541 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!96028 (=> (not res!48472) (not e!62644))))

(declare-fun bm!9708 () Bool)

(assert (=> bm!9708 (= call!9711 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (= (and d!25327 (not res!48471)) b!96027))

(assert (= (and b!96027 c!16164) b!96028))

(assert (= (and b!96027 (not c!16164)) b!96025))

(assert (= (and b!96028 res!48472) b!96026))

(assert (= (or b!96026 b!96025) bm!9708))

(assert (=> b!96027 m!103953))

(assert (=> b!96027 m!103953))

(assert (=> b!96027 m!103989))

(assert (=> b!96028 m!103953))

(declare-fun m!104101 () Bool)

(assert (=> b!96028 m!104101))

(declare-fun m!104103 () Bool)

(assert (=> b!96028 m!104103))

(assert (=> b!96028 m!103953))

(declare-fun m!104105 () Bool)

(assert (=> b!96028 m!104105))

(declare-fun m!104107 () Bool)

(assert (=> bm!9708 m!104107))

(assert (=> b!95669 d!25327))

(declare-fun d!25329 () Bool)

(declare-fun res!48473 () Bool)

(declare-fun e!62646 () Bool)

(assert (=> d!25329 (=> res!48473 e!62646)))

(assert (=> d!25329 (= res!48473 (= (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25329 (= (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000) e!62646)))

(declare-fun b!96029 () Bool)

(declare-fun e!62647 () Bool)

(assert (=> b!96029 (= e!62646 e!62647)))

(declare-fun res!48474 () Bool)

(assert (=> b!96029 (=> (not res!48474) (not e!62647))))

(assert (=> b!96029 (= res!48474 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96030 () Bool)

(assert (=> b!96030 (= e!62647 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25329 (not res!48473)) b!96029))

(assert (= (and b!96029 res!48474) b!96030))

(assert (=> d!25329 m!103953))

(assert (=> b!96030 m!103635))

(declare-fun m!104109 () Bool)

(assert (=> b!96030 m!104109))

(assert (=> bm!9684 d!25329))

(declare-fun d!25331 () Bool)

(assert (=> d!25331 (= (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95715 d!25331))

(declare-fun d!25333 () Bool)

(assert (=> d!25333 (= (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (and (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95898 d!25333))

(declare-fun b!96043 () Bool)

(declare-fun e!62655 () SeekEntryResult!246)

(declare-fun lt!47865 () SeekEntryResult!246)

(assert (=> b!96043 (= e!62655 (MissingZero!246 (index!3128 lt!47865)))))

(declare-fun b!96044 () Bool)

(declare-fun c!16171 () Bool)

(declare-fun lt!47863 () (_ BitVec 64))

(assert (=> b!96044 (= c!16171 (= lt!47863 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62654 () SeekEntryResult!246)

(assert (=> b!96044 (= e!62654 e!62655)))

(declare-fun b!96045 () Bool)

(declare-fun e!62656 () SeekEntryResult!246)

(assert (=> b!96045 (= e!62656 e!62654)))

(assert (=> b!96045 (= lt!47863 (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!47865)))))

(declare-fun c!16172 () Bool)

(assert (=> b!96045 (= c!16172 (= lt!47863 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun lt!47864 () SeekEntryResult!246)

(declare-fun d!25335 () Bool)

(assert (=> d!25335 (and (or ((_ is Undefined!246) lt!47864) (not ((_ is Found!246) lt!47864)) (and (bvsge (index!3127 lt!47864) #b00000000000000000000000000000000) (bvslt (index!3127 lt!47864) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!47864) ((_ is Found!246) lt!47864) (not ((_ is MissingZero!246) lt!47864)) (and (bvsge (index!3126 lt!47864) #b00000000000000000000000000000000) (bvslt (index!3126 lt!47864) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!47864) ((_ is Found!246) lt!47864) ((_ is MissingZero!246) lt!47864) (not ((_ is MissingVacant!246) lt!47864)) (and (bvsge (index!3129 lt!47864) #b00000000000000000000000000000000) (bvslt (index!3129 lt!47864) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!47864) (ite ((_ is Found!246) lt!47864) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47864)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite ((_ is MissingZero!246) lt!47864) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!47864)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!47864) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!47864)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25335 (= lt!47864 e!62656)))

(declare-fun c!16173 () Bool)

(assert (=> d!25335 (= c!16173 (and ((_ is Intermediate!246) lt!47865) (undefined!1058 lt!47865)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4197 (_ BitVec 32)) SeekEntryResult!246)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!25335 (= lt!47865 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (=> d!25335 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25335 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)) lt!47864)))

(declare-fun b!96046 () Bool)

(assert (=> b!96046 (= e!62654 (Found!246 (index!3128 lt!47865)))))

(declare-fun b!96047 () Bool)

(assert (=> b!96047 (= e!62656 Undefined!246)))

(declare-fun b!96048 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4197 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> b!96048 (= e!62655 (seekKeyOrZeroReturnVacant!0 (x!12794 lt!47865) (index!3128 lt!47865) (index!3128 lt!47865) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (= (and d!25335 c!16173) b!96047))

(assert (= (and d!25335 (not c!16173)) b!96045))

(assert (= (and b!96045 c!16172) b!96046))

(assert (= (and b!96045 (not c!16172)) b!96044))

(assert (= (and b!96044 c!16171) b!96043))

(assert (= (and b!96044 (not c!16171)) b!96048))

(declare-fun m!104111 () Bool)

(assert (=> b!96045 m!104111))

(assert (=> d!25335 m!103635))

(declare-fun m!104113 () Bool)

(assert (=> d!25335 m!104113))

(assert (=> d!25335 m!103933))

(assert (=> d!25335 m!104113))

(assert (=> d!25335 m!103635))

(declare-fun m!104115 () Bool)

(assert (=> d!25335 m!104115))

(declare-fun m!104117 () Bool)

(assert (=> d!25335 m!104117))

(declare-fun m!104119 () Bool)

(assert (=> d!25335 m!104119))

(declare-fun m!104121 () Bool)

(assert (=> d!25335 m!104121))

(assert (=> b!96048 m!103635))

(declare-fun m!104123 () Bool)

(assert (=> b!96048 m!104123))

(assert (=> b!95827 d!25335))

(declare-fun d!25337 () Bool)

(declare-fun e!62657 () Bool)

(assert (=> d!25337 e!62657))

(declare-fun res!48475 () Bool)

(assert (=> d!25337 (=> res!48475 e!62657)))

(declare-fun lt!47868 () Bool)

(assert (=> d!25337 (= res!48475 (not lt!47868))))

(declare-fun lt!47869 () Bool)

(assert (=> d!25337 (= lt!47868 lt!47869)))

(declare-fun lt!47867 () Unit!2849)

(declare-fun e!62658 () Unit!2849)

(assert (=> d!25337 (= lt!47867 e!62658)))

(declare-fun c!16174 () Bool)

(assert (=> d!25337 (= c!16174 lt!47869)))

(assert (=> d!25337 (= lt!47869 (containsKey!153 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(assert (=> d!25337 (= (contains!783 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47660) lt!47868)))

(declare-fun b!96049 () Bool)

(declare-fun lt!47866 () Unit!2849)

(assert (=> b!96049 (= e!62658 lt!47866)))

(assert (=> b!96049 (= lt!47866 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(assert (=> b!96049 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(declare-fun b!96050 () Bool)

(declare-fun Unit!2864 () Unit!2849)

(assert (=> b!96050 (= e!62658 Unit!2864)))

(declare-fun b!96051 () Bool)

(assert (=> b!96051 (= e!62657 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660)))))

(assert (= (and d!25337 c!16174) b!96049))

(assert (= (and d!25337 (not c!16174)) b!96050))

(assert (= (and d!25337 (not res!48475)) b!96051))

(declare-fun m!104125 () Bool)

(assert (=> d!25337 m!104125))

(declare-fun m!104127 () Bool)

(assert (=> b!96049 m!104127))

(declare-fun m!104129 () Bool)

(assert (=> b!96049 m!104129))

(assert (=> b!96049 m!104129))

(declare-fun m!104131 () Bool)

(assert (=> b!96049 m!104131))

(assert (=> b!96051 m!104129))

(assert (=> b!96051 m!104129))

(assert (=> b!96051 m!104131))

(assert (=> b!95729 d!25337))

(declare-fun d!25339 () Bool)

(assert (=> d!25339 (= (apply!91 lt!47671 lt!47658) (get!1281 (getValueByKey!150 (toList!762 lt!47671) lt!47658)))))

(declare-fun bs!3949 () Bool)

(assert (= bs!3949 d!25339))

(declare-fun m!104133 () Bool)

(assert (=> bs!3949 m!104133))

(assert (=> bs!3949 m!104133))

(declare-fun m!104135 () Bool)

(assert (=> bs!3949 m!104135))

(assert (=> b!95729 d!25339))

(declare-fun d!25341 () Bool)

(assert (=> d!25341 (= (apply!91 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47673) (apply!91 lt!47672 lt!47673))))

(declare-fun lt!47872 () Unit!2849)

(declare-fun choose!585 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> d!25341 (= lt!47872 (choose!585 lt!47672 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47673))))

(declare-fun e!62661 () Bool)

(assert (=> d!25341 e!62661))

(declare-fun res!48478 () Bool)

(assert (=> d!25341 (=> (not res!48478) (not e!62661))))

(assert (=> d!25341 (= res!48478 (contains!783 lt!47672 lt!47673))))

(assert (=> d!25341 (= (addApplyDifferent!67 lt!47672 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47673) lt!47872)))

(declare-fun b!96055 () Bool)

(assert (=> b!96055 (= e!62661 (not (= lt!47673 lt!47665)))))

(assert (= (and d!25341 res!48478) b!96055))

(declare-fun m!104137 () Bool)

(assert (=> d!25341 m!104137))

(assert (=> d!25341 m!103797))

(assert (=> d!25341 m!103799))

(assert (=> d!25341 m!103803))

(assert (=> d!25341 m!103797))

(declare-fun m!104139 () Bool)

(assert (=> d!25341 m!104139))

(assert (=> b!95729 d!25341))

(declare-fun d!25343 () Bool)

(declare-fun e!62664 () Bool)

(assert (=> d!25343 e!62664))

(declare-fun res!48483 () Bool)

(assert (=> d!25343 (=> (not res!48483) (not e!62664))))

(declare-fun lt!47882 () ListLongMap!1493)

(assert (=> d!25343 (= res!48483 (contains!783 lt!47882 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!47883 () List!1558)

(assert (=> d!25343 (= lt!47882 (ListLongMap!1494 lt!47883))))

(declare-fun lt!47884 () Unit!2849)

(declare-fun lt!47881 () Unit!2849)

(assert (=> d!25343 (= lt!47884 lt!47881)))

(assert (=> d!25343 (= (getValueByKey!150 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!66 (List!1558 (_ BitVec 64) V!3137) Unit!2849)

(assert (=> d!25343 (= lt!47881 (lemmaContainsTupThenGetReturnValue!66 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun insertStrictlySorted!69 (List!1558 (_ BitVec 64) V!3137) List!1558)

(assert (=> d!25343 (= lt!47883 (insertStrictlySorted!69 (toList!762 lt!47654) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25343 (= (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47882)))

(declare-fun b!96060 () Bool)

(declare-fun res!48484 () Bool)

(assert (=> b!96060 (=> (not res!48484) (not e!62664))))

(assert (=> b!96060 (= res!48484 (= (getValueByKey!150 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96061 () Bool)

(declare-fun contains!785 (List!1558 tuple2!2286) Bool)

(assert (=> b!96061 (= e!62664 (contains!785 (toList!762 lt!47882) (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25343 res!48483) b!96060))

(assert (= (and b!96060 res!48484) b!96061))

(declare-fun m!104141 () Bool)

(assert (=> d!25343 m!104141))

(declare-fun m!104143 () Bool)

(assert (=> d!25343 m!104143))

(declare-fun m!104145 () Bool)

(assert (=> d!25343 m!104145))

(declare-fun m!104147 () Bool)

(assert (=> d!25343 m!104147))

(declare-fun m!104149 () Bool)

(assert (=> b!96060 m!104149))

(declare-fun m!104151 () Bool)

(assert (=> b!96061 m!104151))

(assert (=> b!95729 d!25343))

(declare-fun d!25345 () Bool)

(assert (=> d!25345 (= (apply!91 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47673) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47673)))))

(declare-fun bs!3950 () Bool)

(assert (= bs!3950 d!25345))

(declare-fun m!104153 () Bool)

(assert (=> bs!3950 m!104153))

(assert (=> bs!3950 m!104153))

(declare-fun m!104155 () Bool)

(assert (=> bs!3950 m!104155))

(assert (=> b!95729 d!25345))

(declare-fun d!25347 () Bool)

(assert (=> d!25347 (= (apply!91 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47663) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47663)))))

(declare-fun bs!3951 () Bool)

(assert (= bs!3951 d!25347))

(declare-fun m!104157 () Bool)

(assert (=> bs!3951 m!104157))

(assert (=> bs!3951 m!104157))

(declare-fun m!104159 () Bool)

(assert (=> bs!3951 m!104159))

(assert (=> b!95729 d!25347))

(declare-fun d!25349 () Bool)

(assert (=> d!25349 (= (apply!91 lt!47672 lt!47673) (get!1281 (getValueByKey!150 (toList!762 lt!47672) lt!47673)))))

(declare-fun bs!3952 () Bool)

(assert (= bs!3952 d!25349))

(declare-fun m!104161 () Bool)

(assert (=> bs!3952 m!104161))

(assert (=> bs!3952 m!104161))

(declare-fun m!104163 () Bool)

(assert (=> bs!3952 m!104163))

(assert (=> b!95729 d!25349))

(declare-fun d!25351 () Bool)

(declare-fun e!62665 () Bool)

(assert (=> d!25351 e!62665))

(declare-fun res!48485 () Bool)

(assert (=> d!25351 (=> (not res!48485) (not e!62665))))

(declare-fun lt!47886 () ListLongMap!1493)

(assert (=> d!25351 (= res!48485 (contains!783 lt!47886 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!47887 () List!1558)

(assert (=> d!25351 (= lt!47886 (ListLongMap!1494 lt!47887))))

(declare-fun lt!47888 () Unit!2849)

(declare-fun lt!47885 () Unit!2849)

(assert (=> d!25351 (= lt!47888 lt!47885)))

(assert (=> d!25351 (= (getValueByKey!150 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25351 (= lt!47885 (lemmaContainsTupThenGetReturnValue!66 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25351 (= lt!47887 (insertStrictlySorted!69 (toList!762 lt!47672) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25351 (= (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47886)))

(declare-fun b!96062 () Bool)

(declare-fun res!48486 () Bool)

(assert (=> b!96062 (=> (not res!48486) (not e!62665))))

(assert (=> b!96062 (= res!48486 (= (getValueByKey!150 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96063 () Bool)

(assert (=> b!96063 (= e!62665 (contains!785 (toList!762 lt!47886) (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25351 res!48485) b!96062))

(assert (= (and b!96062 res!48486) b!96063))

(declare-fun m!104165 () Bool)

(assert (=> d!25351 m!104165))

(declare-fun m!104167 () Bool)

(assert (=> d!25351 m!104167))

(declare-fun m!104169 () Bool)

(assert (=> d!25351 m!104169))

(declare-fun m!104171 () Bool)

(assert (=> d!25351 m!104171))

(declare-fun m!104173 () Bool)

(assert (=> b!96062 m!104173))

(declare-fun m!104175 () Bool)

(assert (=> b!96063 m!104175))

(assert (=> b!95729 d!25351))

(declare-fun d!25353 () Bool)

(declare-fun e!62666 () Bool)

(assert (=> d!25353 e!62666))

(declare-fun res!48487 () Bool)

(assert (=> d!25353 (=> (not res!48487) (not e!62666))))

(declare-fun lt!47890 () ListLongMap!1493)

(assert (=> d!25353 (= res!48487 (contains!783 lt!47890 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!47891 () List!1558)

(assert (=> d!25353 (= lt!47890 (ListLongMap!1494 lt!47891))))

(declare-fun lt!47892 () Unit!2849)

(declare-fun lt!47889 () Unit!2849)

(assert (=> d!25353 (= lt!47892 lt!47889)))

(assert (=> d!25353 (= (getValueByKey!150 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25353 (= lt!47889 (lemmaContainsTupThenGetReturnValue!66 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25353 (= lt!47891 (insertStrictlySorted!69 (toList!762 lt!47671) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25353 (= (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47890)))

(declare-fun b!96064 () Bool)

(declare-fun res!48488 () Bool)

(assert (=> b!96064 (=> (not res!48488) (not e!62666))))

(assert (=> b!96064 (= res!48488 (= (getValueByKey!150 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96065 () Bool)

(assert (=> b!96065 (= e!62666 (contains!785 (toList!762 lt!47890) (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25353 res!48487) b!96064))

(assert (= (and b!96064 res!48488) b!96065))

(declare-fun m!104177 () Bool)

(assert (=> d!25353 m!104177))

(declare-fun m!104179 () Bool)

(assert (=> d!25353 m!104179))

(declare-fun m!104181 () Bool)

(assert (=> d!25353 m!104181))

(declare-fun m!104183 () Bool)

(assert (=> d!25353 m!104183))

(declare-fun m!104185 () Bool)

(assert (=> b!96064 m!104185))

(declare-fun m!104187 () Bool)

(assert (=> b!96065 m!104187))

(assert (=> b!95729 d!25353))

(declare-fun e!62684 () Bool)

(declare-fun b!96090 () Bool)

(declare-fun lt!47911 () ListLongMap!1493)

(assert (=> b!96090 (= e!62684 (= lt!47911 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96091 () Bool)

(assert (=> b!96091 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> b!96091 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!62686 () Bool)

(assert (=> b!96091 (= e!62686 (= (apply!91 lt!47911 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96092 () Bool)

(declare-fun e!62685 () Bool)

(assert (=> b!96092 (= e!62685 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96092 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!96093 () Bool)

(declare-fun isEmpty!360 (ListLongMap!1493) Bool)

(assert (=> b!96093 (= e!62684 (isEmpty!360 lt!47911))))

(declare-fun b!96094 () Bool)

(declare-fun e!62682 () ListLongMap!1493)

(declare-fun call!9714 () ListLongMap!1493)

(assert (=> b!96094 (= e!62682 call!9714)))

(declare-fun b!96095 () Bool)

(declare-fun res!48499 () Bool)

(declare-fun e!62681 () Bool)

(assert (=> b!96095 (=> (not res!48499) (not e!62681))))

(assert (=> b!96095 (= res!48499 (not (contains!783 lt!47911 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96096 () Bool)

(declare-fun lt!47908 () Unit!2849)

(declare-fun lt!47913 () Unit!2849)

(assert (=> b!96096 (= lt!47908 lt!47913)))

(declare-fun lt!47912 () ListLongMap!1493)

(declare-fun lt!47910 () V!3137)

(declare-fun lt!47907 () (_ BitVec 64))

(declare-fun lt!47909 () (_ BitVec 64))

(assert (=> b!96096 (not (contains!783 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910)) lt!47907))))

(declare-fun addStillNotContains!41 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> b!96096 (= lt!47913 (addStillNotContains!41 lt!47912 lt!47909 lt!47910 lt!47907))))

(assert (=> b!96096 (= lt!47907 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96096 (= lt!47910 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96096 (= lt!47909 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!96096 (= lt!47912 call!9714)))

(assert (=> b!96096 (= e!62682 (+!129 call!9714 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96097 () Bool)

(declare-fun e!62683 () ListLongMap!1493)

(assert (=> b!96097 (= e!62683 (ListLongMap!1494 Nil!1555))))

(declare-fun b!96098 () Bool)

(declare-fun e!62687 () Bool)

(assert (=> b!96098 (= e!62681 e!62687)))

(declare-fun c!16185 () Bool)

(assert (=> b!96098 (= c!16185 e!62685)))

(declare-fun res!48497 () Bool)

(assert (=> b!96098 (=> (not res!48497) (not e!62685))))

(assert (=> b!96098 (= res!48497 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96099 () Bool)

(assert (=> b!96099 (= e!62687 e!62684)))

(declare-fun c!16184 () Bool)

(assert (=> b!96099 (= c!16184 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96100 () Bool)

(assert (=> b!96100 (= e!62687 e!62686)))

(assert (=> b!96100 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun res!48500 () Bool)

(assert (=> b!96100 (= res!48500 (contains!783 lt!47911 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96100 (=> (not res!48500) (not e!62686))))

(declare-fun b!96101 () Bool)

(assert (=> b!96101 (= e!62683 e!62682)))

(declare-fun c!16183 () Bool)

(assert (=> b!96101 (= c!16183 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!9711 () Bool)

(assert (=> bm!9711 (= call!9714 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun d!25355 () Bool)

(assert (=> d!25355 e!62681))

(declare-fun res!48498 () Bool)

(assert (=> d!25355 (=> (not res!48498) (not e!62681))))

(assert (=> d!25355 (= res!48498 (not (contains!783 lt!47911 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25355 (= lt!47911 e!62683)))

(declare-fun c!16186 () Bool)

(assert (=> d!25355 (= c!16186 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25355 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992))))))

(assert (=> d!25355 (= (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) lt!47911)))

(assert (= (and d!25355 c!16186) b!96097))

(assert (= (and d!25355 (not c!16186)) b!96101))

(assert (= (and b!96101 c!16183) b!96096))

(assert (= (and b!96101 (not c!16183)) b!96094))

(assert (= (or b!96096 b!96094) bm!9711))

(assert (= (and d!25355 res!48498) b!96095))

(assert (= (and b!96095 res!48499) b!96098))

(assert (= (and b!96098 res!48497) b!96092))

(assert (= (and b!96098 c!16185) b!96100))

(assert (= (and b!96098 (not c!16185)) b!96099))

(assert (= (and b!96100 res!48500) b!96091))

(assert (= (and b!96099 c!16184) b!96090))

(assert (= (and b!96099 (not c!16184)) b!96093))

(declare-fun b_lambda!4245 () Bool)

(assert (=> (not b_lambda!4245) (not b!96091)))

(assert (=> b!96091 t!5469))

(declare-fun b_and!5869 () Bool)

(assert (= b_and!5865 (and (=> t!5469 result!3205) b_and!5869)))

(assert (=> b!96091 t!5471))

(declare-fun b_and!5871 () Bool)

(assert (= b_and!5867 (and (=> t!5471 result!3209) b_and!5871)))

(declare-fun b_lambda!4247 () Bool)

(assert (=> (not b_lambda!4247) (not b!96096)))

(assert (=> b!96096 t!5469))

(declare-fun b_and!5873 () Bool)

(assert (= b_and!5869 (and (=> t!5469 result!3205) b_and!5873)))

(assert (=> b!96096 t!5471))

(declare-fun b_and!5875 () Bool)

(assert (= b_and!5871 (and (=> t!5471 result!3209) b_and!5875)))

(declare-fun m!104189 () Bool)

(assert (=> d!25355 m!104189))

(assert (=> d!25355 m!103641))

(declare-fun m!104191 () Bool)

(assert (=> b!96093 m!104191))

(declare-fun m!104193 () Bool)

(assert (=> b!96095 m!104193))

(declare-fun m!104195 () Bool)

(assert (=> bm!9711 m!104195))

(assert (=> b!96091 m!103773))

(assert (=> b!96091 m!103631))

(assert (=> b!96091 m!103775))

(assert (=> b!96091 m!103631))

(assert (=> b!96091 m!103777))

(assert (=> b!96091 m!103773))

(assert (=> b!96091 m!103777))

(declare-fun m!104197 () Bool)

(assert (=> b!96091 m!104197))

(assert (=> b!96096 m!103773))

(assert (=> b!96096 m!103631))

(assert (=> b!96096 m!103775))

(assert (=> b!96096 m!103631))

(declare-fun m!104199 () Bool)

(assert (=> b!96096 m!104199))

(declare-fun m!104201 () Bool)

(assert (=> b!96096 m!104201))

(assert (=> b!96096 m!103777))

(assert (=> b!96096 m!104199))

(declare-fun m!104203 () Bool)

(assert (=> b!96096 m!104203))

(assert (=> b!96096 m!103773))

(declare-fun m!104205 () Bool)

(assert (=> b!96096 m!104205))

(assert (=> b!96092 m!103777))

(assert (=> b!96092 m!103777))

(assert (=> b!96092 m!103813))

(assert (=> b!96090 m!104195))

(assert (=> b!96100 m!103777))

(assert (=> b!96100 m!103777))

(declare-fun m!104207 () Bool)

(assert (=> b!96100 m!104207))

(assert (=> b!96101 m!103777))

(assert (=> b!96101 m!103777))

(assert (=> b!96101 m!103813))

(assert (=> b!95729 d!25355))

(declare-fun d!25357 () Bool)

(declare-fun e!62688 () Bool)

(assert (=> d!25357 e!62688))

(declare-fun res!48501 () Bool)

(assert (=> d!25357 (=> (not res!48501) (not e!62688))))

(declare-fun lt!47915 () ListLongMap!1493)

(assert (=> d!25357 (= res!48501 (contains!783 lt!47915 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!47916 () List!1558)

(assert (=> d!25357 (= lt!47915 (ListLongMap!1494 lt!47916))))

(declare-fun lt!47917 () Unit!2849)

(declare-fun lt!47914 () Unit!2849)

(assert (=> d!25357 (= lt!47917 lt!47914)))

(assert (=> d!25357 (= (getValueByKey!150 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25357 (= lt!47914 (lemmaContainsTupThenGetReturnValue!66 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25357 (= lt!47916 (insertStrictlySorted!69 (toList!762 lt!47664) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25357 (= (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47915)))

(declare-fun b!96102 () Bool)

(declare-fun res!48502 () Bool)

(assert (=> b!96102 (=> (not res!48502) (not e!62688))))

(assert (=> b!96102 (= res!48502 (= (getValueByKey!150 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96103 () Bool)

(assert (=> b!96103 (= e!62688 (contains!785 (toList!762 lt!47915) (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25357 res!48501) b!96102))

(assert (= (and b!96102 res!48502) b!96103))

(declare-fun m!104209 () Bool)

(assert (=> d!25357 m!104209))

(declare-fun m!104211 () Bool)

(assert (=> d!25357 m!104211))

(declare-fun m!104213 () Bool)

(assert (=> d!25357 m!104213))

(declare-fun m!104215 () Bool)

(assert (=> d!25357 m!104215))

(declare-fun m!104217 () Bool)

(assert (=> b!96102 m!104217))

(declare-fun m!104219 () Bool)

(assert (=> b!96103 m!104219))

(assert (=> b!95729 d!25357))

(declare-fun d!25359 () Bool)

(assert (=> d!25359 (= (apply!91 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47658) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47658)))))

(declare-fun bs!3953 () Bool)

(assert (= bs!3953 d!25359))

(declare-fun m!104221 () Bool)

(assert (=> bs!3953 m!104221))

(assert (=> bs!3953 m!104221))

(declare-fun m!104223 () Bool)

(assert (=> bs!3953 m!104223))

(assert (=> b!95729 d!25359))

(declare-fun d!25361 () Bool)

(assert (=> d!25361 (contains!783 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47660)))

(declare-fun lt!47920 () Unit!2849)

(declare-fun choose!586 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> d!25361 (= lt!47920 (choose!586 lt!47654 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47660))))

(assert (=> d!25361 (contains!783 lt!47654 lt!47660)))

(assert (=> d!25361 (= (addStillContains!67 lt!47654 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47660) lt!47920)))

(declare-fun bs!3954 () Bool)

(assert (= bs!3954 d!25361))

(assert (=> bs!3954 m!103789))

(assert (=> bs!3954 m!103789))

(assert (=> bs!3954 m!103791))

(declare-fun m!104225 () Bool)

(assert (=> bs!3954 m!104225))

(declare-fun m!104227 () Bool)

(assert (=> bs!3954 m!104227))

(assert (=> b!95729 d!25361))

(declare-fun d!25363 () Bool)

(assert (=> d!25363 (= (apply!91 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47658) (apply!91 lt!47671 lt!47658))))

(declare-fun lt!47921 () Unit!2849)

(assert (=> d!25363 (= lt!47921 (choose!585 lt!47671 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47658))))

(declare-fun e!62689 () Bool)

(assert (=> d!25363 e!62689))

(declare-fun res!48503 () Bool)

(assert (=> d!25363 (=> (not res!48503) (not e!62689))))

(assert (=> d!25363 (= res!48503 (contains!783 lt!47671 lt!47658))))

(assert (=> d!25363 (= (addApplyDifferent!67 lt!47671 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47658) lt!47921)))

(declare-fun b!96105 () Bool)

(assert (=> b!96105 (= e!62689 (not (= lt!47658 lt!47662)))))

(assert (= (and d!25363 res!48503) b!96105))

(declare-fun m!104229 () Bool)

(assert (=> d!25363 m!104229))

(assert (=> d!25363 m!103793))

(assert (=> d!25363 m!103795))

(assert (=> d!25363 m!103801))

(assert (=> d!25363 m!103793))

(declare-fun m!104231 () Bool)

(assert (=> d!25363 m!104231))

(assert (=> b!95729 d!25363))

(declare-fun d!25365 () Bool)

(assert (=> d!25365 (= (apply!91 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47663) (apply!91 lt!47664 lt!47663))))

(declare-fun lt!47922 () Unit!2849)

(assert (=> d!25365 (= lt!47922 (choose!585 lt!47664 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47663))))

(declare-fun e!62690 () Bool)

(assert (=> d!25365 e!62690))

(declare-fun res!48504 () Bool)

(assert (=> d!25365 (=> (not res!48504) (not e!62690))))

(assert (=> d!25365 (= res!48504 (contains!783 lt!47664 lt!47663))))

(assert (=> d!25365 (= (addApplyDifferent!67 lt!47664 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47663) lt!47922)))

(declare-fun b!96106 () Bool)

(assert (=> b!96106 (= e!62690 (not (= lt!47663 lt!47669)))))

(assert (= (and d!25365 res!48504) b!96106))

(declare-fun m!104233 () Bool)

(assert (=> d!25365 m!104233))

(assert (=> d!25365 m!103805))

(assert (=> d!25365 m!103807))

(assert (=> d!25365 m!103809))

(assert (=> d!25365 m!103805))

(declare-fun m!104235 () Bool)

(assert (=> d!25365 m!104235))

(assert (=> b!95729 d!25365))

(declare-fun d!25367 () Bool)

(assert (=> d!25367 (= (apply!91 lt!47664 lt!47663) (get!1281 (getValueByKey!150 (toList!762 lt!47664) lt!47663)))))

(declare-fun bs!3955 () Bool)

(assert (= bs!3955 d!25367))

(declare-fun m!104237 () Bool)

(assert (=> bs!3955 m!104237))

(assert (=> bs!3955 m!104237))

(declare-fun m!104239 () Bool)

(assert (=> bs!3955 m!104239))

(assert (=> b!95729 d!25367))

(declare-fun b!96141 () Bool)

(declare-fun res!48529 () Bool)

(declare-fun call!9725 () Bool)

(assert (=> b!96141 (= res!48529 call!9725)))

(declare-fun e!62709 () Bool)

(assert (=> b!96141 (=> (not res!48529) (not e!62709))))

(declare-fun b!96142 () Bool)

(declare-fun e!62714 () Bool)

(declare-fun call!9723 () Bool)

(assert (=> b!96142 (= e!62714 (not call!9723))))

(declare-fun b!96143 () Bool)

(declare-fun res!48524 () Bool)

(declare-fun e!62712 () Bool)

(assert (=> b!96143 (=> (not res!48524) (not e!62712))))

(declare-fun lt!48003 () tuple2!2288)

(assert (=> b!96143 (= res!48524 (valid!387 (_2!1155 lt!48003)))))

(declare-fun b!96144 () Bool)

(declare-fun e!62708 () Unit!2849)

(declare-fun Unit!2865 () Unit!2849)

(assert (=> b!96144 (= e!62708 Unit!2865)))

(declare-fun call!9726 () SeekEntryResult!246)

(declare-fun bm!9720 () Bool)

(assert (=> bm!9720 (= call!9726 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun b!96145 () Bool)

(declare-fun e!62707 () Bool)

(declare-fun e!62711 () Bool)

(assert (=> b!96145 (= e!62707 e!62711)))

(declare-fun res!48530 () Bool)

(declare-fun call!9724 () Bool)

(assert (=> b!96145 (= res!48530 call!9724)))

(assert (=> b!96145 (=> (not res!48530) (not e!62711))))

(declare-fun b!96146 () Bool)

(declare-fun e!62713 () Unit!2849)

(declare-fun Unit!2866 () Unit!2849)

(assert (=> b!96146 (= e!62713 Unit!2866)))

(declare-fun lt!48011 () Unit!2849)

(assert (=> b!96146 (= lt!48011 (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47989 () SeekEntryResult!246)

(assert (=> b!96146 (= lt!47989 call!9726)))

(declare-fun res!48526 () Bool)

(assert (=> b!96146 (= res!48526 ((_ is Found!246) lt!47989))))

(assert (=> b!96146 (=> (not res!48526) (not e!62709))))

(assert (=> b!96146 e!62709))

(declare-fun lt!47997 () Unit!2849)

(assert (=> b!96146 (= lt!47997 lt!48011)))

(assert (=> b!96146 false))

(declare-fun b!96147 () Bool)

(declare-fun res!48531 () Bool)

(assert (=> b!96147 (=> (not res!48531) (not e!62714))))

(assert (=> b!96147 (= res!48531 call!9724)))

(declare-fun e!62710 () Bool)

(assert (=> b!96147 (= e!62710 e!62714)))

(declare-fun bm!9721 () Bool)

(assert (=> bm!9721 (= call!9724 call!9725)))

(declare-fun b!96148 () Bool)

(declare-fun c!16195 () Bool)

(declare-fun lt!48009 () SeekEntryResult!246)

(assert (=> b!96148 (= c!16195 ((_ is MissingVacant!246) lt!48009))))

(assert (=> b!96148 (= e!62710 e!62707)))

(declare-fun b!96149 () Bool)

(declare-fun Unit!2867 () Unit!2849)

(assert (=> b!96149 (= e!62708 Unit!2867)))

(declare-fun lt!47983 () Unit!2849)

(declare-fun lemmaArrayContainsKeyThenInListMap!24 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2849)

(assert (=> b!96149 (= lt!47983 (lemmaArrayContainsKeyThenInListMap!24 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> b!96149 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))

(declare-fun lt!48007 () Unit!2849)

(assert (=> b!96149 (= lt!48007 lt!47983)))

(assert (=> b!96149 false))

(declare-fun bm!9722 () Bool)

(assert (=> bm!9722 (= call!9723 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!96150 () Bool)

(assert (=> b!96150 (= e!62712 (= (map!1246 (_2!1155 lt!48003)) (+!129 (map!1246 newMap!16) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96151 () Bool)

(assert (=> b!96151 (= e!62709 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47989)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96152 () Bool)

(declare-fun res!48528 () Bool)

(assert (=> b!96152 (=> (not res!48528) (not e!62714))))

(assert (=> b!96152 (= res!48528 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!48009)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96153 () Bool)

(assert (=> b!96153 (= e!62707 ((_ is Undefined!246) lt!48009))))

(declare-fun b!96155 () Bool)

(assert (=> b!96155 (= e!62711 (not call!9723))))

(declare-fun d!25369 () Bool)

(assert (=> d!25369 e!62712))

(declare-fun res!48525 () Bool)

(assert (=> d!25369 (=> (not res!48525) (not e!62712))))

(assert (=> d!25369 (= res!48525 (_1!1155 lt!48003))))

(assert (=> d!25369 (= lt!48003 (tuple2!2289 true (LongMapFixedSize!839 (defaultEntry!2456 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd (_size!468 newMap!16) #b00000000000000000000000000000001) (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (_vacant!468 newMap!16))))))

(declare-fun lt!48005 () Unit!2849)

(declare-fun lt!48010 () Unit!2849)

(assert (=> d!25369 (= lt!48005 lt!48010)))

(declare-fun lt!47994 () array!4199)

(declare-fun lt!48004 () array!4197)

(assert (=> d!25369 (contains!783 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(assert (=> d!25369 (= lt!48010 (lemmaValidKeyInArrayIsInListMap!100 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25369 (= lt!47994 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))))

(assert (=> d!25369 (= lt!48004 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun lt!47991 () Unit!2849)

(declare-fun lt!47985 () Unit!2849)

(assert (=> d!25369 (= lt!47991 lt!47985)))

(declare-fun lt!47998 () array!4197)

(assert (=> d!25369 (= (arrayCountValidKeys!0 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4197 (_ BitVec 32)) Unit!2849)

(assert (=> d!25369 (= lt!47985 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(assert (=> d!25369 (= lt!47998 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun lt!48006 () Unit!2849)

(declare-fun lt!47990 () Unit!2849)

(assert (=> d!25369 (= lt!48006 lt!47990)))

(declare-fun lt!48002 () array!4197)

(assert (=> d!25369 (arrayContainsKey!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!25369 (= lt!47990 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(assert (=> d!25369 (= lt!48002 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun lt!47999 () Unit!2849)

(declare-fun lt!48000 () Unit!2849)

(assert (=> d!25369 (= lt!47999 lt!48000)))

(assert (=> d!25369 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!24 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2849)

(assert (=> d!25369 (= lt!48000 (lemmaAddValidKeyToArrayThenAddPairToListMap!24 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(declare-fun lt!47995 () Unit!2849)

(declare-fun lt!47993 () Unit!2849)

(assert (=> d!25369 (= lt!47995 lt!47993)))

(assert (=> d!25369 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (mask!6541 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4197 (_ BitVec 32) (_ BitVec 32)) Unit!2849)

(assert (=> d!25369 (= lt!47993 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (mask!6541 newMap!16)))))

(declare-fun lt!47987 () Unit!2849)

(declare-fun lt!47996 () Unit!2849)

(assert (=> d!25369 (= lt!47987 lt!47996)))

(assert (=> d!25369 (= (arrayCountValidKeys!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4197 (_ BitVec 32) (_ BitVec 64)) Unit!2849)

(assert (=> d!25369 (= lt!47996 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun lt!48012 () Unit!2849)

(declare-fun lt!47986 () Unit!2849)

(assert (=> d!25369 (= lt!48012 lt!47986)))

(declare-fun lt!48001 () List!1559)

(declare-fun lt!48008 () (_ BitVec 32))

(assert (=> d!25369 (arrayNoDuplicates!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) lt!48008 lt!48001)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4197 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1559) Unit!2849)

(assert (=> d!25369 (= lt!47986 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) lt!48008 lt!48001))))

(assert (=> d!25369 (= lt!48001 Nil!1556)))

(assert (=> d!25369 (= lt!48008 #b00000000000000000000000000000000)))

(declare-fun lt!47984 () Unit!2849)

(assert (=> d!25369 (= lt!47984 e!62708)))

(declare-fun c!16197 () Bool)

(assert (=> d!25369 (= c!16197 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!47992 () Unit!2849)

(assert (=> d!25369 (= lt!47992 e!62713)))

(declare-fun c!16198 () Bool)

(assert (=> d!25369 (= c!16198 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25369 (valid!387 newMap!16)))

(assert (=> d!25369 (= (updateHelperNewKey!40 newMap!16 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))) lt!48003)))

(declare-fun b!96154 () Bool)

(declare-fun lt!47988 () Unit!2849)

(assert (=> b!96154 (= e!62713 lt!47988)))

(assert (=> b!96154 (= lt!47988 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> b!96154 (= lt!48009 call!9726)))

(declare-fun c!16196 () Bool)

(assert (=> b!96154 (= c!16196 ((_ is MissingZero!246) lt!48009))))

(assert (=> b!96154 e!62710))

(declare-fun b!96156 () Bool)

(declare-fun res!48523 () Bool)

(assert (=> b!96156 (=> (not res!48523) (not e!62712))))

(assert (=> b!96156 (= res!48523 (contains!783 (map!1246 (_2!1155 lt!48003)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun bm!9723 () Bool)

(assert (=> bm!9723 (= call!9725 (inRange!0 (ite c!16198 (index!3127 lt!47989) (ite c!16196 (index!3126 lt!48009) (index!3129 lt!48009))) (mask!6541 newMap!16)))))

(declare-fun b!96157 () Bool)

(declare-fun res!48527 () Bool)

(assert (=> b!96157 (= res!48527 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!48009)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96157 (=> (not res!48527) (not e!62711))))

(assert (= (and d!25369 c!16198) b!96146))

(assert (= (and d!25369 (not c!16198)) b!96154))

(assert (= (and b!96146 res!48526) b!96141))

(assert (= (and b!96141 res!48529) b!96151))

(assert (= (and b!96154 c!16196) b!96147))

(assert (= (and b!96154 (not c!16196)) b!96148))

(assert (= (and b!96147 res!48531) b!96152))

(assert (= (and b!96152 res!48528) b!96142))

(assert (= (and b!96148 c!16195) b!96145))

(assert (= (and b!96148 (not c!16195)) b!96153))

(assert (= (and b!96145 res!48530) b!96157))

(assert (= (and b!96157 res!48527) b!96155))

(assert (= (or b!96147 b!96145) bm!9721))

(assert (= (or b!96142 b!96155) bm!9722))

(assert (= (or b!96141 bm!9721) bm!9723))

(assert (= (or b!96146 b!96154) bm!9720))

(assert (= (and d!25369 c!16197) b!96149))

(assert (= (and d!25369 (not c!16197)) b!96144))

(assert (= (and d!25369 res!48525) b!96143))

(assert (= (and b!96143 res!48524) b!96156))

(assert (= (and b!96156 res!48523) b!96150))

(declare-fun m!104241 () Bool)

(assert (=> b!96151 m!104241))

(declare-fun m!104243 () Bool)

(assert (=> b!96157 m!104243))

(declare-fun m!104245 () Bool)

(assert (=> d!25369 m!104245))

(assert (=> d!25369 m!103769))

(assert (=> d!25369 m!104081))

(assert (=> d!25369 m!103635))

(declare-fun m!104247 () Bool)

(assert (=> d!25369 m!104247))

(assert (=> d!25369 m!103769))

(declare-fun m!104249 () Bool)

(assert (=> d!25369 m!104249))

(declare-fun m!104251 () Bool)

(assert (=> d!25369 m!104251))

(declare-fun m!104253 () Bool)

(assert (=> d!25369 m!104253))

(declare-fun m!104255 () Bool)

(assert (=> d!25369 m!104255))

(assert (=> d!25369 m!103769))

(assert (=> d!25369 m!103635))

(assert (=> d!25369 m!103855))

(assert (=> d!25369 m!103635))

(declare-fun m!104257 () Bool)

(assert (=> d!25369 m!104257))

(declare-fun m!104259 () Bool)

(assert (=> d!25369 m!104259))

(declare-fun m!104261 () Bool)

(assert (=> d!25369 m!104261))

(assert (=> d!25369 m!103635))

(declare-fun m!104263 () Bool)

(assert (=> d!25369 m!104263))

(declare-fun m!104265 () Bool)

(assert (=> d!25369 m!104265))

(assert (=> d!25369 m!103635))

(assert (=> d!25369 m!103633))

(declare-fun m!104267 () Bool)

(assert (=> d!25369 m!104267))

(assert (=> d!25369 m!103635))

(declare-fun m!104269 () Bool)

(assert (=> d!25369 m!104269))

(assert (=> d!25369 m!103635))

(assert (=> d!25369 m!103869))

(declare-fun m!104271 () Bool)

(assert (=> d!25369 m!104271))

(declare-fun m!104273 () Bool)

(assert (=> d!25369 m!104273))

(assert (=> d!25369 m!103635))

(declare-fun m!104275 () Bool)

(assert (=> d!25369 m!104275))

(assert (=> d!25369 m!103763))

(assert (=> d!25369 m!103627))

(declare-fun m!104277 () Bool)

(assert (=> d!25369 m!104277))

(assert (=> d!25369 m!104259))

(assert (=> d!25369 m!104245))

(declare-fun m!104279 () Bool)

(assert (=> d!25369 m!104279))

(declare-fun m!104281 () Bool)

(assert (=> b!96156 m!104281))

(assert (=> b!96156 m!104281))

(assert (=> b!96156 m!103635))

(declare-fun m!104283 () Bool)

(assert (=> b!96156 m!104283))

(declare-fun m!104285 () Bool)

(assert (=> b!96143 m!104285))

(declare-fun m!104287 () Bool)

(assert (=> bm!9723 m!104287))

(assert (=> b!96149 m!103635))

(declare-fun m!104289 () Bool)

(assert (=> b!96149 m!104289))

(assert (=> b!96149 m!103769))

(assert (=> b!96149 m!103769))

(assert (=> b!96149 m!103635))

(assert (=> b!96149 m!103855))

(assert (=> b!96150 m!104281))

(assert (=> b!96150 m!103659))

(assert (=> b!96150 m!103659))

(declare-fun m!104291 () Bool)

(assert (=> b!96150 m!104291))

(declare-fun m!104293 () Bool)

(assert (=> b!96152 m!104293))

(assert (=> bm!9720 m!103635))

(assert (=> bm!9720 m!103847))

(assert (=> b!96154 m!103635))

(assert (=> b!96154 m!103885))

(assert (=> bm!9722 m!103635))

(assert (=> bm!9722 m!103869))

(assert (=> b!96146 m!103635))

(assert (=> b!96146 m!103845))

(assert (=> bm!9682 d!25369))

(assert (=> b!95742 d!25323))

(assert (=> b!95742 d!25325))

(assert (=> b!95713 d!25331))

(declare-fun b!96158 () Bool)

(declare-fun e!62727 () Bool)

(assert (=> b!96158 (= e!62727 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96159 () Bool)

(declare-fun e!62715 () ListLongMap!1493)

(declare-fun call!9732 () ListLongMap!1493)

(assert (=> b!96159 (= e!62715 call!9732)))

(declare-fun b!96160 () Bool)

(declare-fun e!62726 () Bool)

(assert (=> b!96160 (= e!62726 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96161 () Bool)

(declare-fun e!62721 () Bool)

(declare-fun e!62725 () Bool)

(assert (=> b!96161 (= e!62721 e!62725)))

(declare-fun res!48534 () Bool)

(assert (=> b!96161 (=> (not res!48534) (not e!62725))))

(declare-fun lt!48018 () ListLongMap!1493)

(assert (=> b!96161 (= res!48534 (contains!783 lt!48018 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96161 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96162 () Bool)

(declare-fun e!62723 () ListLongMap!1493)

(assert (=> b!96162 (= e!62723 call!9732)))

(declare-fun b!96163 () Bool)

(declare-fun e!62716 () Bool)

(declare-fun e!62719 () Bool)

(assert (=> b!96163 (= e!62716 e!62719)))

(declare-fun res!48540 () Bool)

(declare-fun call!9730 () Bool)

(assert (=> b!96163 (= res!48540 call!9730)))

(assert (=> b!96163 (=> (not res!48540) (not e!62719))))

(declare-fun b!96164 () Bool)

(declare-fun res!48538 () Bool)

(declare-fun e!62718 () Bool)

(assert (=> b!96164 (=> (not res!48538) (not e!62718))))

(declare-fun e!62717 () Bool)

(assert (=> b!96164 (= res!48538 e!62717)))

(declare-fun c!16204 () Bool)

(assert (=> b!96164 (= c!16204 (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96166 () Bool)

(declare-fun res!48536 () Bool)

(assert (=> b!96166 (=> (not res!48536) (not e!62718))))

(assert (=> b!96166 (= res!48536 e!62721)))

(declare-fun res!48537 () Bool)

(assert (=> b!96166 (=> res!48537 e!62721)))

(assert (=> b!96166 (= res!48537 (not e!62727))))

(declare-fun res!48532 () Bool)

(assert (=> b!96166 (=> (not res!48532) (not e!62727))))

(assert (=> b!96166 (= res!48532 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96167 () Bool)

(declare-fun e!62722 () Bool)

(assert (=> b!96167 (= e!62722 (= (apply!91 lt!48018 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))

(declare-fun bm!9724 () Bool)

(declare-fun call!9727 () ListLongMap!1493)

(declare-fun call!9729 () ListLongMap!1493)

(assert (=> bm!9724 (= call!9727 call!9729)))

(declare-fun b!96168 () Bool)

(assert (=> b!96168 (= e!62717 e!62722)))

(declare-fun res!48533 () Bool)

(declare-fun call!9728 () Bool)

(assert (=> b!96168 (= res!48533 call!9728)))

(assert (=> b!96168 (=> (not res!48533) (not e!62722))))

(declare-fun b!96169 () Bool)

(declare-fun e!62724 () Unit!2849)

(declare-fun Unit!2868 () Unit!2849)

(assert (=> b!96169 (= e!62724 Unit!2868)))

(declare-fun b!96170 () Bool)

(declare-fun e!62720 () ListLongMap!1493)

(assert (=> b!96170 (= e!62720 e!62715)))

(declare-fun c!16203 () Bool)

(assert (=> b!96170 (= c!16203 (and (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9725 () Bool)

(assert (=> bm!9725 (= call!9730 (contains!783 lt!48018 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!16199 () Bool)

(declare-fun b!96171 () Bool)

(assert (=> b!96171 (= c!16199 (and (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96171 (= e!62715 e!62723)))

(declare-fun c!16200 () Bool)

(declare-fun bm!9726 () Bool)

(declare-fun call!9731 () ListLongMap!1493)

(declare-fun call!9733 () ListLongMap!1493)

(assert (=> bm!9726 (= call!9731 (+!129 (ite c!16200 call!9733 (ite c!16203 call!9729 call!9727)) (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun b!96165 () Bool)

(assert (=> b!96165 (= e!62717 (not call!9728))))

(declare-fun d!25371 () Bool)

(assert (=> d!25371 e!62718))

(declare-fun res!48535 () Bool)

(assert (=> d!25371 (=> (not res!48535) (not e!62718))))

(assert (=> d!25371 (= res!48535 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!48033 () ListLongMap!1493)

(assert (=> d!25371 (= lt!48018 lt!48033)))

(declare-fun lt!48016 () Unit!2849)

(assert (=> d!25371 (= lt!48016 e!62724)))

(declare-fun c!16202 () Bool)

(assert (=> d!25371 (= c!16202 e!62726)))

(declare-fun res!48539 () Bool)

(assert (=> d!25371 (=> (not res!48539) (not e!62726))))

(assert (=> d!25371 (= res!48539 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25371 (= lt!48033 e!62720)))

(assert (=> d!25371 (= c!16200 (and (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25371 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25371 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48018)))

(declare-fun bm!9727 () Bool)

(assert (=> bm!9727 (= call!9729 call!9733)))

(declare-fun bm!9728 () Bool)

(assert (=> bm!9728 (= call!9733 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96172 () Bool)

(assert (=> b!96172 (= e!62718 e!62716)))

(declare-fun c!16201 () Bool)

(assert (=> b!96172 (= c!16201 (not (= (bvand (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96173 () Bool)

(assert (=> b!96173 (= e!62719 (= (apply!91 lt!48018 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))

(declare-fun b!96174 () Bool)

(declare-fun lt!48034 () Unit!2849)

(assert (=> b!96174 (= e!62724 lt!48034)))

(declare-fun lt!48013 () ListLongMap!1493)

(assert (=> b!96174 (= lt!48013 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48027 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48027 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48019 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48019 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48025 () Unit!2849)

(assert (=> b!96174 (= lt!48025 (addStillContains!67 lt!48013 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48019))))

(assert (=> b!96174 (contains!783 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48019)))

(declare-fun lt!48029 () Unit!2849)

(assert (=> b!96174 (= lt!48029 lt!48025)))

(declare-fun lt!48030 () ListLongMap!1493)

(assert (=> b!96174 (= lt!48030 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48021 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48021 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48017 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48017 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48014 () Unit!2849)

(assert (=> b!96174 (= lt!48014 (addApplyDifferent!67 lt!48030 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48017))))

(assert (=> b!96174 (= (apply!91 (+!129 lt!48030 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48017) (apply!91 lt!48030 lt!48017))))

(declare-fun lt!48015 () Unit!2849)

(assert (=> b!96174 (= lt!48015 lt!48014)))

(declare-fun lt!48031 () ListLongMap!1493)

(assert (=> b!96174 (= lt!48031 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48024 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48024 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48032 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48032 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48020 () Unit!2849)

(assert (=> b!96174 (= lt!48020 (addApplyDifferent!67 lt!48031 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48032))))

(assert (=> b!96174 (= (apply!91 (+!129 lt!48031 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48032) (apply!91 lt!48031 lt!48032))))

(declare-fun lt!48026 () Unit!2849)

(assert (=> b!96174 (= lt!48026 lt!48020)))

(declare-fun lt!48023 () ListLongMap!1493)

(assert (=> b!96174 (= lt!48023 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48028 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48028 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48022 () (_ BitVec 64))

(assert (=> b!96174 (= lt!48022 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96174 (= lt!48034 (addApplyDifferent!67 lt!48023 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48022))))

(assert (=> b!96174 (= (apply!91 (+!129 lt!48023 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48022) (apply!91 lt!48023 lt!48022))))

(declare-fun bm!9729 () Bool)

(assert (=> bm!9729 (= call!9732 call!9731)))

(declare-fun b!96175 () Bool)

(assert (=> b!96175 (= e!62723 call!9727)))

(declare-fun bm!9730 () Bool)

(assert (=> bm!9730 (= call!9728 (contains!783 lt!48018 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96176 () Bool)

(assert (=> b!96176 (= e!62716 (not call!9730))))

(declare-fun b!96177 () Bool)

(assert (=> b!96177 (= e!62720 (+!129 call!9731 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(declare-fun b!96178 () Bool)

(assert (=> b!96178 (= e!62725 (= (apply!91 lt!48018 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (ite c!16117 (_values!2439 newMap!16) lt!47761))))))

(assert (=> b!96178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25371 c!16200) b!96177))

(assert (= (and d!25371 (not c!16200)) b!96170))

(assert (= (and b!96170 c!16203) b!96159))

(assert (= (and b!96170 (not c!16203)) b!96171))

(assert (= (and b!96171 c!16199) b!96162))

(assert (= (and b!96171 (not c!16199)) b!96175))

(assert (= (or b!96162 b!96175) bm!9724))

(assert (= (or b!96159 bm!9724) bm!9727))

(assert (= (or b!96159 b!96162) bm!9729))

(assert (= (or b!96177 bm!9727) bm!9728))

(assert (= (or b!96177 bm!9729) bm!9726))

(assert (= (and d!25371 res!48539) b!96160))

(assert (= (and d!25371 c!16202) b!96174))

(assert (= (and d!25371 (not c!16202)) b!96169))

(assert (= (and d!25371 res!48535) b!96166))

(assert (= (and b!96166 res!48532) b!96158))

(assert (= (and b!96166 (not res!48537)) b!96161))

(assert (= (and b!96161 res!48534) b!96178))

(assert (= (and b!96166 res!48536) b!96164))

(assert (= (and b!96164 c!16204) b!96168))

(assert (= (and b!96164 (not c!16204)) b!96165))

(assert (= (and b!96168 res!48533) b!96167))

(assert (= (or b!96168 b!96165) bm!9730))

(assert (= (and b!96164 res!48538) b!96172))

(assert (= (and b!96172 c!16201) b!96163))

(assert (= (and b!96172 (not c!16201)) b!96176))

(assert (= (and b!96163 res!48540) b!96173))

(assert (= (or b!96163 b!96176) bm!9725))

(declare-fun b_lambda!4249 () Bool)

(assert (=> (not b_lambda!4249) (not b!96178)))

(assert (=> b!96178 t!5484))

(declare-fun b_and!5877 () Bool)

(assert (= b_and!5873 (and (=> t!5484 result!3225) b_and!5877)))

(assert (=> b!96178 t!5486))

(declare-fun b_and!5879 () Bool)

(assert (= b_and!5875 (and (=> t!5486 result!3227) b_and!5879)))

(declare-fun m!104295 () Bool)

(assert (=> bm!9728 m!104295))

(declare-fun m!104297 () Bool)

(assert (=> b!96178 m!104297))

(assert (=> b!96178 m!103949))

(declare-fun m!104299 () Bool)

(assert (=> b!96178 m!104299))

(assert (=> b!96178 m!103953))

(assert (=> b!96178 m!103953))

(declare-fun m!104301 () Bool)

(assert (=> b!96178 m!104301))

(assert (=> b!96178 m!104297))

(assert (=> b!96178 m!103949))

(declare-fun m!104303 () Bool)

(assert (=> b!96177 m!104303))

(declare-fun m!104305 () Bool)

(assert (=> b!96174 m!104305))

(assert (=> b!96174 m!104295))

(declare-fun m!104307 () Bool)

(assert (=> b!96174 m!104307))

(declare-fun m!104309 () Bool)

(assert (=> b!96174 m!104309))

(declare-fun m!104311 () Bool)

(assert (=> b!96174 m!104311))

(declare-fun m!104313 () Bool)

(assert (=> b!96174 m!104313))

(declare-fun m!104315 () Bool)

(assert (=> b!96174 m!104315))

(declare-fun m!104317 () Bool)

(assert (=> b!96174 m!104317))

(declare-fun m!104319 () Bool)

(assert (=> b!96174 m!104319))

(declare-fun m!104321 () Bool)

(assert (=> b!96174 m!104321))

(declare-fun m!104323 () Bool)

(assert (=> b!96174 m!104323))

(declare-fun m!104325 () Bool)

(assert (=> b!96174 m!104325))

(assert (=> b!96174 m!103953))

(assert (=> b!96174 m!104311))

(assert (=> b!96174 m!104315))

(declare-fun m!104327 () Bool)

(assert (=> b!96174 m!104327))

(declare-fun m!104329 () Bool)

(assert (=> b!96174 m!104329))

(assert (=> b!96174 m!104327))

(declare-fun m!104331 () Bool)

(assert (=> b!96174 m!104331))

(declare-fun m!104333 () Bool)

(assert (=> b!96174 m!104333))

(assert (=> b!96174 m!104319))

(assert (=> b!96160 m!103953))

(assert (=> b!96160 m!103953))

(assert (=> b!96160 m!103989))

(declare-fun m!104335 () Bool)

(assert (=> b!96167 m!104335))

(declare-fun m!104337 () Bool)

(assert (=> bm!9726 m!104337))

(declare-fun m!104339 () Bool)

(assert (=> b!96173 m!104339))

(assert (=> b!96161 m!103953))

(assert (=> b!96161 m!103953))

(declare-fun m!104341 () Bool)

(assert (=> b!96161 m!104341))

(assert (=> b!96158 m!103953))

(assert (=> b!96158 m!103953))

(assert (=> b!96158 m!103989))

(assert (=> d!25371 m!103933))

(declare-fun m!104343 () Bool)

(assert (=> bm!9725 m!104343))

(declare-fun m!104345 () Bool)

(assert (=> bm!9730 m!104345))

(assert (=> bm!9677 d!25371))

(assert (=> d!25277 d!25281))

(declare-fun d!25373 () Bool)

(assert (=> d!25373 (not (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!25373 true))

(declare-fun _$68!88 () Unit!2849)

(assert (=> d!25373 (= (choose!68 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556)) _$68!88)))

(declare-fun bs!3956 () Bool)

(assert (= bs!3956 d!25373))

(assert (=> bs!3956 m!103635))

(assert (=> bs!3956 m!103653))

(assert (=> d!25277 d!25373))

(declare-fun d!25375 () Bool)

(assert (=> d!25375 (= (apply!91 lt!47659 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3957 () Bool)

(assert (= bs!3957 d!25375))

(declare-fun m!104347 () Bool)

(assert (=> bs!3957 m!104347))

(assert (=> bs!3957 m!104347))

(declare-fun m!104349 () Bool)

(assert (=> bs!3957 m!104349))

(assert (=> b!95722 d!25375))

(declare-fun d!25377 () Bool)

(declare-fun e!62728 () Bool)

(assert (=> d!25377 e!62728))

(declare-fun res!48541 () Bool)

(assert (=> d!25377 (=> (not res!48541) (not e!62728))))

(declare-fun lt!48036 () ListLongMap!1493)

(assert (=> d!25377 (= res!48541 (contains!783 lt!48036 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48037 () List!1558)

(assert (=> d!25377 (= lt!48036 (ListLongMap!1494 lt!48037))))

(declare-fun lt!48038 () Unit!2849)

(declare-fun lt!48035 () Unit!2849)

(assert (=> d!25377 (= lt!48038 lt!48035)))

(assert (=> d!25377 (= (getValueByKey!150 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25377 (= lt!48035 (lemmaContainsTupThenGetReturnValue!66 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25377 (= lt!48037 (insertStrictlySorted!69 (toList!762 call!9613) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25377 (= (+!129 call!9613 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48036)))

(declare-fun b!96179 () Bool)

(declare-fun res!48542 () Bool)

(assert (=> b!96179 (=> (not res!48542) (not e!62728))))

(assert (=> b!96179 (= res!48542 (= (getValueByKey!150 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96180 () Bool)

(assert (=> b!96180 (= e!62728 (contains!785 (toList!762 lt!48036) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25377 res!48541) b!96179))

(assert (= (and b!96179 res!48542) b!96180))

(declare-fun m!104351 () Bool)

(assert (=> d!25377 m!104351))

(declare-fun m!104353 () Bool)

(assert (=> d!25377 m!104353))

(declare-fun m!104355 () Bool)

(assert (=> d!25377 m!104355))

(declare-fun m!104357 () Bool)

(assert (=> d!25377 m!104357))

(declare-fun m!104359 () Bool)

(assert (=> b!96179 m!104359))

(declare-fun m!104361 () Bool)

(assert (=> b!96180 m!104361))

(assert (=> b!95732 d!25377))

(declare-fun b!96197 () Bool)

(declare-fun res!48551 () Bool)

(declare-fun e!62737 () Bool)

(assert (=> b!96197 (=> (not res!48551) (not e!62737))))

(declare-fun call!9739 () Bool)

(assert (=> b!96197 (= res!48551 call!9739)))

(declare-fun e!62740 () Bool)

(assert (=> b!96197 (= e!62740 e!62737)))

(declare-fun b!96198 () Bool)

(declare-fun res!48554 () Bool)

(assert (=> b!96198 (=> (not res!48554) (not e!62737))))

(declare-fun lt!48044 () SeekEntryResult!246)

(assert (=> b!96198 (= res!48554 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!48044)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96198 (and (bvsge (index!3129 lt!48044) #b00000000000000000000000000000000) (bvslt (index!3129 lt!48044) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96199 () Bool)

(assert (=> b!96199 (and (bvsge (index!3126 lt!48044) #b00000000000000000000000000000000) (bvslt (index!3126 lt!48044) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48552 () Bool)

(assert (=> b!96199 (= res!48552 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!48044)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62738 () Bool)

(assert (=> b!96199 (=> (not res!48552) (not e!62738))))

(declare-fun bm!9735 () Bool)

(declare-fun call!9738 () Bool)

(assert (=> bm!9735 (= call!9738 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!96200 () Bool)

(declare-fun e!62739 () Bool)

(assert (=> b!96200 (= e!62739 e!62738)))

(declare-fun res!48553 () Bool)

(assert (=> b!96200 (= res!48553 call!9739)))

(assert (=> b!96200 (=> (not res!48553) (not e!62738))))

(declare-fun b!96201 () Bool)

(assert (=> b!96201 (= e!62740 ((_ is Undefined!246) lt!48044))))

(declare-fun b!96202 () Bool)

(assert (=> b!96202 (= e!62738 (not call!9738))))

(declare-fun d!25379 () Bool)

(assert (=> d!25379 e!62739))

(declare-fun c!16210 () Bool)

(assert (=> d!25379 (= c!16210 ((_ is MissingZero!246) lt!48044))))

(assert (=> d!25379 (= lt!48044 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun lt!48043 () Unit!2849)

(declare-fun choose!587 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2849)

(assert (=> d!25379 (= lt!48043 (choose!587 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25379 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25379 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) lt!48043)))

(declare-fun bm!9736 () Bool)

(assert (=> bm!9736 (= call!9739 (inRange!0 (ite c!16210 (index!3126 lt!48044) (index!3129 lt!48044)) (mask!6541 newMap!16)))))

(declare-fun b!96203 () Bool)

(assert (=> b!96203 (= e!62737 (not call!9738))))

(declare-fun b!96204 () Bool)

(assert (=> b!96204 (= e!62739 e!62740)))

(declare-fun c!16209 () Bool)

(assert (=> b!96204 (= c!16209 ((_ is MissingVacant!246) lt!48044))))

(assert (= (and d!25379 c!16210) b!96200))

(assert (= (and d!25379 (not c!16210)) b!96204))

(assert (= (and b!96200 res!48553) b!96199))

(assert (= (and b!96199 res!48552) b!96202))

(assert (= (and b!96204 c!16209) b!96197))

(assert (= (and b!96204 (not c!16209)) b!96201))

(assert (= (and b!96197 res!48551) b!96198))

(assert (= (and b!96198 res!48554) b!96203))

(assert (= (or b!96200 b!96197) bm!9736))

(assert (= (or b!96202 b!96203) bm!9735))

(assert (=> bm!9735 m!103635))

(assert (=> bm!9735 m!103869))

(declare-fun m!104363 () Bool)

(assert (=> b!96199 m!104363))

(assert (=> d!25379 m!103635))

(assert (=> d!25379 m!103847))

(assert (=> d!25379 m!103635))

(declare-fun m!104365 () Bool)

(assert (=> d!25379 m!104365))

(assert (=> d!25379 m!103933))

(declare-fun m!104367 () Bool)

(assert (=> b!96198 m!104367))

(declare-fun m!104369 () Bool)

(assert (=> bm!9736 m!104369))

(assert (=> bm!9662 d!25379))

(assert (=> b!95900 d!25333))

(assert (=> bm!9671 d!25335))

(declare-fun d!25381 () Bool)

(declare-fun res!48559 () Bool)

(declare-fun e!62745 () Bool)

(assert (=> d!25381 (=> res!48559 e!62745)))

(assert (=> d!25381 (= res!48559 (and ((_ is Cons!1554) (toList!762 lt!47565)) (= (_1!1154 (h!2147 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (=> d!25381 (= (containsKey!153 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!62745)))

(declare-fun b!96209 () Bool)

(declare-fun e!62746 () Bool)

(assert (=> b!96209 (= e!62745 e!62746)))

(declare-fun res!48560 () Bool)

(assert (=> b!96209 (=> (not res!48560) (not e!62746))))

(assert (=> b!96209 (= res!48560 (and (or (not ((_ is Cons!1554) (toList!762 lt!47565))) (bvsle (_1!1154 (h!2147 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) ((_ is Cons!1554) (toList!762 lt!47565)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun b!96210 () Bool)

(assert (=> b!96210 (= e!62746 (containsKey!153 (t!5472 (toList!762 lt!47565)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25381 (not res!48559)) b!96209))

(assert (= (and b!96209 res!48560) b!96210))

(assert (=> b!96210 m!103635))

(declare-fun m!104371 () Bool)

(assert (=> b!96210 m!104371))

(assert (=> d!25267 d!25381))

(declare-fun d!25383 () Bool)

(assert (=> d!25383 (= (get!1280 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95874 d!25383))

(declare-fun d!25385 () Bool)

(declare-fun e!62749 () Bool)

(assert (=> d!25385 e!62749))

(declare-fun res!48566 () Bool)

(assert (=> d!25385 (=> (not res!48566) (not e!62749))))

(declare-fun lt!48049 () SeekEntryResult!246)

(assert (=> d!25385 (= res!48566 ((_ is Found!246) lt!48049))))

(assert (=> d!25385 (= lt!48049 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun lt!48050 () Unit!2849)

(declare-fun choose!588 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) Int) Unit!2849)

(assert (=> d!25385 (= lt!48050 (choose!588 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25385 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25385 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) lt!48050)))

(declare-fun b!96215 () Bool)

(declare-fun res!48565 () Bool)

(assert (=> b!96215 (=> (not res!48565) (not e!62749))))

(assert (=> b!96215 (= res!48565 (inRange!0 (index!3127 lt!48049) (mask!6541 newMap!16)))))

(declare-fun b!96216 () Bool)

(assert (=> b!96216 (= e!62749 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!48049)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!96216 (and (bvsge (index!3127 lt!48049) #b00000000000000000000000000000000) (bvslt (index!3127 lt!48049) (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25385 res!48566) b!96215))

(assert (= (and b!96215 res!48565) b!96216))

(assert (=> d!25385 m!103635))

(assert (=> d!25385 m!103847))

(assert (=> d!25385 m!103635))

(declare-fun m!104373 () Bool)

(assert (=> d!25385 m!104373))

(assert (=> d!25385 m!103933))

(declare-fun m!104375 () Bool)

(assert (=> b!96215 m!104375))

(declare-fun m!104377 () Bool)

(assert (=> b!96216 m!104377))

(assert (=> bm!9665 d!25385))

(declare-fun d!25387 () Bool)

(assert (=> d!25387 (= (map!1246 (_2!1155 lt!47762)) (getCurrentListMap!452 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun bs!3958 () Bool)

(assert (= bs!3958 d!25387))

(declare-fun m!104379 () Bool)

(assert (=> bs!3958 m!104379))

(assert (=> bm!9680 d!25387))

(declare-fun b!96228 () Bool)

(declare-fun e!62752 () Bool)

(assert (=> b!96228 (= e!62752 (and (bvsge (extraKeys!2281 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!468 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!96227 () Bool)

(declare-fun res!48578 () Bool)

(assert (=> b!96227 (=> (not res!48578) (not e!62752))))

(declare-fun size!2249 (LongMapFixedSize!838) (_ BitVec 32))

(assert (=> b!96227 (= res!48578 (= (size!2249 newMap!16) (bvadd (_size!468 newMap!16) (bvsdiv (bvadd (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!25389 () Bool)

(declare-fun res!48575 () Bool)

(assert (=> d!25389 (=> (not res!48575) (not e!62752))))

(assert (=> d!25389 (= res!48575 (validMask!0 (mask!6541 newMap!16)))))

(assert (=> d!25389 (= (simpleValid!67 newMap!16) e!62752)))

(declare-fun b!96225 () Bool)

(declare-fun res!48577 () Bool)

(assert (=> b!96225 (=> (not res!48577) (not e!62752))))

(assert (=> b!96225 (= res!48577 (and (= (size!2244 (_values!2439 newMap!16)) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001)) (= (size!2243 (_keys!4142 newMap!16)) (size!2244 (_values!2439 newMap!16))) (bvsge (_size!468 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!468 newMap!16) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!96226 () Bool)

(declare-fun res!48576 () Bool)

(assert (=> b!96226 (=> (not res!48576) (not e!62752))))

(assert (=> b!96226 (= res!48576 (bvsge (size!2249 newMap!16) (_size!468 newMap!16)))))

(assert (= (and d!25389 res!48575) b!96225))

(assert (= (and b!96225 res!48577) b!96226))

(assert (= (and b!96226 res!48576) b!96227))

(assert (= (and b!96227 res!48578) b!96228))

(declare-fun m!104381 () Bool)

(assert (=> b!96227 m!104381))

(assert (=> d!25389 m!103933))

(assert (=> b!96226 m!104381))

(assert (=> d!25259 d!25389))

(declare-fun d!25391 () Bool)

(assert (=> d!25391 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48053 () Unit!2849)

(declare-fun choose!589 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 V!3137 Int) Unit!2849)

(assert (=> d!25391 (= lt!48053 (choose!589 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25391 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25391 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!40 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!48053)))

(declare-fun bs!3959 () Bool)

(assert (= bs!3959 d!25391))

(assert (=> bs!3959 m!103633))

(declare-fun m!104383 () Bool)

(assert (=> bs!3959 m!104383))

(assert (=> bs!3959 m!103769))

(declare-fun m!104385 () Bool)

(assert (=> bs!3959 m!104385))

(assert (=> bs!3959 m!103633))

(declare-fun m!104387 () Bool)

(assert (=> bs!3959 m!104387))

(assert (=> bs!3959 m!103933))

(assert (=> bs!3959 m!103769))

(assert (=> b!95858 d!25391))

(assert (=> bm!9610 d!25355))

(assert (=> d!25265 d!25261))

(assert (=> d!25279 d!25285))

(declare-fun d!25393 () Bool)

(assert (=> d!25393 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) from!355 Nil!1556)))

(assert (=> d!25393 true))

(declare-fun _$71!129 () Unit!2849)

(assert (=> d!25393 (= (choose!39 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!129)))

(declare-fun bs!3960 () Bool)

(assert (= bs!3960 d!25393))

(assert (=> bs!3960 m!103649))

(assert (=> d!25279 d!25393))

(assert (=> b!95885 d!25281))

(declare-fun d!25395 () Bool)

(declare-fun e!62753 () Bool)

(assert (=> d!25395 e!62753))

(declare-fun res!48579 () Bool)

(assert (=> d!25395 (=> (not res!48579) (not e!62753))))

(declare-fun lt!48055 () ListLongMap!1493)

(assert (=> d!25395 (= res!48579 (contains!783 lt!48055 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48056 () List!1558)

(assert (=> d!25395 (= lt!48055 (ListLongMap!1494 lt!48056))))

(declare-fun lt!48057 () Unit!2849)

(declare-fun lt!48054 () Unit!2849)

(assert (=> d!25395 (= lt!48057 lt!48054)))

(assert (=> d!25395 (= (getValueByKey!150 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25395 (= lt!48054 (lemmaContainsTupThenGetReturnValue!66 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25395 (= lt!48056 (insertStrictlySorted!69 (toList!762 call!9676) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25395 (= (+!129 call!9676 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48055)))

(declare-fun b!96229 () Bool)

(declare-fun res!48580 () Bool)

(assert (=> b!96229 (=> (not res!48580) (not e!62753))))

(assert (=> b!96229 (= res!48580 (= (getValueByKey!150 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96230 () Bool)

(assert (=> b!96230 (= e!62753 (contains!785 (toList!762 lt!48055) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25395 res!48579) b!96229))

(assert (= (and b!96229 res!48580) b!96230))

(declare-fun m!104389 () Bool)

(assert (=> d!25395 m!104389))

(declare-fun m!104391 () Bool)

(assert (=> d!25395 m!104391))

(declare-fun m!104393 () Bool)

(assert (=> d!25395 m!104393))

(declare-fun m!104395 () Bool)

(assert (=> d!25395 m!104395))

(declare-fun m!104397 () Bool)

(assert (=> b!96229 m!104397))

(declare-fun m!104399 () Bool)

(assert (=> b!96230 m!104399))

(assert (=> b!95848 d!25395))

(declare-fun d!25397 () Bool)

(declare-fun res!48581 () Bool)

(declare-fun e!62754 () Bool)

(assert (=> d!25397 (=> (not res!48581) (not e!62754))))

(assert (=> d!25397 (= res!48581 (simpleValid!67 (v!2780 (underlying!333 thiss!992))))))

(assert (=> d!25397 (= (valid!387 (v!2780 (underlying!333 thiss!992))) e!62754)))

(declare-fun b!96231 () Bool)

(declare-fun res!48582 () Bool)

(assert (=> b!96231 (=> (not res!48582) (not e!62754))))

(assert (=> b!96231 (= res!48582 (= (arrayCountValidKeys!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))) (_size!468 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!96232 () Bool)

(declare-fun res!48583 () Bool)

(assert (=> b!96232 (=> (not res!48583) (not e!62754))))

(assert (=> b!96232 (= res!48583 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun b!96233 () Bool)

(assert (=> b!96233 (= e!62754 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 Nil!1556))))

(assert (= (and d!25397 res!48581) b!96231))

(assert (= (and b!96231 res!48582) b!96232))

(assert (= (and b!96232 res!48583) b!96233))

(declare-fun m!104401 () Bool)

(assert (=> d!25397 m!104401))

(declare-fun m!104403 () Bool)

(assert (=> b!96231 m!104403))

(declare-fun m!104405 () Bool)

(assert (=> b!96232 m!104405))

(declare-fun m!104407 () Bool)

(assert (=> b!96233 m!104407))

(assert (=> d!25253 d!25397))

(declare-fun d!25399 () Bool)

(declare-fun e!62755 () Bool)

(assert (=> d!25399 e!62755))

(declare-fun res!48584 () Bool)

(assert (=> d!25399 (=> (not res!48584) (not e!62755))))

(declare-fun lt!48059 () ListLongMap!1493)

(assert (=> d!25399 (= res!48584 (contains!783 lt!48059 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun lt!48060 () List!1558)

(assert (=> d!25399 (= lt!48059 (ListLongMap!1494 lt!48060))))

(declare-fun lt!48061 () Unit!2849)

(declare-fun lt!48058 () Unit!2849)

(assert (=> d!25399 (= lt!48061 lt!48058)))

(assert (=> d!25399 (= (getValueByKey!150 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (Some!155 (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25399 (= lt!48058 (lemmaContainsTupThenGetReturnValue!66 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25399 (= lt!48060 (insertStrictlySorted!69 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25399 (= (+!129 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48059)))

(declare-fun b!96234 () Bool)

(declare-fun res!48585 () Bool)

(assert (=> b!96234 (=> (not res!48585) (not e!62755))))

(assert (=> b!96234 (= res!48585 (= (getValueByKey!150 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (Some!155 (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun b!96235 () Bool)

(assert (=> b!96235 (= e!62755 (contains!785 (toList!762 lt!48059) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (= (and d!25399 res!48584) b!96234))

(assert (= (and b!96234 res!48585) b!96235))

(declare-fun m!104409 () Bool)

(assert (=> d!25399 m!104409))

(declare-fun m!104411 () Bool)

(assert (=> d!25399 m!104411))

(declare-fun m!104413 () Bool)

(assert (=> d!25399 m!104413))

(declare-fun m!104415 () Bool)

(assert (=> d!25399 m!104415))

(declare-fun m!104417 () Bool)

(assert (=> b!96234 m!104417))

(declare-fun m!104419 () Bool)

(assert (=> b!96235 m!104419))

(assert (=> bm!9608 d!25399))

(declare-fun d!25401 () Bool)

(declare-fun res!48586 () Bool)

(declare-fun e!62758 () Bool)

(assert (=> d!25401 (=> res!48586 e!62758)))

(assert (=> d!25401 (= res!48586 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25401 (= (arrayNoDuplicates!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 Nil!1556) e!62758)))

(declare-fun b!96236 () Bool)

(declare-fun e!62759 () Bool)

(declare-fun call!9740 () Bool)

(assert (=> b!96236 (= e!62759 call!9740)))

(declare-fun b!96237 () Bool)

(declare-fun e!62756 () Bool)

(assert (=> b!96237 (= e!62758 e!62756)))

(declare-fun res!48588 () Bool)

(assert (=> b!96237 (=> (not res!48588) (not e!62756))))

(declare-fun e!62757 () Bool)

(assert (=> b!96237 (= res!48588 (not e!62757))))

(declare-fun res!48587 () Bool)

(assert (=> b!96237 (=> (not res!48587) (not e!62757))))

(assert (=> b!96237 (= res!48587 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96238 () Bool)

(assert (=> b!96238 (= e!62759 call!9740)))

(declare-fun bm!9737 () Bool)

(declare-fun c!16211 () Bool)

(assert (=> bm!9737 (= call!9740 (arrayNoDuplicates!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16211 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) Nil!1556) Nil!1556)))))

(declare-fun b!96239 () Bool)

(assert (=> b!96239 (= e!62756 e!62759)))

(assert (=> b!96239 (= c!16211 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96240 () Bool)

(assert (=> b!96240 (= e!62757 (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25401 (not res!48586)) b!96237))

(assert (= (and b!96237 res!48587) b!96240))

(assert (= (and b!96237 res!48588) b!96239))

(assert (= (and b!96239 c!16211) b!96236))

(assert (= (and b!96239 (not c!16211)) b!96238))

(assert (= (or b!96236 b!96238) bm!9737))

(assert (=> b!96237 m!103953))

(assert (=> b!96237 m!103953))

(assert (=> b!96237 m!103989))

(assert (=> bm!9737 m!103953))

(declare-fun m!104421 () Bool)

(assert (=> bm!9737 m!104421))

(assert (=> b!96239 m!103953))

(assert (=> b!96239 m!103953))

(assert (=> b!96239 m!103989))

(assert (=> b!96240 m!103953))

(assert (=> b!96240 m!103953))

(declare-fun m!104423 () Bool)

(assert (=> b!96240 m!104423))

(assert (=> b!95670 d!25401))

(declare-fun d!25403 () Bool)

(declare-fun e!62760 () Bool)

(assert (=> d!25403 e!62760))

(declare-fun res!48589 () Bool)

(assert (=> d!25403 (=> res!48589 e!62760)))

(declare-fun lt!48064 () Bool)

(assert (=> d!25403 (= res!48589 (not lt!48064))))

(declare-fun lt!48065 () Bool)

(assert (=> d!25403 (= lt!48064 lt!48065)))

(declare-fun lt!48063 () Unit!2849)

(declare-fun e!62761 () Unit!2849)

(assert (=> d!25403 (= lt!48063 e!62761)))

(declare-fun c!16212 () Bool)

(assert (=> d!25403 (= c!16212 lt!48065)))

(assert (=> d!25403 (= lt!48065 (containsKey!153 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(assert (=> d!25403 (= (contains!783 e!62523 (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))) lt!48064)))

(declare-fun b!96241 () Bool)

(declare-fun lt!48062 () Unit!2849)

(assert (=> b!96241 (= e!62761 lt!48062)))

(assert (=> b!96241 (= lt!48062 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(assert (=> b!96241 (isDefined!102 (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(declare-fun b!96242 () Bool)

(declare-fun Unit!2869 () Unit!2849)

(assert (=> b!96242 (= e!62761 Unit!2869)))

(declare-fun b!96243 () Bool)

(assert (=> b!96243 (= e!62760 (isDefined!102 (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))))

(assert (= (and d!25403 c!16212) b!96241))

(assert (= (and d!25403 (not c!16212)) b!96242))

(assert (= (and d!25403 (not res!48589)) b!96243))

(declare-fun m!104425 () Bool)

(assert (=> d!25403 m!104425))

(declare-fun m!104427 () Bool)

(assert (=> b!96241 m!104427))

(declare-fun m!104429 () Bool)

(assert (=> b!96241 m!104429))

(assert (=> b!96241 m!104429))

(declare-fun m!104431 () Bool)

(assert (=> b!96241 m!104431))

(assert (=> b!96243 m!104429))

(assert (=> b!96243 m!104429))

(assert (=> b!96243 m!104431))

(assert (=> bm!9678 d!25403))

(declare-fun d!25405 () Bool)

(declare-fun e!62762 () Bool)

(assert (=> d!25405 e!62762))

(declare-fun res!48590 () Bool)

(assert (=> d!25405 (=> res!48590 e!62762)))

(declare-fun lt!48068 () Bool)

(assert (=> d!25405 (= res!48590 (not lt!48068))))

(declare-fun lt!48069 () Bool)

(assert (=> d!25405 (= lt!48068 lt!48069)))

(declare-fun lt!48067 () Unit!2849)

(declare-fun e!62763 () Unit!2849)

(assert (=> d!25405 (= lt!48067 e!62763)))

(declare-fun c!16213 () Bool)

(assert (=> d!25405 (= c!16213 lt!48069)))

(assert (=> d!25405 (= lt!48069 (containsKey!153 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25405 (= (contains!783 lt!47659 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48068)))

(declare-fun b!96244 () Bool)

(declare-fun lt!48066 () Unit!2849)

(assert (=> b!96244 (= e!62763 lt!48066)))

(assert (=> b!96244 (= lt!48066 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96244 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96245 () Bool)

(declare-fun Unit!2870 () Unit!2849)

(assert (=> b!96245 (= e!62763 Unit!2870)))

(declare-fun b!96246 () Bool)

(assert (=> b!96246 (= e!62762 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25405 c!16213) b!96244))

(assert (= (and d!25405 (not c!16213)) b!96245))

(assert (= (and d!25405 (not res!48590)) b!96246))

(declare-fun m!104433 () Bool)

(assert (=> d!25405 m!104433))

(declare-fun m!104435 () Bool)

(assert (=> b!96244 m!104435))

(assert (=> b!96244 m!104347))

(assert (=> b!96244 m!104347))

(declare-fun m!104437 () Bool)

(assert (=> b!96244 m!104437))

(assert (=> b!96246 m!104347))

(assert (=> b!96246 m!104347))

(assert (=> b!96246 m!104437))

(assert (=> bm!9612 d!25405))

(declare-fun d!25407 () Bool)

(declare-fun e!62764 () Bool)

(assert (=> d!25407 e!62764))

(declare-fun res!48591 () Bool)

(assert (=> d!25407 (=> res!48591 e!62764)))

(declare-fun lt!48072 () Bool)

(assert (=> d!25407 (= res!48591 (not lt!48072))))

(declare-fun lt!48073 () Bool)

(assert (=> d!25407 (= lt!48072 lt!48073)))

(declare-fun lt!48071 () Unit!2849)

(declare-fun e!62765 () Unit!2849)

(assert (=> d!25407 (= lt!48071 e!62765)))

(declare-fun c!16214 () Bool)

(assert (=> d!25407 (= c!16214 lt!48073)))

(assert (=> d!25407 (= lt!48073 (containsKey!153 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25407 (= (contains!783 call!9677 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!48072)))

(declare-fun b!96247 () Bool)

(declare-fun lt!48070 () Unit!2849)

(assert (=> b!96247 (= e!62765 lt!48070)))

(assert (=> b!96247 (= lt!48070 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!96247 (isDefined!102 (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96248 () Bool)

(declare-fun Unit!2871 () Unit!2849)

(assert (=> b!96248 (= e!62765 Unit!2871)))

(declare-fun b!96249 () Bool)

(assert (=> b!96249 (= e!62764 (isDefined!102 (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (= (and d!25407 c!16214) b!96247))

(assert (= (and d!25407 (not c!16214)) b!96248))

(assert (= (and d!25407 (not res!48591)) b!96249))

(assert (=> d!25407 m!103635))

(declare-fun m!104439 () Bool)

(assert (=> d!25407 m!104439))

(assert (=> b!96247 m!103635))

(declare-fun m!104441 () Bool)

(assert (=> b!96247 m!104441))

(assert (=> b!96247 m!103635))

(declare-fun m!104443 () Bool)

(assert (=> b!96247 m!104443))

(assert (=> b!96247 m!104443))

(declare-fun m!104445 () Bool)

(assert (=> b!96247 m!104445))

(assert (=> b!96249 m!103635))

(assert (=> b!96249 m!104443))

(assert (=> b!96249 m!104443))

(assert (=> b!96249 m!104445))

(assert (=> b!95867 d!25407))

(declare-fun d!25409 () Bool)

(declare-fun e!62766 () Bool)

(assert (=> d!25409 e!62766))

(declare-fun res!48592 () Bool)

(assert (=> d!25409 (=> res!48592 e!62766)))

(declare-fun lt!48076 () Bool)

(assert (=> d!25409 (= res!48592 (not lt!48076))))

(declare-fun lt!48077 () Bool)

(assert (=> d!25409 (= lt!48076 lt!48077)))

(declare-fun lt!48075 () Unit!2849)

(declare-fun e!62767 () Unit!2849)

(assert (=> d!25409 (= lt!48075 e!62767)))

(declare-fun c!16215 () Bool)

(assert (=> d!25409 (= c!16215 lt!48077)))

(assert (=> d!25409 (= lt!48077 (containsKey!153 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!25409 (= (contains!783 lt!47659 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48076)))

(declare-fun b!96250 () Bool)

(declare-fun lt!48074 () Unit!2849)

(assert (=> b!96250 (= e!62767 lt!48074)))

(assert (=> b!96250 (= lt!48074 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96250 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!96251 () Bool)

(declare-fun Unit!2872 () Unit!2849)

(assert (=> b!96251 (= e!62767 Unit!2872)))

(declare-fun b!96252 () Bool)

(assert (=> b!96252 (= e!62766 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!25409 c!16215) b!96250))

(assert (= (and d!25409 (not c!16215)) b!96251))

(assert (= (and d!25409 (not res!48592)) b!96252))

(assert (=> d!25409 m!103777))

(declare-fun m!104447 () Bool)

(assert (=> d!25409 m!104447))

(assert (=> b!96250 m!103777))

(declare-fun m!104449 () Bool)

(assert (=> b!96250 m!104449))

(assert (=> b!96250 m!103777))

(assert (=> b!96250 m!103937))

(assert (=> b!96250 m!103937))

(declare-fun m!104451 () Bool)

(assert (=> b!96250 m!104451))

(assert (=> b!96252 m!103777))

(assert (=> b!96252 m!103937))

(assert (=> b!96252 m!103937))

(assert (=> b!96252 m!104451))

(assert (=> b!95716 d!25409))

(declare-fun d!25411 () Bool)

(declare-fun e!62768 () Bool)

(assert (=> d!25411 e!62768))

(declare-fun res!48593 () Bool)

(assert (=> d!25411 (=> (not res!48593) (not e!62768))))

(declare-fun lt!48079 () ListLongMap!1493)

(assert (=> d!25411 (= res!48593 (contains!783 lt!48079 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!48080 () List!1558)

(assert (=> d!25411 (= lt!48079 (ListLongMap!1494 lt!48080))))

(declare-fun lt!48081 () Unit!2849)

(declare-fun lt!48078 () Unit!2849)

(assert (=> d!25411 (= lt!48081 lt!48078)))

(assert (=> d!25411 (= (getValueByKey!150 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!155 (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25411 (= lt!48078 (lemmaContainsTupThenGetReturnValue!66 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25411 (= lt!48080 (insertStrictlySorted!69 (toList!762 e!62524) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25411 (= (+!129 e!62524 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48079)))

(declare-fun b!96253 () Bool)

(declare-fun res!48594 () Bool)

(assert (=> b!96253 (=> (not res!48594) (not e!62768))))

(assert (=> b!96253 (= res!48594 (= (getValueByKey!150 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!155 (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!96254 () Bool)

(assert (=> b!96254 (= e!62768 (contains!785 (toList!762 lt!48079) (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25411 res!48593) b!96253))

(assert (= (and b!96253 res!48594) b!96254))

(declare-fun m!104453 () Bool)

(assert (=> d!25411 m!104453))

(declare-fun m!104455 () Bool)

(assert (=> d!25411 m!104455))

(declare-fun m!104457 () Bool)

(assert (=> d!25411 m!104457))

(declare-fun m!104459 () Bool)

(assert (=> d!25411 m!104459))

(declare-fun m!104461 () Bool)

(assert (=> b!96253 m!104461))

(declare-fun m!104463 () Bool)

(assert (=> b!96254 m!104463))

(assert (=> bm!9676 d!25411))

(declare-fun d!25413 () Bool)

(assert (=> d!25413 (= (apply!91 lt!47659 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3961 () Bool)

(assert (= bs!3961 d!25413))

(assert (=> bs!3961 m!104007))

(assert (=> bs!3961 m!104007))

(declare-fun m!104465 () Bool)

(assert (=> bs!3961 m!104465))

(assert (=> b!95728 d!25413))

(assert (=> bm!9683 d!25263))

(declare-fun condMapEmpty!3713 () Bool)

(declare-fun mapDefault!3713 () ValueCell!965)

(assert (=> mapNonEmpty!3712 (= condMapEmpty!3713 (= mapRest!3712 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3713)))))

(declare-fun e!62769 () Bool)

(declare-fun mapRes!3713 () Bool)

(assert (=> mapNonEmpty!3712 (= tp!9508 (and e!62769 mapRes!3713))))

(declare-fun mapIsEmpty!3713 () Bool)

(assert (=> mapIsEmpty!3713 mapRes!3713))

(declare-fun b!96256 () Bool)

(assert (=> b!96256 (= e!62769 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3713 () Bool)

(declare-fun tp!9509 () Bool)

(declare-fun e!62770 () Bool)

(assert (=> mapNonEmpty!3713 (= mapRes!3713 (and tp!9509 e!62770))))

(declare-fun mapRest!3713 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3713 () ValueCell!965)

(declare-fun mapKey!3713 () (_ BitVec 32))

(assert (=> mapNonEmpty!3713 (= mapRest!3712 (store mapRest!3713 mapKey!3713 mapValue!3713))))

(declare-fun b!96255 () Bool)

(assert (=> b!96255 (= e!62770 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3712 condMapEmpty!3713) mapIsEmpty!3713))

(assert (= (and mapNonEmpty!3712 (not condMapEmpty!3713)) mapNonEmpty!3713))

(assert (= (and mapNonEmpty!3713 ((_ is ValueCellFull!965) mapValue!3713)) b!96255))

(assert (= (and mapNonEmpty!3712 ((_ is ValueCellFull!965) mapDefault!3713)) b!96256))

(declare-fun m!104467 () Bool)

(assert (=> mapNonEmpty!3713 m!104467))

(declare-fun condMapEmpty!3714 () Bool)

(declare-fun mapDefault!3714 () ValueCell!965)

(assert (=> mapNonEmpty!3711 (= condMapEmpty!3714 (= mapRest!3711 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3714)))))

(declare-fun e!62771 () Bool)

(declare-fun mapRes!3714 () Bool)

(assert (=> mapNonEmpty!3711 (= tp!9507 (and e!62771 mapRes!3714))))

(declare-fun mapIsEmpty!3714 () Bool)

(assert (=> mapIsEmpty!3714 mapRes!3714))

(declare-fun b!96258 () Bool)

(assert (=> b!96258 (= e!62771 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3714 () Bool)

(declare-fun tp!9510 () Bool)

(declare-fun e!62772 () Bool)

(assert (=> mapNonEmpty!3714 (= mapRes!3714 (and tp!9510 e!62772))))

(declare-fun mapKey!3714 () (_ BitVec 32))

(declare-fun mapRest!3714 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3714 () ValueCell!965)

(assert (=> mapNonEmpty!3714 (= mapRest!3711 (store mapRest!3714 mapKey!3714 mapValue!3714))))

(declare-fun b!96257 () Bool)

(assert (=> b!96257 (= e!62772 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3711 condMapEmpty!3714) mapIsEmpty!3714))

(assert (= (and mapNonEmpty!3711 (not condMapEmpty!3714)) mapNonEmpty!3714))

(assert (= (and mapNonEmpty!3714 ((_ is ValueCellFull!965) mapValue!3714)) b!96257))

(assert (= (and mapNonEmpty!3711 ((_ is ValueCellFull!965) mapDefault!3714)) b!96258))

(declare-fun m!104469 () Bool)

(assert (=> mapNonEmpty!3714 m!104469))

(declare-fun b_lambda!4251 () Bool)

(assert (= b_lambda!4249 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4251)))

(declare-fun b_lambda!4253 () Bool)

(assert (= b_lambda!4245 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4253)))

(declare-fun b_lambda!4255 () Bool)

(assert (= b_lambda!4247 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4255)))

(declare-fun b_lambda!4257 () Bool)

(assert (= b_lambda!4243 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4257)))

(declare-fun b_lambda!4259 () Bool)

(assert (= b_lambda!4241 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4259)))

(check-sat (not b!96210) (not d!25313) (not bm!9698) (not b!95965) (not d!25375) (not b!95924) (not d!25311) (not d!25295) (not b!96048) (not d!25377) (not b!95952) (not mapNonEmpty!3714) (not b!96243) (not b!96028) (not b!96232) (not b!95998) (not bm!9720) (not b!95975) (not d!25339) (not b!96092) (not bm!9726) (not b!96249) (not bm!9693) (not b!96143) (not b!95995) (not b!96064) (not d!25341) (not b_lambda!4255) (not b!96227) (not b!95974) (not b!96244) (not b!95971) (not b!96004) (not d!25343) (not d!25299) (not b!95954) (not d!25317) (not b!95917) (not d!25411) (not d!25337) (not b!96146) (not b!96027) (not b!96178) (not d!25389) (not b!95946) (not b!96091) (not b!96096) (not b!96179) (not b!96229) (not bm!9703) (not d!25355) (not d!25315) (not b!96254) (not bm!9705) (not d!25395) (not b!96230) (not mapNonEmpty!3713) (not b!96049) (not d!25371) (not bm!9722) (not d!25345) (not d!25349) (not b!96154) b_and!5877 (not b!95988) (not d!25387) (not b!95927) (not b!96240) (not b!96252) (not d!25409) (not b!96015) (not d!25357) b_and!5879 (not d!25353) (not d!25305) (not d!25405) (not b!96060) (not b!95999) (not bm!9688) (not d!25361) (not b!96177) (not b_lambda!4253) (not b!96180) (not b!96231) (not d!25407) (not b!96247) (not bm!9700) (not b!96100) (not b!95992) (not bm!9725) (not d!25365) (not b_lambda!4257) (not b!96093) (not b!95991) (not b!96090) (not b!95970) (not bm!9690) (not b!95972) (not b!96239) (not d!25351) (not b_lambda!4239) (not d!25321) (not b!96160) (not b!96062) (not b!96215) (not b!95919) (not b!95956) (not bm!9735) (not b_lambda!4235) (not b!95942) (not bm!9691) (not b!96167) (not b!96051) (not b!96065) (not b!96234) (not b!96250) (not b_lambda!4251) (not b!96226) (not b!95923) (not d!25335) (not d!25399) (not d!25323) (not b!95930) (not d!25393) (not d!25379) (not d!25413) (not b!95969) (not b!96237) (not b!96149) (not b!96103) (not d!25293) (not b!95943) (not b!96246) (not b!96174) (not bm!9737) (not b!96061) (not b!96161) (not b!95926) tp_is_empty!2617 (not bm!9730) (not d!25369) (not b_next!2401) (not b!96030) (not d!25363) (not bm!9711) (not bm!9701) (not b!96235) (not b!95921) (not bm!9723) (not b!96173) (not b!95987) (not bm!9728) (not d!25391) (not d!25359) (not b!96101) (not bm!9736) (not b!95929) (not b!96233) (not d!25403) (not b_next!2403) (not b!95947) (not d!25397) (not b!96241) (not bm!9708) (not d!25287) (not b!95936) (not b!96156) (not b!96150) (not b!96063) (not b_lambda!4259) (not bm!9695) (not d!25385) (not b!96102) (not d!25373) (not d!25309) (not b!96095) (not b!96253) (not d!25347) (not b!95925) (not d!25367) (not b!96158) (not b!96001) (not b!95981))
(check-sat b_and!5877 b_and!5879 (not b_next!2401) (not b_next!2403))
(get-model)

(declare-fun d!25415 () Bool)

(declare-fun e!62773 () Bool)

(assert (=> d!25415 e!62773))

(declare-fun res!48595 () Bool)

(assert (=> d!25415 (=> (not res!48595) (not e!62773))))

(declare-fun lt!48083 () ListLongMap!1493)

(assert (=> d!25415 (= res!48595 (contains!783 lt!48083 (_1!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48084 () List!1558)

(assert (=> d!25415 (= lt!48083 (ListLongMap!1494 lt!48084))))

(declare-fun lt!48085 () Unit!2849)

(declare-fun lt!48082 () Unit!2849)

(assert (=> d!25415 (= lt!48085 lt!48082)))

(assert (=> d!25415 (= (getValueByKey!150 lt!48084 (_1!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25415 (= lt!48082 (lemmaContainsTupThenGetReturnValue!66 lt!48084 (_1!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25415 (= lt!48084 (insertStrictlySorted!69 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25415 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48083)))

(declare-fun b!96259 () Bool)

(declare-fun res!48596 () Bool)

(assert (=> b!96259 (=> (not res!48596) (not e!62773))))

(assert (=> b!96259 (= res!48596 (= (getValueByKey!150 (toList!762 lt!48083) (_1!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96260 () Bool)

(assert (=> b!96260 (= e!62773 (contains!785 (toList!762 lt!48083) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25415 res!48595) b!96259))

(assert (= (and b!96259 res!48596) b!96260))

(declare-fun m!104471 () Bool)

(assert (=> d!25415 m!104471))

(declare-fun m!104473 () Bool)

(assert (=> d!25415 m!104473))

(declare-fun m!104475 () Bool)

(assert (=> d!25415 m!104475))

(declare-fun m!104477 () Bool)

(assert (=> d!25415 m!104477))

(declare-fun m!104479 () Bool)

(assert (=> b!96259 m!104479))

(declare-fun m!104481 () Bool)

(assert (=> b!96260 m!104481))

(assert (=> d!25293 d!25415))

(assert (=> d!25293 d!25311))

(declare-fun d!25417 () Bool)

(assert (=> d!25417 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25417 true))

(declare-fun _$7!80 () Unit!2849)

(assert (=> d!25417 (= (choose!581 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47743 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) (defaultEntry!2456 newMap!16)) _$7!80)))

(declare-fun bs!3962 () Bool)

(assert (= bs!3962 d!25417))

(assert (=> bs!3962 m!103769))

(assert (=> bs!3962 m!103769))

(assert (=> bs!3962 m!103935))

(assert (=> bs!3962 m!103633))

(assert (=> bs!3962 m!103931))

(assert (=> d!25293 d!25417))

(declare-fun b!96261 () Bool)

(declare-fun e!62786 () Bool)

(assert (=> b!96261 (= e!62786 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96262 () Bool)

(declare-fun e!62774 () ListLongMap!1493)

(declare-fun call!9746 () ListLongMap!1493)

(assert (=> b!96262 (= e!62774 call!9746)))

(declare-fun b!96263 () Bool)

(declare-fun e!62785 () Bool)

(assert (=> b!96263 (= e!62785 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96264 () Bool)

(declare-fun e!62780 () Bool)

(declare-fun e!62784 () Bool)

(assert (=> b!96264 (= e!62780 e!62784)))

(declare-fun res!48599 () Bool)

(assert (=> b!96264 (=> (not res!48599) (not e!62784))))

(declare-fun lt!48091 () ListLongMap!1493)

(assert (=> b!96264 (= res!48599 (contains!783 lt!48091 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96265 () Bool)

(declare-fun e!62782 () ListLongMap!1493)

(assert (=> b!96265 (= e!62782 call!9746)))

(declare-fun b!96266 () Bool)

(declare-fun e!62775 () Bool)

(declare-fun e!62778 () Bool)

(assert (=> b!96266 (= e!62775 e!62778)))

(declare-fun res!48605 () Bool)

(declare-fun call!9744 () Bool)

(assert (=> b!96266 (= res!48605 call!9744)))

(assert (=> b!96266 (=> (not res!48605) (not e!62778))))

(declare-fun b!96267 () Bool)

(declare-fun res!48603 () Bool)

(declare-fun e!62777 () Bool)

(assert (=> b!96267 (=> (not res!48603) (not e!62777))))

(declare-fun e!62776 () Bool)

(assert (=> b!96267 (= res!48603 e!62776)))

(declare-fun c!16221 () Bool)

(assert (=> b!96267 (= c!16221 (not (= (bvand lt!47743 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96269 () Bool)

(declare-fun res!48601 () Bool)

(assert (=> b!96269 (=> (not res!48601) (not e!62777))))

(assert (=> b!96269 (= res!48601 e!62780)))

(declare-fun res!48602 () Bool)

(assert (=> b!96269 (=> res!48602 e!62780)))

(assert (=> b!96269 (= res!48602 (not e!62786))))

(declare-fun res!48597 () Bool)

(assert (=> b!96269 (=> (not res!48597) (not e!62786))))

(assert (=> b!96269 (= res!48597 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun e!62781 () Bool)

(declare-fun b!96270 () Bool)

(assert (=> b!96270 (= e!62781 (= (apply!91 lt!48091 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!9738 () Bool)

(declare-fun call!9741 () ListLongMap!1493)

(declare-fun call!9743 () ListLongMap!1493)

(assert (=> bm!9738 (= call!9741 call!9743)))

(declare-fun b!96271 () Bool)

(assert (=> b!96271 (= e!62776 e!62781)))

(declare-fun res!48598 () Bool)

(declare-fun call!9742 () Bool)

(assert (=> b!96271 (= res!48598 call!9742)))

(assert (=> b!96271 (=> (not res!48598) (not e!62781))))

(declare-fun b!96272 () Bool)

(declare-fun e!62783 () Unit!2849)

(declare-fun Unit!2873 () Unit!2849)

(assert (=> b!96272 (= e!62783 Unit!2873)))

(declare-fun b!96273 () Bool)

(declare-fun e!62779 () ListLongMap!1493)

(assert (=> b!96273 (= e!62779 e!62774)))

(declare-fun c!16220 () Bool)

(assert (=> b!96273 (= c!16220 (and (not (= (bvand lt!47743 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!47743 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9739 () Bool)

(assert (=> bm!9739 (= call!9744 (contains!783 lt!48091 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96274 () Bool)

(declare-fun c!16216 () Bool)

(assert (=> b!96274 (= c!16216 (and (not (= (bvand lt!47743 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!47743 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96274 (= e!62774 e!62782)))

(declare-fun call!9747 () ListLongMap!1493)

(declare-fun c!16217 () Bool)

(declare-fun bm!9740 () Bool)

(declare-fun call!9745 () ListLongMap!1493)

(assert (=> bm!9740 (= call!9745 (+!129 (ite c!16217 call!9747 (ite c!16220 call!9743 call!9741)) (ite (or c!16217 c!16220) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!96268 () Bool)

(assert (=> b!96268 (= e!62776 (not call!9742))))

(declare-fun d!25419 () Bool)

(assert (=> d!25419 e!62777))

(declare-fun res!48600 () Bool)

(assert (=> d!25419 (=> (not res!48600) (not e!62777))))

(assert (=> d!25419 (= res!48600 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!48106 () ListLongMap!1493)

(assert (=> d!25419 (= lt!48091 lt!48106)))

(declare-fun lt!48089 () Unit!2849)

(assert (=> d!25419 (= lt!48089 e!62783)))

(declare-fun c!16219 () Bool)

(assert (=> d!25419 (= c!16219 e!62785)))

(declare-fun res!48604 () Bool)

(assert (=> d!25419 (=> (not res!48604) (not e!62785))))

(assert (=> d!25419 (= res!48604 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25419 (= lt!48106 e!62779)))

(assert (=> d!25419 (= c!16217 (and (not (= (bvand lt!47743 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!47743 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25419 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25419 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48091)))

(declare-fun bm!9741 () Bool)

(assert (=> bm!9741 (= call!9743 call!9747)))

(declare-fun bm!9742 () Bool)

(assert (=> bm!9742 (= call!9747 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96275 () Bool)

(assert (=> b!96275 (= e!62777 e!62775)))

(declare-fun c!16218 () Bool)

(assert (=> b!96275 (= c!16218 (not (= (bvand lt!47743 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96276 () Bool)

(assert (=> b!96276 (= e!62778 (= (apply!91 lt!48091 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96277 () Bool)

(declare-fun lt!48107 () Unit!2849)

(assert (=> b!96277 (= e!62783 lt!48107)))

(declare-fun lt!48086 () ListLongMap!1493)

(assert (=> b!96277 (= lt!48086 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48100 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48100 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48092 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48092 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48098 () Unit!2849)

(assert (=> b!96277 (= lt!48098 (addStillContains!67 lt!48086 lt!48100 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48092))))

(assert (=> b!96277 (contains!783 (+!129 lt!48086 (tuple2!2287 lt!48100 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48092)))

(declare-fun lt!48102 () Unit!2849)

(assert (=> b!96277 (= lt!48102 lt!48098)))

(declare-fun lt!48103 () ListLongMap!1493)

(assert (=> b!96277 (= lt!48103 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48094 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48094 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48090 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48090 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48087 () Unit!2849)

(assert (=> b!96277 (= lt!48087 (addApplyDifferent!67 lt!48103 lt!48094 (minValue!2341 newMap!16) lt!48090))))

(assert (=> b!96277 (= (apply!91 (+!129 lt!48103 (tuple2!2287 lt!48094 (minValue!2341 newMap!16))) lt!48090) (apply!91 lt!48103 lt!48090))))

(declare-fun lt!48088 () Unit!2849)

(assert (=> b!96277 (= lt!48088 lt!48087)))

(declare-fun lt!48104 () ListLongMap!1493)

(assert (=> b!96277 (= lt!48104 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48097 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48097 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48105 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48105 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48093 () Unit!2849)

(assert (=> b!96277 (= lt!48093 (addApplyDifferent!67 lt!48104 lt!48097 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48105))))

(assert (=> b!96277 (= (apply!91 (+!129 lt!48104 (tuple2!2287 lt!48097 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48105) (apply!91 lt!48104 lt!48105))))

(declare-fun lt!48099 () Unit!2849)

(assert (=> b!96277 (= lt!48099 lt!48093)))

(declare-fun lt!48096 () ListLongMap!1493)

(assert (=> b!96277 (= lt!48096 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47743 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48101 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48101 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48095 () (_ BitVec 64))

(assert (=> b!96277 (= lt!48095 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96277 (= lt!48107 (addApplyDifferent!67 lt!48096 lt!48101 (minValue!2341 newMap!16) lt!48095))))

(assert (=> b!96277 (= (apply!91 (+!129 lt!48096 (tuple2!2287 lt!48101 (minValue!2341 newMap!16))) lt!48095) (apply!91 lt!48096 lt!48095))))

(declare-fun bm!9743 () Bool)

(assert (=> bm!9743 (= call!9746 call!9745)))

(declare-fun b!96278 () Bool)

(assert (=> b!96278 (= e!62782 call!9741)))

(declare-fun bm!9744 () Bool)

(assert (=> bm!9744 (= call!9742 (contains!783 lt!48091 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96279 () Bool)

(assert (=> b!96279 (= e!62775 (not call!9744))))

(declare-fun b!96280 () Bool)

(assert (=> b!96280 (= e!62779 (+!129 call!9745 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96281 () Bool)

(assert (=> b!96281 (= e!62784 (= (apply!91 lt!48091 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96281 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_values!2439 newMap!16))))))

(assert (=> b!96281 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25419 c!16217) b!96280))

(assert (= (and d!25419 (not c!16217)) b!96273))

(assert (= (and b!96273 c!16220) b!96262))

(assert (= (and b!96273 (not c!16220)) b!96274))

(assert (= (and b!96274 c!16216) b!96265))

(assert (= (and b!96274 (not c!16216)) b!96278))

(assert (= (or b!96265 b!96278) bm!9738))

(assert (= (or b!96262 bm!9738) bm!9741))

(assert (= (or b!96262 b!96265) bm!9743))

(assert (= (or b!96280 bm!9741) bm!9742))

(assert (= (or b!96280 bm!9743) bm!9740))

(assert (= (and d!25419 res!48604) b!96263))

(assert (= (and d!25419 c!16219) b!96277))

(assert (= (and d!25419 (not c!16219)) b!96272))

(assert (= (and d!25419 res!48600) b!96269))

(assert (= (and b!96269 res!48597) b!96261))

(assert (= (and b!96269 (not res!48602)) b!96264))

(assert (= (and b!96264 res!48599) b!96281))

(assert (= (and b!96269 res!48601) b!96267))

(assert (= (and b!96267 c!16221) b!96271))

(assert (= (and b!96267 (not c!16221)) b!96268))

(assert (= (and b!96271 res!48598) b!96270))

(assert (= (or b!96271 b!96268) bm!9744))

(assert (= (and b!96267 res!48603) b!96275))

(assert (= (and b!96275 c!16218) b!96266))

(assert (= (and b!96275 (not c!16218)) b!96279))

(assert (= (and b!96266 res!48605) b!96276))

(assert (= (or b!96266 b!96279) bm!9739))

(declare-fun b_lambda!4261 () Bool)

(assert (=> (not b_lambda!4261) (not b!96281)))

(assert (=> b!96281 t!5484))

(declare-fun b_and!5881 () Bool)

(assert (= b_and!5877 (and (=> t!5484 result!3225) b_and!5881)))

(assert (=> b!96281 t!5486))

(declare-fun b_and!5883 () Bool)

(assert (= b_and!5879 (and (=> t!5486 result!3227) b_and!5883)))

(assert (=> bm!9742 m!103633))

(declare-fun m!104483 () Bool)

(assert (=> bm!9742 m!104483))

(assert (=> b!96281 m!104023))

(assert (=> b!96281 m!103949))

(assert (=> b!96281 m!104025))

(assert (=> b!96281 m!103953))

(assert (=> b!96281 m!103953))

(declare-fun m!104485 () Bool)

(assert (=> b!96281 m!104485))

(assert (=> b!96281 m!104023))

(assert (=> b!96281 m!103949))

(declare-fun m!104487 () Bool)

(assert (=> b!96280 m!104487))

(declare-fun m!104489 () Bool)

(assert (=> b!96277 m!104489))

(assert (=> b!96277 m!103633))

(assert (=> b!96277 m!104483))

(assert (=> b!96277 m!103633))

(declare-fun m!104491 () Bool)

(assert (=> b!96277 m!104491))

(declare-fun m!104493 () Bool)

(assert (=> b!96277 m!104493))

(declare-fun m!104495 () Bool)

(assert (=> b!96277 m!104495))

(declare-fun m!104497 () Bool)

(assert (=> b!96277 m!104497))

(declare-fun m!104499 () Bool)

(assert (=> b!96277 m!104499))

(declare-fun m!104501 () Bool)

(assert (=> b!96277 m!104501))

(declare-fun m!104503 () Bool)

(assert (=> b!96277 m!104503))

(declare-fun m!104505 () Bool)

(assert (=> b!96277 m!104505))

(declare-fun m!104507 () Bool)

(assert (=> b!96277 m!104507))

(declare-fun m!104509 () Bool)

(assert (=> b!96277 m!104509))

(assert (=> b!96277 m!103953))

(assert (=> b!96277 m!104495))

(assert (=> b!96277 m!104499))

(declare-fun m!104511 () Bool)

(assert (=> b!96277 m!104511))

(declare-fun m!104513 () Bool)

(assert (=> b!96277 m!104513))

(assert (=> b!96277 m!104511))

(declare-fun m!104515 () Bool)

(assert (=> b!96277 m!104515))

(assert (=> b!96277 m!103633))

(declare-fun m!104517 () Bool)

(assert (=> b!96277 m!104517))

(assert (=> b!96277 m!104503))

(assert (=> b!96263 m!103953))

(assert (=> b!96263 m!103953))

(assert (=> b!96263 m!103989))

(declare-fun m!104519 () Bool)

(assert (=> b!96270 m!104519))

(declare-fun m!104521 () Bool)

(assert (=> bm!9740 m!104521))

(declare-fun m!104523 () Bool)

(assert (=> b!96276 m!104523))

(assert (=> b!96264 m!103953))

(assert (=> b!96264 m!103953))

(declare-fun m!104525 () Bool)

(assert (=> b!96264 m!104525))

(assert (=> b!96261 m!103953))

(assert (=> b!96261 m!103953))

(assert (=> b!96261 m!103989))

(assert (=> d!25419 m!103933))

(declare-fun m!104527 () Bool)

(assert (=> bm!9739 m!104527))

(declare-fun m!104529 () Bool)

(assert (=> bm!9744 m!104529))

(assert (=> d!25293 d!25419))

(declare-fun d!25421 () Bool)

(assert (=> d!25421 (= (validMask!0 (mask!6541 newMap!16)) (and (or (= (mask!6541 newMap!16) #b00000000000000000000000000000111) (= (mask!6541 newMap!16) #b00000000000000000000000000001111) (= (mask!6541 newMap!16) #b00000000000000000000000000011111) (= (mask!6541 newMap!16) #b00000000000000000000000000111111) (= (mask!6541 newMap!16) #b00000000000000000000000001111111) (= (mask!6541 newMap!16) #b00000000000000000000000011111111) (= (mask!6541 newMap!16) #b00000000000000000000000111111111) (= (mask!6541 newMap!16) #b00000000000000000000001111111111) (= (mask!6541 newMap!16) #b00000000000000000000011111111111) (= (mask!6541 newMap!16) #b00000000000000000000111111111111) (= (mask!6541 newMap!16) #b00000000000000000001111111111111) (= (mask!6541 newMap!16) #b00000000000000000011111111111111) (= (mask!6541 newMap!16) #b00000000000000000111111111111111) (= (mask!6541 newMap!16) #b00000000000000001111111111111111) (= (mask!6541 newMap!16) #b00000000000000011111111111111111) (= (mask!6541 newMap!16) #b00000000000000111111111111111111) (= (mask!6541 newMap!16) #b00000000000001111111111111111111) (= (mask!6541 newMap!16) #b00000000000011111111111111111111) (= (mask!6541 newMap!16) #b00000000000111111111111111111111) (= (mask!6541 newMap!16) #b00000000001111111111111111111111) (= (mask!6541 newMap!16) #b00000000011111111111111111111111) (= (mask!6541 newMap!16) #b00000000111111111111111111111111) (= (mask!6541 newMap!16) #b00000001111111111111111111111111) (= (mask!6541 newMap!16) #b00000011111111111111111111111111) (= (mask!6541 newMap!16) #b00000111111111111111111111111111) (= (mask!6541 newMap!16) #b00001111111111111111111111111111) (= (mask!6541 newMap!16) #b00011111111111111111111111111111) (= (mask!6541 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6541 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!25293 d!25421))

(declare-fun d!25423 () Bool)

(declare-fun e!62787 () Bool)

(assert (=> d!25423 e!62787))

(declare-fun res!48606 () Bool)

(assert (=> d!25423 (=> (not res!48606) (not e!62787))))

(declare-fun lt!48109 () ListLongMap!1493)

(assert (=> d!25423 (= res!48606 (contains!783 lt!48109 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun lt!48110 () List!1558)

(assert (=> d!25423 (= lt!48109 (ListLongMap!1494 lt!48110))))

(declare-fun lt!48111 () Unit!2849)

(declare-fun lt!48108 () Unit!2849)

(assert (=> d!25423 (= lt!48111 lt!48108)))

(assert (=> d!25423 (= (getValueByKey!150 lt!48110 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25423 (= lt!48108 (lemmaContainsTupThenGetReturnValue!66 lt!48110 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25423 (= lt!48110 (insertStrictlySorted!69 (toList!762 call!9706) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25423 (= (+!129 call!9706 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) lt!48109)))

(declare-fun b!96282 () Bool)

(declare-fun res!48607 () Bool)

(assert (=> b!96282 (=> (not res!48607) (not e!62787))))

(assert (=> b!96282 (= res!48607 (= (getValueByKey!150 (toList!762 lt!48109) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun b!96283 () Bool)

(assert (=> b!96283 (= e!62787 (contains!785 (toList!762 lt!48109) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(assert (= (and d!25423 res!48606) b!96282))

(assert (= (and b!96282 res!48607) b!96283))

(declare-fun m!104531 () Bool)

(assert (=> d!25423 m!104531))

(declare-fun m!104533 () Bool)

(assert (=> d!25423 m!104533))

(declare-fun m!104535 () Bool)

(assert (=> d!25423 m!104535))

(declare-fun m!104537 () Bool)

(assert (=> d!25423 m!104537))

(declare-fun m!104539 () Bool)

(assert (=> b!96282 m!104539))

(declare-fun m!104541 () Bool)

(assert (=> b!96283 m!104541))

(assert (=> b!95991 d!25423))

(declare-fun b!96284 () Bool)

(declare-fun e!62788 () (_ BitVec 32))

(declare-fun e!62789 () (_ BitVec 32))

(assert (=> b!96284 (= e!62788 e!62789)))

(declare-fun c!16222 () Bool)

(assert (=> b!96284 (= c!16222 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9745 () Bool)

(declare-fun call!9748 () (_ BitVec 32))

(assert (=> bm!9745 (= call!9748 (arrayCountValidKeys!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96285 () Bool)

(assert (=> b!96285 (= e!62789 call!9748)))

(declare-fun b!96286 () Bool)

(assert (=> b!96286 (= e!62789 (bvadd #b00000000000000000000000000000001 call!9748))))

(declare-fun b!96287 () Bool)

(assert (=> b!96287 (= e!62788 #b00000000000000000000000000000000)))

(declare-fun d!25425 () Bool)

(declare-fun lt!48112 () (_ BitVec 32))

(assert (=> d!25425 (and (bvsge lt!48112 #b00000000000000000000000000000000) (bvsle lt!48112 (bvsub (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!25425 (= lt!48112 e!62788)))

(declare-fun c!16223 () Bool)

(assert (=> d!25425 (= c!16223 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25425 (and (bvsle #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25425 (= (arrayCountValidKeys!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))) lt!48112)))

(assert (= (and d!25425 c!16223) b!96287))

(assert (= (and d!25425 (not c!16223)) b!96284))

(assert (= (and b!96284 c!16222) b!96286))

(assert (= (and b!96284 (not c!16222)) b!96285))

(assert (= (or b!96286 b!96285) bm!9745))

(declare-fun m!104543 () Bool)

(assert (=> b!96284 m!104543))

(assert (=> b!96284 m!104543))

(declare-fun m!104545 () Bool)

(assert (=> b!96284 m!104545))

(declare-fun m!104547 () Bool)

(assert (=> bm!9745 m!104547))

(assert (=> b!96231 d!25425))

(declare-fun lt!48115 () Bool)

(declare-fun d!25427 () Bool)

(declare-fun content!101 (List!1558) (InoxSet tuple2!2286))

(assert (=> d!25427 (= lt!48115 (select (content!101 (toList!762 lt!48059)) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!62794 () Bool)

(assert (=> d!25427 (= lt!48115 e!62794)))

(declare-fun res!48613 () Bool)

(assert (=> d!25427 (=> (not res!48613) (not e!62794))))

(assert (=> d!25427 (= res!48613 ((_ is Cons!1554) (toList!762 lt!48059)))))

(assert (=> d!25427 (= (contains!785 (toList!762 lt!48059) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48115)))

(declare-fun b!96292 () Bool)

(declare-fun e!62795 () Bool)

(assert (=> b!96292 (= e!62794 e!62795)))

(declare-fun res!48612 () Bool)

(assert (=> b!96292 (=> res!48612 e!62795)))

(assert (=> b!96292 (= res!48612 (= (h!2147 (toList!762 lt!48059)) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96293 () Bool)

(assert (=> b!96293 (= e!62795 (contains!785 (t!5472 (toList!762 lt!48059)) (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (= (and d!25427 res!48613) b!96292))

(assert (= (and b!96292 (not res!48612)) b!96293))

(declare-fun m!104549 () Bool)

(assert (=> d!25427 m!104549))

(declare-fun m!104551 () Bool)

(assert (=> d!25427 m!104551))

(declare-fun m!104553 () Bool)

(assert (=> b!96293 m!104553))

(assert (=> b!96235 d!25427))

(declare-fun d!25429 () Bool)

(declare-fun e!62796 () Bool)

(assert (=> d!25429 e!62796))

(declare-fun res!48614 () Bool)

(assert (=> d!25429 (=> (not res!48614) (not e!62796))))

(declare-fun lt!48117 () ListLongMap!1493)

(assert (=> d!25429 (= res!48614 (contains!783 lt!48117 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun lt!48118 () List!1558)

(assert (=> d!25429 (= lt!48117 (ListLongMap!1494 lt!48118))))

(declare-fun lt!48119 () Unit!2849)

(declare-fun lt!48116 () Unit!2849)

(assert (=> d!25429 (= lt!48119 lt!48116)))

(assert (=> d!25429 (= (getValueByKey!150 lt!48118 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25429 (= lt!48116 (lemmaContainsTupThenGetReturnValue!66 lt!48118 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25429 (= lt!48118 (insertStrictlySorted!69 (toList!762 call!9696) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (=> d!25429 (= (+!129 call!9696 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))) lt!48117)))

(declare-fun b!96294 () Bool)

(declare-fun res!48615 () Bool)

(assert (=> b!96294 (=> (not res!48615) (not e!62796))))

(assert (=> b!96294 (= res!48615 (= (getValueByKey!150 (toList!762 lt!48117) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun b!96295 () Bool)

(assert (=> b!96295 (= e!62796 (contains!785 (toList!762 lt!48117) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(assert (= (and d!25429 res!48614) b!96294))

(assert (= (and b!96294 res!48615) b!96295))

(declare-fun m!104555 () Bool)

(assert (=> d!25429 m!104555))

(declare-fun m!104557 () Bool)

(assert (=> d!25429 m!104557))

(declare-fun m!104559 () Bool)

(assert (=> d!25429 m!104559))

(declare-fun m!104561 () Bool)

(assert (=> d!25429 m!104561))

(declare-fun m!104563 () Bool)

(assert (=> b!96294 m!104563))

(declare-fun m!104565 () Bool)

(assert (=> b!96295 m!104565))

(assert (=> b!95946 d!25429))

(declare-fun d!25431 () Bool)

(assert (=> d!25431 (= (inRange!0 (ite c!16198 (index!3127 lt!47989) (ite c!16196 (index!3126 lt!48009) (index!3129 lt!48009))) (mask!6541 newMap!16)) (and (bvsge (ite c!16198 (index!3127 lt!47989) (ite c!16196 (index!3126 lt!48009) (index!3129 lt!48009))) #b00000000000000000000000000000000) (bvslt (ite c!16198 (index!3127 lt!47989) (ite c!16196 (index!3126 lt!48009) (index!3129 lt!48009))) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9723 d!25431))

(declare-fun d!25433 () Bool)

(assert (=> d!25433 (= (get!1281 (getValueByKey!150 (toList!762 lt!47672) lt!47673)) (v!2786 (getValueByKey!150 (toList!762 lt!47672) lt!47673)))))

(assert (=> d!25349 d!25433))

(declare-fun b!96298 () Bool)

(declare-fun e!62798 () Option!156)

(assert (=> b!96298 (= e!62798 (getValueByKey!150 (t!5472 (toList!762 lt!47672)) lt!47673))))

(declare-fun b!96299 () Bool)

(assert (=> b!96299 (= e!62798 None!154)))

(declare-fun d!25435 () Bool)

(declare-fun c!16224 () Bool)

(assert (=> d!25435 (= c!16224 (and ((_ is Cons!1554) (toList!762 lt!47672)) (= (_1!1154 (h!2147 (toList!762 lt!47672))) lt!47673)))))

(declare-fun e!62797 () Option!156)

(assert (=> d!25435 (= (getValueByKey!150 (toList!762 lt!47672) lt!47673) e!62797)))

(declare-fun b!96296 () Bool)

(assert (=> b!96296 (= e!62797 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47672)))))))

(declare-fun b!96297 () Bool)

(assert (=> b!96297 (= e!62797 e!62798)))

(declare-fun c!16225 () Bool)

(assert (=> b!96297 (= c!16225 (and ((_ is Cons!1554) (toList!762 lt!47672)) (not (= (_1!1154 (h!2147 (toList!762 lt!47672))) lt!47673))))))

(assert (= (and d!25435 c!16224) b!96296))

(assert (= (and d!25435 (not c!16224)) b!96297))

(assert (= (and b!96297 c!16225) b!96298))

(assert (= (and b!96297 (not c!16225)) b!96299))

(declare-fun m!104567 () Bool)

(assert (=> b!96298 m!104567))

(assert (=> d!25349 d!25435))

(declare-fun b!96302 () Bool)

(declare-fun e!62800 () Option!156)

(assert (=> b!96302 (= e!62800 (getValueByKey!150 (t!5472 (toList!762 lt!47890)) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96303 () Bool)

(assert (=> b!96303 (= e!62800 None!154)))

(declare-fun c!16226 () Bool)

(declare-fun d!25437 () Bool)

(assert (=> d!25437 (= c!16226 (and ((_ is Cons!1554) (toList!762 lt!47890)) (= (_1!1154 (h!2147 (toList!762 lt!47890))) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62799 () Option!156)

(assert (=> d!25437 (= (getValueByKey!150 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62799)))

(declare-fun b!96300 () Bool)

(assert (=> b!96300 (= e!62799 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47890)))))))

(declare-fun b!96301 () Bool)

(assert (=> b!96301 (= e!62799 e!62800)))

(declare-fun c!16227 () Bool)

(assert (=> b!96301 (= c!16227 (and ((_ is Cons!1554) (toList!762 lt!47890)) (not (= (_1!1154 (h!2147 (toList!762 lt!47890))) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25437 c!16226) b!96300))

(assert (= (and d!25437 (not c!16226)) b!96301))

(assert (= (and b!96301 c!16227) b!96302))

(assert (= (and b!96301 (not c!16227)) b!96303))

(declare-fun m!104569 () Bool)

(assert (=> b!96302 m!104569))

(assert (=> b!96064 d!25437))

(declare-fun d!25439 () Bool)

(assert (=> d!25439 (= (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96237 d!25439))

(assert (=> d!25363 d!25339))

(assert (=> d!25363 d!25353))

(declare-fun d!25441 () Bool)

(assert (=> d!25441 (= (apply!91 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47658) (apply!91 lt!47671 lt!47658))))

(assert (=> d!25441 true))

(declare-fun _$34!855 () Unit!2849)

(assert (=> d!25441 (= (choose!585 lt!47671 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47658) _$34!855)))

(declare-fun bs!3963 () Bool)

(assert (= bs!3963 d!25441))

(assert (=> bs!3963 m!103793))

(assert (=> bs!3963 m!103793))

(assert (=> bs!3963 m!103795))

(assert (=> bs!3963 m!103801))

(assert (=> d!25363 d!25441))

(declare-fun d!25443 () Bool)

(declare-fun e!62801 () Bool)

(assert (=> d!25443 e!62801))

(declare-fun res!48616 () Bool)

(assert (=> d!25443 (=> res!48616 e!62801)))

(declare-fun lt!48122 () Bool)

(assert (=> d!25443 (= res!48616 (not lt!48122))))

(declare-fun lt!48123 () Bool)

(assert (=> d!25443 (= lt!48122 lt!48123)))

(declare-fun lt!48121 () Unit!2849)

(declare-fun e!62802 () Unit!2849)

(assert (=> d!25443 (= lt!48121 e!62802)))

(declare-fun c!16228 () Bool)

(assert (=> d!25443 (= c!16228 lt!48123)))

(assert (=> d!25443 (= lt!48123 (containsKey!153 (toList!762 lt!47671) lt!47658))))

(assert (=> d!25443 (= (contains!783 lt!47671 lt!47658) lt!48122)))

(declare-fun b!96305 () Bool)

(declare-fun lt!48120 () Unit!2849)

(assert (=> b!96305 (= e!62802 lt!48120)))

(assert (=> b!96305 (= lt!48120 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47671) lt!47658))))

(assert (=> b!96305 (isDefined!102 (getValueByKey!150 (toList!762 lt!47671) lt!47658))))

(declare-fun b!96306 () Bool)

(declare-fun Unit!2874 () Unit!2849)

(assert (=> b!96306 (= e!62802 Unit!2874)))

(declare-fun b!96307 () Bool)

(assert (=> b!96307 (= e!62801 (isDefined!102 (getValueByKey!150 (toList!762 lt!47671) lt!47658)))))

(assert (= (and d!25443 c!16228) b!96305))

(assert (= (and d!25443 (not c!16228)) b!96306))

(assert (= (and d!25443 (not res!48616)) b!96307))

(declare-fun m!104571 () Bool)

(assert (=> d!25443 m!104571))

(declare-fun m!104573 () Bool)

(assert (=> b!96305 m!104573))

(assert (=> b!96305 m!104133))

(assert (=> b!96305 m!104133))

(declare-fun m!104575 () Bool)

(assert (=> b!96305 m!104575))

(assert (=> b!96307 m!104133))

(assert (=> b!96307 m!104133))

(assert (=> b!96307 m!104575))

(assert (=> d!25363 d!25443))

(assert (=> d!25363 d!25359))

(declare-fun d!25445 () Bool)

(assert (=> d!25445 (= (isDefined!102 (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))) (not (isEmpty!359 (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))))

(declare-fun bs!3964 () Bool)

(assert (= bs!3964 d!25445))

(assert (=> bs!3964 m!104429))

(declare-fun m!104577 () Bool)

(assert (=> bs!3964 m!104577))

(assert (=> b!96243 d!25445))

(declare-fun b!96310 () Bool)

(declare-fun e!62804 () Option!156)

(assert (=> b!96310 (= e!62804 (getValueByKey!150 (t!5472 (toList!762 e!62523)) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(declare-fun b!96311 () Bool)

(assert (=> b!96311 (= e!62804 None!154)))

(declare-fun c!16229 () Bool)

(declare-fun d!25447 () Bool)

(assert (=> d!25447 (= c!16229 (and ((_ is Cons!1554) (toList!762 e!62523)) (= (_1!1154 (h!2147 (toList!762 e!62523))) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))))

(declare-fun e!62803 () Option!156)

(assert (=> d!25447 (= (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))) e!62803)))

(declare-fun b!96308 () Bool)

(assert (=> b!96308 (= e!62803 (Some!155 (_2!1154 (h!2147 (toList!762 e!62523)))))))

(declare-fun b!96309 () Bool)

(assert (=> b!96309 (= e!62803 e!62804)))

(declare-fun c!16230 () Bool)

(assert (=> b!96309 (= c!16230 (and ((_ is Cons!1554) (toList!762 e!62523)) (not (= (_1!1154 (h!2147 (toList!762 e!62523))) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))))

(assert (= (and d!25447 c!16229) b!96308))

(assert (= (and d!25447 (not c!16229)) b!96309))

(assert (= (and b!96309 c!16230) b!96310))

(assert (= (and b!96309 (not c!16230)) b!96311))

(declare-fun m!104579 () Bool)

(assert (=> b!96310 m!104579))

(assert (=> b!96243 d!25447))

(declare-fun d!25449 () Bool)

(assert (=> d!25449 (= (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!359 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3965 () Bool)

(assert (= bs!3965 d!25449))

(assert (=> bs!3965 m!104347))

(declare-fun m!104581 () Bool)

(assert (=> bs!3965 m!104581))

(assert (=> b!96246 d!25449))

(declare-fun b!96314 () Bool)

(declare-fun e!62806 () Option!156)

(assert (=> b!96314 (= e!62806 (getValueByKey!150 (t!5472 (toList!762 lt!47659)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96315 () Bool)

(assert (=> b!96315 (= e!62806 None!154)))

(declare-fun d!25451 () Bool)

(declare-fun c!16231 () Bool)

(assert (=> d!25451 (= c!16231 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!62805 () Option!156)

(assert (=> d!25451 (= (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000) e!62805)))

(declare-fun b!96312 () Bool)

(assert (=> b!96312 (= e!62805 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47659)))))))

(declare-fun b!96313 () Bool)

(assert (=> b!96313 (= e!62805 e!62806)))

(declare-fun c!16232 () Bool)

(assert (=> b!96313 (= c!16232 (and ((_ is Cons!1554) (toList!762 lt!47659)) (not (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!25451 c!16231) b!96312))

(assert (= (and d!25451 (not c!16231)) b!96313))

(assert (= (and b!96313 c!16232) b!96314))

(assert (= (and b!96313 (not c!16232)) b!96315))

(declare-fun m!104583 () Bool)

(assert (=> b!96314 m!104583))

(assert (=> b!96246 d!25451))

(assert (=> b!95965 d!25439))

(declare-fun d!25453 () Bool)

(assert (=> d!25453 (= (apply!91 lt!47789 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47789) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3966 () Bool)

(assert (= bs!3966 d!25453))

(declare-fun m!104585 () Bool)

(assert (=> bs!3966 m!104585))

(assert (=> bs!3966 m!104585))

(declare-fun m!104587 () Bool)

(assert (=> bs!3966 m!104587))

(assert (=> b!95936 d!25453))

(declare-fun d!25455 () Bool)

(assert (=> d!25455 (= (apply!91 lt!47818 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47818) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3967 () Bool)

(assert (= bs!3967 d!25455))

(declare-fun m!104589 () Bool)

(assert (=> bs!3967 m!104589))

(assert (=> bs!3967 m!104589))

(declare-fun m!104591 () Bool)

(assert (=> bs!3967 m!104591))

(assert (=> b!95981 d!25455))

(declare-fun b!96316 () Bool)

(declare-fun e!62819 () Bool)

(assert (=> b!96316 (= e!62819 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun b!96317 () Bool)

(declare-fun e!62807 () ListLongMap!1493)

(declare-fun call!9754 () ListLongMap!1493)

(assert (=> b!96317 (= e!62807 call!9754)))

(declare-fun b!96318 () Bool)

(declare-fun e!62818 () Bool)

(assert (=> b!96318 (= e!62818 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun b!96319 () Bool)

(declare-fun e!62813 () Bool)

(declare-fun e!62817 () Bool)

(assert (=> b!96319 (= e!62813 e!62817)))

(declare-fun res!48619 () Bool)

(assert (=> b!96319 (=> (not res!48619) (not e!62817))))

(declare-fun lt!48129 () ListLongMap!1493)

(assert (=> b!96319 (= res!48619 (contains!783 lt!48129 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(assert (=> b!96319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(declare-fun b!96320 () Bool)

(declare-fun e!62815 () ListLongMap!1493)

(assert (=> b!96320 (= e!62815 call!9754)))

(declare-fun b!96321 () Bool)

(declare-fun e!62808 () Bool)

(declare-fun e!62811 () Bool)

(assert (=> b!96321 (= e!62808 e!62811)))

(declare-fun res!48625 () Bool)

(declare-fun call!9752 () Bool)

(assert (=> b!96321 (= res!48625 call!9752)))

(assert (=> b!96321 (=> (not res!48625) (not e!62811))))

(declare-fun b!96322 () Bool)

(declare-fun res!48623 () Bool)

(declare-fun e!62810 () Bool)

(assert (=> b!96322 (=> (not res!48623) (not e!62810))))

(declare-fun e!62809 () Bool)

(assert (=> b!96322 (= res!48623 e!62809)))

(declare-fun c!16238 () Bool)

(assert (=> b!96322 (= c!16238 (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96324 () Bool)

(declare-fun res!48621 () Bool)

(assert (=> b!96324 (=> (not res!48621) (not e!62810))))

(assert (=> b!96324 (= res!48621 e!62813)))

(declare-fun res!48622 () Bool)

(assert (=> b!96324 (=> res!48622 e!62813)))

(assert (=> b!96324 (= res!48622 (not e!62819))))

(declare-fun res!48617 () Bool)

(assert (=> b!96324 (=> (not res!48617) (not e!62819))))

(assert (=> b!96324 (= res!48617 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(declare-fun b!96325 () Bool)

(declare-fun e!62814 () Bool)

(assert (=> b!96325 (= e!62814 (= (apply!91 lt!48129 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 (_2!1155 lt!47762))))))

(declare-fun bm!9746 () Bool)

(declare-fun call!9749 () ListLongMap!1493)

(declare-fun call!9751 () ListLongMap!1493)

(assert (=> bm!9746 (= call!9749 call!9751)))

(declare-fun b!96326 () Bool)

(assert (=> b!96326 (= e!62809 e!62814)))

(declare-fun res!48618 () Bool)

(declare-fun call!9750 () Bool)

(assert (=> b!96326 (= res!48618 call!9750)))

(assert (=> b!96326 (=> (not res!48618) (not e!62814))))

(declare-fun b!96327 () Bool)

(declare-fun e!62816 () Unit!2849)

(declare-fun Unit!2875 () Unit!2849)

(assert (=> b!96327 (= e!62816 Unit!2875)))

(declare-fun b!96328 () Bool)

(declare-fun e!62812 () ListLongMap!1493)

(assert (=> b!96328 (= e!62812 e!62807)))

(declare-fun c!16237 () Bool)

(assert (=> b!96328 (= c!16237 (and (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9747 () Bool)

(assert (=> bm!9747 (= call!9752 (contains!783 lt!48129 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96329 () Bool)

(declare-fun c!16233 () Bool)

(assert (=> b!96329 (= c!16233 (and (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96329 (= e!62807 e!62815)))

(declare-fun bm!9748 () Bool)

(declare-fun call!9753 () ListLongMap!1493)

(declare-fun call!9755 () ListLongMap!1493)

(declare-fun c!16234 () Bool)

(assert (=> bm!9748 (= call!9753 (+!129 (ite c!16234 call!9755 (ite c!16237 call!9751 call!9749)) (ite (or c!16234 c!16237) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (_2!1155 lt!47762))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (_2!1155 lt!47762))))))))

(declare-fun b!96323 () Bool)

(assert (=> b!96323 (= e!62809 (not call!9750))))

(declare-fun d!25457 () Bool)

(assert (=> d!25457 e!62810))

(declare-fun res!48620 () Bool)

(assert (=> d!25457 (=> (not res!48620) (not e!62810))))

(assert (=> d!25457 (= res!48620 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))))

(declare-fun lt!48144 () ListLongMap!1493)

(assert (=> d!25457 (= lt!48129 lt!48144)))

(declare-fun lt!48127 () Unit!2849)

(assert (=> d!25457 (= lt!48127 e!62816)))

(declare-fun c!16236 () Bool)

(assert (=> d!25457 (= c!16236 e!62818)))

(declare-fun res!48624 () Bool)

(assert (=> d!25457 (=> (not res!48624) (not e!62818))))

(assert (=> d!25457 (= res!48624 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (=> d!25457 (= lt!48144 e!62812)))

(assert (=> d!25457 (= c!16234 (and (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25457 (validMask!0 (mask!6541 (_2!1155 lt!47762)))))

(assert (=> d!25457 (= (getCurrentListMap!452 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))) lt!48129)))

(declare-fun bm!9749 () Bool)

(assert (=> bm!9749 (= call!9751 call!9755)))

(declare-fun bm!9750 () Bool)

(assert (=> bm!9750 (= call!9755 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun b!96330 () Bool)

(assert (=> b!96330 (= e!62810 e!62808)))

(declare-fun c!16235 () Bool)

(assert (=> b!96330 (= c!16235 (not (= (bvand (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96331 () Bool)

(assert (=> b!96331 (= e!62811 (= (apply!91 lt!48129 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 (_2!1155 lt!47762))))))

(declare-fun b!96332 () Bool)

(declare-fun lt!48145 () Unit!2849)

(assert (=> b!96332 (= e!62816 lt!48145)))

(declare-fun lt!48124 () ListLongMap!1493)

(assert (=> b!96332 (= lt!48124 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun lt!48138 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48138 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48130 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48130 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000))))

(declare-fun lt!48136 () Unit!2849)

(assert (=> b!96332 (= lt!48136 (addStillContains!67 lt!48124 lt!48138 (zeroValue!2341 (_2!1155 lt!47762)) lt!48130))))

(assert (=> b!96332 (contains!783 (+!129 lt!48124 (tuple2!2287 lt!48138 (zeroValue!2341 (_2!1155 lt!47762)))) lt!48130)))

(declare-fun lt!48140 () Unit!2849)

(assert (=> b!96332 (= lt!48140 lt!48136)))

(declare-fun lt!48141 () ListLongMap!1493)

(assert (=> b!96332 (= lt!48141 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun lt!48132 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48132 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48128 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48128 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000))))

(declare-fun lt!48125 () Unit!2849)

(assert (=> b!96332 (= lt!48125 (addApplyDifferent!67 lt!48141 lt!48132 (minValue!2341 (_2!1155 lt!47762)) lt!48128))))

(assert (=> b!96332 (= (apply!91 (+!129 lt!48141 (tuple2!2287 lt!48132 (minValue!2341 (_2!1155 lt!47762)))) lt!48128) (apply!91 lt!48141 lt!48128))))

(declare-fun lt!48126 () Unit!2849)

(assert (=> b!96332 (= lt!48126 lt!48125)))

(declare-fun lt!48142 () ListLongMap!1493)

(assert (=> b!96332 (= lt!48142 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun lt!48135 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48135 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48143 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48143 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000))))

(declare-fun lt!48131 () Unit!2849)

(assert (=> b!96332 (= lt!48131 (addApplyDifferent!67 lt!48142 lt!48135 (zeroValue!2341 (_2!1155 lt!47762)) lt!48143))))

(assert (=> b!96332 (= (apply!91 (+!129 lt!48142 (tuple2!2287 lt!48135 (zeroValue!2341 (_2!1155 lt!47762)))) lt!48143) (apply!91 lt!48142 lt!48143))))

(declare-fun lt!48137 () Unit!2849)

(assert (=> b!96332 (= lt!48137 lt!48131)))

(declare-fun lt!48134 () ListLongMap!1493)

(assert (=> b!96332 (= lt!48134 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (_2!1155 lt!47762)) (_values!2439 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762)) (extraKeys!2281 (_2!1155 lt!47762)) (zeroValue!2341 (_2!1155 lt!47762)) (minValue!2341 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!47762))))))

(declare-fun lt!48139 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48139 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48133 () (_ BitVec 64))

(assert (=> b!96332 (= lt!48133 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000))))

(assert (=> b!96332 (= lt!48145 (addApplyDifferent!67 lt!48134 lt!48139 (minValue!2341 (_2!1155 lt!47762)) lt!48133))))

(assert (=> b!96332 (= (apply!91 (+!129 lt!48134 (tuple2!2287 lt!48139 (minValue!2341 (_2!1155 lt!47762)))) lt!48133) (apply!91 lt!48134 lt!48133))))

(declare-fun bm!9751 () Bool)

(assert (=> bm!9751 (= call!9754 call!9753)))

(declare-fun b!96333 () Bool)

(assert (=> b!96333 (= e!62815 call!9749)))

(declare-fun bm!9752 () Bool)

(assert (=> bm!9752 (= call!9750 (contains!783 lt!48129 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96334 () Bool)

(assert (=> b!96334 (= e!62808 (not call!9752))))

(declare-fun b!96335 () Bool)

(assert (=> b!96335 (= e!62812 (+!129 call!9753 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (_2!1155 lt!47762)))))))

(declare-fun b!96336 () Bool)

(assert (=> b!96336 (= e!62817 (= (apply!91 lt!48129 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (_values!2439 (_2!1155 lt!47762))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 (_2!1155 lt!47762)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96336 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_values!2439 (_2!1155 lt!47762)))))))

(assert (=> b!96336 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (= (and d!25457 c!16234) b!96335))

(assert (= (and d!25457 (not c!16234)) b!96328))

(assert (= (and b!96328 c!16237) b!96317))

(assert (= (and b!96328 (not c!16237)) b!96329))

(assert (= (and b!96329 c!16233) b!96320))

(assert (= (and b!96329 (not c!16233)) b!96333))

(assert (= (or b!96320 b!96333) bm!9746))

(assert (= (or b!96317 bm!9746) bm!9749))

(assert (= (or b!96317 b!96320) bm!9751))

(assert (= (or b!96335 bm!9749) bm!9750))

(assert (= (or b!96335 bm!9751) bm!9748))

(assert (= (and d!25457 res!48624) b!96318))

(assert (= (and d!25457 c!16236) b!96332))

(assert (= (and d!25457 (not c!16236)) b!96327))

(assert (= (and d!25457 res!48620) b!96324))

(assert (= (and b!96324 res!48617) b!96316))

(assert (= (and b!96324 (not res!48622)) b!96319))

(assert (= (and b!96319 res!48619) b!96336))

(assert (= (and b!96324 res!48621) b!96322))

(assert (= (and b!96322 c!16238) b!96326))

(assert (= (and b!96322 (not c!16238)) b!96323))

(assert (= (and b!96326 res!48618) b!96325))

(assert (= (or b!96326 b!96323) bm!9752))

(assert (= (and b!96322 res!48623) b!96330))

(assert (= (and b!96330 c!16235) b!96321))

(assert (= (and b!96330 (not c!16235)) b!96334))

(assert (= (and b!96321 res!48625) b!96331))

(assert (= (or b!96321 b!96334) bm!9747))

(declare-fun b_lambda!4263 () Bool)

(assert (=> (not b_lambda!4263) (not b!96336)))

(declare-fun tb!1897 () Bool)

(declare-fun t!5488 () Bool)

(assert (=> (and b!95533 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 (_2!1155 lt!47762))) t!5488) tb!1897))

(declare-fun result!3229 () Bool)

(assert (=> tb!1897 (= result!3229 tp_is_empty!2617)))

(assert (=> b!96336 t!5488))

(declare-fun b_and!5885 () Bool)

(assert (= b_and!5881 (and (=> t!5488 result!3229) b_and!5885)))

(declare-fun t!5490 () Bool)

(declare-fun tb!1899 () Bool)

(assert (=> (and b!95536 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (_2!1155 lt!47762))) t!5490) tb!1899))

(declare-fun result!3231 () Bool)

(assert (= result!3231 result!3229))

(assert (=> b!96336 t!5490))

(declare-fun b_and!5887 () Bool)

(assert (= b_and!5883 (and (=> t!5490 result!3231) b_and!5887)))

(declare-fun m!104593 () Bool)

(assert (=> bm!9750 m!104593))

(declare-fun m!104595 () Bool)

(assert (=> b!96336 m!104595))

(declare-fun m!104597 () Bool)

(assert (=> b!96336 m!104597))

(declare-fun m!104599 () Bool)

(assert (=> b!96336 m!104599))

(declare-fun m!104601 () Bool)

(assert (=> b!96336 m!104601))

(assert (=> b!96336 m!104601))

(declare-fun m!104603 () Bool)

(assert (=> b!96336 m!104603))

(assert (=> b!96336 m!104595))

(assert (=> b!96336 m!104597))

(declare-fun m!104605 () Bool)

(assert (=> b!96335 m!104605))

(declare-fun m!104607 () Bool)

(assert (=> b!96332 m!104607))

(assert (=> b!96332 m!104593))

(declare-fun m!104609 () Bool)

(assert (=> b!96332 m!104609))

(declare-fun m!104611 () Bool)

(assert (=> b!96332 m!104611))

(declare-fun m!104613 () Bool)

(assert (=> b!96332 m!104613))

(declare-fun m!104615 () Bool)

(assert (=> b!96332 m!104615))

(declare-fun m!104617 () Bool)

(assert (=> b!96332 m!104617))

(declare-fun m!104619 () Bool)

(assert (=> b!96332 m!104619))

(declare-fun m!104621 () Bool)

(assert (=> b!96332 m!104621))

(declare-fun m!104623 () Bool)

(assert (=> b!96332 m!104623))

(declare-fun m!104625 () Bool)

(assert (=> b!96332 m!104625))

(declare-fun m!104627 () Bool)

(assert (=> b!96332 m!104627))

(assert (=> b!96332 m!104601))

(assert (=> b!96332 m!104613))

(assert (=> b!96332 m!104617))

(declare-fun m!104629 () Bool)

(assert (=> b!96332 m!104629))

(declare-fun m!104631 () Bool)

(assert (=> b!96332 m!104631))

(assert (=> b!96332 m!104629))

(declare-fun m!104633 () Bool)

(assert (=> b!96332 m!104633))

(declare-fun m!104635 () Bool)

(assert (=> b!96332 m!104635))

(assert (=> b!96332 m!104621))

(assert (=> b!96318 m!104601))

(assert (=> b!96318 m!104601))

(declare-fun m!104637 () Bool)

(assert (=> b!96318 m!104637))

(declare-fun m!104639 () Bool)

(assert (=> b!96325 m!104639))

(declare-fun m!104641 () Bool)

(assert (=> bm!9748 m!104641))

(declare-fun m!104643 () Bool)

(assert (=> b!96331 m!104643))

(assert (=> b!96319 m!104601))

(assert (=> b!96319 m!104601))

(declare-fun m!104645 () Bool)

(assert (=> b!96319 m!104645))

(assert (=> b!96316 m!104601))

(assert (=> b!96316 m!104601))

(assert (=> b!96316 m!104637))

(declare-fun m!104647 () Bool)

(assert (=> d!25457 m!104647))

(declare-fun m!104649 () Bool)

(assert (=> bm!9747 m!104649))

(declare-fun m!104651 () Bool)

(assert (=> bm!9752 m!104651))

(assert (=> d!25387 d!25457))

(declare-fun d!25459 () Bool)

(declare-fun res!48626 () Bool)

(declare-fun e!62820 () Bool)

(assert (=> d!25459 (=> (not res!48626) (not e!62820))))

(assert (=> d!25459 (= res!48626 (simpleValid!67 (_2!1155 lt!48003)))))

(assert (=> d!25459 (= (valid!387 (_2!1155 lt!48003)) e!62820)))

(declare-fun b!96337 () Bool)

(declare-fun res!48627 () Bool)

(assert (=> b!96337 (=> (not res!48627) (not e!62820))))

(assert (=> b!96337 (= res!48627 (= (arrayCountValidKeys!0 (_keys!4142 (_2!1155 lt!48003)) #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!48003)))) (_size!468 (_2!1155 lt!48003))))))

(declare-fun b!96338 () Bool)

(declare-fun res!48628 () Bool)

(assert (=> b!96338 (=> (not res!48628) (not e!62820))))

(assert (=> b!96338 (= res!48628 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 (_2!1155 lt!48003)) (mask!6541 (_2!1155 lt!48003))))))

(declare-fun b!96339 () Bool)

(assert (=> b!96339 (= e!62820 (arrayNoDuplicates!0 (_keys!4142 (_2!1155 lt!48003)) #b00000000000000000000000000000000 Nil!1556))))

(assert (= (and d!25459 res!48626) b!96337))

(assert (= (and b!96337 res!48627) b!96338))

(assert (= (and b!96338 res!48628) b!96339))

(declare-fun m!104653 () Bool)

(assert (=> d!25459 m!104653))

(declare-fun m!104655 () Bool)

(assert (=> b!96337 m!104655))

(declare-fun m!104657 () Bool)

(assert (=> b!96338 m!104657))

(declare-fun m!104659 () Bool)

(assert (=> b!96339 m!104659))

(assert (=> b!96143 d!25459))

(declare-fun d!25461 () Bool)

(declare-fun e!62821 () Bool)

(assert (=> d!25461 e!62821))

(declare-fun res!48629 () Bool)

(assert (=> d!25461 (=> res!48629 e!62821)))

(declare-fun lt!48148 () Bool)

(assert (=> d!25461 (= res!48629 (not lt!48148))))

(declare-fun lt!48149 () Bool)

(assert (=> d!25461 (= lt!48148 lt!48149)))

(declare-fun lt!48147 () Unit!2849)

(declare-fun e!62822 () Unit!2849)

(assert (=> d!25461 (= lt!48147 e!62822)))

(declare-fun c!16239 () Bool)

(assert (=> d!25461 (= c!16239 lt!48149)))

(assert (=> d!25461 (= lt!48149 (containsKey!153 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25461 (= (contains!783 lt!47882 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48148)))

(declare-fun b!96340 () Bool)

(declare-fun lt!48146 () Unit!2849)

(assert (=> b!96340 (= e!62822 lt!48146)))

(assert (=> b!96340 (= lt!48146 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> b!96340 (isDefined!102 (getValueByKey!150 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96341 () Bool)

(declare-fun Unit!2876 () Unit!2849)

(assert (=> b!96341 (= e!62822 Unit!2876)))

(declare-fun b!96342 () Bool)

(assert (=> b!96342 (= e!62821 (isDefined!102 (getValueByKey!150 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25461 c!16239) b!96340))

(assert (= (and d!25461 (not c!16239)) b!96341))

(assert (= (and d!25461 (not res!48629)) b!96342))

(declare-fun m!104661 () Bool)

(assert (=> d!25461 m!104661))

(declare-fun m!104663 () Bool)

(assert (=> b!96340 m!104663))

(assert (=> b!96340 m!104149))

(assert (=> b!96340 m!104149))

(declare-fun m!104665 () Bool)

(assert (=> b!96340 m!104665))

(assert (=> b!96342 m!104149))

(assert (=> b!96342 m!104149))

(assert (=> b!96342 m!104665))

(assert (=> d!25343 d!25461))

(declare-fun b!96345 () Bool)

(declare-fun e!62824 () Option!156)

(assert (=> b!96345 (= e!62824 (getValueByKey!150 (t!5472 lt!47883) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96346 () Bool)

(assert (=> b!96346 (= e!62824 None!154)))

(declare-fun d!25463 () Bool)

(declare-fun c!16240 () Bool)

(assert (=> d!25463 (= c!16240 (and ((_ is Cons!1554) lt!47883) (= (_1!1154 (h!2147 lt!47883)) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62823 () Option!156)

(assert (=> d!25463 (= (getValueByKey!150 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62823)))

(declare-fun b!96343 () Bool)

(assert (=> b!96343 (= e!62823 (Some!155 (_2!1154 (h!2147 lt!47883))))))

(declare-fun b!96344 () Bool)

(assert (=> b!96344 (= e!62823 e!62824)))

(declare-fun c!16241 () Bool)

(assert (=> b!96344 (= c!16241 (and ((_ is Cons!1554) lt!47883) (not (= (_1!1154 (h!2147 lt!47883)) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25463 c!16240) b!96343))

(assert (= (and d!25463 (not c!16240)) b!96344))

(assert (= (and b!96344 c!16241) b!96345))

(assert (= (and b!96344 (not c!16241)) b!96346))

(declare-fun m!104667 () Bool)

(assert (=> b!96345 m!104667))

(assert (=> d!25343 d!25463))

(declare-fun d!25465 () Bool)

(assert (=> d!25465 (= (getValueByKey!150 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48152 () Unit!2849)

(declare-fun choose!590 (List!1558 (_ BitVec 64) V!3137) Unit!2849)

(assert (=> d!25465 (= lt!48152 (choose!590 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!62827 () Bool)

(assert (=> d!25465 e!62827))

(declare-fun res!48634 () Bool)

(assert (=> d!25465 (=> (not res!48634) (not e!62827))))

(assert (=> d!25465 (= res!48634 (isStrictlySorted!290 lt!47883))))

(assert (=> d!25465 (= (lemmaContainsTupThenGetReturnValue!66 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48152)))

(declare-fun b!96351 () Bool)

(declare-fun res!48635 () Bool)

(assert (=> b!96351 (=> (not res!48635) (not e!62827))))

(assert (=> b!96351 (= res!48635 (containsKey!153 lt!47883 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96352 () Bool)

(assert (=> b!96352 (= e!62827 (contains!785 lt!47883 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25465 res!48634) b!96351))

(assert (= (and b!96351 res!48635) b!96352))

(assert (=> d!25465 m!104143))

(declare-fun m!104669 () Bool)

(assert (=> d!25465 m!104669))

(declare-fun m!104671 () Bool)

(assert (=> d!25465 m!104671))

(declare-fun m!104673 () Bool)

(assert (=> b!96351 m!104673))

(declare-fun m!104675 () Bool)

(assert (=> b!96352 m!104675))

(assert (=> d!25343 d!25465))

(declare-fun d!25467 () Bool)

(declare-fun e!62842 () Bool)

(assert (=> d!25467 e!62842))

(declare-fun res!48641 () Bool)

(assert (=> d!25467 (=> (not res!48641) (not e!62842))))

(declare-fun lt!48155 () List!1558)

(assert (=> d!25467 (= res!48641 (isStrictlySorted!290 lt!48155))))

(declare-fun e!62839 () List!1558)

(assert (=> d!25467 (= lt!48155 e!62839)))

(declare-fun c!16253 () Bool)

(assert (=> d!25467 (= c!16253 (and ((_ is Cons!1554) (toList!762 lt!47654)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47654))) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25467 (isStrictlySorted!290 (toList!762 lt!47654))))

(assert (=> d!25467 (= (insertStrictlySorted!69 (toList!762 lt!47654) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48155)))

(declare-fun b!96373 () Bool)

(declare-fun call!9764 () List!1558)

(assert (=> b!96373 (= e!62839 call!9764)))

(declare-fun bm!9759 () Bool)

(declare-fun call!9763 () List!1558)

(assert (=> bm!9759 (= call!9763 call!9764)))

(declare-fun b!96374 () Bool)

(assert (=> b!96374 (= e!62842 (contains!785 lt!48155 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62840 () List!1558)

(declare-fun bm!9760 () Bool)

(declare-fun $colon$colon!76 (List!1558 tuple2!2286) List!1558)

(assert (=> bm!9760 (= call!9764 ($colon$colon!76 e!62840 (ite c!16253 (h!2147 (toList!762 lt!47654)) (tuple2!2287 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun c!16251 () Bool)

(assert (=> bm!9760 (= c!16251 c!16253)))

(declare-fun b!96375 () Bool)

(declare-fun res!48640 () Bool)

(assert (=> b!96375 (=> (not res!48640) (not e!62842))))

(assert (=> b!96375 (= res!48640 (containsKey!153 lt!48155 (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun bm!9761 () Bool)

(declare-fun call!9762 () List!1558)

(assert (=> bm!9761 (= call!9762 call!9763)))

(declare-fun b!96376 () Bool)

(declare-fun e!62838 () List!1558)

(assert (=> b!96376 (= e!62838 call!9762)))

(declare-fun b!96377 () Bool)

(declare-fun e!62841 () List!1558)

(assert (=> b!96377 (= e!62841 call!9763)))

(declare-fun b!96378 () Bool)

(assert (=> b!96378 (= e!62839 e!62841)))

(declare-fun c!16252 () Bool)

(assert (=> b!96378 (= c!16252 (and ((_ is Cons!1554) (toList!762 lt!47654)) (= (_1!1154 (h!2147 (toList!762 lt!47654))) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun c!16250 () Bool)

(declare-fun b!96379 () Bool)

(assert (=> b!96379 (= c!16250 (and ((_ is Cons!1554) (toList!762 lt!47654)) (bvsgt (_1!1154 (h!2147 (toList!762 lt!47654))) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!96379 (= e!62841 e!62838)))

(declare-fun b!96380 () Bool)

(assert (=> b!96380 (= e!62840 (insertStrictlySorted!69 (t!5472 (toList!762 lt!47654)) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96381 () Bool)

(assert (=> b!96381 (= e!62838 call!9762)))

(declare-fun b!96382 () Bool)

(assert (=> b!96382 (= e!62840 (ite c!16252 (t!5472 (toList!762 lt!47654)) (ite c!16250 (Cons!1554 (h!2147 (toList!762 lt!47654)) (t!5472 (toList!762 lt!47654))) Nil!1555)))))

(assert (= (and d!25467 c!16253) b!96373))

(assert (= (and d!25467 (not c!16253)) b!96378))

(assert (= (and b!96378 c!16252) b!96377))

(assert (= (and b!96378 (not c!16252)) b!96379))

(assert (= (and b!96379 c!16250) b!96376))

(assert (= (and b!96379 (not c!16250)) b!96381))

(assert (= (or b!96376 b!96381) bm!9761))

(assert (= (or b!96377 bm!9761) bm!9759))

(assert (= (or b!96373 bm!9759) bm!9760))

(assert (= (and bm!9760 c!16251) b!96380))

(assert (= (and bm!9760 (not c!16251)) b!96382))

(assert (= (and d!25467 res!48641) b!96375))

(assert (= (and b!96375 res!48640) b!96374))

(declare-fun m!104677 () Bool)

(assert (=> b!96375 m!104677))

(declare-fun m!104679 () Bool)

(assert (=> b!96374 m!104679))

(declare-fun m!104681 () Bool)

(assert (=> bm!9760 m!104681))

(declare-fun m!104683 () Bool)

(assert (=> d!25467 m!104683))

(declare-fun m!104685 () Bool)

(assert (=> d!25467 m!104685))

(declare-fun m!104687 () Bool)

(assert (=> b!96380 m!104687))

(assert (=> d!25343 d!25467))

(declare-fun b!96386 () Bool)

(declare-fun e!62843 () Bool)

(assert (=> b!96386 (= e!62843 (and (bvsge (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000011) (bvsge (_vacant!468 (_2!1155 lt!47762)) #b00000000000000000000000000000000)))))

(declare-fun b!96385 () Bool)

(declare-fun res!48645 () Bool)

(assert (=> b!96385 (=> (not res!48645) (not e!62843))))

(assert (=> b!96385 (= res!48645 (= (size!2249 (_2!1155 lt!47762)) (bvadd (_size!468 (_2!1155 lt!47762)) (bvsdiv (bvadd (extraKeys!2281 (_2!1155 lt!47762)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!25469 () Bool)

(declare-fun res!48642 () Bool)

(assert (=> d!25469 (=> (not res!48642) (not e!62843))))

(assert (=> d!25469 (= res!48642 (validMask!0 (mask!6541 (_2!1155 lt!47762))))))

(assert (=> d!25469 (= (simpleValid!67 (_2!1155 lt!47762)) e!62843)))

(declare-fun b!96383 () Bool)

(declare-fun res!48644 () Bool)

(assert (=> b!96383 (=> (not res!48644) (not e!62843))))

(assert (=> b!96383 (= res!48644 (and (= (size!2244 (_values!2439 (_2!1155 lt!47762))) (bvadd (mask!6541 (_2!1155 lt!47762)) #b00000000000000000000000000000001)) (= (size!2243 (_keys!4142 (_2!1155 lt!47762))) (size!2244 (_values!2439 (_2!1155 lt!47762)))) (bvsge (_size!468 (_2!1155 lt!47762)) #b00000000000000000000000000000000) (bvsle (_size!468 (_2!1155 lt!47762)) (bvadd (mask!6541 (_2!1155 lt!47762)) #b00000000000000000000000000000001))))))

(declare-fun b!96384 () Bool)

(declare-fun res!48643 () Bool)

(assert (=> b!96384 (=> (not res!48643) (not e!62843))))

(assert (=> b!96384 (= res!48643 (bvsge (size!2249 (_2!1155 lt!47762)) (_size!468 (_2!1155 lt!47762))))))

(assert (= (and d!25469 res!48642) b!96383))

(assert (= (and b!96383 res!48644) b!96384))

(assert (= (and b!96384 res!48643) b!96385))

(assert (= (and b!96385 res!48645) b!96386))

(declare-fun m!104689 () Bool)

(assert (=> b!96385 m!104689))

(assert (=> d!25469 m!104647))

(assert (=> b!96384 m!104689))

(assert (=> d!25309 d!25469))

(assert (=> d!25311 d!25421))

(declare-fun d!25471 () Bool)

(assert (=> d!25471 (= (get!1281 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2786 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25375 d!25471))

(assert (=> d!25375 d!25451))

(declare-fun e!62845 () Option!156)

(declare-fun b!96389 () Bool)

(assert (=> b!96389 (= e!62845 (getValueByKey!150 (t!5472 (toList!762 lt!47915)) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96390 () Bool)

(assert (=> b!96390 (= e!62845 None!154)))

(declare-fun d!25473 () Bool)

(declare-fun c!16254 () Bool)

(assert (=> d!25473 (= c!16254 (and ((_ is Cons!1554) (toList!762 lt!47915)) (= (_1!1154 (h!2147 (toList!762 lt!47915))) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62844 () Option!156)

(assert (=> d!25473 (= (getValueByKey!150 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62844)))

(declare-fun b!96387 () Bool)

(assert (=> b!96387 (= e!62844 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47915)))))))

(declare-fun b!96388 () Bool)

(assert (=> b!96388 (= e!62844 e!62845)))

(declare-fun c!16255 () Bool)

(assert (=> b!96388 (= c!16255 (and ((_ is Cons!1554) (toList!762 lt!47915)) (not (= (_1!1154 (h!2147 (toList!762 lt!47915))) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25473 c!16254) b!96387))

(assert (= (and d!25473 (not c!16254)) b!96388))

(assert (= (and b!96388 c!16255) b!96389))

(assert (= (and b!96388 (not c!16255)) b!96390))

(declare-fun m!104691 () Bool)

(assert (=> b!96389 m!104691))

(assert (=> b!96102 d!25473))

(declare-fun d!25475 () Bool)

(assert (=> d!25475 (= (get!1281 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2786 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25295 d!25475))

(declare-fun e!62847 () Option!156)

(declare-fun b!96393 () Bool)

(assert (=> b!96393 (= e!62847 (getValueByKey!150 (t!5472 (toList!762 lt!47659)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!96394 () Bool)

(assert (=> b!96394 (= e!62847 None!154)))

(declare-fun d!25477 () Bool)

(declare-fun c!16256 () Bool)

(assert (=> d!25477 (= c!16256 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!62846 () Option!156)

(assert (=> d!25477 (= (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!62846)))

(declare-fun b!96391 () Bool)

(assert (=> b!96391 (= e!62846 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47659)))))))

(declare-fun b!96392 () Bool)

(assert (=> b!96392 (= e!62846 e!62847)))

(declare-fun c!16257 () Bool)

(assert (=> b!96392 (= c!16257 (and ((_ is Cons!1554) (toList!762 lt!47659)) (not (= (_1!1154 (h!2147 (toList!762 lt!47659))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!25477 c!16256) b!96391))

(assert (= (and d!25477 (not c!16256)) b!96392))

(assert (= (and b!96392 c!16257) b!96393))

(assert (= (and b!96392 (not c!16257)) b!96394))

(assert (=> b!96393 m!103777))

(declare-fun m!104693 () Bool)

(assert (=> b!96393 m!104693))

(assert (=> d!25295 d!25477))

(assert (=> d!25321 d!25323))

(assert (=> d!25321 d!25325))

(declare-fun d!25479 () Bool)

(assert (=> d!25479 (isDefined!102 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25479 true))

(declare-fun _$12!341 () Unit!2849)

(assert (=> d!25479 (= (choose!584 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) _$12!341)))

(declare-fun bs!3968 () Bool)

(assert (= bs!3968 d!25479))

(assert (=> bs!3968 m!103635))

(assert (=> bs!3968 m!103831))

(assert (=> bs!3968 m!103831))

(assert (=> bs!3968 m!103833))

(assert (=> d!25321 d!25479))

(declare-fun d!25481 () Bool)

(declare-fun res!48650 () Bool)

(declare-fun e!62852 () Bool)

(assert (=> d!25481 (=> res!48650 e!62852)))

(assert (=> d!25481 (= res!48650 (or ((_ is Nil!1555) (toList!762 lt!47565)) ((_ is Nil!1555) (t!5472 (toList!762 lt!47565)))))))

(assert (=> d!25481 (= (isStrictlySorted!290 (toList!762 lt!47565)) e!62852)))

(declare-fun b!96399 () Bool)

(declare-fun e!62853 () Bool)

(assert (=> b!96399 (= e!62852 e!62853)))

(declare-fun res!48651 () Bool)

(assert (=> b!96399 (=> (not res!48651) (not e!62853))))

(assert (=> b!96399 (= res!48651 (bvslt (_1!1154 (h!2147 (toList!762 lt!47565))) (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565))))))))

(declare-fun b!96400 () Bool)

(assert (=> b!96400 (= e!62853 (isStrictlySorted!290 (t!5472 (toList!762 lt!47565))))))

(assert (= (and d!25481 (not res!48650)) b!96399))

(assert (= (and b!96399 res!48651) b!96400))

(declare-fun m!104695 () Bool)

(assert (=> b!96400 m!104695))

(assert (=> d!25321 d!25481))

(assert (=> d!25299 d!25421))

(assert (=> b!96101 d!25331))

(declare-fun d!25483 () Bool)

(declare-fun lt!48156 () Bool)

(assert (=> d!25483 (= lt!48156 (select (content!100 Nil!1556) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62855 () Bool)

(assert (=> d!25483 (= lt!48156 e!62855)))

(declare-fun res!48652 () Bool)

(assert (=> d!25483 (=> (not res!48652) (not e!62855))))

(assert (=> d!25483 (= res!48652 ((_ is Cons!1555) Nil!1556))))

(assert (=> d!25483 (= (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) lt!48156)))

(declare-fun b!96401 () Bool)

(declare-fun e!62854 () Bool)

(assert (=> b!96401 (= e!62855 e!62854)))

(declare-fun res!48653 () Bool)

(assert (=> b!96401 (=> res!48653 e!62854)))

(assert (=> b!96401 (= res!48653 (= (h!2148 Nil!1556) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96402 () Bool)

(assert (=> b!96402 (= e!62854 (contains!784 (t!5473 Nil!1556) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25483 res!48652) b!96401))

(assert (= (and b!96401 (not res!48653)) b!96402))

(assert (=> d!25483 m!103911))

(assert (=> d!25483 m!103953))

(declare-fun m!104697 () Bool)

(assert (=> d!25483 m!104697))

(assert (=> b!96402 m!103953))

(declare-fun m!104699 () Bool)

(assert (=> b!96402 m!104699))

(assert (=> b!96240 d!25483))

(declare-fun d!25485 () Bool)

(declare-fun e!62856 () Bool)

(assert (=> d!25485 e!62856))

(declare-fun res!48654 () Bool)

(assert (=> d!25485 (=> res!48654 e!62856)))

(declare-fun lt!48159 () Bool)

(assert (=> d!25485 (= res!48654 (not lt!48159))))

(declare-fun lt!48160 () Bool)

(assert (=> d!25485 (= lt!48159 lt!48160)))

(declare-fun lt!48158 () Unit!2849)

(declare-fun e!62857 () Unit!2849)

(assert (=> d!25485 (= lt!48158 e!62857)))

(declare-fun c!16258 () Bool)

(assert (=> d!25485 (= c!16258 lt!48160)))

(assert (=> d!25485 (= lt!48160 (containsKey!153 (toList!762 lt!47818) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25485 (= (contains!783 lt!47818 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48159)))

(declare-fun b!96403 () Bool)

(declare-fun lt!48157 () Unit!2849)

(assert (=> b!96403 (= e!62857 lt!48157)))

(assert (=> b!96403 (= lt!48157 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47818) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96403 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96404 () Bool)

(declare-fun Unit!2877 () Unit!2849)

(assert (=> b!96404 (= e!62857 Unit!2877)))

(declare-fun b!96405 () Bool)

(assert (=> b!96405 (= e!62856 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25485 c!16258) b!96403))

(assert (= (and d!25485 (not c!16258)) b!96404))

(assert (= (and d!25485 (not res!48654)) b!96405))

(declare-fun m!104701 () Bool)

(assert (=> d!25485 m!104701))

(declare-fun m!104703 () Bool)

(assert (=> b!96403 m!104703))

(declare-fun m!104705 () Bool)

(assert (=> b!96403 m!104705))

(assert (=> b!96403 m!104705))

(declare-fun m!104707 () Bool)

(assert (=> b!96403 m!104707))

(assert (=> b!96405 m!104705))

(assert (=> b!96405 m!104705))

(assert (=> b!96405 m!104707))

(assert (=> bm!9700 d!25485))

(declare-fun d!25487 () Bool)

(declare-fun e!62858 () Bool)

(assert (=> d!25487 e!62858))

(declare-fun res!48655 () Bool)

(assert (=> d!25487 (=> res!48655 e!62858)))

(declare-fun lt!48163 () Bool)

(assert (=> d!25487 (= res!48655 (not lt!48163))))

(declare-fun lt!48164 () Bool)

(assert (=> d!25487 (= lt!48163 lt!48164)))

(declare-fun lt!48162 () Unit!2849)

(declare-fun e!62859 () Unit!2849)

(assert (=> d!25487 (= lt!48162 e!62859)))

(declare-fun c!16259 () Bool)

(assert (=> d!25487 (= c!16259 lt!48164)))

(assert (=> d!25487 (= lt!48164 (containsKey!153 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25487 (= (contains!783 lt!47890 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48163)))

(declare-fun b!96406 () Bool)

(declare-fun lt!48161 () Unit!2849)

(assert (=> b!96406 (= e!62859 lt!48161)))

(assert (=> b!96406 (= lt!48161 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> b!96406 (isDefined!102 (getValueByKey!150 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96407 () Bool)

(declare-fun Unit!2878 () Unit!2849)

(assert (=> b!96407 (= e!62859 Unit!2878)))

(declare-fun b!96408 () Bool)

(assert (=> b!96408 (= e!62858 (isDefined!102 (getValueByKey!150 (toList!762 lt!47890) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25487 c!16259) b!96406))

(assert (= (and d!25487 (not c!16259)) b!96407))

(assert (= (and d!25487 (not res!48655)) b!96408))

(declare-fun m!104709 () Bool)

(assert (=> d!25487 m!104709))

(declare-fun m!104711 () Bool)

(assert (=> b!96406 m!104711))

(assert (=> b!96406 m!104185))

(assert (=> b!96406 m!104185))

(declare-fun m!104713 () Bool)

(assert (=> b!96406 m!104713))

(assert (=> b!96408 m!104185))

(assert (=> b!96408 m!104185))

(assert (=> b!96408 m!104713))

(assert (=> d!25353 d!25487))

(declare-fun b!96411 () Bool)

(declare-fun e!62861 () Option!156)

(assert (=> b!96411 (= e!62861 (getValueByKey!150 (t!5472 lt!47891) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96412 () Bool)

(assert (=> b!96412 (= e!62861 None!154)))

(declare-fun c!16260 () Bool)

(declare-fun d!25489 () Bool)

(assert (=> d!25489 (= c!16260 (and ((_ is Cons!1554) lt!47891) (= (_1!1154 (h!2147 lt!47891)) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62860 () Option!156)

(assert (=> d!25489 (= (getValueByKey!150 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62860)))

(declare-fun b!96409 () Bool)

(assert (=> b!96409 (= e!62860 (Some!155 (_2!1154 (h!2147 lt!47891))))))

(declare-fun b!96410 () Bool)

(assert (=> b!96410 (= e!62860 e!62861)))

(declare-fun c!16261 () Bool)

(assert (=> b!96410 (= c!16261 (and ((_ is Cons!1554) lt!47891) (not (= (_1!1154 (h!2147 lt!47891)) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25489 c!16260) b!96409))

(assert (= (and d!25489 (not c!16260)) b!96410))

(assert (= (and b!96410 c!16261) b!96411))

(assert (= (and b!96410 (not c!16261)) b!96412))

(declare-fun m!104715 () Bool)

(assert (=> b!96411 m!104715))

(assert (=> d!25353 d!25489))

(declare-fun d!25491 () Bool)

(assert (=> d!25491 (= (getValueByKey!150 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48165 () Unit!2849)

(assert (=> d!25491 (= lt!48165 (choose!590 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!62862 () Bool)

(assert (=> d!25491 e!62862))

(declare-fun res!48656 () Bool)

(assert (=> d!25491 (=> (not res!48656) (not e!62862))))

(assert (=> d!25491 (= res!48656 (isStrictlySorted!290 lt!47891))))

(assert (=> d!25491 (= (lemmaContainsTupThenGetReturnValue!66 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48165)))

(declare-fun b!96413 () Bool)

(declare-fun res!48657 () Bool)

(assert (=> b!96413 (=> (not res!48657) (not e!62862))))

(assert (=> b!96413 (= res!48657 (containsKey!153 lt!47891 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96414 () Bool)

(assert (=> b!96414 (= e!62862 (contains!785 lt!47891 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25491 res!48656) b!96413))

(assert (= (and b!96413 res!48657) b!96414))

(assert (=> d!25491 m!104179))

(declare-fun m!104717 () Bool)

(assert (=> d!25491 m!104717))

(declare-fun m!104719 () Bool)

(assert (=> d!25491 m!104719))

(declare-fun m!104721 () Bool)

(assert (=> b!96413 m!104721))

(declare-fun m!104723 () Bool)

(assert (=> b!96414 m!104723))

(assert (=> d!25353 d!25491))

(declare-fun d!25493 () Bool)

(declare-fun e!62867 () Bool)

(assert (=> d!25493 e!62867))

(declare-fun res!48659 () Bool)

(assert (=> d!25493 (=> (not res!48659) (not e!62867))))

(declare-fun lt!48166 () List!1558)

(assert (=> d!25493 (= res!48659 (isStrictlySorted!290 lt!48166))))

(declare-fun e!62864 () List!1558)

(assert (=> d!25493 (= lt!48166 e!62864)))

(declare-fun c!16265 () Bool)

(assert (=> d!25493 (= c!16265 (and ((_ is Cons!1554) (toList!762 lt!47671)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47671))) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25493 (isStrictlySorted!290 (toList!762 lt!47671))))

(assert (=> d!25493 (= (insertStrictlySorted!69 (toList!762 lt!47671) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48166)))

(declare-fun b!96415 () Bool)

(declare-fun call!9767 () List!1558)

(assert (=> b!96415 (= e!62864 call!9767)))

(declare-fun bm!9762 () Bool)

(declare-fun call!9766 () List!1558)

(assert (=> bm!9762 (= call!9766 call!9767)))

(declare-fun b!96416 () Bool)

(assert (=> b!96416 (= e!62867 (contains!785 lt!48166 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62865 () List!1558)

(declare-fun bm!9763 () Bool)

(assert (=> bm!9763 (= call!9767 ($colon$colon!76 e!62865 (ite c!16265 (h!2147 (toList!762 lt!47671)) (tuple2!2287 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun c!16263 () Bool)

(assert (=> bm!9763 (= c!16263 c!16265)))

(declare-fun b!96417 () Bool)

(declare-fun res!48658 () Bool)

(assert (=> b!96417 (=> (not res!48658) (not e!62867))))

(assert (=> b!96417 (= res!48658 (containsKey!153 lt!48166 (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun bm!9764 () Bool)

(declare-fun call!9765 () List!1558)

(assert (=> bm!9764 (= call!9765 call!9766)))

(declare-fun b!96418 () Bool)

(declare-fun e!62863 () List!1558)

(assert (=> b!96418 (= e!62863 call!9765)))

(declare-fun b!96419 () Bool)

(declare-fun e!62866 () List!1558)

(assert (=> b!96419 (= e!62866 call!9766)))

(declare-fun b!96420 () Bool)

(assert (=> b!96420 (= e!62864 e!62866)))

(declare-fun c!16264 () Bool)

(assert (=> b!96420 (= c!16264 (and ((_ is Cons!1554) (toList!762 lt!47671)) (= (_1!1154 (h!2147 (toList!762 lt!47671))) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96421 () Bool)

(declare-fun c!16262 () Bool)

(assert (=> b!96421 (= c!16262 (and ((_ is Cons!1554) (toList!762 lt!47671)) (bvsgt (_1!1154 (h!2147 (toList!762 lt!47671))) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!96421 (= e!62866 e!62863)))

(declare-fun b!96422 () Bool)

(assert (=> b!96422 (= e!62865 (insertStrictlySorted!69 (t!5472 (toList!762 lt!47671)) (_1!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96423 () Bool)

(assert (=> b!96423 (= e!62863 call!9765)))

(declare-fun b!96424 () Bool)

(assert (=> b!96424 (= e!62865 (ite c!16264 (t!5472 (toList!762 lt!47671)) (ite c!16262 (Cons!1554 (h!2147 (toList!762 lt!47671)) (t!5472 (toList!762 lt!47671))) Nil!1555)))))

(assert (= (and d!25493 c!16265) b!96415))

(assert (= (and d!25493 (not c!16265)) b!96420))

(assert (= (and b!96420 c!16264) b!96419))

(assert (= (and b!96420 (not c!16264)) b!96421))

(assert (= (and b!96421 c!16262) b!96418))

(assert (= (and b!96421 (not c!16262)) b!96423))

(assert (= (or b!96418 b!96423) bm!9764))

(assert (= (or b!96419 bm!9764) bm!9762))

(assert (= (or b!96415 bm!9762) bm!9763))

(assert (= (and bm!9763 c!16263) b!96422))

(assert (= (and bm!9763 (not c!16263)) b!96424))

(assert (= (and d!25493 res!48659) b!96417))

(assert (= (and b!96417 res!48658) b!96416))

(declare-fun m!104725 () Bool)

(assert (=> b!96417 m!104725))

(declare-fun m!104727 () Bool)

(assert (=> b!96416 m!104727))

(declare-fun m!104729 () Bool)

(assert (=> bm!9763 m!104729))

(declare-fun m!104731 () Bool)

(assert (=> d!25493 m!104731))

(declare-fun m!104733 () Bool)

(assert (=> d!25493 m!104733))

(declare-fun m!104735 () Bool)

(assert (=> b!96422 m!104735))

(assert (=> d!25353 d!25493))

(declare-fun d!25495 () Bool)

(declare-fun e!62868 () Bool)

(assert (=> d!25495 e!62868))

(declare-fun res!48660 () Bool)

(assert (=> d!25495 (=> res!48660 e!62868)))

(declare-fun lt!48169 () Bool)

(assert (=> d!25495 (= res!48660 (not lt!48169))))

(declare-fun lt!48170 () Bool)

(assert (=> d!25495 (= lt!48169 lt!48170)))

(declare-fun lt!48168 () Unit!2849)

(declare-fun e!62869 () Unit!2849)

(assert (=> d!25495 (= lt!48168 e!62869)))

(declare-fun c!16266 () Bool)

(assert (=> d!25495 (= c!16266 lt!48170)))

(assert (=> d!25495 (= lt!48170 (containsKey!153 (toList!762 lt!47789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25495 (= (contains!783 lt!47789 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48169)))

(declare-fun b!96425 () Bool)

(declare-fun lt!48167 () Unit!2849)

(assert (=> b!96425 (= e!62869 lt!48167)))

(assert (=> b!96425 (= lt!48167 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96425 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96426 () Bool)

(declare-fun Unit!2879 () Unit!2849)

(assert (=> b!96426 (= e!62869 Unit!2879)))

(declare-fun b!96427 () Bool)

(assert (=> b!96427 (= e!62868 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25495 c!16266) b!96425))

(assert (= (and d!25495 (not c!16266)) b!96426))

(assert (= (and d!25495 (not res!48660)) b!96427))

(declare-fun m!104737 () Bool)

(assert (=> d!25495 m!104737))

(declare-fun m!104739 () Bool)

(assert (=> b!96425 m!104739))

(declare-fun m!104741 () Bool)

(assert (=> b!96425 m!104741))

(assert (=> b!96425 m!104741))

(declare-fun m!104743 () Bool)

(assert (=> b!96425 m!104743))

(assert (=> b!96427 m!104741))

(assert (=> b!96427 m!104741))

(assert (=> b!96427 m!104743))

(assert (=> bm!9690 d!25495))

(assert (=> d!25379 d!25335))

(declare-fun b!96444 () Bool)

(declare-fun res!48670 () Bool)

(declare-fun e!62880 () Bool)

(assert (=> b!96444 (=> (not res!48670) (not e!62880))))

(declare-fun lt!48173 () SeekEntryResult!246)

(assert (=> b!96444 (= res!48670 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!48173)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96445 () Bool)

(declare-fun e!62878 () Bool)

(declare-fun e!62881 () Bool)

(assert (=> b!96445 (= e!62878 e!62881)))

(declare-fun c!16271 () Bool)

(assert (=> b!96445 (= c!16271 ((_ is MissingVacant!246) lt!48173))))

(declare-fun b!96446 () Bool)

(declare-fun res!48672 () Bool)

(assert (=> b!96446 (=> (not res!48672) (not e!62880))))

(declare-fun call!9773 () Bool)

(assert (=> b!96446 (= res!48672 call!9773)))

(assert (=> b!96446 (= e!62881 e!62880)))

(declare-fun bm!9769 () Bool)

(declare-fun call!9772 () Bool)

(assert (=> bm!9769 (= call!9772 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!96447 () Bool)

(declare-fun res!48671 () Bool)

(assert (=> b!96447 (= res!48671 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!48173)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62879 () Bool)

(assert (=> b!96447 (=> (not res!48671) (not e!62879))))

(declare-fun b!96448 () Bool)

(assert (=> b!96448 (= e!62880 (not call!9772))))

(declare-fun c!16272 () Bool)

(declare-fun bm!9770 () Bool)

(assert (=> bm!9770 (= call!9773 (inRange!0 (ite c!16272 (index!3126 lt!48173) (index!3129 lt!48173)) (mask!6541 newMap!16)))))

(declare-fun b!96449 () Bool)

(assert (=> b!96449 (= e!62878 e!62879)))

(declare-fun res!48669 () Bool)

(assert (=> b!96449 (= res!48669 call!9773)))

(assert (=> b!96449 (=> (not res!48669) (not e!62879))))

(declare-fun d!25497 () Bool)

(assert (=> d!25497 e!62878))

(assert (=> d!25497 (= c!16272 ((_ is MissingZero!246) lt!48173))))

(assert (=> d!25497 (= lt!48173 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (=> d!25497 true))

(declare-fun _$34!858 () Unit!2849)

(assert (=> d!25497 (= (choose!587 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) _$34!858)))

(declare-fun b!96450 () Bool)

(assert (=> b!96450 (= e!62879 (not call!9772))))

(declare-fun b!96451 () Bool)

(assert (=> b!96451 (= e!62881 ((_ is Undefined!246) lt!48173))))

(assert (= (and d!25497 c!16272) b!96449))

(assert (= (and d!25497 (not c!16272)) b!96445))

(assert (= (and b!96449 res!48669) b!96447))

(assert (= (and b!96447 res!48671) b!96450))

(assert (= (and b!96445 c!16271) b!96446))

(assert (= (and b!96445 (not c!16271)) b!96451))

(assert (= (and b!96446 res!48672) b!96444))

(assert (= (and b!96444 res!48670) b!96448))

(assert (= (or b!96449 b!96446) bm!9770))

(assert (= (or b!96450 b!96448) bm!9769))

(declare-fun m!104745 () Bool)

(assert (=> b!96447 m!104745))

(declare-fun m!104747 () Bool)

(assert (=> b!96444 m!104747))

(assert (=> d!25497 m!103635))

(assert (=> d!25497 m!103847))

(assert (=> bm!9769 m!103635))

(assert (=> bm!9769 m!103869))

(declare-fun m!104749 () Bool)

(assert (=> bm!9770 m!104749))

(assert (=> d!25379 d!25497))

(assert (=> d!25379 d!25421))

(declare-fun b!96452 () Bool)

(declare-fun e!62882 () (_ BitVec 32))

(declare-fun e!62883 () (_ BitVec 32))

(assert (=> b!96452 (= e!62882 e!62883)))

(declare-fun c!16273 () Bool)

(assert (=> b!96452 (= c!16273 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun bm!9771 () Bool)

(declare-fun call!9774 () (_ BitVec 32))

(assert (=> bm!9771 (= call!9774 (arrayCountValidKeys!0 (_keys!4142 (_2!1155 lt!47762)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(declare-fun b!96453 () Bool)

(assert (=> b!96453 (= e!62883 call!9774)))

(declare-fun b!96454 () Bool)

(assert (=> b!96454 (= e!62883 (bvadd #b00000000000000000000000000000001 call!9774))))

(declare-fun b!96455 () Bool)

(assert (=> b!96455 (= e!62882 #b00000000000000000000000000000000)))

(declare-fun d!25499 () Bool)

(declare-fun lt!48174 () (_ BitVec 32))

(assert (=> d!25499 (and (bvsge lt!48174 #b00000000000000000000000000000000) (bvsle lt!48174 (bvsub (size!2243 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(assert (=> d!25499 (= lt!48174 e!62882)))

(declare-fun c!16274 () Bool)

(assert (=> d!25499 (= c!16274 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (=> d!25499 (and (bvsle #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2243 (_keys!4142 (_2!1155 lt!47762))) (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (=> d!25499 (= (arrayCountValidKeys!0 (_keys!4142 (_2!1155 lt!47762)) #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))) lt!48174)))

(assert (= (and d!25499 c!16274) b!96455))

(assert (= (and d!25499 (not c!16274)) b!96452))

(assert (= (and b!96452 c!16273) b!96454))

(assert (= (and b!96452 (not c!16273)) b!96453))

(assert (= (or b!96454 b!96453) bm!9771))

(assert (=> b!96452 m!104601))

(assert (=> b!96452 m!104601))

(assert (=> b!96452 m!104637))

(declare-fun m!104751 () Bool)

(assert (=> bm!9771 m!104751))

(assert (=> b!95969 d!25499))

(assert (=> d!25389 d!25421))

(assert (=> d!25373 d!25281))

(declare-fun b!96456 () Bool)

(declare-fun lt!48179 () ListLongMap!1493)

(declare-fun e!62887 () Bool)

(assert (=> b!96456 (= e!62887 (= lt!48179 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96457 () Bool)

(assert (=> b!96457 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> b!96457 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!62889 () Bool)

(assert (=> b!96457 (= e!62889 (= (apply!91 lt!48179 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96458 () Bool)

(declare-fun e!62888 () Bool)

(assert (=> b!96458 (= e!62888 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!96458 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!96459 () Bool)

(assert (=> b!96459 (= e!62887 (isEmpty!360 lt!48179))))

(declare-fun b!96460 () Bool)

(declare-fun e!62885 () ListLongMap!1493)

(declare-fun call!9775 () ListLongMap!1493)

(assert (=> b!96460 (= e!62885 call!9775)))

(declare-fun b!96461 () Bool)

(declare-fun res!48675 () Bool)

(declare-fun e!62884 () Bool)

(assert (=> b!96461 (=> (not res!48675) (not e!62884))))

(assert (=> b!96461 (= res!48675 (not (contains!783 lt!48179 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96462 () Bool)

(declare-fun lt!48176 () Unit!2849)

(declare-fun lt!48181 () Unit!2849)

(assert (=> b!96462 (= lt!48176 lt!48181)))

(declare-fun lt!48177 () (_ BitVec 64))

(declare-fun lt!48175 () (_ BitVec 64))

(declare-fun lt!48180 () ListLongMap!1493)

(declare-fun lt!48178 () V!3137)

(assert (=> b!96462 (not (contains!783 (+!129 lt!48180 (tuple2!2287 lt!48177 lt!48178)) lt!48175))))

(assert (=> b!96462 (= lt!48181 (addStillNotContains!41 lt!48180 lt!48177 lt!48178 lt!48175))))

(assert (=> b!96462 (= lt!48175 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96462 (= lt!48178 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96462 (= lt!48177 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!96462 (= lt!48180 call!9775)))

(assert (=> b!96462 (= e!62885 (+!129 call!9775 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96463 () Bool)

(declare-fun e!62886 () ListLongMap!1493)

(assert (=> b!96463 (= e!62886 (ListLongMap!1494 Nil!1555))))

(declare-fun b!96464 () Bool)

(declare-fun e!62890 () Bool)

(assert (=> b!96464 (= e!62884 e!62890)))

(declare-fun c!16277 () Bool)

(assert (=> b!96464 (= c!16277 e!62888)))

(declare-fun res!48673 () Bool)

(assert (=> b!96464 (=> (not res!48673) (not e!62888))))

(assert (=> b!96464 (= res!48673 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96465 () Bool)

(assert (=> b!96465 (= e!62890 e!62887)))

(declare-fun c!16276 () Bool)

(assert (=> b!96465 (= c!16276 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96466 () Bool)

(assert (=> b!96466 (= e!62890 e!62889)))

(assert (=> b!96466 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun res!48676 () Bool)

(assert (=> b!96466 (= res!48676 (contains!783 lt!48179 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!96466 (=> (not res!48676) (not e!62889))))

(declare-fun b!96467 () Bool)

(assert (=> b!96467 (= e!62886 e!62885)))

(declare-fun c!16275 () Bool)

(assert (=> b!96467 (= c!16275 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!9772 () Bool)

(assert (=> bm!9772 (= call!9775 (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))))))

(declare-fun d!25501 () Bool)

(assert (=> d!25501 e!62884))

(declare-fun res!48674 () Bool)

(assert (=> d!25501 (=> (not res!48674) (not e!62884))))

(assert (=> d!25501 (= res!48674 (not (contains!783 lt!48179 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25501 (= lt!48179 e!62886)))

(declare-fun c!16278 () Bool)

(assert (=> d!25501 (= c!16278 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25501 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992))))))

(assert (=> d!25501 (= (getCurrentListMapNoExtraKeys!94 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (_values!2439 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992))) (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) (minValue!2341 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992)))) lt!48179)))

(assert (= (and d!25501 c!16278) b!96463))

(assert (= (and d!25501 (not c!16278)) b!96467))

(assert (= (and b!96467 c!16275) b!96462))

(assert (= (and b!96467 (not c!16275)) b!96460))

(assert (= (or b!96462 b!96460) bm!9772))

(assert (= (and d!25501 res!48674) b!96461))

(assert (= (and b!96461 res!48675) b!96464))

(assert (= (and b!96464 res!48673) b!96458))

(assert (= (and b!96464 c!16277) b!96466))

(assert (= (and b!96464 (not c!16277)) b!96465))

(assert (= (and b!96466 res!48676) b!96457))

(assert (= (and b!96465 c!16276) b!96456))

(assert (= (and b!96465 (not c!16276)) b!96459))

(declare-fun b_lambda!4265 () Bool)

(assert (=> (not b_lambda!4265) (not b!96457)))

(assert (=> b!96457 t!5469))

(declare-fun b_and!5889 () Bool)

(assert (= b_and!5885 (and (=> t!5469 result!3205) b_and!5889)))

(assert (=> b!96457 t!5471))

(declare-fun b_and!5891 () Bool)

(assert (= b_and!5887 (and (=> t!5471 result!3209) b_and!5891)))

(declare-fun b_lambda!4267 () Bool)

(assert (=> (not b_lambda!4267) (not b!96462)))

(assert (=> b!96462 t!5469))

(declare-fun b_and!5893 () Bool)

(assert (= b_and!5889 (and (=> t!5469 result!3205) b_and!5893)))

(assert (=> b!96462 t!5471))

(declare-fun b_and!5895 () Bool)

(assert (= b_and!5891 (and (=> t!5471 result!3209) b_and!5895)))

(declare-fun m!104753 () Bool)

(assert (=> d!25501 m!104753))

(assert (=> d!25501 m!103641))

(declare-fun m!104755 () Bool)

(assert (=> b!96459 m!104755))

(declare-fun m!104757 () Bool)

(assert (=> b!96461 m!104757))

(declare-fun m!104759 () Bool)

(assert (=> bm!9772 m!104759))

(declare-fun m!104761 () Bool)

(assert (=> b!96457 m!104761))

(assert (=> b!96457 m!103631))

(declare-fun m!104763 () Bool)

(assert (=> b!96457 m!104763))

(assert (=> b!96457 m!103631))

(assert (=> b!96457 m!103917))

(assert (=> b!96457 m!104761))

(assert (=> b!96457 m!103917))

(declare-fun m!104765 () Bool)

(assert (=> b!96457 m!104765))

(assert (=> b!96462 m!104761))

(assert (=> b!96462 m!103631))

(assert (=> b!96462 m!104763))

(assert (=> b!96462 m!103631))

(declare-fun m!104767 () Bool)

(assert (=> b!96462 m!104767))

(declare-fun m!104769 () Bool)

(assert (=> b!96462 m!104769))

(assert (=> b!96462 m!103917))

(assert (=> b!96462 m!104767))

(declare-fun m!104771 () Bool)

(assert (=> b!96462 m!104771))

(assert (=> b!96462 m!104761))

(declare-fun m!104773 () Bool)

(assert (=> b!96462 m!104773))

(assert (=> b!96458 m!103917))

(assert (=> b!96458 m!103917))

(declare-fun m!104775 () Bool)

(assert (=> b!96458 m!104775))

(assert (=> b!96456 m!104759))

(assert (=> b!96466 m!103917))

(assert (=> b!96466 m!103917))

(declare-fun m!104777 () Bool)

(assert (=> b!96466 m!104777))

(assert (=> b!96467 m!103917))

(assert (=> b!96467 m!103917))

(assert (=> b!96467 m!104775))

(assert (=> b!96090 d!25501))

(declare-fun d!25503 () Bool)

(assert (=> d!25503 (= (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) (not (isEmpty!359 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(declare-fun bs!3969 () Bool)

(assert (= bs!3969 d!25503))

(assert (=> bs!3969 m!104089))

(declare-fun m!104779 () Bool)

(assert (=> bs!3969 m!104779))

(assert (=> b!96001 d!25503))

(declare-fun e!62892 () Option!156)

(declare-fun b!96470 () Bool)

(assert (=> b!96470 (= e!62892 (getValueByKey!150 (t!5472 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96471 () Bool)

(assert (=> b!96471 (= e!62892 None!154)))

(declare-fun d!25505 () Bool)

(declare-fun c!16279 () Bool)

(assert (=> d!25505 (= c!16279 (and ((_ is Cons!1554) (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (= (_1!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun e!62891 () Option!156)

(assert (=> d!25505 (= (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!62891)))

(declare-fun b!96468 () Bool)

(assert (=> b!96468 (= e!62891 (Some!155 (_2!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))))))

(declare-fun b!96469 () Bool)

(assert (=> b!96469 (= e!62891 e!62892)))

(declare-fun c!16280 () Bool)

(assert (=> b!96469 (= c!16280 (and ((_ is Cons!1554) (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (not (= (_1!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(assert (= (and d!25505 c!16279) b!96468))

(assert (= (and d!25505 (not c!16279)) b!96469))

(assert (= (and b!96469 c!16280) b!96470))

(assert (= (and b!96469 (not c!16280)) b!96471))

(assert (=> b!96470 m!103635))

(declare-fun m!104781 () Bool)

(assert (=> b!96470 m!104781))

(assert (=> b!96001 d!25505))

(declare-fun d!25507 () Bool)

(assert (=> d!25507 (= (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660)) (not (isEmpty!359 (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))))

(declare-fun bs!3970 () Bool)

(assert (= bs!3970 d!25507))

(assert (=> bs!3970 m!104129))

(declare-fun m!104783 () Bool)

(assert (=> bs!3970 m!104783))

(assert (=> b!96051 d!25507))

(declare-fun b!96474 () Bool)

(declare-fun e!62894 () Option!156)

(assert (=> b!96474 (= e!62894 (getValueByKey!150 (t!5472 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!47660))))

(declare-fun b!96475 () Bool)

(assert (=> b!96475 (= e!62894 None!154)))

(declare-fun d!25509 () Bool)

(declare-fun c!16281 () Bool)

(assert (=> d!25509 (= c!16281 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47660)))))

(declare-fun e!62893 () Option!156)

(assert (=> d!25509 (= (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660) e!62893)))

(declare-fun b!96472 () Bool)

(assert (=> b!96472 (= e!62893 (Some!155 (_2!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(declare-fun b!96473 () Bool)

(assert (=> b!96473 (= e!62893 e!62894)))

(declare-fun c!16282 () Bool)

(assert (=> b!96473 (= c!16282 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (not (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47660))))))

(assert (= (and d!25509 c!16281) b!96472))

(assert (= (and d!25509 (not c!16281)) b!96473))

(assert (= (and b!96473 c!16282) b!96474))

(assert (= (and b!96473 (not c!16282)) b!96475))

(declare-fun m!104785 () Bool)

(assert (=> b!96474 m!104785))

(assert (=> b!96051 d!25509))

(declare-fun d!25511 () Bool)

(assert (=> d!25511 (= (apply!91 lt!48018 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!48018) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3971 () Bool)

(assert (= bs!3971 d!25511))

(declare-fun m!104787 () Bool)

(assert (=> bs!3971 m!104787))

(assert (=> bs!3971 m!104787))

(declare-fun m!104789 () Bool)

(assert (=> bs!3971 m!104789))

(assert (=> b!96173 d!25511))

(declare-fun d!25513 () Bool)

(declare-fun res!48677 () Bool)

(declare-fun e!62897 () Bool)

(assert (=> d!25513 (=> res!48677 e!62897)))

(assert (=> d!25513 (= res!48677 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25513 (= (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16131 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556))) e!62897)))

(declare-fun b!96476 () Bool)

(declare-fun e!62898 () Bool)

(declare-fun call!9776 () Bool)

(assert (=> b!96476 (= e!62898 call!9776)))

(declare-fun b!96477 () Bool)

(declare-fun e!62895 () Bool)

(assert (=> b!96477 (= e!62897 e!62895)))

(declare-fun res!48679 () Bool)

(assert (=> b!96477 (=> (not res!48679) (not e!62895))))

(declare-fun e!62896 () Bool)

(assert (=> b!96477 (= res!48679 (not e!62896))))

(declare-fun res!48678 () Bool)

(assert (=> b!96477 (=> (not res!48678) (not e!62896))))

(assert (=> b!96477 (= res!48678 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!96478 () Bool)

(assert (=> b!96478 (= e!62898 call!9776)))

(declare-fun c!16283 () Bool)

(declare-fun bm!9773 () Bool)

(assert (=> bm!9773 (= call!9776 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16283 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!16131 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556))) (ite c!16131 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)))))))

(declare-fun b!96479 () Bool)

(assert (=> b!96479 (= e!62895 e!62898)))

(assert (=> b!96479 (= c!16283 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!96480 () Bool)

(assert (=> b!96480 (= e!62896 (contains!784 (ite c!16131 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!25513 (not res!48677)) b!96477))

(assert (= (and b!96477 res!48678) b!96480))

(assert (= (and b!96477 res!48679) b!96479))

(assert (= (and b!96479 c!16283) b!96476))

(assert (= (and b!96479 (not c!16283)) b!96478))

(assert (= (or b!96476 b!96478) bm!9773))

(declare-fun m!104791 () Bool)

(assert (=> b!96477 m!104791))

(assert (=> b!96477 m!104791))

(declare-fun m!104793 () Bool)

(assert (=> b!96477 m!104793))

(assert (=> bm!9773 m!104791))

(declare-fun m!104795 () Bool)

(assert (=> bm!9773 m!104795))

(assert (=> b!96479 m!104791))

(assert (=> b!96479 m!104791))

(assert (=> b!96479 m!104793))

(assert (=> b!96480 m!104791))

(assert (=> b!96480 m!104791))

(declare-fun m!104797 () Bool)

(assert (=> b!96480 m!104797))

(assert (=> bm!9688 d!25513))

(declare-fun b!96483 () Bool)

(declare-fun e!62900 () Option!156)

(assert (=> b!96483 (= e!62900 (getValueByKey!150 (t!5472 (toList!762 lt!47882)) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96484 () Bool)

(assert (=> b!96484 (= e!62900 None!154)))

(declare-fun d!25515 () Bool)

(declare-fun c!16284 () Bool)

(assert (=> d!25515 (= c!16284 (and ((_ is Cons!1554) (toList!762 lt!47882)) (= (_1!1154 (h!2147 (toList!762 lt!47882))) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62899 () Option!156)

(assert (=> d!25515 (= (getValueByKey!150 (toList!762 lt!47882) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62899)))

(declare-fun b!96481 () Bool)

(assert (=> b!96481 (= e!62899 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47882)))))))

(declare-fun b!96482 () Bool)

(assert (=> b!96482 (= e!62899 e!62900)))

(declare-fun c!16285 () Bool)

(assert (=> b!96482 (= c!16285 (and ((_ is Cons!1554) (toList!762 lt!47882)) (not (= (_1!1154 (h!2147 (toList!762 lt!47882))) (_1!1154 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25515 c!16284) b!96481))

(assert (= (and d!25515 (not c!16284)) b!96482))

(assert (= (and b!96482 c!16285) b!96483))

(assert (= (and b!96482 (not c!16285)) b!96484))

(declare-fun m!104799 () Bool)

(assert (=> b!96483 m!104799))

(assert (=> b!96060 d!25515))

(declare-fun d!25517 () Bool)

(declare-fun e!62901 () Bool)

(assert (=> d!25517 e!62901))

(declare-fun res!48680 () Bool)

(assert (=> d!25517 (=> res!48680 e!62901)))

(declare-fun lt!48184 () Bool)

(assert (=> d!25517 (= res!48680 (not lt!48184))))

(declare-fun lt!48185 () Bool)

(assert (=> d!25517 (= lt!48184 lt!48185)))

(declare-fun lt!48183 () Unit!2849)

(declare-fun e!62902 () Unit!2849)

(assert (=> d!25517 (= lt!48183 e!62902)))

(declare-fun c!16286 () Bool)

(assert (=> d!25517 (= c!16286 lt!48185)))

(assert (=> d!25517 (= lt!48185 (containsKey!153 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25517 (= (contains!783 lt!47915 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48184)))

(declare-fun b!96485 () Bool)

(declare-fun lt!48182 () Unit!2849)

(assert (=> b!96485 (= e!62902 lt!48182)))

(assert (=> b!96485 (= lt!48182 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> b!96485 (isDefined!102 (getValueByKey!150 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96486 () Bool)

(declare-fun Unit!2880 () Unit!2849)

(assert (=> b!96486 (= e!62902 Unit!2880)))

(declare-fun b!96487 () Bool)

(assert (=> b!96487 (= e!62901 (isDefined!102 (getValueByKey!150 (toList!762 lt!47915) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25517 c!16286) b!96485))

(assert (= (and d!25517 (not c!16286)) b!96486))

(assert (= (and d!25517 (not res!48680)) b!96487))

(declare-fun m!104801 () Bool)

(assert (=> d!25517 m!104801))

(declare-fun m!104803 () Bool)

(assert (=> b!96485 m!104803))

(assert (=> b!96485 m!104217))

(assert (=> b!96485 m!104217))

(declare-fun m!104805 () Bool)

(assert (=> b!96485 m!104805))

(assert (=> b!96487 m!104217))

(assert (=> b!96487 m!104217))

(assert (=> b!96487 m!104805))

(assert (=> d!25357 d!25517))

(declare-fun e!62904 () Option!156)

(declare-fun b!96490 () Bool)

(assert (=> b!96490 (= e!62904 (getValueByKey!150 (t!5472 lt!47916) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96491 () Bool)

(assert (=> b!96491 (= e!62904 None!154)))

(declare-fun c!16287 () Bool)

(declare-fun d!25519 () Bool)

(assert (=> d!25519 (= c!16287 (and ((_ is Cons!1554) lt!47916) (= (_1!1154 (h!2147 lt!47916)) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!62903 () Option!156)

(assert (=> d!25519 (= (getValueByKey!150 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!62903)))

(declare-fun b!96488 () Bool)

(assert (=> b!96488 (= e!62903 (Some!155 (_2!1154 (h!2147 lt!47916))))))

(declare-fun b!96489 () Bool)

(assert (=> b!96489 (= e!62903 e!62904)))

(declare-fun c!16288 () Bool)

(assert (=> b!96489 (= c!16288 (and ((_ is Cons!1554) lt!47916) (not (= (_1!1154 (h!2147 lt!47916)) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25519 c!16287) b!96488))

(assert (= (and d!25519 (not c!16287)) b!96489))

(assert (= (and b!96489 c!16288) b!96490))

(assert (= (and b!96489 (not c!16288)) b!96491))

(declare-fun m!104807 () Bool)

(assert (=> b!96490 m!104807))

(assert (=> d!25357 d!25519))

(declare-fun d!25521 () Bool)

(assert (=> d!25521 (= (getValueByKey!150 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48186 () Unit!2849)

(assert (=> d!25521 (= lt!48186 (choose!590 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!62905 () Bool)

(assert (=> d!25521 e!62905))

(declare-fun res!48681 () Bool)

(assert (=> d!25521 (=> (not res!48681) (not e!62905))))

(assert (=> d!25521 (= res!48681 (isStrictlySorted!290 lt!47916))))

(assert (=> d!25521 (= (lemmaContainsTupThenGetReturnValue!66 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48186)))

(declare-fun b!96492 () Bool)

(declare-fun res!48682 () Bool)

(assert (=> b!96492 (=> (not res!48682) (not e!62905))))

(assert (=> b!96492 (= res!48682 (containsKey!153 lt!47916 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96493 () Bool)

(assert (=> b!96493 (= e!62905 (contains!785 lt!47916 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25521 res!48681) b!96492))

(assert (= (and b!96492 res!48682) b!96493))

(assert (=> d!25521 m!104211))

(declare-fun m!104809 () Bool)

(assert (=> d!25521 m!104809))

(declare-fun m!104811 () Bool)

(assert (=> d!25521 m!104811))

(declare-fun m!104813 () Bool)

(assert (=> b!96492 m!104813))

(declare-fun m!104815 () Bool)

(assert (=> b!96493 m!104815))

(assert (=> d!25357 d!25521))

(declare-fun d!25523 () Bool)

(declare-fun e!62910 () Bool)

(assert (=> d!25523 e!62910))

(declare-fun res!48684 () Bool)

(assert (=> d!25523 (=> (not res!48684) (not e!62910))))

(declare-fun lt!48187 () List!1558)

(assert (=> d!25523 (= res!48684 (isStrictlySorted!290 lt!48187))))

(declare-fun e!62907 () List!1558)

(assert (=> d!25523 (= lt!48187 e!62907)))

(declare-fun c!16292 () Bool)

(assert (=> d!25523 (= c!16292 (and ((_ is Cons!1554) (toList!762 lt!47664)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47664))) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25523 (isStrictlySorted!290 (toList!762 lt!47664))))

(assert (=> d!25523 (= (insertStrictlySorted!69 (toList!762 lt!47664) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48187)))

(declare-fun b!96494 () Bool)

(declare-fun call!9779 () List!1558)

(assert (=> b!96494 (= e!62907 call!9779)))

(declare-fun bm!9774 () Bool)

(declare-fun call!9778 () List!1558)

(assert (=> bm!9774 (= call!9778 call!9779)))

(declare-fun b!96495 () Bool)

(assert (=> b!96495 (= e!62910 (contains!785 lt!48187 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun bm!9775 () Bool)

(declare-fun e!62908 () List!1558)

(assert (=> bm!9775 (= call!9779 ($colon$colon!76 e!62908 (ite c!16292 (h!2147 (toList!762 lt!47664)) (tuple2!2287 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun c!16290 () Bool)

(assert (=> bm!9775 (= c!16290 c!16292)))

(declare-fun b!96496 () Bool)

(declare-fun res!48683 () Bool)

(assert (=> b!96496 (=> (not res!48683) (not e!62910))))

(assert (=> b!96496 (= res!48683 (containsKey!153 lt!48187 (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun bm!9776 () Bool)

(declare-fun call!9777 () List!1558)

(assert (=> bm!9776 (= call!9777 call!9778)))

(declare-fun b!96497 () Bool)

(declare-fun e!62906 () List!1558)

(assert (=> b!96497 (= e!62906 call!9777)))

(declare-fun b!96498 () Bool)

(declare-fun e!62909 () List!1558)

(assert (=> b!96498 (= e!62909 call!9778)))

(declare-fun b!96499 () Bool)

(assert (=> b!96499 (= e!62907 e!62909)))

(declare-fun c!16291 () Bool)

(assert (=> b!96499 (= c!16291 (and ((_ is Cons!1554) (toList!762 lt!47664)) (= (_1!1154 (h!2147 (toList!762 lt!47664))) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96500 () Bool)

(declare-fun c!16289 () Bool)

(assert (=> b!96500 (= c!16289 (and ((_ is Cons!1554) (toList!762 lt!47664)) (bvsgt (_1!1154 (h!2147 (toList!762 lt!47664))) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!96500 (= e!62909 e!62906)))

(declare-fun b!96501 () Bool)

(assert (=> b!96501 (= e!62908 (insertStrictlySorted!69 (t!5472 (toList!762 lt!47664)) (_1!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96502 () Bool)

(assert (=> b!96502 (= e!62906 call!9777)))

(declare-fun b!96503 () Bool)

(assert (=> b!96503 (= e!62908 (ite c!16291 (t!5472 (toList!762 lt!47664)) (ite c!16289 (Cons!1554 (h!2147 (toList!762 lt!47664)) (t!5472 (toList!762 lt!47664))) Nil!1555)))))

(assert (= (and d!25523 c!16292) b!96494))

(assert (= (and d!25523 (not c!16292)) b!96499))

(assert (= (and b!96499 c!16291) b!96498))

(assert (= (and b!96499 (not c!16291)) b!96500))

(assert (= (and b!96500 c!16289) b!96497))

(assert (= (and b!96500 (not c!16289)) b!96502))

(assert (= (or b!96497 b!96502) bm!9776))

(assert (= (or b!96498 bm!9776) bm!9774))

(assert (= (or b!96494 bm!9774) bm!9775))

(assert (= (and bm!9775 c!16290) b!96501))

(assert (= (and bm!9775 (not c!16290)) b!96503))

(assert (= (and d!25523 res!48684) b!96496))

(assert (= (and b!96496 res!48683) b!96495))

(declare-fun m!104817 () Bool)

(assert (=> b!96496 m!104817))

(declare-fun m!104819 () Bool)

(assert (=> b!96495 m!104819))

(declare-fun m!104821 () Bool)

(assert (=> bm!9775 m!104821))

(declare-fun m!104823 () Bool)

(assert (=> d!25523 m!104823))

(declare-fun m!104825 () Bool)

(assert (=> d!25523 m!104825))

(declare-fun m!104827 () Bool)

(assert (=> b!96501 m!104827))

(assert (=> d!25357 d!25523))

(declare-fun d!25525 () Bool)

(declare-fun isEmpty!361 (List!1558) Bool)

(assert (=> d!25525 (= (isEmpty!360 lt!47911) (isEmpty!361 (toList!762 lt!47911)))))

(declare-fun bs!3972 () Bool)

(assert (= bs!3972 d!25525))

(declare-fun m!104829 () Bool)

(assert (=> bs!3972 m!104829))

(assert (=> b!96093 d!25525))

(declare-fun d!25527 () Bool)

(assert (=> d!25527 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!48188 () Unit!2849)

(assert (=> d!25527 (= lt!48188 (choose!584 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62911 () Bool)

(assert (=> d!25527 e!62911))

(declare-fun res!48685 () Bool)

(assert (=> d!25527 (=> (not res!48685) (not e!62911))))

(assert (=> d!25527 (= res!48685 (isStrictlySorted!290 (toList!762 lt!47659)))))

(assert (=> d!25527 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000) lt!48188)))

(declare-fun b!96504 () Bool)

(assert (=> b!96504 (= e!62911 (containsKey!153 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25527 res!48685) b!96504))

(assert (=> d!25527 m!104007))

(assert (=> d!25527 m!104007))

(assert (=> d!25527 m!104009))

(declare-fun m!104831 () Bool)

(assert (=> d!25527 m!104831))

(declare-fun m!104833 () Bool)

(assert (=> d!25527 m!104833))

(assert (=> b!96504 m!104003))

(assert (=> b!95954 d!25527))

(declare-fun d!25529 () Bool)

(assert (=> d!25529 (= (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!359 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3973 () Bool)

(assert (= bs!3973 d!25529))

(assert (=> bs!3973 m!104007))

(declare-fun m!104835 () Bool)

(assert (=> bs!3973 m!104835))

(assert (=> b!95954 d!25529))

(declare-fun b!96507 () Bool)

(declare-fun e!62913 () Option!156)

(assert (=> b!96507 (= e!62913 (getValueByKey!150 (t!5472 (toList!762 lt!47659)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96508 () Bool)

(assert (=> b!96508 (= e!62913 None!154)))

(declare-fun d!25531 () Bool)

(declare-fun c!16293 () Bool)

(assert (=> d!25531 (= c!16293 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!62912 () Option!156)

(assert (=> d!25531 (= (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000) e!62912)))

(declare-fun b!96505 () Bool)

(assert (=> b!96505 (= e!62912 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47659)))))))

(declare-fun b!96506 () Bool)

(assert (=> b!96506 (= e!62912 e!62913)))

(declare-fun c!16294 () Bool)

(assert (=> b!96506 (= c!16294 (and ((_ is Cons!1554) (toList!762 lt!47659)) (not (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!25531 c!16293) b!96505))

(assert (= (and d!25531 (not c!16293)) b!96506))

(assert (= (and b!96506 c!16294) b!96507))

(assert (= (and b!96506 (not c!16294)) b!96508))

(declare-fun m!104837 () Bool)

(assert (=> b!96507 m!104837))

(assert (=> b!95954 d!25531))

(declare-fun d!25533 () Bool)

(declare-fun e!62914 () Bool)

(assert (=> d!25533 e!62914))

(declare-fun res!48686 () Bool)

(assert (=> d!25533 (=> res!48686 e!62914)))

(declare-fun lt!48191 () Bool)

(assert (=> d!25533 (= res!48686 (not lt!48191))))

(declare-fun lt!48192 () Bool)

(assert (=> d!25533 (= lt!48191 lt!48192)))

(declare-fun lt!48190 () Unit!2849)

(declare-fun e!62915 () Unit!2849)

(assert (=> d!25533 (= lt!48190 e!62915)))

(declare-fun c!16295 () Bool)

(assert (=> d!25533 (= c!16295 lt!48192)))

(assert (=> d!25533 (= lt!48192 (containsKey!153 (toList!762 lt!48018) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25533 (= (contains!783 lt!48018 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48191)))

(declare-fun b!96509 () Bool)

(declare-fun lt!48189 () Unit!2849)

(assert (=> b!96509 (= e!62915 lt!48189)))

(assert (=> b!96509 (= lt!48189 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48018) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96509 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96510 () Bool)

(declare-fun Unit!2881 () Unit!2849)

(assert (=> b!96510 (= e!62915 Unit!2881)))

(declare-fun b!96511 () Bool)

(assert (=> b!96511 (= e!62914 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25533 c!16295) b!96509))

(assert (= (and d!25533 (not c!16295)) b!96510))

(assert (= (and d!25533 (not res!48686)) b!96511))

(declare-fun m!104839 () Bool)

(assert (=> d!25533 m!104839))

(declare-fun m!104841 () Bool)

(assert (=> b!96509 m!104841))

(declare-fun m!104843 () Bool)

(assert (=> b!96509 m!104843))

(assert (=> b!96509 m!104843))

(declare-fun m!104845 () Bool)

(assert (=> b!96509 m!104845))

(assert (=> b!96511 m!104843))

(assert (=> b!96511 m!104843))

(assert (=> b!96511 m!104845))

(assert (=> bm!9730 d!25533))

(declare-fun d!25535 () Bool)

(declare-fun e!62916 () Bool)

(assert (=> d!25535 e!62916))

(declare-fun res!48687 () Bool)

(assert (=> d!25535 (=> res!48687 e!62916)))

(declare-fun lt!48195 () Bool)

(assert (=> d!25535 (= res!48687 (not lt!48195))))

(declare-fun lt!48196 () Bool)

(assert (=> d!25535 (= lt!48195 lt!48196)))

(declare-fun lt!48194 () Unit!2849)

(declare-fun e!62917 () Unit!2849)

(assert (=> d!25535 (= lt!48194 e!62917)))

(declare-fun c!16296 () Bool)

(assert (=> d!25535 (= c!16296 lt!48196)))

(assert (=> d!25535 (= lt!48196 (containsKey!153 (toList!762 lt!48018) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25535 (= (contains!783 lt!48018 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) lt!48195)))

(declare-fun b!96512 () Bool)

(declare-fun lt!48193 () Unit!2849)

(assert (=> b!96512 (= e!62917 lt!48193)))

(assert (=> b!96512 (= lt!48193 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48018) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96512 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96513 () Bool)

(declare-fun Unit!2882 () Unit!2849)

(assert (=> b!96513 (= e!62917 Unit!2882)))

(declare-fun b!96514 () Bool)

(assert (=> b!96514 (= e!62916 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25535 c!16296) b!96512))

(assert (= (and d!25535 (not c!16296)) b!96513))

(assert (= (and d!25535 (not res!48687)) b!96514))

(assert (=> d!25535 m!103953))

(declare-fun m!104847 () Bool)

(assert (=> d!25535 m!104847))

(assert (=> b!96512 m!103953))

(declare-fun m!104849 () Bool)

(assert (=> b!96512 m!104849))

(assert (=> b!96512 m!103953))

(declare-fun m!104851 () Bool)

(assert (=> b!96512 m!104851))

(assert (=> b!96512 m!104851))

(declare-fun m!104853 () Bool)

(assert (=> b!96512 m!104853))

(assert (=> b!96514 m!103953))

(assert (=> b!96514 m!104851))

(assert (=> b!96514 m!104851))

(assert (=> b!96514 m!104853))

(assert (=> b!96161 d!25535))

(declare-fun d!25537 () Bool)

(assert (=> d!25537 (isDefined!102 (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun lt!48197 () Unit!2849)

(assert (=> d!25537 (= lt!48197 (choose!584 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun e!62918 () Bool)

(assert (=> d!25537 e!62918))

(declare-fun res!48688 () Bool)

(assert (=> d!25537 (=> (not res!48688) (not e!62918))))

(assert (=> d!25537 (= res!48688 (isStrictlySorted!290 (toList!762 call!9677)))))

(assert (=> d!25537 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!48197)))

(declare-fun b!96515 () Bool)

(assert (=> b!96515 (= e!62918 (containsKey!153 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25537 res!48688) b!96515))

(assert (=> d!25537 m!103635))

(assert (=> d!25537 m!104443))

(assert (=> d!25537 m!104443))

(assert (=> d!25537 m!104445))

(assert (=> d!25537 m!103635))

(declare-fun m!104855 () Bool)

(assert (=> d!25537 m!104855))

(declare-fun m!104857 () Bool)

(assert (=> d!25537 m!104857))

(assert (=> b!96515 m!103635))

(assert (=> b!96515 m!104439))

(assert (=> b!96247 d!25537))

(declare-fun d!25539 () Bool)

(assert (=> d!25539 (= (isDefined!102 (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) (not (isEmpty!359 (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(declare-fun bs!3974 () Bool)

(assert (= bs!3974 d!25539))

(assert (=> bs!3974 m!104443))

(declare-fun m!104859 () Bool)

(assert (=> bs!3974 m!104859))

(assert (=> b!96247 d!25539))

(declare-fun e!62920 () Option!156)

(declare-fun b!96518 () Bool)

(assert (=> b!96518 (= e!62920 (getValueByKey!150 (t!5472 (toList!762 call!9677)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96519 () Bool)

(assert (=> b!96519 (= e!62920 None!154)))

(declare-fun c!16297 () Bool)

(declare-fun d!25541 () Bool)

(assert (=> d!25541 (= c!16297 (and ((_ is Cons!1554) (toList!762 call!9677)) (= (_1!1154 (h!2147 (toList!762 call!9677))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun e!62919 () Option!156)

(assert (=> d!25541 (= (getValueByKey!150 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!62919)))

(declare-fun b!96516 () Bool)

(assert (=> b!96516 (= e!62919 (Some!155 (_2!1154 (h!2147 (toList!762 call!9677)))))))

(declare-fun b!96517 () Bool)

(assert (=> b!96517 (= e!62919 e!62920)))

(declare-fun c!16298 () Bool)

(assert (=> b!96517 (= c!16298 (and ((_ is Cons!1554) (toList!762 call!9677)) (not (= (_1!1154 (h!2147 (toList!762 call!9677))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(assert (= (and d!25541 c!16297) b!96516))

(assert (= (and d!25541 (not c!16297)) b!96517))

(assert (= (and b!96517 c!16298) b!96518))

(assert (= (and b!96517 (not c!16298)) b!96519))

(assert (=> b!96518 m!103635))

(declare-fun m!104861 () Bool)

(assert (=> b!96518 m!104861))

(assert (=> b!96247 d!25541))

(declare-fun d!25543 () Bool)

(assert (=> d!25543 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!48198 () Unit!2849)

(assert (=> d!25543 (= lt!48198 (choose!584 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!62921 () Bool)

(assert (=> d!25543 e!62921))

(declare-fun res!48689 () Bool)

(assert (=> d!25543 (=> (not res!48689) (not e!62921))))

(assert (=> d!25543 (= res!48689 (isStrictlySorted!290 (toList!762 lt!47659)))))

(assert (=> d!25543 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48198)))

(declare-fun b!96520 () Bool)

(assert (=> b!96520 (= e!62921 (containsKey!153 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25543 res!48689) b!96520))

(assert (=> d!25543 m!103777))

(assert (=> d!25543 m!103937))

(assert (=> d!25543 m!103937))

(assert (=> d!25543 m!104451))

(assert (=> d!25543 m!103777))

(declare-fun m!104863 () Bool)

(assert (=> d!25543 m!104863))

(assert (=> d!25543 m!104833))

(assert (=> b!96520 m!103777))

(assert (=> b!96520 m!104447))

(assert (=> b!96250 d!25543))

(declare-fun d!25545 () Bool)

(assert (=> d!25545 (= (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!359 (getValueByKey!150 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3975 () Bool)

(assert (= bs!3975 d!25545))

(assert (=> bs!3975 m!103937))

(declare-fun m!104865 () Bool)

(assert (=> bs!3975 m!104865))

(assert (=> b!96250 d!25545))

(assert (=> b!96250 d!25477))

(declare-fun b!96539 () Bool)

(declare-fun e!62935 () SeekEntryResult!246)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!96539 (= e!62935 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6541 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(declare-fun e!62934 () SeekEntryResult!246)

(declare-fun b!96540 () Bool)

(assert (=> b!96540 (= e!62934 (Intermediate!246 true (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!96541 () Bool)

(declare-fun lt!48204 () SeekEntryResult!246)

(assert (=> b!96541 (and (bvsge (index!3128 lt!48204) #b00000000000000000000000000000000) (bvslt (index!3128 lt!48204) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun e!62933 () Bool)

(assert (=> b!96541 (= e!62933 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!48204)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96542 () Bool)

(declare-fun e!62932 () Bool)

(declare-fun e!62936 () Bool)

(assert (=> b!96542 (= e!62932 e!62936)))

(declare-fun res!48697 () Bool)

(assert (=> b!96542 (= res!48697 (and ((_ is Intermediate!246) lt!48204) (not (undefined!1058 lt!48204)) (bvslt (x!12794 lt!48204) #b01111111111111111111111111111110) (bvsge (x!12794 lt!48204) #b00000000000000000000000000000000) (bvsge (x!12794 lt!48204) #b00000000000000000000000000000000)))))

(assert (=> b!96542 (=> (not res!48697) (not e!62936))))

(declare-fun b!96543 () Bool)

(assert (=> b!96543 (and (bvsge (index!3128 lt!48204) #b00000000000000000000000000000000) (bvslt (index!3128 lt!48204) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48698 () Bool)

(assert (=> b!96543 (= res!48698 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!48204)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96543 (=> res!48698 e!62933)))

(declare-fun b!96544 () Bool)

(assert (=> b!96544 (and (bvsge (index!3128 lt!48204) #b00000000000000000000000000000000) (bvslt (index!3128 lt!48204) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48696 () Bool)

(assert (=> b!96544 (= res!48696 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!48204)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!96544 (=> res!48696 e!62933)))

(assert (=> b!96544 (= e!62936 e!62933)))

(declare-fun b!96545 () Bool)

(assert (=> b!96545 (= e!62935 (Intermediate!246 false (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!96546 () Bool)

(assert (=> b!96546 (= e!62932 (bvsge (x!12794 lt!48204) #b01111111111111111111111111111110))))

(declare-fun b!96547 () Bool)

(assert (=> b!96547 (= e!62934 e!62935)))

(declare-fun c!16306 () Bool)

(declare-fun lt!48203 () (_ BitVec 64))

(assert (=> b!96547 (= c!16306 (or (= lt!48203 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (= (bvadd lt!48203 lt!48203) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!25547 () Bool)

(assert (=> d!25547 e!62932))

(declare-fun c!16305 () Bool)

(assert (=> d!25547 (= c!16305 (and ((_ is Intermediate!246) lt!48204) (undefined!1058 lt!48204)))))

(assert (=> d!25547 (= lt!48204 e!62934)))

(declare-fun c!16307 () Bool)

(assert (=> d!25547 (= c!16307 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!25547 (= lt!48203 (select (arr!1994 (_keys!4142 newMap!16)) (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16))))))

(assert (=> d!25547 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25547 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)) lt!48204)))

(assert (= (and d!25547 c!16307) b!96540))

(assert (= (and d!25547 (not c!16307)) b!96547))

(assert (= (and b!96547 c!16306) b!96545))

(assert (= (and b!96547 (not c!16306)) b!96539))

(assert (= (and d!25547 c!16305) b!96546))

(assert (= (and d!25547 (not c!16305)) b!96542))

(assert (= (and b!96542 res!48697) b!96544))

(assert (= (and b!96544 (not res!48696)) b!96543))

(assert (= (and b!96543 (not res!48698)) b!96541))

(declare-fun m!104867 () Bool)

(assert (=> b!96544 m!104867))

(assert (=> d!25547 m!104113))

(declare-fun m!104869 () Bool)

(assert (=> d!25547 m!104869))

(assert (=> d!25547 m!103933))

(assert (=> b!96541 m!104867))

(assert (=> b!96539 m!104113))

(declare-fun m!104871 () Bool)

(assert (=> b!96539 m!104871))

(assert (=> b!96539 m!104871))

(assert (=> b!96539 m!103635))

(declare-fun m!104873 () Bool)

(assert (=> b!96539 m!104873))

(assert (=> b!96543 m!104867))

(assert (=> d!25335 d!25547))

(declare-fun d!25549 () Bool)

(declare-fun lt!48210 () (_ BitVec 32))

(declare-fun lt!48209 () (_ BitVec 32))

(assert (=> d!25549 (= lt!48210 (bvmul (bvxor lt!48209 (bvlshr lt!48209 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!25549 (= lt!48209 ((_ extract 31 0) (bvand (bvxor (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvlshr (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!25549 (and (bvsge (mask!6541 newMap!16) #b00000000000000000000000000000000) (let ((res!48699 (let ((h!2150 ((_ extract 31 0) (bvand (bvxor (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvlshr (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12897 (bvmul (bvxor h!2150 (bvlshr h!2150 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12897 (bvlshr x!12897 #b00000000000000000000000000001101)) (mask!6541 newMap!16)))))) (and (bvslt res!48699 (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48699 #b00000000000000000000000000000000))))))

(assert (=> d!25549 (= (toIndex!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (mask!6541 newMap!16)) (bvand (bvxor lt!48210 (bvlshr lt!48210 #b00000000000000000000000000001101)) (mask!6541 newMap!16)))))

(assert (=> d!25335 d!25549))

(assert (=> d!25335 d!25421))

(declare-fun b!96548 () Bool)

(declare-fun e!62940 () Bool)

(declare-fun lt!48215 () ListLongMap!1493)

(assert (=> b!96548 (= e!62940 (= lt!48215 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96549 () Bool)

(assert (=> b!96549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> b!96549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_values!2439 newMap!16))))))

(declare-fun e!62942 () Bool)

(assert (=> b!96549 (= e!62942 (= (apply!91 lt!48215 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96550 () Bool)

(declare-fun e!62941 () Bool)

(assert (=> b!96550 (= e!62941 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96550 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!96551 () Bool)

(assert (=> b!96551 (= e!62940 (isEmpty!360 lt!48215))))

(declare-fun b!96552 () Bool)

(declare-fun e!62938 () ListLongMap!1493)

(declare-fun call!9780 () ListLongMap!1493)

(assert (=> b!96552 (= e!62938 call!9780)))

(declare-fun b!96553 () Bool)

(declare-fun res!48702 () Bool)

(declare-fun e!62937 () Bool)

(assert (=> b!96553 (=> (not res!48702) (not e!62937))))

(assert (=> b!96553 (= res!48702 (not (contains!783 lt!48215 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96554 () Bool)

(declare-fun lt!48212 () Unit!2849)

(declare-fun lt!48217 () Unit!2849)

(assert (=> b!96554 (= lt!48212 lt!48217)))

(declare-fun lt!48213 () (_ BitVec 64))

(declare-fun lt!48211 () (_ BitVec 64))

(declare-fun lt!48216 () ListLongMap!1493)

(declare-fun lt!48214 () V!3137)

(assert (=> b!96554 (not (contains!783 (+!129 lt!48216 (tuple2!2287 lt!48213 lt!48214)) lt!48211))))

(assert (=> b!96554 (= lt!48217 (addStillNotContains!41 lt!48216 lt!48213 lt!48214 lt!48211))))

(assert (=> b!96554 (= lt!48211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96554 (= lt!48214 (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96554 (= lt!48213 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96554 (= lt!48216 call!9780)))

(assert (=> b!96554 (= e!62938 (+!129 call!9780 (tuple2!2287 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96555 () Bool)

(declare-fun e!62939 () ListLongMap!1493)

(assert (=> b!96555 (= e!62939 (ListLongMap!1494 Nil!1555))))

(declare-fun b!96556 () Bool)

(declare-fun e!62943 () Bool)

(assert (=> b!96556 (= e!62937 e!62943)))

(declare-fun c!16310 () Bool)

(assert (=> b!96556 (= c!16310 e!62941)))

(declare-fun res!48700 () Bool)

(assert (=> b!96556 (=> (not res!48700) (not e!62941))))

(assert (=> b!96556 (= res!48700 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96557 () Bool)

(assert (=> b!96557 (= e!62943 e!62940)))

(declare-fun c!16309 () Bool)

(assert (=> b!96557 (= c!16309 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96558 () Bool)

(assert (=> b!96558 (= e!62943 e!62942)))

(assert (=> b!96558 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48703 () Bool)

(assert (=> b!96558 (= res!48703 (contains!783 lt!48215 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96558 (=> (not res!48703) (not e!62942))))

(declare-fun b!96559 () Bool)

(assert (=> b!96559 (= e!62939 e!62938)))

(declare-fun c!16308 () Bool)

(assert (=> b!96559 (= c!16308 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9777 () Bool)

(assert (=> bm!9777 (= call!9780 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun d!25551 () Bool)

(assert (=> d!25551 e!62937))

(declare-fun res!48701 () Bool)

(assert (=> d!25551 (=> (not res!48701) (not e!62937))))

(assert (=> d!25551 (= res!48701 (not (contains!783 lt!48215 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25551 (= lt!48215 e!62939)))

(declare-fun c!16311 () Bool)

(assert (=> d!25551 (= c!16311 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25551 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25551 (= (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48215)))

(assert (= (and d!25551 c!16311) b!96555))

(assert (= (and d!25551 (not c!16311)) b!96559))

(assert (= (and b!96559 c!16308) b!96554))

(assert (= (and b!96559 (not c!16308)) b!96552))

(assert (= (or b!96554 b!96552) bm!9777))

(assert (= (and d!25551 res!48701) b!96553))

(assert (= (and b!96553 res!48702) b!96556))

(assert (= (and b!96556 res!48700) b!96550))

(assert (= (and b!96556 c!16310) b!96558))

(assert (= (and b!96556 (not c!16310)) b!96557))

(assert (= (and b!96558 res!48703) b!96549))

(assert (= (and b!96557 c!16309) b!96548))

(assert (= (and b!96557 (not c!16309)) b!96551))

(declare-fun b_lambda!4269 () Bool)

(assert (=> (not b_lambda!4269) (not b!96549)))

(assert (=> b!96549 t!5484))

(declare-fun b_and!5897 () Bool)

(assert (= b_and!5893 (and (=> t!5484 result!3225) b_and!5897)))

(assert (=> b!96549 t!5486))

(declare-fun b_and!5899 () Bool)

(assert (= b_and!5895 (and (=> t!5486 result!3227) b_and!5899)))

(declare-fun b_lambda!4271 () Bool)

(assert (=> (not b_lambda!4271) (not b!96554)))

(assert (=> b!96554 t!5484))

(declare-fun b_and!5901 () Bool)

(assert (= b_and!5897 (and (=> t!5484 result!3225) b_and!5901)))

(assert (=> b!96554 t!5486))

(declare-fun b_and!5903 () Bool)

(assert (= b_and!5899 (and (=> t!5486 result!3227) b_and!5903)))

(declare-fun m!104875 () Bool)

(assert (=> d!25551 m!104875))

(assert (=> d!25551 m!103933))

(declare-fun m!104877 () Bool)

(assert (=> b!96551 m!104877))

(declare-fun m!104879 () Bool)

(assert (=> b!96553 m!104879))

(declare-fun m!104881 () Bool)

(assert (=> bm!9777 m!104881))

(assert (=> b!96549 m!104023))

(assert (=> b!96549 m!103949))

(assert (=> b!96549 m!104025))

(assert (=> b!96549 m!103949))

(assert (=> b!96549 m!103953))

(assert (=> b!96549 m!104023))

(assert (=> b!96549 m!103953))

(declare-fun m!104883 () Bool)

(assert (=> b!96549 m!104883))

(assert (=> b!96554 m!104023))

(assert (=> b!96554 m!103949))

(assert (=> b!96554 m!104025))

(assert (=> b!96554 m!103949))

(declare-fun m!104885 () Bool)

(assert (=> b!96554 m!104885))

(declare-fun m!104887 () Bool)

(assert (=> b!96554 m!104887))

(assert (=> b!96554 m!103953))

(assert (=> b!96554 m!104885))

(declare-fun m!104889 () Bool)

(assert (=> b!96554 m!104889))

(assert (=> b!96554 m!104023))

(declare-fun m!104891 () Bool)

(assert (=> b!96554 m!104891))

(assert (=> b!96550 m!103953))

(assert (=> b!96550 m!103953))

(assert (=> b!96550 m!103989))

(assert (=> b!96548 m!104881))

(assert (=> b!96558 m!103953))

(assert (=> b!96558 m!103953))

(declare-fun m!104893 () Bool)

(assert (=> b!96558 m!104893))

(assert (=> b!96559 m!103953))

(assert (=> b!96559 m!103953))

(assert (=> b!96559 m!103989))

(assert (=> bm!9703 d!25551))

(declare-fun d!25553 () Bool)

(assert (=> d!25553 (= (size!2249 newMap!16) (bvadd (_size!468 newMap!16) (bvsdiv (bvadd (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!96227 d!25553))

(declare-fun e!62947 () Bool)

(declare-fun b!96560 () Bool)

(declare-fun lt!48222 () ListLongMap!1493)

(assert (=> b!96560 (= e!62947 (= lt!48222 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96561 () Bool)

(assert (=> b!96561 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> b!96561 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))))))))

(declare-fun e!62949 () Bool)

(assert (=> b!96561 (= e!62949 (= (apply!91 lt!48222 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96562 () Bool)

(declare-fun e!62948 () Bool)

(assert (=> b!96562 (= e!62948 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96562 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!96563 () Bool)

(assert (=> b!96563 (= e!62947 (isEmpty!360 lt!48222))))

(declare-fun b!96564 () Bool)

(declare-fun e!62945 () ListLongMap!1493)

(declare-fun call!9781 () ListLongMap!1493)

(assert (=> b!96564 (= e!62945 call!9781)))

(declare-fun b!96565 () Bool)

(declare-fun res!48706 () Bool)

(declare-fun e!62944 () Bool)

(assert (=> b!96565 (=> (not res!48706) (not e!62944))))

(assert (=> b!96565 (= res!48706 (not (contains!783 lt!48222 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96566 () Bool)

(declare-fun lt!48219 () Unit!2849)

(declare-fun lt!48224 () Unit!2849)

(assert (=> b!96566 (= lt!48219 lt!48224)))

(declare-fun lt!48218 () (_ BitVec 64))

(declare-fun lt!48220 () (_ BitVec 64))

(declare-fun lt!48221 () V!3137)

(declare-fun lt!48223 () ListLongMap!1493)

(assert (=> b!96566 (not (contains!783 (+!129 lt!48223 (tuple2!2287 lt!48220 lt!48221)) lt!48218))))

(assert (=> b!96566 (= lt!48224 (addStillNotContains!41 lt!48223 lt!48220 lt!48221 lt!48218))))

(assert (=> b!96566 (= lt!48218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96566 (= lt!48221 (get!1278 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96566 (= lt!48220 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96566 (= lt!48223 call!9781)))

(assert (=> b!96566 (= e!62945 (+!129 call!9781 (tuple2!2287 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (get!1278 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96567 () Bool)

(declare-fun e!62946 () ListLongMap!1493)

(assert (=> b!96567 (= e!62946 (ListLongMap!1494 Nil!1555))))

(declare-fun b!96568 () Bool)

(declare-fun e!62950 () Bool)

(assert (=> b!96568 (= e!62944 e!62950)))

(declare-fun c!16314 () Bool)

(assert (=> b!96568 (= c!16314 e!62948)))

(declare-fun res!48704 () Bool)

(assert (=> b!96568 (=> (not res!48704) (not e!62948))))

(assert (=> b!96568 (= res!48704 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96569 () Bool)

(assert (=> b!96569 (= e!62950 e!62947)))

(declare-fun c!16313 () Bool)

(assert (=> b!96569 (= c!16313 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96570 () Bool)

(assert (=> b!96570 (= e!62950 e!62949)))

(assert (=> b!96570 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48707 () Bool)

(assert (=> b!96570 (= res!48707 (contains!783 lt!48222 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96570 (=> (not res!48707) (not e!62949))))

(declare-fun b!96571 () Bool)

(assert (=> b!96571 (= e!62946 e!62945)))

(declare-fun c!16312 () Bool)

(assert (=> b!96571 (= c!16312 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9778 () Bool)

(assert (=> bm!9778 (= call!9781 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun d!25555 () Bool)

(assert (=> d!25555 e!62944))

(declare-fun res!48705 () Bool)

(assert (=> d!25555 (=> (not res!48705) (not e!62944))))

(assert (=> d!25555 (= res!48705 (not (contains!783 lt!48222 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25555 (= lt!48222 e!62946)))

(declare-fun c!16315 () Bool)

(assert (=> d!25555 (= c!16315 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25555 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25555 (= (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48222)))

(assert (= (and d!25555 c!16315) b!96567))

(assert (= (and d!25555 (not c!16315)) b!96571))

(assert (= (and b!96571 c!16312) b!96566))

(assert (= (and b!96571 (not c!16312)) b!96564))

(assert (= (or b!96566 b!96564) bm!9778))

(assert (= (and d!25555 res!48705) b!96565))

(assert (= (and b!96565 res!48706) b!96568))

(assert (= (and b!96568 res!48704) b!96562))

(assert (= (and b!96568 c!16314) b!96570))

(assert (= (and b!96568 (not c!16314)) b!96569))

(assert (= (and b!96570 res!48707) b!96561))

(assert (= (and b!96569 c!16313) b!96560))

(assert (= (and b!96569 (not c!16313)) b!96563))

(declare-fun b_lambda!4273 () Bool)

(assert (=> (not b_lambda!4273) (not b!96561)))

(assert (=> b!96561 t!5484))

(declare-fun b_and!5905 () Bool)

(assert (= b_and!5901 (and (=> t!5484 result!3225) b_and!5905)))

(assert (=> b!96561 t!5486))

(declare-fun b_and!5907 () Bool)

(assert (= b_and!5903 (and (=> t!5486 result!3227) b_and!5907)))

(declare-fun b_lambda!4275 () Bool)

(assert (=> (not b_lambda!4275) (not b!96566)))

(assert (=> b!96566 t!5484))

(declare-fun b_and!5909 () Bool)

(assert (= b_and!5905 (and (=> t!5484 result!3225) b_and!5909)))

(assert (=> b!96566 t!5486))

(declare-fun b_and!5911 () Bool)

(assert (= b_and!5907 (and (=> t!5486 result!3227) b_and!5911)))

(declare-fun m!104895 () Bool)

(assert (=> d!25555 m!104895))

(assert (=> d!25555 m!103933))

(declare-fun m!104897 () Bool)

(assert (=> b!96563 m!104897))

(declare-fun m!104899 () Bool)

(assert (=> b!96565 m!104899))

(declare-fun m!104901 () Bool)

(assert (=> bm!9778 m!104901))

(assert (=> b!96561 m!103947))

(assert (=> b!96561 m!103949))

(assert (=> b!96561 m!103951))

(assert (=> b!96561 m!103949))

(assert (=> b!96561 m!103953))

(assert (=> b!96561 m!103947))

(assert (=> b!96561 m!103953))

(declare-fun m!104903 () Bool)

(assert (=> b!96561 m!104903))

(assert (=> b!96566 m!103947))

(assert (=> b!96566 m!103949))

(assert (=> b!96566 m!103951))

(assert (=> b!96566 m!103949))

(declare-fun m!104905 () Bool)

(assert (=> b!96566 m!104905))

(declare-fun m!104907 () Bool)

(assert (=> b!96566 m!104907))

(assert (=> b!96566 m!103953))

(assert (=> b!96566 m!104905))

(declare-fun m!104909 () Bool)

(assert (=> b!96566 m!104909))

(assert (=> b!96566 m!103947))

(declare-fun m!104911 () Bool)

(assert (=> b!96566 m!104911))

(assert (=> b!96562 m!103953))

(assert (=> b!96562 m!103953))

(assert (=> b!96562 m!103989))

(assert (=> b!96560 m!104901))

(assert (=> b!96570 m!103953))

(assert (=> b!96570 m!103953))

(declare-fun m!104913 () Bool)

(assert (=> b!96570 m!104913))

(assert (=> b!96571 m!103953))

(assert (=> b!96571 m!103953))

(assert (=> b!96571 m!103989))

(assert (=> bm!9693 d!25555))

(assert (=> bm!9722 d!25329))

(declare-fun b!96572 () Bool)

(declare-fun e!62951 () (_ BitVec 32))

(declare-fun e!62952 () (_ BitVec 32))

(assert (=> b!96572 (= e!62951 e!62952)))

(declare-fun c!16316 () Bool)

(assert (=> b!96572 (= c!16316 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9779 () Bool)

(declare-fun call!9782 () (_ BitVec 32))

(assert (=> bm!9779 (= call!9782 (arrayCountValidKeys!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96573 () Bool)

(assert (=> b!96573 (= e!62952 call!9782)))

(declare-fun b!96574 () Bool)

(assert (=> b!96574 (= e!62952 (bvadd #b00000000000000000000000000000001 call!9782))))

(declare-fun b!96575 () Bool)

(assert (=> b!96575 (= e!62951 #b00000000000000000000000000000000)))

(declare-fun d!25557 () Bool)

(declare-fun lt!48225 () (_ BitVec 32))

(assert (=> d!25557 (and (bvsge lt!48225 #b00000000000000000000000000000000) (bvsle lt!48225 (bvsub (size!2243 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!25557 (= lt!48225 e!62951)))

(declare-fun c!16317 () Bool)

(assert (=> d!25557 (= c!16317 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25557 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2243 (_keys!4142 newMap!16)) (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25557 (= (arrayCountValidKeys!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))) lt!48225)))

(assert (= (and d!25557 c!16317) b!96575))

(assert (= (and d!25557 (not c!16317)) b!96572))

(assert (= (and b!96572 c!16316) b!96574))

(assert (= (and b!96572 (not c!16316)) b!96573))

(assert (= (or b!96574 b!96573) bm!9779))

(declare-fun m!104915 () Bool)

(assert (=> b!96572 m!104915))

(assert (=> b!96572 m!104915))

(declare-fun m!104917 () Bool)

(assert (=> b!96572 m!104917))

(declare-fun m!104919 () Bool)

(assert (=> bm!9779 m!104919))

(assert (=> bm!9698 d!25557))

(declare-fun b!96578 () Bool)

(declare-fun e!62954 () Option!156)

(assert (=> b!96578 (= e!62954 (getValueByKey!150 (t!5472 (toList!762 lt!48055)) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96579 () Bool)

(assert (=> b!96579 (= e!62954 None!154)))

(declare-fun c!16318 () Bool)

(declare-fun d!25559 () Bool)

(assert (=> d!25559 (= c!16318 (and ((_ is Cons!1554) (toList!762 lt!48055)) (= (_1!1154 (h!2147 (toList!762 lt!48055))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62953 () Option!156)

(assert (=> d!25559 (= (getValueByKey!150 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62953)))

(declare-fun b!96576 () Bool)

(assert (=> b!96576 (= e!62953 (Some!155 (_2!1154 (h!2147 (toList!762 lt!48055)))))))

(declare-fun b!96577 () Bool)

(assert (=> b!96577 (= e!62953 e!62954)))

(declare-fun c!16319 () Bool)

(assert (=> b!96577 (= c!16319 (and ((_ is Cons!1554) (toList!762 lt!48055)) (not (= (_1!1154 (h!2147 (toList!762 lt!48055))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25559 c!16318) b!96576))

(assert (= (and d!25559 (not c!16318)) b!96577))

(assert (= (and b!96577 c!16319) b!96578))

(assert (= (and b!96577 (not c!16319)) b!96579))

(declare-fun m!104921 () Bool)

(assert (=> b!96578 m!104921))

(assert (=> b!96229 d!25559))

(declare-fun b!96580 () Bool)

(declare-fun e!62955 () Bool)

(declare-fun call!9783 () Bool)

(assert (=> b!96580 (= e!62955 call!9783)))

(declare-fun b!96581 () Bool)

(declare-fun e!62956 () Bool)

(assert (=> b!96581 (= e!62956 call!9783)))

(declare-fun d!25561 () Bool)

(declare-fun res!48708 () Bool)

(declare-fun e!62957 () Bool)

(assert (=> d!25561 (=> res!48708 e!62957)))

(assert (=> d!25561 (= res!48708 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25561 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992)))) e!62957)))

(declare-fun b!96582 () Bool)

(assert (=> b!96582 (= e!62957 e!62955)))

(declare-fun c!16320 () Bool)

(assert (=> b!96582 (= c!16320 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!96583 () Bool)

(assert (=> b!96583 (= e!62955 e!62956)))

(declare-fun lt!48227 () (_ BitVec 64))

(assert (=> b!96583 (= lt!48227 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!48228 () Unit!2849)

(assert (=> b!96583 (= lt!48228 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) lt!48227 #b00000000000000000000000000000000))))

(assert (=> b!96583 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) lt!48227 #b00000000000000000000000000000000)))

(declare-fun lt!48226 () Unit!2849)

(assert (=> b!96583 (= lt!48226 lt!48228)))

(declare-fun res!48709 () Bool)

(assert (=> b!96583 (= res!48709 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000) (_keys!4142 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992)))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!96583 (=> (not res!48709) (not e!62956))))

(declare-fun bm!9780 () Bool)

(assert (=> bm!9780 (= call!9783 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4142 (v!2780 (underlying!333 thiss!992))) (mask!6541 (v!2780 (underlying!333 thiss!992)))))))

(assert (= (and d!25561 (not res!48708)) b!96582))

(assert (= (and b!96582 c!16320) b!96583))

(assert (= (and b!96582 (not c!16320)) b!96580))

(assert (= (and b!96583 res!48709) b!96581))

(assert (= (or b!96581 b!96580) bm!9780))

(assert (=> b!96582 m!104543))

(assert (=> b!96582 m!104543))

(assert (=> b!96582 m!104545))

(assert (=> b!96583 m!104543))

(declare-fun m!104923 () Bool)

(assert (=> b!96583 m!104923))

(declare-fun m!104925 () Bool)

(assert (=> b!96583 m!104925))

(assert (=> b!96583 m!104543))

(declare-fun m!104927 () Bool)

(assert (=> b!96583 m!104927))

(declare-fun m!104929 () Bool)

(assert (=> bm!9780 m!104929))

(assert (=> b!96232 d!25561))

(declare-fun d!25563 () Bool)

(declare-fun res!48710 () Bool)

(declare-fun e!62958 () Bool)

(assert (=> d!25563 (=> res!48710 e!62958)))

(assert (=> d!25563 (= res!48710 (and ((_ is Cons!1554) (t!5472 (toList!762 lt!47565))) (= (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (=> d!25563 (= (containsKey!153 (t!5472 (toList!762 lt!47565)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!62958)))

(declare-fun b!96584 () Bool)

(declare-fun e!62959 () Bool)

(assert (=> b!96584 (= e!62958 e!62959)))

(declare-fun res!48711 () Bool)

(assert (=> b!96584 (=> (not res!48711) (not e!62959))))

(assert (=> b!96584 (= res!48711 (and (or (not ((_ is Cons!1554) (t!5472 (toList!762 lt!47565)))) (bvsle (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) ((_ is Cons!1554) (t!5472 (toList!762 lt!47565))) (bvslt (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun b!96585 () Bool)

(assert (=> b!96585 (= e!62959 (containsKey!153 (t!5472 (t!5472 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25563 (not res!48710)) b!96584))

(assert (= (and b!96584 res!48711) b!96585))

(assert (=> b!96585 m!103635))

(declare-fun m!104931 () Bool)

(assert (=> b!96585 m!104931))

(assert (=> b!96210 d!25563))

(assert (=> bm!9735 d!25329))

(declare-fun d!25565 () Bool)

(assert (not d!25565))

(assert (=> b!95917 d!25565))

(assert (=> b!95974 d!25439))

(declare-fun d!25567 () Bool)

(declare-fun lt!48229 () Bool)

(assert (=> d!25567 (= lt!48229 (select (content!101 (toList!762 lt!47890)) (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!62960 () Bool)

(assert (=> d!25567 (= lt!48229 e!62960)))

(declare-fun res!48713 () Bool)

(assert (=> d!25567 (=> (not res!48713) (not e!62960))))

(assert (=> d!25567 (= res!48713 ((_ is Cons!1554) (toList!762 lt!47890)))))

(assert (=> d!25567 (= (contains!785 (toList!762 lt!47890) (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48229)))

(declare-fun b!96586 () Bool)

(declare-fun e!62961 () Bool)

(assert (=> b!96586 (= e!62960 e!62961)))

(declare-fun res!48712 () Bool)

(assert (=> b!96586 (=> res!48712 e!62961)))

(assert (=> b!96586 (= res!48712 (= (h!2147 (toList!762 lt!47890)) (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96587 () Bool)

(assert (=> b!96587 (= e!62961 (contains!785 (t!5472 (toList!762 lt!47890)) (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25567 res!48713) b!96586))

(assert (= (and b!96586 (not res!48712)) b!96587))

(declare-fun m!104933 () Bool)

(assert (=> d!25567 m!104933))

(declare-fun m!104935 () Bool)

(assert (=> d!25567 m!104935))

(declare-fun m!104937 () Bool)

(assert (=> b!96587 m!104937))

(assert (=> b!96065 d!25567))

(assert (=> b!96154 d!25379))

(declare-fun b!96588 () Bool)

(declare-fun e!62974 () Bool)

(assert (=> b!96588 (= e!62974 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96589 () Bool)

(declare-fun e!62962 () ListLongMap!1493)

(declare-fun call!9789 () ListLongMap!1493)

(assert (=> b!96589 (= e!62962 call!9789)))

(declare-fun b!96590 () Bool)

(declare-fun e!62973 () Bool)

(assert (=> b!96590 (= e!62973 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96591 () Bool)

(declare-fun e!62968 () Bool)

(declare-fun e!62972 () Bool)

(assert (=> b!96591 (= e!62968 e!62972)))

(declare-fun res!48716 () Bool)

(assert (=> b!96591 (=> (not res!48716) (not e!62972))))

(declare-fun lt!48235 () ListLongMap!1493)

(assert (=> b!96591 (= res!48716 (contains!783 lt!48235 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96591 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96592 () Bool)

(declare-fun e!62970 () ListLongMap!1493)

(assert (=> b!96592 (= e!62970 call!9789)))

(declare-fun b!96593 () Bool)

(declare-fun e!62963 () Bool)

(declare-fun e!62966 () Bool)

(assert (=> b!96593 (= e!62963 e!62966)))

(declare-fun res!48722 () Bool)

(declare-fun call!9787 () Bool)

(assert (=> b!96593 (= res!48722 call!9787)))

(assert (=> b!96593 (=> (not res!48722) (not e!62966))))

(declare-fun b!96594 () Bool)

(declare-fun res!48720 () Bool)

(declare-fun e!62965 () Bool)

(assert (=> b!96594 (=> (not res!48720) (not e!62965))))

(declare-fun e!62964 () Bool)

(assert (=> b!96594 (= res!48720 e!62964)))

(declare-fun c!16326 () Bool)

(assert (=> b!96594 (= c!16326 (not (= (bvand lt!47764 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96596 () Bool)

(declare-fun res!48718 () Bool)

(assert (=> b!96596 (=> (not res!48718) (not e!62965))))

(assert (=> b!96596 (= res!48718 e!62968)))

(declare-fun res!48719 () Bool)

(assert (=> b!96596 (=> res!48719 e!62968)))

(assert (=> b!96596 (= res!48719 (not e!62974))))

(declare-fun res!48714 () Bool)

(assert (=> b!96596 (=> (not res!48714) (not e!62974))))

(assert (=> b!96596 (= res!48714 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96597 () Bool)

(declare-fun e!62969 () Bool)

(assert (=> b!96597 (= e!62969 (= (apply!91 lt!48235 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9781 () Bool)

(declare-fun call!9784 () ListLongMap!1493)

(declare-fun call!9786 () ListLongMap!1493)

(assert (=> bm!9781 (= call!9784 call!9786)))

(declare-fun b!96598 () Bool)

(assert (=> b!96598 (= e!62964 e!62969)))

(declare-fun res!48715 () Bool)

(declare-fun call!9785 () Bool)

(assert (=> b!96598 (= res!48715 call!9785)))

(assert (=> b!96598 (=> (not res!48715) (not e!62969))))

(declare-fun b!96599 () Bool)

(declare-fun e!62971 () Unit!2849)

(declare-fun Unit!2883 () Unit!2849)

(assert (=> b!96599 (= e!62971 Unit!2883)))

(declare-fun b!96600 () Bool)

(declare-fun e!62967 () ListLongMap!1493)

(assert (=> b!96600 (= e!62967 e!62962)))

(declare-fun c!16325 () Bool)

(assert (=> b!96600 (= c!16325 (and (not (= (bvand lt!47764 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!47764 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9782 () Bool)

(assert (=> bm!9782 (= call!9787 (contains!783 lt!48235 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96601 () Bool)

(declare-fun c!16321 () Bool)

(assert (=> b!96601 (= c!16321 (and (not (= (bvand lt!47764 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!47764 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96601 (= e!62962 e!62970)))

(declare-fun call!9788 () ListLongMap!1493)

(declare-fun call!9790 () ListLongMap!1493)

(declare-fun c!16322 () Bool)

(declare-fun bm!9783 () Bool)

(assert (=> bm!9783 (= call!9788 (+!129 (ite c!16322 call!9790 (ite c!16325 call!9786 call!9784)) (ite (or c!16322 c!16325) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96595 () Bool)

(assert (=> b!96595 (= e!62964 (not call!9785))))

(declare-fun d!25569 () Bool)

(assert (=> d!25569 e!62965))

(declare-fun res!48717 () Bool)

(assert (=> d!25569 (=> (not res!48717) (not e!62965))))

(assert (=> d!25569 (= res!48717 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!48250 () ListLongMap!1493)

(assert (=> d!25569 (= lt!48235 lt!48250)))

(declare-fun lt!48233 () Unit!2849)

(assert (=> d!25569 (= lt!48233 e!62971)))

(declare-fun c!16324 () Bool)

(assert (=> d!25569 (= c!16324 e!62973)))

(declare-fun res!48721 () Bool)

(assert (=> d!25569 (=> (not res!48721) (not e!62973))))

(assert (=> d!25569 (= res!48721 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25569 (= lt!48250 e!62967)))

(assert (=> d!25569 (= c!16322 (and (not (= (bvand lt!47764 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!47764 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25569 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25569 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48235)))

(declare-fun bm!9784 () Bool)

(assert (=> bm!9784 (= call!9786 call!9790)))

(declare-fun bm!9785 () Bool)

(assert (=> bm!9785 (= call!9790 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96602 () Bool)

(assert (=> b!96602 (= e!62965 e!62963)))

(declare-fun c!16323 () Bool)

(assert (=> b!96602 (= c!16323 (not (= (bvand lt!47764 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96603 () Bool)

(assert (=> b!96603 (= e!62966 (= (apply!91 lt!48235 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96604 () Bool)

(declare-fun lt!48251 () Unit!2849)

(assert (=> b!96604 (= e!62971 lt!48251)))

(declare-fun lt!48230 () ListLongMap!1493)

(assert (=> b!96604 (= lt!48230 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48244 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48244 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48236 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48236 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48242 () Unit!2849)

(assert (=> b!96604 (= lt!48242 (addStillContains!67 lt!48230 lt!48244 (zeroValue!2341 newMap!16) lt!48236))))

(assert (=> b!96604 (contains!783 (+!129 lt!48230 (tuple2!2287 lt!48244 (zeroValue!2341 newMap!16))) lt!48236)))

(declare-fun lt!48246 () Unit!2849)

(assert (=> b!96604 (= lt!48246 lt!48242)))

(declare-fun lt!48247 () ListLongMap!1493)

(assert (=> b!96604 (= lt!48247 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48238 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48238 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48234 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48234 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48231 () Unit!2849)

(assert (=> b!96604 (= lt!48231 (addApplyDifferent!67 lt!48247 lt!48238 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48234))))

(assert (=> b!96604 (= (apply!91 (+!129 lt!48247 (tuple2!2287 lt!48238 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48234) (apply!91 lt!48247 lt!48234))))

(declare-fun lt!48232 () Unit!2849)

(assert (=> b!96604 (= lt!48232 lt!48231)))

(declare-fun lt!48248 () ListLongMap!1493)

(assert (=> b!96604 (= lt!48248 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48241 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48241 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48249 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48249 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48237 () Unit!2849)

(assert (=> b!96604 (= lt!48237 (addApplyDifferent!67 lt!48248 lt!48241 (zeroValue!2341 newMap!16) lt!48249))))

(assert (=> b!96604 (= (apply!91 (+!129 lt!48248 (tuple2!2287 lt!48241 (zeroValue!2341 newMap!16))) lt!48249) (apply!91 lt!48248 lt!48249))))

(declare-fun lt!48243 () Unit!2849)

(assert (=> b!96604 (= lt!48243 lt!48237)))

(declare-fun lt!48240 () ListLongMap!1493)

(assert (=> b!96604 (= lt!48240 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48245 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48245 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48239 () (_ BitVec 64))

(assert (=> b!96604 (= lt!48239 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96604 (= lt!48251 (addApplyDifferent!67 lt!48240 lt!48245 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!48239))))

(assert (=> b!96604 (= (apply!91 (+!129 lt!48240 (tuple2!2287 lt!48245 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48239) (apply!91 lt!48240 lt!48239))))

(declare-fun bm!9786 () Bool)

(assert (=> bm!9786 (= call!9789 call!9788)))

(declare-fun b!96605 () Bool)

(assert (=> b!96605 (= e!62970 call!9784)))

(declare-fun bm!9787 () Bool)

(assert (=> bm!9787 (= call!9785 (contains!783 lt!48235 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96606 () Bool)

(assert (=> b!96606 (= e!62963 (not call!9787))))

(declare-fun b!96607 () Bool)

(assert (=> b!96607 (= e!62967 (+!129 call!9788 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96608 () Bool)

(assert (=> b!96608 (= e!62972 (= (apply!91 lt!48235 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96608 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (_values!2439 newMap!16))))))

(assert (=> b!96608 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25569 c!16322) b!96607))

(assert (= (and d!25569 (not c!16322)) b!96600))

(assert (= (and b!96600 c!16325) b!96589))

(assert (= (and b!96600 (not c!16325)) b!96601))

(assert (= (and b!96601 c!16321) b!96592))

(assert (= (and b!96601 (not c!16321)) b!96605))

(assert (= (or b!96592 b!96605) bm!9781))

(assert (= (or b!96589 bm!9781) bm!9784))

(assert (= (or b!96589 b!96592) bm!9786))

(assert (= (or b!96607 bm!9784) bm!9785))

(assert (= (or b!96607 bm!9786) bm!9783))

(assert (= (and d!25569 res!48721) b!96590))

(assert (= (and d!25569 c!16324) b!96604))

(assert (= (and d!25569 (not c!16324)) b!96599))

(assert (= (and d!25569 res!48717) b!96596))

(assert (= (and b!96596 res!48714) b!96588))

(assert (= (and b!96596 (not res!48719)) b!96591))

(assert (= (and b!96591 res!48716) b!96608))

(assert (= (and b!96596 res!48718) b!96594))

(assert (= (and b!96594 c!16326) b!96598))

(assert (= (and b!96594 (not c!16326)) b!96595))

(assert (= (and b!96598 res!48715) b!96597))

(assert (= (or b!96598 b!96595) bm!9787))

(assert (= (and b!96594 res!48720) b!96602))

(assert (= (and b!96602 c!16323) b!96593))

(assert (= (and b!96602 (not c!16323)) b!96606))

(assert (= (and b!96593 res!48722) b!96603))

(assert (= (or b!96593 b!96606) bm!9782))

(declare-fun b_lambda!4277 () Bool)

(assert (=> (not b_lambda!4277) (not b!96608)))

(assert (=> b!96608 t!5484))

(declare-fun b_and!5913 () Bool)

(assert (= b_and!5909 (and (=> t!5484 result!3225) b_and!5913)))

(assert (=> b!96608 t!5486))

(declare-fun b_and!5915 () Bool)

(assert (= b_and!5911 (and (=> t!5486 result!3227) b_and!5915)))

(assert (=> bm!9785 m!103633))

(declare-fun m!104939 () Bool)

(assert (=> bm!9785 m!104939))

(assert (=> b!96608 m!104023))

(assert (=> b!96608 m!103949))

(assert (=> b!96608 m!104025))

(assert (=> b!96608 m!103953))

(assert (=> b!96608 m!103953))

(declare-fun m!104941 () Bool)

(assert (=> b!96608 m!104941))

(assert (=> b!96608 m!104023))

(assert (=> b!96608 m!103949))

(declare-fun m!104943 () Bool)

(assert (=> b!96607 m!104943))

(assert (=> b!96604 m!103633))

(declare-fun m!104945 () Bool)

(assert (=> b!96604 m!104945))

(assert (=> b!96604 m!103633))

(assert (=> b!96604 m!104939))

(declare-fun m!104947 () Bool)

(assert (=> b!96604 m!104947))

(assert (=> b!96604 m!103633))

(declare-fun m!104949 () Bool)

(assert (=> b!96604 m!104949))

(declare-fun m!104951 () Bool)

(assert (=> b!96604 m!104951))

(declare-fun m!104953 () Bool)

(assert (=> b!96604 m!104953))

(declare-fun m!104955 () Bool)

(assert (=> b!96604 m!104955))

(declare-fun m!104957 () Bool)

(assert (=> b!96604 m!104957))

(declare-fun m!104959 () Bool)

(assert (=> b!96604 m!104959))

(declare-fun m!104961 () Bool)

(assert (=> b!96604 m!104961))

(declare-fun m!104963 () Bool)

(assert (=> b!96604 m!104963))

(declare-fun m!104965 () Bool)

(assert (=> b!96604 m!104965))

(assert (=> b!96604 m!103953))

(assert (=> b!96604 m!104951))

(assert (=> b!96604 m!104955))

(declare-fun m!104967 () Bool)

(assert (=> b!96604 m!104967))

(declare-fun m!104969 () Bool)

(assert (=> b!96604 m!104969))

(assert (=> b!96604 m!104967))

(declare-fun m!104971 () Bool)

(assert (=> b!96604 m!104971))

(declare-fun m!104973 () Bool)

(assert (=> b!96604 m!104973))

(assert (=> b!96604 m!104959))

(assert (=> b!96590 m!103953))

(assert (=> b!96590 m!103953))

(assert (=> b!96590 m!103989))

(declare-fun m!104975 () Bool)

(assert (=> b!96597 m!104975))

(declare-fun m!104977 () Bool)

(assert (=> bm!9783 m!104977))

(declare-fun m!104979 () Bool)

(assert (=> b!96603 m!104979))

(assert (=> b!96591 m!103953))

(assert (=> b!96591 m!103953))

(declare-fun m!104981 () Bool)

(assert (=> b!96591 m!104981))

(assert (=> b!96588 m!103953))

(assert (=> b!96588 m!103953))

(assert (=> b!96588 m!103989))

(assert (=> d!25569 m!103933))

(declare-fun m!104983 () Bool)

(assert (=> bm!9782 m!104983))

(declare-fun m!104985 () Bool)

(assert (=> bm!9787 m!104985))

(assert (=> d!25391 d!25569))

(declare-fun d!25571 () Bool)

(declare-fun e!62975 () Bool)

(assert (=> d!25571 e!62975))

(declare-fun res!48723 () Bool)

(assert (=> d!25571 (=> (not res!48723) (not e!62975))))

(declare-fun lt!48253 () ListLongMap!1493)

(assert (=> d!25571 (= res!48723 (contains!783 lt!48253 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48254 () List!1558)

(assert (=> d!25571 (= lt!48253 (ListLongMap!1494 lt!48254))))

(declare-fun lt!48255 () Unit!2849)

(declare-fun lt!48252 () Unit!2849)

(assert (=> d!25571 (= lt!48255 lt!48252)))

(assert (=> d!25571 (= (getValueByKey!150 lt!48254 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25571 (= lt!48252 (lemmaContainsTupThenGetReturnValue!66 lt!48254 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25571 (= lt!48254 (insertStrictlySorted!69 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25571 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48253)))

(declare-fun b!96609 () Bool)

(declare-fun res!48724 () Bool)

(assert (=> b!96609 (=> (not res!48724) (not e!62975))))

(assert (=> b!96609 (= res!48724 (= (getValueByKey!150 (toList!762 lt!48253) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96610 () Bool)

(assert (=> b!96610 (= e!62975 (contains!785 (toList!762 lt!48253) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25571 res!48723) b!96609))

(assert (= (and b!96609 res!48724) b!96610))

(declare-fun m!104987 () Bool)

(assert (=> d!25571 m!104987))

(declare-fun m!104989 () Bool)

(assert (=> d!25571 m!104989))

(declare-fun m!104991 () Bool)

(assert (=> d!25571 m!104991))

(declare-fun m!104993 () Bool)

(assert (=> d!25571 m!104993))

(declare-fun m!104995 () Bool)

(assert (=> b!96609 m!104995))

(declare-fun m!104997 () Bool)

(assert (=> b!96610 m!104997))

(assert (=> d!25391 d!25571))

(assert (=> d!25391 d!25311))

(declare-fun d!25573 () Bool)

(assert (=> d!25573 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25573 true))

(declare-fun _$8!82 () Unit!2849)

(assert (=> d!25573 (= (choose!589 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) lt!47764 (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) _$8!82)))

(declare-fun bs!3976 () Bool)

(assert (= bs!3976 d!25573))

(assert (=> bs!3976 m!103769))

(assert (=> bs!3976 m!103769))

(assert (=> bs!3976 m!104385))

(assert (=> bs!3976 m!103633))

(assert (=> bs!3976 m!104383))

(assert (=> d!25391 d!25573))

(assert (=> d!25391 d!25421))

(assert (=> b!95929 d!25439))

(declare-fun d!25575 () Bool)

(declare-fun e!62976 () Bool)

(assert (=> d!25575 e!62976))

(declare-fun res!48725 () Bool)

(assert (=> d!25575 (=> (not res!48725) (not e!62976))))

(declare-fun lt!48257 () ListLongMap!1493)

(assert (=> d!25575 (= res!48725 (contains!783 lt!48257 (_1!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun lt!48258 () List!1558)

(assert (=> d!25575 (= lt!48257 (ListLongMap!1494 lt!48258))))

(declare-fun lt!48259 () Unit!2849)

(declare-fun lt!48256 () Unit!2849)

(assert (=> d!25575 (= lt!48259 lt!48256)))

(assert (=> d!25575 (= (getValueByKey!150 lt!48258 (_1!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))) (Some!155 (_2!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25575 (= lt!48256 (lemmaContainsTupThenGetReturnValue!66 lt!48258 (_1!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (_2!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25575 (= lt!48258 (insertStrictlySorted!69 (toList!762 (ite c!16200 call!9733 (ite c!16203 call!9729 call!9727))) (_1!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (_2!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(assert (=> d!25575 (= (+!129 (ite c!16200 call!9733 (ite c!16203 call!9729 call!9727)) (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!48257)))

(declare-fun b!96611 () Bool)

(declare-fun res!48726 () Bool)

(assert (=> b!96611 (=> (not res!48726) (not e!62976))))

(assert (=> b!96611 (= res!48726 (= (getValueByKey!150 (toList!762 lt!48257) (_1!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))) (Some!155 (_2!1154 (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))))

(declare-fun b!96612 () Bool)

(assert (=> b!96612 (= e!62976 (contains!785 (toList!762 lt!48257) (ite (or c!16200 c!16203) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (= (and d!25575 res!48725) b!96611))

(assert (= (and b!96611 res!48726) b!96612))

(declare-fun m!104999 () Bool)

(assert (=> d!25575 m!104999))

(declare-fun m!105001 () Bool)

(assert (=> d!25575 m!105001))

(declare-fun m!105003 () Bool)

(assert (=> d!25575 m!105003))

(declare-fun m!105005 () Bool)

(assert (=> d!25575 m!105005))

(declare-fun m!105007 () Bool)

(assert (=> b!96611 m!105007))

(declare-fun m!105009 () Bool)

(assert (=> b!96612 m!105009))

(assert (=> bm!9726 d!25575))

(assert (=> b!95952 d!25281))

(declare-fun d!25577 () Bool)

(assert (=> d!25577 (= (inRange!0 (ite c!16210 (index!3126 lt!48044) (index!3129 lt!48044)) (mask!6541 newMap!16)) (and (bvsge (ite c!16210 (index!3126 lt!48044) (index!3129 lt!48044)) #b00000000000000000000000000000000) (bvslt (ite c!16210 (index!3126 lt!48044) (index!3129 lt!48044)) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9736 d!25577))

(assert (=> b!96027 d!25439))

(declare-fun d!25579 () Bool)

(assert (=> d!25579 (= (apply!91 lt!47789 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1281 (getValueByKey!150 (toList!762 lt!47789) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3977 () Bool)

(assert (= bs!3977 d!25579))

(assert (=> bs!3977 m!103953))

(declare-fun m!105011 () Bool)

(assert (=> bs!3977 m!105011))

(assert (=> bs!3977 m!105011))

(declare-fun m!105013 () Bool)

(assert (=> bs!3977 m!105013))

(assert (=> b!95947 d!25579))

(declare-fun c!16327 () Bool)

(declare-fun d!25581 () Bool)

(assert (=> d!25581 (= c!16327 ((_ is ValueCellFull!965) (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62977 () V!3137)

(assert (=> d!25581 (= (get!1278 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62977)))

(declare-fun b!96613 () Bool)

(assert (=> b!96613 (= e!62977 (get!1279 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96614 () Bool)

(assert (=> b!96614 (= e!62977 (get!1280 (select (arr!1995 (ite (or c!16117 c!16114) (_values!2439 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25581 c!16327) b!96613))

(assert (= (and d!25581 (not c!16327)) b!96614))

(assert (=> b!96613 m!103947))

(assert (=> b!96613 m!103949))

(declare-fun m!105015 () Bool)

(assert (=> b!96613 m!105015))

(assert (=> b!96614 m!103947))

(assert (=> b!96614 m!103949))

(declare-fun m!105017 () Bool)

(assert (=> b!96614 m!105017))

(assert (=> b!95947 d!25581))

(declare-fun d!25583 () Bool)

(assert (=> d!25583 (= (apply!91 lt!47818 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1281 (getValueByKey!150 (toList!762 lt!47818) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3978 () Bool)

(assert (= bs!3978 d!25583))

(assert (=> bs!3978 m!103953))

(declare-fun m!105019 () Bool)

(assert (=> bs!3978 m!105019))

(assert (=> bs!3978 m!105019))

(declare-fun m!105021 () Bool)

(assert (=> bs!3978 m!105021))

(assert (=> b!95992 d!25583))

(declare-fun d!25585 () Bool)

(declare-fun c!16328 () Bool)

(assert (=> d!25585 (= c!16328 ((_ is ValueCellFull!965) (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62978 () V!3137)

(assert (=> d!25585 (= (get!1278 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62978)))

(declare-fun b!96615 () Bool)

(assert (=> b!96615 (= e!62978 (get!1279 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96616 () Bool)

(assert (=> b!96616 (= e!62978 (get!1280 (select (arr!1995 (_values!2439 newMap!16)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25585 c!16328) b!96615))

(assert (= (and d!25585 (not c!16328)) b!96616))

(assert (=> b!96615 m!104023))

(assert (=> b!96615 m!103949))

(declare-fun m!105023 () Bool)

(assert (=> b!96615 m!105023))

(assert (=> b!96616 m!104023))

(assert (=> b!96616 m!103949))

(declare-fun m!105025 () Bool)

(assert (=> b!96616 m!105025))

(assert (=> b!95992 d!25585))

(assert (=> d!25361 d!25337))

(assert (=> d!25361 d!25343))

(declare-fun d!25587 () Bool)

(assert (=> d!25587 (contains!783 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47660)))

(assert (=> d!25587 true))

(declare-fun _$35!336 () Unit!2849)

(assert (=> d!25587 (= (choose!586 lt!47654 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47660) _$35!336)))

(declare-fun bs!3979 () Bool)

(assert (= bs!3979 d!25587))

(assert (=> bs!3979 m!103789))

(assert (=> bs!3979 m!103789))

(assert (=> bs!3979 m!103791))

(assert (=> d!25361 d!25587))

(declare-fun d!25589 () Bool)

(declare-fun e!62979 () Bool)

(assert (=> d!25589 e!62979))

(declare-fun res!48727 () Bool)

(assert (=> d!25589 (=> res!48727 e!62979)))

(declare-fun lt!48262 () Bool)

(assert (=> d!25589 (= res!48727 (not lt!48262))))

(declare-fun lt!48263 () Bool)

(assert (=> d!25589 (= lt!48262 lt!48263)))

(declare-fun lt!48261 () Unit!2849)

(declare-fun e!62980 () Unit!2849)

(assert (=> d!25589 (= lt!48261 e!62980)))

(declare-fun c!16329 () Bool)

(assert (=> d!25589 (= c!16329 lt!48263)))

(assert (=> d!25589 (= lt!48263 (containsKey!153 (toList!762 lt!47654) lt!47660))))

(assert (=> d!25589 (= (contains!783 lt!47654 lt!47660) lt!48262)))

(declare-fun b!96618 () Bool)

(declare-fun lt!48260 () Unit!2849)

(assert (=> b!96618 (= e!62980 lt!48260)))

(assert (=> b!96618 (= lt!48260 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47654) lt!47660))))

(assert (=> b!96618 (isDefined!102 (getValueByKey!150 (toList!762 lt!47654) lt!47660))))

(declare-fun b!96619 () Bool)

(declare-fun Unit!2884 () Unit!2849)

(assert (=> b!96619 (= e!62980 Unit!2884)))

(declare-fun b!96620 () Bool)

(assert (=> b!96620 (= e!62979 (isDefined!102 (getValueByKey!150 (toList!762 lt!47654) lt!47660)))))

(assert (= (and d!25589 c!16329) b!96618))

(assert (= (and d!25589 (not c!16329)) b!96619))

(assert (= (and d!25589 (not res!48727)) b!96620))

(declare-fun m!105027 () Bool)

(assert (=> d!25589 m!105027))

(declare-fun m!105029 () Bool)

(assert (=> b!96618 m!105029))

(declare-fun m!105031 () Bool)

(assert (=> b!96618 m!105031))

(assert (=> b!96618 m!105031))

(declare-fun m!105033 () Bool)

(assert (=> b!96618 m!105033))

(assert (=> b!96620 m!105031))

(assert (=> b!96620 m!105031))

(assert (=> b!96620 m!105033))

(assert (=> d!25361 d!25589))

(declare-fun lt!48264 () Bool)

(declare-fun d!25591 () Bool)

(assert (=> d!25591 (= lt!48264 (select (content!101 (toList!762 lt!47915)) (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!62981 () Bool)

(assert (=> d!25591 (= lt!48264 e!62981)))

(declare-fun res!48729 () Bool)

(assert (=> d!25591 (=> (not res!48729) (not e!62981))))

(assert (=> d!25591 (= res!48729 ((_ is Cons!1554) (toList!762 lt!47915)))))

(assert (=> d!25591 (= (contains!785 (toList!762 lt!47915) (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48264)))

(declare-fun b!96621 () Bool)

(declare-fun e!62982 () Bool)

(assert (=> b!96621 (= e!62981 e!62982)))

(declare-fun res!48728 () Bool)

(assert (=> b!96621 (=> res!48728 e!62982)))

(assert (=> b!96621 (= res!48728 (= (h!2147 (toList!762 lt!47915)) (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96622 () Bool)

(assert (=> b!96622 (= e!62982 (contains!785 (t!5472 (toList!762 lt!47915)) (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25591 res!48729) b!96621))

(assert (= (and b!96621 (not res!48728)) b!96622))

(declare-fun m!105035 () Bool)

(assert (=> d!25591 m!105035))

(declare-fun m!105037 () Bool)

(assert (=> d!25591 m!105037))

(declare-fun m!105039 () Bool)

(assert (=> b!96622 m!105039))

(assert (=> b!96103 d!25591))

(declare-fun d!25593 () Bool)

(assert (=> d!25593 (= (isEmpty!359 (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) (not ((_ is Some!155) (getValueByKey!150 (toList!762 lt!47565) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(assert (=> d!25323 d!25593))

(declare-fun d!25595 () Bool)

(declare-fun e!62983 () Bool)

(assert (=> d!25595 e!62983))

(declare-fun res!48730 () Bool)

(assert (=> d!25595 (=> res!48730 e!62983)))

(declare-fun lt!48267 () Bool)

(assert (=> d!25595 (= res!48730 (not lt!48267))))

(declare-fun lt!48268 () Bool)

(assert (=> d!25595 (= lt!48267 lt!48268)))

(declare-fun lt!48266 () Unit!2849)

(declare-fun e!62984 () Unit!2849)

(assert (=> d!25595 (= lt!48266 e!62984)))

(declare-fun c!16330 () Bool)

(assert (=> d!25595 (= c!16330 lt!48268)))

(assert (=> d!25595 (= lt!48268 (containsKey!153 (toList!762 lt!47672) lt!47673))))

(assert (=> d!25595 (= (contains!783 lt!47672 lt!47673) lt!48267)))

(declare-fun b!96623 () Bool)

(declare-fun lt!48265 () Unit!2849)

(assert (=> b!96623 (= e!62984 lt!48265)))

(assert (=> b!96623 (= lt!48265 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47672) lt!47673))))

(assert (=> b!96623 (isDefined!102 (getValueByKey!150 (toList!762 lt!47672) lt!47673))))

(declare-fun b!96624 () Bool)

(declare-fun Unit!2885 () Unit!2849)

(assert (=> b!96624 (= e!62984 Unit!2885)))

(declare-fun b!96625 () Bool)

(assert (=> b!96625 (= e!62983 (isDefined!102 (getValueByKey!150 (toList!762 lt!47672) lt!47673)))))

(assert (= (and d!25595 c!16330) b!96623))

(assert (= (and d!25595 (not c!16330)) b!96624))

(assert (= (and d!25595 (not res!48730)) b!96625))

(declare-fun m!105041 () Bool)

(assert (=> d!25595 m!105041))

(declare-fun m!105043 () Bool)

(assert (=> b!96623 m!105043))

(assert (=> b!96623 m!104161))

(assert (=> b!96623 m!104161))

(declare-fun m!105045 () Bool)

(assert (=> b!96623 m!105045))

(assert (=> b!96625 m!104161))

(assert (=> b!96625 m!104161))

(assert (=> b!96625 m!105045))

(assert (=> d!25341 d!25595))

(assert (=> d!25341 d!25345))

(declare-fun d!25597 () Bool)

(assert (=> d!25597 (= (apply!91 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47673) (apply!91 lt!47672 lt!47673))))

(assert (=> d!25597 true))

(declare-fun _$34!859 () Unit!2849)

(assert (=> d!25597 (= (choose!585 lt!47672 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47673) _$34!859)))

(declare-fun bs!3980 () Bool)

(assert (= bs!3980 d!25597))

(assert (=> bs!3980 m!103797))

(assert (=> bs!3980 m!103797))

(assert (=> bs!3980 m!103799))

(assert (=> bs!3980 m!103803))

(assert (=> d!25341 d!25597))

(assert (=> d!25341 d!25349))

(assert (=> d!25341 d!25351))

(assert (=> b!96158 d!25439))

(declare-fun d!25599 () Bool)

(declare-fun e!62985 () Bool)

(assert (=> d!25599 e!62985))

(declare-fun res!48731 () Bool)

(assert (=> d!25599 (=> res!48731 e!62985)))

(declare-fun lt!48271 () Bool)

(assert (=> d!25599 (= res!48731 (not lt!48271))))

(declare-fun lt!48272 () Bool)

(assert (=> d!25599 (= lt!48271 lt!48272)))

(declare-fun lt!48270 () Unit!2849)

(declare-fun e!62986 () Unit!2849)

(assert (=> d!25599 (= lt!48270 e!62986)))

(declare-fun c!16331 () Bool)

(assert (=> d!25599 (= c!16331 lt!48272)))

(assert (=> d!25599 (= lt!48272 (containsKey!153 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25599 (= (contains!783 lt!48055 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48271)))

(declare-fun b!96626 () Bool)

(declare-fun lt!48269 () Unit!2849)

(assert (=> b!96626 (= e!62986 lt!48269)))

(assert (=> b!96626 (= lt!48269 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!96626 (isDefined!102 (getValueByKey!150 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96627 () Bool)

(declare-fun Unit!2886 () Unit!2849)

(assert (=> b!96627 (= e!62986 Unit!2886)))

(declare-fun b!96628 () Bool)

(assert (=> b!96628 (= e!62985 (isDefined!102 (getValueByKey!150 (toList!762 lt!48055) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25599 c!16331) b!96626))

(assert (= (and d!25599 (not c!16331)) b!96627))

(assert (= (and d!25599 (not res!48731)) b!96628))

(declare-fun m!105047 () Bool)

(assert (=> d!25599 m!105047))

(declare-fun m!105049 () Bool)

(assert (=> b!96626 m!105049))

(assert (=> b!96626 m!104397))

(assert (=> b!96626 m!104397))

(declare-fun m!105051 () Bool)

(assert (=> b!96626 m!105051))

(assert (=> b!96628 m!104397))

(assert (=> b!96628 m!104397))

(assert (=> b!96628 m!105051))

(assert (=> d!25395 d!25599))

(declare-fun e!62988 () Option!156)

(declare-fun b!96631 () Bool)

(assert (=> b!96631 (= e!62988 (getValueByKey!150 (t!5472 lt!48056) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96632 () Bool)

(assert (=> b!96632 (= e!62988 None!154)))

(declare-fun c!16332 () Bool)

(declare-fun d!25601 () Bool)

(assert (=> d!25601 (= c!16332 (and ((_ is Cons!1554) lt!48056) (= (_1!1154 (h!2147 lt!48056)) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62987 () Option!156)

(assert (=> d!25601 (= (getValueByKey!150 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62987)))

(declare-fun b!96629 () Bool)

(assert (=> b!96629 (= e!62987 (Some!155 (_2!1154 (h!2147 lt!48056))))))

(declare-fun b!96630 () Bool)

(assert (=> b!96630 (= e!62987 e!62988)))

(declare-fun c!16333 () Bool)

(assert (=> b!96630 (= c!16333 (and ((_ is Cons!1554) lt!48056) (not (= (_1!1154 (h!2147 lt!48056)) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25601 c!16332) b!96629))

(assert (= (and d!25601 (not c!16332)) b!96630))

(assert (= (and b!96630 c!16333) b!96631))

(assert (= (and b!96630 (not c!16333)) b!96632))

(declare-fun m!105053 () Bool)

(assert (=> b!96631 m!105053))

(assert (=> d!25395 d!25601))

(declare-fun d!25603 () Bool)

(assert (=> d!25603 (= (getValueByKey!150 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48273 () Unit!2849)

(assert (=> d!25603 (= lt!48273 (choose!590 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62989 () Bool)

(assert (=> d!25603 e!62989))

(declare-fun res!48732 () Bool)

(assert (=> d!25603 (=> (not res!48732) (not e!62989))))

(assert (=> d!25603 (= res!48732 (isStrictlySorted!290 lt!48056))))

(assert (=> d!25603 (= (lemmaContainsTupThenGetReturnValue!66 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48273)))

(declare-fun b!96633 () Bool)

(declare-fun res!48733 () Bool)

(assert (=> b!96633 (=> (not res!48733) (not e!62989))))

(assert (=> b!96633 (= res!48733 (containsKey!153 lt!48056 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96634 () Bool)

(assert (=> b!96634 (= e!62989 (contains!785 lt!48056 (tuple2!2287 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25603 res!48732) b!96633))

(assert (= (and b!96633 res!48733) b!96634))

(assert (=> d!25603 m!104391))

(declare-fun m!105055 () Bool)

(assert (=> d!25603 m!105055))

(declare-fun m!105057 () Bool)

(assert (=> d!25603 m!105057))

(declare-fun m!105059 () Bool)

(assert (=> b!96633 m!105059))

(declare-fun m!105061 () Bool)

(assert (=> b!96634 m!105061))

(assert (=> d!25395 d!25603))

(declare-fun d!25605 () Bool)

(declare-fun e!62994 () Bool)

(assert (=> d!25605 e!62994))

(declare-fun res!48735 () Bool)

(assert (=> d!25605 (=> (not res!48735) (not e!62994))))

(declare-fun lt!48274 () List!1558)

(assert (=> d!25605 (= res!48735 (isStrictlySorted!290 lt!48274))))

(declare-fun e!62991 () List!1558)

(assert (=> d!25605 (= lt!48274 e!62991)))

(declare-fun c!16337 () Bool)

(assert (=> d!25605 (= c!16337 (and ((_ is Cons!1554) (toList!762 call!9676)) (bvslt (_1!1154 (h!2147 (toList!762 call!9676))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25605 (isStrictlySorted!290 (toList!762 call!9676))))

(assert (=> d!25605 (= (insertStrictlySorted!69 (toList!762 call!9676) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48274)))

(declare-fun b!96635 () Bool)

(declare-fun call!9793 () List!1558)

(assert (=> b!96635 (= e!62991 call!9793)))

(declare-fun bm!9788 () Bool)

(declare-fun call!9792 () List!1558)

(assert (=> bm!9788 (= call!9792 call!9793)))

(declare-fun b!96636 () Bool)

(assert (=> b!96636 (= e!62994 (contains!785 lt!48274 (tuple2!2287 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9789 () Bool)

(declare-fun e!62992 () List!1558)

(assert (=> bm!9789 (= call!9793 ($colon$colon!76 e!62992 (ite c!16337 (h!2147 (toList!762 call!9676)) (tuple2!2287 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16335 () Bool)

(assert (=> bm!9789 (= c!16335 c!16337)))

(declare-fun b!96637 () Bool)

(declare-fun res!48734 () Bool)

(assert (=> b!96637 (=> (not res!48734) (not e!62994))))

(assert (=> b!96637 (= res!48734 (containsKey!153 lt!48274 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9790 () Bool)

(declare-fun call!9791 () List!1558)

(assert (=> bm!9790 (= call!9791 call!9792)))

(declare-fun b!96638 () Bool)

(declare-fun e!62990 () List!1558)

(assert (=> b!96638 (= e!62990 call!9791)))

(declare-fun b!96639 () Bool)

(declare-fun e!62993 () List!1558)

(assert (=> b!96639 (= e!62993 call!9792)))

(declare-fun b!96640 () Bool)

(assert (=> b!96640 (= e!62991 e!62993)))

(declare-fun c!16336 () Bool)

(assert (=> b!96640 (= c!16336 (and ((_ is Cons!1554) (toList!762 call!9676)) (= (_1!1154 (h!2147 (toList!762 call!9676))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!16334 () Bool)

(declare-fun b!96641 () Bool)

(assert (=> b!96641 (= c!16334 (and ((_ is Cons!1554) (toList!762 call!9676)) (bvsgt (_1!1154 (h!2147 (toList!762 call!9676))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!96641 (= e!62993 e!62990)))

(declare-fun b!96642 () Bool)

(assert (=> b!96642 (= e!62992 (insertStrictlySorted!69 (t!5472 (toList!762 call!9676)) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96643 () Bool)

(assert (=> b!96643 (= e!62990 call!9791)))

(declare-fun b!96644 () Bool)

(assert (=> b!96644 (= e!62992 (ite c!16336 (t!5472 (toList!762 call!9676)) (ite c!16334 (Cons!1554 (h!2147 (toList!762 call!9676)) (t!5472 (toList!762 call!9676))) Nil!1555)))))

(assert (= (and d!25605 c!16337) b!96635))

(assert (= (and d!25605 (not c!16337)) b!96640))

(assert (= (and b!96640 c!16336) b!96639))

(assert (= (and b!96640 (not c!16336)) b!96641))

(assert (= (and b!96641 c!16334) b!96638))

(assert (= (and b!96641 (not c!16334)) b!96643))

(assert (= (or b!96638 b!96643) bm!9790))

(assert (= (or b!96639 bm!9790) bm!9788))

(assert (= (or b!96635 bm!9788) bm!9789))

(assert (= (and bm!9789 c!16335) b!96642))

(assert (= (and bm!9789 (not c!16335)) b!96644))

(assert (= (and d!25605 res!48735) b!96637))

(assert (= (and b!96637 res!48734) b!96636))

(declare-fun m!105063 () Bool)

(assert (=> b!96637 m!105063))

(declare-fun m!105065 () Bool)

(assert (=> b!96636 m!105065))

(declare-fun m!105067 () Bool)

(assert (=> bm!9789 m!105067))

(declare-fun m!105069 () Bool)

(assert (=> d!25605 m!105069))

(declare-fun m!105071 () Bool)

(assert (=> d!25605 m!105071))

(declare-fun m!105073 () Bool)

(assert (=> b!96642 m!105073))

(assert (=> d!25395 d!25605))

(declare-fun d!25607 () Bool)

(declare-fun e!62995 () Bool)

(assert (=> d!25607 e!62995))

(declare-fun res!48736 () Bool)

(assert (=> d!25607 (=> res!48736 e!62995)))

(declare-fun lt!48277 () Bool)

(assert (=> d!25607 (= res!48736 (not lt!48277))))

(declare-fun lt!48278 () Bool)

(assert (=> d!25607 (= lt!48277 lt!48278)))

(declare-fun lt!48276 () Unit!2849)

(declare-fun e!62996 () Unit!2849)

(assert (=> d!25607 (= lt!48276 e!62996)))

(declare-fun c!16338 () Bool)

(assert (=> d!25607 (= c!16338 lt!48278)))

(assert (=> d!25607 (= lt!48278 (containsKey!153 (toList!762 lt!47664) lt!47663))))

(assert (=> d!25607 (= (contains!783 lt!47664 lt!47663) lt!48277)))

(declare-fun b!96645 () Bool)

(declare-fun lt!48275 () Unit!2849)

(assert (=> b!96645 (= e!62996 lt!48275)))

(assert (=> b!96645 (= lt!48275 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47664) lt!47663))))

(assert (=> b!96645 (isDefined!102 (getValueByKey!150 (toList!762 lt!47664) lt!47663))))

(declare-fun b!96646 () Bool)

(declare-fun Unit!2887 () Unit!2849)

(assert (=> b!96646 (= e!62996 Unit!2887)))

(declare-fun b!96647 () Bool)

(assert (=> b!96647 (= e!62995 (isDefined!102 (getValueByKey!150 (toList!762 lt!47664) lt!47663)))))

(assert (= (and d!25607 c!16338) b!96645))

(assert (= (and d!25607 (not c!16338)) b!96646))

(assert (= (and d!25607 (not res!48736)) b!96647))

(declare-fun m!105075 () Bool)

(assert (=> d!25607 m!105075))

(declare-fun m!105077 () Bool)

(assert (=> b!96645 m!105077))

(assert (=> b!96645 m!104237))

(assert (=> b!96645 m!104237))

(declare-fun m!105079 () Bool)

(assert (=> b!96645 m!105079))

(assert (=> b!96647 m!104237))

(assert (=> b!96647 m!104237))

(assert (=> b!96647 m!105079))

(assert (=> d!25365 d!25607))

(assert (=> d!25365 d!25347))

(declare-fun d!25609 () Bool)

(assert (=> d!25609 (= (apply!91 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!47663) (apply!91 lt!47664 lt!47663))))

(assert (=> d!25609 true))

(declare-fun _$34!860 () Unit!2849)

(assert (=> d!25609 (= (choose!585 lt!47664 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))) lt!47663) _$34!860)))

(declare-fun bs!3981 () Bool)

(assert (= bs!3981 d!25609))

(assert (=> bs!3981 m!103805))

(assert (=> bs!3981 m!103805))

(assert (=> bs!3981 m!103807))

(assert (=> bs!3981 m!103809))

(assert (=> d!25365 d!25609))

(assert (=> d!25365 d!25357))

(assert (=> d!25365 d!25367))

(assert (=> bm!9720 d!25335))

(declare-fun d!25611 () Bool)

(declare-fun res!48737 () Bool)

(declare-fun e!62997 () Bool)

(assert (=> d!25611 (=> res!48737 e!62997)))

(assert (=> d!25611 (= res!48737 (and ((_ is Cons!1554) (toList!762 e!62523)) (= (_1!1154 (h!2147 (toList!762 e!62523))) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))))

(assert (=> d!25611 (= (containsKey!153 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))) e!62997)))

(declare-fun b!96648 () Bool)

(declare-fun e!62998 () Bool)

(assert (=> b!96648 (= e!62997 e!62998)))

(declare-fun res!48738 () Bool)

(assert (=> b!96648 (=> (not res!48738) (not e!62998))))

(assert (=> b!96648 (= res!48738 (and (or (not ((_ is Cons!1554) (toList!762 e!62523))) (bvsle (_1!1154 (h!2147 (toList!762 e!62523))) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))) ((_ is Cons!1554) (toList!762 e!62523)) (bvslt (_1!1154 (h!2147 (toList!762 e!62523))) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))))

(declare-fun b!96649 () Bool)

(assert (=> b!96649 (= e!62998 (containsKey!153 (t!5472 (toList!762 e!62523)) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(assert (= (and d!25611 (not res!48737)) b!96648))

(assert (= (and b!96648 res!48738) b!96649))

(declare-fun m!105081 () Bool)

(assert (=> b!96649 m!105081))

(assert (=> d!25403 d!25611))

(declare-fun d!25613 () Bool)

(declare-fun res!48739 () Bool)

(declare-fun e!62999 () Bool)

(assert (=> d!25613 (=> res!48739 e!62999)))

(assert (=> d!25613 (= res!48739 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25613 (= (containsKey!153 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000) e!62999)))

(declare-fun b!96650 () Bool)

(declare-fun e!63000 () Bool)

(assert (=> b!96650 (= e!62999 e!63000)))

(declare-fun res!48740 () Bool)

(assert (=> b!96650 (=> (not res!48740) (not e!63000))))

(assert (=> b!96650 (= res!48740 (and (or (not ((_ is Cons!1554) (toList!762 lt!47659))) (bvsle (_1!1154 (h!2147 (toList!762 lt!47659))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1554) (toList!762 lt!47659)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47659))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96651 () Bool)

(assert (=> b!96651 (= e!63000 (containsKey!153 (t!5472 (toList!762 lt!47659)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25613 (not res!48739)) b!96650))

(assert (= (and b!96650 res!48740) b!96651))

(declare-fun m!105083 () Bool)

(assert (=> b!96651 m!105083))

(assert (=> d!25405 d!25613))

(declare-fun d!25615 () Bool)

(assert (=> d!25615 (= (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95923 d!25615))

(declare-fun d!25617 () Bool)

(assert (=> d!25617 (= (apply!91 (+!129 lt!48031 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48032) (apply!91 lt!48031 lt!48032))))

(declare-fun lt!48279 () Unit!2849)

(assert (=> d!25617 (= lt!48279 (choose!585 lt!48031 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48032))))

(declare-fun e!63001 () Bool)

(assert (=> d!25617 e!63001))

(declare-fun res!48741 () Bool)

(assert (=> d!25617 (=> (not res!48741) (not e!63001))))

(assert (=> d!25617 (= res!48741 (contains!783 lt!48031 lt!48032))))

(assert (=> d!25617 (= (addApplyDifferent!67 lt!48031 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48032) lt!48279)))

(declare-fun b!96652 () Bool)

(assert (=> b!96652 (= e!63001 (not (= lt!48032 lt!48024)))))

(assert (= (and d!25617 res!48741) b!96652))

(declare-fun m!105085 () Bool)

(assert (=> d!25617 m!105085))

(assert (=> d!25617 m!104319))

(assert (=> d!25617 m!104321))

(assert (=> d!25617 m!104325))

(assert (=> d!25617 m!104319))

(declare-fun m!105087 () Bool)

(assert (=> d!25617 m!105087))

(assert (=> b!96174 d!25617))

(declare-fun d!25619 () Bool)

(assert (=> d!25619 (= (apply!91 (+!129 lt!48023 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48022) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!48023 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!48022)))))

(declare-fun bs!3982 () Bool)

(assert (= bs!3982 d!25619))

(declare-fun m!105089 () Bool)

(assert (=> bs!3982 m!105089))

(assert (=> bs!3982 m!105089))

(declare-fun m!105091 () Bool)

(assert (=> bs!3982 m!105091))

(assert (=> b!96174 d!25619))

(declare-fun d!25621 () Bool)

(assert (=> d!25621 (= (apply!91 (+!129 lt!48023 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48022) (apply!91 lt!48023 lt!48022))))

(declare-fun lt!48280 () Unit!2849)

(assert (=> d!25621 (= lt!48280 (choose!585 lt!48023 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48022))))

(declare-fun e!63002 () Bool)

(assert (=> d!25621 e!63002))

(declare-fun res!48742 () Bool)

(assert (=> d!25621 (=> (not res!48742) (not e!63002))))

(assert (=> d!25621 (= res!48742 (contains!783 lt!48023 lt!48022))))

(assert (=> d!25621 (= (addApplyDifferent!67 lt!48023 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48022) lt!48280)))

(declare-fun b!96653 () Bool)

(assert (=> b!96653 (= e!63002 (not (= lt!48022 lt!48028)))))

(assert (= (and d!25621 res!48742) b!96653))

(declare-fun m!105093 () Bool)

(assert (=> d!25621 m!105093))

(assert (=> d!25621 m!104327))

(assert (=> d!25621 m!104329))

(assert (=> d!25621 m!104331))

(assert (=> d!25621 m!104327))

(declare-fun m!105095 () Bool)

(assert (=> d!25621 m!105095))

(assert (=> b!96174 d!25621))

(declare-fun d!25623 () Bool)

(assert (=> d!25623 (= (apply!91 (+!129 lt!48030 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48017) (apply!91 lt!48030 lt!48017))))

(declare-fun lt!48281 () Unit!2849)

(assert (=> d!25623 (= lt!48281 (choose!585 lt!48030 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48017))))

(declare-fun e!63003 () Bool)

(assert (=> d!25623 e!63003))

(declare-fun res!48743 () Bool)

(assert (=> d!25623 (=> (not res!48743) (not e!63003))))

(assert (=> d!25623 (= res!48743 (contains!783 lt!48030 lt!48017))))

(assert (=> d!25623 (= (addApplyDifferent!67 lt!48030 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) lt!48017) lt!48281)))

(declare-fun b!96654 () Bool)

(assert (=> b!96654 (= e!63003 (not (= lt!48017 lt!48021)))))

(assert (= (and d!25623 res!48743) b!96654))

(declare-fun m!105097 () Bool)

(assert (=> d!25623 m!105097))

(assert (=> d!25623 m!104315))

(assert (=> d!25623 m!104317))

(assert (=> d!25623 m!104323))

(assert (=> d!25623 m!104315))

(declare-fun m!105099 () Bool)

(assert (=> d!25623 m!105099))

(assert (=> b!96174 d!25623))

(declare-fun d!25625 () Bool)

(assert (=> d!25625 (= (apply!91 lt!48023 lt!48022) (get!1281 (getValueByKey!150 (toList!762 lt!48023) lt!48022)))))

(declare-fun bs!3983 () Bool)

(assert (= bs!3983 d!25625))

(declare-fun m!105101 () Bool)

(assert (=> bs!3983 m!105101))

(assert (=> bs!3983 m!105101))

(declare-fun m!105103 () Bool)

(assert (=> bs!3983 m!105103))

(assert (=> b!96174 d!25625))

(declare-fun d!25627 () Bool)

(declare-fun e!63004 () Bool)

(assert (=> d!25627 e!63004))

(declare-fun res!48744 () Bool)

(assert (=> d!25627 (=> (not res!48744) (not e!63004))))

(declare-fun lt!48283 () ListLongMap!1493)

(assert (=> d!25627 (= res!48744 (contains!783 lt!48283 (_1!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48284 () List!1558)

(assert (=> d!25627 (= lt!48283 (ListLongMap!1494 lt!48284))))

(declare-fun lt!48285 () Unit!2849)

(declare-fun lt!48282 () Unit!2849)

(assert (=> d!25627 (= lt!48285 lt!48282)))

(assert (=> d!25627 (= (getValueByKey!150 lt!48284 (_1!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25627 (= lt!48282 (lemmaContainsTupThenGetReturnValue!66 lt!48284 (_1!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25627 (= lt!48284 (insertStrictlySorted!69 (toList!762 lt!48023) (_1!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25627 (= (+!129 lt!48023 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48283)))

(declare-fun b!96655 () Bool)

(declare-fun res!48745 () Bool)

(assert (=> b!96655 (=> (not res!48745) (not e!63004))))

(assert (=> b!96655 (= res!48745 (= (getValueByKey!150 (toList!762 lt!48283) (_1!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96656 () Bool)

(assert (=> b!96656 (= e!63004 (contains!785 (toList!762 lt!48283) (tuple2!2287 lt!48028 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25627 res!48744) b!96655))

(assert (= (and b!96655 res!48745) b!96656))

(declare-fun m!105105 () Bool)

(assert (=> d!25627 m!105105))

(declare-fun m!105107 () Bool)

(assert (=> d!25627 m!105107))

(declare-fun m!105109 () Bool)

(assert (=> d!25627 m!105109))

(declare-fun m!105111 () Bool)

(assert (=> d!25627 m!105111))

(declare-fun m!105113 () Bool)

(assert (=> b!96655 m!105113))

(declare-fun m!105115 () Bool)

(assert (=> b!96656 m!105115))

(assert (=> b!96174 d!25627))

(declare-fun d!25629 () Bool)

(assert (=> d!25629 (= (apply!91 lt!48031 lt!48032) (get!1281 (getValueByKey!150 (toList!762 lt!48031) lt!48032)))))

(declare-fun bs!3984 () Bool)

(assert (= bs!3984 d!25629))

(declare-fun m!105117 () Bool)

(assert (=> bs!3984 m!105117))

(assert (=> bs!3984 m!105117))

(declare-fun m!105119 () Bool)

(assert (=> bs!3984 m!105119))

(assert (=> b!96174 d!25629))

(declare-fun d!25631 () Bool)

(assert (=> d!25631 (= (apply!91 (+!129 lt!48030 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48017) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!48030 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) lt!48017)))))

(declare-fun bs!3985 () Bool)

(assert (= bs!3985 d!25631))

(declare-fun m!105121 () Bool)

(assert (=> bs!3985 m!105121))

(assert (=> bs!3985 m!105121))

(declare-fun m!105123 () Bool)

(assert (=> bs!3985 m!105123))

(assert (=> b!96174 d!25631))

(declare-fun d!25633 () Bool)

(declare-fun e!63005 () Bool)

(assert (=> d!25633 e!63005))

(declare-fun res!48746 () Bool)

(assert (=> d!25633 (=> res!48746 e!63005)))

(declare-fun lt!48288 () Bool)

(assert (=> d!25633 (= res!48746 (not lt!48288))))

(declare-fun lt!48289 () Bool)

(assert (=> d!25633 (= lt!48288 lt!48289)))

(declare-fun lt!48287 () Unit!2849)

(declare-fun e!63006 () Unit!2849)

(assert (=> d!25633 (= lt!48287 e!63006)))

(declare-fun c!16339 () Bool)

(assert (=> d!25633 (= c!16339 lt!48289)))

(assert (=> d!25633 (= lt!48289 (containsKey!153 (toList!762 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!48019))))

(assert (=> d!25633 (= (contains!783 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48019) lt!48288)))

(declare-fun b!96657 () Bool)

(declare-fun lt!48286 () Unit!2849)

(assert (=> b!96657 (= e!63006 lt!48286)))

(assert (=> b!96657 (= lt!48286 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!48019))))

(assert (=> b!96657 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!48019))))

(declare-fun b!96658 () Bool)

(declare-fun Unit!2888 () Unit!2849)

(assert (=> b!96658 (= e!63006 Unit!2888)))

(declare-fun b!96659 () Bool)

(assert (=> b!96659 (= e!63005 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!48019)))))

(assert (= (and d!25633 c!16339) b!96657))

(assert (= (and d!25633 (not c!16339)) b!96658))

(assert (= (and d!25633 (not res!48746)) b!96659))

(declare-fun m!105125 () Bool)

(assert (=> d!25633 m!105125))

(declare-fun m!105127 () Bool)

(assert (=> b!96657 m!105127))

(declare-fun m!105129 () Bool)

(assert (=> b!96657 m!105129))

(assert (=> b!96657 m!105129))

(declare-fun m!105131 () Bool)

(assert (=> b!96657 m!105131))

(assert (=> b!96659 m!105129))

(assert (=> b!96659 m!105129))

(assert (=> b!96659 m!105131))

(assert (=> b!96174 d!25633))

(declare-fun d!25635 () Bool)

(declare-fun e!63007 () Bool)

(assert (=> d!25635 e!63007))

(declare-fun res!48747 () Bool)

(assert (=> d!25635 (=> (not res!48747) (not e!63007))))

(declare-fun lt!48291 () ListLongMap!1493)

(assert (=> d!25635 (= res!48747 (contains!783 lt!48291 (_1!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(declare-fun lt!48292 () List!1558)

(assert (=> d!25635 (= lt!48291 (ListLongMap!1494 lt!48292))))

(declare-fun lt!48293 () Unit!2849)

(declare-fun lt!48290 () Unit!2849)

(assert (=> d!25635 (= lt!48293 lt!48290)))

(assert (=> d!25635 (= (getValueByKey!150 lt!48292 (_1!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25635 (= lt!48290 (lemmaContainsTupThenGetReturnValue!66 lt!48292 (_1!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25635 (= lt!48292 (insertStrictlySorted!69 (toList!762 lt!48013) (_1!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25635 (= (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48291)))

(declare-fun b!96660 () Bool)

(declare-fun res!48748 () Bool)

(assert (=> b!96660 (=> (not res!48748) (not e!63007))))

(assert (=> b!96660 (= res!48748 (= (getValueByKey!150 (toList!762 lt!48291) (_1!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))))

(declare-fun b!96661 () Bool)

(assert (=> b!96661 (= e!63007 (contains!785 (toList!762 lt!48291) (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))

(assert (= (and d!25635 res!48747) b!96660))

(assert (= (and b!96660 res!48748) b!96661))

(declare-fun m!105133 () Bool)

(assert (=> d!25635 m!105133))

(declare-fun m!105135 () Bool)

(assert (=> d!25635 m!105135))

(declare-fun m!105137 () Bool)

(assert (=> d!25635 m!105137))

(declare-fun m!105139 () Bool)

(assert (=> d!25635 m!105139))

(declare-fun m!105141 () Bool)

(assert (=> b!96660 m!105141))

(declare-fun m!105143 () Bool)

(assert (=> b!96661 m!105143))

(assert (=> b!96174 d!25635))

(declare-fun d!25637 () Bool)

(assert (=> d!25637 (= (apply!91 (+!129 lt!48031 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48032) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!48031 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) lt!48032)))))

(declare-fun bs!3986 () Bool)

(assert (= bs!3986 d!25637))

(declare-fun m!105145 () Bool)

(assert (=> bs!3986 m!105145))

(assert (=> bs!3986 m!105145))

(declare-fun m!105147 () Bool)

(assert (=> bs!3986 m!105147))

(assert (=> b!96174 d!25637))

(declare-fun d!25639 () Bool)

(assert (=> d!25639 (contains!783 (+!129 lt!48013 (tuple2!2287 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48019)))

(declare-fun lt!48294 () Unit!2849)

(assert (=> d!25639 (= lt!48294 (choose!586 lt!48013 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48019))))

(assert (=> d!25639 (contains!783 lt!48013 lt!48019)))

(assert (=> d!25639 (= (addStillContains!67 lt!48013 lt!48027 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) lt!48019) lt!48294)))

(declare-fun bs!3987 () Bool)

(assert (= bs!3987 d!25639))

(assert (=> bs!3987 m!104311))

(assert (=> bs!3987 m!104311))

(assert (=> bs!3987 m!104313))

(declare-fun m!105149 () Bool)

(assert (=> bs!3987 m!105149))

(declare-fun m!105151 () Bool)

(assert (=> bs!3987 m!105151))

(assert (=> b!96174 d!25639))

(declare-fun d!25641 () Bool)

(declare-fun e!63008 () Bool)

(assert (=> d!25641 e!63008))

(declare-fun res!48749 () Bool)

(assert (=> d!25641 (=> (not res!48749) (not e!63008))))

(declare-fun lt!48296 () ListLongMap!1493)

(assert (=> d!25641 (= res!48749 (contains!783 lt!48296 (_1!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48297 () List!1558)

(assert (=> d!25641 (= lt!48296 (ListLongMap!1494 lt!48297))))

(declare-fun lt!48298 () Unit!2849)

(declare-fun lt!48295 () Unit!2849)

(assert (=> d!25641 (= lt!48298 lt!48295)))

(assert (=> d!25641 (= (getValueByKey!150 lt!48297 (_1!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25641 (= lt!48295 (lemmaContainsTupThenGetReturnValue!66 lt!48297 (_1!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25641 (= lt!48297 (insertStrictlySorted!69 (toList!762 lt!48030) (_1!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25641 (= (+!129 lt!48030 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48296)))

(declare-fun b!96662 () Bool)

(declare-fun res!48750 () Bool)

(assert (=> b!96662 (=> (not res!48750) (not e!63008))))

(assert (=> b!96662 (= res!48750 (= (getValueByKey!150 (toList!762 lt!48296) (_1!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96663 () Bool)

(assert (=> b!96663 (= e!63008 (contains!785 (toList!762 lt!48296) (tuple2!2287 lt!48021 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25641 res!48749) b!96662))

(assert (= (and b!96662 res!48750) b!96663))

(declare-fun m!105153 () Bool)

(assert (=> d!25641 m!105153))

(declare-fun m!105155 () Bool)

(assert (=> d!25641 m!105155))

(declare-fun m!105157 () Bool)

(assert (=> d!25641 m!105157))

(declare-fun m!105159 () Bool)

(assert (=> d!25641 m!105159))

(declare-fun m!105161 () Bool)

(assert (=> b!96662 m!105161))

(declare-fun m!105163 () Bool)

(assert (=> b!96663 m!105163))

(assert (=> b!96174 d!25641))

(declare-fun d!25643 () Bool)

(declare-fun e!63009 () Bool)

(assert (=> d!25643 e!63009))

(declare-fun res!48751 () Bool)

(assert (=> d!25643 (=> (not res!48751) (not e!63009))))

(declare-fun lt!48300 () ListLongMap!1493)

(assert (=> d!25643 (= res!48751 (contains!783 lt!48300 (_1!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(declare-fun lt!48301 () List!1558)

(assert (=> d!25643 (= lt!48300 (ListLongMap!1494 lt!48301))))

(declare-fun lt!48302 () Unit!2849)

(declare-fun lt!48299 () Unit!2849)

(assert (=> d!25643 (= lt!48302 lt!48299)))

(assert (=> d!25643 (= (getValueByKey!150 lt!48301 (_1!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25643 (= lt!48299 (lemmaContainsTupThenGetReturnValue!66 lt!48301 (_1!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25643 (= lt!48301 (insertStrictlySorted!69 (toList!762 lt!48031) (_1!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))))))

(assert (=> d!25643 (= (+!129 lt!48031 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))) lt!48300)))

(declare-fun b!96664 () Bool)

(declare-fun res!48752 () Bool)

(assert (=> b!96664 (=> (not res!48752) (not e!63009))))

(assert (=> b!96664 (= res!48752 (= (getValueByKey!150 (toList!762 lt!48300) (_1!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))))

(declare-fun b!96665 () Bool)

(assert (=> b!96665 (= e!63009 (contains!785 (toList!762 lt!48300) (tuple2!2287 lt!48024 (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)))))))

(assert (= (and d!25643 res!48751) b!96664))

(assert (= (and b!96664 res!48752) b!96665))

(declare-fun m!105165 () Bool)

(assert (=> d!25643 m!105165))

(declare-fun m!105167 () Bool)

(assert (=> d!25643 m!105167))

(declare-fun m!105169 () Bool)

(assert (=> d!25643 m!105169))

(declare-fun m!105171 () Bool)

(assert (=> d!25643 m!105171))

(declare-fun m!105173 () Bool)

(assert (=> b!96664 m!105173))

(declare-fun m!105175 () Bool)

(assert (=> b!96665 m!105175))

(assert (=> b!96174 d!25643))

(declare-fun d!25645 () Bool)

(assert (=> d!25645 (= (apply!91 lt!48030 lt!48017) (get!1281 (getValueByKey!150 (toList!762 lt!48030) lt!48017)))))

(declare-fun bs!3988 () Bool)

(assert (= bs!3988 d!25645))

(declare-fun m!105177 () Bool)

(assert (=> bs!3988 m!105177))

(assert (=> bs!3988 m!105177))

(declare-fun m!105179 () Bool)

(assert (=> bs!3988 m!105179))

(assert (=> b!96174 d!25645))

(declare-fun e!63013 () Bool)

(declare-fun lt!48307 () ListLongMap!1493)

(declare-fun b!96666 () Bool)

(assert (=> b!96666 (= e!63013 (= lt!48307 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16))))))

(declare-fun b!96667 () Bool)

(assert (=> b!96667 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> b!96667 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (ite c!16117 (_values!2439 newMap!16) lt!47761))))))

(declare-fun e!63015 () Bool)

(assert (=> b!96667 (= e!63015 (= (apply!91 lt!48307 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!96668 () Bool)

(declare-fun e!63014 () Bool)

(assert (=> b!96668 (= e!63014 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96668 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!96669 () Bool)

(assert (=> b!96669 (= e!63013 (isEmpty!360 lt!48307))))

(declare-fun b!96670 () Bool)

(declare-fun e!63011 () ListLongMap!1493)

(declare-fun call!9794 () ListLongMap!1493)

(assert (=> b!96670 (= e!63011 call!9794)))

(declare-fun b!96671 () Bool)

(declare-fun res!48755 () Bool)

(declare-fun e!63010 () Bool)

(assert (=> b!96671 (=> (not res!48755) (not e!63010))))

(assert (=> b!96671 (= res!48755 (not (contains!783 lt!48307 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!96672 () Bool)

(declare-fun lt!48304 () Unit!2849)

(declare-fun lt!48309 () Unit!2849)

(assert (=> b!96672 (= lt!48304 lt!48309)))

(declare-fun lt!48306 () V!3137)

(declare-fun lt!48303 () (_ BitVec 64))

(declare-fun lt!48308 () ListLongMap!1493)

(declare-fun lt!48305 () (_ BitVec 64))

(assert (=> b!96672 (not (contains!783 (+!129 lt!48308 (tuple2!2287 lt!48305 lt!48306)) lt!48303))))

(assert (=> b!96672 (= lt!48309 (addStillNotContains!41 lt!48308 lt!48305 lt!48306 lt!48303))))

(assert (=> b!96672 (= lt!48303 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!96672 (= lt!48306 (get!1278 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!96672 (= lt!48305 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96672 (= lt!48308 call!9794)))

(assert (=> b!96672 (= e!63011 (+!129 call!9794 (tuple2!2287 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (get!1278 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96673 () Bool)

(declare-fun e!63012 () ListLongMap!1493)

(assert (=> b!96673 (= e!63012 (ListLongMap!1494 Nil!1555))))

(declare-fun b!96674 () Bool)

(declare-fun e!63016 () Bool)

(assert (=> b!96674 (= e!63010 e!63016)))

(declare-fun c!16342 () Bool)

(assert (=> b!96674 (= c!16342 e!63014)))

(declare-fun res!48753 () Bool)

(assert (=> b!96674 (=> (not res!48753) (not e!63014))))

(assert (=> b!96674 (= res!48753 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96675 () Bool)

(assert (=> b!96675 (= e!63016 e!63013)))

(declare-fun c!16341 () Bool)

(assert (=> b!96675 (= c!16341 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96676 () Bool)

(assert (=> b!96676 (= e!63016 e!63015)))

(assert (=> b!96676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun res!48756 () Bool)

(assert (=> b!96676 (= res!48756 (contains!783 lt!48307 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96676 (=> (not res!48756) (not e!63015))))

(declare-fun b!96677 () Bool)

(assert (=> b!96677 (= e!63012 e!63011)))

(declare-fun c!16340 () Bool)

(assert (=> b!96677 (= c!16340 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9791 () Bool)

(assert (=> bm!9791 (= call!9794 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2456 newMap!16)))))

(declare-fun d!25647 () Bool)

(assert (=> d!25647 e!63010))

(declare-fun res!48754 () Bool)

(assert (=> d!25647 (=> (not res!48754) (not e!63010))))

(assert (=> d!25647 (= res!48754 (not (contains!783 lt!48307 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25647 (= lt!48307 e!63012)))

(declare-fun c!16343 () Bool)

(assert (=> d!25647 (= c!16343 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25647 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25647 (= (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (ite c!16117 (_values!2439 newMap!16) lt!47761) (mask!6541 newMap!16) (ite c!16117 (ite c!16109 lt!47743 lt!47764) (extraKeys!2281 newMap!16)) (ite (and c!16117 c!16109) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2341 newMap!16)) (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48307)))

(assert (= (and d!25647 c!16343) b!96673))

(assert (= (and d!25647 (not c!16343)) b!96677))

(assert (= (and b!96677 c!16340) b!96672))

(assert (= (and b!96677 (not c!16340)) b!96670))

(assert (= (or b!96672 b!96670) bm!9791))

(assert (= (and d!25647 res!48754) b!96671))

(assert (= (and b!96671 res!48755) b!96674))

(assert (= (and b!96674 res!48753) b!96668))

(assert (= (and b!96674 c!16342) b!96676))

(assert (= (and b!96674 (not c!16342)) b!96675))

(assert (= (and b!96676 res!48756) b!96667))

(assert (= (and b!96675 c!16341) b!96666))

(assert (= (and b!96675 (not c!16341)) b!96669))

(declare-fun b_lambda!4279 () Bool)

(assert (=> (not b_lambda!4279) (not b!96667)))

(assert (=> b!96667 t!5484))

(declare-fun b_and!5917 () Bool)

(assert (= b_and!5913 (and (=> t!5484 result!3225) b_and!5917)))

(assert (=> b!96667 t!5486))

(declare-fun b_and!5919 () Bool)

(assert (= b_and!5915 (and (=> t!5486 result!3227) b_and!5919)))

(declare-fun b_lambda!4281 () Bool)

(assert (=> (not b_lambda!4281) (not b!96672)))

(assert (=> b!96672 t!5484))

(declare-fun b_and!5921 () Bool)

(assert (= b_and!5917 (and (=> t!5484 result!3225) b_and!5921)))

(assert (=> b!96672 t!5486))

(declare-fun b_and!5923 () Bool)

(assert (= b_and!5919 (and (=> t!5486 result!3227) b_and!5923)))

(declare-fun m!105181 () Bool)

(assert (=> d!25647 m!105181))

(assert (=> d!25647 m!103933))

(declare-fun m!105183 () Bool)

(assert (=> b!96669 m!105183))

(declare-fun m!105185 () Bool)

(assert (=> b!96671 m!105185))

(declare-fun m!105187 () Bool)

(assert (=> bm!9791 m!105187))

(assert (=> b!96667 m!104297))

(assert (=> b!96667 m!103949))

(assert (=> b!96667 m!104299))

(assert (=> b!96667 m!103949))

(assert (=> b!96667 m!103953))

(assert (=> b!96667 m!104297))

(assert (=> b!96667 m!103953))

(declare-fun m!105189 () Bool)

(assert (=> b!96667 m!105189))

(assert (=> b!96672 m!104297))

(assert (=> b!96672 m!103949))

(assert (=> b!96672 m!104299))

(assert (=> b!96672 m!103949))

(declare-fun m!105191 () Bool)

(assert (=> b!96672 m!105191))

(declare-fun m!105193 () Bool)

(assert (=> b!96672 m!105193))

(assert (=> b!96672 m!103953))

(assert (=> b!96672 m!105191))

(declare-fun m!105195 () Bool)

(assert (=> b!96672 m!105195))

(assert (=> b!96672 m!104297))

(declare-fun m!105197 () Bool)

(assert (=> b!96672 m!105197))

(assert (=> b!96668 m!103953))

(assert (=> b!96668 m!103953))

(assert (=> b!96668 m!103989))

(assert (=> b!96666 m!105187))

(assert (=> b!96676 m!103953))

(assert (=> b!96676 m!103953))

(declare-fun m!105199 () Bool)

(assert (=> b!96676 m!105199))

(assert (=> b!96677 m!103953))

(assert (=> b!96677 m!103953))

(assert (=> b!96677 m!103989))

(assert (=> b!96174 d!25647))

(declare-fun d!25649 () Bool)

(assert (=> d!25649 (= (map!1246 (_2!1155 lt!48003)) (getCurrentListMap!452 (_keys!4142 (_2!1155 lt!48003)) (_values!2439 (_2!1155 lt!48003)) (mask!6541 (_2!1155 lt!48003)) (extraKeys!2281 (_2!1155 lt!48003)) (zeroValue!2341 (_2!1155 lt!48003)) (minValue!2341 (_2!1155 lt!48003)) #b00000000000000000000000000000000 (defaultEntry!2456 (_2!1155 lt!48003))))))

(declare-fun bs!3989 () Bool)

(assert (= bs!3989 d!25649))

(declare-fun m!105201 () Bool)

(assert (=> bs!3989 m!105201))

(assert (=> b!96150 d!25649))

(declare-fun d!25651 () Bool)

(declare-fun e!63017 () Bool)

(assert (=> d!25651 e!63017))

(declare-fun res!48757 () Bool)

(assert (=> d!25651 (=> (not res!48757) (not e!63017))))

(declare-fun lt!48311 () ListLongMap!1493)

(assert (=> d!25651 (= res!48757 (contains!783 lt!48311 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48312 () List!1558)

(assert (=> d!25651 (= lt!48311 (ListLongMap!1494 lt!48312))))

(declare-fun lt!48313 () Unit!2849)

(declare-fun lt!48310 () Unit!2849)

(assert (=> d!25651 (= lt!48313 lt!48310)))

(assert (=> d!25651 (= (getValueByKey!150 lt!48312 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25651 (= lt!48310 (lemmaContainsTupThenGetReturnValue!66 lt!48312 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25651 (= lt!48312 (insertStrictlySorted!69 (toList!762 (map!1246 newMap!16)) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25651 (= (+!129 (map!1246 newMap!16) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48311)))

(declare-fun b!96678 () Bool)

(declare-fun res!48758 () Bool)

(assert (=> b!96678 (=> (not res!48758) (not e!63017))))

(assert (=> b!96678 (= res!48758 (= (getValueByKey!150 (toList!762 lt!48311) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96679 () Bool)

(assert (=> b!96679 (= e!63017 (contains!785 (toList!762 lt!48311) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25651 res!48757) b!96678))

(assert (= (and b!96678 res!48758) b!96679))

(declare-fun m!105203 () Bool)

(assert (=> d!25651 m!105203))

(declare-fun m!105205 () Bool)

(assert (=> d!25651 m!105205))

(declare-fun m!105207 () Bool)

(assert (=> d!25651 m!105207))

(declare-fun m!105209 () Bool)

(assert (=> d!25651 m!105209))

(declare-fun m!105211 () Bool)

(assert (=> b!96678 m!105211))

(declare-fun m!105213 () Bool)

(assert (=> b!96679 m!105213))

(assert (=> b!96150 d!25651))

(assert (=> b!96150 d!25263))

(declare-fun d!25653 () Bool)

(assert (=> d!25653 (= (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47663)) (v!2786 (getValueByKey!150 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47663)))))

(assert (=> d!25347 d!25653))

(declare-fun e!63019 () Option!156)

(declare-fun b!96682 () Bool)

(assert (=> b!96682 (= e!63019 (getValueByKey!150 (t!5472 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!47663))))

(declare-fun b!96683 () Bool)

(assert (=> b!96683 (= e!63019 None!154)))

(declare-fun d!25655 () Bool)

(declare-fun c!16344 () Bool)

(assert (=> d!25655 (= c!16344 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47663)))))

(declare-fun e!63018 () Option!156)

(assert (=> d!25655 (= (getValueByKey!150 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47663) e!63018)))

(declare-fun b!96680 () Bool)

(assert (=> b!96680 (= e!63018 (Some!155 (_2!1154 (h!2147 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(declare-fun b!96681 () Bool)

(assert (=> b!96681 (= e!63018 e!63019)))

(declare-fun c!16345 () Bool)

(assert (=> b!96681 (= c!16345 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (not (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47664 (tuple2!2287 lt!47669 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47663))))))

(assert (= (and d!25655 c!16344) b!96680))

(assert (= (and d!25655 (not c!16344)) b!96681))

(assert (= (and b!96681 c!16345) b!96682))

(assert (= (and b!96681 (not c!16345)) b!96683))

(declare-fun m!105215 () Bool)

(assert (=> b!96682 m!105215))

(assert (=> d!25347 d!25655))

(declare-fun d!25657 () Bool)

(declare-fun lt!48314 () Bool)

(assert (=> d!25657 (= lt!48314 (select (content!101 (toList!762 lt!47882)) (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!63020 () Bool)

(assert (=> d!25657 (= lt!48314 e!63020)))

(declare-fun res!48760 () Bool)

(assert (=> d!25657 (=> (not res!48760) (not e!63020))))

(assert (=> d!25657 (= res!48760 ((_ is Cons!1554) (toList!762 lt!47882)))))

(assert (=> d!25657 (= (contains!785 (toList!762 lt!47882) (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48314)))

(declare-fun b!96684 () Bool)

(declare-fun e!63021 () Bool)

(assert (=> b!96684 (= e!63020 e!63021)))

(declare-fun res!48759 () Bool)

(assert (=> b!96684 (=> res!48759 e!63021)))

(assert (=> b!96684 (= res!48759 (= (h!2147 (toList!762 lt!47882)) (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96685 () Bool)

(assert (=> b!96685 (= e!63021 (contains!785 (t!5472 (toList!762 lt!47882)) (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25657 res!48760) b!96684))

(assert (= (and b!96684 (not res!48759)) b!96685))

(declare-fun m!105217 () Bool)

(assert (=> d!25657 m!105217))

(declare-fun m!105219 () Bool)

(assert (=> d!25657 m!105219))

(declare-fun m!105221 () Bool)

(assert (=> b!96685 m!105221))

(assert (=> b!96061 d!25657))

(declare-fun d!25659 () Bool)

(assert (=> d!25659 (= (get!1279 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2779 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!95925 d!25659))

(declare-fun b!96688 () Bool)

(declare-fun e!63023 () Option!156)

(assert (=> b!96688 (= e!63023 (getValueByKey!150 (t!5472 (toList!762 lt!48079)) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96689 () Bool)

(assert (=> b!96689 (= e!63023 None!154)))

(declare-fun d!25661 () Bool)

(declare-fun c!16346 () Bool)

(assert (=> d!25661 (= c!16346 (and ((_ is Cons!1554) (toList!762 lt!48079)) (= (_1!1154 (h!2147 (toList!762 lt!48079))) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!63022 () Option!156)

(assert (=> d!25661 (= (getValueByKey!150 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!63022)))

(declare-fun b!96686 () Bool)

(assert (=> b!96686 (= e!63022 (Some!155 (_2!1154 (h!2147 (toList!762 lt!48079)))))))

(declare-fun b!96687 () Bool)

(assert (=> b!96687 (= e!63022 e!63023)))

(declare-fun c!16347 () Bool)

(assert (=> b!96687 (= c!16347 (and ((_ is Cons!1554) (toList!762 lt!48079)) (not (= (_1!1154 (h!2147 (toList!762 lt!48079))) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!25661 c!16346) b!96686))

(assert (= (and d!25661 (not c!16346)) b!96687))

(assert (= (and b!96687 c!16347) b!96688))

(assert (= (and b!96687 (not c!16347)) b!96689))

(declare-fun m!105223 () Bool)

(assert (=> b!96688 m!105223))

(assert (=> b!96253 d!25661))

(declare-fun b!96690 () Bool)

(declare-fun e!63024 () Bool)

(declare-fun call!9795 () Bool)

(assert (=> b!96690 (= e!63024 call!9795)))

(declare-fun b!96691 () Bool)

(declare-fun e!63025 () Bool)

(assert (=> b!96691 (= e!63025 call!9795)))

(declare-fun d!25663 () Bool)

(declare-fun res!48761 () Bool)

(declare-fun e!63026 () Bool)

(assert (=> d!25663 (=> res!48761 e!63026)))

(assert (=> d!25663 (= res!48761 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (=> d!25663 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4142 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762))) e!63026)))

(declare-fun b!96692 () Bool)

(assert (=> b!96692 (= e!63026 e!63024)))

(declare-fun c!16348 () Bool)

(assert (=> b!96692 (= c!16348 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun b!96693 () Bool)

(assert (=> b!96693 (= e!63024 e!63025)))

(declare-fun lt!48316 () (_ BitVec 64))

(assert (=> b!96693 (= lt!48316 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000))))

(declare-fun lt!48317 () Unit!2849)

(assert (=> b!96693 (= lt!48317 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4142 (_2!1155 lt!47762)) lt!48316 #b00000000000000000000000000000000))))

(assert (=> b!96693 (arrayContainsKey!0 (_keys!4142 (_2!1155 lt!47762)) lt!48316 #b00000000000000000000000000000000)))

(declare-fun lt!48315 () Unit!2849)

(assert (=> b!96693 (= lt!48315 lt!48317)))

(declare-fun res!48762 () Bool)

(assert (=> b!96693 (= res!48762 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000) (_keys!4142 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!96693 (=> (not res!48762) (not e!63025))))

(declare-fun bm!9792 () Bool)

(assert (=> bm!9792 (= call!9795 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4142 (_2!1155 lt!47762)) (mask!6541 (_2!1155 lt!47762))))))

(assert (= (and d!25663 (not res!48761)) b!96692))

(assert (= (and b!96692 c!16348) b!96693))

(assert (= (and b!96692 (not c!16348)) b!96690))

(assert (= (and b!96693 res!48762) b!96691))

(assert (= (or b!96691 b!96690) bm!9792))

(assert (=> b!96692 m!104601))

(assert (=> b!96692 m!104601))

(assert (=> b!96692 m!104637))

(assert (=> b!96693 m!104601))

(declare-fun m!105225 () Bool)

(assert (=> b!96693 m!105225))

(declare-fun m!105227 () Bool)

(assert (=> b!96693 m!105227))

(assert (=> b!96693 m!104601))

(declare-fun m!105229 () Bool)

(assert (=> b!96693 m!105229))

(declare-fun m!105231 () Bool)

(assert (=> bm!9792 m!105231))

(assert (=> b!95970 d!25663))

(assert (=> bm!9711 d!25501))

(declare-fun d!25665 () Bool)

(assert (=> d!25665 (= (content!100 Nil!1556) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!25287 d!25665))

(declare-fun d!25667 () Bool)

(declare-fun e!63027 () Bool)

(assert (=> d!25667 e!63027))

(declare-fun res!48763 () Bool)

(assert (=> d!25667 (=> res!48763 e!63027)))

(declare-fun lt!48320 () Bool)

(assert (=> d!25667 (= res!48763 (not lt!48320))))

(declare-fun lt!48321 () Bool)

(assert (=> d!25667 (= lt!48320 lt!48321)))

(declare-fun lt!48319 () Unit!2849)

(declare-fun e!63028 () Unit!2849)

(assert (=> d!25667 (= lt!48319 e!63028)))

(declare-fun c!16349 () Bool)

(assert (=> d!25667 (= c!16349 lt!48321)))

(assert (=> d!25667 (= lt!48321 (containsKey!153 (toList!762 lt!47789) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25667 (= (contains!783 lt!47789 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) lt!48320)))

(declare-fun b!96694 () Bool)

(declare-fun lt!48318 () Unit!2849)

(assert (=> b!96694 (= e!63028 lt!48318)))

(assert (=> b!96694 (= lt!48318 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47789) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96694 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96695 () Bool)

(declare-fun Unit!2889 () Unit!2849)

(assert (=> b!96695 (= e!63028 Unit!2889)))

(declare-fun b!96696 () Bool)

(assert (=> b!96696 (= e!63027 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25667 c!16349) b!96694))

(assert (= (and d!25667 (not c!16349)) b!96695))

(assert (= (and d!25667 (not res!48763)) b!96696))

(assert (=> d!25667 m!103953))

(declare-fun m!105233 () Bool)

(assert (=> d!25667 m!105233))

(assert (=> b!96694 m!103953))

(declare-fun m!105235 () Bool)

(assert (=> b!96694 m!105235))

(assert (=> b!96694 m!103953))

(assert (=> b!96694 m!105011))

(assert (=> b!96694 m!105011))

(declare-fun m!105237 () Bool)

(assert (=> b!96694 m!105237))

(assert (=> b!96696 m!103953))

(assert (=> b!96696 m!105011))

(assert (=> b!96696 m!105011))

(assert (=> b!96696 m!105237))

(assert (=> b!95930 d!25667))

(declare-fun d!25669 () Bool)

(declare-fun e!63029 () Bool)

(assert (=> d!25669 e!63029))

(declare-fun res!48764 () Bool)

(assert (=> d!25669 (=> res!48764 e!63029)))

(declare-fun lt!48324 () Bool)

(assert (=> d!25669 (= res!48764 (not lt!48324))))

(declare-fun lt!48325 () Bool)

(assert (=> d!25669 (= lt!48324 lt!48325)))

(declare-fun lt!48323 () Unit!2849)

(declare-fun e!63030 () Unit!2849)

(assert (=> d!25669 (= lt!48323 e!63030)))

(declare-fun c!16350 () Bool)

(assert (=> d!25669 (= c!16350 lt!48325)))

(assert (=> d!25669 (= lt!48325 (containsKey!153 (toList!762 lt!47818) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25669 (= (contains!783 lt!47818 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) lt!48324)))

(declare-fun b!96697 () Bool)

(declare-fun lt!48322 () Unit!2849)

(assert (=> b!96697 (= e!63030 lt!48322)))

(assert (=> b!96697 (= lt!48322 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47818) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96697 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96698 () Bool)

(declare-fun Unit!2890 () Unit!2849)

(assert (=> b!96698 (= e!63030 Unit!2890)))

(declare-fun b!96699 () Bool)

(assert (=> b!96699 (= e!63029 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25669 c!16350) b!96697))

(assert (= (and d!25669 (not c!16350)) b!96698))

(assert (= (and d!25669 (not res!48764)) b!96699))

(assert (=> d!25669 m!103953))

(declare-fun m!105239 () Bool)

(assert (=> d!25669 m!105239))

(assert (=> b!96697 m!103953))

(declare-fun m!105241 () Bool)

(assert (=> b!96697 m!105241))

(assert (=> b!96697 m!103953))

(assert (=> b!96697 m!105019))

(assert (=> b!96697 m!105019))

(declare-fun m!105243 () Bool)

(assert (=> b!96697 m!105243))

(assert (=> b!96699 m!103953))

(assert (=> b!96699 m!105019))

(assert (=> b!96699 m!105019))

(assert (=> b!96699 m!105243))

(assert (=> b!95975 d!25669))

(declare-fun d!25671 () Bool)

(declare-fun e!63031 () Bool)

(assert (=> d!25671 e!63031))

(declare-fun res!48765 () Bool)

(assert (=> d!25671 (=> res!48765 e!63031)))

(declare-fun lt!48328 () Bool)

(assert (=> d!25671 (= res!48765 (not lt!48328))))

(declare-fun lt!48329 () Bool)

(assert (=> d!25671 (= lt!48328 lt!48329)))

(declare-fun lt!48327 () Unit!2849)

(declare-fun e!63032 () Unit!2849)

(assert (=> d!25671 (= lt!48327 e!63032)))

(declare-fun c!16351 () Bool)

(assert (=> d!25671 (= c!16351 lt!48329)))

(assert (=> d!25671 (= lt!48329 (containsKey!153 (toList!762 lt!47789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25671 (= (contains!783 lt!47789 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48328)))

(declare-fun b!96700 () Bool)

(declare-fun lt!48326 () Unit!2849)

(assert (=> b!96700 (= e!63032 lt!48326)))

(assert (=> b!96700 (= lt!48326 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96700 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96701 () Bool)

(declare-fun Unit!2891 () Unit!2849)

(assert (=> b!96701 (= e!63032 Unit!2891)))

(declare-fun b!96702 () Bool)

(assert (=> b!96702 (= e!63031 (isDefined!102 (getValueByKey!150 (toList!762 lt!47789) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25671 c!16351) b!96700))

(assert (= (and d!25671 (not c!16351)) b!96701))

(assert (= (and d!25671 (not res!48765)) b!96702))

(declare-fun m!105245 () Bool)

(assert (=> d!25671 m!105245))

(declare-fun m!105247 () Bool)

(assert (=> b!96700 m!105247))

(assert (=> b!96700 m!104585))

(assert (=> b!96700 m!104585))

(declare-fun m!105249 () Bool)

(assert (=> b!96700 m!105249))

(assert (=> b!96702 m!104585))

(assert (=> b!96702 m!104585))

(assert (=> b!96702 m!105249))

(assert (=> bm!9695 d!25671))

(declare-fun d!25673 () Bool)

(assert (=> d!25673 (isDefined!102 (getValueByKey!150 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(declare-fun lt!48330 () Unit!2849)

(assert (=> d!25673 (= lt!48330 (choose!584 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(declare-fun e!63033 () Bool)

(assert (=> d!25673 e!63033))

(declare-fun res!48766 () Bool)

(assert (=> d!25673 (=> (not res!48766) (not e!63033))))

(assert (=> d!25673 (= res!48766 (isStrictlySorted!290 (toList!762 e!62523)))))

(assert (=> d!25673 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))) lt!48330)))

(declare-fun b!96703 () Bool)

(assert (=> b!96703 (= e!63033 (containsKey!153 (toList!762 e!62523) (ite c!16114 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(assert (= (and d!25673 res!48766) b!96703))

(assert (=> d!25673 m!104429))

(assert (=> d!25673 m!104429))

(assert (=> d!25673 m!104431))

(declare-fun m!105251 () Bool)

(assert (=> d!25673 m!105251))

(declare-fun m!105253 () Bool)

(assert (=> d!25673 m!105253))

(assert (=> b!96703 m!104425))

(assert (=> b!96241 d!25673))

(assert (=> b!96241 d!25445))

(assert (=> b!96241 d!25447))

(declare-fun d!25675 () Bool)

(assert (=> d!25675 (isDefined!102 (getValueByKey!150 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!48331 () Unit!2849)

(assert (=> d!25675 (= lt!48331 (choose!584 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63034 () Bool)

(assert (=> d!25675 e!63034))

(declare-fun res!48767 () Bool)

(assert (=> d!25675 (=> (not res!48767) (not e!63034))))

(assert (=> d!25675 (= res!48767 (isStrictlySorted!290 (toList!762 lt!47659)))))

(assert (=> d!25675 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000) lt!48331)))

(declare-fun b!96704 () Bool)

(assert (=> b!96704 (= e!63034 (containsKey!153 (toList!762 lt!47659) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25675 res!48767) b!96704))

(assert (=> d!25675 m!104347))

(assert (=> d!25675 m!104347))

(assert (=> d!25675 m!104437))

(declare-fun m!105255 () Bool)

(assert (=> d!25675 m!105255))

(assert (=> d!25675 m!104833))

(assert (=> b!96704 m!104433))

(assert (=> b!96244 d!25675))

(assert (=> b!96244 d!25449))

(assert (=> b!96244 d!25451))

(assert (=> b!96249 d!25539))

(assert (=> b!96249 d!25541))

(assert (=> b!96252 d!25545))

(assert (=> b!96252 d!25477))

(declare-fun d!25677 () Bool)

(declare-fun res!48768 () Bool)

(declare-fun e!63035 () Bool)

(assert (=> d!25677 (=> res!48768 e!63035)))

(assert (=> d!25677 (= res!48768 (and ((_ is Cons!1554) (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (= (_1!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (=> d!25677 (= (containsKey!153 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!63035)))

(declare-fun b!96705 () Bool)

(declare-fun e!63036 () Bool)

(assert (=> b!96705 (= e!63035 e!63036)))

(declare-fun res!48769 () Bool)

(assert (=> b!96705 (=> (not res!48769) (not e!63036))))

(assert (=> b!96705 (= res!48769 (and (or (not ((_ is Cons!1554) (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (bvsle (_1!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) ((_ is Cons!1554) (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (bvslt (_1!1154 (h!2147 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun b!96706 () Bool)

(assert (=> b!96706 (= e!63036 (containsKey!153 (t!5472 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25677 (not res!48768)) b!96705))

(assert (= (and b!96705 res!48769) b!96706))

(assert (=> b!96706 m!103635))

(declare-fun m!105257 () Bool)

(assert (=> b!96706 m!105257))

(assert (=> d!25317 d!25677))

(declare-fun d!25679 () Bool)

(assert (=> d!25679 (= (get!1280 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95926 d!25679))

(declare-fun d!25681 () Bool)

(declare-fun e!63037 () Bool)

(assert (=> d!25681 e!63037))

(declare-fun res!48770 () Bool)

(assert (=> d!25681 (=> res!48770 e!63037)))

(declare-fun lt!48334 () Bool)

(assert (=> d!25681 (= res!48770 (not lt!48334))))

(declare-fun lt!48335 () Bool)

(assert (=> d!25681 (= lt!48334 lt!48335)))

(declare-fun lt!48333 () Unit!2849)

(declare-fun e!63038 () Unit!2849)

(assert (=> d!25681 (= lt!48333 e!63038)))

(declare-fun c!16352 () Bool)

(assert (=> d!25681 (= c!16352 lt!48335)))

(assert (=> d!25681 (= lt!48335 (containsKey!153 (toList!762 lt!47911) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25681 (= (contains!783 lt!47911 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48334)))

(declare-fun b!96707 () Bool)

(declare-fun lt!48332 () Unit!2849)

(assert (=> b!96707 (= e!63038 lt!48332)))

(assert (=> b!96707 (= lt!48332 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47911) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96707 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96708 () Bool)

(declare-fun Unit!2892 () Unit!2849)

(assert (=> b!96708 (= e!63038 Unit!2892)))

(declare-fun b!96709 () Bool)

(assert (=> b!96709 (= e!63037 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25681 c!16352) b!96707))

(assert (= (and d!25681 (not c!16352)) b!96708))

(assert (= (and d!25681 (not res!48770)) b!96709))

(declare-fun m!105259 () Bool)

(assert (=> d!25681 m!105259))

(declare-fun m!105261 () Bool)

(assert (=> b!96707 m!105261))

(declare-fun m!105263 () Bool)

(assert (=> b!96707 m!105263))

(assert (=> b!96707 m!105263))

(declare-fun m!105265 () Bool)

(assert (=> b!96707 m!105265))

(assert (=> b!96709 m!105263))

(assert (=> b!96709 m!105263))

(assert (=> b!96709 m!105265))

(assert (=> b!96095 d!25681))

(declare-fun d!25683 () Bool)

(assert (=> d!25683 (= (get!1281 (getValueByKey!150 (toList!762 lt!47671) lt!47658)) (v!2786 (getValueByKey!150 (toList!762 lt!47671) lt!47658)))))

(assert (=> d!25339 d!25683))

(declare-fun b!96712 () Bool)

(declare-fun e!63040 () Option!156)

(assert (=> b!96712 (= e!63040 (getValueByKey!150 (t!5472 (toList!762 lt!47671)) lt!47658))))

(declare-fun b!96713 () Bool)

(assert (=> b!96713 (= e!63040 None!154)))

(declare-fun d!25685 () Bool)

(declare-fun c!16353 () Bool)

(assert (=> d!25685 (= c!16353 (and ((_ is Cons!1554) (toList!762 lt!47671)) (= (_1!1154 (h!2147 (toList!762 lt!47671))) lt!47658)))))

(declare-fun e!63039 () Option!156)

(assert (=> d!25685 (= (getValueByKey!150 (toList!762 lt!47671) lt!47658) e!63039)))

(declare-fun b!96710 () Bool)

(assert (=> b!96710 (= e!63039 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47671)))))))

(declare-fun b!96711 () Bool)

(assert (=> b!96711 (= e!63039 e!63040)))

(declare-fun c!16354 () Bool)

(assert (=> b!96711 (= c!16354 (and ((_ is Cons!1554) (toList!762 lt!47671)) (not (= (_1!1154 (h!2147 (toList!762 lt!47671))) lt!47658))))))

(assert (= (and d!25685 c!16353) b!96710))

(assert (= (and d!25685 (not c!16353)) b!96711))

(assert (= (and b!96711 c!16354) b!96712))

(assert (= (and b!96711 (not c!16354)) b!96713))

(declare-fun m!105267 () Bool)

(assert (=> b!96712 m!105267))

(assert (=> d!25339 d!25685))

(declare-fun d!25687 () Bool)

(declare-fun res!48771 () Bool)

(declare-fun e!63041 () Bool)

(assert (=> d!25687 (=> res!48771 e!63041)))

(assert (=> d!25687 (= res!48771 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47660)))))

(assert (=> d!25687 (= (containsKey!153 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660) e!63041)))

(declare-fun b!96714 () Bool)

(declare-fun e!63042 () Bool)

(assert (=> b!96714 (= e!63041 e!63042)))

(declare-fun res!48772 () Bool)

(assert (=> b!96714 (=> (not res!48772) (not e!63042))))

(assert (=> b!96714 (= res!48772 (and (or (not ((_ is Cons!1554) (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) (bvsle (_1!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47660)) ((_ is Cons!1554) (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (bvslt (_1!1154 (h!2147 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47660)))))

(declare-fun b!96715 () Bool)

(assert (=> b!96715 (= e!63042 (containsKey!153 (t!5472 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!47660))))

(assert (= (and d!25687 (not res!48771)) b!96714))

(assert (= (and b!96714 res!48772) b!96715))

(declare-fun m!105269 () Bool)

(assert (=> b!96715 m!105269))

(assert (=> d!25337 d!25687))

(assert (=> b!95956 d!25529))

(assert (=> b!95956 d!25531))

(declare-fun d!25689 () Bool)

(assert (=> d!25689 (= (apply!91 lt!48018 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!48018) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3990 () Bool)

(assert (= bs!3990 d!25689))

(assert (=> bs!3990 m!104843))

(assert (=> bs!3990 m!104843))

(declare-fun m!105271 () Bool)

(assert (=> bs!3990 m!105271))

(assert (=> b!96167 d!25689))

(declare-fun d!25691 () Bool)

(assert (=> d!25691 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))

(assert (=> d!25691 true))

(declare-fun _$16!114 () Unit!2849)

(assert (=> d!25691 (= (choose!582 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (defaultEntry!2456 newMap!16)) _$16!114)))

(declare-fun bs!3991 () Bool)

(assert (= bs!3991 d!25691))

(assert (=> bs!3991 m!104075))

(assert (=> bs!3991 m!103877))

(assert (=> bs!3991 m!104075))

(assert (=> bs!3991 m!103877))

(assert (=> bs!3991 m!104077))

(assert (=> d!25313 d!25691))

(assert (=> d!25313 d!25421))

(declare-fun lt!48336 () Bool)

(declare-fun d!25693 () Bool)

(assert (=> d!25693 (= lt!48336 (select (content!101 (toList!762 lt!48055)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!63043 () Bool)

(assert (=> d!25693 (= lt!48336 e!63043)))

(declare-fun res!48774 () Bool)

(assert (=> d!25693 (=> (not res!48774) (not e!63043))))

(assert (=> d!25693 (= res!48774 ((_ is Cons!1554) (toList!762 lt!48055)))))

(assert (=> d!25693 (= (contains!785 (toList!762 lt!48055) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48336)))

(declare-fun b!96716 () Bool)

(declare-fun e!63044 () Bool)

(assert (=> b!96716 (= e!63043 e!63044)))

(declare-fun res!48773 () Bool)

(assert (=> b!96716 (=> res!48773 e!63044)))

(assert (=> b!96716 (= res!48773 (= (h!2147 (toList!762 lt!48055)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!96717 () Bool)

(assert (=> b!96717 (= e!63044 (contains!785 (t!5472 (toList!762 lt!48055)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25693 res!48774) b!96716))

(assert (= (and b!96716 (not res!48773)) b!96717))

(declare-fun m!105273 () Bool)

(assert (=> d!25693 m!105273))

(declare-fun m!105275 () Bool)

(assert (=> d!25693 m!105275))

(declare-fun m!105277 () Bool)

(assert (=> b!96717 m!105277))

(assert (=> b!96230 d!25693))

(declare-fun d!25695 () Bool)

(declare-fun e!63045 () Bool)

(assert (=> d!25695 e!63045))

(declare-fun res!48775 () Bool)

(assert (=> d!25695 (=> res!48775 e!63045)))

(declare-fun lt!48339 () Bool)

(assert (=> d!25695 (= res!48775 (not lt!48339))))

(declare-fun lt!48340 () Bool)

(assert (=> d!25695 (= lt!48339 lt!48340)))

(declare-fun lt!48338 () Unit!2849)

(declare-fun e!63046 () Unit!2849)

(assert (=> d!25695 (= lt!48338 e!63046)))

(declare-fun c!16355 () Bool)

(assert (=> d!25695 (= c!16355 lt!48340)))

(assert (=> d!25695 (= lt!48340 (containsKey!153 (toList!762 lt!47818) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25695 (= (contains!783 lt!47818 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48339)))

(declare-fun b!96718 () Bool)

(declare-fun lt!48337 () Unit!2849)

(assert (=> b!96718 (= e!63046 lt!48337)))

(assert (=> b!96718 (= lt!48337 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47818) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96718 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96719 () Bool)

(declare-fun Unit!2893 () Unit!2849)

(assert (=> b!96719 (= e!63046 Unit!2893)))

(declare-fun b!96720 () Bool)

(assert (=> b!96720 (= e!63045 (isDefined!102 (getValueByKey!150 (toList!762 lt!47818) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25695 c!16355) b!96718))

(assert (= (and d!25695 (not c!16355)) b!96719))

(assert (= (and d!25695 (not res!48775)) b!96720))

(declare-fun m!105279 () Bool)

(assert (=> d!25695 m!105279))

(declare-fun m!105281 () Bool)

(assert (=> b!96718 m!105281))

(assert (=> b!96718 m!104589))

(assert (=> b!96718 m!104589))

(declare-fun m!105283 () Bool)

(assert (=> b!96718 m!105283))

(assert (=> b!96720 m!104589))

(assert (=> b!96720 m!104589))

(assert (=> b!96720 m!105283))

(assert (=> bm!9705 d!25695))

(declare-fun d!25697 () Bool)

(declare-fun res!48776 () Bool)

(declare-fun e!63049 () Bool)

(assert (=> d!25697 (=> res!48776 e!63049)))

(assert (=> d!25697 (= res!48776 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(assert (=> d!25697 (= (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000 Nil!1556) e!63049)))

(declare-fun b!96721 () Bool)

(declare-fun e!63050 () Bool)

(declare-fun call!9796 () Bool)

(assert (=> b!96721 (= e!63050 call!9796)))

(declare-fun b!96722 () Bool)

(declare-fun e!63047 () Bool)

(assert (=> b!96722 (= e!63049 e!63047)))

(declare-fun res!48778 () Bool)

(assert (=> b!96722 (=> (not res!48778) (not e!63047))))

(declare-fun e!63048 () Bool)

(assert (=> b!96722 (= res!48778 (not e!63048))))

(declare-fun res!48777 () Bool)

(assert (=> b!96722 (=> (not res!48777) (not e!63048))))

(assert (=> b!96722 (= res!48777 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!96723 () Bool)

(assert (=> b!96723 (= e!63050 call!9796)))

(declare-fun bm!9793 () Bool)

(declare-fun c!16356 () Bool)

(assert (=> bm!9793 (= call!9796 (arrayNoDuplicates!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16356 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000) Nil!1556) Nil!1556)))))

(declare-fun b!96724 () Bool)

(assert (=> b!96724 (= e!63047 e!63050)))

(assert (=> b!96724 (= c!16356 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!96725 () Bool)

(assert (=> b!96725 (= e!63048 (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!25697 (not res!48776)) b!96722))

(assert (= (and b!96722 res!48777) b!96725))

(assert (= (and b!96722 res!48778) b!96724))

(assert (= (and b!96724 c!16356) b!96721))

(assert (= (and b!96724 (not c!16356)) b!96723))

(assert (= (or b!96721 b!96723) bm!9793))

(assert (=> b!96722 m!104543))

(assert (=> b!96722 m!104543))

(assert (=> b!96722 m!104545))

(assert (=> bm!9793 m!104543))

(declare-fun m!105285 () Bool)

(assert (=> bm!9793 m!105285))

(assert (=> b!96724 m!104543))

(assert (=> b!96724 m!104543))

(assert (=> b!96724 m!104545))

(assert (=> b!96725 m!104543))

(assert (=> b!96725 m!104543))

(declare-fun m!105287 () Bool)

(assert (=> b!96725 m!105287))

(assert (=> b!96233 d!25697))

(declare-fun d!25699 () Bool)

(declare-fun res!48779 () Bool)

(declare-fun e!63053 () Bool)

(assert (=> d!25699 (=> res!48779 e!63053)))

(assert (=> d!25699 (= res!48779 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25699 (= (arrayNoDuplicates!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16211 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) Nil!1556) Nil!1556)) e!63053)))

(declare-fun b!96726 () Bool)

(declare-fun e!63054 () Bool)

(declare-fun call!9797 () Bool)

(assert (=> b!96726 (= e!63054 call!9797)))

(declare-fun b!96727 () Bool)

(declare-fun e!63051 () Bool)

(assert (=> b!96727 (= e!63053 e!63051)))

(declare-fun res!48781 () Bool)

(assert (=> b!96727 (=> (not res!48781) (not e!63051))))

(declare-fun e!63052 () Bool)

(assert (=> b!96727 (= res!48781 (not e!63052))))

(declare-fun res!48780 () Bool)

(assert (=> b!96727 (=> (not res!48780) (not e!63052))))

(assert (=> b!96727 (= res!48780 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!96728 () Bool)

(assert (=> b!96728 (= e!63054 call!9797)))

(declare-fun bm!9794 () Bool)

(declare-fun c!16357 () Bool)

(assert (=> bm!9794 (= call!9797 (arrayNoDuplicates!0 (_keys!4142 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!16357 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!16211 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) Nil!1556) Nil!1556)) (ite c!16211 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) Nil!1556) Nil!1556))))))

(declare-fun b!96729 () Bool)

(assert (=> b!96729 (= e!63051 e!63054)))

(assert (=> b!96729 (= c!16357 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!96730 () Bool)

(assert (=> b!96730 (= e!63052 (contains!784 (ite c!16211 (Cons!1555 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) Nil!1556) Nil!1556) (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!25699 (not res!48779)) b!96727))

(assert (= (and b!96727 res!48780) b!96730))

(assert (= (and b!96727 res!48781) b!96729))

(assert (= (and b!96729 c!16357) b!96726))

(assert (= (and b!96729 (not c!16357)) b!96728))

(assert (= (or b!96726 b!96728) bm!9794))

(assert (=> b!96727 m!104915))

(assert (=> b!96727 m!104915))

(assert (=> b!96727 m!104917))

(assert (=> bm!9794 m!104915))

(declare-fun m!105289 () Bool)

(assert (=> bm!9794 m!105289))

(assert (=> b!96729 m!104915))

(assert (=> b!96729 m!104915))

(assert (=> b!96729 m!104917))

(assert (=> b!96730 m!104915))

(assert (=> b!96730 m!104915))

(declare-fun m!105291 () Bool)

(assert (=> b!96730 m!105291))

(assert (=> bm!9737 d!25699))

(declare-fun d!25701 () Bool)

(assert (=> d!25701 (arrayContainsKey!0 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000)))

(declare-fun lt!48343 () Unit!2849)

(declare-fun choose!13 (array!4197 (_ BitVec 64) (_ BitVec 32)) Unit!2849)

(assert (=> d!25701 (= lt!48343 (choose!13 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000))))

(assert (=> d!25701 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!25701 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000) lt!48343)))

(declare-fun bs!3992 () Bool)

(assert (= bs!3992 d!25701))

(assert (=> bs!3992 m!104103))

(declare-fun m!105293 () Bool)

(assert (=> bs!3992 m!105293))

(assert (=> b!96028 d!25701))

(declare-fun d!25703 () Bool)

(declare-fun res!48782 () Bool)

(declare-fun e!63055 () Bool)

(assert (=> d!25703 (=> res!48782 e!63055)))

(assert (=> d!25703 (= res!48782 (= (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) lt!47855))))

(assert (=> d!25703 (= (arrayContainsKey!0 (_keys!4142 newMap!16) lt!47855 #b00000000000000000000000000000000) e!63055)))

(declare-fun b!96731 () Bool)

(declare-fun e!63056 () Bool)

(assert (=> b!96731 (= e!63055 e!63056)))

(declare-fun res!48783 () Bool)

(assert (=> b!96731 (=> (not res!48783) (not e!63056))))

(assert (=> b!96731 (= res!48783 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96732 () Bool)

(assert (=> b!96732 (= e!63056 (arrayContainsKey!0 (_keys!4142 newMap!16) lt!47855 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25703 (not res!48782)) b!96731))

(assert (= (and b!96731 res!48783) b!96732))

(assert (=> d!25703 m!103953))

(declare-fun m!105295 () Bool)

(assert (=> b!96732 m!105295))

(assert (=> b!96028 d!25703))

(declare-fun b!96733 () Bool)

(declare-fun e!63058 () SeekEntryResult!246)

(declare-fun lt!48346 () SeekEntryResult!246)

(assert (=> b!96733 (= e!63058 (MissingZero!246 (index!3128 lt!48346)))))

(declare-fun b!96734 () Bool)

(declare-fun c!16358 () Bool)

(declare-fun lt!48344 () (_ BitVec 64))

(assert (=> b!96734 (= c!16358 (= lt!48344 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63057 () SeekEntryResult!246)

(assert (=> b!96734 (= e!63057 e!63058)))

(declare-fun b!96735 () Bool)

(declare-fun e!63059 () SeekEntryResult!246)

(assert (=> b!96735 (= e!63059 e!63057)))

(assert (=> b!96735 (= lt!48344 (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!48346)))))

(declare-fun c!16359 () Bool)

(assert (=> b!96735 (= c!16359 (= lt!48344 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!25705 () Bool)

(declare-fun lt!48345 () SeekEntryResult!246)

(assert (=> d!25705 (and (or ((_ is Undefined!246) lt!48345) (not ((_ is Found!246) lt!48345)) (and (bvsge (index!3127 lt!48345) #b00000000000000000000000000000000) (bvslt (index!3127 lt!48345) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!48345) ((_ is Found!246) lt!48345) (not ((_ is MissingZero!246) lt!48345)) (and (bvsge (index!3126 lt!48345) #b00000000000000000000000000000000) (bvslt (index!3126 lt!48345) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!48345) ((_ is Found!246) lt!48345) ((_ is MissingZero!246) lt!48345) (not ((_ is MissingVacant!246) lt!48345)) (and (bvsge (index!3129 lt!48345) #b00000000000000000000000000000000) (bvslt (index!3129 lt!48345) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!48345) (ite ((_ is Found!246) lt!48345) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!48345)) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!246) lt!48345) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3126 lt!48345)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!48345) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!48345)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25705 (= lt!48345 e!63059)))

(declare-fun c!16360 () Bool)

(assert (=> d!25705 (= c!16360 (and ((_ is Intermediate!246) lt!48346) (undefined!1058 lt!48346)))))

(assert (=> d!25705 (= lt!48346 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (mask!6541 newMap!16)) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (=> d!25705 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25705 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (_keys!4142 newMap!16) (mask!6541 newMap!16)) lt!48345)))

(declare-fun b!96736 () Bool)

(assert (=> b!96736 (= e!63057 (Found!246 (index!3128 lt!48346)))))

(declare-fun b!96737 () Bool)

(assert (=> b!96737 (= e!63059 Undefined!246)))

(declare-fun b!96738 () Bool)

(assert (=> b!96738 (= e!63058 (seekKeyOrZeroReturnVacant!0 (x!12794 lt!48346) (index!3128 lt!48346) (index!3128 lt!48346) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (= (and d!25705 c!16360) b!96737))

(assert (= (and d!25705 (not c!16360)) b!96735))

(assert (= (and b!96735 c!16359) b!96736))

(assert (= (and b!96735 (not c!16359)) b!96734))

(assert (= (and b!96734 c!16358) b!96733))

(assert (= (and b!96734 (not c!16358)) b!96738))

(declare-fun m!105297 () Bool)

(assert (=> b!96735 m!105297))

(assert (=> d!25705 m!103953))

(declare-fun m!105299 () Bool)

(assert (=> d!25705 m!105299))

(assert (=> d!25705 m!103933))

(assert (=> d!25705 m!105299))

(assert (=> d!25705 m!103953))

(declare-fun m!105301 () Bool)

(assert (=> d!25705 m!105301))

(declare-fun m!105303 () Bool)

(assert (=> d!25705 m!105303))

(declare-fun m!105305 () Bool)

(assert (=> d!25705 m!105305))

(declare-fun m!105307 () Bool)

(assert (=> d!25705 m!105307))

(assert (=> b!96738 m!103953))

(declare-fun m!105309 () Bool)

(assert (=> b!96738 m!105309))

(assert (=> b!96028 d!25705))

(declare-fun d!25707 () Bool)

(declare-fun res!48784 () Bool)

(declare-fun e!63060 () Bool)

(assert (=> d!25707 (=> res!48784 e!63060)))

(assert (=> d!25707 (= res!48784 (= (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25707 (= (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!63060)))

(declare-fun b!96739 () Bool)

(declare-fun e!63061 () Bool)

(assert (=> b!96739 (= e!63060 e!63061)))

(declare-fun res!48785 () Bool)

(assert (=> b!96739 (=> (not res!48785) (not e!63061))))

(assert (=> b!96739 (= res!48785 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96740 () Bool)

(assert (=> b!96740 (= e!63061 (arrayContainsKey!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25707 (not res!48784)) b!96739))

(assert (= (and b!96739 res!48785) b!96740))

(assert (=> d!25707 m!104915))

(assert (=> b!96740 m!103635))

(declare-fun m!105311 () Bool)

(assert (=> b!96740 m!105311))

(assert (=> b!96030 d!25707))

(declare-fun d!25709 () Bool)

(declare-fun e!63062 () Bool)

(assert (=> d!25709 e!63062))

(declare-fun res!48786 () Bool)

(assert (=> d!25709 (=> res!48786 e!63062)))

(declare-fun lt!48349 () Bool)

(assert (=> d!25709 (= res!48786 (not lt!48349))))

(declare-fun lt!48350 () Bool)

(assert (=> d!25709 (= lt!48349 lt!48350)))

(declare-fun lt!48348 () Unit!2849)

(declare-fun e!63063 () Unit!2849)

(assert (=> d!25709 (= lt!48348 e!63063)))

(declare-fun c!16361 () Bool)

(assert (=> d!25709 (= c!16361 lt!48350)))

(assert (=> d!25709 (= lt!48350 (containsKey!153 (toList!762 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(assert (=> d!25709 (= (contains!783 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))) lt!48349)))

(declare-fun b!96741 () Bool)

(declare-fun lt!48347 () Unit!2849)

(assert (=> b!96741 (= e!63063 lt!48347)))

(assert (=> b!96741 (= lt!48347 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(assert (=> b!96741 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(declare-fun b!96742 () Bool)

(declare-fun Unit!2894 () Unit!2849)

(assert (=> b!96742 (= e!63063 Unit!2894)))

(declare-fun b!96743 () Bool)

(assert (=> b!96743 (= e!63062 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))))

(assert (= (and d!25709 c!16361) b!96741))

(assert (= (and d!25709 (not c!16361)) b!96742))

(assert (= (and d!25709 (not res!48786)) b!96743))

(assert (=> d!25709 m!104245))

(declare-fun m!105313 () Bool)

(assert (=> d!25709 m!105313))

(assert (=> b!96741 m!104245))

(declare-fun m!105315 () Bool)

(assert (=> b!96741 m!105315))

(assert (=> b!96741 m!104245))

(declare-fun m!105317 () Bool)

(assert (=> b!96741 m!105317))

(assert (=> b!96741 m!105317))

(declare-fun m!105319 () Bool)

(assert (=> b!96741 m!105319))

(assert (=> b!96743 m!104245))

(assert (=> b!96743 m!105317))

(assert (=> b!96743 m!105317))

(assert (=> b!96743 m!105319))

(assert (=> d!25369 d!25709))

(declare-fun d!25711 () Bool)

(declare-fun res!48787 () Bool)

(declare-fun e!63066 () Bool)

(assert (=> d!25711 (=> res!48787 e!63066)))

(assert (=> d!25711 (= res!48787 (bvsge lt!48008 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(assert (=> d!25711 (= (arrayNoDuplicates!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) lt!48008 lt!48001) e!63066)))

(declare-fun b!96744 () Bool)

(declare-fun e!63067 () Bool)

(declare-fun call!9798 () Bool)

(assert (=> b!96744 (= e!63067 call!9798)))

(declare-fun b!96745 () Bool)

(declare-fun e!63064 () Bool)

(assert (=> b!96745 (= e!63066 e!63064)))

(declare-fun res!48789 () Bool)

(assert (=> b!96745 (=> (not res!48789) (not e!63064))))

(declare-fun e!63065 () Bool)

(assert (=> b!96745 (= res!48789 (not e!63065))))

(declare-fun res!48788 () Bool)

(assert (=> b!96745 (=> (not res!48788) (not e!63065))))

(assert (=> b!96745 (= res!48788 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) lt!48008)))))

(declare-fun b!96746 () Bool)

(assert (=> b!96746 (= e!63067 call!9798)))

(declare-fun c!16362 () Bool)

(declare-fun bm!9795 () Bool)

(assert (=> bm!9795 (= call!9798 (arrayNoDuplicates!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (bvadd lt!48008 #b00000000000000000000000000000001) (ite c!16362 (Cons!1555 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) lt!48008) lt!48001) lt!48001)))))

(declare-fun b!96747 () Bool)

(assert (=> b!96747 (= e!63064 e!63067)))

(assert (=> b!96747 (= c!16362 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) lt!48008)))))

(declare-fun b!96748 () Bool)

(assert (=> b!96748 (= e!63065 (contains!784 lt!48001 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) lt!48008)))))

(assert (= (and d!25711 (not res!48787)) b!96745))

(assert (= (and b!96745 res!48788) b!96748))

(assert (= (and b!96745 res!48789) b!96747))

(assert (= (and b!96747 c!16362) b!96744))

(assert (= (and b!96747 (not c!16362)) b!96746))

(assert (= (or b!96744 b!96746) bm!9795))

(declare-fun m!105321 () Bool)

(assert (=> b!96745 m!105321))

(assert (=> b!96745 m!105321))

(declare-fun m!105323 () Bool)

(assert (=> b!96745 m!105323))

(assert (=> bm!9795 m!105321))

(declare-fun m!105325 () Bool)

(assert (=> bm!9795 m!105325))

(assert (=> b!96747 m!105321))

(assert (=> b!96747 m!105321))

(assert (=> b!96747 m!105323))

(assert (=> b!96748 m!105321))

(assert (=> b!96748 m!105321))

(declare-fun m!105327 () Bool)

(assert (=> b!96748 m!105327))

(assert (=> d!25369 d!25711))

(assert (=> d!25369 d!25317))

(assert (=> d!25369 d!25259))

(declare-fun d!25713 () Bool)

(assert (=> d!25713 (= (arrayCountValidKeys!0 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!48353 () Unit!2849)

(declare-fun choose!2 (array!4197 (_ BitVec 32)) Unit!2849)

(assert (=> d!25713 (= lt!48353 (choose!2 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(declare-fun e!63070 () Bool)

(assert (=> d!25713 e!63070))

(declare-fun res!48794 () Bool)

(assert (=> d!25713 (=> (not res!48794) (not e!63070))))

(assert (=> d!25713 (= res!48794 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 lt!47998))))))

(assert (=> d!25713 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))) lt!48353)))

(declare-fun b!96753 () Bool)

(declare-fun res!48795 () Bool)

(assert (=> b!96753 (=> (not res!48795) (not e!63070))))

(assert (=> b!96753 (= res!48795 (validKeyInArray!0 (select (arr!1994 lt!47998) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(declare-fun b!96754 () Bool)

(assert (=> b!96754 (= e!63070 (bvslt (size!2243 lt!47998) #b01111111111111111111111111111111))))

(assert (= (and d!25713 res!48794) b!96753))

(assert (= (and b!96753 res!48795) b!96754))

(assert (=> d!25713 m!104253))

(declare-fun m!105329 () Bool)

(assert (=> d!25713 m!105329))

(declare-fun m!105331 () Bool)

(assert (=> b!96753 m!105331))

(assert (=> b!96753 m!105331))

(declare-fun m!105333 () Bool)

(assert (=> b!96753 m!105333))

(assert (=> d!25369 d!25713))

(declare-fun b!96755 () Bool)

(declare-fun e!63071 () (_ BitVec 32))

(declare-fun e!63072 () (_ BitVec 32))

(assert (=> b!96755 (= e!63071 e!63072)))

(declare-fun c!16363 () Bool)

(assert (=> b!96755 (= c!16363 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9796 () Bool)

(declare-fun call!9799 () (_ BitVec 32))

(assert (=> bm!9796 (= call!9799 (arrayCountValidKeys!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96756 () Bool)

(assert (=> b!96756 (= e!63072 call!9799)))

(declare-fun b!96757 () Bool)

(assert (=> b!96757 (= e!63072 (bvadd #b00000000000000000000000000000001 call!9799))))

(declare-fun b!96758 () Bool)

(assert (=> b!96758 (= e!63071 #b00000000000000000000000000000000)))

(declare-fun lt!48354 () (_ BitVec 32))

(declare-fun d!25715 () Bool)

(assert (=> d!25715 (and (bvsge lt!48354 #b00000000000000000000000000000000) (bvsle lt!48354 (bvsub (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!25715 (= lt!48354 e!63071)))

(declare-fun c!16364 () Bool)

(assert (=> d!25715 (= c!16364 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25715 (and (bvsle #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2243 (_keys!4142 newMap!16)) (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(assert (=> d!25715 (= (arrayCountValidKeys!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) lt!48354)))

(assert (= (and d!25715 c!16364) b!96758))

(assert (= (and d!25715 (not c!16364)) b!96755))

(assert (= (and b!96755 c!16363) b!96757))

(assert (= (and b!96755 (not c!16363)) b!96756))

(assert (= (or b!96757 b!96756) bm!9796))

(declare-fun m!105335 () Bool)

(assert (=> b!96755 m!105335))

(assert (=> b!96755 m!105335))

(declare-fun m!105337 () Bool)

(assert (=> b!96755 m!105337))

(declare-fun m!105339 () Bool)

(assert (=> bm!9796 m!105339))

(assert (=> d!25369 d!25715))

(declare-fun d!25717 () Bool)

(declare-fun res!48796 () Bool)

(declare-fun e!63073 () Bool)

(assert (=> d!25717 (=> res!48796 e!63073)))

(assert (=> d!25717 (= res!48796 (= (select (arr!1994 lt!48002) #b00000000000000000000000000000000) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25717 (= (arrayContainsKey!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000) e!63073)))

(declare-fun b!96759 () Bool)

(declare-fun e!63074 () Bool)

(assert (=> b!96759 (= e!63073 e!63074)))

(declare-fun res!48797 () Bool)

(assert (=> b!96759 (=> (not res!48797) (not e!63074))))

(assert (=> b!96759 (= res!48797 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 lt!48002)))))

(declare-fun b!96760 () Bool)

(assert (=> b!96760 (= e!63074 (arrayContainsKey!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!25717 (not res!48796)) b!96759))

(assert (= (and b!96759 res!48797) b!96760))

(declare-fun m!105341 () Bool)

(assert (=> d!25717 m!105341))

(assert (=> b!96760 m!103635))

(declare-fun m!105343 () Bool)

(assert (=> b!96760 m!105343))

(assert (=> d!25369 d!25717))

(declare-fun d!25719 () Bool)

(declare-fun e!63077 () Bool)

(assert (=> d!25719 e!63077))

(declare-fun res!48800 () Bool)

(assert (=> d!25719 (=> (not res!48800) (not e!63077))))

(assert (=> d!25719 (= res!48800 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 (_keys!4142 newMap!16)))))))

(declare-fun lt!48357 () Unit!2849)

(declare-fun choose!102 ((_ BitVec 64) array!4197 (_ BitVec 32) (_ BitVec 32)) Unit!2849)

(assert (=> d!25719 (= lt!48357 (choose!102 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (mask!6541 newMap!16)))))

(assert (=> d!25719 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25719 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (mask!6541 newMap!16)) lt!48357)))

(declare-fun b!96763 () Bool)

(assert (=> b!96763 (= e!63077 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (mask!6541 newMap!16)))))

(assert (= (and d!25719 res!48800) b!96763))

(assert (=> d!25719 m!103635))

(declare-fun m!105345 () Bool)

(assert (=> d!25719 m!105345))

(assert (=> d!25719 m!103933))

(assert (=> b!96763 m!104251))

(assert (=> b!96763 m!104255))

(assert (=> d!25369 d!25719))

(declare-fun d!25721 () Bool)

(declare-fun e!63078 () Bool)

(assert (=> d!25721 e!63078))

(declare-fun res!48801 () Bool)

(assert (=> d!25721 (=> (not res!48801) (not e!63078))))

(declare-fun lt!48359 () ListLongMap!1493)

(assert (=> d!25721 (= res!48801 (contains!783 lt!48359 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48360 () List!1558)

(assert (=> d!25721 (= lt!48359 (ListLongMap!1494 lt!48360))))

(declare-fun lt!48361 () Unit!2849)

(declare-fun lt!48358 () Unit!2849)

(assert (=> d!25721 (= lt!48361 lt!48358)))

(assert (=> d!25721 (= (getValueByKey!150 lt!48360 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25721 (= lt!48358 (lemmaContainsTupThenGetReturnValue!66 lt!48360 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25721 (= lt!48360 (insertStrictlySorted!69 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25721 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48359)))

(declare-fun b!96764 () Bool)

(declare-fun res!48802 () Bool)

(assert (=> b!96764 (=> (not res!48802) (not e!63078))))

(assert (=> b!96764 (= res!48802 (= (getValueByKey!150 (toList!762 lt!48359) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96765 () Bool)

(assert (=> b!96765 (= e!63078 (contains!785 (toList!762 lt!48359) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25721 res!48801) b!96764))

(assert (= (and b!96764 res!48802) b!96765))

(declare-fun m!105347 () Bool)

(assert (=> d!25721 m!105347))

(declare-fun m!105349 () Bool)

(assert (=> d!25721 m!105349))

(declare-fun m!105351 () Bool)

(assert (=> d!25721 m!105351))

(declare-fun m!105353 () Bool)

(assert (=> d!25721 m!105353))

(declare-fun m!105355 () Bool)

(assert (=> b!96764 m!105355))

(declare-fun m!105357 () Bool)

(assert (=> b!96765 m!105357))

(assert (=> d!25369 d!25721))

(assert (=> d!25369 d!25311))

(declare-fun e!63091 () Bool)

(declare-fun b!96766 () Bool)

(assert (=> b!96766 (= e!63091 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96767 () Bool)

(declare-fun e!63079 () ListLongMap!1493)

(declare-fun call!9805 () ListLongMap!1493)

(assert (=> b!96767 (= e!63079 call!9805)))

(declare-fun b!96768 () Bool)

(declare-fun e!63090 () Bool)

(assert (=> b!96768 (= e!63090 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96769 () Bool)

(declare-fun e!63085 () Bool)

(declare-fun e!63089 () Bool)

(assert (=> b!96769 (= e!63085 e!63089)))

(declare-fun res!48805 () Bool)

(assert (=> b!96769 (=> (not res!48805) (not e!63089))))

(declare-fun lt!48367 () ListLongMap!1493)

(assert (=> b!96769 (= res!48805 (contains!783 lt!48367 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!96769 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun b!96770 () Bool)

(declare-fun e!63087 () ListLongMap!1493)

(assert (=> b!96770 (= e!63087 call!9805)))

(declare-fun b!96771 () Bool)

(declare-fun e!63080 () Bool)

(declare-fun e!63083 () Bool)

(assert (=> b!96771 (= e!63080 e!63083)))

(declare-fun res!48811 () Bool)

(declare-fun call!9803 () Bool)

(assert (=> b!96771 (= res!48811 call!9803)))

(assert (=> b!96771 (=> (not res!48811) (not e!63083))))

(declare-fun b!96772 () Bool)

(declare-fun res!48809 () Bool)

(declare-fun e!63082 () Bool)

(assert (=> b!96772 (=> (not res!48809) (not e!63082))))

(declare-fun e!63081 () Bool)

(assert (=> b!96772 (= res!48809 e!63081)))

(declare-fun c!16370 () Bool)

(assert (=> b!96772 (= c!16370 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96774 () Bool)

(declare-fun res!48807 () Bool)

(assert (=> b!96774 (=> (not res!48807) (not e!63082))))

(assert (=> b!96774 (= res!48807 e!63085)))

(declare-fun res!48808 () Bool)

(assert (=> b!96774 (=> res!48808 e!63085)))

(assert (=> b!96774 (= res!48808 (not e!63091))))

(declare-fun res!48803 () Bool)

(assert (=> b!96774 (=> (not res!48803) (not e!63091))))

(assert (=> b!96774 (= res!48803 (bvslt #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun b!96775 () Bool)

(declare-fun e!63086 () Bool)

(assert (=> b!96775 (= e!63086 (= (apply!91 lt!48367 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9797 () Bool)

(declare-fun call!9800 () ListLongMap!1493)

(declare-fun call!9802 () ListLongMap!1493)

(assert (=> bm!9797 (= call!9800 call!9802)))

(declare-fun b!96776 () Bool)

(assert (=> b!96776 (= e!63081 e!63086)))

(declare-fun res!48804 () Bool)

(declare-fun call!9801 () Bool)

(assert (=> b!96776 (= res!48804 call!9801)))

(assert (=> b!96776 (=> (not res!48804) (not e!63086))))

(declare-fun b!96777 () Bool)

(declare-fun e!63088 () Unit!2849)

(declare-fun Unit!2895 () Unit!2849)

(assert (=> b!96777 (= e!63088 Unit!2895)))

(declare-fun b!96778 () Bool)

(declare-fun e!63084 () ListLongMap!1493)

(assert (=> b!96778 (= e!63084 e!63079)))

(declare-fun c!16369 () Bool)

(assert (=> b!96778 (= c!16369 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9798 () Bool)

(assert (=> bm!9798 (= call!9803 (contains!783 lt!48367 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96779 () Bool)

(declare-fun c!16365 () Bool)

(assert (=> b!96779 (= c!16365 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96779 (= e!63079 e!63087)))

(declare-fun c!16366 () Bool)

(declare-fun call!9804 () ListLongMap!1493)

(declare-fun bm!9799 () Bool)

(declare-fun call!9806 () ListLongMap!1493)

(assert (=> bm!9799 (= call!9804 (+!129 (ite c!16366 call!9806 (ite c!16369 call!9802 call!9800)) (ite (or c!16366 c!16369) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!96773 () Bool)

(assert (=> b!96773 (= e!63081 (not call!9801))))

(declare-fun d!25723 () Bool)

(assert (=> d!25723 e!63082))

(declare-fun res!48806 () Bool)

(assert (=> d!25723 (=> (not res!48806) (not e!63082))))

(assert (=> d!25723 (= res!48806 (or (bvsge #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))))

(declare-fun lt!48382 () ListLongMap!1493)

(assert (=> d!25723 (= lt!48367 lt!48382)))

(declare-fun lt!48365 () Unit!2849)

(assert (=> d!25723 (= lt!48365 e!63088)))

(declare-fun c!16368 () Bool)

(assert (=> d!25723 (= c!16368 e!63090)))

(declare-fun res!48810 () Bool)

(assert (=> d!25723 (=> (not res!48810) (not e!63090))))

(assert (=> d!25723 (= res!48810 (bvslt #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(assert (=> d!25723 (= lt!48382 e!63084)))

(assert (=> d!25723 (= c!16366 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25723 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25723 (= (getCurrentListMap!452 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48367)))

(declare-fun bm!9800 () Bool)

(assert (=> bm!9800 (= call!9802 call!9806)))

(declare-fun bm!9801 () Bool)

(assert (=> bm!9801 (= call!9806 (getCurrentListMapNoExtraKeys!94 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96780 () Bool)

(assert (=> b!96780 (= e!63082 e!63080)))

(declare-fun c!16367 () Bool)

(assert (=> b!96780 (= c!16367 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96781 () Bool)

(assert (=> b!96781 (= e!63083 (= (apply!91 lt!48367 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96782 () Bool)

(declare-fun lt!48383 () Unit!2849)

(assert (=> b!96782 (= e!63088 lt!48383)))

(declare-fun lt!48362 () ListLongMap!1493)

(assert (=> b!96782 (= lt!48362 (getCurrentListMapNoExtraKeys!94 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48376 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48376 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48368 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48368 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48374 () Unit!2849)

(assert (=> b!96782 (= lt!48374 (addStillContains!67 lt!48362 lt!48376 (zeroValue!2341 newMap!16) lt!48368))))

(assert (=> b!96782 (contains!783 (+!129 lt!48362 (tuple2!2287 lt!48376 (zeroValue!2341 newMap!16))) lt!48368)))

(declare-fun lt!48378 () Unit!2849)

(assert (=> b!96782 (= lt!48378 lt!48374)))

(declare-fun lt!48379 () ListLongMap!1493)

(assert (=> b!96782 (= lt!48379 (getCurrentListMapNoExtraKeys!94 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48370 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48370 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48366 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48366 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48363 () Unit!2849)

(assert (=> b!96782 (= lt!48363 (addApplyDifferent!67 lt!48379 lt!48370 (minValue!2341 newMap!16) lt!48366))))

(assert (=> b!96782 (= (apply!91 (+!129 lt!48379 (tuple2!2287 lt!48370 (minValue!2341 newMap!16))) lt!48366) (apply!91 lt!48379 lt!48366))))

(declare-fun lt!48364 () Unit!2849)

(assert (=> b!96782 (= lt!48364 lt!48363)))

(declare-fun lt!48380 () ListLongMap!1493)

(assert (=> b!96782 (= lt!48380 (getCurrentListMapNoExtraKeys!94 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48373 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48373 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48381 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48381 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48369 () Unit!2849)

(assert (=> b!96782 (= lt!48369 (addApplyDifferent!67 lt!48380 lt!48373 (zeroValue!2341 newMap!16) lt!48381))))

(assert (=> b!96782 (= (apply!91 (+!129 lt!48380 (tuple2!2287 lt!48373 (zeroValue!2341 newMap!16))) lt!48381) (apply!91 lt!48380 lt!48381))))

(declare-fun lt!48375 () Unit!2849)

(assert (=> b!96782 (= lt!48375 lt!48369)))

(declare-fun lt!48372 () ListLongMap!1493)

(assert (=> b!96782 (= lt!48372 (getCurrentListMapNoExtraKeys!94 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48377 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48377 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48371 () (_ BitVec 64))

(assert (=> b!96782 (= lt!48371 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!96782 (= lt!48383 (addApplyDifferent!67 lt!48372 lt!48377 (minValue!2341 newMap!16) lt!48371))))

(assert (=> b!96782 (= (apply!91 (+!129 lt!48372 (tuple2!2287 lt!48377 (minValue!2341 newMap!16))) lt!48371) (apply!91 lt!48372 lt!48371))))

(declare-fun bm!9802 () Bool)

(assert (=> bm!9802 (= call!9805 call!9804)))

(declare-fun b!96783 () Bool)

(assert (=> b!96783 (= e!63087 call!9800)))

(declare-fun bm!9803 () Bool)

(assert (=> bm!9803 (= call!9801 (contains!783 lt!48367 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96784 () Bool)

(assert (=> b!96784 (= e!63080 (not call!9803))))

(declare-fun b!96785 () Bool)

(assert (=> b!96785 (= e!63084 (+!129 call!9804 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96786 () Bool)

(assert (=> b!96786 (= e!63089 (= (apply!91 lt!48367 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96786 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))))))

(assert (=> b!96786 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(assert (= (and d!25723 c!16366) b!96785))

(assert (= (and d!25723 (not c!16366)) b!96778))

(assert (= (and b!96778 c!16369) b!96767))

(assert (= (and b!96778 (not c!16369)) b!96779))

(assert (= (and b!96779 c!16365) b!96770))

(assert (= (and b!96779 (not c!16365)) b!96783))

(assert (= (or b!96770 b!96783) bm!9797))

(assert (= (or b!96767 bm!9797) bm!9800))

(assert (= (or b!96767 b!96770) bm!9802))

(assert (= (or b!96785 bm!9800) bm!9801))

(assert (= (or b!96785 bm!9802) bm!9799))

(assert (= (and d!25723 res!48810) b!96768))

(assert (= (and d!25723 c!16368) b!96782))

(assert (= (and d!25723 (not c!16368)) b!96777))

(assert (= (and d!25723 res!48806) b!96774))

(assert (= (and b!96774 res!48803) b!96766))

(assert (= (and b!96774 (not res!48808)) b!96769))

(assert (= (and b!96769 res!48805) b!96786))

(assert (= (and b!96774 res!48807) b!96772))

(assert (= (and b!96772 c!16370) b!96776))

(assert (= (and b!96772 (not c!16370)) b!96773))

(assert (= (and b!96776 res!48804) b!96775))

(assert (= (or b!96776 b!96773) bm!9803))

(assert (= (and b!96772 res!48809) b!96780))

(assert (= (and b!96780 c!16367) b!96771))

(assert (= (and b!96780 (not c!16367)) b!96784))

(assert (= (and b!96771 res!48811) b!96781))

(assert (= (or b!96771 b!96784) bm!9798))

(declare-fun b_lambda!4283 () Bool)

(assert (=> (not b_lambda!4283) (not b!96786)))

(assert (=> b!96786 t!5484))

(declare-fun b_and!5925 () Bool)

(assert (= b_and!5921 (and (=> t!5484 result!3225) b_and!5925)))

(assert (=> b!96786 t!5486))

(declare-fun b_and!5927 () Bool)

(assert (= b_and!5923 (and (=> t!5486 result!3227) b_and!5927)))

(declare-fun m!105359 () Bool)

(assert (=> bm!9801 m!105359))

(declare-fun m!105361 () Bool)

(assert (=> b!96786 m!105361))

(assert (=> b!96786 m!103949))

(declare-fun m!105363 () Bool)

(assert (=> b!96786 m!105363))

(assert (=> b!96786 m!105335))

(assert (=> b!96786 m!105335))

(declare-fun m!105365 () Bool)

(assert (=> b!96786 m!105365))

(assert (=> b!96786 m!105361))

(assert (=> b!96786 m!103949))

(declare-fun m!105367 () Bool)

(assert (=> b!96785 m!105367))

(declare-fun m!105369 () Bool)

(assert (=> b!96782 m!105369))

(assert (=> b!96782 m!105359))

(declare-fun m!105371 () Bool)

(assert (=> b!96782 m!105371))

(declare-fun m!105373 () Bool)

(assert (=> b!96782 m!105373))

(declare-fun m!105375 () Bool)

(assert (=> b!96782 m!105375))

(declare-fun m!105377 () Bool)

(assert (=> b!96782 m!105377))

(declare-fun m!105379 () Bool)

(assert (=> b!96782 m!105379))

(declare-fun m!105381 () Bool)

(assert (=> b!96782 m!105381))

(declare-fun m!105383 () Bool)

(assert (=> b!96782 m!105383))

(declare-fun m!105385 () Bool)

(assert (=> b!96782 m!105385))

(declare-fun m!105387 () Bool)

(assert (=> b!96782 m!105387))

(declare-fun m!105389 () Bool)

(assert (=> b!96782 m!105389))

(assert (=> b!96782 m!105335))

(assert (=> b!96782 m!105375))

(assert (=> b!96782 m!105379))

(declare-fun m!105391 () Bool)

(assert (=> b!96782 m!105391))

(declare-fun m!105393 () Bool)

(assert (=> b!96782 m!105393))

(assert (=> b!96782 m!105391))

(declare-fun m!105395 () Bool)

(assert (=> b!96782 m!105395))

(declare-fun m!105397 () Bool)

(assert (=> b!96782 m!105397))

(assert (=> b!96782 m!105383))

(assert (=> b!96768 m!105335))

(assert (=> b!96768 m!105335))

(assert (=> b!96768 m!105337))

(declare-fun m!105399 () Bool)

(assert (=> b!96775 m!105399))

(declare-fun m!105401 () Bool)

(assert (=> bm!9799 m!105401))

(declare-fun m!105403 () Bool)

(assert (=> b!96781 m!105403))

(assert (=> b!96769 m!105335))

(assert (=> b!96769 m!105335))

(declare-fun m!105405 () Bool)

(assert (=> b!96769 m!105405))

(assert (=> b!96766 m!105335))

(assert (=> b!96766 m!105335))

(assert (=> b!96766 m!105337))

(assert (=> d!25723 m!103933))

(declare-fun m!105407 () Bool)

(assert (=> bm!9798 m!105407))

(declare-fun m!105409 () Bool)

(assert (=> bm!9803 m!105409))

(assert (=> d!25369 d!25723))

(declare-fun d!25725 () Bool)

(declare-fun e!63094 () Bool)

(assert (=> d!25725 e!63094))

(declare-fun res!48814 () Bool)

(assert (=> d!25725 (=> (not res!48814) (not e!63094))))

(assert (=> d!25725 (= res!48814 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 (_keys!4142 newMap!16)))))))

(declare-fun lt!48386 () Unit!2849)

(declare-fun choose!41 (array!4197 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1559) Unit!2849)

(assert (=> d!25725 (= lt!48386 (choose!41 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) lt!48008 lt!48001))))

(assert (=> d!25725 (bvslt (size!2243 (_keys!4142 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!25725 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4142 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) lt!48008 lt!48001) lt!48386)))

(declare-fun b!96789 () Bool)

(assert (=> b!96789 (= e!63094 (arrayNoDuplicates!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) lt!48008 lt!48001))))

(assert (= (and d!25725 res!48814) b!96789))

(assert (=> d!25725 m!103635))

(declare-fun m!105411 () Bool)

(assert (=> d!25725 m!105411))

(assert (=> b!96789 m!104251))

(assert (=> b!96789 m!104277))

(assert (=> d!25369 d!25725))

(declare-fun d!25727 () Bool)

(declare-fun e!63095 () Bool)

(assert (=> d!25727 e!63095))

(declare-fun res!48815 () Bool)

(assert (=> d!25727 (=> (not res!48815) (not e!63095))))

(assert (=> d!25727 (= res!48815 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 lt!48004))))))

(declare-fun lt!48387 () Unit!2849)

(assert (=> d!25727 (= lt!48387 (choose!582 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25727 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25727 (= (lemmaValidKeyInArrayIsInListMap!100 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (defaultEntry!2456 newMap!16)) lt!48387)))

(declare-fun b!96790 () Bool)

(assert (=> b!96790 (= e!63095 (contains!783 (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 lt!48004) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(assert (= (and d!25727 res!48815) b!96790))

(declare-fun m!105413 () Bool)

(assert (=> d!25727 m!105413))

(assert (=> d!25727 m!103933))

(assert (=> b!96790 m!104259))

(declare-fun m!105415 () Bool)

(assert (=> b!96790 m!105415))

(assert (=> b!96790 m!104259))

(assert (=> b!96790 m!105415))

(declare-fun m!105417 () Bool)

(assert (=> b!96790 m!105417))

(assert (=> d!25369 d!25727))

(assert (=> d!25369 d!25329))

(declare-fun b!96799 () Bool)

(declare-fun res!48824 () Bool)

(declare-fun e!63101 () Bool)

(assert (=> b!96799 (=> (not res!48824) (not e!63101))))

(assert (=> b!96799 (= res!48824 (not (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))))

(declare-fun b!96800 () Bool)

(declare-fun res!48825 () Bool)

(assert (=> b!96800 (=> (not res!48825) (not e!63101))))

(assert (=> b!96800 (= res!48825 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun d!25729 () Bool)

(declare-fun e!63100 () Bool)

(assert (=> d!25729 e!63100))

(declare-fun res!48826 () Bool)

(assert (=> d!25729 (=> (not res!48826) (not e!63100))))

(assert (=> d!25729 (= res!48826 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 (_keys!4142 newMap!16)))))))

(declare-fun lt!48390 () Unit!2849)

(declare-fun choose!1 (array!4197 (_ BitVec 32) (_ BitVec 64)) Unit!2849)

(assert (=> d!25729 (= lt!48390 (choose!1 (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25729 e!63101))

(declare-fun res!48827 () Bool)

(assert (=> d!25729 (=> (not res!48827) (not e!63101))))

(assert (=> d!25729 (= res!48827 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 (_keys!4142 newMap!16)))))))

(assert (=> d!25729 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4142 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!48390)))

(declare-fun b!96801 () Bool)

(assert (=> b!96801 (= e!63101 (bvslt (size!2243 (_keys!4142 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!96802 () Bool)

(assert (=> b!96802 (= e!63100 (= (arrayCountValidKeys!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4142 newMap!16) #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!25729 res!48827) b!96799))

(assert (= (and b!96799 res!48824) b!96800))

(assert (= (and b!96800 res!48825) b!96801))

(assert (= (and d!25729 res!48826) b!96802))

(declare-fun m!105419 () Bool)

(assert (=> b!96799 m!105419))

(assert (=> b!96799 m!105419))

(declare-fun m!105421 () Bool)

(assert (=> b!96799 m!105421))

(assert (=> b!96800 m!103635))

(assert (=> b!96800 m!103901))

(assert (=> d!25729 m!103635))

(declare-fun m!105423 () Bool)

(assert (=> d!25729 m!105423))

(assert (=> b!96802 m!104251))

(assert (=> b!96802 m!104249))

(assert (=> b!96802 m!103763))

(assert (=> d!25369 d!25729))

(declare-fun d!25731 () Bool)

(declare-fun e!63104 () Bool)

(assert (=> d!25731 e!63104))

(declare-fun res!48830 () Bool)

(assert (=> d!25731 (=> (not res!48830) (not e!63104))))

(assert (=> d!25731 (= res!48830 (and (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2243 (_keys!4142 newMap!16))) (bvslt (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (size!2244 (_values!2439 newMap!16)))))))

(declare-fun lt!48393 () Unit!2849)

(declare-fun choose!591 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 32) (_ BitVec 64) V!3137 Int) Unit!2849)

(assert (=> d!25731 (= lt!48393 (choose!591 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)))))

(assert (=> d!25731 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25731 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!24 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) lt!48393)))

(declare-fun b!96805 () Bool)

(assert (=> b!96805 (= e!63104 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))))))

(assert (= (and d!25731 res!48830) b!96805))

(assert (=> d!25731 m!103635))

(assert (=> d!25731 m!103633))

(declare-fun m!105425 () Bool)

(assert (=> d!25731 m!105425))

(assert (=> d!25731 m!103933))

(assert (=> b!96805 m!103769))

(assert (=> b!96805 m!104251))

(assert (=> b!96805 m!104265))

(assert (=> b!96805 m!104271))

(assert (=> b!96805 m!103769))

(assert (=> b!96805 m!104081))

(assert (=> d!25369 d!25731))

(assert (=> d!25369 d!25307))

(declare-fun b!96806 () Bool)

(declare-fun e!63105 () (_ BitVec 32))

(declare-fun e!63106 () (_ BitVec 32))

(assert (=> b!96806 (= e!63105 e!63106)))

(declare-fun c!16371 () Bool)

(assert (=> b!96806 (= c!16371 (validKeyInArray!0 (select (arr!1994 lt!47998) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(declare-fun call!9807 () (_ BitVec 32))

(declare-fun bm!9804 () Bool)

(assert (=> bm!9804 (= call!9807 (arrayCountValidKeys!0 lt!47998 (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)))))

(declare-fun b!96807 () Bool)

(assert (=> b!96807 (= e!63106 call!9807)))

(declare-fun b!96808 () Bool)

(assert (=> b!96808 (= e!63106 (bvadd #b00000000000000000000000000000001 call!9807))))

(declare-fun b!96809 () Bool)

(assert (=> b!96809 (= e!63105 #b00000000000000000000000000000000)))

(declare-fun d!25733 () Bool)

(declare-fun lt!48394 () (_ BitVec 32))

(assert (=> d!25733 (and (bvsge lt!48394 #b00000000000000000000000000000000) (bvsle lt!48394 (bvsub (size!2243 lt!47998) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)))))))

(assert (=> d!25733 (= lt!48394 e!63105)))

(declare-fun c!16372 () Bool)

(assert (=> d!25733 (= c!16372 (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)))))

(assert (=> d!25733 (and (bvsle (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)) (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001) (size!2243 lt!47998)))))

(assert (=> d!25733 (= (arrayCountValidKeys!0 lt!47998 (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (bvadd (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000001)) lt!48394)))

(assert (= (and d!25733 c!16372) b!96809))

(assert (= (and d!25733 (not c!16372)) b!96806))

(assert (= (and b!96806 c!16371) b!96808))

(assert (= (and b!96806 (not c!16371)) b!96807))

(assert (= (or b!96808 b!96807) bm!9804))

(assert (=> b!96806 m!105331))

(assert (=> b!96806 m!105331))

(assert (=> b!96806 m!105333))

(declare-fun m!105427 () Bool)

(assert (=> bm!9804 m!105427))

(assert (=> d!25369 d!25733))

(declare-fun b!96810 () Bool)

(declare-fun e!63107 () Bool)

(declare-fun call!9808 () Bool)

(assert (=> b!96810 (= e!63107 call!9808)))

(declare-fun b!96811 () Bool)

(declare-fun e!63108 () Bool)

(assert (=> b!96811 (= e!63108 call!9808)))

(declare-fun d!25735 () Bool)

(declare-fun res!48831 () Bool)

(declare-fun e!63109 () Bool)

(assert (=> d!25735 (=> res!48831 e!63109)))

(assert (=> d!25735 (= res!48831 (bvsge #b00000000000000000000000000000000 (size!2243 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))))))))

(assert (=> d!25735 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (mask!6541 newMap!16)) e!63109)))

(declare-fun b!96812 () Bool)

(assert (=> b!96812 (= e!63109 e!63107)))

(declare-fun c!16373 () Bool)

(assert (=> b!96812 (= c!16373 (validKeyInArray!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!96813 () Bool)

(assert (=> b!96813 (= e!63107 e!63108)))

(declare-fun lt!48396 () (_ BitVec 64))

(assert (=> b!96813 (= lt!48396 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!48397 () Unit!2849)

(assert (=> b!96813 (= lt!48397 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) lt!48396 #b00000000000000000000000000000000))))

(assert (=> b!96813 (arrayContainsKey!0 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) lt!48396 #b00000000000000000000000000000000)))

(declare-fun lt!48395 () Unit!2849)

(assert (=> b!96813 (= lt!48395 lt!48397)))

(declare-fun res!48832 () Bool)

(assert (=> b!96813 (= res!48832 (= (seekEntryOrOpen!0 (select (arr!1994 (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16)))) #b00000000000000000000000000000000) (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (mask!6541 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!96813 (=> (not res!48832) (not e!63108))))

(declare-fun bm!9805 () Bool)

(assert (=> bm!9805 (= call!9808 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4198 (store (arr!1994 (_keys!4142 newMap!16)) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (size!2243 (_keys!4142 newMap!16))) (mask!6541 newMap!16)))))

(assert (= (and d!25735 (not res!48831)) b!96812))

(assert (= (and b!96812 c!16373) b!96813))

(assert (= (and b!96812 (not c!16373)) b!96810))

(assert (= (and b!96813 res!48832) b!96811))

(assert (= (or b!96811 b!96810) bm!9805))

(assert (=> b!96812 m!105335))

(assert (=> b!96812 m!105335))

(assert (=> b!96812 m!105337))

(assert (=> b!96813 m!105335))

(declare-fun m!105429 () Bool)

(assert (=> b!96813 m!105429))

(declare-fun m!105431 () Bool)

(assert (=> b!96813 m!105431))

(assert (=> b!96813 m!105335))

(declare-fun m!105433 () Bool)

(assert (=> b!96813 m!105433))

(declare-fun m!105435 () Bool)

(assert (=> bm!9805 m!105435))

(assert (=> d!25369 d!25735))

(declare-fun d!25737 () Bool)

(assert (=> d!25737 (arrayContainsKey!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!48398 () Unit!2849)

(assert (=> d!25737 (= lt!48398 (choose!13 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))))))

(assert (=> d!25737 (bvsge (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752)) #b00000000000000000000000000000000)))

(assert (=> d!25737 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!48002 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (ite c!16121 (index!3129 lt!47752) (index!3126 lt!47752))) lt!48398)))

(declare-fun bs!3993 () Bool)

(assert (= bs!3993 d!25737))

(assert (=> bs!3993 m!103635))

(assert (=> bs!3993 m!104263))

(assert (=> bs!3993 m!103635))

(declare-fun m!105437 () Bool)

(assert (=> bs!3993 m!105437))

(assert (=> d!25369 d!25737))

(declare-fun b!96814 () Bool)

(declare-fun e!63122 () Bool)

(assert (=> b!96814 (= e!63122 (validKeyInArray!0 (select (arr!1994 lt!48004) #b00000000000000000000000000000000)))))

(declare-fun b!96815 () Bool)

(declare-fun e!63110 () ListLongMap!1493)

(declare-fun call!9814 () ListLongMap!1493)

(assert (=> b!96815 (= e!63110 call!9814)))

(declare-fun b!96816 () Bool)

(declare-fun e!63121 () Bool)

(assert (=> b!96816 (= e!63121 (validKeyInArray!0 (select (arr!1994 lt!48004) #b00000000000000000000000000000000)))))

(declare-fun b!96817 () Bool)

(declare-fun e!63116 () Bool)

(declare-fun e!63120 () Bool)

(assert (=> b!96817 (= e!63116 e!63120)))

(declare-fun res!48835 () Bool)

(assert (=> b!96817 (=> (not res!48835) (not e!63120))))

(declare-fun lt!48404 () ListLongMap!1493)

(assert (=> b!96817 (= res!48835 (contains!783 lt!48404 (select (arr!1994 lt!48004) #b00000000000000000000000000000000)))))

(assert (=> b!96817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 lt!48004)))))

(declare-fun b!96818 () Bool)

(declare-fun e!63118 () ListLongMap!1493)

(assert (=> b!96818 (= e!63118 call!9814)))

(declare-fun b!96819 () Bool)

(declare-fun e!63111 () Bool)

(declare-fun e!63114 () Bool)

(assert (=> b!96819 (= e!63111 e!63114)))

(declare-fun res!48841 () Bool)

(declare-fun call!9812 () Bool)

(assert (=> b!96819 (= res!48841 call!9812)))

(assert (=> b!96819 (=> (not res!48841) (not e!63114))))

(declare-fun b!96820 () Bool)

(declare-fun res!48839 () Bool)

(declare-fun e!63113 () Bool)

(assert (=> b!96820 (=> (not res!48839) (not e!63113))))

(declare-fun e!63112 () Bool)

(assert (=> b!96820 (= res!48839 e!63112)))

(declare-fun c!16379 () Bool)

(assert (=> b!96820 (= c!16379 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96822 () Bool)

(declare-fun res!48837 () Bool)

(assert (=> b!96822 (=> (not res!48837) (not e!63113))))

(assert (=> b!96822 (= res!48837 e!63116)))

(declare-fun res!48838 () Bool)

(assert (=> b!96822 (=> res!48838 e!63116)))

(assert (=> b!96822 (= res!48838 (not e!63122))))

(declare-fun res!48833 () Bool)

(assert (=> b!96822 (=> (not res!48833) (not e!63122))))

(assert (=> b!96822 (= res!48833 (bvslt #b00000000000000000000000000000000 (size!2243 lt!48004)))))

(declare-fun b!96823 () Bool)

(declare-fun e!63117 () Bool)

(assert (=> b!96823 (= e!63117 (= (apply!91 lt!48404 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9806 () Bool)

(declare-fun call!9809 () ListLongMap!1493)

(declare-fun call!9811 () ListLongMap!1493)

(assert (=> bm!9806 (= call!9809 call!9811)))

(declare-fun b!96824 () Bool)

(assert (=> b!96824 (= e!63112 e!63117)))

(declare-fun res!48834 () Bool)

(declare-fun call!9810 () Bool)

(assert (=> b!96824 (= res!48834 call!9810)))

(assert (=> b!96824 (=> (not res!48834) (not e!63117))))

(declare-fun b!96825 () Bool)

(declare-fun e!63119 () Unit!2849)

(declare-fun Unit!2896 () Unit!2849)

(assert (=> b!96825 (= e!63119 Unit!2896)))

(declare-fun b!96826 () Bool)

(declare-fun e!63115 () ListLongMap!1493)

(assert (=> b!96826 (= e!63115 e!63110)))

(declare-fun c!16378 () Bool)

(assert (=> b!96826 (= c!16378 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9807 () Bool)

(assert (=> bm!9807 (= call!9812 (contains!783 lt!48404 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96827 () Bool)

(declare-fun c!16374 () Bool)

(assert (=> b!96827 (= c!16374 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96827 (= e!63110 e!63118)))

(declare-fun call!9815 () ListLongMap!1493)

(declare-fun bm!9808 () Bool)

(declare-fun c!16375 () Bool)

(declare-fun call!9813 () ListLongMap!1493)

(assert (=> bm!9808 (= call!9813 (+!129 (ite c!16375 call!9815 (ite c!16378 call!9811 call!9809)) (ite (or c!16375 c!16378) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!96821 () Bool)

(assert (=> b!96821 (= e!63112 (not call!9810))))

(declare-fun d!25739 () Bool)

(assert (=> d!25739 e!63113))

(declare-fun res!48836 () Bool)

(assert (=> d!25739 (=> (not res!48836) (not e!63113))))

(assert (=> d!25739 (= res!48836 (or (bvsge #b00000000000000000000000000000000 (size!2243 lt!48004)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 lt!48004)))))))

(declare-fun lt!48419 () ListLongMap!1493)

(assert (=> d!25739 (= lt!48404 lt!48419)))

(declare-fun lt!48402 () Unit!2849)

(assert (=> d!25739 (= lt!48402 e!63119)))

(declare-fun c!16377 () Bool)

(assert (=> d!25739 (= c!16377 e!63121)))

(declare-fun res!48840 () Bool)

(assert (=> d!25739 (=> (not res!48840) (not e!63121))))

(assert (=> d!25739 (= res!48840 (bvslt #b00000000000000000000000000000000 (size!2243 lt!48004)))))

(assert (=> d!25739 (= lt!48419 e!63115)))

(assert (=> d!25739 (= c!16375 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25739 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25739 (= (getCurrentListMap!452 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48404)))

(declare-fun bm!9809 () Bool)

(assert (=> bm!9809 (= call!9811 call!9815)))

(declare-fun bm!9810 () Bool)

(assert (=> bm!9810 (= call!9815 (getCurrentListMapNoExtraKeys!94 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96828 () Bool)

(assert (=> b!96828 (= e!63113 e!63111)))

(declare-fun c!16376 () Bool)

(assert (=> b!96828 (= c!16376 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96829 () Bool)

(assert (=> b!96829 (= e!63114 (= (apply!91 lt!48404 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96830 () Bool)

(declare-fun lt!48420 () Unit!2849)

(assert (=> b!96830 (= e!63119 lt!48420)))

(declare-fun lt!48399 () ListLongMap!1493)

(assert (=> b!96830 (= lt!48399 (getCurrentListMapNoExtraKeys!94 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48413 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48413 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48405 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48405 (select (arr!1994 lt!48004) #b00000000000000000000000000000000))))

(declare-fun lt!48411 () Unit!2849)

(assert (=> b!96830 (= lt!48411 (addStillContains!67 lt!48399 lt!48413 (zeroValue!2341 newMap!16) lt!48405))))

(assert (=> b!96830 (contains!783 (+!129 lt!48399 (tuple2!2287 lt!48413 (zeroValue!2341 newMap!16))) lt!48405)))

(declare-fun lt!48415 () Unit!2849)

(assert (=> b!96830 (= lt!48415 lt!48411)))

(declare-fun lt!48416 () ListLongMap!1493)

(assert (=> b!96830 (= lt!48416 (getCurrentListMapNoExtraKeys!94 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48407 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48407 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48403 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48403 (select (arr!1994 lt!48004) #b00000000000000000000000000000000))))

(declare-fun lt!48400 () Unit!2849)

(assert (=> b!96830 (= lt!48400 (addApplyDifferent!67 lt!48416 lt!48407 (minValue!2341 newMap!16) lt!48403))))

(assert (=> b!96830 (= (apply!91 (+!129 lt!48416 (tuple2!2287 lt!48407 (minValue!2341 newMap!16))) lt!48403) (apply!91 lt!48416 lt!48403))))

(declare-fun lt!48401 () Unit!2849)

(assert (=> b!96830 (= lt!48401 lt!48400)))

(declare-fun lt!48417 () ListLongMap!1493)

(assert (=> b!96830 (= lt!48417 (getCurrentListMapNoExtraKeys!94 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48410 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48410 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48418 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48418 (select (arr!1994 lt!48004) #b00000000000000000000000000000000))))

(declare-fun lt!48406 () Unit!2849)

(assert (=> b!96830 (= lt!48406 (addApplyDifferent!67 lt!48417 lt!48410 (zeroValue!2341 newMap!16) lt!48418))))

(assert (=> b!96830 (= (apply!91 (+!129 lt!48417 (tuple2!2287 lt!48410 (zeroValue!2341 newMap!16))) lt!48418) (apply!91 lt!48417 lt!48418))))

(declare-fun lt!48412 () Unit!2849)

(assert (=> b!96830 (= lt!48412 lt!48406)))

(declare-fun lt!48409 () ListLongMap!1493)

(assert (=> b!96830 (= lt!48409 (getCurrentListMapNoExtraKeys!94 lt!48004 lt!47994 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48414 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48414 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48408 () (_ BitVec 64))

(assert (=> b!96830 (= lt!48408 (select (arr!1994 lt!48004) #b00000000000000000000000000000000))))

(assert (=> b!96830 (= lt!48420 (addApplyDifferent!67 lt!48409 lt!48414 (minValue!2341 newMap!16) lt!48408))))

(assert (=> b!96830 (= (apply!91 (+!129 lt!48409 (tuple2!2287 lt!48414 (minValue!2341 newMap!16))) lt!48408) (apply!91 lt!48409 lt!48408))))

(declare-fun bm!9811 () Bool)

(assert (=> bm!9811 (= call!9814 call!9813)))

(declare-fun b!96831 () Bool)

(assert (=> b!96831 (= e!63118 call!9809)))

(declare-fun bm!9812 () Bool)

(assert (=> bm!9812 (= call!9810 (contains!783 lt!48404 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96832 () Bool)

(assert (=> b!96832 (= e!63111 (not call!9812))))

(declare-fun b!96833 () Bool)

(assert (=> b!96833 (= e!63115 (+!129 call!9813 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96834 () Bool)

(assert (=> b!96834 (= e!63120 (= (apply!91 lt!48404 (select (arr!1994 lt!48004) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 lt!47994) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 lt!47994)))))

(assert (=> b!96834 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 lt!48004)))))

(assert (= (and d!25739 c!16375) b!96833))

(assert (= (and d!25739 (not c!16375)) b!96826))

(assert (= (and b!96826 c!16378) b!96815))

(assert (= (and b!96826 (not c!16378)) b!96827))

(assert (= (and b!96827 c!16374) b!96818))

(assert (= (and b!96827 (not c!16374)) b!96831))

(assert (= (or b!96818 b!96831) bm!9806))

(assert (= (or b!96815 bm!9806) bm!9809))

(assert (= (or b!96815 b!96818) bm!9811))

(assert (= (or b!96833 bm!9809) bm!9810))

(assert (= (or b!96833 bm!9811) bm!9808))

(assert (= (and d!25739 res!48840) b!96816))

(assert (= (and d!25739 c!16377) b!96830))

(assert (= (and d!25739 (not c!16377)) b!96825))

(assert (= (and d!25739 res!48836) b!96822))

(assert (= (and b!96822 res!48833) b!96814))

(assert (= (and b!96822 (not res!48838)) b!96817))

(assert (= (and b!96817 res!48835) b!96834))

(assert (= (and b!96822 res!48837) b!96820))

(assert (= (and b!96820 c!16379) b!96824))

(assert (= (and b!96820 (not c!16379)) b!96821))

(assert (= (and b!96824 res!48834) b!96823))

(assert (= (or b!96824 b!96821) bm!9812))

(assert (= (and b!96820 res!48839) b!96828))

(assert (= (and b!96828 c!16376) b!96819))

(assert (= (and b!96828 (not c!16376)) b!96832))

(assert (= (and b!96819 res!48841) b!96829))

(assert (= (or b!96819 b!96832) bm!9807))

(declare-fun b_lambda!4285 () Bool)

(assert (=> (not b_lambda!4285) (not b!96834)))

(assert (=> b!96834 t!5484))

(declare-fun b_and!5929 () Bool)

(assert (= b_and!5925 (and (=> t!5484 result!3225) b_and!5929)))

(assert (=> b!96834 t!5486))

(declare-fun b_and!5931 () Bool)

(assert (= b_and!5927 (and (=> t!5486 result!3227) b_and!5931)))

(declare-fun m!105439 () Bool)

(assert (=> bm!9810 m!105439))

(declare-fun m!105441 () Bool)

(assert (=> b!96834 m!105441))

(assert (=> b!96834 m!103949))

(declare-fun m!105443 () Bool)

(assert (=> b!96834 m!105443))

(declare-fun m!105445 () Bool)

(assert (=> b!96834 m!105445))

(assert (=> b!96834 m!105445))

(declare-fun m!105447 () Bool)

(assert (=> b!96834 m!105447))

(assert (=> b!96834 m!105441))

(assert (=> b!96834 m!103949))

(declare-fun m!105449 () Bool)

(assert (=> b!96833 m!105449))

(declare-fun m!105451 () Bool)

(assert (=> b!96830 m!105451))

(assert (=> b!96830 m!105439))

(declare-fun m!105453 () Bool)

(assert (=> b!96830 m!105453))

(declare-fun m!105455 () Bool)

(assert (=> b!96830 m!105455))

(declare-fun m!105457 () Bool)

(assert (=> b!96830 m!105457))

(declare-fun m!105459 () Bool)

(assert (=> b!96830 m!105459))

(declare-fun m!105461 () Bool)

(assert (=> b!96830 m!105461))

(declare-fun m!105463 () Bool)

(assert (=> b!96830 m!105463))

(declare-fun m!105465 () Bool)

(assert (=> b!96830 m!105465))

(declare-fun m!105467 () Bool)

(assert (=> b!96830 m!105467))

(declare-fun m!105469 () Bool)

(assert (=> b!96830 m!105469))

(declare-fun m!105471 () Bool)

(assert (=> b!96830 m!105471))

(assert (=> b!96830 m!105445))

(assert (=> b!96830 m!105457))

(assert (=> b!96830 m!105461))

(declare-fun m!105473 () Bool)

(assert (=> b!96830 m!105473))

(declare-fun m!105475 () Bool)

(assert (=> b!96830 m!105475))

(assert (=> b!96830 m!105473))

(declare-fun m!105477 () Bool)

(assert (=> b!96830 m!105477))

(declare-fun m!105479 () Bool)

(assert (=> b!96830 m!105479))

(assert (=> b!96830 m!105465))

(assert (=> b!96816 m!105445))

(assert (=> b!96816 m!105445))

(declare-fun m!105481 () Bool)

(assert (=> b!96816 m!105481))

(declare-fun m!105483 () Bool)

(assert (=> b!96823 m!105483))

(declare-fun m!105485 () Bool)

(assert (=> bm!9808 m!105485))

(declare-fun m!105487 () Bool)

(assert (=> b!96829 m!105487))

(assert (=> b!96817 m!105445))

(assert (=> b!96817 m!105445))

(declare-fun m!105489 () Bool)

(assert (=> b!96817 m!105489))

(assert (=> b!96814 m!105445))

(assert (=> b!96814 m!105445))

(assert (=> b!96814 m!105481))

(assert (=> d!25739 m!103933))

(declare-fun m!105491 () Bool)

(assert (=> bm!9807 m!105491))

(declare-fun m!105493 () Bool)

(assert (=> bm!9812 m!105493))

(assert (=> d!25369 d!25739))

(declare-fun d!25741 () Bool)

(declare-fun e!63123 () Bool)

(assert (=> d!25741 e!63123))

(declare-fun res!48842 () Bool)

(assert (=> d!25741 (=> res!48842 e!63123)))

(declare-fun lt!48423 () Bool)

(assert (=> d!25741 (= res!48842 (not lt!48423))))

(declare-fun lt!48424 () Bool)

(assert (=> d!25741 (= lt!48423 lt!48424)))

(declare-fun lt!48422 () Unit!2849)

(declare-fun e!63124 () Unit!2849)

(assert (=> d!25741 (= lt!48422 e!63124)))

(declare-fun c!16380 () Bool)

(assert (=> d!25741 (= c!16380 lt!48424)))

(assert (=> d!25741 (= lt!48424 (containsKey!153 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25741 (= (contains!783 lt!48079 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48423)))

(declare-fun b!96835 () Bool)

(declare-fun lt!48421 () Unit!2849)

(assert (=> b!96835 (= e!63124 lt!48421)))

(assert (=> b!96835 (= lt!48421 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!96835 (isDefined!102 (getValueByKey!150 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96836 () Bool)

(declare-fun Unit!2897 () Unit!2849)

(assert (=> b!96836 (= e!63124 Unit!2897)))

(declare-fun b!96837 () Bool)

(assert (=> b!96837 (= e!63123 (isDefined!102 (getValueByKey!150 (toList!762 lt!48079) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25741 c!16380) b!96835))

(assert (= (and d!25741 (not c!16380)) b!96836))

(assert (= (and d!25741 (not res!48842)) b!96837))

(declare-fun m!105495 () Bool)

(assert (=> d!25741 m!105495))

(declare-fun m!105497 () Bool)

(assert (=> b!96835 m!105497))

(assert (=> b!96835 m!104461))

(assert (=> b!96835 m!104461))

(declare-fun m!105499 () Bool)

(assert (=> b!96835 m!105499))

(assert (=> b!96837 m!104461))

(assert (=> b!96837 m!104461))

(assert (=> b!96837 m!105499))

(assert (=> d!25411 d!25741))

(declare-fun e!63126 () Option!156)

(declare-fun b!96840 () Bool)

(assert (=> b!96840 (= e!63126 (getValueByKey!150 (t!5472 lt!48080) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96841 () Bool)

(assert (=> b!96841 (= e!63126 None!154)))

(declare-fun d!25743 () Bool)

(declare-fun c!16381 () Bool)

(assert (=> d!25743 (= c!16381 (and ((_ is Cons!1554) lt!48080) (= (_1!1154 (h!2147 lt!48080)) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!63125 () Option!156)

(assert (=> d!25743 (= (getValueByKey!150 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!63125)))

(declare-fun b!96838 () Bool)

(assert (=> b!96838 (= e!63125 (Some!155 (_2!1154 (h!2147 lt!48080))))))

(declare-fun b!96839 () Bool)

(assert (=> b!96839 (= e!63125 e!63126)))

(declare-fun c!16382 () Bool)

(assert (=> b!96839 (= c!16382 (and ((_ is Cons!1554) lt!48080) (not (= (_1!1154 (h!2147 lt!48080)) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!25743 c!16381) b!96838))

(assert (= (and d!25743 (not c!16381)) b!96839))

(assert (= (and b!96839 c!16382) b!96840))

(assert (= (and b!96839 (not c!16382)) b!96841))

(declare-fun m!105501 () Bool)

(assert (=> b!96840 m!105501))

(assert (=> d!25411 d!25743))

(declare-fun d!25745 () Bool)

(assert (=> d!25745 (= (getValueByKey!150 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!155 (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!48425 () Unit!2849)

(assert (=> d!25745 (= lt!48425 (choose!590 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!63127 () Bool)

(assert (=> d!25745 e!63127))

(declare-fun res!48843 () Bool)

(assert (=> d!25745 (=> (not res!48843) (not e!63127))))

(assert (=> d!25745 (= res!48843 (isStrictlySorted!290 lt!48080))))

(assert (=> d!25745 (= (lemmaContainsTupThenGetReturnValue!66 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48425)))

(declare-fun b!96842 () Bool)

(declare-fun res!48844 () Bool)

(assert (=> b!96842 (=> (not res!48844) (not e!63127))))

(assert (=> b!96842 (= res!48844 (containsKey!153 lt!48080 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96843 () Bool)

(assert (=> b!96843 (= e!63127 (contains!785 lt!48080 (tuple2!2287 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25745 res!48843) b!96842))

(assert (= (and b!96842 res!48844) b!96843))

(assert (=> d!25745 m!104455))

(declare-fun m!105503 () Bool)

(assert (=> d!25745 m!105503))

(declare-fun m!105505 () Bool)

(assert (=> d!25745 m!105505))

(declare-fun m!105507 () Bool)

(assert (=> b!96842 m!105507))

(declare-fun m!105509 () Bool)

(assert (=> b!96843 m!105509))

(assert (=> d!25411 d!25745))

(declare-fun d!25747 () Bool)

(declare-fun e!63132 () Bool)

(assert (=> d!25747 e!63132))

(declare-fun res!48846 () Bool)

(assert (=> d!25747 (=> (not res!48846) (not e!63132))))

(declare-fun lt!48426 () List!1558)

(assert (=> d!25747 (= res!48846 (isStrictlySorted!290 lt!48426))))

(declare-fun e!63129 () List!1558)

(assert (=> d!25747 (= lt!48426 e!63129)))

(declare-fun c!16386 () Bool)

(assert (=> d!25747 (= c!16386 (and ((_ is Cons!1554) (toList!762 e!62524)) (bvslt (_1!1154 (h!2147 (toList!762 e!62524))) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25747 (isStrictlySorted!290 (toList!762 e!62524))))

(assert (=> d!25747 (= (insertStrictlySorted!69 (toList!762 e!62524) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!48426)))

(declare-fun b!96844 () Bool)

(declare-fun call!9818 () List!1558)

(assert (=> b!96844 (= e!63129 call!9818)))

(declare-fun bm!9813 () Bool)

(declare-fun call!9817 () List!1558)

(assert (=> bm!9813 (= call!9817 call!9818)))

(declare-fun b!96845 () Bool)

(assert (=> b!96845 (= e!63132 (contains!785 lt!48426 (tuple2!2287 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!63130 () List!1558)

(declare-fun bm!9814 () Bool)

(assert (=> bm!9814 (= call!9818 ($colon$colon!76 e!63130 (ite c!16386 (h!2147 (toList!762 e!62524)) (tuple2!2287 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!16384 () Bool)

(assert (=> bm!9814 (= c!16384 c!16386)))

(declare-fun b!96846 () Bool)

(declare-fun res!48845 () Bool)

(assert (=> b!96846 (=> (not res!48845) (not e!63132))))

(assert (=> b!96846 (= res!48845 (containsKey!153 lt!48426 (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9815 () Bool)

(declare-fun call!9816 () List!1558)

(assert (=> bm!9815 (= call!9816 call!9817)))

(declare-fun b!96847 () Bool)

(declare-fun e!63128 () List!1558)

(assert (=> b!96847 (= e!63128 call!9816)))

(declare-fun b!96848 () Bool)

(declare-fun e!63131 () List!1558)

(assert (=> b!96848 (= e!63131 call!9817)))

(declare-fun b!96849 () Bool)

(assert (=> b!96849 (= e!63129 e!63131)))

(declare-fun c!16385 () Bool)

(assert (=> b!96849 (= c!16385 (and ((_ is Cons!1554) (toList!762 e!62524)) (= (_1!1154 (h!2147 (toList!762 e!62524))) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!96850 () Bool)

(declare-fun c!16383 () Bool)

(assert (=> b!96850 (= c!16383 (and ((_ is Cons!1554) (toList!762 e!62524)) (bvsgt (_1!1154 (h!2147 (toList!762 e!62524))) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!96850 (= e!63131 e!63128)))

(declare-fun b!96851 () Bool)

(assert (=> b!96851 (= e!63130 (insertStrictlySorted!69 (t!5472 (toList!762 e!62524)) (_1!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1154 (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96852 () Bool)

(assert (=> b!96852 (= e!63128 call!9816)))

(declare-fun b!96853 () Bool)

(assert (=> b!96853 (= e!63130 (ite c!16385 (t!5472 (toList!762 e!62524)) (ite c!16383 (Cons!1554 (h!2147 (toList!762 e!62524)) (t!5472 (toList!762 e!62524))) Nil!1555)))))

(assert (= (and d!25747 c!16386) b!96844))

(assert (= (and d!25747 (not c!16386)) b!96849))

(assert (= (and b!96849 c!16385) b!96848))

(assert (= (and b!96849 (not c!16385)) b!96850))

(assert (= (and b!96850 c!16383) b!96847))

(assert (= (and b!96850 (not c!16383)) b!96852))

(assert (= (or b!96847 b!96852) bm!9815))

(assert (= (or b!96848 bm!9815) bm!9813))

(assert (= (or b!96844 bm!9813) bm!9814))

(assert (= (and bm!9814 c!16384) b!96851))

(assert (= (and bm!9814 (not c!16384)) b!96853))

(assert (= (and d!25747 res!48846) b!96846))

(assert (= (and b!96846 res!48845) b!96845))

(declare-fun m!105511 () Bool)

(assert (=> b!96846 m!105511))

(declare-fun m!105513 () Bool)

(assert (=> b!96845 m!105513))

(declare-fun m!105515 () Bool)

(assert (=> bm!9814 m!105515))

(declare-fun m!105517 () Bool)

(assert (=> d!25747 m!105517))

(declare-fun m!105519 () Bool)

(assert (=> d!25747 m!105519))

(declare-fun m!105521 () Bool)

(assert (=> b!96851 m!105521))

(assert (=> d!25411 d!25747))

(assert (=> b!95998 d!25721))

(assert (=> b!95998 d!25311))

(declare-fun b!96854 () Bool)

(declare-fun e!63145 () Bool)

(assert (=> b!96854 (= e!63145 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96855 () Bool)

(declare-fun e!63133 () ListLongMap!1493)

(declare-fun call!9824 () ListLongMap!1493)

(assert (=> b!96855 (= e!63133 call!9824)))

(declare-fun b!96856 () Bool)

(declare-fun e!63144 () Bool)

(assert (=> b!96856 (= e!63144 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96857 () Bool)

(declare-fun e!63139 () Bool)

(declare-fun e!63143 () Bool)

(assert (=> b!96857 (= e!63139 e!63143)))

(declare-fun res!48849 () Bool)

(assert (=> b!96857 (=> (not res!48849) (not e!63143))))

(declare-fun lt!48432 () ListLongMap!1493)

(assert (=> b!96857 (= res!48849 (contains!783 lt!48432 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96857 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96858 () Bool)

(declare-fun e!63141 () ListLongMap!1493)

(assert (=> b!96858 (= e!63141 call!9824)))

(declare-fun b!96859 () Bool)

(declare-fun e!63134 () Bool)

(declare-fun e!63137 () Bool)

(assert (=> b!96859 (= e!63134 e!63137)))

(declare-fun res!48855 () Bool)

(declare-fun call!9822 () Bool)

(assert (=> b!96859 (= res!48855 call!9822)))

(assert (=> b!96859 (=> (not res!48855) (not e!63137))))

(declare-fun b!96860 () Bool)

(declare-fun res!48853 () Bool)

(declare-fun e!63136 () Bool)

(assert (=> b!96860 (=> (not res!48853) (not e!63136))))

(declare-fun e!63135 () Bool)

(assert (=> b!96860 (= res!48853 e!63135)))

(declare-fun c!16392 () Bool)

(assert (=> b!96860 (= c!16392 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96862 () Bool)

(declare-fun res!48851 () Bool)

(assert (=> b!96862 (=> (not res!48851) (not e!63136))))

(assert (=> b!96862 (= res!48851 e!63139)))

(declare-fun res!48852 () Bool)

(assert (=> b!96862 (=> res!48852 e!63139)))

(assert (=> b!96862 (= res!48852 (not e!63145))))

(declare-fun res!48847 () Bool)

(assert (=> b!96862 (=> (not res!48847) (not e!63145))))

(assert (=> b!96862 (= res!48847 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96863 () Bool)

(declare-fun e!63140 () Bool)

(assert (=> b!96863 (= e!63140 (= (apply!91 lt!48432 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9816 () Bool)

(declare-fun call!9819 () ListLongMap!1493)

(declare-fun call!9821 () ListLongMap!1493)

(assert (=> bm!9816 (= call!9819 call!9821)))

(declare-fun b!96864 () Bool)

(assert (=> b!96864 (= e!63135 e!63140)))

(declare-fun res!48848 () Bool)

(declare-fun call!9820 () Bool)

(assert (=> b!96864 (= res!48848 call!9820)))

(assert (=> b!96864 (=> (not res!48848) (not e!63140))))

(declare-fun b!96865 () Bool)

(declare-fun e!63142 () Unit!2849)

(declare-fun Unit!2898 () Unit!2849)

(assert (=> b!96865 (= e!63142 Unit!2898)))

(declare-fun b!96866 () Bool)

(declare-fun e!63138 () ListLongMap!1493)

(assert (=> b!96866 (= e!63138 e!63133)))

(declare-fun c!16391 () Bool)

(assert (=> b!96866 (= c!16391 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9817 () Bool)

(assert (=> bm!9817 (= call!9822 (contains!783 lt!48432 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96867 () Bool)

(declare-fun c!16387 () Bool)

(assert (=> b!96867 (= c!16387 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96867 (= e!63133 e!63141)))

(declare-fun call!9823 () ListLongMap!1493)

(declare-fun c!16388 () Bool)

(declare-fun bm!9818 () Bool)

(declare-fun call!9825 () ListLongMap!1493)

(assert (=> bm!9818 (= call!9823 (+!129 (ite c!16388 call!9825 (ite c!16391 call!9821 call!9819)) (ite (or c!16388 c!16391) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!96861 () Bool)

(assert (=> b!96861 (= e!63135 (not call!9820))))

(declare-fun d!25749 () Bool)

(assert (=> d!25749 e!63136))

(declare-fun res!48850 () Bool)

(assert (=> d!25749 (=> (not res!48850) (not e!63136))))

(assert (=> d!25749 (= res!48850 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!48447 () ListLongMap!1493)

(assert (=> d!25749 (= lt!48432 lt!48447)))

(declare-fun lt!48430 () Unit!2849)

(assert (=> d!25749 (= lt!48430 e!63142)))

(declare-fun c!16390 () Bool)

(assert (=> d!25749 (= c!16390 e!63144)))

(declare-fun res!48854 () Bool)

(assert (=> d!25749 (=> (not res!48854) (not e!63144))))

(assert (=> d!25749 (= res!48854 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25749 (= lt!48447 e!63138)))

(assert (=> d!25749 (= c!16388 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25749 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25749 (= (getCurrentListMap!452 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48432)))

(declare-fun bm!9819 () Bool)

(assert (=> bm!9819 (= call!9821 call!9825)))

(declare-fun bm!9820 () Bool)

(assert (=> bm!9820 (= call!9825 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96868 () Bool)

(assert (=> b!96868 (= e!63136 e!63134)))

(declare-fun c!16389 () Bool)

(assert (=> b!96868 (= c!16389 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96869 () Bool)

(assert (=> b!96869 (= e!63137 (= (apply!91 lt!48432 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96870 () Bool)

(declare-fun lt!48448 () Unit!2849)

(assert (=> b!96870 (= e!63142 lt!48448)))

(declare-fun lt!48427 () ListLongMap!1493)

(assert (=> b!96870 (= lt!48427 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48441 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48441 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48433 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48433 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48439 () Unit!2849)

(assert (=> b!96870 (= lt!48439 (addStillContains!67 lt!48427 lt!48441 (zeroValue!2341 newMap!16) lt!48433))))

(assert (=> b!96870 (contains!783 (+!129 lt!48427 (tuple2!2287 lt!48441 (zeroValue!2341 newMap!16))) lt!48433)))

(declare-fun lt!48443 () Unit!2849)

(assert (=> b!96870 (= lt!48443 lt!48439)))

(declare-fun lt!48444 () ListLongMap!1493)

(assert (=> b!96870 (= lt!48444 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48435 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48435 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48431 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48431 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48428 () Unit!2849)

(assert (=> b!96870 (= lt!48428 (addApplyDifferent!67 lt!48444 lt!48435 (minValue!2341 newMap!16) lt!48431))))

(assert (=> b!96870 (= (apply!91 (+!129 lt!48444 (tuple2!2287 lt!48435 (minValue!2341 newMap!16))) lt!48431) (apply!91 lt!48444 lt!48431))))

(declare-fun lt!48429 () Unit!2849)

(assert (=> b!96870 (= lt!48429 lt!48428)))

(declare-fun lt!48445 () ListLongMap!1493)

(assert (=> b!96870 (= lt!48445 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48438 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48438 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48446 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48446 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48434 () Unit!2849)

(assert (=> b!96870 (= lt!48434 (addApplyDifferent!67 lt!48445 lt!48438 (zeroValue!2341 newMap!16) lt!48446))))

(assert (=> b!96870 (= (apply!91 (+!129 lt!48445 (tuple2!2287 lt!48438 (zeroValue!2341 newMap!16))) lt!48446) (apply!91 lt!48445 lt!48446))))

(declare-fun lt!48440 () Unit!2849)

(assert (=> b!96870 (= lt!48440 lt!48434)))

(declare-fun lt!48437 () ListLongMap!1493)

(assert (=> b!96870 (= lt!48437 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48442 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48442 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48436 () (_ BitVec 64))

(assert (=> b!96870 (= lt!48436 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96870 (= lt!48448 (addApplyDifferent!67 lt!48437 lt!48442 (minValue!2341 newMap!16) lt!48436))))

(assert (=> b!96870 (= (apply!91 (+!129 lt!48437 (tuple2!2287 lt!48442 (minValue!2341 newMap!16))) lt!48436) (apply!91 lt!48437 lt!48436))))

(declare-fun bm!9821 () Bool)

(assert (=> bm!9821 (= call!9824 call!9823)))

(declare-fun b!96871 () Bool)

(assert (=> b!96871 (= e!63141 call!9819)))

(declare-fun bm!9822 () Bool)

(assert (=> bm!9822 (= call!9820 (contains!783 lt!48432 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96872 () Bool)

(assert (=> b!96872 (= e!63134 (not call!9822))))

(declare-fun b!96873 () Bool)

(assert (=> b!96873 (= e!63138 (+!129 call!9823 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96874 () Bool)

(assert (=> b!96874 (= e!63143 (= (apply!91 lt!48432 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96874 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))))))))

(assert (=> b!96874 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25749 c!16388) b!96873))

(assert (= (and d!25749 (not c!16388)) b!96866))

(assert (= (and b!96866 c!16391) b!96855))

(assert (= (and b!96866 (not c!16391)) b!96867))

(assert (= (and b!96867 c!16387) b!96858))

(assert (= (and b!96867 (not c!16387)) b!96871))

(assert (= (or b!96858 b!96871) bm!9816))

(assert (= (or b!96855 bm!9816) bm!9819))

(assert (= (or b!96855 b!96858) bm!9821))

(assert (= (or b!96873 bm!9819) bm!9820))

(assert (= (or b!96873 bm!9821) bm!9818))

(assert (= (and d!25749 res!48854) b!96856))

(assert (= (and d!25749 c!16390) b!96870))

(assert (= (and d!25749 (not c!16390)) b!96865))

(assert (= (and d!25749 res!48850) b!96862))

(assert (= (and b!96862 res!48847) b!96854))

(assert (= (and b!96862 (not res!48852)) b!96857))

(assert (= (and b!96857 res!48849) b!96874))

(assert (= (and b!96862 res!48851) b!96860))

(assert (= (and b!96860 c!16392) b!96864))

(assert (= (and b!96860 (not c!16392)) b!96861))

(assert (= (and b!96864 res!48848) b!96863))

(assert (= (or b!96864 b!96861) bm!9822))

(assert (= (and b!96860 res!48853) b!96868))

(assert (= (and b!96868 c!16389) b!96859))

(assert (= (and b!96868 (not c!16389)) b!96872))

(assert (= (and b!96859 res!48855) b!96869))

(assert (= (or b!96859 b!96872) bm!9817))

(declare-fun b_lambda!4287 () Bool)

(assert (=> (not b_lambda!4287) (not b!96874)))

(assert (=> b!96874 t!5484))

(declare-fun b_and!5933 () Bool)

(assert (= b_and!5929 (and (=> t!5484 result!3225) b_and!5933)))

(assert (=> b!96874 t!5486))

(declare-fun b_and!5935 () Bool)

(assert (= b_and!5931 (and (=> t!5486 result!3227) b_and!5935)))

(declare-fun m!105523 () Bool)

(assert (=> bm!9820 m!105523))

(declare-fun m!105525 () Bool)

(assert (=> b!96874 m!105525))

(assert (=> b!96874 m!103949))

(declare-fun m!105527 () Bool)

(assert (=> b!96874 m!105527))

(assert (=> b!96874 m!103953))

(assert (=> b!96874 m!103953))

(declare-fun m!105529 () Bool)

(assert (=> b!96874 m!105529))

(assert (=> b!96874 m!105525))

(assert (=> b!96874 m!103949))

(declare-fun m!105531 () Bool)

(assert (=> b!96873 m!105531))

(declare-fun m!105533 () Bool)

(assert (=> b!96870 m!105533))

(assert (=> b!96870 m!105523))

(declare-fun m!105535 () Bool)

(assert (=> b!96870 m!105535))

(declare-fun m!105537 () Bool)

(assert (=> b!96870 m!105537))

(declare-fun m!105539 () Bool)

(assert (=> b!96870 m!105539))

(declare-fun m!105541 () Bool)

(assert (=> b!96870 m!105541))

(declare-fun m!105543 () Bool)

(assert (=> b!96870 m!105543))

(declare-fun m!105545 () Bool)

(assert (=> b!96870 m!105545))

(declare-fun m!105547 () Bool)

(assert (=> b!96870 m!105547))

(declare-fun m!105549 () Bool)

(assert (=> b!96870 m!105549))

(declare-fun m!105551 () Bool)

(assert (=> b!96870 m!105551))

(declare-fun m!105553 () Bool)

(assert (=> b!96870 m!105553))

(assert (=> b!96870 m!103953))

(assert (=> b!96870 m!105539))

(assert (=> b!96870 m!105543))

(declare-fun m!105555 () Bool)

(assert (=> b!96870 m!105555))

(declare-fun m!105557 () Bool)

(assert (=> b!96870 m!105557))

(assert (=> b!96870 m!105555))

(declare-fun m!105559 () Bool)

(assert (=> b!96870 m!105559))

(declare-fun m!105561 () Bool)

(assert (=> b!96870 m!105561))

(assert (=> b!96870 m!105547))

(assert (=> b!96856 m!103953))

(assert (=> b!96856 m!103953))

(assert (=> b!96856 m!103989))

(declare-fun m!105563 () Bool)

(assert (=> b!96863 m!105563))

(declare-fun m!105565 () Bool)

(assert (=> bm!9818 m!105565))

(declare-fun m!105567 () Bool)

(assert (=> b!96869 m!105567))

(assert (=> b!96857 m!103953))

(assert (=> b!96857 m!103953))

(declare-fun m!105569 () Bool)

(assert (=> b!96857 m!105569))

(assert (=> b!96854 m!103953))

(assert (=> b!96854 m!103953))

(assert (=> b!96854 m!103989))

(assert (=> d!25749 m!103933))

(declare-fun m!105571 () Bool)

(assert (=> bm!9817 m!105571))

(declare-fun m!105573 () Bool)

(assert (=> bm!9822 m!105573))

(assert (=> b!95998 d!25749))

(declare-fun d!25751 () Bool)

(declare-fun res!48856 () Bool)

(declare-fun e!63146 () Bool)

(assert (=> d!25751 (=> res!48856 e!63146)))

(assert (=> d!25751 (= res!48856 (= (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25751 (= (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!63146)))

(declare-fun b!96875 () Bool)

(declare-fun e!63147 () Bool)

(assert (=> b!96875 (= e!63146 e!63147)))

(declare-fun res!48857 () Bool)

(assert (=> b!96875 (=> (not res!48857) (not e!63147))))

(assert (=> b!96875 (= res!48857 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96876 () Bool)

(assert (=> b!96876 (= e!63147 (arrayContainsKey!0 (_keys!4142 (v!2780 (underlying!333 thiss!992))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25751 (not res!48856)) b!96875))

(assert (= (and b!96875 res!48857) b!96876))

(declare-fun m!105575 () Bool)

(assert (=> d!25751 m!105575))

(assert (=> b!96876 m!103635))

(declare-fun m!105577 () Bool)

(assert (=> b!96876 m!105577))

(assert (=> b!95919 d!25751))

(declare-fun d!25753 () Bool)

(declare-fun lt!48449 () Bool)

(assert (=> d!25753 (= lt!48449 (select (content!100 (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!63149 () Bool)

(assert (=> d!25753 (= lt!48449 e!63149)))

(declare-fun res!48858 () Bool)

(assert (=> d!25753 (=> (not res!48858) (not e!63149))))

(assert (=> d!25753 (= res!48858 ((_ is Cons!1555) (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)))))

(assert (=> d!25753 (= (contains!784 (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!48449)))

(declare-fun b!96877 () Bool)

(declare-fun e!63148 () Bool)

(assert (=> b!96877 (= e!63149 e!63148)))

(declare-fun res!48859 () Bool)

(assert (=> b!96877 (=> res!48859 e!63148)))

(assert (=> b!96877 (= res!48859 (= (h!2148 (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!96878 () Bool)

(assert (=> b!96878 (= e!63148 (contains!784 (t!5473 (ite c!16130 (Cons!1555 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) Nil!1556) Nil!1556)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!25753 res!48858) b!96877))

(assert (= (and b!96877 (not res!48859)) b!96878))

(declare-fun m!105579 () Bool)

(assert (=> d!25753 m!105579))

(assert (=> d!25753 m!103921))

(declare-fun m!105581 () Bool)

(assert (=> d!25753 m!105581))

(assert (=> b!96878 m!103921))

(declare-fun m!105583 () Bool)

(assert (=> b!96878 m!105583))

(assert (=> b!95924 d!25753))

(declare-fun d!25755 () Bool)

(declare-fun e!63150 () Bool)

(assert (=> d!25755 e!63150))

(declare-fun res!48860 () Bool)

(assert (=> d!25755 (=> (not res!48860) (not e!63150))))

(declare-fun lt!48451 () ListLongMap!1493)

(assert (=> d!25755 (= res!48860 (contains!783 lt!48451 (_1!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun lt!48452 () List!1558)

(assert (=> d!25755 (= lt!48451 (ListLongMap!1494 lt!48452))))

(declare-fun lt!48453 () Unit!2849)

(declare-fun lt!48450 () Unit!2849)

(assert (=> d!25755 (= lt!48453 lt!48450)))

(assert (=> d!25755 (= (getValueByKey!150 lt!48452 (_1!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25755 (= lt!48450 (lemmaContainsTupThenGetReturnValue!66 lt!48452 (_1!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25755 (= lt!48452 (insertStrictlySorted!69 (toList!762 (ite c!16150 call!9708 (ite c!16153 call!9704 call!9702))) (_1!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25755 (= (+!129 (ite c!16150 call!9708 (ite c!16153 call!9704 call!9702)) (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) lt!48451)))

(declare-fun b!96879 () Bool)

(declare-fun res!48861 () Bool)

(assert (=> b!96879 (=> (not res!48861) (not e!63150))))

(assert (=> b!96879 (= res!48861 (= (getValueByKey!150 (toList!762 lt!48451) (_1!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))))

(declare-fun b!96880 () Bool)

(assert (=> b!96880 (= e!63150 (contains!785 (toList!762 lt!48451) (ite (or c!16150 c!16153) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (= (and d!25755 res!48860) b!96879))

(assert (= (and b!96879 res!48861) b!96880))

(declare-fun m!105585 () Bool)

(assert (=> d!25755 m!105585))

(declare-fun m!105587 () Bool)

(assert (=> d!25755 m!105587))

(declare-fun m!105589 () Bool)

(assert (=> d!25755 m!105589))

(declare-fun m!105591 () Bool)

(assert (=> d!25755 m!105591))

(declare-fun m!105593 () Bool)

(assert (=> b!96879 m!105593))

(declare-fun m!105595 () Bool)

(assert (=> b!96880 m!105595))

(assert (=> bm!9701 d!25755))

(declare-fun d!25757 () Bool)

(declare-fun e!63151 () Bool)

(assert (=> d!25757 e!63151))

(declare-fun res!48862 () Bool)

(assert (=> d!25757 (=> res!48862 e!63151)))

(declare-fun lt!48456 () Bool)

(assert (=> d!25757 (= res!48862 (not lt!48456))))

(declare-fun lt!48457 () Bool)

(assert (=> d!25757 (= lt!48456 lt!48457)))

(declare-fun lt!48455 () Unit!2849)

(declare-fun e!63152 () Unit!2849)

(assert (=> d!25757 (= lt!48455 e!63152)))

(declare-fun c!16393 () Bool)

(assert (=> d!25757 (= c!16393 lt!48457)))

(assert (=> d!25757 (= lt!48457 (containsKey!153 (toList!762 lt!47911) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25757 (= (contains!783 lt!47911 #b0000000000000000000000000000000000000000000000000000000000000000) lt!48456)))

(declare-fun b!96881 () Bool)

(declare-fun lt!48454 () Unit!2849)

(assert (=> b!96881 (= e!63152 lt!48454)))

(assert (=> b!96881 (= lt!48454 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47911) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!96881 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96882 () Bool)

(declare-fun Unit!2899 () Unit!2849)

(assert (=> b!96882 (= e!63152 Unit!2899)))

(declare-fun b!96883 () Bool)

(assert (=> b!96883 (= e!63151 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25757 c!16393) b!96881))

(assert (= (and d!25757 (not c!16393)) b!96882))

(assert (= (and d!25757 (not res!48862)) b!96883))

(declare-fun m!105597 () Bool)

(assert (=> d!25757 m!105597))

(declare-fun m!105599 () Bool)

(assert (=> b!96881 m!105599))

(declare-fun m!105601 () Bool)

(assert (=> b!96881 m!105601))

(assert (=> b!96881 m!105601))

(declare-fun m!105603 () Bool)

(assert (=> b!96881 m!105603))

(assert (=> b!96883 m!105601))

(assert (=> b!96883 m!105601))

(assert (=> b!96883 m!105603))

(assert (=> d!25355 d!25757))

(assert (=> d!25355 d!25261))

(declare-fun b!96884 () Bool)

(declare-fun e!63153 () Bool)

(declare-fun call!9826 () Bool)

(assert (=> b!96884 (= e!63153 call!9826)))

(declare-fun b!96885 () Bool)

(declare-fun e!63154 () Bool)

(assert (=> b!96885 (= e!63154 call!9826)))

(declare-fun d!25759 () Bool)

(declare-fun res!48863 () Bool)

(declare-fun e!63155 () Bool)

(assert (=> d!25759 (=> res!48863 e!63155)))

(assert (=> d!25759 (= res!48863 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25759 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4142 newMap!16) (mask!6541 newMap!16)) e!63155)))

(declare-fun b!96886 () Bool)

(assert (=> b!96886 (= e!63155 e!63153)))

(declare-fun c!16394 () Bool)

(assert (=> b!96886 (= c!16394 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!96887 () Bool)

(assert (=> b!96887 (= e!63153 e!63154)))

(declare-fun lt!48459 () (_ BitVec 64))

(assert (=> b!96887 (= lt!48459 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!48460 () Unit!2849)

(assert (=> b!96887 (= lt!48460 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4142 newMap!16) lt!48459 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!96887 (arrayContainsKey!0 (_keys!4142 newMap!16) lt!48459 #b00000000000000000000000000000000)))

(declare-fun lt!48458 () Unit!2849)

(assert (=> b!96887 (= lt!48458 lt!48460)))

(declare-fun res!48864 () Bool)

(assert (=> b!96887 (= res!48864 (= (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4142 newMap!16) (mask!6541 newMap!16)) (Found!246 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!96887 (=> (not res!48864) (not e!63154))))

(declare-fun bm!9823 () Bool)

(assert (=> bm!9823 (= call!9826 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (= (and d!25759 (not res!48863)) b!96886))

(assert (= (and b!96886 c!16394) b!96887))

(assert (= (and b!96886 (not c!16394)) b!96884))

(assert (= (and b!96887 res!48864) b!96885))

(assert (= (or b!96885 b!96884) bm!9823))

(assert (=> b!96886 m!104915))

(assert (=> b!96886 m!104915))

(assert (=> b!96886 m!104917))

(assert (=> b!96887 m!104915))

(declare-fun m!105605 () Bool)

(assert (=> b!96887 m!105605))

(declare-fun m!105607 () Bool)

(assert (=> b!96887 m!105607))

(assert (=> b!96887 m!104915))

(declare-fun m!105609 () Bool)

(assert (=> b!96887 m!105609))

(declare-fun m!105611 () Bool)

(assert (=> bm!9823 m!105611))

(assert (=> bm!9708 d!25759))

(declare-fun d!25761 () Bool)

(declare-fun e!63156 () Bool)

(assert (=> d!25761 e!63156))

(declare-fun res!48865 () Bool)

(assert (=> d!25761 (=> res!48865 e!63156)))

(declare-fun lt!48463 () Bool)

(assert (=> d!25761 (= res!48865 (not lt!48463))))

(declare-fun lt!48464 () Bool)

(assert (=> d!25761 (= lt!48463 lt!48464)))

(declare-fun lt!48462 () Unit!2849)

(declare-fun e!63157 () Unit!2849)

(assert (=> d!25761 (= lt!48462 e!63157)))

(declare-fun c!16395 () Bool)

(assert (=> d!25761 (= c!16395 lt!48464)))

(assert (=> d!25761 (= lt!48464 (containsKey!153 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25761 (= (contains!783 lt!47886 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48463)))

(declare-fun b!96888 () Bool)

(declare-fun lt!48461 () Unit!2849)

(assert (=> b!96888 (= e!63157 lt!48461)))

(assert (=> b!96888 (= lt!48461 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> b!96888 (isDefined!102 (getValueByKey!150 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96889 () Bool)

(declare-fun Unit!2900 () Unit!2849)

(assert (=> b!96889 (= e!63157 Unit!2900)))

(declare-fun b!96890 () Bool)

(assert (=> b!96890 (= e!63156 (isDefined!102 (getValueByKey!150 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25761 c!16395) b!96888))

(assert (= (and d!25761 (not c!16395)) b!96889))

(assert (= (and d!25761 (not res!48865)) b!96890))

(declare-fun m!105613 () Bool)

(assert (=> d!25761 m!105613))

(declare-fun m!105615 () Bool)

(assert (=> b!96888 m!105615))

(assert (=> b!96888 m!104173))

(assert (=> b!96888 m!104173))

(declare-fun m!105617 () Bool)

(assert (=> b!96888 m!105617))

(assert (=> b!96890 m!104173))

(assert (=> b!96890 m!104173))

(assert (=> b!96890 m!105617))

(assert (=> d!25351 d!25761))

(declare-fun e!63159 () Option!156)

(declare-fun b!96893 () Bool)

(assert (=> b!96893 (= e!63159 (getValueByKey!150 (t!5472 lt!47887) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96894 () Bool)

(assert (=> b!96894 (= e!63159 None!154)))

(declare-fun c!16396 () Bool)

(declare-fun d!25763 () Bool)

(assert (=> d!25763 (= c!16396 (and ((_ is Cons!1554) lt!47887) (= (_1!1154 (h!2147 lt!47887)) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63158 () Option!156)

(assert (=> d!25763 (= (getValueByKey!150 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!63158)))

(declare-fun b!96891 () Bool)

(assert (=> b!96891 (= e!63158 (Some!155 (_2!1154 (h!2147 lt!47887))))))

(declare-fun b!96892 () Bool)

(assert (=> b!96892 (= e!63158 e!63159)))

(declare-fun c!16397 () Bool)

(assert (=> b!96892 (= c!16397 (and ((_ is Cons!1554) lt!47887) (not (= (_1!1154 (h!2147 lt!47887)) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25763 c!16396) b!96891))

(assert (= (and d!25763 (not c!16396)) b!96892))

(assert (= (and b!96892 c!16397) b!96893))

(assert (= (and b!96892 (not c!16397)) b!96894))

(declare-fun m!105619 () Bool)

(assert (=> b!96893 m!105619))

(assert (=> d!25351 d!25763))

(declare-fun d!25765 () Bool)

(assert (=> d!25765 (= (getValueByKey!150 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48465 () Unit!2849)

(assert (=> d!25765 (= lt!48465 (choose!590 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!63160 () Bool)

(assert (=> d!25765 e!63160))

(declare-fun res!48866 () Bool)

(assert (=> d!25765 (=> (not res!48866) (not e!63160))))

(assert (=> d!25765 (= res!48866 (isStrictlySorted!290 lt!47887))))

(assert (=> d!25765 (= (lemmaContainsTupThenGetReturnValue!66 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48465)))

(declare-fun b!96895 () Bool)

(declare-fun res!48867 () Bool)

(assert (=> b!96895 (=> (not res!48867) (not e!63160))))

(assert (=> b!96895 (= res!48867 (containsKey!153 lt!47887 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96896 () Bool)

(assert (=> b!96896 (= e!63160 (contains!785 lt!47887 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25765 res!48866) b!96895))

(assert (= (and b!96895 res!48867) b!96896))

(assert (=> d!25765 m!104167))

(declare-fun m!105621 () Bool)

(assert (=> d!25765 m!105621))

(declare-fun m!105623 () Bool)

(assert (=> d!25765 m!105623))

(declare-fun m!105625 () Bool)

(assert (=> b!96895 m!105625))

(declare-fun m!105627 () Bool)

(assert (=> b!96896 m!105627))

(assert (=> d!25351 d!25765))

(declare-fun d!25767 () Bool)

(declare-fun e!63165 () Bool)

(assert (=> d!25767 e!63165))

(declare-fun res!48869 () Bool)

(assert (=> d!25767 (=> (not res!48869) (not e!63165))))

(declare-fun lt!48466 () List!1558)

(assert (=> d!25767 (= res!48869 (isStrictlySorted!290 lt!48466))))

(declare-fun e!63162 () List!1558)

(assert (=> d!25767 (= lt!48466 e!63162)))

(declare-fun c!16401 () Bool)

(assert (=> d!25767 (= c!16401 (and ((_ is Cons!1554) (toList!762 lt!47672)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47672))) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25767 (isStrictlySorted!290 (toList!762 lt!47672))))

(assert (=> d!25767 (= (insertStrictlySorted!69 (toList!762 lt!47672) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48466)))

(declare-fun b!96897 () Bool)

(declare-fun call!9829 () List!1558)

(assert (=> b!96897 (= e!63162 call!9829)))

(declare-fun bm!9824 () Bool)

(declare-fun call!9828 () List!1558)

(assert (=> bm!9824 (= call!9828 call!9829)))

(declare-fun b!96898 () Bool)

(assert (=> b!96898 (= e!63165 (contains!785 lt!48466 (tuple2!2287 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63163 () List!1558)

(declare-fun bm!9825 () Bool)

(assert (=> bm!9825 (= call!9829 ($colon$colon!76 e!63163 (ite c!16401 (h!2147 (toList!762 lt!47672)) (tuple2!2287 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun c!16399 () Bool)

(assert (=> bm!9825 (= c!16399 c!16401)))

(declare-fun b!96899 () Bool)

(declare-fun res!48868 () Bool)

(assert (=> b!96899 (=> (not res!48868) (not e!63165))))

(assert (=> b!96899 (= res!48868 (containsKey!153 lt!48466 (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun bm!9826 () Bool)

(declare-fun call!9827 () List!1558)

(assert (=> bm!9826 (= call!9827 call!9828)))

(declare-fun b!96900 () Bool)

(declare-fun e!63161 () List!1558)

(assert (=> b!96900 (= e!63161 call!9827)))

(declare-fun b!96901 () Bool)

(declare-fun e!63164 () List!1558)

(assert (=> b!96901 (= e!63164 call!9828)))

(declare-fun b!96902 () Bool)

(assert (=> b!96902 (= e!63162 e!63164)))

(declare-fun c!16400 () Bool)

(assert (=> b!96902 (= c!16400 (and ((_ is Cons!1554) (toList!762 lt!47672)) (= (_1!1154 (h!2147 (toList!762 lt!47672))) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun c!16398 () Bool)

(declare-fun b!96903 () Bool)

(assert (=> b!96903 (= c!16398 (and ((_ is Cons!1554) (toList!762 lt!47672)) (bvsgt (_1!1154 (h!2147 (toList!762 lt!47672))) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!96903 (= e!63164 e!63161)))

(declare-fun b!96904 () Bool)

(assert (=> b!96904 (= e!63163 (insertStrictlySorted!69 (t!5472 (toList!762 lt!47672)) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96905 () Bool)

(assert (=> b!96905 (= e!63161 call!9827)))

(declare-fun b!96906 () Bool)

(assert (=> b!96906 (= e!63163 (ite c!16400 (t!5472 (toList!762 lt!47672)) (ite c!16398 (Cons!1554 (h!2147 (toList!762 lt!47672)) (t!5472 (toList!762 lt!47672))) Nil!1555)))))

(assert (= (and d!25767 c!16401) b!96897))

(assert (= (and d!25767 (not c!16401)) b!96902))

(assert (= (and b!96902 c!16400) b!96901))

(assert (= (and b!96902 (not c!16400)) b!96903))

(assert (= (and b!96903 c!16398) b!96900))

(assert (= (and b!96903 (not c!16398)) b!96905))

(assert (= (or b!96900 b!96905) bm!9826))

(assert (= (or b!96901 bm!9826) bm!9824))

(assert (= (or b!96897 bm!9824) bm!9825))

(assert (= (and bm!9825 c!16399) b!96904))

(assert (= (and bm!9825 (not c!16399)) b!96906))

(assert (= (and d!25767 res!48869) b!96899))

(assert (= (and b!96899 res!48868) b!96898))

(declare-fun m!105629 () Bool)

(assert (=> b!96899 m!105629))

(declare-fun m!105631 () Bool)

(assert (=> b!96898 m!105631))

(declare-fun m!105633 () Bool)

(assert (=> bm!9825 m!105633))

(declare-fun m!105635 () Bool)

(assert (=> d!25767 m!105635))

(declare-fun m!105637 () Bool)

(assert (=> d!25767 m!105637))

(declare-fun m!105639 () Bool)

(assert (=> b!96904 m!105639))

(assert (=> d!25351 d!25767))

(declare-fun d!25769 () Bool)

(assert (=> d!25769 (= (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47673)) (v!2786 (getValueByKey!150 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47673)))))

(assert (=> d!25345 d!25769))

(declare-fun e!63167 () Option!156)

(declare-fun b!96909 () Bool)

(assert (=> b!96909 (= e!63167 (getValueByKey!150 (t!5472 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!47673))))

(declare-fun b!96910 () Bool)

(assert (=> b!96910 (= e!63167 None!154)))

(declare-fun c!16402 () Bool)

(declare-fun d!25771 () Bool)

(assert (=> d!25771 (= c!16402 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47673)))))

(declare-fun e!63166 () Option!156)

(assert (=> d!25771 (= (getValueByKey!150 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47673) e!63166)))

(declare-fun b!96907 () Bool)

(assert (=> b!96907 (= e!63166 (Some!155 (_2!1154 (h!2147 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(declare-fun b!96908 () Bool)

(assert (=> b!96908 (= e!63166 e!63167)))

(declare-fun c!16403 () Bool)

(assert (=> b!96908 (= c!16403 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))) (not (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47672 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47673))))))

(assert (= (and d!25771 c!16402) b!96907))

(assert (= (and d!25771 (not c!16402)) b!96908))

(assert (= (and b!96908 c!16403) b!96909))

(assert (= (and b!96908 (not c!16403)) b!96910))

(declare-fun m!105641 () Bool)

(assert (=> b!96909 m!105641))

(assert (=> d!25345 d!25771))

(declare-fun d!25773 () Bool)

(declare-fun e!63168 () Bool)

(assert (=> d!25773 e!63168))

(declare-fun res!48870 () Bool)

(assert (=> d!25773 (=> res!48870 e!63168)))

(declare-fun lt!48469 () Bool)

(assert (=> d!25773 (= res!48870 (not lt!48469))))

(declare-fun lt!48470 () Bool)

(assert (=> d!25773 (= lt!48469 lt!48470)))

(declare-fun lt!48468 () Unit!2849)

(declare-fun e!63169 () Unit!2849)

(assert (=> d!25773 (= lt!48468 e!63169)))

(declare-fun c!16404 () Bool)

(assert (=> d!25773 (= c!16404 lt!48470)))

(assert (=> d!25773 (= lt!48470 (containsKey!153 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> d!25773 (= (contains!783 lt!48036 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48469)))

(declare-fun b!96911 () Bool)

(declare-fun lt!48467 () Unit!2849)

(assert (=> b!96911 (= e!63169 lt!48467)))

(assert (=> b!96911 (= lt!48467 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(assert (=> b!96911 (isDefined!102 (getValueByKey!150 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96912 () Bool)

(declare-fun Unit!2901 () Unit!2849)

(assert (=> b!96912 (= e!63169 Unit!2901)))

(declare-fun b!96913 () Bool)

(assert (=> b!96913 (= e!63168 (isDefined!102 (getValueByKey!150 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25773 c!16404) b!96911))

(assert (= (and d!25773 (not c!16404)) b!96912))

(assert (= (and d!25773 (not res!48870)) b!96913))

(declare-fun m!105643 () Bool)

(assert (=> d!25773 m!105643))

(declare-fun m!105645 () Bool)

(assert (=> b!96911 m!105645))

(assert (=> b!96911 m!104359))

(assert (=> b!96911 m!104359))

(declare-fun m!105647 () Bool)

(assert (=> b!96911 m!105647))

(assert (=> b!96913 m!104359))

(assert (=> b!96913 m!104359))

(assert (=> b!96913 m!105647))

(assert (=> d!25377 d!25773))

(declare-fun b!96916 () Bool)

(declare-fun e!63171 () Option!156)

(assert (=> b!96916 (= e!63171 (getValueByKey!150 (t!5472 lt!48037) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96917 () Bool)

(assert (=> b!96917 (= e!63171 None!154)))

(declare-fun d!25775 () Bool)

(declare-fun c!16405 () Bool)

(assert (=> d!25775 (= c!16405 (and ((_ is Cons!1554) lt!48037) (= (_1!1154 (h!2147 lt!48037)) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63170 () Option!156)

(assert (=> d!25775 (= (getValueByKey!150 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!63170)))

(declare-fun b!96914 () Bool)

(assert (=> b!96914 (= e!63170 (Some!155 (_2!1154 (h!2147 lt!48037))))))

(declare-fun b!96915 () Bool)

(assert (=> b!96915 (= e!63170 e!63171)))

(declare-fun c!16406 () Bool)

(assert (=> b!96915 (= c!16406 (and ((_ is Cons!1554) lt!48037) (not (= (_1!1154 (h!2147 lt!48037)) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25775 c!16405) b!96914))

(assert (= (and d!25775 (not c!16405)) b!96915))

(assert (= (and b!96915 c!16406) b!96916))

(assert (= (and b!96915 (not c!16406)) b!96917))

(declare-fun m!105649 () Bool)

(assert (=> b!96916 m!105649))

(assert (=> d!25377 d!25775))

(declare-fun d!25777 () Bool)

(assert (=> d!25777 (= (getValueByKey!150 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun lt!48471 () Unit!2849)

(assert (=> d!25777 (= lt!48471 (choose!590 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun e!63172 () Bool)

(assert (=> d!25777 e!63172))

(declare-fun res!48871 () Bool)

(assert (=> d!25777 (=> (not res!48871) (not e!63172))))

(assert (=> d!25777 (= res!48871 (isStrictlySorted!290 lt!48037))))

(assert (=> d!25777 (= (lemmaContainsTupThenGetReturnValue!66 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48471)))

(declare-fun b!96918 () Bool)

(declare-fun res!48872 () Bool)

(assert (=> b!96918 (=> (not res!48872) (not e!63172))))

(assert (=> b!96918 (= res!48872 (containsKey!153 lt!48037 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96919 () Bool)

(assert (=> b!96919 (= e!63172 (contains!785 lt!48037 (tuple2!2287 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (= (and d!25777 res!48871) b!96918))

(assert (= (and b!96918 res!48872) b!96919))

(assert (=> d!25777 m!104353))

(declare-fun m!105651 () Bool)

(assert (=> d!25777 m!105651))

(declare-fun m!105653 () Bool)

(assert (=> d!25777 m!105653))

(declare-fun m!105655 () Bool)

(assert (=> b!96918 m!105655))

(declare-fun m!105657 () Bool)

(assert (=> b!96919 m!105657))

(assert (=> d!25377 d!25777))

(declare-fun d!25779 () Bool)

(declare-fun e!63177 () Bool)

(assert (=> d!25779 e!63177))

(declare-fun res!48874 () Bool)

(assert (=> d!25779 (=> (not res!48874) (not e!63177))))

(declare-fun lt!48472 () List!1558)

(assert (=> d!25779 (= res!48874 (isStrictlySorted!290 lt!48472))))

(declare-fun e!63174 () List!1558)

(assert (=> d!25779 (= lt!48472 e!63174)))

(declare-fun c!16410 () Bool)

(assert (=> d!25779 (= c!16410 (and ((_ is Cons!1554) (toList!762 call!9613)) (bvslt (_1!1154 (h!2147 (toList!762 call!9613))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25779 (isStrictlySorted!290 (toList!762 call!9613))))

(assert (=> d!25779 (= (insertStrictlySorted!69 (toList!762 call!9613) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!48472)))

(declare-fun b!96920 () Bool)

(declare-fun call!9832 () List!1558)

(assert (=> b!96920 (= e!63174 call!9832)))

(declare-fun bm!9827 () Bool)

(declare-fun call!9831 () List!1558)

(assert (=> bm!9827 (= call!9831 call!9832)))

(declare-fun b!96921 () Bool)

(assert (=> b!96921 (= e!63177 (contains!785 lt!48472 (tuple2!2287 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63175 () List!1558)

(declare-fun bm!9828 () Bool)

(assert (=> bm!9828 (= call!9832 ($colon$colon!76 e!63175 (ite c!16410 (h!2147 (toList!762 call!9613)) (tuple2!2287 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun c!16408 () Bool)

(assert (=> bm!9828 (= c!16408 c!16410)))

(declare-fun b!96922 () Bool)

(declare-fun res!48873 () Bool)

(assert (=> b!96922 (=> (not res!48873) (not e!63177))))

(assert (=> b!96922 (= res!48873 (containsKey!153 lt!48472 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun bm!9829 () Bool)

(declare-fun call!9830 () List!1558)

(assert (=> bm!9829 (= call!9830 call!9831)))

(declare-fun b!96923 () Bool)

(declare-fun e!63173 () List!1558)

(assert (=> b!96923 (= e!63173 call!9830)))

(declare-fun b!96924 () Bool)

(declare-fun e!63176 () List!1558)

(assert (=> b!96924 (= e!63176 call!9831)))

(declare-fun b!96925 () Bool)

(assert (=> b!96925 (= e!63174 e!63176)))

(declare-fun c!16409 () Bool)

(assert (=> b!96925 (= c!16409 (and ((_ is Cons!1554) (toList!762 call!9613)) (= (_1!1154 (h!2147 (toList!762 call!9613))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!96926 () Bool)

(declare-fun c!16407 () Bool)

(assert (=> b!96926 (= c!16407 (and ((_ is Cons!1554) (toList!762 call!9613)) (bvsgt (_1!1154 (h!2147 (toList!762 call!9613))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!96926 (= e!63176 e!63173)))

(declare-fun b!96927 () Bool)

(assert (=> b!96927 (= e!63175 (insertStrictlySorted!69 (t!5472 (toList!762 call!9613)) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96928 () Bool)

(assert (=> b!96928 (= e!63173 call!9830)))

(declare-fun b!96929 () Bool)

(assert (=> b!96929 (= e!63175 (ite c!16409 (t!5472 (toList!762 call!9613)) (ite c!16407 (Cons!1554 (h!2147 (toList!762 call!9613)) (t!5472 (toList!762 call!9613))) Nil!1555)))))

(assert (= (and d!25779 c!16410) b!96920))

(assert (= (and d!25779 (not c!16410)) b!96925))

(assert (= (and b!96925 c!16409) b!96924))

(assert (= (and b!96925 (not c!16409)) b!96926))

(assert (= (and b!96926 c!16407) b!96923))

(assert (= (and b!96926 (not c!16407)) b!96928))

(assert (= (or b!96923 b!96928) bm!9829))

(assert (= (or b!96924 bm!9829) bm!9827))

(assert (= (or b!96920 bm!9827) bm!9828))

(assert (= (and bm!9828 c!16408) b!96927))

(assert (= (and bm!9828 (not c!16408)) b!96929))

(assert (= (and d!25779 res!48874) b!96922))

(assert (= (and b!96922 res!48873) b!96921))

(declare-fun m!105659 () Bool)

(assert (=> b!96922 m!105659))

(declare-fun m!105661 () Bool)

(assert (=> b!96921 m!105661))

(declare-fun m!105663 () Bool)

(assert (=> bm!9828 m!105663))

(declare-fun m!105665 () Bool)

(assert (=> d!25779 m!105665))

(declare-fun m!105667 () Bool)

(assert (=> d!25779 m!105667))

(declare-fun m!105669 () Bool)

(assert (=> b!96927 m!105669))

(assert (=> d!25377 d!25779))

(declare-fun d!25781 () Bool)

(declare-fun lt!48473 () Bool)

(assert (=> d!25781 (= lt!48473 (select (content!101 (toList!762 lt!48079)) (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!63178 () Bool)

(assert (=> d!25781 (= lt!48473 e!63178)))

(declare-fun res!48876 () Bool)

(assert (=> d!25781 (=> (not res!48876) (not e!63178))))

(assert (=> d!25781 (= res!48876 ((_ is Cons!1554) (toList!762 lt!48079)))))

(assert (=> d!25781 (= (contains!785 (toList!762 lt!48079) (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!48473)))

(declare-fun b!96930 () Bool)

(declare-fun e!63179 () Bool)

(assert (=> b!96930 (= e!63178 e!63179)))

(declare-fun res!48875 () Bool)

(assert (=> b!96930 (=> res!48875 e!63179)))

(assert (=> b!96930 (= res!48875 (= (h!2147 (toList!762 lt!48079)) (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!96931 () Bool)

(assert (=> b!96931 (= e!63179 (contains!785 (t!5472 (toList!762 lt!48079)) (ite c!16117 (ite c!16109 (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25781 res!48876) b!96930))

(assert (= (and b!96930 (not res!48875)) b!96931))

(declare-fun m!105671 () Bool)

(assert (=> d!25781 m!105671))

(declare-fun m!105673 () Bool)

(assert (=> d!25781 m!105673))

(declare-fun m!105675 () Bool)

(assert (=> b!96931 m!105675))

(assert (=> b!96254 d!25781))

(declare-fun d!25783 () Bool)

(assert (=> d!25783 (= (apply!91 lt!47818 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47818) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3994 () Bool)

(assert (= bs!3994 d!25783))

(assert (=> bs!3994 m!104705))

(assert (=> bs!3994 m!104705))

(declare-fun m!105677 () Bool)

(assert (=> bs!3994 m!105677))

(assert (=> b!95987 d!25783))

(assert (=> d!25371 d!25421))

(declare-fun b!96934 () Bool)

(declare-fun e!63181 () Option!156)

(assert (=> b!96934 (= e!63181 (getValueByKey!150 (t!5472 (t!5472 (toList!762 lt!47565))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96935 () Bool)

(assert (=> b!96935 (= e!63181 None!154)))

(declare-fun d!25785 () Bool)

(declare-fun c!16411 () Bool)

(assert (=> d!25785 (= c!16411 (and ((_ is Cons!1554) (t!5472 (toList!762 lt!47565))) (= (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun e!63180 () Option!156)

(assert (=> d!25785 (= (getValueByKey!150 (t!5472 (toList!762 lt!47565)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!63180)))

(declare-fun b!96932 () Bool)

(assert (=> b!96932 (= e!63180 (Some!155 (_2!1154 (h!2147 (t!5472 (toList!762 lt!47565))))))))

(declare-fun b!96933 () Bool)

(assert (=> b!96933 (= e!63180 e!63181)))

(declare-fun c!16412 () Bool)

(assert (=> b!96933 (= c!16412 (and ((_ is Cons!1554) (t!5472 (toList!762 lt!47565))) (not (= (_1!1154 (h!2147 (t!5472 (toList!762 lt!47565)))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))))

(assert (= (and d!25785 c!16411) b!96932))

(assert (= (and d!25785 (not c!16411)) b!96933))

(assert (= (and b!96933 c!16412) b!96934))

(assert (= (and b!96933 (not c!16412)) b!96935))

(assert (=> b!96934 m!103635))

(declare-fun m!105679 () Bool)

(assert (=> b!96934 m!105679))

(assert (=> b!96015 d!25785))

(declare-fun b!96938 () Bool)

(declare-fun e!63183 () Option!156)

(assert (=> b!96938 (= e!63183 (getValueByKey!150 (t!5472 (toList!762 lt!47886)) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96939 () Bool)

(assert (=> b!96939 (= e!63183 None!154)))

(declare-fun d!25787 () Bool)

(declare-fun c!16413 () Bool)

(assert (=> d!25787 (= c!16413 (and ((_ is Cons!1554) (toList!762 lt!47886)) (= (_1!1154 (h!2147 (toList!762 lt!47886))) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63182 () Option!156)

(assert (=> d!25787 (= (getValueByKey!150 (toList!762 lt!47886) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!63182)))

(declare-fun b!96936 () Bool)

(assert (=> b!96936 (= e!63182 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47886)))))))

(declare-fun b!96937 () Bool)

(assert (=> b!96937 (= e!63182 e!63183)))

(declare-fun c!16414 () Bool)

(assert (=> b!96937 (= c!16414 (and ((_ is Cons!1554) (toList!762 lt!47886)) (not (= (_1!1154 (h!2147 (toList!762 lt!47886))) (_1!1154 (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25787 c!16413) b!96936))

(assert (= (and d!25787 (not c!16413)) b!96937))

(assert (= (and b!96937 c!16414) b!96938))

(assert (= (and b!96937 (not c!16414)) b!96939))

(declare-fun m!105681 () Bool)

(assert (=> b!96938 m!105681))

(assert (=> b!96062 d!25787))

(declare-fun d!25789 () Bool)

(assert (=> d!25789 (= (apply!91 lt!47789 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1281 (getValueByKey!150 (toList!762 lt!47789) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3995 () Bool)

(assert (= bs!3995 d!25789))

(assert (=> bs!3995 m!104741))

(assert (=> bs!3995 m!104741))

(declare-fun m!105683 () Bool)

(assert (=> bs!3995 m!105683))

(assert (=> b!95942 d!25789))

(declare-fun b!96942 () Bool)

(declare-fun e!63185 () Option!156)

(assert (=> b!96942 (= e!63185 (getValueByKey!150 (t!5472 (toList!762 lt!48036)) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))

(declare-fun b!96943 () Bool)

(assert (=> b!96943 (= e!63185 None!154)))

(declare-fun d!25791 () Bool)

(declare-fun c!16415 () Bool)

(assert (=> d!25791 (= c!16415 (and ((_ is Cons!1554) (toList!762 lt!48036)) (= (_1!1154 (h!2147 (toList!762 lt!48036))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63184 () Option!156)

(assert (=> d!25791 (= (getValueByKey!150 (toList!762 lt!48036) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) e!63184)))

(declare-fun b!96940 () Bool)

(assert (=> b!96940 (= e!63184 (Some!155 (_2!1154 (h!2147 (toList!762 lt!48036)))))))

(declare-fun b!96941 () Bool)

(assert (=> b!96941 (= e!63184 e!63185)))

(declare-fun c!16416 () Bool)

(assert (=> b!96941 (= c!16416 (and ((_ is Cons!1554) (toList!762 lt!48036)) (not (= (_1!1154 (h!2147 (toList!762 lt!48036))) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25791 c!16415) b!96940))

(assert (= (and d!25791 (not c!16415)) b!96941))

(assert (= (and b!96941 c!16416) b!96942))

(assert (= (and b!96941 (not c!16416)) b!96943))

(declare-fun m!105685 () Bool)

(assert (=> b!96942 m!105685))

(assert (=> b!96179 d!25791))

(declare-fun d!25793 () Bool)

(assert (=> d!25793 (= (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47658)) (v!2786 (getValueByKey!150 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47658)))))

(assert (=> d!25359 d!25793))

(declare-fun b!96946 () Bool)

(declare-fun e!63187 () Option!156)

(assert (=> b!96946 (= e!63187 (getValueByKey!150 (t!5472 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!47658))))

(declare-fun b!96947 () Bool)

(assert (=> b!96947 (= e!63187 None!154)))

(declare-fun c!16417 () Bool)

(declare-fun d!25795 () Bool)

(assert (=> d!25795 (= c!16417 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47658)))))

(declare-fun e!63186 () Option!156)

(assert (=> d!25795 (= (getValueByKey!150 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47658) e!63186)))

(declare-fun b!96944 () Bool)

(assert (=> b!96944 (= e!63186 (Some!155 (_2!1154 (h!2147 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(declare-fun b!96945 () Bool)

(assert (=> b!96945 (= e!63186 e!63187)))

(declare-fun c!16418 () Bool)

(assert (=> b!96945 (= c!16418 (and ((_ is Cons!1554) (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (not (= (_1!1154 (h!2147 (toList!762 (+!129 lt!47671 (tuple2!2287 lt!47662 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))) lt!47658))))))

(assert (= (and d!25795 c!16417) b!96944))

(assert (= (and d!25795 (not c!16417)) b!96945))

(assert (= (and b!96945 c!16418) b!96946))

(assert (= (and b!96945 (not c!16418)) b!96947))

(declare-fun m!105687 () Bool)

(assert (=> b!96946 m!105687))

(assert (=> d!25359 d!25795))

(declare-fun d!25797 () Bool)

(declare-fun e!63188 () Bool)

(assert (=> d!25797 e!63188))

(declare-fun res!48877 () Bool)

(assert (=> d!25797 (=> (not res!48877) (not e!63188))))

(declare-fun lt!48475 () ListLongMap!1493)

(assert (=> d!25797 (= res!48877 (contains!783 lt!48475 (_1!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(declare-fun lt!48476 () List!1558)

(assert (=> d!25797 (= lt!48475 (ListLongMap!1494 lt!48476))))

(declare-fun lt!48477 () Unit!2849)

(declare-fun lt!48474 () Unit!2849)

(assert (=> d!25797 (= lt!48477 lt!48474)))

(assert (=> d!25797 (= (getValueByKey!150 lt!48476 (_1!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25797 (= lt!48474 (lemmaContainsTupThenGetReturnValue!66 lt!48476 (_1!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25797 (= lt!48476 (insertStrictlySorted!69 (toList!762 (ite c!16134 call!9698 (ite c!16137 call!9694 call!9692))) (_1!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) (_2!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))))

(assert (=> d!25797 (= (+!129 (ite c!16134 call!9698 (ite c!16137 call!9694 call!9692)) (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))) lt!48475)))

(declare-fun b!96948 () Bool)

(declare-fun res!48878 () Bool)

(assert (=> b!96948 (=> (not res!48878) (not e!63188))))

(assert (=> b!96948 (= res!48878 (= (getValueByKey!150 (toList!762 lt!48475) (_1!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))))

(declare-fun b!96949 () Bool)

(assert (=> b!96949 (= e!63188 (contains!785 (toList!762 lt!48475) (ite (or c!16134 c!16137) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(assert (= (and d!25797 res!48877) b!96948))

(assert (= (and b!96948 res!48878) b!96949))

(declare-fun m!105689 () Bool)

(assert (=> d!25797 m!105689))

(declare-fun m!105691 () Bool)

(assert (=> d!25797 m!105691))

(declare-fun m!105693 () Bool)

(assert (=> d!25797 m!105693))

(declare-fun m!105695 () Bool)

(assert (=> d!25797 m!105695))

(declare-fun m!105697 () Bool)

(assert (=> b!96948 m!105697))

(declare-fun m!105699 () Bool)

(assert (=> b!96949 m!105699))

(assert (=> bm!9691 d!25797))

(declare-fun d!25799 () Bool)

(declare-fun res!48879 () Bool)

(declare-fun e!63191 () Bool)

(assert (=> d!25799 (=> res!48879 e!63191)))

(assert (=> d!25799 (= res!48879 (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 (_2!1155 lt!47762)))))))

(assert (=> d!25799 (= (arrayNoDuplicates!0 (_keys!4142 (_2!1155 lt!47762)) #b00000000000000000000000000000000 Nil!1556) e!63191)))

(declare-fun b!96950 () Bool)

(declare-fun e!63192 () Bool)

(declare-fun call!9833 () Bool)

(assert (=> b!96950 (= e!63192 call!9833)))

(declare-fun b!96951 () Bool)

(declare-fun e!63189 () Bool)

(assert (=> b!96951 (= e!63191 e!63189)))

(declare-fun res!48881 () Bool)

(assert (=> b!96951 (=> (not res!48881) (not e!63189))))

(declare-fun e!63190 () Bool)

(assert (=> b!96951 (= res!48881 (not e!63190))))

(declare-fun res!48880 () Bool)

(assert (=> b!96951 (=> (not res!48880) (not e!63190))))

(assert (=> b!96951 (= res!48880 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun b!96952 () Bool)

(assert (=> b!96952 (= e!63192 call!9833)))

(declare-fun bm!9830 () Bool)

(declare-fun c!16419 () Bool)

(assert (=> bm!9830 (= call!9833 (arrayNoDuplicates!0 (_keys!4142 (_2!1155 lt!47762)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!16419 (Cons!1555 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000) Nil!1556) Nil!1556)))))

(declare-fun b!96953 () Bool)

(assert (=> b!96953 (= e!63189 e!63192)))

(assert (=> b!96953 (= c!16419 (validKeyInArray!0 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(declare-fun b!96954 () Bool)

(assert (=> b!96954 (= e!63190 (contains!784 Nil!1556 (select (arr!1994 (_keys!4142 (_2!1155 lt!47762))) #b00000000000000000000000000000000)))))

(assert (= (and d!25799 (not res!48879)) b!96951))

(assert (= (and b!96951 res!48880) b!96954))

(assert (= (and b!96951 res!48881) b!96953))

(assert (= (and b!96953 c!16419) b!96950))

(assert (= (and b!96953 (not c!16419)) b!96952))

(assert (= (or b!96950 b!96952) bm!9830))

(assert (=> b!96951 m!104601))

(assert (=> b!96951 m!104601))

(assert (=> b!96951 m!104637))

(assert (=> bm!9830 m!104601))

(declare-fun m!105701 () Bool)

(assert (=> bm!9830 m!105701))

(assert (=> b!96953 m!104601))

(assert (=> b!96953 m!104601))

(assert (=> b!96953 m!104637))

(assert (=> b!96954 m!104601))

(assert (=> b!96954 m!104601))

(declare-fun m!105703 () Bool)

(assert (=> b!96954 m!105703))

(assert (=> b!95971 d!25799))

(declare-fun d!25801 () Bool)

(assert (=> d!25801 (= (apply!91 lt!47911 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1281 (getValueByKey!150 (toList!762 lt!47911) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3996 () Bool)

(assert (= bs!3996 d!25801))

(assert (=> bs!3996 m!103777))

(declare-fun m!105705 () Bool)

(assert (=> bs!3996 m!105705))

(assert (=> bs!3996 m!105705))

(declare-fun m!105707 () Bool)

(assert (=> bs!3996 m!105707))

(assert (=> b!96091 d!25801))

(assert (=> b!96091 d!25297))

(declare-fun d!25803 () Bool)

(declare-fun e!63193 () Bool)

(assert (=> d!25803 e!63193))

(declare-fun res!48882 () Bool)

(assert (=> d!25803 (=> (not res!48882) (not e!63193))))

(declare-fun lt!48479 () ListLongMap!1493)

(assert (=> d!25803 (= res!48882 (contains!783 lt!48479 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(declare-fun lt!48480 () List!1558)

(assert (=> d!25803 (= lt!48479 (ListLongMap!1494 lt!48480))))

(declare-fun lt!48481 () Unit!2849)

(declare-fun lt!48478 () Unit!2849)

(assert (=> d!25803 (= lt!48481 lt!48478)))

(assert (=> d!25803 (= (getValueByKey!150 lt!48480 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25803 (= lt!48478 (lemmaContainsTupThenGetReturnValue!66 lt!48480 (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25803 (= lt!48480 (insertStrictlySorted!69 (toList!762 call!9731) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))))))

(assert (=> d!25803 (= (+!129 call!9731 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))) lt!48479)))

(declare-fun b!96955 () Bool)

(declare-fun res!48883 () Bool)

(assert (=> b!96955 (=> (not res!48883) (not e!63193))))

(assert (=> b!96955 (= res!48883 (= (getValueByKey!150 (toList!762 lt!48479) (_1!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16))))) (Some!155 (_2!1154 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))))

(declare-fun b!96956 () Bool)

(assert (=> b!96956 (= e!63193 (contains!785 (toList!762 lt!48479) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!16117 (ite c!16109 (minValue!2341 newMap!16) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2341 newMap!16)))))))

(assert (= (and d!25803 res!48882) b!96955))

(assert (= (and b!96955 res!48883) b!96956))

(declare-fun m!105709 () Bool)

(assert (=> d!25803 m!105709))

(declare-fun m!105711 () Bool)

(assert (=> d!25803 m!105711))

(declare-fun m!105713 () Bool)

(assert (=> d!25803 m!105713))

(declare-fun m!105715 () Bool)

(assert (=> d!25803 m!105715))

(declare-fun m!105717 () Bool)

(assert (=> b!96955 m!105717))

(declare-fun m!105719 () Bool)

(assert (=> b!96956 m!105719))

(assert (=> b!96177 d!25803))

(declare-fun d!25805 () Bool)

(declare-fun e!63194 () Bool)

(assert (=> d!25805 e!63194))

(declare-fun res!48884 () Bool)

(assert (=> d!25805 (=> res!48884 e!63194)))

(declare-fun lt!48484 () Bool)

(assert (=> d!25805 (= res!48884 (not lt!48484))))

(declare-fun lt!48485 () Bool)

(assert (=> d!25805 (= lt!48484 lt!48485)))

(declare-fun lt!48483 () Unit!2849)

(declare-fun e!63195 () Unit!2849)

(assert (=> d!25805 (= lt!48483 e!63195)))

(declare-fun c!16420 () Bool)

(assert (=> d!25805 (= c!16420 lt!48485)))

(assert (=> d!25805 (= lt!48485 (containsKey!153 (toList!762 (map!1246 (_2!1155 lt!48003))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> d!25805 (= (contains!783 (map!1246 (_2!1155 lt!48003)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!48484)))

(declare-fun b!96957 () Bool)

(declare-fun lt!48482 () Unit!2849)

(assert (=> b!96957 (= e!63195 lt!48482)))

(assert (=> b!96957 (= lt!48482 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (map!1246 (_2!1155 lt!48003))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (=> b!96957 (isDefined!102 (getValueByKey!150 (toList!762 (map!1246 (_2!1155 lt!48003))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!96958 () Bool)

(declare-fun Unit!2902 () Unit!2849)

(assert (=> b!96958 (= e!63195 Unit!2902)))

(declare-fun b!96959 () Bool)

(assert (=> b!96959 (= e!63194 (isDefined!102 (getValueByKey!150 (toList!762 (map!1246 (_2!1155 lt!48003))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (= (and d!25805 c!16420) b!96957))

(assert (= (and d!25805 (not c!16420)) b!96958))

(assert (= (and d!25805 (not res!48884)) b!96959))

(assert (=> d!25805 m!103635))

(declare-fun m!105721 () Bool)

(assert (=> d!25805 m!105721))

(assert (=> b!96957 m!103635))

(declare-fun m!105723 () Bool)

(assert (=> b!96957 m!105723))

(assert (=> b!96957 m!103635))

(declare-fun m!105725 () Bool)

(assert (=> b!96957 m!105725))

(assert (=> b!96957 m!105725))

(declare-fun m!105727 () Bool)

(assert (=> b!96957 m!105727))

(assert (=> b!96959 m!103635))

(assert (=> b!96959 m!105725))

(assert (=> b!96959 m!105725))

(assert (=> b!96959 m!105727))

(assert (=> b!96156 d!25805))

(assert (=> b!96156 d!25649))

(assert (=> b!95927 d!25439))

(declare-fun d!25807 () Bool)

(declare-fun lt!48486 () Bool)

(assert (=> d!25807 (= lt!48486 (select (content!101 (toList!762 lt!48036)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!63196 () Bool)

(assert (=> d!25807 (= lt!48486 e!63196)))

(declare-fun res!48886 () Bool)

(assert (=> d!25807 (=> (not res!48886) (not e!63196))))

(assert (=> d!25807 (= res!48886 ((_ is Cons!1554) (toList!762 lt!48036)))))

(assert (=> d!25807 (= (contains!785 (toList!762 lt!48036) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48486)))

(declare-fun b!96960 () Bool)

(declare-fun e!63197 () Bool)

(assert (=> b!96960 (= e!63196 e!63197)))

(declare-fun res!48885 () Bool)

(assert (=> b!96960 (=> res!48885 e!63197)))

(assert (=> b!96960 (= res!48885 (= (h!2147 (toList!762 lt!48036)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!96961 () Bool)

(assert (=> b!96961 (= e!63197 (contains!785 (t!5472 (toList!762 lt!48036)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25807 res!48886) b!96960))

(assert (= (and b!96960 (not res!48885)) b!96961))

(declare-fun m!105729 () Bool)

(assert (=> d!25807 m!105729))

(declare-fun m!105731 () Bool)

(assert (=> d!25807 m!105731))

(declare-fun m!105733 () Bool)

(assert (=> b!96961 m!105733))

(assert (=> b!96180 d!25807))

(assert (=> d!25393 d!25285))

(assert (=> b!96004 d!25381))

(assert (=> b!96096 d!25297))

(declare-fun d!25809 () Bool)

(declare-fun e!63198 () Bool)

(assert (=> d!25809 e!63198))

(declare-fun res!48887 () Bool)

(assert (=> d!25809 (=> (not res!48887) (not e!63198))))

(declare-fun lt!48488 () ListLongMap!1493)

(assert (=> d!25809 (= res!48887 (contains!783 lt!48488 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!48489 () List!1558)

(assert (=> d!25809 (= lt!48488 (ListLongMap!1494 lt!48489))))

(declare-fun lt!48490 () Unit!2849)

(declare-fun lt!48487 () Unit!2849)

(assert (=> d!25809 (= lt!48490 lt!48487)))

(assert (=> d!25809 (= (getValueByKey!150 lt!48489 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25809 (= lt!48487 (lemmaContainsTupThenGetReturnValue!66 lt!48489 (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25809 (= lt!48489 (insertStrictlySorted!69 (toList!762 call!9714) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25809 (= (+!129 call!9714 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!48488)))

(declare-fun b!96962 () Bool)

(declare-fun res!48888 () Bool)

(assert (=> b!96962 (=> (not res!48888) (not e!63198))))

(assert (=> b!96962 (= res!48888 (= (getValueByKey!150 (toList!762 lt!48488) (_1!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!155 (_2!1154 (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!96963 () Bool)

(assert (=> b!96963 (= e!63198 (contains!785 (toList!762 lt!48488) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25809 res!48887) b!96962))

(assert (= (and b!96962 res!48888) b!96963))

(declare-fun m!105735 () Bool)

(assert (=> d!25809 m!105735))

(declare-fun m!105737 () Bool)

(assert (=> d!25809 m!105737))

(declare-fun m!105739 () Bool)

(assert (=> d!25809 m!105739))

(declare-fun m!105741 () Bool)

(assert (=> d!25809 m!105741))

(declare-fun m!105743 () Bool)

(assert (=> b!96962 m!105743))

(declare-fun m!105745 () Bool)

(assert (=> b!96963 m!105745))

(assert (=> b!96096 d!25809))

(declare-fun d!25811 () Bool)

(declare-fun e!63199 () Bool)

(assert (=> d!25811 e!63199))

(declare-fun res!48889 () Bool)

(assert (=> d!25811 (=> (not res!48889) (not e!63199))))

(declare-fun lt!48492 () ListLongMap!1493)

(assert (=> d!25811 (= res!48889 (contains!783 lt!48492 (_1!1154 (tuple2!2287 lt!47909 lt!47910))))))

(declare-fun lt!48493 () List!1558)

(assert (=> d!25811 (= lt!48492 (ListLongMap!1494 lt!48493))))

(declare-fun lt!48494 () Unit!2849)

(declare-fun lt!48491 () Unit!2849)

(assert (=> d!25811 (= lt!48494 lt!48491)))

(assert (=> d!25811 (= (getValueByKey!150 lt!48493 (_1!1154 (tuple2!2287 lt!47909 lt!47910))) (Some!155 (_2!1154 (tuple2!2287 lt!47909 lt!47910))))))

(assert (=> d!25811 (= lt!48491 (lemmaContainsTupThenGetReturnValue!66 lt!48493 (_1!1154 (tuple2!2287 lt!47909 lt!47910)) (_2!1154 (tuple2!2287 lt!47909 lt!47910))))))

(assert (=> d!25811 (= lt!48493 (insertStrictlySorted!69 (toList!762 lt!47912) (_1!1154 (tuple2!2287 lt!47909 lt!47910)) (_2!1154 (tuple2!2287 lt!47909 lt!47910))))))

(assert (=> d!25811 (= (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910)) lt!48492)))

(declare-fun b!96964 () Bool)

(declare-fun res!48890 () Bool)

(assert (=> b!96964 (=> (not res!48890) (not e!63199))))

(assert (=> b!96964 (= res!48890 (= (getValueByKey!150 (toList!762 lt!48492) (_1!1154 (tuple2!2287 lt!47909 lt!47910))) (Some!155 (_2!1154 (tuple2!2287 lt!47909 lt!47910)))))))

(declare-fun b!96965 () Bool)

(assert (=> b!96965 (= e!63199 (contains!785 (toList!762 lt!48492) (tuple2!2287 lt!47909 lt!47910)))))

(assert (= (and d!25811 res!48889) b!96964))

(assert (= (and b!96964 res!48890) b!96965))

(declare-fun m!105747 () Bool)

(assert (=> d!25811 m!105747))

(declare-fun m!105749 () Bool)

(assert (=> d!25811 m!105749))

(declare-fun m!105751 () Bool)

(assert (=> d!25811 m!105751))

(declare-fun m!105753 () Bool)

(assert (=> d!25811 m!105753))

(declare-fun m!105755 () Bool)

(assert (=> b!96964 m!105755))

(declare-fun m!105757 () Bool)

(assert (=> b!96965 m!105757))

(assert (=> b!96096 d!25811))

(declare-fun d!25813 () Bool)

(assert (=> d!25813 (not (contains!783 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910)) lt!47907))))

(declare-fun lt!48497 () Unit!2849)

(declare-fun choose!592 (ListLongMap!1493 (_ BitVec 64) V!3137 (_ BitVec 64)) Unit!2849)

(assert (=> d!25813 (= lt!48497 (choose!592 lt!47912 lt!47909 lt!47910 lt!47907))))

(declare-fun e!63202 () Bool)

(assert (=> d!25813 e!63202))

(declare-fun res!48893 () Bool)

(assert (=> d!25813 (=> (not res!48893) (not e!63202))))

(assert (=> d!25813 (= res!48893 (not (contains!783 lt!47912 lt!47907)))))

(assert (=> d!25813 (= (addStillNotContains!41 lt!47912 lt!47909 lt!47910 lt!47907) lt!48497)))

(declare-fun b!96969 () Bool)

(assert (=> b!96969 (= e!63202 (not (= lt!47909 lt!47907)))))

(assert (= (and d!25813 res!48893) b!96969))

(assert (=> d!25813 m!104199))

(assert (=> d!25813 m!104199))

(assert (=> d!25813 m!104203))

(declare-fun m!105759 () Bool)

(assert (=> d!25813 m!105759))

(declare-fun m!105761 () Bool)

(assert (=> d!25813 m!105761))

(assert (=> b!96096 d!25813))

(declare-fun d!25815 () Bool)

(declare-fun e!63203 () Bool)

(assert (=> d!25815 e!63203))

(declare-fun res!48894 () Bool)

(assert (=> d!25815 (=> res!48894 e!63203)))

(declare-fun lt!48500 () Bool)

(assert (=> d!25815 (= res!48894 (not lt!48500))))

(declare-fun lt!48501 () Bool)

(assert (=> d!25815 (= lt!48500 lt!48501)))

(declare-fun lt!48499 () Unit!2849)

(declare-fun e!63204 () Unit!2849)

(assert (=> d!25815 (= lt!48499 e!63204)))

(declare-fun c!16421 () Bool)

(assert (=> d!25815 (= c!16421 lt!48501)))

(assert (=> d!25815 (= lt!48501 (containsKey!153 (toList!762 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910))) lt!47907))))

(assert (=> d!25815 (= (contains!783 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910)) lt!47907) lt!48500)))

(declare-fun b!96970 () Bool)

(declare-fun lt!48498 () Unit!2849)

(assert (=> b!96970 (= e!63204 lt!48498)))

(assert (=> b!96970 (= lt!48498 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910))) lt!47907))))

(assert (=> b!96970 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910))) lt!47907))))

(declare-fun b!96971 () Bool)

(declare-fun Unit!2903 () Unit!2849)

(assert (=> b!96971 (= e!63204 Unit!2903)))

(declare-fun b!96972 () Bool)

(assert (=> b!96972 (= e!63203 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47912 (tuple2!2287 lt!47909 lt!47910))) lt!47907)))))

(assert (= (and d!25815 c!16421) b!96970))

(assert (= (and d!25815 (not c!16421)) b!96971))

(assert (= (and d!25815 (not res!48894)) b!96972))

(declare-fun m!105763 () Bool)

(assert (=> d!25815 m!105763))

(declare-fun m!105765 () Bool)

(assert (=> b!96970 m!105765))

(declare-fun m!105767 () Bool)

(assert (=> b!96970 m!105767))

(assert (=> b!96970 m!105767))

(declare-fun m!105769 () Bool)

(assert (=> b!96970 m!105769))

(assert (=> b!96972 m!105767))

(assert (=> b!96972 m!105767))

(assert (=> b!96972 m!105769))

(assert (=> b!96096 d!25815))

(declare-fun d!25817 () Bool)

(declare-fun e!63205 () Bool)

(assert (=> d!25817 e!63205))

(declare-fun res!48895 () Bool)

(assert (=> d!25817 (=> res!48895 e!63205)))

(declare-fun lt!48504 () Bool)

(assert (=> d!25817 (= res!48895 (not lt!48504))))

(declare-fun lt!48505 () Bool)

(assert (=> d!25817 (= lt!48504 lt!48505)))

(declare-fun lt!48503 () Unit!2849)

(declare-fun e!63206 () Unit!2849)

(assert (=> d!25817 (= lt!48503 e!63206)))

(declare-fun c!16422 () Bool)

(assert (=> d!25817 (= c!16422 lt!48505)))

(assert (=> d!25817 (= lt!48505 (containsKey!153 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))

(assert (=> d!25817 (= (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))) lt!48504)))

(declare-fun b!96973 () Bool)

(declare-fun lt!48502 () Unit!2849)

(assert (=> b!96973 (= e!63206 lt!48502)))

(assert (=> b!96973 (= lt!48502 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))

(assert (=> b!96973 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752))))))

(declare-fun b!96974 () Bool)

(declare-fun Unit!2904 () Unit!2849)

(assert (=> b!96974 (= e!63206 Unit!2904)))

(declare-fun b!96975 () Bool)

(assert (=> b!96975 (= e!63205 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!47752)))))))

(assert (= (and d!25817 c!16422) b!96973))

(assert (= (and d!25817 (not c!16422)) b!96974))

(assert (= (and d!25817 (not res!48895)) b!96975))

(assert (=> d!25817 m!103877))

(declare-fun m!105771 () Bool)

(assert (=> d!25817 m!105771))

(assert (=> b!96973 m!103877))

(declare-fun m!105773 () Bool)

(assert (=> b!96973 m!105773))

(assert (=> b!96973 m!103877))

(declare-fun m!105775 () Bool)

(assert (=> b!96973 m!105775))

(assert (=> b!96973 m!105775))

(declare-fun m!105777 () Bool)

(assert (=> b!96973 m!105777))

(assert (=> b!96975 m!103877))

(assert (=> b!96975 m!105775))

(assert (=> b!96975 m!105775))

(assert (=> b!96975 m!105777))

(assert (=> b!95995 d!25817))

(declare-fun b!96976 () Bool)

(declare-fun e!63219 () Bool)

(assert (=> b!96976 (= e!63219 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96977 () Bool)

(declare-fun e!63207 () ListLongMap!1493)

(declare-fun call!9839 () ListLongMap!1493)

(assert (=> b!96977 (= e!63207 call!9839)))

(declare-fun b!96978 () Bool)

(declare-fun e!63218 () Bool)

(assert (=> b!96978 (= e!63218 (validKeyInArray!0 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!96979 () Bool)

(declare-fun e!63213 () Bool)

(declare-fun e!63217 () Bool)

(assert (=> b!96979 (= e!63213 e!63217)))

(declare-fun res!48898 () Bool)

(assert (=> b!96979 (=> (not res!48898) (not e!63217))))

(declare-fun lt!48511 () ListLongMap!1493)

(assert (=> b!96979 (= res!48898 (contains!783 lt!48511 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!96979 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96980 () Bool)

(declare-fun e!63215 () ListLongMap!1493)

(assert (=> b!96980 (= e!63215 call!9839)))

(declare-fun b!96981 () Bool)

(declare-fun e!63208 () Bool)

(declare-fun e!63211 () Bool)

(assert (=> b!96981 (= e!63208 e!63211)))

(declare-fun res!48904 () Bool)

(declare-fun call!9837 () Bool)

(assert (=> b!96981 (= res!48904 call!9837)))

(assert (=> b!96981 (=> (not res!48904) (not e!63211))))

(declare-fun b!96982 () Bool)

(declare-fun res!48902 () Bool)

(declare-fun e!63210 () Bool)

(assert (=> b!96982 (=> (not res!48902) (not e!63210))))

(declare-fun e!63209 () Bool)

(assert (=> b!96982 (= res!48902 e!63209)))

(declare-fun c!16428 () Bool)

(assert (=> b!96982 (= c!16428 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!96984 () Bool)

(declare-fun res!48900 () Bool)

(assert (=> b!96984 (=> (not res!48900) (not e!63210))))

(assert (=> b!96984 (= res!48900 e!63213)))

(declare-fun res!48901 () Bool)

(assert (=> b!96984 (=> res!48901 e!63213)))

(assert (=> b!96984 (= res!48901 (not e!63219))))

(declare-fun res!48896 () Bool)

(assert (=> b!96984 (=> (not res!48896) (not e!63219))))

(assert (=> b!96984 (= res!48896 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(declare-fun b!96985 () Bool)

(declare-fun e!63214 () Bool)

(assert (=> b!96985 (= e!63214 (= (apply!91 lt!48511 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2341 newMap!16)))))

(declare-fun bm!9831 () Bool)

(declare-fun call!9834 () ListLongMap!1493)

(declare-fun call!9836 () ListLongMap!1493)

(assert (=> bm!9831 (= call!9834 call!9836)))

(declare-fun b!96986 () Bool)

(assert (=> b!96986 (= e!63209 e!63214)))

(declare-fun res!48897 () Bool)

(declare-fun call!9835 () Bool)

(assert (=> b!96986 (= res!48897 call!9835)))

(assert (=> b!96986 (=> (not res!48897) (not e!63214))))

(declare-fun b!96987 () Bool)

(declare-fun e!63216 () Unit!2849)

(declare-fun Unit!2905 () Unit!2849)

(assert (=> b!96987 (= e!63216 Unit!2905)))

(declare-fun b!96988 () Bool)

(declare-fun e!63212 () ListLongMap!1493)

(assert (=> b!96988 (= e!63212 e!63207)))

(declare-fun c!16427 () Bool)

(assert (=> b!96988 (= c!16427 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!9832 () Bool)

(assert (=> bm!9832 (= call!9837 (contains!783 lt!48511 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96989 () Bool)

(declare-fun c!16423 () Bool)

(assert (=> b!96989 (= c!16423 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!96989 (= e!63207 e!63215)))

(declare-fun call!9840 () ListLongMap!1493)

(declare-fun c!16424 () Bool)

(declare-fun bm!9833 () Bool)

(declare-fun call!9838 () ListLongMap!1493)

(assert (=> bm!9833 (= call!9838 (+!129 (ite c!16424 call!9840 (ite c!16427 call!9836 call!9834)) (ite (or c!16424 c!16427) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 newMap!16)) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16)))))))

(declare-fun b!96983 () Bool)

(assert (=> b!96983 (= e!63209 (not call!9835))))

(declare-fun d!25819 () Bool)

(assert (=> d!25819 e!63210))

(declare-fun res!48899 () Bool)

(assert (=> d!25819 (=> (not res!48899) (not e!63210))))

(assert (=> d!25819 (= res!48899 (or (bvsge #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))))

(declare-fun lt!48526 () ListLongMap!1493)

(assert (=> d!25819 (= lt!48511 lt!48526)))

(declare-fun lt!48509 () Unit!2849)

(assert (=> d!25819 (= lt!48509 e!63216)))

(declare-fun c!16426 () Bool)

(assert (=> d!25819 (= c!16426 e!63218)))

(declare-fun res!48903 () Bool)

(assert (=> d!25819 (=> (not res!48903) (not e!63218))))

(assert (=> d!25819 (= res!48903 (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (=> d!25819 (= lt!48526 e!63212)))

(assert (=> d!25819 (= c!16424 (and (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25819 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25819 (= (getCurrentListMap!452 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48511)))

(declare-fun bm!9834 () Bool)

(assert (=> bm!9834 (= call!9836 call!9840)))

(declare-fun bm!9835 () Bool)

(assert (=> bm!9835 (= call!9840 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun b!96990 () Bool)

(assert (=> b!96990 (= e!63210 e!63208)))

(declare-fun c!16425 () Bool)

(assert (=> b!96990 (= c!16425 (not (= (bvand (extraKeys!2281 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!96991 () Bool)

(assert (=> b!96991 (= e!63211 (= (apply!91 lt!48511 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2341 newMap!16)))))

(declare-fun b!96992 () Bool)

(declare-fun lt!48527 () Unit!2849)

(assert (=> b!96992 (= e!63216 lt!48527)))

(declare-fun lt!48506 () ListLongMap!1493)

(assert (=> b!96992 (= lt!48506 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48520 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48520 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48512 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48512 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48518 () Unit!2849)

(assert (=> b!96992 (= lt!48518 (addStillContains!67 lt!48506 lt!48520 (zeroValue!2341 newMap!16) lt!48512))))

(assert (=> b!96992 (contains!783 (+!129 lt!48506 (tuple2!2287 lt!48520 (zeroValue!2341 newMap!16))) lt!48512)))

(declare-fun lt!48522 () Unit!2849)

(assert (=> b!96992 (= lt!48522 lt!48518)))

(declare-fun lt!48523 () ListLongMap!1493)

(assert (=> b!96992 (= lt!48523 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48514 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48510 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48510 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48507 () Unit!2849)

(assert (=> b!96992 (= lt!48507 (addApplyDifferent!67 lt!48523 lt!48514 (minValue!2341 newMap!16) lt!48510))))

(assert (=> b!96992 (= (apply!91 (+!129 lt!48523 (tuple2!2287 lt!48514 (minValue!2341 newMap!16))) lt!48510) (apply!91 lt!48523 lt!48510))))

(declare-fun lt!48508 () Unit!2849)

(assert (=> b!96992 (= lt!48508 lt!48507)))

(declare-fun lt!48524 () ListLongMap!1493)

(assert (=> b!96992 (= lt!48524 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48517 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48517 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48525 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48525 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!48513 () Unit!2849)

(assert (=> b!96992 (= lt!48513 (addApplyDifferent!67 lt!48524 lt!48517 (zeroValue!2341 newMap!16) lt!48525))))

(assert (=> b!96992 (= (apply!91 (+!129 lt!48524 (tuple2!2287 lt!48517 (zeroValue!2341 newMap!16))) lt!48525) (apply!91 lt!48524 lt!48525))))

(declare-fun lt!48519 () Unit!2849)

(assert (=> b!96992 (= lt!48519 lt!48513)))

(declare-fun lt!48516 () ListLongMap!1493)

(assert (=> b!96992 (= lt!48516 (getCurrentListMapNoExtraKeys!94 (_keys!4142 newMap!16) lt!47761 (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(declare-fun lt!48521 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48521 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!48515 () (_ BitVec 64))

(assert (=> b!96992 (= lt!48515 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!96992 (= lt!48527 (addApplyDifferent!67 lt!48516 lt!48521 (minValue!2341 newMap!16) lt!48515))))

(assert (=> b!96992 (= (apply!91 (+!129 lt!48516 (tuple2!2287 lt!48521 (minValue!2341 newMap!16))) lt!48515) (apply!91 lt!48516 lt!48515))))

(declare-fun bm!9836 () Bool)

(assert (=> bm!9836 (= call!9839 call!9838)))

(declare-fun b!96993 () Bool)

(assert (=> b!96993 (= e!63215 call!9834)))

(declare-fun bm!9837 () Bool)

(assert (=> bm!9837 (= call!9835 (contains!783 lt!48511 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!96994 () Bool)

(assert (=> b!96994 (= e!63208 (not call!9837))))

(declare-fun b!96995 () Bool)

(assert (=> b!96995 (= e!63212 (+!129 call!9838 (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 newMap!16))))))

(declare-fun b!96996 () Bool)

(assert (=> b!96996 (= e!63217 (= (apply!91 lt!48511 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1278 (select (arr!1995 lt!47761) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!96996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2244 lt!47761)))))

(assert (=> b!96996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2243 (_keys!4142 newMap!16))))))

(assert (= (and d!25819 c!16424) b!96995))

(assert (= (and d!25819 (not c!16424)) b!96988))

(assert (= (and b!96988 c!16427) b!96977))

(assert (= (and b!96988 (not c!16427)) b!96989))

(assert (= (and b!96989 c!16423) b!96980))

(assert (= (and b!96989 (not c!16423)) b!96993))

(assert (= (or b!96980 b!96993) bm!9831))

(assert (= (or b!96977 bm!9831) bm!9834))

(assert (= (or b!96977 b!96980) bm!9836))

(assert (= (or b!96995 bm!9834) bm!9835))

(assert (= (or b!96995 bm!9836) bm!9833))

(assert (= (and d!25819 res!48903) b!96978))

(assert (= (and d!25819 c!16426) b!96992))

(assert (= (and d!25819 (not c!16426)) b!96987))

(assert (= (and d!25819 res!48899) b!96984))

(assert (= (and b!96984 res!48896) b!96976))

(assert (= (and b!96984 (not res!48901)) b!96979))

(assert (= (and b!96979 res!48898) b!96996))

(assert (= (and b!96984 res!48900) b!96982))

(assert (= (and b!96982 c!16428) b!96986))

(assert (= (and b!96982 (not c!16428)) b!96983))

(assert (= (and b!96986 res!48897) b!96985))

(assert (= (or b!96986 b!96983) bm!9837))

(assert (= (and b!96982 res!48902) b!96990))

(assert (= (and b!96990 c!16425) b!96981))

(assert (= (and b!96990 (not c!16425)) b!96994))

(assert (= (and b!96981 res!48904) b!96991))

(assert (= (or b!96981 b!96994) bm!9832))

(declare-fun b_lambda!4289 () Bool)

(assert (=> (not b_lambda!4289) (not b!96996)))

(assert (=> b!96996 t!5484))

(declare-fun b_and!5937 () Bool)

(assert (= b_and!5933 (and (=> t!5484 result!3225) b_and!5937)))

(assert (=> b!96996 t!5486))

(declare-fun b_and!5939 () Bool)

(assert (= b_and!5935 (and (=> t!5486 result!3227) b_and!5939)))

(declare-fun m!105779 () Bool)

(assert (=> bm!9835 m!105779))

(declare-fun m!105781 () Bool)

(assert (=> b!96996 m!105781))

(assert (=> b!96996 m!103949))

(declare-fun m!105783 () Bool)

(assert (=> b!96996 m!105783))

(assert (=> b!96996 m!103953))

(assert (=> b!96996 m!103953))

(declare-fun m!105785 () Bool)

(assert (=> b!96996 m!105785))

(assert (=> b!96996 m!105781))

(assert (=> b!96996 m!103949))

(declare-fun m!105787 () Bool)

(assert (=> b!96995 m!105787))

(declare-fun m!105789 () Bool)

(assert (=> b!96992 m!105789))

(assert (=> b!96992 m!105779))

(declare-fun m!105791 () Bool)

(assert (=> b!96992 m!105791))

(declare-fun m!105793 () Bool)

(assert (=> b!96992 m!105793))

(declare-fun m!105795 () Bool)

(assert (=> b!96992 m!105795))

(declare-fun m!105797 () Bool)

(assert (=> b!96992 m!105797))

(declare-fun m!105799 () Bool)

(assert (=> b!96992 m!105799))

(declare-fun m!105801 () Bool)

(assert (=> b!96992 m!105801))

(declare-fun m!105803 () Bool)

(assert (=> b!96992 m!105803))

(declare-fun m!105805 () Bool)

(assert (=> b!96992 m!105805))

(declare-fun m!105807 () Bool)

(assert (=> b!96992 m!105807))

(declare-fun m!105809 () Bool)

(assert (=> b!96992 m!105809))

(assert (=> b!96992 m!103953))

(assert (=> b!96992 m!105795))

(assert (=> b!96992 m!105799))

(declare-fun m!105811 () Bool)

(assert (=> b!96992 m!105811))

(declare-fun m!105813 () Bool)

(assert (=> b!96992 m!105813))

(assert (=> b!96992 m!105811))

(declare-fun m!105815 () Bool)

(assert (=> b!96992 m!105815))

(declare-fun m!105817 () Bool)

(assert (=> b!96992 m!105817))

(assert (=> b!96992 m!105803))

(assert (=> b!96978 m!103953))

(assert (=> b!96978 m!103953))

(assert (=> b!96978 m!103989))

(declare-fun m!105819 () Bool)

(assert (=> b!96985 m!105819))

(declare-fun m!105821 () Bool)

(assert (=> bm!9833 m!105821))

(declare-fun m!105823 () Bool)

(assert (=> b!96991 m!105823))

(assert (=> b!96979 m!103953))

(assert (=> b!96979 m!103953))

(declare-fun m!105825 () Bool)

(assert (=> b!96979 m!105825))

(assert (=> b!96976 m!103953))

(assert (=> b!96976 m!103953))

(assert (=> b!96976 m!103989))

(assert (=> d!25819 m!103933))

(declare-fun m!105827 () Bool)

(assert (=> bm!9832 m!105827))

(declare-fun m!105829 () Bool)

(assert (=> bm!9837 m!105829))

(assert (=> b!95995 d!25819))

(assert (=> b!96239 d!25439))

(declare-fun d!25821 () Bool)

(assert (=> d!25821 (isDefined!102 (getValueByKey!150 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun lt!48528 () Unit!2849)

(assert (=> d!25821 (= lt!48528 (choose!584 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun e!63220 () Bool)

(assert (=> d!25821 e!63220))

(declare-fun res!48905 () Bool)

(assert (=> d!25821 (=> (not res!48905) (not e!63220))))

(assert (=> d!25821 (= res!48905 (isStrictlySorted!290 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))))

(assert (=> d!25821 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) lt!48528)))

(declare-fun b!96997 () Bool)

(assert (=> b!96997 (= e!63220 (containsKey!153 (toList!762 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25821 res!48905) b!96997))

(assert (=> d!25821 m!103635))

(assert (=> d!25821 m!104089))

(assert (=> d!25821 m!104089))

(assert (=> d!25821 m!104091))

(assert (=> d!25821 m!103635))

(declare-fun m!105831 () Bool)

(assert (=> d!25821 m!105831))

(declare-fun m!105833 () Bool)

(assert (=> d!25821 m!105833))

(assert (=> b!96997 m!103635))

(assert (=> b!96997 m!104085))

(assert (=> b!95999 d!25821))

(assert (=> b!95999 d!25503))

(assert (=> b!95999 d!25505))

(declare-fun d!25823 () Bool)

(assert (=> d!25823 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(declare-fun lt!48529 () Unit!2849)

(assert (=> d!25823 (= lt!48529 (choose!584 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(declare-fun e!63221 () Bool)

(assert (=> d!25823 e!63221))

(declare-fun res!48906 () Bool)

(assert (=> d!25823 (=> (not res!48906) (not e!63221))))

(assert (=> d!25823 (= res!48906 (isStrictlySorted!290 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25823 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660) lt!48529)))

(declare-fun b!96998 () Bool)

(assert (=> b!96998 (= e!63221 (containsKey!153 (toList!762 (+!129 lt!47654 (tuple2!2287 lt!47668 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))))) lt!47660))))

(assert (= (and d!25823 res!48906) b!96998))

(assert (=> d!25823 m!104129))

(assert (=> d!25823 m!104129))

(assert (=> d!25823 m!104131))

(declare-fun m!105835 () Bool)

(assert (=> d!25823 m!105835))

(declare-fun m!105837 () Bool)

(assert (=> d!25823 m!105837))

(assert (=> b!96998 m!104125))

(assert (=> b!96049 d!25823))

(assert (=> b!96049 d!25507))

(assert (=> b!96049 d!25509))

(assert (=> bm!9728 d!25647))

(declare-fun d!25825 () Bool)

(assert (=> d!25825 (= (+!129 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (tuple2!2287 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!452 (_keys!4142 newMap!16) (array!4200 (store (arr!1995 (_values!2439 newMap!16)) (index!3127 lt!47752) (ValueCellFull!965 (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2244 (_values!2439 newMap!16))) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25825 true))

(declare-fun _$5!98 () Unit!2849)

(assert (=> d!25825 (= (choose!583 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (index!3127 lt!47752) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (get!1278 (select (arr!1995 (_values!2439 (v!2780 (underlying!333 thiss!992)))) from!355) (dynLambda!367 (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2456 newMap!16)) _$5!98)))

(declare-fun bs!3997 () Bool)

(assert (= bs!3997 d!25825))

(assert (=> bs!3997 m!103769))

(assert (=> bs!3997 m!103769))

(assert (=> bs!3997 m!104081))

(assert (=> bs!3997 m!103853))

(assert (=> bs!3997 m!104083))

(assert (=> d!25315 d!25825))

(assert (=> d!25315 d!25421))

(assert (=> b!95921 d!25615))

(declare-fun d!25827 () Bool)

(declare-fun e!63222 () Bool)

(assert (=> d!25827 e!63222))

(declare-fun res!48907 () Bool)

(assert (=> d!25827 (=> res!48907 e!63222)))

(declare-fun lt!48532 () Bool)

(assert (=> d!25827 (= res!48907 (not lt!48532))))

(declare-fun lt!48533 () Bool)

(assert (=> d!25827 (= lt!48532 lt!48533)))

(declare-fun lt!48531 () Unit!2849)

(declare-fun e!63223 () Unit!2849)

(assert (=> d!25827 (= lt!48531 e!63223)))

(declare-fun c!16429 () Bool)

(assert (=> d!25827 (= c!16429 lt!48533)))

(assert (=> d!25827 (= lt!48533 (containsKey!153 (toList!762 lt!47911) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!25827 (= (contains!783 lt!47911 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!48532)))

(declare-fun b!96999 () Bool)

(declare-fun lt!48530 () Unit!2849)

(assert (=> b!96999 (= e!63223 lt!48530)))

(assert (=> b!96999 (= lt!48530 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!47911) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!96999 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!97000 () Bool)

(declare-fun Unit!2906 () Unit!2849)

(assert (=> b!97000 (= e!63223 Unit!2906)))

(declare-fun b!97001 () Bool)

(assert (=> b!97001 (= e!63222 (isDefined!102 (getValueByKey!150 (toList!762 lt!47911) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!25827 c!16429) b!96999))

(assert (= (and d!25827 (not c!16429)) b!97000))

(assert (= (and d!25827 (not res!48907)) b!97001))

(assert (=> d!25827 m!103777))

(declare-fun m!105839 () Bool)

(assert (=> d!25827 m!105839))

(assert (=> b!96999 m!103777))

(declare-fun m!105841 () Bool)

(assert (=> b!96999 m!105841))

(assert (=> b!96999 m!103777))

(assert (=> b!96999 m!105705))

(assert (=> b!96999 m!105705))

(declare-fun m!105843 () Bool)

(assert (=> b!96999 m!105843))

(assert (=> b!97001 m!103777))

(assert (=> b!97001 m!105705))

(assert (=> b!97001 m!105705))

(assert (=> b!97001 m!105843))

(assert (=> b!96100 d!25827))

(assert (=> d!25385 d!25335))

(declare-fun d!25829 () Bool)

(declare-fun e!63226 () Bool)

(assert (=> d!25829 e!63226))

(declare-fun res!48913 () Bool)

(assert (=> d!25829 (=> (not res!48913) (not e!63226))))

(declare-fun lt!48536 () SeekEntryResult!246)

(assert (=> d!25829 (= res!48913 ((_ is Found!246) lt!48536))))

(assert (=> d!25829 (= lt!48536 (seekEntryOrOpen!0 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (=> d!25829 true))

(declare-fun _$33!78 () Unit!2849)

(assert (=> d!25829 (= (choose!588 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (defaultEntry!2456 newMap!16)) _$33!78)))

(declare-fun b!97006 () Bool)

(declare-fun res!48912 () Bool)

(assert (=> b!97006 (=> (not res!48912) (not e!63226))))

(assert (=> b!97006 (= res!48912 (inRange!0 (index!3127 lt!48536) (mask!6541 newMap!16)))))

(declare-fun b!97007 () Bool)

(assert (=> b!97007 (= e!63226 (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!48536)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25829 res!48913) b!97006))

(assert (= (and b!97006 res!48912) b!97007))

(assert (=> d!25829 m!103635))

(assert (=> d!25829 m!103847))

(declare-fun m!105845 () Bool)

(assert (=> b!97006 m!105845))

(declare-fun m!105847 () Bool)

(assert (=> b!97007 m!105847))

(assert (=> d!25385 d!25829))

(assert (=> d!25385 d!25421))

(declare-fun d!25831 () Bool)

(declare-fun e!63227 () Bool)

(assert (=> d!25831 e!63227))

(declare-fun res!48914 () Bool)

(assert (=> d!25831 (=> res!48914 e!63227)))

(declare-fun lt!48539 () Bool)

(assert (=> d!25831 (= res!48914 (not lt!48539))))

(declare-fun lt!48540 () Bool)

(assert (=> d!25831 (= lt!48539 lt!48540)))

(declare-fun lt!48538 () Unit!2849)

(declare-fun e!63228 () Unit!2849)

(assert (=> d!25831 (= lt!48538 e!63228)))

(declare-fun c!16430 () Bool)

(assert (=> d!25831 (= c!16430 lt!48540)))

(assert (=> d!25831 (= lt!48540 (containsKey!153 (toList!762 lt!48018) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25831 (= (contains!783 lt!48018 #b1000000000000000000000000000000000000000000000000000000000000000) lt!48539)))

(declare-fun b!97008 () Bool)

(declare-fun lt!48537 () Unit!2849)

(assert (=> b!97008 (= e!63228 lt!48537)))

(assert (=> b!97008 (= lt!48537 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48018) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!97008 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!97009 () Bool)

(declare-fun Unit!2907 () Unit!2849)

(assert (=> b!97009 (= e!63228 Unit!2907)))

(declare-fun b!97010 () Bool)

(assert (=> b!97010 (= e!63227 (isDefined!102 (getValueByKey!150 (toList!762 lt!48018) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25831 c!16430) b!97008))

(assert (= (and d!25831 (not c!16430)) b!97009))

(assert (= (and d!25831 (not res!48914)) b!97010))

(declare-fun m!105849 () Bool)

(assert (=> d!25831 m!105849))

(declare-fun m!105851 () Bool)

(assert (=> b!97008 m!105851))

(assert (=> b!97008 m!104787))

(assert (=> b!97008 m!104787))

(declare-fun m!105853 () Bool)

(assert (=> b!97008 m!105853))

(assert (=> b!97010 m!104787))

(assert (=> b!97010 m!104787))

(assert (=> b!97010 m!105853))

(assert (=> bm!9725 d!25831))

(declare-fun b!97023 () Bool)

(declare-fun c!16438 () Bool)

(declare-fun lt!48546 () (_ BitVec 64))

(assert (=> b!97023 (= c!16438 (= lt!48546 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!63237 () SeekEntryResult!246)

(declare-fun e!63235 () SeekEntryResult!246)

(assert (=> b!97023 (= e!63237 e!63235)))

(declare-fun b!97024 () Bool)

(declare-fun e!63236 () SeekEntryResult!246)

(assert (=> b!97024 (= e!63236 Undefined!246)))

(declare-fun d!25833 () Bool)

(declare-fun lt!48545 () SeekEntryResult!246)

(assert (=> d!25833 (and (or ((_ is Undefined!246) lt!48545) (not ((_ is Found!246) lt!48545)) (and (bvsge (index!3127 lt!48545) #b00000000000000000000000000000000) (bvslt (index!3127 lt!48545) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!48545) ((_ is Found!246) lt!48545) (not ((_ is MissingVacant!246) lt!48545)) (not (= (index!3129 lt!48545) (index!3128 lt!47865))) (and (bvsge (index!3129 lt!48545) #b00000000000000000000000000000000) (bvslt (index!3129 lt!48545) (size!2243 (_keys!4142 newMap!16))))) (or ((_ is Undefined!246) lt!48545) (ite ((_ is Found!246) lt!48545) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3127 lt!48545)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) (and ((_ is MissingVacant!246) lt!48545) (= (index!3129 lt!48545) (index!3128 lt!47865)) (= (select (arr!1994 (_keys!4142 newMap!16)) (index!3129 lt!48545)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!25833 (= lt!48545 e!63236)))

(declare-fun c!16439 () Bool)

(assert (=> d!25833 (= c!16439 (bvsge (x!12794 lt!47865) #b01111111111111111111111111111110))))

(assert (=> d!25833 (= lt!48546 (select (arr!1994 (_keys!4142 newMap!16)) (index!3128 lt!47865)))))

(assert (=> d!25833 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25833 (= (seekKeyOrZeroReturnVacant!0 (x!12794 lt!47865) (index!3128 lt!47865) (index!3128 lt!47865) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)) lt!48545)))

(declare-fun b!97025 () Bool)

(assert (=> b!97025 (= e!63236 e!63237)))

(declare-fun c!16437 () Bool)

(assert (=> b!97025 (= c!16437 (= lt!48546 (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(declare-fun b!97026 () Bool)

(assert (=> b!97026 (= e!63237 (Found!246 (index!3128 lt!47865)))))

(declare-fun b!97027 () Bool)

(assert (=> b!97027 (= e!63235 (MissingVacant!246 (index!3128 lt!47865)))))

(declare-fun b!97028 () Bool)

(assert (=> b!97028 (= e!63235 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12794 lt!47865) #b00000000000000000000000000000001) (nextIndex!0 (index!3128 lt!47865) (bvadd (x!12794 lt!47865) #b00000000000000000000000000000001) (mask!6541 newMap!16)) (index!3128 lt!47865) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) (_keys!4142 newMap!16) (mask!6541 newMap!16)))))

(assert (= (and d!25833 c!16439) b!97024))

(assert (= (and d!25833 (not c!16439)) b!97025))

(assert (= (and b!97025 c!16437) b!97026))

(assert (= (and b!97025 (not c!16437)) b!97023))

(assert (= (and b!97023 c!16438) b!97027))

(assert (= (and b!97023 (not c!16438)) b!97028))

(declare-fun m!105855 () Bool)

(assert (=> d!25833 m!105855))

(declare-fun m!105857 () Bool)

(assert (=> d!25833 m!105857))

(assert (=> d!25833 m!104111))

(assert (=> d!25833 m!103933))

(declare-fun m!105859 () Bool)

(assert (=> b!97028 m!105859))

(assert (=> b!97028 m!105859))

(assert (=> b!97028 m!103635))

(declare-fun m!105861 () Bool)

(assert (=> b!97028 m!105861))

(assert (=> b!96048 d!25833))

(assert (=> b!96146 d!25385))

(declare-fun d!25835 () Bool)

(declare-fun e!63238 () Bool)

(assert (=> d!25835 e!63238))

(declare-fun res!48915 () Bool)

(assert (=> d!25835 (=> res!48915 e!63238)))

(declare-fun lt!48549 () Bool)

(assert (=> d!25835 (= res!48915 (not lt!48549))))

(declare-fun lt!48550 () Bool)

(assert (=> d!25835 (= lt!48549 lt!48550)))

(declare-fun lt!48548 () Unit!2849)

(declare-fun e!63239 () Unit!2849)

(assert (=> d!25835 (= lt!48548 e!63239)))

(declare-fun c!16440 () Bool)

(assert (=> d!25835 (= c!16440 lt!48550)))

(assert (=> d!25835 (= lt!48550 (containsKey!153 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> d!25835 (= (contains!783 lt!48059 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!48549)))

(declare-fun b!97029 () Bool)

(declare-fun lt!48547 () Unit!2849)

(assert (=> b!97029 (= e!63239 lt!48547)))

(assert (=> b!97029 (= lt!48547 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(assert (=> b!97029 (isDefined!102 (getValueByKey!150 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!97030 () Bool)

(declare-fun Unit!2908 () Unit!2849)

(assert (=> b!97030 (= e!63239 Unit!2908)))

(declare-fun b!97031 () Bool)

(assert (=> b!97031 (= e!63238 (isDefined!102 (getValueByKey!150 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25835 c!16440) b!97029))

(assert (= (and d!25835 (not c!16440)) b!97030))

(assert (= (and d!25835 (not res!48915)) b!97031))

(declare-fun m!105863 () Bool)

(assert (=> d!25835 m!105863))

(declare-fun m!105865 () Bool)

(assert (=> b!97029 m!105865))

(assert (=> b!97029 m!104417))

(assert (=> b!97029 m!104417))

(declare-fun m!105867 () Bool)

(assert (=> b!97029 m!105867))

(assert (=> b!97031 m!104417))

(assert (=> b!97031 m!104417))

(assert (=> b!97031 m!105867))

(assert (=> d!25399 d!25835))

(declare-fun b!97034 () Bool)

(declare-fun e!63241 () Option!156)

(assert (=> b!97034 (= e!63241 (getValueByKey!150 (t!5472 lt!48060) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!97035 () Bool)

(assert (=> b!97035 (= e!63241 None!154)))

(declare-fun c!16441 () Bool)

(declare-fun d!25837 () Bool)

(assert (=> d!25837 (= c!16441 (and ((_ is Cons!1554) lt!48060) (= (_1!1154 (h!2147 lt!48060)) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun e!63240 () Option!156)

(assert (=> d!25837 (= (getValueByKey!150 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) e!63240)))

(declare-fun b!97032 () Bool)

(assert (=> b!97032 (= e!63240 (Some!155 (_2!1154 (h!2147 lt!48060))))))

(declare-fun b!97033 () Bool)

(assert (=> b!97033 (= e!63240 e!63241)))

(declare-fun c!16442 () Bool)

(assert (=> b!97033 (= c!16442 (and ((_ is Cons!1554) lt!48060) (not (= (_1!1154 (h!2147 lt!48060)) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(assert (= (and d!25837 c!16441) b!97032))

(assert (= (and d!25837 (not c!16441)) b!97033))

(assert (= (and b!97033 c!16442) b!97034))

(assert (= (and b!97033 (not c!16442)) b!97035))

(declare-fun m!105869 () Bool)

(assert (=> b!97034 m!105869))

(assert (=> d!25399 d!25837))

(declare-fun d!25839 () Bool)

(assert (=> d!25839 (= (getValueByKey!150 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) (Some!155 (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun lt!48551 () Unit!2849)

(assert (=> d!25839 (= lt!48551 (choose!590 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun e!63242 () Bool)

(assert (=> d!25839 e!63242))

(declare-fun res!48916 () Bool)

(assert (=> d!25839 (=> (not res!48916) (not e!63242))))

(assert (=> d!25839 (= res!48916 (isStrictlySorted!290 lt!48060))))

(assert (=> d!25839 (= (lemmaContainsTupThenGetReturnValue!66 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!48551)))

(declare-fun b!97036 () Bool)

(declare-fun res!48917 () Bool)

(assert (=> b!97036 (=> (not res!48917) (not e!63242))))

(assert (=> b!97036 (= res!48917 (containsKey!153 lt!48060 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!97037 () Bool)

(assert (=> b!97037 (= e!63242 (contains!785 lt!48060 (tuple2!2287 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (= (and d!25839 res!48916) b!97036))

(assert (= (and b!97036 res!48917) b!97037))

(assert (=> d!25839 m!104411))

(declare-fun m!105871 () Bool)

(assert (=> d!25839 m!105871))

(declare-fun m!105873 () Bool)

(assert (=> d!25839 m!105873))

(declare-fun m!105875 () Bool)

(assert (=> b!97036 m!105875))

(declare-fun m!105877 () Bool)

(assert (=> b!97037 m!105877))

(assert (=> d!25399 d!25839))

(declare-fun d!25841 () Bool)

(declare-fun e!63247 () Bool)

(assert (=> d!25841 e!63247))

(declare-fun res!48919 () Bool)

(assert (=> d!25841 (=> (not res!48919) (not e!63247))))

(declare-fun lt!48552 () List!1558)

(assert (=> d!25841 (= res!48919 (isStrictlySorted!290 lt!48552))))

(declare-fun e!63244 () List!1558)

(assert (=> d!25841 (= lt!48552 e!63244)))

(declare-fun c!16446 () Bool)

(assert (=> d!25841 (= c!16446 (and ((_ is Cons!1554) (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (bvslt (_1!1154 (h!2147 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (=> d!25841 (isStrictlySorted!290 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))))))

(assert (=> d!25841 (= (insertStrictlySorted!69 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) lt!48552)))

(declare-fun b!97038 () Bool)

(declare-fun call!9843 () List!1558)

(assert (=> b!97038 (= e!63244 call!9843)))

(declare-fun bm!9838 () Bool)

(declare-fun call!9842 () List!1558)

(assert (=> bm!9838 (= call!9842 call!9843)))

(declare-fun b!97039 () Bool)

(assert (=> b!97039 (= e!63247 (contains!785 lt!48552 (tuple2!2287 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun e!63245 () List!1558)

(declare-fun bm!9839 () Bool)

(assert (=> bm!9839 (= call!9843 ($colon$colon!76 e!63245 (ite c!16446 (h!2147 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (tuple2!2287 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(declare-fun c!16444 () Bool)

(assert (=> bm!9839 (= c!16444 c!16446)))

(declare-fun b!97040 () Bool)

(declare-fun res!48918 () Bool)

(assert (=> b!97040 (=> (not res!48918) (not e!63247))))

(assert (=> b!97040 (= res!48918 (containsKey!153 lt!48552 (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun bm!9840 () Bool)

(declare-fun call!9841 () List!1558)

(assert (=> bm!9840 (= call!9841 call!9842)))

(declare-fun b!97041 () Bool)

(declare-fun e!63243 () List!1558)

(assert (=> b!97041 (= e!63243 call!9841)))

(declare-fun b!97042 () Bool)

(declare-fun e!63246 () List!1558)

(assert (=> b!97042 (= e!63246 call!9842)))

(declare-fun b!97043 () Bool)

(assert (=> b!97043 (= e!63244 e!63246)))

(declare-fun c!16445 () Bool)

(assert (=> b!97043 (= c!16445 (and ((_ is Cons!1554) (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (= (_1!1154 (h!2147 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun b!97044 () Bool)

(declare-fun c!16443 () Bool)

(assert (=> b!97044 (= c!16443 (and ((_ is Cons!1554) (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (bvsgt (_1!1154 (h!2147 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(assert (=> b!97044 (= e!63246 e!63243)))

(declare-fun b!97045 () Bool)

(assert (=> b!97045 (= e!63245 (insertStrictlySorted!69 (t!5472 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))) (_2!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!97046 () Bool)

(assert (=> b!97046 (= e!63243 call!9841)))

(declare-fun b!97047 () Bool)

(assert (=> b!97047 (= e!63245 (ite c!16445 (t!5472 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (ite c!16443 (Cons!1554 (h!2147 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609)))) (t!5472 (toList!762 (ite c!16072 call!9615 (ite c!16075 call!9611 call!9609))))) Nil!1555)))))

(assert (= (and d!25841 c!16446) b!97038))

(assert (= (and d!25841 (not c!16446)) b!97043))

(assert (= (and b!97043 c!16445) b!97042))

(assert (= (and b!97043 (not c!16445)) b!97044))

(assert (= (and b!97044 c!16443) b!97041))

(assert (= (and b!97044 (not c!16443)) b!97046))

(assert (= (or b!97041 b!97046) bm!9840))

(assert (= (or b!97042 bm!9840) bm!9838))

(assert (= (or b!97038 bm!9838) bm!9839))

(assert (= (and bm!9839 c!16444) b!97045))

(assert (= (and bm!9839 (not c!16444)) b!97047))

(assert (= (and d!25841 res!48919) b!97040))

(assert (= (and b!97040 res!48918) b!97039))

(declare-fun m!105879 () Bool)

(assert (=> b!97040 m!105879))

(declare-fun m!105881 () Bool)

(assert (=> b!97039 m!105881))

(declare-fun m!105883 () Bool)

(assert (=> bm!9839 m!105883))

(declare-fun m!105885 () Bool)

(assert (=> d!25841 m!105885))

(declare-fun m!105887 () Bool)

(assert (=> d!25841 m!105887))

(declare-fun m!105889 () Bool)

(assert (=> b!97045 m!105889))

(assert (=> d!25399 d!25841))

(declare-fun d!25843 () Bool)

(declare-fun res!48920 () Bool)

(declare-fun e!63248 () Bool)

(assert (=> d!25843 (=> res!48920 e!63248)))

(assert (=> d!25843 (= res!48920 (and ((_ is Cons!1554) (toList!762 call!9677)) (= (_1!1154 (h!2147 (toList!762 call!9677))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(assert (=> d!25843 (= (containsKey!153 (toList!762 call!9677) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)) e!63248)))

(declare-fun b!97048 () Bool)

(declare-fun e!63249 () Bool)

(assert (=> b!97048 (= e!63248 e!63249)))

(declare-fun res!48921 () Bool)

(assert (=> b!97048 (=> (not res!48921) (not e!63249))))

(assert (=> b!97048 (= res!48921 (and (or (not ((_ is Cons!1554) (toList!762 call!9677))) (bvsle (_1!1154 (h!2147 (toList!762 call!9677))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))) ((_ is Cons!1554) (toList!762 call!9677)) (bvslt (_1!1154 (h!2147 (toList!762 call!9677))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))))

(declare-fun b!97049 () Bool)

(assert (=> b!97049 (= e!63249 (containsKey!153 (t!5472 (toList!762 call!9677)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355)))))

(assert (= (and d!25843 (not res!48920)) b!97048))

(assert (= (and b!97048 res!48921) b!97049))

(assert (=> b!97049 m!103635))

(declare-fun m!105891 () Bool)

(assert (=> b!97049 m!105891))

(assert (=> d!25407 d!25843))

(declare-fun d!25845 () Bool)

(declare-fun res!48922 () Bool)

(declare-fun e!63250 () Bool)

(assert (=> d!25845 (=> res!48922 e!63250)))

(assert (=> d!25845 (= res!48922 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25845 (= (containsKey!153 (toList!762 lt!47659) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!63250)))

(declare-fun b!97050 () Bool)

(declare-fun e!63251 () Bool)

(assert (=> b!97050 (= e!63250 e!63251)))

(declare-fun res!48923 () Bool)

(assert (=> b!97050 (=> (not res!48923) (not e!63251))))

(assert (=> b!97050 (= res!48923 (and (or (not ((_ is Cons!1554) (toList!762 lt!47659))) (bvsle (_1!1154 (h!2147 (toList!762 lt!47659))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1554) (toList!762 lt!47659)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47659))) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!97051 () Bool)

(assert (=> b!97051 (= e!63251 (containsKey!153 (t!5472 (toList!762 lt!47659)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25845 (not res!48922)) b!97050))

(assert (= (and b!97050 res!48923) b!97051))

(assert (=> b!97051 m!103777))

(declare-fun m!105893 () Bool)

(assert (=> b!97051 m!105893))

(assert (=> d!25409 d!25845))

(assert (=> b!96160 d!25439))

(declare-fun d!25847 () Bool)

(assert (=> d!25847 (= (get!1281 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2786 (getValueByKey!150 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25413 d!25847))

(assert (=> d!25413 d!25531))

(declare-fun d!25849 () Bool)

(declare-fun res!48924 () Bool)

(declare-fun e!63252 () Bool)

(assert (=> d!25849 (=> res!48924 e!63252)))

(assert (=> d!25849 (= res!48924 (and ((_ is Cons!1554) (toList!762 lt!47659)) (= (_1!1154 (h!2147 (toList!762 lt!47659))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25849 (= (containsKey!153 (toList!762 lt!47659) #b1000000000000000000000000000000000000000000000000000000000000000) e!63252)))

(declare-fun b!97052 () Bool)

(declare-fun e!63253 () Bool)

(assert (=> b!97052 (= e!63252 e!63253)))

(declare-fun res!48925 () Bool)

(assert (=> b!97052 (=> (not res!48925) (not e!63253))))

(assert (=> b!97052 (= res!48925 (and (or (not ((_ is Cons!1554) (toList!762 lt!47659))) (bvsle (_1!1154 (h!2147 (toList!762 lt!47659))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1554) (toList!762 lt!47659)) (bvslt (_1!1154 (h!2147 (toList!762 lt!47659))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!97053 () Bool)

(assert (=> b!97053 (= e!63253 (containsKey!153 (t!5472 (toList!762 lt!47659)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25849 (not res!48924)) b!97052))

(assert (= (and b!97052 res!48925) b!97053))

(declare-fun m!105895 () Bool)

(assert (=> b!97053 m!105895))

(assert (=> d!25305 d!25849))

(assert (=> b!96092 d!25331))

(assert (=> b!96226 d!25553))

(declare-fun d!25851 () Bool)

(assert (=> d!25851 (= (apply!91 lt!48018 (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000)) (get!1281 (getValueByKey!150 (toList!762 lt!48018) (select (arr!1994 (_keys!4142 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3998 () Bool)

(assert (= bs!3998 d!25851))

(assert (=> bs!3998 m!103953))

(assert (=> bs!3998 m!104851))

(assert (=> bs!3998 m!104851))

(declare-fun m!105897 () Bool)

(assert (=> bs!3998 m!105897))

(assert (=> b!96178 d!25851))

(declare-fun d!25853 () Bool)

(declare-fun c!16447 () Bool)

(assert (=> d!25853 (= c!16447 ((_ is ValueCellFull!965) (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000)))))

(declare-fun e!63254 () V!3137)

(assert (=> d!25853 (= (get!1278 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!63254)))

(declare-fun b!97054 () Bool)

(assert (=> b!97054 (= e!63254 (get!1279 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!97055 () Bool)

(assert (=> b!97055 (= e!63254 (get!1280 (select (arr!1995 (ite c!16117 (_values!2439 newMap!16) lt!47761)) #b00000000000000000000000000000000) (dynLambda!367 (defaultEntry!2456 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25853 c!16447) b!97054))

(assert (= (and d!25853 (not c!16447)) b!97055))

(assert (=> b!97054 m!104297))

(assert (=> b!97054 m!103949))

(declare-fun m!105899 () Bool)

(assert (=> b!97054 m!105899))

(assert (=> b!97055 m!104297))

(assert (=> b!97055 m!103949))

(declare-fun m!105901 () Bool)

(assert (=> b!97055 m!105901))

(assert (=> b!96178 d!25853))

(declare-fun b!97059 () Bool)

(declare-fun e!63255 () Bool)

(assert (=> b!97059 (= e!63255 (and (bvsge (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!468 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!97058 () Bool)

(declare-fun res!48929 () Bool)

(assert (=> b!97058 (=> (not res!48929) (not e!63255))))

(assert (=> b!97058 (= res!48929 (= (size!2249 (v!2780 (underlying!333 thiss!992))) (bvadd (_size!468 (v!2780 (underlying!333 thiss!992))) (bvsdiv (bvadd (extraKeys!2281 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!25855 () Bool)

(declare-fun res!48926 () Bool)

(assert (=> d!25855 (=> (not res!48926) (not e!63255))))

(assert (=> d!25855 (= res!48926 (validMask!0 (mask!6541 (v!2780 (underlying!333 thiss!992)))))))

(assert (=> d!25855 (= (simpleValid!67 (v!2780 (underlying!333 thiss!992))) e!63255)))

(declare-fun b!97056 () Bool)

(declare-fun res!48928 () Bool)

(assert (=> b!97056 (=> (not res!48928) (not e!63255))))

(assert (=> b!97056 (= res!48928 (and (= (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992)))) (bvadd (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001)) (= (size!2243 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) (size!2244 (_values!2439 (v!2780 (underlying!333 thiss!992))))) (bvsge (_size!468 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!468 (v!2780 (underlying!333 thiss!992))) (bvadd (mask!6541 (v!2780 (underlying!333 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!97057 () Bool)

(declare-fun res!48927 () Bool)

(assert (=> b!97057 (=> (not res!48927) (not e!63255))))

(assert (=> b!97057 (= res!48927 (bvsge (size!2249 (v!2780 (underlying!333 thiss!992))) (_size!468 (v!2780 (underlying!333 thiss!992)))))))

(assert (= (and d!25855 res!48926) b!97056))

(assert (= (and b!97056 res!48928) b!97057))

(assert (= (and b!97057 res!48927) b!97058))

(assert (= (and b!97058 res!48929) b!97059))

(declare-fun m!105903 () Bool)

(assert (=> b!97058 m!105903))

(assert (=> d!25855 m!103641))

(assert (=> b!97057 m!105903))

(assert (=> d!25397 d!25855))

(assert (=> b!95972 d!25439))

(declare-fun d!25857 () Bool)

(assert (=> d!25857 (= (apply!91 (+!129 lt!47794 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) lt!47793) (apply!91 lt!47794 lt!47793))))

(declare-fun lt!48553 () Unit!2849)

(assert (=> d!25857 (= lt!48553 (choose!585 lt!47794 lt!47799 (minValue!2341 newMap!16) lt!47793))))

(declare-fun e!63256 () Bool)

(assert (=> d!25857 e!63256))

(declare-fun res!48930 () Bool)

(assert (=> d!25857 (=> (not res!48930) (not e!63256))))

(assert (=> d!25857 (= res!48930 (contains!783 lt!47794 lt!47793))))

(assert (=> d!25857 (= (addApplyDifferent!67 lt!47794 lt!47799 (minValue!2341 newMap!16) lt!47793) lt!48553)))

(declare-fun b!97060 () Bool)

(assert (=> b!97060 (= e!63256 (not (= lt!47793 lt!47799)))))

(assert (= (and d!25857 res!48930) b!97060))

(declare-fun m!105905 () Bool)

(assert (=> d!25857 m!105905))

(assert (=> d!25857 m!103981))

(assert (=> d!25857 m!103983))

(assert (=> d!25857 m!103985))

(assert (=> d!25857 m!103981))

(declare-fun m!105907 () Bool)

(assert (=> d!25857 m!105907))

(assert (=> b!95943 d!25857))

(assert (=> b!95943 d!25555))

(declare-fun d!25859 () Bool)

(assert (=> d!25859 (= (apply!91 (+!129 lt!47802 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) lt!47803) (apply!91 lt!47802 lt!47803))))

(declare-fun lt!48554 () Unit!2849)

(assert (=> d!25859 (= lt!48554 (choose!585 lt!47802 lt!47795 (zeroValue!2341 newMap!16) lt!47803))))

(declare-fun e!63257 () Bool)

(assert (=> d!25859 e!63257))

(declare-fun res!48931 () Bool)

(assert (=> d!25859 (=> (not res!48931) (not e!63257))))

(assert (=> d!25859 (= res!48931 (contains!783 lt!47802 lt!47803))))

(assert (=> d!25859 (= (addApplyDifferent!67 lt!47802 lt!47795 (zeroValue!2341 newMap!16) lt!47803) lt!48554)))

(declare-fun b!97061 () Bool)

(assert (=> b!97061 (= e!63257 (not (= lt!47803 lt!47795)))))

(assert (= (and d!25859 res!48931) b!97061))

(declare-fun m!105909 () Bool)

(assert (=> d!25859 m!105909))

(assert (=> d!25859 m!103973))

(assert (=> d!25859 m!103975))

(assert (=> d!25859 m!103979))

(assert (=> d!25859 m!103973))

(declare-fun m!105911 () Bool)

(assert (=> d!25859 m!105911))

(assert (=> b!95943 d!25859))

(declare-fun d!25861 () Bool)

(assert (=> d!25861 (contains!783 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) lt!47790)))

(declare-fun lt!48555 () Unit!2849)

(assert (=> d!25861 (= lt!48555 (choose!586 lt!47784 lt!47798 (zeroValue!2341 newMap!16) lt!47790))))

(assert (=> d!25861 (contains!783 lt!47784 lt!47790)))

(assert (=> d!25861 (= (addStillContains!67 lt!47784 lt!47798 (zeroValue!2341 newMap!16) lt!47790) lt!48555)))

(declare-fun bs!3999 () Bool)

(assert (= bs!3999 d!25861))

(assert (=> bs!3999 m!103965))

(assert (=> bs!3999 m!103965))

(assert (=> bs!3999 m!103967))

(declare-fun m!105913 () Bool)

(assert (=> bs!3999 m!105913))

(declare-fun m!105915 () Bool)

(assert (=> bs!3999 m!105915))

(assert (=> b!95943 d!25861))

(declare-fun d!25863 () Bool)

(declare-fun e!63258 () Bool)

(assert (=> d!25863 e!63258))

(declare-fun res!48932 () Bool)

(assert (=> d!25863 (=> (not res!48932) (not e!63258))))

(declare-fun lt!48557 () ListLongMap!1493)

(assert (=> d!25863 (= res!48932 (contains!783 lt!48557 (_1!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48558 () List!1558)

(assert (=> d!25863 (= lt!48557 (ListLongMap!1494 lt!48558))))

(declare-fun lt!48559 () Unit!2849)

(declare-fun lt!48556 () Unit!2849)

(assert (=> d!25863 (= lt!48559 lt!48556)))

(assert (=> d!25863 (= (getValueByKey!150 lt!48558 (_1!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25863 (= lt!48556 (lemmaContainsTupThenGetReturnValue!66 lt!48558 (_1!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25863 (= lt!48558 (insertStrictlySorted!69 (toList!762 lt!47802) (_1!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25863 (= (+!129 lt!47802 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) lt!48557)))

(declare-fun b!97062 () Bool)

(declare-fun res!48933 () Bool)

(assert (=> b!97062 (=> (not res!48933) (not e!63258))))

(assert (=> b!97062 (= res!48933 (= (getValueByKey!150 (toList!762 lt!48557) (_1!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))))))))

(declare-fun b!97063 () Bool)

(assert (=> b!97063 (= e!63258 (contains!785 (toList!762 lt!48557) (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25863 res!48932) b!97062))

(assert (= (and b!97062 res!48933) b!97063))

(declare-fun m!105917 () Bool)

(assert (=> d!25863 m!105917))

(declare-fun m!105919 () Bool)

(assert (=> d!25863 m!105919))

(declare-fun m!105921 () Bool)

(assert (=> d!25863 m!105921))

(declare-fun m!105923 () Bool)

(assert (=> d!25863 m!105923))

(declare-fun m!105925 () Bool)

(assert (=> b!97062 m!105925))

(declare-fun m!105927 () Bool)

(assert (=> b!97063 m!105927))

(assert (=> b!95943 d!25863))

(declare-fun d!25865 () Bool)

(declare-fun e!63259 () Bool)

(assert (=> d!25865 e!63259))

(declare-fun res!48934 () Bool)

(assert (=> d!25865 (=> res!48934 e!63259)))

(declare-fun lt!48562 () Bool)

(assert (=> d!25865 (= res!48934 (not lt!48562))))

(declare-fun lt!48563 () Bool)

(assert (=> d!25865 (= lt!48562 lt!48563)))

(declare-fun lt!48561 () Unit!2849)

(declare-fun e!63260 () Unit!2849)

(assert (=> d!25865 (= lt!48561 e!63260)))

(declare-fun c!16448 () Bool)

(assert (=> d!25865 (= c!16448 lt!48563)))

(assert (=> d!25865 (= lt!48563 (containsKey!153 (toList!762 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) lt!47790))))

(assert (=> d!25865 (= (contains!783 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) lt!47790) lt!48562)))

(declare-fun b!97064 () Bool)

(declare-fun lt!48560 () Unit!2849)

(assert (=> b!97064 (= e!63260 lt!48560)))

(assert (=> b!97064 (= lt!48560 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) lt!47790))))

(assert (=> b!97064 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) lt!47790))))

(declare-fun b!97065 () Bool)

(declare-fun Unit!2909 () Unit!2849)

(assert (=> b!97065 (= e!63260 Unit!2909)))

(declare-fun b!97066 () Bool)

(assert (=> b!97066 (= e!63259 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) lt!47790)))))

(assert (= (and d!25865 c!16448) b!97064))

(assert (= (and d!25865 (not c!16448)) b!97065))

(assert (= (and d!25865 (not res!48934)) b!97066))

(declare-fun m!105929 () Bool)

(assert (=> d!25865 m!105929))

(declare-fun m!105931 () Bool)

(assert (=> b!97064 m!105931))

(declare-fun m!105933 () Bool)

(assert (=> b!97064 m!105933))

(assert (=> b!97064 m!105933))

(declare-fun m!105935 () Bool)

(assert (=> b!97064 m!105935))

(assert (=> b!97066 m!105933))

(assert (=> b!97066 m!105933))

(assert (=> b!97066 m!105935))

(assert (=> b!95943 d!25865))

(declare-fun d!25867 () Bool)

(assert (=> d!25867 (= (apply!91 (+!129 lt!47801 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) lt!47788) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47801 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))) lt!47788)))))

(declare-fun bs!4000 () Bool)

(assert (= bs!4000 d!25867))

(declare-fun m!105937 () Bool)

(assert (=> bs!4000 m!105937))

(assert (=> bs!4000 m!105937))

(declare-fun m!105939 () Bool)

(assert (=> bs!4000 m!105939))

(assert (=> b!95943 d!25867))

(declare-fun d!25869 () Bool)

(declare-fun e!63261 () Bool)

(assert (=> d!25869 e!63261))

(declare-fun res!48935 () Bool)

(assert (=> d!25869 (=> (not res!48935) (not e!63261))))

(declare-fun lt!48565 () ListLongMap!1493)

(assert (=> d!25869 (= res!48935 (contains!783 lt!48565 (_1!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))))))

(declare-fun lt!48566 () List!1558)

(assert (=> d!25869 (= lt!48565 (ListLongMap!1494 lt!48566))))

(declare-fun lt!48567 () Unit!2849)

(declare-fun lt!48564 () Unit!2849)

(assert (=> d!25869 (= lt!48567 lt!48564)))

(assert (=> d!25869 (= (getValueByKey!150 lt!48566 (_1!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))))))

(assert (=> d!25869 (= lt!48564 (lemmaContainsTupThenGetReturnValue!66 lt!48566 (_1!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))))))

(assert (=> d!25869 (= lt!48566 (insertStrictlySorted!69 (toList!762 lt!47801) (_1!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))))))

(assert (=> d!25869 (= (+!129 lt!47801 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) lt!48565)))

(declare-fun b!97067 () Bool)

(declare-fun res!48936 () Bool)

(assert (=> b!97067 (=> (not res!48936) (not e!63261))))

(assert (=> b!97067 (= res!48936 (= (getValueByKey!150 (toList!762 lt!48565) (_1!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))))))))

(declare-fun b!97068 () Bool)

(assert (=> b!97068 (= e!63261 (contains!785 (toList!762 lt!48565) (tuple2!2287 lt!47792 (minValue!2341 newMap!16))))))

(assert (= (and d!25869 res!48935) b!97067))

(assert (= (and b!97067 res!48936) b!97068))

(declare-fun m!105941 () Bool)

(assert (=> d!25869 m!105941))

(declare-fun m!105943 () Bool)

(assert (=> d!25869 m!105943))

(declare-fun m!105945 () Bool)

(assert (=> d!25869 m!105945))

(declare-fun m!105947 () Bool)

(assert (=> d!25869 m!105947))

(declare-fun m!105949 () Bool)

(assert (=> b!97067 m!105949))

(declare-fun m!105951 () Bool)

(assert (=> b!97068 m!105951))

(assert (=> b!95943 d!25869))

(declare-fun d!25871 () Bool)

(declare-fun e!63262 () Bool)

(assert (=> d!25871 e!63262))

(declare-fun res!48937 () Bool)

(assert (=> d!25871 (=> (not res!48937) (not e!63262))))

(declare-fun lt!48569 () ListLongMap!1493)

(assert (=> d!25871 (= res!48937 (contains!783 lt!48569 (_1!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))))))

(declare-fun lt!48570 () List!1558)

(assert (=> d!25871 (= lt!48569 (ListLongMap!1494 lt!48570))))

(declare-fun lt!48571 () Unit!2849)

(declare-fun lt!48568 () Unit!2849)

(assert (=> d!25871 (= lt!48571 lt!48568)))

(assert (=> d!25871 (= (getValueByKey!150 lt!48570 (_1!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))))))

(assert (=> d!25871 (= lt!48568 (lemmaContainsTupThenGetReturnValue!66 lt!48570 (_1!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))))))

(assert (=> d!25871 (= lt!48570 (insertStrictlySorted!69 (toList!762 lt!47794) (_1!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))))))

(assert (=> d!25871 (= (+!129 lt!47794 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) lt!48569)))

(declare-fun b!97069 () Bool)

(declare-fun res!48938 () Bool)

(assert (=> b!97069 (=> (not res!48938) (not e!63262))))

(assert (=> b!97069 (= res!48938 (= (getValueByKey!150 (toList!762 lt!48569) (_1!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))))))))

(declare-fun b!97070 () Bool)

(assert (=> b!97070 (= e!63262 (contains!785 (toList!762 lt!48569) (tuple2!2287 lt!47799 (minValue!2341 newMap!16))))))

(assert (= (and d!25871 res!48937) b!97069))

(assert (= (and b!97069 res!48938) b!97070))

(declare-fun m!105953 () Bool)

(assert (=> d!25871 m!105953))

(declare-fun m!105955 () Bool)

(assert (=> d!25871 m!105955))

(declare-fun m!105957 () Bool)

(assert (=> d!25871 m!105957))

(declare-fun m!105959 () Bool)

(assert (=> d!25871 m!105959))

(declare-fun m!105961 () Bool)

(assert (=> b!97069 m!105961))

(declare-fun m!105963 () Bool)

(assert (=> b!97070 m!105963))

(assert (=> b!95943 d!25871))

(declare-fun d!25873 () Bool)

(assert (=> d!25873 (= (apply!91 lt!47794 lt!47793) (get!1281 (getValueByKey!150 (toList!762 lt!47794) lt!47793)))))

(declare-fun bs!4001 () Bool)

(assert (= bs!4001 d!25873))

(declare-fun m!105965 () Bool)

(assert (=> bs!4001 m!105965))

(assert (=> bs!4001 m!105965))

(declare-fun m!105967 () Bool)

(assert (=> bs!4001 m!105967))

(assert (=> b!95943 d!25873))

(declare-fun d!25875 () Bool)

(assert (=> d!25875 (= (apply!91 lt!47802 lt!47803) (get!1281 (getValueByKey!150 (toList!762 lt!47802) lt!47803)))))

(declare-fun bs!4002 () Bool)

(assert (= bs!4002 d!25875))

(declare-fun m!105969 () Bool)

(assert (=> bs!4002 m!105969))

(assert (=> bs!4002 m!105969))

(declare-fun m!105971 () Bool)

(assert (=> bs!4002 m!105971))

(assert (=> b!95943 d!25875))

(declare-fun d!25877 () Bool)

(assert (=> d!25877 (= (apply!91 (+!129 lt!47794 (tuple2!2287 lt!47799 (minValue!2341 newMap!16))) lt!47793) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47794 (tuple2!2287 lt!47799 (minValue!2341 newMap!16)))) lt!47793)))))

(declare-fun bs!4003 () Bool)

(assert (= bs!4003 d!25877))

(declare-fun m!105973 () Bool)

(assert (=> bs!4003 m!105973))

(assert (=> bs!4003 m!105973))

(declare-fun m!105975 () Bool)

(assert (=> bs!4003 m!105975))

(assert (=> b!95943 d!25877))

(declare-fun d!25879 () Bool)

(assert (=> d!25879 (= (apply!91 lt!47801 lt!47788) (get!1281 (getValueByKey!150 (toList!762 lt!47801) lt!47788)))))

(declare-fun bs!4004 () Bool)

(assert (= bs!4004 d!25879))

(declare-fun m!105977 () Bool)

(assert (=> bs!4004 m!105977))

(assert (=> bs!4004 m!105977))

(declare-fun m!105979 () Bool)

(assert (=> bs!4004 m!105979))

(assert (=> b!95943 d!25879))

(declare-fun d!25881 () Bool)

(declare-fun e!63263 () Bool)

(assert (=> d!25881 e!63263))

(declare-fun res!48939 () Bool)

(assert (=> d!25881 (=> (not res!48939) (not e!63263))))

(declare-fun lt!48573 () ListLongMap!1493)

(assert (=> d!25881 (= res!48939 (contains!783 lt!48573 (_1!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48574 () List!1558)

(assert (=> d!25881 (= lt!48573 (ListLongMap!1494 lt!48574))))

(declare-fun lt!48575 () Unit!2849)

(declare-fun lt!48572 () Unit!2849)

(assert (=> d!25881 (= lt!48575 lt!48572)))

(assert (=> d!25881 (= (getValueByKey!150 lt!48574 (_1!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25881 (= lt!48572 (lemmaContainsTupThenGetReturnValue!66 lt!48574 (_1!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25881 (= lt!48574 (insertStrictlySorted!69 (toList!762 lt!47784) (_1!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25881 (= (+!129 lt!47784 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))) lt!48573)))

(declare-fun b!97071 () Bool)

(declare-fun res!48940 () Bool)

(assert (=> b!97071 (=> (not res!48940) (not e!63263))))

(assert (=> b!97071 (= res!48940 (= (getValueByKey!150 (toList!762 lt!48573) (_1!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))))))))

(declare-fun b!97072 () Bool)

(assert (=> b!97072 (= e!63263 (contains!785 (toList!762 lt!48573) (tuple2!2287 lt!47798 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25881 res!48939) b!97071))

(assert (= (and b!97071 res!48940) b!97072))

(declare-fun m!105981 () Bool)

(assert (=> d!25881 m!105981))

(declare-fun m!105983 () Bool)

(assert (=> d!25881 m!105983))

(declare-fun m!105985 () Bool)

(assert (=> d!25881 m!105985))

(declare-fun m!105987 () Bool)

(assert (=> d!25881 m!105987))

(declare-fun m!105989 () Bool)

(assert (=> b!97071 m!105989))

(declare-fun m!105991 () Bool)

(assert (=> b!97072 m!105991))

(assert (=> b!95943 d!25881))

(declare-fun d!25883 () Bool)

(assert (=> d!25883 (= (apply!91 (+!129 lt!47801 (tuple2!2287 lt!47792 (minValue!2341 newMap!16))) lt!47788) (apply!91 lt!47801 lt!47788))))

(declare-fun lt!48576 () Unit!2849)

(assert (=> d!25883 (= lt!48576 (choose!585 lt!47801 lt!47792 (minValue!2341 newMap!16) lt!47788))))

(declare-fun e!63264 () Bool)

(assert (=> d!25883 e!63264))

(declare-fun res!48941 () Bool)

(assert (=> d!25883 (=> (not res!48941) (not e!63264))))

(assert (=> d!25883 (= res!48941 (contains!783 lt!47801 lt!47788))))

(assert (=> d!25883 (= (addApplyDifferent!67 lt!47801 lt!47792 (minValue!2341 newMap!16) lt!47788) lt!48576)))

(declare-fun b!97073 () Bool)

(assert (=> b!97073 (= e!63264 (not (= lt!47788 lt!47792)))))

(assert (= (and d!25883 res!48941) b!97073))

(declare-fun m!105993 () Bool)

(assert (=> d!25883 m!105993))

(assert (=> d!25883 m!103969))

(assert (=> d!25883 m!103971))

(assert (=> d!25883 m!103977))

(assert (=> d!25883 m!103969))

(declare-fun m!105995 () Bool)

(assert (=> d!25883 m!105995))

(assert (=> b!95943 d!25883))

(declare-fun d!25885 () Bool)

(assert (=> d!25885 (= (apply!91 (+!129 lt!47802 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16))) lt!47803) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47802 (tuple2!2287 lt!47795 (zeroValue!2341 newMap!16)))) lt!47803)))))

(declare-fun bs!4005 () Bool)

(assert (= bs!4005 d!25885))

(declare-fun m!105997 () Bool)

(assert (=> bs!4005 m!105997))

(assert (=> bs!4005 m!105997))

(declare-fun m!105999 () Bool)

(assert (=> bs!4005 m!105999))

(assert (=> b!95943 d!25885))

(declare-fun d!25887 () Bool)

(assert (=> d!25887 (contains!783 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) lt!47819)))

(declare-fun lt!48577 () Unit!2849)

(assert (=> d!25887 (= lt!48577 (choose!586 lt!47813 lt!47827 (zeroValue!2341 newMap!16) lt!47819))))

(assert (=> d!25887 (contains!783 lt!47813 lt!47819)))

(assert (=> d!25887 (= (addStillContains!67 lt!47813 lt!47827 (zeroValue!2341 newMap!16) lt!47819) lt!48577)))

(declare-fun bs!4006 () Bool)

(assert (= bs!4006 d!25887))

(assert (=> bs!4006 m!104037))

(assert (=> bs!4006 m!104037))

(assert (=> bs!4006 m!104039))

(declare-fun m!106001 () Bool)

(assert (=> bs!4006 m!106001))

(declare-fun m!106003 () Bool)

(assert (=> bs!4006 m!106003))

(assert (=> b!95988 d!25887))

(declare-fun d!25889 () Bool)

(assert (=> d!25889 (= (apply!91 (+!129 lt!47831 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) lt!47832) (apply!91 lt!47831 lt!47832))))

(declare-fun lt!48578 () Unit!2849)

(assert (=> d!25889 (= lt!48578 (choose!585 lt!47831 lt!47824 (zeroValue!2341 newMap!16) lt!47832))))

(declare-fun e!63265 () Bool)

(assert (=> d!25889 e!63265))

(declare-fun res!48942 () Bool)

(assert (=> d!25889 (=> (not res!48942) (not e!63265))))

(assert (=> d!25889 (= res!48942 (contains!783 lt!47831 lt!47832))))

(assert (=> d!25889 (= (addApplyDifferent!67 lt!47831 lt!47824 (zeroValue!2341 newMap!16) lt!47832) lt!48578)))

(declare-fun b!97074 () Bool)

(assert (=> b!97074 (= e!63265 (not (= lt!47832 lt!47824)))))

(assert (= (and d!25889 res!48942) b!97074))

(declare-fun m!106005 () Bool)

(assert (=> d!25889 m!106005))

(assert (=> d!25889 m!104045))

(assert (=> d!25889 m!104047))

(assert (=> d!25889 m!104051))

(assert (=> d!25889 m!104045))

(declare-fun m!106007 () Bool)

(assert (=> d!25889 m!106007))

(assert (=> b!95988 d!25889))

(declare-fun d!25891 () Bool)

(assert (=> d!25891 (= (apply!91 lt!47831 lt!47832) (get!1281 (getValueByKey!150 (toList!762 lt!47831) lt!47832)))))

(declare-fun bs!4007 () Bool)

(assert (= bs!4007 d!25891))

(declare-fun m!106009 () Bool)

(assert (=> bs!4007 m!106009))

(assert (=> bs!4007 m!106009))

(declare-fun m!106011 () Bool)

(assert (=> bs!4007 m!106011))

(assert (=> b!95988 d!25891))

(declare-fun d!25893 () Bool)

(assert (=> d!25893 (= (apply!91 (+!129 lt!47830 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) lt!47817) (apply!91 lt!47830 lt!47817))))

(declare-fun lt!48579 () Unit!2849)

(assert (=> d!25893 (= lt!48579 (choose!585 lt!47830 lt!47821 (minValue!2341 newMap!16) lt!47817))))

(declare-fun e!63266 () Bool)

(assert (=> d!25893 e!63266))

(declare-fun res!48943 () Bool)

(assert (=> d!25893 (=> (not res!48943) (not e!63266))))

(assert (=> d!25893 (= res!48943 (contains!783 lt!47830 lt!47817))))

(assert (=> d!25893 (= (addApplyDifferent!67 lt!47830 lt!47821 (minValue!2341 newMap!16) lt!47817) lt!48579)))

(declare-fun b!97075 () Bool)

(assert (=> b!97075 (= e!63266 (not (= lt!47817 lt!47821)))))

(assert (= (and d!25893 res!48943) b!97075))

(declare-fun m!106013 () Bool)

(assert (=> d!25893 m!106013))

(assert (=> d!25893 m!104041))

(assert (=> d!25893 m!104043))

(assert (=> d!25893 m!104049))

(assert (=> d!25893 m!104041))

(declare-fun m!106015 () Bool)

(assert (=> d!25893 m!106015))

(assert (=> b!95988 d!25893))

(declare-fun d!25895 () Bool)

(declare-fun e!63267 () Bool)

(assert (=> d!25895 e!63267))

(declare-fun res!48944 () Bool)

(assert (=> d!25895 (=> (not res!48944) (not e!63267))))

(declare-fun lt!48581 () ListLongMap!1493)

(assert (=> d!25895 (= res!48944 (contains!783 lt!48581 (_1!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))))))

(declare-fun lt!48582 () List!1558)

(assert (=> d!25895 (= lt!48581 (ListLongMap!1494 lt!48582))))

(declare-fun lt!48583 () Unit!2849)

(declare-fun lt!48580 () Unit!2849)

(assert (=> d!25895 (= lt!48583 lt!48580)))

(assert (=> d!25895 (= (getValueByKey!150 lt!48582 (_1!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))))))

(assert (=> d!25895 (= lt!48580 (lemmaContainsTupThenGetReturnValue!66 lt!48582 (_1!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))))))

(assert (=> d!25895 (= lt!48582 (insertStrictlySorted!69 (toList!762 lt!47830) (_1!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))))))

(assert (=> d!25895 (= (+!129 lt!47830 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) lt!48581)))

(declare-fun b!97076 () Bool)

(declare-fun res!48945 () Bool)

(assert (=> b!97076 (=> (not res!48945) (not e!63267))))

(assert (=> b!97076 (= res!48945 (= (getValueByKey!150 (toList!762 lt!48581) (_1!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))))))))

(declare-fun b!97077 () Bool)

(assert (=> b!97077 (= e!63267 (contains!785 (toList!762 lt!48581) (tuple2!2287 lt!47821 (minValue!2341 newMap!16))))))

(assert (= (and d!25895 res!48944) b!97076))

(assert (= (and b!97076 res!48945) b!97077))

(declare-fun m!106017 () Bool)

(assert (=> d!25895 m!106017))

(declare-fun m!106019 () Bool)

(assert (=> d!25895 m!106019))

(declare-fun m!106021 () Bool)

(assert (=> d!25895 m!106021))

(declare-fun m!106023 () Bool)

(assert (=> d!25895 m!106023))

(declare-fun m!106025 () Bool)

(assert (=> b!97076 m!106025))

(declare-fun m!106027 () Bool)

(assert (=> b!97077 m!106027))

(assert (=> b!95988 d!25895))

(declare-fun d!25897 () Bool)

(assert (=> d!25897 (= (apply!91 lt!47830 lt!47817) (get!1281 (getValueByKey!150 (toList!762 lt!47830) lt!47817)))))

(declare-fun bs!4008 () Bool)

(assert (= bs!4008 d!25897))

(declare-fun m!106029 () Bool)

(assert (=> bs!4008 m!106029))

(assert (=> bs!4008 m!106029))

(declare-fun m!106031 () Bool)

(assert (=> bs!4008 m!106031))

(assert (=> b!95988 d!25897))

(declare-fun d!25899 () Bool)

(declare-fun e!63268 () Bool)

(assert (=> d!25899 e!63268))

(declare-fun res!48946 () Bool)

(assert (=> d!25899 (=> (not res!48946) (not e!63268))))

(declare-fun lt!48585 () ListLongMap!1493)

(assert (=> d!25899 (= res!48946 (contains!783 lt!48585 (_1!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48586 () List!1558)

(assert (=> d!25899 (= lt!48585 (ListLongMap!1494 lt!48586))))

(declare-fun lt!48587 () Unit!2849)

(declare-fun lt!48584 () Unit!2849)

(assert (=> d!25899 (= lt!48587 lt!48584)))

(assert (=> d!25899 (= (getValueByKey!150 lt!48586 (_1!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25899 (= lt!48584 (lemmaContainsTupThenGetReturnValue!66 lt!48586 (_1!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25899 (= lt!48586 (insertStrictlySorted!69 (toList!762 lt!47813) (_1!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25899 (= (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) lt!48585)))

(declare-fun b!97078 () Bool)

(declare-fun res!48947 () Bool)

(assert (=> b!97078 (=> (not res!48947) (not e!63268))))

(assert (=> b!97078 (= res!48947 (= (getValueByKey!150 (toList!762 lt!48585) (_1!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))))))))

(declare-fun b!97079 () Bool)

(assert (=> b!97079 (= e!63268 (contains!785 (toList!762 lt!48585) (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25899 res!48946) b!97078))

(assert (= (and b!97078 res!48947) b!97079))

(declare-fun m!106033 () Bool)

(assert (=> d!25899 m!106033))

(declare-fun m!106035 () Bool)

(assert (=> d!25899 m!106035))

(declare-fun m!106037 () Bool)

(assert (=> d!25899 m!106037))

(declare-fun m!106039 () Bool)

(assert (=> d!25899 m!106039))

(declare-fun m!106041 () Bool)

(assert (=> b!97078 m!106041))

(declare-fun m!106043 () Bool)

(assert (=> b!97079 m!106043))

(assert (=> b!95988 d!25899))

(declare-fun d!25901 () Bool)

(assert (=> d!25901 (= (apply!91 (+!129 lt!47830 (tuple2!2287 lt!47821 (minValue!2341 newMap!16))) lt!47817) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47830 (tuple2!2287 lt!47821 (minValue!2341 newMap!16)))) lt!47817)))))

(declare-fun bs!4009 () Bool)

(assert (= bs!4009 d!25901))

(declare-fun m!106045 () Bool)

(assert (=> bs!4009 m!106045))

(assert (=> bs!4009 m!106045))

(declare-fun m!106047 () Bool)

(assert (=> bs!4009 m!106047))

(assert (=> b!95988 d!25901))

(declare-fun d!25903 () Bool)

(declare-fun e!63269 () Bool)

(assert (=> d!25903 e!63269))

(declare-fun res!48948 () Bool)

(assert (=> d!25903 (=> (not res!48948) (not e!63269))))

(declare-fun lt!48589 () ListLongMap!1493)

(assert (=> d!25903 (= res!48948 (contains!783 lt!48589 (_1!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))))))

(declare-fun lt!48590 () List!1558)

(assert (=> d!25903 (= lt!48589 (ListLongMap!1494 lt!48590))))

(declare-fun lt!48591 () Unit!2849)

(declare-fun lt!48588 () Unit!2849)

(assert (=> d!25903 (= lt!48591 lt!48588)))

(assert (=> d!25903 (= (getValueByKey!150 lt!48590 (_1!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))))))

(assert (=> d!25903 (= lt!48588 (lemmaContainsTupThenGetReturnValue!66 lt!48590 (_1!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))))))

(assert (=> d!25903 (= lt!48590 (insertStrictlySorted!69 (toList!762 lt!47823) (_1!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))))))

(assert (=> d!25903 (= (+!129 lt!47823 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) lt!48589)))

(declare-fun b!97080 () Bool)

(declare-fun res!48949 () Bool)

(assert (=> b!97080 (=> (not res!48949) (not e!63269))))

(assert (=> b!97080 (= res!48949 (= (getValueByKey!150 (toList!762 lt!48589) (_1!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))))))))

(declare-fun b!97081 () Bool)

(assert (=> b!97081 (= e!63269 (contains!785 (toList!762 lt!48589) (tuple2!2287 lt!47828 (minValue!2341 newMap!16))))))

(assert (= (and d!25903 res!48948) b!97080))

(assert (= (and b!97080 res!48949) b!97081))

(declare-fun m!106049 () Bool)

(assert (=> d!25903 m!106049))

(declare-fun m!106051 () Bool)

(assert (=> d!25903 m!106051))

(declare-fun m!106053 () Bool)

(assert (=> d!25903 m!106053))

(declare-fun m!106055 () Bool)

(assert (=> d!25903 m!106055))

(declare-fun m!106057 () Bool)

(assert (=> b!97080 m!106057))

(declare-fun m!106059 () Bool)

(assert (=> b!97081 m!106059))

(assert (=> b!95988 d!25903))

(declare-fun d!25905 () Bool)

(assert (=> d!25905 (= (apply!91 (+!129 lt!47823 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) lt!47822) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47823 (tuple2!2287 lt!47828 (minValue!2341 newMap!16)))) lt!47822)))))

(declare-fun bs!4010 () Bool)

(assert (= bs!4010 d!25905))

(declare-fun m!106061 () Bool)

(assert (=> bs!4010 m!106061))

(assert (=> bs!4010 m!106061))

(declare-fun m!106063 () Bool)

(assert (=> bs!4010 m!106063))

(assert (=> b!95988 d!25905))

(declare-fun d!25907 () Bool)

(assert (=> d!25907 (= (apply!91 (+!129 lt!47823 (tuple2!2287 lt!47828 (minValue!2341 newMap!16))) lt!47822) (apply!91 lt!47823 lt!47822))))

(declare-fun lt!48592 () Unit!2849)

(assert (=> d!25907 (= lt!48592 (choose!585 lt!47823 lt!47828 (minValue!2341 newMap!16) lt!47822))))

(declare-fun e!63270 () Bool)

(assert (=> d!25907 e!63270))

(declare-fun res!48950 () Bool)

(assert (=> d!25907 (=> (not res!48950) (not e!63270))))

(assert (=> d!25907 (= res!48950 (contains!783 lt!47823 lt!47822))))

(assert (=> d!25907 (= (addApplyDifferent!67 lt!47823 lt!47828 (minValue!2341 newMap!16) lt!47822) lt!48592)))

(declare-fun b!97082 () Bool)

(assert (=> b!97082 (= e!63270 (not (= lt!47822 lt!47828)))))

(assert (= (and d!25907 res!48950) b!97082))

(declare-fun m!106065 () Bool)

(assert (=> d!25907 m!106065))

(assert (=> d!25907 m!104053))

(assert (=> d!25907 m!104055))

(assert (=> d!25907 m!104057))

(assert (=> d!25907 m!104053))

(declare-fun m!106067 () Bool)

(assert (=> d!25907 m!106067))

(assert (=> b!95988 d!25907))

(declare-fun d!25909 () Bool)

(declare-fun e!63271 () Bool)

(assert (=> d!25909 e!63271))

(declare-fun res!48951 () Bool)

(assert (=> d!25909 (=> res!48951 e!63271)))

(declare-fun lt!48595 () Bool)

(assert (=> d!25909 (= res!48951 (not lt!48595))))

(declare-fun lt!48596 () Bool)

(assert (=> d!25909 (= lt!48595 lt!48596)))

(declare-fun lt!48594 () Unit!2849)

(declare-fun e!63272 () Unit!2849)

(assert (=> d!25909 (= lt!48594 e!63272)))

(declare-fun c!16449 () Bool)

(assert (=> d!25909 (= c!16449 lt!48596)))

(assert (=> d!25909 (= lt!48596 (containsKey!153 (toList!762 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) lt!47819))))

(assert (=> d!25909 (= (contains!783 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16))) lt!47819) lt!48595)))

(declare-fun b!97083 () Bool)

(declare-fun lt!48593 () Unit!2849)

(assert (=> b!97083 (= e!63272 lt!48593)))

(assert (=> b!97083 (= lt!48593 (lemmaContainsKeyImpliesGetValueByKeyDefined!101 (toList!762 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) lt!47819))))

(assert (=> b!97083 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) lt!47819))))

(declare-fun b!97084 () Bool)

(declare-fun Unit!2910 () Unit!2849)

(assert (=> b!97084 (= e!63272 Unit!2910)))

(declare-fun b!97085 () Bool)

(assert (=> b!97085 (= e!63271 (isDefined!102 (getValueByKey!150 (toList!762 (+!129 lt!47813 (tuple2!2287 lt!47827 (zeroValue!2341 newMap!16)))) lt!47819)))))

(assert (= (and d!25909 c!16449) b!97083))

(assert (= (and d!25909 (not c!16449)) b!97084))

(assert (= (and d!25909 (not res!48951)) b!97085))

(declare-fun m!106069 () Bool)

(assert (=> d!25909 m!106069))

(declare-fun m!106071 () Bool)

(assert (=> b!97083 m!106071))

(declare-fun m!106073 () Bool)

(assert (=> b!97083 m!106073))

(assert (=> b!97083 m!106073))

(declare-fun m!106075 () Bool)

(assert (=> b!97083 m!106075))

(assert (=> b!97085 m!106073))

(assert (=> b!97085 m!106073))

(assert (=> b!97085 m!106075))

(assert (=> b!95988 d!25909))

(assert (=> b!95988 d!25551))

(declare-fun d!25911 () Bool)

(assert (=> d!25911 (= (apply!91 lt!47823 lt!47822) (get!1281 (getValueByKey!150 (toList!762 lt!47823) lt!47822)))))

(declare-fun bs!4011 () Bool)

(assert (= bs!4011 d!25911))

(declare-fun m!106077 () Bool)

(assert (=> bs!4011 m!106077))

(assert (=> bs!4011 m!106077))

(declare-fun m!106079 () Bool)

(assert (=> bs!4011 m!106079))

(assert (=> b!95988 d!25911))

(declare-fun d!25913 () Bool)

(assert (=> d!25913 (= (apply!91 (+!129 lt!47831 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) lt!47832) (get!1281 (getValueByKey!150 (toList!762 (+!129 lt!47831 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))) lt!47832)))))

(declare-fun bs!4012 () Bool)

(assert (= bs!4012 d!25913))

(declare-fun m!106081 () Bool)

(assert (=> bs!4012 m!106081))

(assert (=> bs!4012 m!106081))

(declare-fun m!106083 () Bool)

(assert (=> bs!4012 m!106083))

(assert (=> b!95988 d!25913))

(declare-fun d!25915 () Bool)

(declare-fun e!63273 () Bool)

(assert (=> d!25915 e!63273))

(declare-fun res!48952 () Bool)

(assert (=> d!25915 (=> (not res!48952) (not e!63273))))

(declare-fun lt!48598 () ListLongMap!1493)

(assert (=> d!25915 (= res!48952 (contains!783 lt!48598 (_1!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))))))

(declare-fun lt!48599 () List!1558)

(assert (=> d!25915 (= lt!48598 (ListLongMap!1494 lt!48599))))

(declare-fun lt!48600 () Unit!2849)

(declare-fun lt!48597 () Unit!2849)

(assert (=> d!25915 (= lt!48600 lt!48597)))

(assert (=> d!25915 (= (getValueByKey!150 lt!48599 (_1!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25915 (= lt!48597 (lemmaContainsTupThenGetReturnValue!66 lt!48599 (_1!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25915 (= lt!48599 (insertStrictlySorted!69 (toList!762 lt!47831) (_1!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) (_2!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))))))

(assert (=> d!25915 (= (+!129 lt!47831 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))) lt!48598)))

(declare-fun b!97086 () Bool)

(declare-fun res!48953 () Bool)

(assert (=> b!97086 (=> (not res!48953) (not e!63273))))

(assert (=> b!97086 (= res!48953 (= (getValueByKey!150 (toList!762 lt!48598) (_1!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16)))) (Some!155 (_2!1154 (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))))))))

(declare-fun b!97087 () Bool)

(assert (=> b!97087 (= e!63273 (contains!785 (toList!762 lt!48598) (tuple2!2287 lt!47824 (zeroValue!2341 newMap!16))))))

(assert (= (and d!25915 res!48952) b!97086))

(assert (= (and b!97086 res!48953) b!97087))

(declare-fun m!106085 () Bool)

(assert (=> d!25915 m!106085))

(declare-fun m!106087 () Bool)

(assert (=> d!25915 m!106087))

(declare-fun m!106089 () Bool)

(assert (=> d!25915 m!106089))

(declare-fun m!106091 () Bool)

(assert (=> d!25915 m!106091))

(declare-fun m!106093 () Bool)

(assert (=> b!97086 m!106093))

(declare-fun m!106095 () Bool)

(assert (=> b!97087 m!106095))

(assert (=> b!95988 d!25915))

(declare-fun d!25917 () Bool)

(assert (=> d!25917 (= (get!1281 (getValueByKey!150 (toList!762 lt!47664) lt!47663)) (v!2786 (getValueByKey!150 (toList!762 lt!47664) lt!47663)))))

(assert (=> d!25367 d!25917))

(declare-fun b!97090 () Bool)

(declare-fun e!63275 () Option!156)

(assert (=> b!97090 (= e!63275 (getValueByKey!150 (t!5472 (toList!762 lt!47664)) lt!47663))))

(declare-fun b!97091 () Bool)

(assert (=> b!97091 (= e!63275 None!154)))

(declare-fun d!25919 () Bool)

(declare-fun c!16450 () Bool)

(assert (=> d!25919 (= c!16450 (and ((_ is Cons!1554) (toList!762 lt!47664)) (= (_1!1154 (h!2147 (toList!762 lt!47664))) lt!47663)))))

(declare-fun e!63274 () Option!156)

(assert (=> d!25919 (= (getValueByKey!150 (toList!762 lt!47664) lt!47663) e!63274)))

(declare-fun b!97088 () Bool)

(assert (=> b!97088 (= e!63274 (Some!155 (_2!1154 (h!2147 (toList!762 lt!47664)))))))

(declare-fun b!97089 () Bool)

(assert (=> b!97089 (= e!63274 e!63275)))

(declare-fun c!16451 () Bool)

(assert (=> b!97089 (= c!16451 (and ((_ is Cons!1554) (toList!762 lt!47664)) (not (= (_1!1154 (h!2147 (toList!762 lt!47664))) lt!47663))))))

(assert (= (and d!25919 c!16450) b!97088))

(assert (= (and d!25919 (not c!16450)) b!97089))

(assert (= (and b!97089 c!16451) b!97090))

(assert (= (and b!97089 (not c!16451)) b!97091))

(declare-fun m!106097 () Bool)

(assert (=> b!97090 m!106097))

(assert (=> d!25367 d!25919))

(declare-fun lt!48601 () Bool)

(declare-fun d!25921 () Bool)

(assert (=> d!25921 (= lt!48601 (select (content!101 (toList!762 lt!47886)) (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun e!63276 () Bool)

(assert (=> d!25921 (= lt!48601 e!63276)))

(declare-fun res!48955 () Bool)

(assert (=> d!25921 (=> (not res!48955) (not e!63276))))

(assert (=> d!25921 (= res!48955 ((_ is Cons!1554) (toList!762 lt!47886)))))

(assert (=> d!25921 (= (contains!785 (toList!762 lt!47886) (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))) lt!48601)))

(declare-fun b!97092 () Bool)

(declare-fun e!63277 () Bool)

(assert (=> b!97092 (= e!63276 e!63277)))

(declare-fun res!48954 () Bool)

(assert (=> b!97092 (=> res!48954 e!63277)))

(assert (=> b!97092 (= res!48954 (= (h!2147 (toList!762 lt!47886)) (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(declare-fun b!97093 () Bool)

(assert (=> b!97093 (= e!63277 (contains!785 (t!5472 (toList!762 lt!47886)) (tuple2!2287 lt!47665 (zeroValue!2341 (v!2780 (underlying!333 thiss!992))))))))

(assert (= (and d!25921 res!48955) b!97092))

(assert (= (and b!97092 (not res!48954)) b!97093))

(declare-fun m!106099 () Bool)

(assert (=> d!25921 m!106099))

(declare-fun m!106101 () Bool)

(assert (=> d!25921 m!106101))

(declare-fun m!106103 () Bool)

(assert (=> b!97093 m!106103))

(assert (=> b!96063 d!25921))

(declare-fun e!63279 () Option!156)

(declare-fun b!97096 () Bool)

(assert (=> b!97096 (= e!63279 (getValueByKey!150 (t!5472 (toList!762 lt!48059)) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))

(declare-fun b!97097 () Bool)

(assert (=> b!97097 (= e!63279 None!154)))

(declare-fun d!25923 () Bool)

(declare-fun c!16452 () Bool)

(assert (=> d!25923 (= c!16452 (and ((_ is Cons!1554) (toList!762 lt!48059)) (= (_1!1154 (h!2147 (toList!762 lt!48059))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992)))))))))))

(declare-fun e!63278 () Option!156)

(assert (=> d!25923 (= (getValueByKey!150 (toList!762 lt!48059) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))) e!63278)))

(declare-fun b!97094 () Bool)

(assert (=> b!97094 (= e!63278 (Some!155 (_2!1154 (h!2147 (toList!762 lt!48059)))))))

(declare-fun b!97095 () Bool)

(assert (=> b!97095 (= e!63278 e!63279)))

(declare-fun c!16453 () Bool)

(assert (=> b!97095 (= c!16453 (and ((_ is Cons!1554) (toList!762 lt!48059)) (not (= (_1!1154 (h!2147 (toList!762 lt!48059))) (_1!1154 (ite (or c!16072 c!16075) (tuple2!2287 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2341 (v!2780 (underlying!333 thiss!992)))) (tuple2!2287 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2341 (v!2780 (underlying!333 thiss!992))))))))))))

(assert (= (and d!25923 c!16452) b!97094))

(assert (= (and d!25923 (not c!16452)) b!97095))

(assert (= (and b!97095 c!16453) b!97096))

(assert (= (and b!97095 (not c!16453)) b!97097))

(declare-fun m!106105 () Bool)

(assert (=> b!97096 m!106105))

(assert (=> b!96234 d!25923))

(declare-fun d!25925 () Bool)

(assert (=> d!25925 (contains!783 (getCurrentListMap!452 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355))))

(declare-fun lt!48604 () Unit!2849)

(declare-fun choose!593 (array!4197 array!4199 (_ BitVec 32) (_ BitVec 32) V!3137 V!3137 (_ BitVec 64) (_ BitVec 32) Int) Unit!2849)

(assert (=> d!25925 (= lt!48604 (choose!593 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)))))

(assert (=> d!25925 (validMask!0 (mask!6541 newMap!16))))

(assert (=> d!25925 (= (lemmaArrayContainsKeyThenInListMap!24 (_keys!4142 newMap!16) (_values!2439 newMap!16) (mask!6541 newMap!16) (extraKeys!2281 newMap!16) (zeroValue!2341 newMap!16) (minValue!2341 newMap!16) (select (arr!1994 (_keys!4142 (v!2780 (underlying!333 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2456 newMap!16)) lt!48604)))

(declare-fun bs!4013 () Bool)

(assert (= bs!4013 d!25925))

(assert (=> bs!4013 m!103769))

(assert (=> bs!4013 m!103769))

(assert (=> bs!4013 m!103635))

(assert (=> bs!4013 m!103855))

(assert (=> bs!4013 m!103635))

(declare-fun m!106107 () Bool)

(assert (=> bs!4013 m!106107))

(assert (=> bs!4013 m!103933))

(assert (=> b!96149 d!25925))

(assert (=> b!96149 d!25317))

(assert (=> b!96149 d!25311))

(declare-fun d!25927 () Bool)

(assert (=> d!25927 (= (inRange!0 (index!3127 lt!48049) (mask!6541 newMap!16)) (and (bvsge (index!3127 lt!48049) #b00000000000000000000000000000000) (bvslt (index!3127 lt!48049) (bvadd (mask!6541 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!96215 d!25927))

(declare-fun condMapEmpty!3715 () Bool)

(declare-fun mapDefault!3715 () ValueCell!965)

(assert (=> mapNonEmpty!3714 (= condMapEmpty!3715 (= mapRest!3714 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3715)))))

(declare-fun e!63280 () Bool)

(declare-fun mapRes!3715 () Bool)

(assert (=> mapNonEmpty!3714 (= tp!9510 (and e!63280 mapRes!3715))))

(declare-fun mapIsEmpty!3715 () Bool)

(assert (=> mapIsEmpty!3715 mapRes!3715))

(declare-fun b!97099 () Bool)

(assert (=> b!97099 (= e!63280 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3715 () Bool)

(declare-fun tp!9511 () Bool)

(declare-fun e!63281 () Bool)

(assert (=> mapNonEmpty!3715 (= mapRes!3715 (and tp!9511 e!63281))))

(declare-fun mapRest!3715 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapValue!3715 () ValueCell!965)

(declare-fun mapKey!3715 () (_ BitVec 32))

(assert (=> mapNonEmpty!3715 (= mapRest!3714 (store mapRest!3715 mapKey!3715 mapValue!3715))))

(declare-fun b!97098 () Bool)

(assert (=> b!97098 (= e!63281 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3714 condMapEmpty!3715) mapIsEmpty!3715))

(assert (= (and mapNonEmpty!3714 (not condMapEmpty!3715)) mapNonEmpty!3715))

(assert (= (and mapNonEmpty!3715 ((_ is ValueCellFull!965) mapValue!3715)) b!97098))

(assert (= (and mapNonEmpty!3714 ((_ is ValueCellFull!965) mapDefault!3715)) b!97099))

(declare-fun m!106109 () Bool)

(assert (=> mapNonEmpty!3715 m!106109))

(declare-fun condMapEmpty!3716 () Bool)

(declare-fun mapDefault!3716 () ValueCell!965)

(assert (=> mapNonEmpty!3713 (= condMapEmpty!3716 (= mapRest!3713 ((as const (Array (_ BitVec 32) ValueCell!965)) mapDefault!3716)))))

(declare-fun e!63282 () Bool)

(declare-fun mapRes!3716 () Bool)

(assert (=> mapNonEmpty!3713 (= tp!9509 (and e!63282 mapRes!3716))))

(declare-fun mapIsEmpty!3716 () Bool)

(assert (=> mapIsEmpty!3716 mapRes!3716))

(declare-fun b!97101 () Bool)

(assert (=> b!97101 (= e!63282 tp_is_empty!2617)))

(declare-fun mapNonEmpty!3716 () Bool)

(declare-fun tp!9512 () Bool)

(declare-fun e!63283 () Bool)

(assert (=> mapNonEmpty!3716 (= mapRes!3716 (and tp!9512 e!63283))))

(declare-fun mapValue!3716 () ValueCell!965)

(declare-fun mapRest!3716 () (Array (_ BitVec 32) ValueCell!965))

(declare-fun mapKey!3716 () (_ BitVec 32))

(assert (=> mapNonEmpty!3716 (= mapRest!3713 (store mapRest!3716 mapKey!3716 mapValue!3716))))

(declare-fun b!97100 () Bool)

(assert (=> b!97100 (= e!63283 tp_is_empty!2617)))

(assert (= (and mapNonEmpty!3713 condMapEmpty!3716) mapIsEmpty!3716))

(assert (= (and mapNonEmpty!3713 (not condMapEmpty!3716)) mapNonEmpty!3716))

(assert (= (and mapNonEmpty!3716 ((_ is ValueCellFull!965) mapValue!3716)) b!97100))

(assert (= (and mapNonEmpty!3713 ((_ is ValueCellFull!965) mapDefault!3716)) b!97101))

(declare-fun m!106111 () Bool)

(assert (=> mapNonEmpty!3716 m!106111))

(declare-fun b_lambda!4291 () Bool)

(assert (= b_lambda!4271 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4291)))

(declare-fun b_lambda!4293 () Bool)

(assert (= b_lambda!4287 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4293)))

(declare-fun b_lambda!4295 () Bool)

(assert (= b_lambda!4269 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4295)))

(declare-fun b_lambda!4297 () Bool)

(assert (= b_lambda!4267 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4297)))

(declare-fun b_lambda!4299 () Bool)

(assert (= b_lambda!4261 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4299)))

(declare-fun b_lambda!4301 () Bool)

(assert (= b_lambda!4285 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4301)))

(declare-fun b_lambda!4303 () Bool)

(assert (= b_lambda!4275 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4303)))

(declare-fun b_lambda!4305 () Bool)

(assert (= b_lambda!4281 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4305)))

(declare-fun b_lambda!4307 () Bool)

(assert (= b_lambda!4277 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4307)))

(declare-fun b_lambda!4309 () Bool)

(assert (= b_lambda!4265 (or (and b!95533 b_free!2401) (and b!95536 b_free!2403 (= (defaultEntry!2456 newMap!16) (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))))) b_lambda!4309)))

(declare-fun b_lambda!4311 () Bool)

(assert (= b_lambda!4273 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4311)))

(declare-fun b_lambda!4313 () Bool)

(assert (= b_lambda!4289 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4313)))

(declare-fun b_lambda!4315 () Bool)

(assert (= b_lambda!4283 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4315)))

(declare-fun b_lambda!4317 () Bool)

(assert (= b_lambda!4279 (or (and b!95533 b_free!2401 (= (defaultEntry!2456 (v!2780 (underlying!333 thiss!992))) (defaultEntry!2456 newMap!16))) (and b!95536 b_free!2403) b_lambda!4317)))

(check-sat (not d!25881) (not b!96696) (not b!96887) (not b!96874) (not b!96895) (not d!25459) (not b!96768) (not bm!9837) (not b!96823) (not b_lambda!4309) (not d!25797) (not d!25731) (not bm!9808) (not d!25767) (not b_lambda!4263) (not b!96704) (not bm!9839) (not d!25925) (not b!96539) (not b!97066) (not d!25487) (not b!96663) (not b!96548) (not b!96336) (not b!96975) (not b!96425) (not b!96331) (not bm!9794) (not b!97049) (not b!96458) (not d!25709) (not b_lambda!4299) (not bm!9791) (not b!96340) (not b!96671) (not bm!9817) (not b!96715) (not b!96260) (not b!96656) (not d!25811) (not d!25599) (not d!25893) (not d!25671) (not d!25865) (not d!25461) (not d!25777) (not b!96385) (not b!96518) (not b!96509) (not d!25521) (not d!25705) (not b!96842) (not b!96857) (not b!96384) (not d!25441) (not b!96748) (not b!96760) (not d!25757) (not b!97071) (not d!25423) (not b!96310) (not b_lambda!4315) (not b!96318) (not b_lambda!4255) (not d!25493) (not b!96263) (not b!97085) (not d!25839) (not b!96462) (not b!96805) (not b!96786) (not b!96942) (not d!25773) (not b!96604) (not bm!9770) (not b!96961) (not d!25621) (not d!25673) (not d!25725) (not d!25607) (not d!25691) (not b!96985) (not b!96720) (not d!25429) (not b!97087) (not b!96490) (not bm!9769) (not d!25603) (not bm!9810) (not b!96553) (not b!96351) (not b!97080) (not b_lambda!4311) (not bm!9818) (not bm!9835) (not d!25781) (not b!96603) (not b!96657) (not bm!9812) (not d!25567) (not b!96496) (not bm!9771) (not d!25859) (not d!25517) (not b!96466) (not d!25921) (not d!25887) (not b!96477) (not b_lambda!4317) (not b!97051) (not d!25815) (not b!96669) (not d!25579) (not bm!9744) (not b!96295) (not d!25503) (not d!25529) (not b!96374) (not d!25449) (not d!25885) (not b!96717) (not b!97006) (not b!97031) (not b!96551) (not b!96626) (not b!96743) (not d!25783) (not d!25485) (not b!97057) (not b!96741) (not b!96854) (not bm!9752) (not b!96730) (not b!96876) (not b!96870) (not b!96335) (not b!97045) (not b!96951) (not b!96666) (not b!96647) (not b!96999) (not b!96452) (not b!96337) (not d!25761) (not b_lambda!4307) (not d!25637) (not b!96411) (not d!25491) (not b!96890) (not b!96610) (not bm!9747) (not d!25501) (not d!25891) (not b!96405) (not d!25589) (not b!96461) (not b!96918) (not b!96628) (not b!97037) (not d!25469) (not bm!9740) (not b!96896) (not b!96417) (not b!97076) (not b!96416) (not b!96549) (not b!96948) (not b!96949) (not d!25619) (not b!97058) (not b!96352) (not bm!9798) (not b!96636) (not bm!9807) (not b!96688) (not b!96843) (not d!25675) (not bm!9792) (not b!96946) (not b!96554) (not b!96970) (not d!25657) (not b!96979) (not d!25895) (not b!96707) (not b!97086) (not d!25723) (not d!25641) (not bm!9799) (not d!25623) (not b!97079) (not d!25833) (not d!25669) (not b!96607) (not b!96582) (not b!97090) (not d!25779) (not bm!9745) (not d!25643) (not d!25899) (not d!25855) (not b_lambda!4293) (not b!96408) (not bm!9801) (not b!96755) (not d!25909) (not b!97063) (not b!96614) (not b!96284) (not b!96578) (not b!96659) (not b!96919) (not d!25729) (not b!96886) (not b!96883) (not b!96314) (not b!96727) (not b!96622) (not d!25551) (not b!96963) (not b!96393) (not b!96572) (not b!96456) (not b!96259) (not b!96913) (not b!96702) (not b!97081) (not b!96846) (not d!25639) (not b!96562) (not d!25695) (not d!25739) (not d!25901) (not b!97008) (not d!25721) (not b!96485) (not b!96585) (not b!96631) (not d!25825) (not d!25915) (not d!25803) (not b!97034) (not d!25497) (not b!96609) (not bm!9778) (not b!96338) (not d!25495) (not bm!9822) (not b!96996) (not b_lambda!4253) (not b!96785) (not b!96615) (not d!25689) (not b!96745) (not b!97053) (not b!96782) (not bm!9760) (not b!96869) (not b!96747) (not b!96964) (not d!25465) (not b!97096) (not b!96878) (not b!97001) (not b!96612) (not d!25527) (not d!25693) (not d!25651) (not b!96507) (not b!96685) (not bm!9777) (not b!96515) (not b!96634) (not b!97068) (not b!96706) (not d!25453) (not b!96474) (not b!96799) (not d!25419) (not b!97070) (not b!96679) (not d!25555) (not b!96813) (not b!96729) (not d!25467) (not d!25913) (not b!96281) (not d!25737) (not b!96766) (not bm!9789) (not b!96459) (not b!96590) (not b!96487) (not b_lambda!4297) (not b!96645) (not b!96400) (not d!25905) (not b!96880) (not bm!9793) (not d!25605) (not b!96834) (not d!25609) (not d!25903) (not b!96916) (not b!96345) (not b!96597) (not b!96763) (not d!25807) (not b_lambda!4257) (not b!96389) (not d!25591) (not b!96724) (not d!25819) (not b!96591) (not d!25647) (not d!25907) (not b!96642) (not d!25573) (not d!25535) (not b!96332) (not d!25547) (not b!96879) (not bm!9804) (not b!96712) (not d!25823) (not b!96830) (not d!25645) (not b_lambda!4239) (not b!97077) (not b!96665) (not b!96649) (not b!96406) (not b!96305) (not d!25867) (not b!96678) (not bm!9833) (not b!96873) (not b!96467) (not b!96282) (not b!97054) (not b!96588) (not bm!9779) (not d!25417) (not b!96931) (not b!96863) (not b!96888) (not d!25713) (not b!96613) (not b!96495) (not d!25829) (not d!25479) (not d!25827) (not bm!9785) (not b_lambda!4235) (not b!96427) (not d!25741) (not bm!9828) (not b!96840) (not b!96973) (not b_lambda!4303) (not b!96976) (not b!96851) (not b!96814) (not b!96978) (not d!25649) (not b!96623) (not d!25869) (not b!96812) (not b!96998) (not bm!9823) (not d!25681) (not b!96563) (not b!97072) (not b!96765) (not d!25455) (not d!25445) (not b!96483) (not b!96560) (not d!25633) (not b!96790) (not b_lambda!4251) (not b!96817) (not b!96570) (not b!96493) (not b!96677) (not b!96414) (not b!96672) (not b!97093) (not b_lambda!4295) (not b!96283) (not b!96618) (not b!96697) (not b!96965) (not b!97083) (not b!96625) (not d!25483) (not b!96995) (not b!96565) (not d!25883) (not b!96660) (not b!96703) (not b!97078) (not d!25719) (not d!25533) (not d!25765) (not b!96380) (not bm!9775) (not b!96927) (not d!25873) (not b!96802) (not d!25543) (not bm!9763) (not b!96972) (not b!96722) (not b!96261) (not b!97064) (not b!96307) (not bm!9825) (not bm!9780) (not b!96294) (not d!25525) (not d!25821) (not b!97028) (not b!96753) (not bm!9782) (not b!96514) (not b_lambda!4291) (not d!25701) (not b!96403) (not b!96740) (not d!25415) (not d!25627) (not mapNonEmpty!3716) (not d!25587) (not b!96566) (not b!97010) (not b_lambda!4305) (not b!96962) (not b!96512) (not b!96280) (not d!25629) (not b!96655) (not b!96732) (not b!96559) (not bm!9805) (not d!25457) (not bm!9803) (not b!96492) (not b!96845) (not d!25809) (not b!96608) (not b!96583) (not b!96938) (not b!96899) (not b!96700) (not b_lambda!4301) tp_is_empty!2617 (not b!97036) (not d!25569) (not b!96662) (not b!96816) (not d!25571) (not b_next!2401) (not b!96692) (not b!96957) (not b!96520) (not b!96511) (not d!25635) (not d!25801) (not b!96738) (not bm!9830) (not b!96953) (not d!25789) b_and!5939 (not d!25583) (not b!96775) (not b!96620) (not d!25861) (not b!96955) (not b!96616) (not b!96276) (not b!96921) (not b!96676) (not d!25727) (not b!96571) (not b!96561) (not d!25545) (not b!96956) (not b!96501) (not b!96342) (not b!96682) (not b!96402) (not bm!9750) (not b!96339) (not b!96264) (not b!96302) (not b!97029) (not bm!9832) (not b!96709) (not b!96587) (not b!96954) (not d!25875) (not d!25747) (not bm!9739) (not b!96992) (not d!25749) (not bm!9772) (not b!96922) (not b!96693) (not b!96637) (not b!96550) (not d!25753) (not b!96633) (not b!96479) (not b!96422) (not b!96661) (not b_next!2403) (not b!96833) (not b!96664) (not d!25817) (not b!96881) (not bm!9814) (not d!25879) (not d!25575) (not d!25443) (not b!96911) (not b!96800) (not b!96270) (not d!25539) (not d!25831) (not d!25813) (not b!96959) (not b!96835) (not b!96991) (not d!25511) (not bm!9795) (not b!97069) (not d!25625) (not d!25595) (not d!25877) (not bm!9787) (not b!96904) (not b!96934) b_and!5937 (not b!96375) (not b!96277) (not d!25507) (not d!25871) (not d!25911) (not d!25523) (not b!96504) (not b!96611) (not mapNonEmpty!3715) (not b!96668) (not b!96829) (not bm!9796) (not b!96319) (not d!25617) (not b!96997) (not b_lambda!4259) (not b!96769) (not d!25897) (not b!97062) (not b!96480) (not b!96325) (not b!96789) (not b!96298) (not d!25857) (not d!25851) (not b!96558) (not d!25755) (not b!97039) (not b!96764) (not d!25745) (not b!96293) (not d!25597) (not b!97055) (not b!96457) (not b!96898) (not b!96699) (not d!25835) (not b!96413) (not b!96837) (not b!96856) (not b!96781) (not d!25841) (not d!25889) (not d!25863) (not b!97067) (not b!96651) (not b!96909) (not b!96667) (not d!25631) (not b_lambda!4313) (not b!96316) (not b!96470) (not d!25537) (not b!96806) (not d!25667) (not b!96725) (not d!25427) (not bm!9773) (not d!25805) (not bm!9820) (not bm!9748) (not b!96718) (not bm!9783) (not b!97040) (not bm!9742) (not b!96694) (not b!96893))
(check-sat b_and!5937 b_and!5939 (not b_next!2401) (not b_next!2403))
